
STM32CubeIDE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .intvec       000000c0  10040000  10040000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002d2c8  100400c0  100400c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .init         00000004  1006d388  1006d388  0002e388  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .fini         00000004  1006d38c  1006d38c  0002e38c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00001884  1006d390  1006d390  0002e390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM          00000008  1006ec14  1006ec14  0002fc14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         00000214  20000a38  1006ec1c  00030a38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .ram_preamble 0000002c  20000004  20000004  00031004  2**2
                  ALLOC
  8 .ram_preamble_2 00000028  20000034  20000034  00031004  2**2
                  ALLOC
  9 .bss.blueRAM  0000018c  200000c0  200000c0  00031004  2**2
                  ALLOC
 10 .bss          000007ec  2000024c  2000024c  00031004  2**2
                  ALLOC
 11 .noinit       00003270  20000c4c  1006ee30  00030c4c  2**2
                  ALLOC
 12 .ota_region_end 00000000  1006ee30  1006ee30  00030c4c  2**0
                  CONTENTS
 13 .heap         00000200  20003ebc  20003ebc  00030ebc  2**0
                  ALLOC
 14 .stack        00000c00  2000f400  2000f400  00031400  2**0
                  ALLOC
 15 .rom_info     00000000  10000000  10000000  00030c4c  2**0
                  CONTENTS
 16 .ARM.attributes 0000002c  00000000  00000000  00030c4c  2**0
                  CONTENTS, READONLY
 17 .debug_info   0002923b  00000000  00000000  00030c78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00006418  00000000  00000000  00059eb3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002f60  00000000  00000000  000602d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00002382  00000000  00000000  00063230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00024d43  00000000  00000000  000655b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   0002b859  00000000  00000000  0008a2f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    000cfbab  00000000  00000000  000b5b4e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      0000023b  00000000  00000000  001856f9  2**0
                  CONTENTS, READONLY
 25 .arm_vfe_header 00000004  00000000  00000000  00185934  2**2
                  CONTENTS, READONLY
 26 .debug_frame  0000c25c  00000000  00000000  00185938  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 000001b3  00000000  00000000  00191b94  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

100400c0 <blue_unit_conversion>:
                __CODE__
                __THUMB__
                __EXPORT__ blue_unit_conversion

EXPORT_FUNC(blue_unit_conversion)
                  PUSH    {r4, lr}
100400c0:	b510      	push	{r4, lr}
                  CMP     r0, r2
100400c2:	4290      	cmp	r0, r2
                  BLS     mul32
100400c4:	d916      	bls.n	100400f4 <mul32>
                  UXTH    r2, r1
100400c6:	b28a      	uxth	r2, r1
                  LSRS    r3, r0, #16
100400c8:	0c03      	lsrs	r3, r0, #16
                  LSRS    r1, r1, #16
100400ca:	0c09      	lsrs	r1, r1, #16
                  MOV     r4, r1
100400cc:	460c      	mov	r4, r1
                  MULS    r1, r3, r1
100400ce:	4359      	muls	r1, r3
                  UXTH    r0, r0
100400d0:	b280      	uxth	r0, r0
                  MULS    r3, r2, r3
100400d2:	4353      	muls	r3, r2
                  MULS    r4, r0, r4
100400d4:	4344      	muls	r4, r0
                  MULS    r0, r2, r0
100400d6:	4350      	muls	r0, r2
                  ADDS    r3, r3, r4
100400d8:	191b      	adds	r3, r3, r4
                  LSLS    r2, r3, #16
100400da:	041a      	lsls	r2, r3, #16
                  LSRS    r3, r3, #16
100400dc:	0c1b      	lsrs	r3, r3, #16
                  ADDS    r0, r2, r0
100400de:	1810      	adds	r0, r2, r0
                  ADCS    r1, r3
100400e0:	4159      	adcs	r1, r3

                  MOVS    r2, #128
100400e2:	2280      	movs	r2, #128	@ 0x80
                  LSLS    r2, r2, #13
100400e4:	0352      	lsls	r2, r2, #13
                  MOVS    r3, #0
100400e6:	2300      	movs	r3, #0
                  ADDS    r2, r2, r0
100400e8:	1812      	adds	r2, r2, r0
                  ADCS    r3, r1
100400ea:	414b      	adcs	r3, r1
                  LSRS    r2, r2, #21
100400ec:	0d52      	lsrs	r2, r2, #21
                  LSLS    r0, r3, #11
100400ee:	02d8      	lsls	r0, r3, #11
                  ORRS    r0, r2
100400f0:	4310      	orrs	r0, r2

                  POP {r4, pc}
100400f2:	bd10      	pop	{r4, pc}

100400f4 <mul32>:

                  ENDFUNC

EXPORT_FUNC(mul32)
                  MULS    r0, r1, r0
100400f4:	4348      	muls	r0, r1
                  MOVS    r2, #128
100400f6:	2280      	movs	r2, #128	@ 0x80
                  LSLS    r2, r2, #13
100400f8:	0352      	lsls	r2, r2, #13
                  ADDS    r2, r2, r0
100400fa:	1812      	adds	r2, r2, r0
                  LSRS    r2, r2, #21
100400fc:	0d52      	lsrs	r2, r2, #21
                  MOV     r0, r2
100400fe:	4610      	mov	r0, r2

                  POP {r4, pc}
10040100:	bd10      	pop	{r4, pc}
10040102:	46c0      	nop			@ (mov r8, r8)

10040104 <Osal_MemCpy>:
                __CODE__
                __THUMB__
                __EXPORT__ Osal_MemCpy

EXPORT_FUNC(Osal_MemCpy)
                LSLS	R3, R1, #30
10040104:	078b      	lsls	r3, r1, #30
                BEQ	    memcpy_1
10040106:	d007      	beq.n	10040118 <memcpy_1>

10040108 <memcpy_byte>:
LABEL(memcpy_byte) /* Copy bytes until src is aligned */
                SUBS	R2, R2, #1
10040108:	3a01      	subs	r2, #1
                BCC	    memcpy_exit
1004010a:	d322      	bcc.n	10040152 <memcpy_exit>
                LDRB	R3, [R1]
1004010c:	780b      	ldrb	r3, [r1, #0]
      	        ADDS	R1, R1, #1
1004010e:	3101      	adds	r1, #1
      	        STRB	R3, [R0]
10040110:	7003      	strb	r3, [r0, #0]
                ADDS	R0, R0, #1
10040112:	3001      	adds	r0, #1
                LSLS	R3, R1, #30
10040114:	078b      	lsls	r3, r1, #30
                BNE	    memcpy_byte
10040116:	d1f7      	bne.n	10040108 <memcpy_byte>

10040118 <memcpy_1>:
LABEL(memcpy_1)
                LSLS	R3, R0, #30
10040118:	0783      	lsls	r3, r0, #30
                BEQ	    memcpy4
1004011a:	d030      	beq.n	1004017e <memcpy4>
                CMN	    R3, R3
1004011c:	42db      	cmn	r3, r3
                BEQ	    memcpy_7
1004011e:	d019      	beq.n	10040154 <memcpy_7>
                SUBS	R0, R0, #1
10040120:	3801      	subs	r0, #1
                SUBS	R2, R2, #4
10040122:	3a04      	subs	r2, #4
                BCC	    memcpy_3
10040124:	d308      	bcc.n	10040138 <memcpy_3>

10040126 <memcpy_2>:
LABEL(memcpy_2)  /* Load one word from src and write one byte, one half-word and another byte to dst */
                LDM	    R1!, {R3}
10040126:	c908      	ldmia	r1!, {r3}
                STRB	R3, [R0, #1]
10040128:	7043      	strb	r3, [r0, #1]
                LSRS	R3, R3, #8
1004012a:	0a1b      	lsrs	r3, r3, #8
                STRH	R3, [R0, #2]
1004012c:	8043      	strh	r3, [r0, #2]
                LSRS	R3, R3, #16
1004012e:	0c1b      	lsrs	r3, r3, #16
                STRB	R3, [R0, #4]
10040130:	7103      	strb	r3, [r0, #4]
                ADDS	R0, R0, #4
10040132:	3004      	adds	r0, #4
                SUBS	R2, R2, #4
10040134:	3a04      	subs	r2, #4
                BCS	    memcpy_2
10040136:	d2f6      	bcs.n	10040126 <memcpy_2>

10040138 <memcpy_3>:
LABEL(memcpy_3)
                LSLS	R2, R2, #31
10040138:	07d2      	lsls	r2, r2, #31
                BCC	    memcpy_5
1004013a:	d307      	bcc.n	1004014c <memcpy_5>
                LDRH	R3, [R1]
1004013c:	880b      	ldrh	r3, [r1, #0]
                STRB	R3, [R0, #1]
1004013e:	7043      	strb	r3, [r0, #1]
                BEQ	    memcpy_4
10040140:	d001      	beq.n	10040146 <memcpy_4>
                LDRB	R2, [R1, #2]
10040142:	788a      	ldrb	r2, [r1, #2]
                STRB	R2, [R0, #3]
10040144:	70c2      	strb	r2, [r0, #3]

10040146 <memcpy_4>:
LABEL(memcpy_4)
                LSRS	R3, R3, #8
10040146:	0a1b      	lsrs	r3, r3, #8
                STRB	R3, [R0, #2]
10040148:	7083      	strb	r3, [r0, #2]
                BX	    LR
1004014a:	4770      	bx	lr

1004014c <memcpy_5>:
LABEL(memcpy_5)
                BEQ	    memcpy_exit
1004014c:	d001      	beq.n	10040152 <memcpy_exit>
                LDRB	R3, [R1]
1004014e:	780b      	ldrb	r3, [r1, #0]
                STRB	R3, [R0, #1]
10040150:	7043      	strb	r3, [r0, #1]

10040152 <memcpy_exit>:
LABEL(memcpy_exit)
                BX	    LR
10040152:	4770      	bx	lr

10040154 <memcpy_7>:
LABEL(memcpy_7)
                SUBS	R2, R2, #4
10040154:	3a04      	subs	r2, #4
                BCC	    memcpy_9
10040156:	d306      	bcc.n	10040166 <memcpy_9>

10040158 <memcpy_8>:
LABEL(memcpy_8)  /* Load one word from src and write half-words to dst */
                LDM	    R1!, {R3}
10040158:	c908      	ldmia	r1!, {r3}
                STRH	R3, [R0]
1004015a:	8003      	strh	r3, [r0, #0]
                LSRS	R3, R3, #16
1004015c:	0c1b      	lsrs	r3, r3, #16
                STRH	R3, [R0, #2]
1004015e:	8043      	strh	r3, [r0, #2]
                ADDS	R0, R0, #4
10040160:	3004      	adds	r0, #4
                SUBS	R2, R2, #4
10040162:	3a04      	subs	r2, #4
                BCS	    memcpy_8
10040164:	d2f8      	bcs.n	10040158 <memcpy_8>

10040166 <memcpy_9>:
LABEL(memcpy_9)
                LSLS	R2, R2, #31
10040166:	07d2      	lsls	r2, r2, #31
                BCC	    memcpy_10
10040168:	d305      	bcc.n	10040176 <memcpy_10>
                LDRH	R3, [R1]
1004016a:	880b      	ldrh	r3, [r1, #0]
                STRH	R3, [R0]
1004016c:	8003      	strh	r3, [r0, #0]
                BEQ	    memcpy_11
1004016e:	d005      	beq.n	1004017c <memcpy_11>
                LDRB	R3, [R1, #2]
10040170:	788b      	ldrb	r3, [r1, #2]
                STRB	R3, [R0, #2]
10040172:	7083      	strb	r3, [r0, #2]
                BX	    LR
10040174:	4770      	bx	lr

10040176 <memcpy_10>:
LABEL(memcpy_10)
                BEQ	    memcpy_11
10040176:	d001      	beq.n	1004017c <memcpy_11>
                LDRB	R3, [R1]
10040178:	780b      	ldrb	r3, [r1, #0]
                STRB	R3, [R0]
1004017a:	7003      	strb	r3, [r0, #0]

1004017c <memcpy_11>:
LABEL(memcpy_11)
                BX	    LR
1004017c:	4770      	bx	lr

1004017e <memcpy4>:

LABEL(memcpy4)
                PUSH	{R4-R6}
1004017e:	b470      	push	{r4, r5, r6}
                SUBS	R2, #16
10040180:	3a10      	subs	r2, #16
                BCC	    memcpy4_2words
10040182:	d303      	bcc.n	1004018c <memcpy4_2words>

10040184 <memcpy4_4words>:
LABEL(memcpy4_4words)
                LDM 	R1!, {R3-R6}
10040184:	c978      	ldmia	r1!, {r3, r4, r5, r6}
                STM	    R0!, {R3-R6}
10040186:	c078      	stmia	r0!, {r3, r4, r5, r6}
                SUBS	R2, #16
10040188:	3a10      	subs	r2, #16
                BCS	    memcpy4_4words
1004018a:	d2fb      	bcs.n	10040184 <memcpy4_4words>

1004018c <memcpy4_2words>:
LABEL(memcpy4_2words)
                LSLS	R3, R2, #29
1004018c:	0753      	lsls	r3, r2, #29
                BCC	    memcpy4_word
1004018e:	d301      	bcc.n	10040194 <memcpy4_word>
                LDM	    R1!, {R3, R4}
10040190:	c918      	ldmia	r1!, {r3, r4}
                STM	    R0!, {R3, R4}
10040192:	c018      	stmia	r0!, {r3, r4}

10040194 <memcpy4_word>:
LABEL(memcpy4_word)
                BPL 	memcpy4_halfword
10040194:	d501      	bpl.n	1004019a <memcpy4_halfword>
                LDM	    R1!, {R3}
10040196:	c908      	ldmia	r1!, {r3}
                STM	    R0!, {R3}
10040198:	c008      	stmia	r0!, {r3}

1004019a <memcpy4_halfword>:
LABEL(memcpy4_halfword)
                LSLS	R2, R2, #31
1004019a:	07d2      	lsls	r2, r2, #31
                BCC	    memcpy4_byte
1004019c:	d304      	bcc.n	100401a8 <memcpy4_byte>
                LDRH	R3, [R1]
1004019e:	880b      	ldrh	r3, [r1, #0]
                STRH	R3, [R0]
100401a0:	8003      	strh	r3, [r0, #0]
                ADDS	R0, R0, #2
100401a2:	3002      	adds	r0, #2
                ADDS	R1, R1, #2
100401a4:	3102      	adds	r1, #2
                CMP	    R2, #0
100401a6:	2a00      	cmp	r2, #0

100401a8 <memcpy4_byte>:
LABEL(memcpy4_byte)
                BPL	    memcpy4_exit
100401a8:	d501      	bpl.n	100401ae <memcpy4_exit>
                LDRB	R3, [R1]
100401aa:	780b      	ldrb	r3, [r1, #0]
                STRB	R3, [R0]
100401ac:	7003      	strb	r3, [r0, #0]

100401ae <memcpy4_exit>:
LABEL(memcpy4_exit)
                POP	    {R4-R6}
100401ae:	bc70      	pop	{r4, r5, r6}
                BX	    LR
100401b0:	4770      	bx	lr
100401b2:	46c0      	nop			@ (mov r8, r8)

100401b4 <CPUcontextSave>:
                __THUMB__
                __EXPORT__ CPUcontextSave
                __EXPORT__ CPUcontextRestore
                __IMPORT__ RAM_VR
EXPORT_FUNC(CPUcontextSave)
                MRS    R2, CONTROL             /* load the CONTROL register into R2 */
100401b4:	f3ef 8214 	mrs	r2, CONTROL
                MRS    R1, PSP                 /* load the process stack pointer into R1 */
100401b8:	f3ef 8109 	mrs	r1, PSP
                LDR    R0, =0
100401bc:	4815      	ldr	r0, [pc, #84]	@ (10040214 <CPUcontextRestore+0x2c>)
                MSR    CONTROL, R0             /* Switch to Main Stack Pointer */
100401be:	f380 8814 	msr	CONTROL, r0
                ISB
100401c2:	f3bf 8f6f 	isb	sy

                PUSH   { r4 - r7, lr }         /* store R4-R7 and LR (5 words) onto the stack */
100401c6:	b5f0      	push	{r4, r5, r6, r7, lr}
                MOV    R3, R8                  /* mov thread {r8 - r12} to {r3 - r7} */
100401c8:	4643      	mov	r3, r8
                MOV    R4, R9
100401ca:	464c      	mov	r4, r9
                MOV    R5, R10
100401cc:	4655      	mov	r5, sl
                MOV    R6, R11
100401ce:	465e      	mov	r6, fp
                MOV    R7, R12
100401d0:	4667      	mov	r7, ip
                PUSH   {R3-R7}                 /* store R8-R12 (5 words) onto the stack */
100401d2:	b4f8      	push	{r3, r4, r5, r6, r7}

                LDR    R4, =RAM_VR             /* load address of struct RAM_VR into R4 */
100401d4:	4c10      	ldr	r4, [pc, #64]	@ (10040218 <CPUcontextRestore+0x30>)
                MRS    R3, MSP                 /* load the stack pointer into R3 */
100401d6:	f3ef 8308 	mrs	r3, MSP
                STR    R3, [R4,#4]             /* store the MSP into RAM_VR.SavedMSP (second word of the structure) */
100401da:	6063      	str	r3, [r4, #4]

                PUSH  { r1, r2 }               /*  store PSP, CONTROL */
100401dc:	b406      	push	{r1, r2}

                DSB
100401de:	f3bf 8f4f 	dsb	sy
                WFI                            /* all saved, trigger deep sleep */
100401e2:	bf30      	wfi

                NOP                            /* NOP instructions added if an interrupt (NOT WAKEUP SOURCE) is raised */
100401e4:	46c0      	nop			@ (mov r8, r8)
                NOP                            /* the device gates/stop the CPU clock 2 system clock cycles after this WFI */
100401e6:	46c0      	nop			@ (mov r8, r8)

100401e8 <CPUcontextRestore>:
EXPORT_FUNC(CPUcontextRestore)
                /* Even if we fall through the WFI instruction, we will immediately
                 * execute a context restore and end up where we left off with no
                 * ill effects.  Normally at this point the core will either be
                 * powered off or reset (depending on the deep sleep level). */
                LDR    R4, =RAM_VR              /* load address of RAM_VR into R4 */
100401e8:	4c0b      	ldr	r4, [pc, #44]	@ (10040218 <CPUcontextRestore+0x30>)
                LDR    R4, [R4,#4]              /* load the MSP from RAM_VR.SavedMSP (second word of the structure) */
100401ea:	6864      	ldr	r4, [r4, #4]
                MSR    MSP, R4                  /* restore the MSP from R4 */
100401ec:	f384 8808 	msr	MSP, r4

                SUB    SP, #0x8
100401f0:	b082      	sub	sp, #8
                POP    { R0, R1 }               /* load PSP from the stack in R0, and  load CONTROL register from the stack in R1 */
100401f2:	bc03      	pop	{r0, r1}

                POP    { R3-R7 }                /* load R8-R12 (5 words) from the stack */
100401f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
                MOV    R8, R3                   /* mov {r3 - r7} to {r8 - r12} */
100401f6:	4698      	mov	r8, r3
                MOV    R9, R4
100401f8:	46a1      	mov	r9, r4
                MOV    R10, R5
100401fa:	46aa      	mov	sl, r5
                MOV    R11, R6
100401fc:	46b3      	mov	fp, r6
                MOV    R12, R7
100401fe:	46bc      	mov	ip, r7
                POP    { R4 - R7 }              /* load R4-R7 (4 words) from the stack */
10040200:	bcf0      	pop	{r4, r5, r6, r7}
                POP    { R2 }                   /* load LR from the stack */
10040202:	bc04      	pop	{r2}

                MSR   PSP, R0                   /* restore PSP from R0 */
10040204:	f380 8809 	msr	PSP, r0
                MSR   CONTROL , R1              /* restore CONTROL register from R1 */
10040208:	f381 8814 	msr	CONTROL, r1
                ISB
1004020c:	f3bf 8f6f 	isb	sy

                BX  R2                          /*load PC (1 words) from the stack */
10040210:	4710      	bx	r2
10040212:	46c0      	nop			@ (mov r8, r8)
                LDR    R0, =0
10040214:	00000000 	.word	0x00000000
                LDR    R4, =RAM_VR             /* load address of struct RAM_VR into R4 */
10040218:	20000004 	.word	0x20000004

1004021c <strlen>:
1004021c:	2300      	movs	r3, #0
1004021e:	5cc2      	ldrb	r2, [r0, r3]
10040220:	3301      	adds	r3, #1
10040222:	2a00      	cmp	r2, #0
10040224:	d1fb      	bne.n	1004021e <strlen+0x2>
10040226:	1e58      	subs	r0, r3, #1
10040228:	4770      	bx	lr
	...

1004022c <__gnu_thumb1_case_shi>:
1004022c:	b403      	push	{r0, r1}
1004022e:	4671      	mov	r1, lr
10040230:	0849      	lsrs	r1, r1, #1
10040232:	0040      	lsls	r0, r0, #1
10040234:	0049      	lsls	r1, r1, #1
10040236:	5e09      	ldrsh	r1, [r1, r0]
10040238:	0049      	lsls	r1, r1, #1
1004023a:	448e      	add	lr, r1
1004023c:	bc03      	pop	{r0, r1}
1004023e:	4770      	bx	lr

10040240 <__udivsi3>:
10040240:	2200      	movs	r2, #0
10040242:	0843      	lsrs	r3, r0, #1
10040244:	428b      	cmp	r3, r1
10040246:	d374      	bcc.n	10040332 <__udivsi3+0xf2>
10040248:	0903      	lsrs	r3, r0, #4
1004024a:	428b      	cmp	r3, r1
1004024c:	d35f      	bcc.n	1004030e <__udivsi3+0xce>
1004024e:	0a03      	lsrs	r3, r0, #8
10040250:	428b      	cmp	r3, r1
10040252:	d344      	bcc.n	100402de <__udivsi3+0x9e>
10040254:	0b03      	lsrs	r3, r0, #12
10040256:	428b      	cmp	r3, r1
10040258:	d328      	bcc.n	100402ac <__udivsi3+0x6c>
1004025a:	0c03      	lsrs	r3, r0, #16
1004025c:	428b      	cmp	r3, r1
1004025e:	d30d      	bcc.n	1004027c <__udivsi3+0x3c>
10040260:	22ff      	movs	r2, #255	@ 0xff
10040262:	0209      	lsls	r1, r1, #8
10040264:	ba12      	rev	r2, r2
10040266:	0c03      	lsrs	r3, r0, #16
10040268:	428b      	cmp	r3, r1
1004026a:	d302      	bcc.n	10040272 <__udivsi3+0x32>
1004026c:	1212      	asrs	r2, r2, #8
1004026e:	0209      	lsls	r1, r1, #8
10040270:	d065      	beq.n	1004033e <__udivsi3+0xfe>
10040272:	0b03      	lsrs	r3, r0, #12
10040274:	428b      	cmp	r3, r1
10040276:	d319      	bcc.n	100402ac <__udivsi3+0x6c>
10040278:	e000      	b.n	1004027c <__udivsi3+0x3c>
1004027a:	0a09      	lsrs	r1, r1, #8
1004027c:	0bc3      	lsrs	r3, r0, #15
1004027e:	428b      	cmp	r3, r1
10040280:	d301      	bcc.n	10040286 <__udivsi3+0x46>
10040282:	03cb      	lsls	r3, r1, #15
10040284:	1ac0      	subs	r0, r0, r3
10040286:	4152      	adcs	r2, r2
10040288:	0b83      	lsrs	r3, r0, #14
1004028a:	428b      	cmp	r3, r1
1004028c:	d301      	bcc.n	10040292 <__udivsi3+0x52>
1004028e:	038b      	lsls	r3, r1, #14
10040290:	1ac0      	subs	r0, r0, r3
10040292:	4152      	adcs	r2, r2
10040294:	0b43      	lsrs	r3, r0, #13
10040296:	428b      	cmp	r3, r1
10040298:	d301      	bcc.n	1004029e <__udivsi3+0x5e>
1004029a:	034b      	lsls	r3, r1, #13
1004029c:	1ac0      	subs	r0, r0, r3
1004029e:	4152      	adcs	r2, r2
100402a0:	0b03      	lsrs	r3, r0, #12
100402a2:	428b      	cmp	r3, r1
100402a4:	d301      	bcc.n	100402aa <__udivsi3+0x6a>
100402a6:	030b      	lsls	r3, r1, #12
100402a8:	1ac0      	subs	r0, r0, r3
100402aa:	4152      	adcs	r2, r2
100402ac:	0ac3      	lsrs	r3, r0, #11
100402ae:	428b      	cmp	r3, r1
100402b0:	d301      	bcc.n	100402b6 <__udivsi3+0x76>
100402b2:	02cb      	lsls	r3, r1, #11
100402b4:	1ac0      	subs	r0, r0, r3
100402b6:	4152      	adcs	r2, r2
100402b8:	0a83      	lsrs	r3, r0, #10
100402ba:	428b      	cmp	r3, r1
100402bc:	d301      	bcc.n	100402c2 <__udivsi3+0x82>
100402be:	028b      	lsls	r3, r1, #10
100402c0:	1ac0      	subs	r0, r0, r3
100402c2:	4152      	adcs	r2, r2
100402c4:	0a43      	lsrs	r3, r0, #9
100402c6:	428b      	cmp	r3, r1
100402c8:	d301      	bcc.n	100402ce <__udivsi3+0x8e>
100402ca:	024b      	lsls	r3, r1, #9
100402cc:	1ac0      	subs	r0, r0, r3
100402ce:	4152      	adcs	r2, r2
100402d0:	0a03      	lsrs	r3, r0, #8
100402d2:	428b      	cmp	r3, r1
100402d4:	d301      	bcc.n	100402da <__udivsi3+0x9a>
100402d6:	020b      	lsls	r3, r1, #8
100402d8:	1ac0      	subs	r0, r0, r3
100402da:	4152      	adcs	r2, r2
100402dc:	d2cd      	bcs.n	1004027a <__udivsi3+0x3a>
100402de:	09c3      	lsrs	r3, r0, #7
100402e0:	428b      	cmp	r3, r1
100402e2:	d301      	bcc.n	100402e8 <__udivsi3+0xa8>
100402e4:	01cb      	lsls	r3, r1, #7
100402e6:	1ac0      	subs	r0, r0, r3
100402e8:	4152      	adcs	r2, r2
100402ea:	0983      	lsrs	r3, r0, #6
100402ec:	428b      	cmp	r3, r1
100402ee:	d301      	bcc.n	100402f4 <__udivsi3+0xb4>
100402f0:	018b      	lsls	r3, r1, #6
100402f2:	1ac0      	subs	r0, r0, r3
100402f4:	4152      	adcs	r2, r2
100402f6:	0943      	lsrs	r3, r0, #5
100402f8:	428b      	cmp	r3, r1
100402fa:	d301      	bcc.n	10040300 <__udivsi3+0xc0>
100402fc:	014b      	lsls	r3, r1, #5
100402fe:	1ac0      	subs	r0, r0, r3
10040300:	4152      	adcs	r2, r2
10040302:	0903      	lsrs	r3, r0, #4
10040304:	428b      	cmp	r3, r1
10040306:	d301      	bcc.n	1004030c <__udivsi3+0xcc>
10040308:	010b      	lsls	r3, r1, #4
1004030a:	1ac0      	subs	r0, r0, r3
1004030c:	4152      	adcs	r2, r2
1004030e:	08c3      	lsrs	r3, r0, #3
10040310:	428b      	cmp	r3, r1
10040312:	d301      	bcc.n	10040318 <__udivsi3+0xd8>
10040314:	00cb      	lsls	r3, r1, #3
10040316:	1ac0      	subs	r0, r0, r3
10040318:	4152      	adcs	r2, r2
1004031a:	0883      	lsrs	r3, r0, #2
1004031c:	428b      	cmp	r3, r1
1004031e:	d301      	bcc.n	10040324 <__udivsi3+0xe4>
10040320:	008b      	lsls	r3, r1, #2
10040322:	1ac0      	subs	r0, r0, r3
10040324:	4152      	adcs	r2, r2
10040326:	0843      	lsrs	r3, r0, #1
10040328:	428b      	cmp	r3, r1
1004032a:	d301      	bcc.n	10040330 <__udivsi3+0xf0>
1004032c:	004b      	lsls	r3, r1, #1
1004032e:	1ac0      	subs	r0, r0, r3
10040330:	4152      	adcs	r2, r2
10040332:	1a41      	subs	r1, r0, r1
10040334:	d200      	bcs.n	10040338 <__udivsi3+0xf8>
10040336:	4601      	mov	r1, r0
10040338:	4152      	adcs	r2, r2
1004033a:	4610      	mov	r0, r2
1004033c:	4770      	bx	lr
1004033e:	e7ff      	b.n	10040340 <__udivsi3+0x100>
10040340:	b501      	push	{r0, lr}
10040342:	2000      	movs	r0, #0
10040344:	f000 f8f0 	bl	10040528 <__aeabi_idiv0>
10040348:	bd02      	pop	{r1, pc}
1004034a:	46c0      	nop			@ (mov r8, r8)

1004034c <__aeabi_uidivmod>:
1004034c:	2900      	cmp	r1, #0
1004034e:	d0f7      	beq.n	10040340 <__udivsi3+0x100>
10040350:	e776      	b.n	10040240 <__udivsi3>
10040352:	4770      	bx	lr

10040354 <__divsi3>:
10040354:	4603      	mov	r3, r0
10040356:	430b      	orrs	r3, r1
10040358:	d47f      	bmi.n	1004045a <__divsi3+0x106>
1004035a:	2200      	movs	r2, #0
1004035c:	0843      	lsrs	r3, r0, #1
1004035e:	428b      	cmp	r3, r1
10040360:	d374      	bcc.n	1004044c <__divsi3+0xf8>
10040362:	0903      	lsrs	r3, r0, #4
10040364:	428b      	cmp	r3, r1
10040366:	d35f      	bcc.n	10040428 <__divsi3+0xd4>
10040368:	0a03      	lsrs	r3, r0, #8
1004036a:	428b      	cmp	r3, r1
1004036c:	d344      	bcc.n	100403f8 <__divsi3+0xa4>
1004036e:	0b03      	lsrs	r3, r0, #12
10040370:	428b      	cmp	r3, r1
10040372:	d328      	bcc.n	100403c6 <__divsi3+0x72>
10040374:	0c03      	lsrs	r3, r0, #16
10040376:	428b      	cmp	r3, r1
10040378:	d30d      	bcc.n	10040396 <__divsi3+0x42>
1004037a:	22ff      	movs	r2, #255	@ 0xff
1004037c:	0209      	lsls	r1, r1, #8
1004037e:	ba12      	rev	r2, r2
10040380:	0c03      	lsrs	r3, r0, #16
10040382:	428b      	cmp	r3, r1
10040384:	d302      	bcc.n	1004038c <__divsi3+0x38>
10040386:	1212      	asrs	r2, r2, #8
10040388:	0209      	lsls	r1, r1, #8
1004038a:	d065      	beq.n	10040458 <__divsi3+0x104>
1004038c:	0b03      	lsrs	r3, r0, #12
1004038e:	428b      	cmp	r3, r1
10040390:	d319      	bcc.n	100403c6 <__divsi3+0x72>
10040392:	e000      	b.n	10040396 <__divsi3+0x42>
10040394:	0a09      	lsrs	r1, r1, #8
10040396:	0bc3      	lsrs	r3, r0, #15
10040398:	428b      	cmp	r3, r1
1004039a:	d301      	bcc.n	100403a0 <__divsi3+0x4c>
1004039c:	03cb      	lsls	r3, r1, #15
1004039e:	1ac0      	subs	r0, r0, r3
100403a0:	4152      	adcs	r2, r2
100403a2:	0b83      	lsrs	r3, r0, #14
100403a4:	428b      	cmp	r3, r1
100403a6:	d301      	bcc.n	100403ac <__divsi3+0x58>
100403a8:	038b      	lsls	r3, r1, #14
100403aa:	1ac0      	subs	r0, r0, r3
100403ac:	4152      	adcs	r2, r2
100403ae:	0b43      	lsrs	r3, r0, #13
100403b0:	428b      	cmp	r3, r1
100403b2:	d301      	bcc.n	100403b8 <__divsi3+0x64>
100403b4:	034b      	lsls	r3, r1, #13
100403b6:	1ac0      	subs	r0, r0, r3
100403b8:	4152      	adcs	r2, r2
100403ba:	0b03      	lsrs	r3, r0, #12
100403bc:	428b      	cmp	r3, r1
100403be:	d301      	bcc.n	100403c4 <__divsi3+0x70>
100403c0:	030b      	lsls	r3, r1, #12
100403c2:	1ac0      	subs	r0, r0, r3
100403c4:	4152      	adcs	r2, r2
100403c6:	0ac3      	lsrs	r3, r0, #11
100403c8:	428b      	cmp	r3, r1
100403ca:	d301      	bcc.n	100403d0 <__divsi3+0x7c>
100403cc:	02cb      	lsls	r3, r1, #11
100403ce:	1ac0      	subs	r0, r0, r3
100403d0:	4152      	adcs	r2, r2
100403d2:	0a83      	lsrs	r3, r0, #10
100403d4:	428b      	cmp	r3, r1
100403d6:	d301      	bcc.n	100403dc <__divsi3+0x88>
100403d8:	028b      	lsls	r3, r1, #10
100403da:	1ac0      	subs	r0, r0, r3
100403dc:	4152      	adcs	r2, r2
100403de:	0a43      	lsrs	r3, r0, #9
100403e0:	428b      	cmp	r3, r1
100403e2:	d301      	bcc.n	100403e8 <__divsi3+0x94>
100403e4:	024b      	lsls	r3, r1, #9
100403e6:	1ac0      	subs	r0, r0, r3
100403e8:	4152      	adcs	r2, r2
100403ea:	0a03      	lsrs	r3, r0, #8
100403ec:	428b      	cmp	r3, r1
100403ee:	d301      	bcc.n	100403f4 <__divsi3+0xa0>
100403f0:	020b      	lsls	r3, r1, #8
100403f2:	1ac0      	subs	r0, r0, r3
100403f4:	4152      	adcs	r2, r2
100403f6:	d2cd      	bcs.n	10040394 <__divsi3+0x40>
100403f8:	09c3      	lsrs	r3, r0, #7
100403fa:	428b      	cmp	r3, r1
100403fc:	d301      	bcc.n	10040402 <__divsi3+0xae>
100403fe:	01cb      	lsls	r3, r1, #7
10040400:	1ac0      	subs	r0, r0, r3
10040402:	4152      	adcs	r2, r2
10040404:	0983      	lsrs	r3, r0, #6
10040406:	428b      	cmp	r3, r1
10040408:	d301      	bcc.n	1004040e <__divsi3+0xba>
1004040a:	018b      	lsls	r3, r1, #6
1004040c:	1ac0      	subs	r0, r0, r3
1004040e:	4152      	adcs	r2, r2
10040410:	0943      	lsrs	r3, r0, #5
10040412:	428b      	cmp	r3, r1
10040414:	d301      	bcc.n	1004041a <__divsi3+0xc6>
10040416:	014b      	lsls	r3, r1, #5
10040418:	1ac0      	subs	r0, r0, r3
1004041a:	4152      	adcs	r2, r2
1004041c:	0903      	lsrs	r3, r0, #4
1004041e:	428b      	cmp	r3, r1
10040420:	d301      	bcc.n	10040426 <__divsi3+0xd2>
10040422:	010b      	lsls	r3, r1, #4
10040424:	1ac0      	subs	r0, r0, r3
10040426:	4152      	adcs	r2, r2
10040428:	08c3      	lsrs	r3, r0, #3
1004042a:	428b      	cmp	r3, r1
1004042c:	d301      	bcc.n	10040432 <__divsi3+0xde>
1004042e:	00cb      	lsls	r3, r1, #3
10040430:	1ac0      	subs	r0, r0, r3
10040432:	4152      	adcs	r2, r2
10040434:	0883      	lsrs	r3, r0, #2
10040436:	428b      	cmp	r3, r1
10040438:	d301      	bcc.n	1004043e <__divsi3+0xea>
1004043a:	008b      	lsls	r3, r1, #2
1004043c:	1ac0      	subs	r0, r0, r3
1004043e:	4152      	adcs	r2, r2
10040440:	0843      	lsrs	r3, r0, #1
10040442:	428b      	cmp	r3, r1
10040444:	d301      	bcc.n	1004044a <__divsi3+0xf6>
10040446:	004b      	lsls	r3, r1, #1
10040448:	1ac0      	subs	r0, r0, r3
1004044a:	4152      	adcs	r2, r2
1004044c:	1a41      	subs	r1, r0, r1
1004044e:	d200      	bcs.n	10040452 <__divsi3+0xfe>
10040450:	4601      	mov	r1, r0
10040452:	4152      	adcs	r2, r2
10040454:	4610      	mov	r0, r2
10040456:	4770      	bx	lr
10040458:	e05d      	b.n	10040516 <__divsi3+0x1c2>
1004045a:	0fca      	lsrs	r2, r1, #31
1004045c:	d000      	beq.n	10040460 <__divsi3+0x10c>
1004045e:	4249      	negs	r1, r1
10040460:	1003      	asrs	r3, r0, #32
10040462:	d300      	bcc.n	10040466 <__divsi3+0x112>
10040464:	4240      	negs	r0, r0
10040466:	4053      	eors	r3, r2
10040468:	2200      	movs	r2, #0
1004046a:	469c      	mov	ip, r3
1004046c:	0903      	lsrs	r3, r0, #4
1004046e:	428b      	cmp	r3, r1
10040470:	d32d      	bcc.n	100404ce <__divsi3+0x17a>
10040472:	0a03      	lsrs	r3, r0, #8
10040474:	428b      	cmp	r3, r1
10040476:	d312      	bcc.n	1004049e <__divsi3+0x14a>
10040478:	22fc      	movs	r2, #252	@ 0xfc
1004047a:	0189      	lsls	r1, r1, #6
1004047c:	ba12      	rev	r2, r2
1004047e:	0a03      	lsrs	r3, r0, #8
10040480:	428b      	cmp	r3, r1
10040482:	d30c      	bcc.n	1004049e <__divsi3+0x14a>
10040484:	0189      	lsls	r1, r1, #6
10040486:	1192      	asrs	r2, r2, #6
10040488:	428b      	cmp	r3, r1
1004048a:	d308      	bcc.n	1004049e <__divsi3+0x14a>
1004048c:	0189      	lsls	r1, r1, #6
1004048e:	1192      	asrs	r2, r2, #6
10040490:	428b      	cmp	r3, r1
10040492:	d304      	bcc.n	1004049e <__divsi3+0x14a>
10040494:	0189      	lsls	r1, r1, #6
10040496:	d03a      	beq.n	1004050e <__divsi3+0x1ba>
10040498:	1192      	asrs	r2, r2, #6
1004049a:	e000      	b.n	1004049e <__divsi3+0x14a>
1004049c:	0989      	lsrs	r1, r1, #6
1004049e:	09c3      	lsrs	r3, r0, #7
100404a0:	428b      	cmp	r3, r1
100404a2:	d301      	bcc.n	100404a8 <__divsi3+0x154>
100404a4:	01cb      	lsls	r3, r1, #7
100404a6:	1ac0      	subs	r0, r0, r3
100404a8:	4152      	adcs	r2, r2
100404aa:	0983      	lsrs	r3, r0, #6
100404ac:	428b      	cmp	r3, r1
100404ae:	d301      	bcc.n	100404b4 <__divsi3+0x160>
100404b0:	018b      	lsls	r3, r1, #6
100404b2:	1ac0      	subs	r0, r0, r3
100404b4:	4152      	adcs	r2, r2
100404b6:	0943      	lsrs	r3, r0, #5
100404b8:	428b      	cmp	r3, r1
100404ba:	d301      	bcc.n	100404c0 <__divsi3+0x16c>
100404bc:	014b      	lsls	r3, r1, #5
100404be:	1ac0      	subs	r0, r0, r3
100404c0:	4152      	adcs	r2, r2
100404c2:	0903      	lsrs	r3, r0, #4
100404c4:	428b      	cmp	r3, r1
100404c6:	d301      	bcc.n	100404cc <__divsi3+0x178>
100404c8:	010b      	lsls	r3, r1, #4
100404ca:	1ac0      	subs	r0, r0, r3
100404cc:	4152      	adcs	r2, r2
100404ce:	08c3      	lsrs	r3, r0, #3
100404d0:	428b      	cmp	r3, r1
100404d2:	d301      	bcc.n	100404d8 <__divsi3+0x184>
100404d4:	00cb      	lsls	r3, r1, #3
100404d6:	1ac0      	subs	r0, r0, r3
100404d8:	4152      	adcs	r2, r2
100404da:	0883      	lsrs	r3, r0, #2
100404dc:	428b      	cmp	r3, r1
100404de:	d301      	bcc.n	100404e4 <__divsi3+0x190>
100404e0:	008b      	lsls	r3, r1, #2
100404e2:	1ac0      	subs	r0, r0, r3
100404e4:	4152      	adcs	r2, r2
100404e6:	d2d9      	bcs.n	1004049c <__divsi3+0x148>
100404e8:	0843      	lsrs	r3, r0, #1
100404ea:	428b      	cmp	r3, r1
100404ec:	d301      	bcc.n	100404f2 <__divsi3+0x19e>
100404ee:	004b      	lsls	r3, r1, #1
100404f0:	1ac0      	subs	r0, r0, r3
100404f2:	4152      	adcs	r2, r2
100404f4:	1a41      	subs	r1, r0, r1
100404f6:	d200      	bcs.n	100404fa <__divsi3+0x1a6>
100404f8:	4601      	mov	r1, r0
100404fa:	4663      	mov	r3, ip
100404fc:	4152      	adcs	r2, r2
100404fe:	105b      	asrs	r3, r3, #1
10040500:	4610      	mov	r0, r2
10040502:	d301      	bcc.n	10040508 <__divsi3+0x1b4>
10040504:	4240      	negs	r0, r0
10040506:	2b00      	cmp	r3, #0
10040508:	d500      	bpl.n	1004050c <__divsi3+0x1b8>
1004050a:	4249      	negs	r1, r1
1004050c:	4770      	bx	lr
1004050e:	4663      	mov	r3, ip
10040510:	105b      	asrs	r3, r3, #1
10040512:	d300      	bcc.n	10040516 <__divsi3+0x1c2>
10040514:	4240      	negs	r0, r0
10040516:	b501      	push	{r0, lr}
10040518:	2000      	movs	r0, #0
1004051a:	f000 f805 	bl	10040528 <__aeabi_idiv0>
1004051e:	bd02      	pop	{r1, pc}

10040520 <__aeabi_idivmod>:
10040520:	2900      	cmp	r1, #0
10040522:	d0f8      	beq.n	10040516 <__divsi3+0x1c2>
10040524:	e716      	b.n	10040354 <__divsi3>
10040526:	4770      	bx	lr

10040528 <__aeabi_idiv0>:
10040528:	4770      	bx	lr
1004052a:	46c0      	nop			@ (mov r8, r8)

1004052c <__aeabi_llsl>:
1004052c:	4091      	lsls	r1, r2
1004052e:	0003      	movs	r3, r0
10040530:	4090      	lsls	r0, r2
10040532:	469c      	mov	ip, r3
10040534:	3a20      	subs	r2, #32
10040536:	4093      	lsls	r3, r2
10040538:	4319      	orrs	r1, r3
1004053a:	4252      	negs	r2, r2
1004053c:	4663      	mov	r3, ip
1004053e:	40d3      	lsrs	r3, r2
10040540:	4319      	orrs	r1, r3
10040542:	4770      	bx	lr

10040544 <__aeabi_cdrcmple>:
10040544:	4684      	mov	ip, r0
10040546:	0010      	movs	r0, r2
10040548:	4662      	mov	r2, ip
1004054a:	468c      	mov	ip, r1
1004054c:	0019      	movs	r1, r3
1004054e:	4663      	mov	r3, ip
10040550:	e000      	b.n	10040554 <__aeabi_cdcmpeq>
10040552:	46c0      	nop			@ (mov r8, r8)

10040554 <__aeabi_cdcmpeq>:
10040554:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10040556:	f000 fa23 	bl	100409a0 <__ledf2>
1004055a:	2800      	cmp	r0, #0
1004055c:	d401      	bmi.n	10040562 <__aeabi_cdcmpeq+0xe>
1004055e:	2100      	movs	r1, #0
10040560:	42c8      	cmn	r0, r1
10040562:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

10040564 <__aeabi_dcmpeq>:
10040564:	b510      	push	{r4, lr}
10040566:	f000 f963 	bl	10040830 <__eqdf2>
1004056a:	4240      	negs	r0, r0
1004056c:	3001      	adds	r0, #1
1004056e:	bd10      	pop	{r4, pc}

10040570 <__aeabi_dcmplt>:
10040570:	b510      	push	{r4, lr}
10040572:	f000 fa15 	bl	100409a0 <__ledf2>
10040576:	2800      	cmp	r0, #0
10040578:	db01      	blt.n	1004057e <__aeabi_dcmplt+0xe>
1004057a:	2000      	movs	r0, #0
1004057c:	bd10      	pop	{r4, pc}
1004057e:	2001      	movs	r0, #1
10040580:	bd10      	pop	{r4, pc}
10040582:	46c0      	nop			@ (mov r8, r8)

10040584 <__aeabi_dcmple>:
10040584:	b510      	push	{r4, lr}
10040586:	f000 fa0b 	bl	100409a0 <__ledf2>
1004058a:	2800      	cmp	r0, #0
1004058c:	dd01      	ble.n	10040592 <__aeabi_dcmple+0xe>
1004058e:	2000      	movs	r0, #0
10040590:	bd10      	pop	{r4, pc}
10040592:	2001      	movs	r0, #1
10040594:	bd10      	pop	{r4, pc}
10040596:	46c0      	nop			@ (mov r8, r8)

10040598 <__aeabi_dcmpgt>:
10040598:	b510      	push	{r4, lr}
1004059a:	f000 f98d 	bl	100408b8 <__gedf2>
1004059e:	2800      	cmp	r0, #0
100405a0:	dc01      	bgt.n	100405a6 <__aeabi_dcmpgt+0xe>
100405a2:	2000      	movs	r0, #0
100405a4:	bd10      	pop	{r4, pc}
100405a6:	2001      	movs	r0, #1
100405a8:	bd10      	pop	{r4, pc}
100405aa:	46c0      	nop			@ (mov r8, r8)

100405ac <__aeabi_dcmpge>:
100405ac:	b510      	push	{r4, lr}
100405ae:	f000 f983 	bl	100408b8 <__gedf2>
100405b2:	2800      	cmp	r0, #0
100405b4:	da01      	bge.n	100405ba <__aeabi_dcmpge+0xe>
100405b6:	2000      	movs	r0, #0
100405b8:	bd10      	pop	{r4, pc}
100405ba:	2001      	movs	r0, #1
100405bc:	bd10      	pop	{r4, pc}
100405be:	46c0      	nop			@ (mov r8, r8)

100405c0 <__clzsi2>:
100405c0:	211c      	movs	r1, #28
100405c2:	2301      	movs	r3, #1
100405c4:	041b      	lsls	r3, r3, #16
100405c6:	4298      	cmp	r0, r3
100405c8:	d301      	bcc.n	100405ce <__clzsi2+0xe>
100405ca:	0c00      	lsrs	r0, r0, #16
100405cc:	3910      	subs	r1, #16
100405ce:	0a1b      	lsrs	r3, r3, #8
100405d0:	4298      	cmp	r0, r3
100405d2:	d301      	bcc.n	100405d8 <__clzsi2+0x18>
100405d4:	0a00      	lsrs	r0, r0, #8
100405d6:	3908      	subs	r1, #8
100405d8:	091b      	lsrs	r3, r3, #4
100405da:	4298      	cmp	r0, r3
100405dc:	d301      	bcc.n	100405e2 <__clzsi2+0x22>
100405de:	0900      	lsrs	r0, r0, #4
100405e0:	3904      	subs	r1, #4
100405e2:	a202      	add	r2, pc, #8	@ (adr r2, 100405ec <__clzsi2+0x2c>)
100405e4:	5c10      	ldrb	r0, [r2, r0]
100405e6:	1840      	adds	r0, r0, r1
100405e8:	4770      	bx	lr
100405ea:	46c0      	nop			@ (mov r8, r8)
100405ec:	02020304 	.word	0x02020304
100405f0:	01010101 	.word	0x01010101
	...

100405fc <__aeabi_uldivmod>:
100405fc:	2b00      	cmp	r3, #0
100405fe:	d111      	bne.n	10040624 <__aeabi_uldivmod+0x28>
10040600:	2a00      	cmp	r2, #0
10040602:	d10f      	bne.n	10040624 <__aeabi_uldivmod+0x28>
10040604:	2900      	cmp	r1, #0
10040606:	d100      	bne.n	1004060a <__aeabi_uldivmod+0xe>
10040608:	2800      	cmp	r0, #0
1004060a:	d002      	beq.n	10040612 <__aeabi_uldivmod+0x16>
1004060c:	2100      	movs	r1, #0
1004060e:	43c9      	mvns	r1, r1
10040610:	0008      	movs	r0, r1
10040612:	b407      	push	{r0, r1, r2}
10040614:	4802      	ldr	r0, [pc, #8]	@ (10040620 <__aeabi_uldivmod+0x24>)
10040616:	a102      	add	r1, pc, #8	@ (adr r1, 10040620 <__aeabi_uldivmod+0x24>)
10040618:	1840      	adds	r0, r0, r1
1004061a:	9002      	str	r0, [sp, #8]
1004061c:	bd03      	pop	{r0, r1, pc}
1004061e:	46c0      	nop			@ (mov r8, r8)
10040620:	ffffff09 	.word	0xffffff09
10040624:	b403      	push	{r0, r1}
10040626:	4668      	mov	r0, sp
10040628:	b501      	push	{r0, lr}
1004062a:	9802      	ldr	r0, [sp, #8]
1004062c:	f000 f834 	bl	10040698 <__udivmoddi4>
10040630:	9b01      	ldr	r3, [sp, #4]
10040632:	469e      	mov	lr, r3
10040634:	b002      	add	sp, #8
10040636:	bc0c      	pop	{r2, r3}
10040638:	4770      	bx	lr
1004063a:	46c0      	nop			@ (mov r8, r8)

1004063c <__aeabi_lmul>:
1004063c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004063e:	46ce      	mov	lr, r9
10040640:	4699      	mov	r9, r3
10040642:	0c03      	lsrs	r3, r0, #16
10040644:	469c      	mov	ip, r3
10040646:	0413      	lsls	r3, r2, #16
10040648:	4647      	mov	r7, r8
1004064a:	0c1b      	lsrs	r3, r3, #16
1004064c:	001d      	movs	r5, r3
1004064e:	000e      	movs	r6, r1
10040650:	4661      	mov	r1, ip
10040652:	0404      	lsls	r4, r0, #16
10040654:	0c24      	lsrs	r4, r4, #16
10040656:	b580      	push	{r7, lr}
10040658:	0007      	movs	r7, r0
1004065a:	0c10      	lsrs	r0, r2, #16
1004065c:	434b      	muls	r3, r1
1004065e:	4365      	muls	r5, r4
10040660:	4341      	muls	r1, r0
10040662:	4360      	muls	r0, r4
10040664:	0c2c      	lsrs	r4, r5, #16
10040666:	18c0      	adds	r0, r0, r3
10040668:	1824      	adds	r4, r4, r0
1004066a:	468c      	mov	ip, r1
1004066c:	42a3      	cmp	r3, r4
1004066e:	d903      	bls.n	10040678 <__aeabi_lmul+0x3c>
10040670:	2380      	movs	r3, #128	@ 0x80
10040672:	025b      	lsls	r3, r3, #9
10040674:	4698      	mov	r8, r3
10040676:	44c4      	add	ip, r8
10040678:	4649      	mov	r1, r9
1004067a:	4379      	muls	r1, r7
1004067c:	4356      	muls	r6, r2
1004067e:	0c23      	lsrs	r3, r4, #16
10040680:	042d      	lsls	r5, r5, #16
10040682:	0c2d      	lsrs	r5, r5, #16
10040684:	1989      	adds	r1, r1, r6
10040686:	4463      	add	r3, ip
10040688:	0424      	lsls	r4, r4, #16
1004068a:	1960      	adds	r0, r4, r5
1004068c:	18c9      	adds	r1, r1, r3
1004068e:	bcc0      	pop	{r6, r7}
10040690:	46b9      	mov	r9, r7
10040692:	46b0      	mov	r8, r6
10040694:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040696:	46c0      	nop			@ (mov r8, r8)

10040698 <__udivmoddi4>:
10040698:	b5f0      	push	{r4, r5, r6, r7, lr}
1004069a:	4657      	mov	r7, sl
1004069c:	464e      	mov	r6, r9
1004069e:	4645      	mov	r5, r8
100406a0:	46de      	mov	lr, fp
100406a2:	b5e0      	push	{r5, r6, r7, lr}
100406a4:	0004      	movs	r4, r0
100406a6:	000d      	movs	r5, r1
100406a8:	4692      	mov	sl, r2
100406aa:	4699      	mov	r9, r3
100406ac:	b083      	sub	sp, #12
100406ae:	428b      	cmp	r3, r1
100406b0:	d830      	bhi.n	10040714 <__udivmoddi4+0x7c>
100406b2:	d02d      	beq.n	10040710 <__udivmoddi4+0x78>
100406b4:	4649      	mov	r1, r9
100406b6:	4650      	mov	r0, sl
100406b8:	f001 f8b2 	bl	10041820 <__clzdi2>
100406bc:	0029      	movs	r1, r5
100406be:	0006      	movs	r6, r0
100406c0:	0020      	movs	r0, r4
100406c2:	f001 f8ad 	bl	10041820 <__clzdi2>
100406c6:	1a33      	subs	r3, r6, r0
100406c8:	4698      	mov	r8, r3
100406ca:	3b20      	subs	r3, #32
100406cc:	d434      	bmi.n	10040738 <__udivmoddi4+0xa0>
100406ce:	469b      	mov	fp, r3
100406d0:	4653      	mov	r3, sl
100406d2:	465a      	mov	r2, fp
100406d4:	4093      	lsls	r3, r2
100406d6:	4642      	mov	r2, r8
100406d8:	001f      	movs	r7, r3
100406da:	4653      	mov	r3, sl
100406dc:	4093      	lsls	r3, r2
100406de:	001e      	movs	r6, r3
100406e0:	42af      	cmp	r7, r5
100406e2:	d83b      	bhi.n	1004075c <__udivmoddi4+0xc4>
100406e4:	42af      	cmp	r7, r5
100406e6:	d100      	bne.n	100406ea <__udivmoddi4+0x52>
100406e8:	e079      	b.n	100407de <__udivmoddi4+0x146>
100406ea:	465b      	mov	r3, fp
100406ec:	1ba4      	subs	r4, r4, r6
100406ee:	41bd      	sbcs	r5, r7
100406f0:	2b00      	cmp	r3, #0
100406f2:	da00      	bge.n	100406f6 <__udivmoddi4+0x5e>
100406f4:	e076      	b.n	100407e4 <__udivmoddi4+0x14c>
100406f6:	2200      	movs	r2, #0
100406f8:	2300      	movs	r3, #0
100406fa:	9200      	str	r2, [sp, #0]
100406fc:	9301      	str	r3, [sp, #4]
100406fe:	2301      	movs	r3, #1
10040700:	465a      	mov	r2, fp
10040702:	4093      	lsls	r3, r2
10040704:	9301      	str	r3, [sp, #4]
10040706:	2301      	movs	r3, #1
10040708:	4642      	mov	r2, r8
1004070a:	4093      	lsls	r3, r2
1004070c:	9300      	str	r3, [sp, #0]
1004070e:	e029      	b.n	10040764 <__udivmoddi4+0xcc>
10040710:	4282      	cmp	r2, r0
10040712:	d9cf      	bls.n	100406b4 <__udivmoddi4+0x1c>
10040714:	2200      	movs	r2, #0
10040716:	2300      	movs	r3, #0
10040718:	9200      	str	r2, [sp, #0]
1004071a:	9301      	str	r3, [sp, #4]
1004071c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1004071e:	2b00      	cmp	r3, #0
10040720:	d001      	beq.n	10040726 <__udivmoddi4+0x8e>
10040722:	601c      	str	r4, [r3, #0]
10040724:	605d      	str	r5, [r3, #4]
10040726:	9800      	ldr	r0, [sp, #0]
10040728:	9901      	ldr	r1, [sp, #4]
1004072a:	b003      	add	sp, #12
1004072c:	bcf0      	pop	{r4, r5, r6, r7}
1004072e:	46bb      	mov	fp, r7
10040730:	46b2      	mov	sl, r6
10040732:	46a9      	mov	r9, r5
10040734:	46a0      	mov	r8, r4
10040736:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040738:	4642      	mov	r2, r8
1004073a:	469b      	mov	fp, r3
1004073c:	2320      	movs	r3, #32
1004073e:	1a9b      	subs	r3, r3, r2
10040740:	4652      	mov	r2, sl
10040742:	40da      	lsrs	r2, r3
10040744:	4641      	mov	r1, r8
10040746:	0013      	movs	r3, r2
10040748:	464a      	mov	r2, r9
1004074a:	408a      	lsls	r2, r1
1004074c:	0017      	movs	r7, r2
1004074e:	4642      	mov	r2, r8
10040750:	431f      	orrs	r7, r3
10040752:	4653      	mov	r3, sl
10040754:	4093      	lsls	r3, r2
10040756:	001e      	movs	r6, r3
10040758:	42af      	cmp	r7, r5
1004075a:	d9c3      	bls.n	100406e4 <__udivmoddi4+0x4c>
1004075c:	2200      	movs	r2, #0
1004075e:	2300      	movs	r3, #0
10040760:	9200      	str	r2, [sp, #0]
10040762:	9301      	str	r3, [sp, #4]
10040764:	4643      	mov	r3, r8
10040766:	2b00      	cmp	r3, #0
10040768:	d0d8      	beq.n	1004071c <__udivmoddi4+0x84>
1004076a:	07fb      	lsls	r3, r7, #31
1004076c:	0872      	lsrs	r2, r6, #1
1004076e:	431a      	orrs	r2, r3
10040770:	4646      	mov	r6, r8
10040772:	087b      	lsrs	r3, r7, #1
10040774:	e00e      	b.n	10040794 <__udivmoddi4+0xfc>
10040776:	42ab      	cmp	r3, r5
10040778:	d101      	bne.n	1004077e <__udivmoddi4+0xe6>
1004077a:	42a2      	cmp	r2, r4
1004077c:	d80c      	bhi.n	10040798 <__udivmoddi4+0x100>
1004077e:	1aa4      	subs	r4, r4, r2
10040780:	419d      	sbcs	r5, r3
10040782:	2001      	movs	r0, #1
10040784:	1924      	adds	r4, r4, r4
10040786:	416d      	adcs	r5, r5
10040788:	2100      	movs	r1, #0
1004078a:	3e01      	subs	r6, #1
1004078c:	1824      	adds	r4, r4, r0
1004078e:	414d      	adcs	r5, r1
10040790:	2e00      	cmp	r6, #0
10040792:	d006      	beq.n	100407a2 <__udivmoddi4+0x10a>
10040794:	42ab      	cmp	r3, r5
10040796:	d9ee      	bls.n	10040776 <__udivmoddi4+0xde>
10040798:	3e01      	subs	r6, #1
1004079a:	1924      	adds	r4, r4, r4
1004079c:	416d      	adcs	r5, r5
1004079e:	2e00      	cmp	r6, #0
100407a0:	d1f8      	bne.n	10040794 <__udivmoddi4+0xfc>
100407a2:	9800      	ldr	r0, [sp, #0]
100407a4:	9901      	ldr	r1, [sp, #4]
100407a6:	465b      	mov	r3, fp
100407a8:	1900      	adds	r0, r0, r4
100407aa:	4169      	adcs	r1, r5
100407ac:	2b00      	cmp	r3, #0
100407ae:	db24      	blt.n	100407fa <__udivmoddi4+0x162>
100407b0:	002b      	movs	r3, r5
100407b2:	465a      	mov	r2, fp
100407b4:	4644      	mov	r4, r8
100407b6:	40d3      	lsrs	r3, r2
100407b8:	002a      	movs	r2, r5
100407ba:	40e2      	lsrs	r2, r4
100407bc:	001c      	movs	r4, r3
100407be:	465b      	mov	r3, fp
100407c0:	0015      	movs	r5, r2
100407c2:	2b00      	cmp	r3, #0
100407c4:	db2a      	blt.n	1004081c <__udivmoddi4+0x184>
100407c6:	0026      	movs	r6, r4
100407c8:	409e      	lsls	r6, r3
100407ca:	0033      	movs	r3, r6
100407cc:	0026      	movs	r6, r4
100407ce:	4647      	mov	r7, r8
100407d0:	40be      	lsls	r6, r7
100407d2:	0032      	movs	r2, r6
100407d4:	1a80      	subs	r0, r0, r2
100407d6:	4199      	sbcs	r1, r3
100407d8:	9000      	str	r0, [sp, #0]
100407da:	9101      	str	r1, [sp, #4]
100407dc:	e79e      	b.n	1004071c <__udivmoddi4+0x84>
100407de:	42a3      	cmp	r3, r4
100407e0:	d8bc      	bhi.n	1004075c <__udivmoddi4+0xc4>
100407e2:	e782      	b.n	100406ea <__udivmoddi4+0x52>
100407e4:	4642      	mov	r2, r8
100407e6:	2320      	movs	r3, #32
100407e8:	2100      	movs	r1, #0
100407ea:	1a9b      	subs	r3, r3, r2
100407ec:	2200      	movs	r2, #0
100407ee:	9100      	str	r1, [sp, #0]
100407f0:	9201      	str	r2, [sp, #4]
100407f2:	2201      	movs	r2, #1
100407f4:	40da      	lsrs	r2, r3
100407f6:	9201      	str	r2, [sp, #4]
100407f8:	e785      	b.n	10040706 <__udivmoddi4+0x6e>
100407fa:	4642      	mov	r2, r8
100407fc:	2320      	movs	r3, #32
100407fe:	1a9b      	subs	r3, r3, r2
10040800:	002a      	movs	r2, r5
10040802:	4646      	mov	r6, r8
10040804:	409a      	lsls	r2, r3
10040806:	0023      	movs	r3, r4
10040808:	40f3      	lsrs	r3, r6
1004080a:	4644      	mov	r4, r8
1004080c:	4313      	orrs	r3, r2
1004080e:	002a      	movs	r2, r5
10040810:	40e2      	lsrs	r2, r4
10040812:	001c      	movs	r4, r3
10040814:	465b      	mov	r3, fp
10040816:	0015      	movs	r5, r2
10040818:	2b00      	cmp	r3, #0
1004081a:	dad4      	bge.n	100407c6 <__udivmoddi4+0x12e>
1004081c:	4642      	mov	r2, r8
1004081e:	002f      	movs	r7, r5
10040820:	2320      	movs	r3, #32
10040822:	0026      	movs	r6, r4
10040824:	4097      	lsls	r7, r2
10040826:	1a9b      	subs	r3, r3, r2
10040828:	40de      	lsrs	r6, r3
1004082a:	003b      	movs	r3, r7
1004082c:	4333      	orrs	r3, r6
1004082e:	e7cd      	b.n	100407cc <__udivmoddi4+0x134>

10040830 <__eqdf2>:
10040830:	b5f0      	push	{r4, r5, r6, r7, lr}
10040832:	4657      	mov	r7, sl
10040834:	46de      	mov	lr, fp
10040836:	464e      	mov	r6, r9
10040838:	4645      	mov	r5, r8
1004083a:	b5e0      	push	{r5, r6, r7, lr}
1004083c:	000d      	movs	r5, r1
1004083e:	0004      	movs	r4, r0
10040840:	0fe8      	lsrs	r0, r5, #31
10040842:	4683      	mov	fp, r0
10040844:	0309      	lsls	r1, r1, #12
10040846:	0fd8      	lsrs	r0, r3, #31
10040848:	0b09      	lsrs	r1, r1, #12
1004084a:	4682      	mov	sl, r0
1004084c:	4819      	ldr	r0, [pc, #100]	@ (100408b4 <__eqdf2+0x84>)
1004084e:	468c      	mov	ip, r1
10040850:	031f      	lsls	r7, r3, #12
10040852:	0069      	lsls	r1, r5, #1
10040854:	005e      	lsls	r6, r3, #1
10040856:	0d49      	lsrs	r1, r1, #21
10040858:	0b3f      	lsrs	r7, r7, #12
1004085a:	0d76      	lsrs	r6, r6, #21
1004085c:	4281      	cmp	r1, r0
1004085e:	d018      	beq.n	10040892 <__eqdf2+0x62>
10040860:	4286      	cmp	r6, r0
10040862:	d00f      	beq.n	10040884 <__eqdf2+0x54>
10040864:	2001      	movs	r0, #1
10040866:	42b1      	cmp	r1, r6
10040868:	d10d      	bne.n	10040886 <__eqdf2+0x56>
1004086a:	45bc      	cmp	ip, r7
1004086c:	d10b      	bne.n	10040886 <__eqdf2+0x56>
1004086e:	4294      	cmp	r4, r2
10040870:	d109      	bne.n	10040886 <__eqdf2+0x56>
10040872:	45d3      	cmp	fp, sl
10040874:	d01c      	beq.n	100408b0 <__eqdf2+0x80>
10040876:	2900      	cmp	r1, #0
10040878:	d105      	bne.n	10040886 <__eqdf2+0x56>
1004087a:	4660      	mov	r0, ip
1004087c:	4320      	orrs	r0, r4
1004087e:	1e43      	subs	r3, r0, #1
10040880:	4198      	sbcs	r0, r3
10040882:	e000      	b.n	10040886 <__eqdf2+0x56>
10040884:	2001      	movs	r0, #1
10040886:	bcf0      	pop	{r4, r5, r6, r7}
10040888:	46bb      	mov	fp, r7
1004088a:	46b2      	mov	sl, r6
1004088c:	46a9      	mov	r9, r5
1004088e:	46a0      	mov	r8, r4
10040890:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040892:	2001      	movs	r0, #1
10040894:	428e      	cmp	r6, r1
10040896:	d1f6      	bne.n	10040886 <__eqdf2+0x56>
10040898:	4661      	mov	r1, ip
1004089a:	4339      	orrs	r1, r7
1004089c:	000f      	movs	r7, r1
1004089e:	4317      	orrs	r7, r2
100408a0:	4327      	orrs	r7, r4
100408a2:	d1f0      	bne.n	10040886 <__eqdf2+0x56>
100408a4:	465b      	mov	r3, fp
100408a6:	4652      	mov	r2, sl
100408a8:	1a98      	subs	r0, r3, r2
100408aa:	1e43      	subs	r3, r0, #1
100408ac:	4198      	sbcs	r0, r3
100408ae:	e7ea      	b.n	10040886 <__eqdf2+0x56>
100408b0:	2000      	movs	r0, #0
100408b2:	e7e8      	b.n	10040886 <__eqdf2+0x56>
100408b4:	000007ff 	.word	0x000007ff

100408b8 <__gedf2>:
100408b8:	b5f0      	push	{r4, r5, r6, r7, lr}
100408ba:	4657      	mov	r7, sl
100408bc:	464e      	mov	r6, r9
100408be:	4645      	mov	r5, r8
100408c0:	46de      	mov	lr, fp
100408c2:	b5e0      	push	{r5, r6, r7, lr}
100408c4:	000d      	movs	r5, r1
100408c6:	030f      	lsls	r7, r1, #12
100408c8:	0b39      	lsrs	r1, r7, #12
100408ca:	b083      	sub	sp, #12
100408cc:	0004      	movs	r4, r0
100408ce:	4680      	mov	r8, r0
100408d0:	9101      	str	r1, [sp, #4]
100408d2:	0058      	lsls	r0, r3, #1
100408d4:	0fe9      	lsrs	r1, r5, #31
100408d6:	4f31      	ldr	r7, [pc, #196]	@ (1004099c <__gedf2+0xe4>)
100408d8:	0d40      	lsrs	r0, r0, #21
100408da:	468c      	mov	ip, r1
100408dc:	006e      	lsls	r6, r5, #1
100408de:	0319      	lsls	r1, r3, #12
100408e0:	4682      	mov	sl, r0
100408e2:	4691      	mov	r9, r2
100408e4:	0d76      	lsrs	r6, r6, #21
100408e6:	0b09      	lsrs	r1, r1, #12
100408e8:	0fd8      	lsrs	r0, r3, #31
100408ea:	42be      	cmp	r6, r7
100408ec:	d01f      	beq.n	1004092e <__gedf2+0x76>
100408ee:	45ba      	cmp	sl, r7
100408f0:	d00f      	beq.n	10040912 <__gedf2+0x5a>
100408f2:	2e00      	cmp	r6, #0
100408f4:	d12f      	bne.n	10040956 <__gedf2+0x9e>
100408f6:	4655      	mov	r5, sl
100408f8:	9e01      	ldr	r6, [sp, #4]
100408fa:	4334      	orrs	r4, r6
100408fc:	2d00      	cmp	r5, #0
100408fe:	d127      	bne.n	10040950 <__gedf2+0x98>
10040900:	430a      	orrs	r2, r1
10040902:	d03a      	beq.n	1004097a <__gedf2+0xc2>
10040904:	2c00      	cmp	r4, #0
10040906:	d145      	bne.n	10040994 <__gedf2+0xdc>
10040908:	2800      	cmp	r0, #0
1004090a:	d11a      	bne.n	10040942 <__gedf2+0x8a>
1004090c:	2001      	movs	r0, #1
1004090e:	4240      	negs	r0, r0
10040910:	e017      	b.n	10040942 <__gedf2+0x8a>
10040912:	4311      	orrs	r1, r2
10040914:	d13b      	bne.n	1004098e <__gedf2+0xd6>
10040916:	2e00      	cmp	r6, #0
10040918:	d102      	bne.n	10040920 <__gedf2+0x68>
1004091a:	9f01      	ldr	r7, [sp, #4]
1004091c:	4327      	orrs	r7, r4
1004091e:	d0f3      	beq.n	10040908 <__gedf2+0x50>
10040920:	4584      	cmp	ip, r0
10040922:	d109      	bne.n	10040938 <__gedf2+0x80>
10040924:	4663      	mov	r3, ip
10040926:	2b00      	cmp	r3, #0
10040928:	d0f0      	beq.n	1004090c <__gedf2+0x54>
1004092a:	4660      	mov	r0, ip
1004092c:	e009      	b.n	10040942 <__gedf2+0x8a>
1004092e:	9f01      	ldr	r7, [sp, #4]
10040930:	4327      	orrs	r7, r4
10040932:	d12c      	bne.n	1004098e <__gedf2+0xd6>
10040934:	45b2      	cmp	sl, r6
10040936:	d024      	beq.n	10040982 <__gedf2+0xca>
10040938:	4663      	mov	r3, ip
1004093a:	2002      	movs	r0, #2
1004093c:	3b01      	subs	r3, #1
1004093e:	4018      	ands	r0, r3
10040940:	3801      	subs	r0, #1
10040942:	b003      	add	sp, #12
10040944:	bcf0      	pop	{r4, r5, r6, r7}
10040946:	46bb      	mov	fp, r7
10040948:	46b2      	mov	sl, r6
1004094a:	46a9      	mov	r9, r5
1004094c:	46a0      	mov	r8, r4
1004094e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040950:	2c00      	cmp	r4, #0
10040952:	d0d9      	beq.n	10040908 <__gedf2+0x50>
10040954:	e7e4      	b.n	10040920 <__gedf2+0x68>
10040956:	4654      	mov	r4, sl
10040958:	2c00      	cmp	r4, #0
1004095a:	d0ed      	beq.n	10040938 <__gedf2+0x80>
1004095c:	4584      	cmp	ip, r0
1004095e:	d1eb      	bne.n	10040938 <__gedf2+0x80>
10040960:	4556      	cmp	r6, sl
10040962:	dce9      	bgt.n	10040938 <__gedf2+0x80>
10040964:	dbde      	blt.n	10040924 <__gedf2+0x6c>
10040966:	9b01      	ldr	r3, [sp, #4]
10040968:	428b      	cmp	r3, r1
1004096a:	d8e5      	bhi.n	10040938 <__gedf2+0x80>
1004096c:	d1da      	bne.n	10040924 <__gedf2+0x6c>
1004096e:	45c8      	cmp	r8, r9
10040970:	d8e2      	bhi.n	10040938 <__gedf2+0x80>
10040972:	2000      	movs	r0, #0
10040974:	45c8      	cmp	r8, r9
10040976:	d2e4      	bcs.n	10040942 <__gedf2+0x8a>
10040978:	e7d4      	b.n	10040924 <__gedf2+0x6c>
1004097a:	2000      	movs	r0, #0
1004097c:	2c00      	cmp	r4, #0
1004097e:	d0e0      	beq.n	10040942 <__gedf2+0x8a>
10040980:	e7da      	b.n	10040938 <__gedf2+0x80>
10040982:	4311      	orrs	r1, r2
10040984:	d103      	bne.n	1004098e <__gedf2+0xd6>
10040986:	4584      	cmp	ip, r0
10040988:	d1d6      	bne.n	10040938 <__gedf2+0x80>
1004098a:	2000      	movs	r0, #0
1004098c:	e7d9      	b.n	10040942 <__gedf2+0x8a>
1004098e:	2002      	movs	r0, #2
10040990:	4240      	negs	r0, r0
10040992:	e7d6      	b.n	10040942 <__gedf2+0x8a>
10040994:	4584      	cmp	ip, r0
10040996:	d0e6      	beq.n	10040966 <__gedf2+0xae>
10040998:	e7ce      	b.n	10040938 <__gedf2+0x80>
1004099a:	46c0      	nop			@ (mov r8, r8)
1004099c:	000007ff 	.word	0x000007ff

100409a0 <__ledf2>:
100409a0:	b5f0      	push	{r4, r5, r6, r7, lr}
100409a2:	4657      	mov	r7, sl
100409a4:	464e      	mov	r6, r9
100409a6:	4645      	mov	r5, r8
100409a8:	46de      	mov	lr, fp
100409aa:	b5e0      	push	{r5, r6, r7, lr}
100409ac:	000d      	movs	r5, r1
100409ae:	030f      	lsls	r7, r1, #12
100409b0:	0004      	movs	r4, r0
100409b2:	4680      	mov	r8, r0
100409b4:	0fe8      	lsrs	r0, r5, #31
100409b6:	0b39      	lsrs	r1, r7, #12
100409b8:	4684      	mov	ip, r0
100409ba:	b083      	sub	sp, #12
100409bc:	0058      	lsls	r0, r3, #1
100409be:	4f30      	ldr	r7, [pc, #192]	@ (10040a80 <__ledf2+0xe0>)
100409c0:	0d40      	lsrs	r0, r0, #21
100409c2:	9101      	str	r1, [sp, #4]
100409c4:	031e      	lsls	r6, r3, #12
100409c6:	0069      	lsls	r1, r5, #1
100409c8:	4682      	mov	sl, r0
100409ca:	4691      	mov	r9, r2
100409cc:	0d49      	lsrs	r1, r1, #21
100409ce:	0b36      	lsrs	r6, r6, #12
100409d0:	0fd8      	lsrs	r0, r3, #31
100409d2:	42b9      	cmp	r1, r7
100409d4:	d020      	beq.n	10040a18 <__ledf2+0x78>
100409d6:	45ba      	cmp	sl, r7
100409d8:	d00f      	beq.n	100409fa <__ledf2+0x5a>
100409da:	2900      	cmp	r1, #0
100409dc:	d12b      	bne.n	10040a36 <__ledf2+0x96>
100409de:	9901      	ldr	r1, [sp, #4]
100409e0:	430c      	orrs	r4, r1
100409e2:	4651      	mov	r1, sl
100409e4:	2900      	cmp	r1, #0
100409e6:	d137      	bne.n	10040a58 <__ledf2+0xb8>
100409e8:	4332      	orrs	r2, r6
100409ea:	d038      	beq.n	10040a5e <__ledf2+0xbe>
100409ec:	2c00      	cmp	r4, #0
100409ee:	d144      	bne.n	10040a7a <__ledf2+0xda>
100409f0:	2800      	cmp	r0, #0
100409f2:	d119      	bne.n	10040a28 <__ledf2+0x88>
100409f4:	2001      	movs	r0, #1
100409f6:	4240      	negs	r0, r0
100409f8:	e016      	b.n	10040a28 <__ledf2+0x88>
100409fa:	4316      	orrs	r6, r2
100409fc:	d113      	bne.n	10040a26 <__ledf2+0x86>
100409fe:	2900      	cmp	r1, #0
10040a00:	d102      	bne.n	10040a08 <__ledf2+0x68>
10040a02:	9f01      	ldr	r7, [sp, #4]
10040a04:	4327      	orrs	r7, r4
10040a06:	d0f3      	beq.n	100409f0 <__ledf2+0x50>
10040a08:	4584      	cmp	ip, r0
10040a0a:	d020      	beq.n	10040a4e <__ledf2+0xae>
10040a0c:	4663      	mov	r3, ip
10040a0e:	2002      	movs	r0, #2
10040a10:	3b01      	subs	r3, #1
10040a12:	4018      	ands	r0, r3
10040a14:	3801      	subs	r0, #1
10040a16:	e007      	b.n	10040a28 <__ledf2+0x88>
10040a18:	9f01      	ldr	r7, [sp, #4]
10040a1a:	4327      	orrs	r7, r4
10040a1c:	d103      	bne.n	10040a26 <__ledf2+0x86>
10040a1e:	458a      	cmp	sl, r1
10040a20:	d1f4      	bne.n	10040a0c <__ledf2+0x6c>
10040a22:	4316      	orrs	r6, r2
10040a24:	d01f      	beq.n	10040a66 <__ledf2+0xc6>
10040a26:	2002      	movs	r0, #2
10040a28:	b003      	add	sp, #12
10040a2a:	bcf0      	pop	{r4, r5, r6, r7}
10040a2c:	46bb      	mov	fp, r7
10040a2e:	46b2      	mov	sl, r6
10040a30:	46a9      	mov	r9, r5
10040a32:	46a0      	mov	r8, r4
10040a34:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040a36:	4654      	mov	r4, sl
10040a38:	2c00      	cmp	r4, #0
10040a3a:	d0e7      	beq.n	10040a0c <__ledf2+0x6c>
10040a3c:	4584      	cmp	ip, r0
10040a3e:	d1e5      	bne.n	10040a0c <__ledf2+0x6c>
10040a40:	4551      	cmp	r1, sl
10040a42:	dce3      	bgt.n	10040a0c <__ledf2+0x6c>
10040a44:	db03      	blt.n	10040a4e <__ledf2+0xae>
10040a46:	9b01      	ldr	r3, [sp, #4]
10040a48:	42b3      	cmp	r3, r6
10040a4a:	d8df      	bhi.n	10040a0c <__ledf2+0x6c>
10040a4c:	d00f      	beq.n	10040a6e <__ledf2+0xce>
10040a4e:	4663      	mov	r3, ip
10040a50:	2b00      	cmp	r3, #0
10040a52:	d0cf      	beq.n	100409f4 <__ledf2+0x54>
10040a54:	4660      	mov	r0, ip
10040a56:	e7e7      	b.n	10040a28 <__ledf2+0x88>
10040a58:	2c00      	cmp	r4, #0
10040a5a:	d0c9      	beq.n	100409f0 <__ledf2+0x50>
10040a5c:	e7d4      	b.n	10040a08 <__ledf2+0x68>
10040a5e:	2000      	movs	r0, #0
10040a60:	2c00      	cmp	r4, #0
10040a62:	d0e1      	beq.n	10040a28 <__ledf2+0x88>
10040a64:	e7d2      	b.n	10040a0c <__ledf2+0x6c>
10040a66:	4584      	cmp	ip, r0
10040a68:	d1d0      	bne.n	10040a0c <__ledf2+0x6c>
10040a6a:	2000      	movs	r0, #0
10040a6c:	e7dc      	b.n	10040a28 <__ledf2+0x88>
10040a6e:	45c8      	cmp	r8, r9
10040a70:	d8cc      	bhi.n	10040a0c <__ledf2+0x6c>
10040a72:	2000      	movs	r0, #0
10040a74:	45c8      	cmp	r8, r9
10040a76:	d2d7      	bcs.n	10040a28 <__ledf2+0x88>
10040a78:	e7e9      	b.n	10040a4e <__ledf2+0xae>
10040a7a:	4584      	cmp	ip, r0
10040a7c:	d0e3      	beq.n	10040a46 <__ledf2+0xa6>
10040a7e:	e7c5      	b.n	10040a0c <__ledf2+0x6c>
10040a80:	000007ff 	.word	0x000007ff

10040a84 <__aeabi_dmul>:
10040a84:	b5f0      	push	{r4, r5, r6, r7, lr}
10040a86:	4657      	mov	r7, sl
10040a88:	46de      	mov	lr, fp
10040a8a:	464e      	mov	r6, r9
10040a8c:	4645      	mov	r5, r8
10040a8e:	b5e0      	push	{r5, r6, r7, lr}
10040a90:	001f      	movs	r7, r3
10040a92:	030b      	lsls	r3, r1, #12
10040a94:	0b1b      	lsrs	r3, r3, #12
10040a96:	0016      	movs	r6, r2
10040a98:	469a      	mov	sl, r3
10040a9a:	0fca      	lsrs	r2, r1, #31
10040a9c:	004b      	lsls	r3, r1, #1
10040a9e:	0004      	movs	r4, r0
10040aa0:	4693      	mov	fp, r2
10040aa2:	b087      	sub	sp, #28
10040aa4:	0d5b      	lsrs	r3, r3, #21
10040aa6:	d100      	bne.n	10040aaa <__aeabi_dmul+0x26>
10040aa8:	e0d5      	b.n	10040c56 <__aeabi_dmul+0x1d2>
10040aaa:	4abb      	ldr	r2, [pc, #748]	@ (10040d98 <__aeabi_dmul+0x314>)
10040aac:	4293      	cmp	r3, r2
10040aae:	d100      	bne.n	10040ab2 <__aeabi_dmul+0x2e>
10040ab0:	e0f8      	b.n	10040ca4 <__aeabi_dmul+0x220>
10040ab2:	4651      	mov	r1, sl
10040ab4:	0f42      	lsrs	r2, r0, #29
10040ab6:	00c9      	lsls	r1, r1, #3
10040ab8:	430a      	orrs	r2, r1
10040aba:	2180      	movs	r1, #128	@ 0x80
10040abc:	0409      	lsls	r1, r1, #16
10040abe:	4311      	orrs	r1, r2
10040ac0:	00c2      	lsls	r2, r0, #3
10040ac2:	4691      	mov	r9, r2
10040ac4:	4ab5      	ldr	r2, [pc, #724]	@ (10040d9c <__aeabi_dmul+0x318>)
10040ac6:	468a      	mov	sl, r1
10040ac8:	189d      	adds	r5, r3, r2
10040aca:	2300      	movs	r3, #0
10040acc:	4698      	mov	r8, r3
10040ace:	9302      	str	r3, [sp, #8]
10040ad0:	033c      	lsls	r4, r7, #12
10040ad2:	007b      	lsls	r3, r7, #1
10040ad4:	0ffa      	lsrs	r2, r7, #31
10040ad6:	0030      	movs	r0, r6
10040ad8:	0b24      	lsrs	r4, r4, #12
10040ada:	0d5b      	lsrs	r3, r3, #21
10040adc:	9200      	str	r2, [sp, #0]
10040ade:	d100      	bne.n	10040ae2 <__aeabi_dmul+0x5e>
10040ae0:	e096      	b.n	10040c10 <__aeabi_dmul+0x18c>
10040ae2:	4aad      	ldr	r2, [pc, #692]	@ (10040d98 <__aeabi_dmul+0x314>)
10040ae4:	4293      	cmp	r3, r2
10040ae6:	d031      	beq.n	10040b4c <__aeabi_dmul+0xc8>
10040ae8:	0f72      	lsrs	r2, r6, #29
10040aea:	00e4      	lsls	r4, r4, #3
10040aec:	4322      	orrs	r2, r4
10040aee:	2480      	movs	r4, #128	@ 0x80
10040af0:	0424      	lsls	r4, r4, #16
10040af2:	4314      	orrs	r4, r2
10040af4:	4aa9      	ldr	r2, [pc, #676]	@ (10040d9c <__aeabi_dmul+0x318>)
10040af6:	00f0      	lsls	r0, r6, #3
10040af8:	4694      	mov	ip, r2
10040afa:	4463      	add	r3, ip
10040afc:	195b      	adds	r3, r3, r5
10040afe:	1c5a      	adds	r2, r3, #1
10040b00:	9201      	str	r2, [sp, #4]
10040b02:	4642      	mov	r2, r8
10040b04:	2600      	movs	r6, #0
10040b06:	2a0a      	cmp	r2, #10
10040b08:	dc42      	bgt.n	10040b90 <__aeabi_dmul+0x10c>
10040b0a:	465a      	mov	r2, fp
10040b0c:	9900      	ldr	r1, [sp, #0]
10040b0e:	404a      	eors	r2, r1
10040b10:	4693      	mov	fp, r2
10040b12:	4642      	mov	r2, r8
10040b14:	2a02      	cmp	r2, #2
10040b16:	dc32      	bgt.n	10040b7e <__aeabi_dmul+0xfa>
10040b18:	3a01      	subs	r2, #1
10040b1a:	2a01      	cmp	r2, #1
10040b1c:	d900      	bls.n	10040b20 <__aeabi_dmul+0x9c>
10040b1e:	e149      	b.n	10040db4 <__aeabi_dmul+0x330>
10040b20:	2e02      	cmp	r6, #2
10040b22:	d100      	bne.n	10040b26 <__aeabi_dmul+0xa2>
10040b24:	e0ca      	b.n	10040cbc <__aeabi_dmul+0x238>
10040b26:	2e01      	cmp	r6, #1
10040b28:	d13d      	bne.n	10040ba6 <__aeabi_dmul+0x122>
10040b2a:	2300      	movs	r3, #0
10040b2c:	2400      	movs	r4, #0
10040b2e:	2200      	movs	r2, #0
10040b30:	0010      	movs	r0, r2
10040b32:	465a      	mov	r2, fp
10040b34:	051b      	lsls	r3, r3, #20
10040b36:	4323      	orrs	r3, r4
10040b38:	07d2      	lsls	r2, r2, #31
10040b3a:	4313      	orrs	r3, r2
10040b3c:	0019      	movs	r1, r3
10040b3e:	b007      	add	sp, #28
10040b40:	bcf0      	pop	{r4, r5, r6, r7}
10040b42:	46bb      	mov	fp, r7
10040b44:	46b2      	mov	sl, r6
10040b46:	46a9      	mov	r9, r5
10040b48:	46a0      	mov	r8, r4
10040b4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10040b4c:	4b92      	ldr	r3, [pc, #584]	@ (10040d98 <__aeabi_dmul+0x314>)
10040b4e:	4326      	orrs	r6, r4
10040b50:	18eb      	adds	r3, r5, r3
10040b52:	2e00      	cmp	r6, #0
10040b54:	d100      	bne.n	10040b58 <__aeabi_dmul+0xd4>
10040b56:	e0bb      	b.n	10040cd0 <__aeabi_dmul+0x24c>
10040b58:	2203      	movs	r2, #3
10040b5a:	4641      	mov	r1, r8
10040b5c:	4311      	orrs	r1, r2
10040b5e:	465a      	mov	r2, fp
10040b60:	4688      	mov	r8, r1
10040b62:	9900      	ldr	r1, [sp, #0]
10040b64:	404a      	eors	r2, r1
10040b66:	2180      	movs	r1, #128	@ 0x80
10040b68:	0109      	lsls	r1, r1, #4
10040b6a:	468c      	mov	ip, r1
10040b6c:	0029      	movs	r1, r5
10040b6e:	4461      	add	r1, ip
10040b70:	9101      	str	r1, [sp, #4]
10040b72:	4641      	mov	r1, r8
10040b74:	290a      	cmp	r1, #10
10040b76:	dd00      	ble.n	10040b7a <__aeabi_dmul+0xf6>
10040b78:	e233      	b.n	10040fe2 <__aeabi_dmul+0x55e>
10040b7a:	4693      	mov	fp, r2
10040b7c:	2603      	movs	r6, #3
10040b7e:	4642      	mov	r2, r8
10040b80:	2701      	movs	r7, #1
10040b82:	4097      	lsls	r7, r2
10040b84:	21a6      	movs	r1, #166	@ 0xa6
10040b86:	003a      	movs	r2, r7
10040b88:	00c9      	lsls	r1, r1, #3
10040b8a:	400a      	ands	r2, r1
10040b8c:	420f      	tst	r7, r1
10040b8e:	d031      	beq.n	10040bf4 <__aeabi_dmul+0x170>
10040b90:	9e02      	ldr	r6, [sp, #8]
10040b92:	2e02      	cmp	r6, #2
10040b94:	d100      	bne.n	10040b98 <__aeabi_dmul+0x114>
10040b96:	e235      	b.n	10041004 <__aeabi_dmul+0x580>
10040b98:	2e03      	cmp	r6, #3
10040b9a:	d100      	bne.n	10040b9e <__aeabi_dmul+0x11a>
10040b9c:	e1d2      	b.n	10040f44 <__aeabi_dmul+0x4c0>
10040b9e:	4654      	mov	r4, sl
10040ba0:	4648      	mov	r0, r9
10040ba2:	2e01      	cmp	r6, #1
10040ba4:	d0c1      	beq.n	10040b2a <__aeabi_dmul+0xa6>
10040ba6:	9a01      	ldr	r2, [sp, #4]
10040ba8:	4b7d      	ldr	r3, [pc, #500]	@ (10040da0 <__aeabi_dmul+0x31c>)
10040baa:	4694      	mov	ip, r2
10040bac:	4463      	add	r3, ip
10040bae:	2b00      	cmp	r3, #0
10040bb0:	dc00      	bgt.n	10040bb4 <__aeabi_dmul+0x130>
10040bb2:	e0c0      	b.n	10040d36 <__aeabi_dmul+0x2b2>
10040bb4:	0742      	lsls	r2, r0, #29
10040bb6:	d009      	beq.n	10040bcc <__aeabi_dmul+0x148>
10040bb8:	220f      	movs	r2, #15
10040bba:	4002      	ands	r2, r0
10040bbc:	2a04      	cmp	r2, #4
10040bbe:	d005      	beq.n	10040bcc <__aeabi_dmul+0x148>
10040bc0:	1d02      	adds	r2, r0, #4
10040bc2:	4282      	cmp	r2, r0
10040bc4:	4180      	sbcs	r0, r0
10040bc6:	4240      	negs	r0, r0
10040bc8:	1824      	adds	r4, r4, r0
10040bca:	0010      	movs	r0, r2
10040bcc:	01e2      	lsls	r2, r4, #7
10040bce:	d506      	bpl.n	10040bde <__aeabi_dmul+0x15a>
10040bd0:	4b74      	ldr	r3, [pc, #464]	@ (10040da4 <__aeabi_dmul+0x320>)
10040bd2:	9a01      	ldr	r2, [sp, #4]
10040bd4:	401c      	ands	r4, r3
10040bd6:	2380      	movs	r3, #128	@ 0x80
10040bd8:	4694      	mov	ip, r2
10040bda:	00db      	lsls	r3, r3, #3
10040bdc:	4463      	add	r3, ip
10040bde:	4a72      	ldr	r2, [pc, #456]	@ (10040da8 <__aeabi_dmul+0x324>)
10040be0:	4293      	cmp	r3, r2
10040be2:	dc6b      	bgt.n	10040cbc <__aeabi_dmul+0x238>
10040be4:	0762      	lsls	r2, r4, #29
10040be6:	08c0      	lsrs	r0, r0, #3
10040be8:	0264      	lsls	r4, r4, #9
10040bea:	055b      	lsls	r3, r3, #21
10040bec:	4302      	orrs	r2, r0
10040bee:	0b24      	lsrs	r4, r4, #12
10040bf0:	0d5b      	lsrs	r3, r3, #21
10040bf2:	e79d      	b.n	10040b30 <__aeabi_dmul+0xac>
10040bf4:	2190      	movs	r1, #144	@ 0x90
10040bf6:	0089      	lsls	r1, r1, #2
10040bf8:	420f      	tst	r7, r1
10040bfa:	d163      	bne.n	10040cc4 <__aeabi_dmul+0x240>
10040bfc:	2288      	movs	r2, #136	@ 0x88
10040bfe:	423a      	tst	r2, r7
10040c00:	d100      	bne.n	10040c04 <__aeabi_dmul+0x180>
10040c02:	e0d7      	b.n	10040db4 <__aeabi_dmul+0x330>
10040c04:	9b00      	ldr	r3, [sp, #0]
10040c06:	46a2      	mov	sl, r4
10040c08:	469b      	mov	fp, r3
10040c0a:	4681      	mov	r9, r0
10040c0c:	9602      	str	r6, [sp, #8]
10040c0e:	e7bf      	b.n	10040b90 <__aeabi_dmul+0x10c>
10040c10:	0023      	movs	r3, r4
10040c12:	4333      	orrs	r3, r6
10040c14:	d100      	bne.n	10040c18 <__aeabi_dmul+0x194>
10040c16:	e07f      	b.n	10040d18 <__aeabi_dmul+0x294>
10040c18:	2c00      	cmp	r4, #0
10040c1a:	d100      	bne.n	10040c1e <__aeabi_dmul+0x19a>
10040c1c:	e1ad      	b.n	10040f7a <__aeabi_dmul+0x4f6>
10040c1e:	0020      	movs	r0, r4
10040c20:	f7ff fcce 	bl	100405c0 <__clzsi2>
10040c24:	0002      	movs	r2, r0
10040c26:	0003      	movs	r3, r0
10040c28:	3a0b      	subs	r2, #11
10040c2a:	201d      	movs	r0, #29
10040c2c:	0019      	movs	r1, r3
10040c2e:	1a82      	subs	r2, r0, r2
10040c30:	0030      	movs	r0, r6
10040c32:	3908      	subs	r1, #8
10040c34:	40d0      	lsrs	r0, r2
10040c36:	408c      	lsls	r4, r1
10040c38:	4304      	orrs	r4, r0
10040c3a:	0030      	movs	r0, r6
10040c3c:	4088      	lsls	r0, r1
10040c3e:	4a5b      	ldr	r2, [pc, #364]	@ (10040dac <__aeabi_dmul+0x328>)
10040c40:	1aeb      	subs	r3, r5, r3
10040c42:	4694      	mov	ip, r2
10040c44:	4463      	add	r3, ip
10040c46:	1c5a      	adds	r2, r3, #1
10040c48:	9201      	str	r2, [sp, #4]
10040c4a:	4642      	mov	r2, r8
10040c4c:	2600      	movs	r6, #0
10040c4e:	2a0a      	cmp	r2, #10
10040c50:	dc00      	bgt.n	10040c54 <__aeabi_dmul+0x1d0>
10040c52:	e75a      	b.n	10040b0a <__aeabi_dmul+0x86>
10040c54:	e79c      	b.n	10040b90 <__aeabi_dmul+0x10c>
10040c56:	4653      	mov	r3, sl
10040c58:	4303      	orrs	r3, r0
10040c5a:	4699      	mov	r9, r3
10040c5c:	d054      	beq.n	10040d08 <__aeabi_dmul+0x284>
10040c5e:	4653      	mov	r3, sl
10040c60:	2b00      	cmp	r3, #0
10040c62:	d100      	bne.n	10040c66 <__aeabi_dmul+0x1e2>
10040c64:	e177      	b.n	10040f56 <__aeabi_dmul+0x4d2>
10040c66:	4650      	mov	r0, sl
10040c68:	f7ff fcaa 	bl	100405c0 <__clzsi2>
10040c6c:	230b      	movs	r3, #11
10040c6e:	425b      	negs	r3, r3
10040c70:	469c      	mov	ip, r3
10040c72:	0002      	movs	r2, r0
10040c74:	4484      	add	ip, r0
10040c76:	0011      	movs	r1, r2
10040c78:	4650      	mov	r0, sl
10040c7a:	3908      	subs	r1, #8
10040c7c:	4088      	lsls	r0, r1
10040c7e:	231d      	movs	r3, #29
10040c80:	4680      	mov	r8, r0
10040c82:	4660      	mov	r0, ip
10040c84:	1a1b      	subs	r3, r3, r0
10040c86:	0020      	movs	r0, r4
10040c88:	40d8      	lsrs	r0, r3
10040c8a:	0003      	movs	r3, r0
10040c8c:	4640      	mov	r0, r8
10040c8e:	4303      	orrs	r3, r0
10040c90:	469a      	mov	sl, r3
10040c92:	0023      	movs	r3, r4
10040c94:	408b      	lsls	r3, r1
10040c96:	4699      	mov	r9, r3
10040c98:	2300      	movs	r3, #0
10040c9a:	4d44      	ldr	r5, [pc, #272]	@ (10040dac <__aeabi_dmul+0x328>)
10040c9c:	4698      	mov	r8, r3
10040c9e:	1aad      	subs	r5, r5, r2
10040ca0:	9302      	str	r3, [sp, #8]
10040ca2:	e715      	b.n	10040ad0 <__aeabi_dmul+0x4c>
10040ca4:	4652      	mov	r2, sl
10040ca6:	4302      	orrs	r2, r0
10040ca8:	4691      	mov	r9, r2
10040caa:	d126      	bne.n	10040cfa <__aeabi_dmul+0x276>
10040cac:	2200      	movs	r2, #0
10040cae:	001d      	movs	r5, r3
10040cb0:	2302      	movs	r3, #2
10040cb2:	4692      	mov	sl, r2
10040cb4:	3208      	adds	r2, #8
10040cb6:	4690      	mov	r8, r2
10040cb8:	9302      	str	r3, [sp, #8]
10040cba:	e709      	b.n	10040ad0 <__aeabi_dmul+0x4c>
10040cbc:	2400      	movs	r4, #0
10040cbe:	2200      	movs	r2, #0
10040cc0:	4b35      	ldr	r3, [pc, #212]	@ (10040d98 <__aeabi_dmul+0x314>)
10040cc2:	e735      	b.n	10040b30 <__aeabi_dmul+0xac>
10040cc4:	2300      	movs	r3, #0
10040cc6:	2480      	movs	r4, #128	@ 0x80
10040cc8:	469b      	mov	fp, r3
10040cca:	0324      	lsls	r4, r4, #12
10040ccc:	4b32      	ldr	r3, [pc, #200]	@ (10040d98 <__aeabi_dmul+0x314>)
10040cce:	e72f      	b.n	10040b30 <__aeabi_dmul+0xac>
10040cd0:	2202      	movs	r2, #2
10040cd2:	4641      	mov	r1, r8
10040cd4:	4311      	orrs	r1, r2
10040cd6:	2280      	movs	r2, #128	@ 0x80
10040cd8:	0112      	lsls	r2, r2, #4
10040cda:	4694      	mov	ip, r2
10040cdc:	002a      	movs	r2, r5
10040cde:	4462      	add	r2, ip
10040ce0:	4688      	mov	r8, r1
10040ce2:	9201      	str	r2, [sp, #4]
10040ce4:	290a      	cmp	r1, #10
10040ce6:	dd00      	ble.n	10040cea <__aeabi_dmul+0x266>
10040ce8:	e752      	b.n	10040b90 <__aeabi_dmul+0x10c>
10040cea:	465a      	mov	r2, fp
10040cec:	2000      	movs	r0, #0
10040cee:	9900      	ldr	r1, [sp, #0]
10040cf0:	0004      	movs	r4, r0
10040cf2:	404a      	eors	r2, r1
10040cf4:	4693      	mov	fp, r2
10040cf6:	2602      	movs	r6, #2
10040cf8:	e70b      	b.n	10040b12 <__aeabi_dmul+0x8e>
10040cfa:	220c      	movs	r2, #12
10040cfc:	001d      	movs	r5, r3
10040cfe:	2303      	movs	r3, #3
10040d00:	4681      	mov	r9, r0
10040d02:	4690      	mov	r8, r2
10040d04:	9302      	str	r3, [sp, #8]
10040d06:	e6e3      	b.n	10040ad0 <__aeabi_dmul+0x4c>
10040d08:	2300      	movs	r3, #0
10040d0a:	469a      	mov	sl, r3
10040d0c:	3304      	adds	r3, #4
10040d0e:	4698      	mov	r8, r3
10040d10:	3b03      	subs	r3, #3
10040d12:	2500      	movs	r5, #0
10040d14:	9302      	str	r3, [sp, #8]
10040d16:	e6db      	b.n	10040ad0 <__aeabi_dmul+0x4c>
10040d18:	4642      	mov	r2, r8
10040d1a:	3301      	adds	r3, #1
10040d1c:	431a      	orrs	r2, r3
10040d1e:	002b      	movs	r3, r5
10040d20:	4690      	mov	r8, r2
10040d22:	1c5a      	adds	r2, r3, #1
10040d24:	9201      	str	r2, [sp, #4]
10040d26:	4642      	mov	r2, r8
10040d28:	2400      	movs	r4, #0
10040d2a:	2000      	movs	r0, #0
10040d2c:	2601      	movs	r6, #1
10040d2e:	2a0a      	cmp	r2, #10
10040d30:	dc00      	bgt.n	10040d34 <__aeabi_dmul+0x2b0>
10040d32:	e6ea      	b.n	10040b0a <__aeabi_dmul+0x86>
10040d34:	e72c      	b.n	10040b90 <__aeabi_dmul+0x10c>
10040d36:	2201      	movs	r2, #1
10040d38:	1ad2      	subs	r2, r2, r3
10040d3a:	2a38      	cmp	r2, #56	@ 0x38
10040d3c:	dd00      	ble.n	10040d40 <__aeabi_dmul+0x2bc>
10040d3e:	e6f4      	b.n	10040b2a <__aeabi_dmul+0xa6>
10040d40:	2a1f      	cmp	r2, #31
10040d42:	dc00      	bgt.n	10040d46 <__aeabi_dmul+0x2c2>
10040d44:	e12a      	b.n	10040f9c <__aeabi_dmul+0x518>
10040d46:	211f      	movs	r1, #31
10040d48:	4249      	negs	r1, r1
10040d4a:	1acb      	subs	r3, r1, r3
10040d4c:	0021      	movs	r1, r4
10040d4e:	40d9      	lsrs	r1, r3
10040d50:	000b      	movs	r3, r1
10040d52:	2a20      	cmp	r2, #32
10040d54:	d005      	beq.n	10040d62 <__aeabi_dmul+0x2de>
10040d56:	4a16      	ldr	r2, [pc, #88]	@ (10040db0 <__aeabi_dmul+0x32c>)
10040d58:	9d01      	ldr	r5, [sp, #4]
10040d5a:	4694      	mov	ip, r2
10040d5c:	4465      	add	r5, ip
10040d5e:	40ac      	lsls	r4, r5
10040d60:	4320      	orrs	r0, r4
10040d62:	1e42      	subs	r2, r0, #1
10040d64:	4190      	sbcs	r0, r2
10040d66:	4318      	orrs	r0, r3
10040d68:	2307      	movs	r3, #7
10040d6a:	0019      	movs	r1, r3
10040d6c:	2400      	movs	r4, #0
10040d6e:	4001      	ands	r1, r0
10040d70:	4203      	tst	r3, r0
10040d72:	d00c      	beq.n	10040d8e <__aeabi_dmul+0x30a>
10040d74:	230f      	movs	r3, #15
10040d76:	4003      	ands	r3, r0
10040d78:	2b04      	cmp	r3, #4
10040d7a:	d100      	bne.n	10040d7e <__aeabi_dmul+0x2fa>
10040d7c:	e140      	b.n	10041000 <__aeabi_dmul+0x57c>
10040d7e:	1d03      	adds	r3, r0, #4
10040d80:	4283      	cmp	r3, r0
10040d82:	41a4      	sbcs	r4, r4
10040d84:	0018      	movs	r0, r3
10040d86:	4264      	negs	r4, r4
10040d88:	0761      	lsls	r1, r4, #29
10040d8a:	0264      	lsls	r4, r4, #9
10040d8c:	0b24      	lsrs	r4, r4, #12
10040d8e:	08c2      	lsrs	r2, r0, #3
10040d90:	2300      	movs	r3, #0
10040d92:	430a      	orrs	r2, r1
10040d94:	e6cc      	b.n	10040b30 <__aeabi_dmul+0xac>
10040d96:	46c0      	nop			@ (mov r8, r8)
10040d98:	000007ff 	.word	0x000007ff
10040d9c:	fffffc01 	.word	0xfffffc01
10040da0:	000003ff 	.word	0x000003ff
10040da4:	feffffff 	.word	0xfeffffff
10040da8:	000007fe 	.word	0x000007fe
10040dac:	fffffc0d 	.word	0xfffffc0d
10040db0:	0000043e 	.word	0x0000043e
10040db4:	4649      	mov	r1, r9
10040db6:	464a      	mov	r2, r9
10040db8:	0409      	lsls	r1, r1, #16
10040dba:	0c09      	lsrs	r1, r1, #16
10040dbc:	000d      	movs	r5, r1
10040dbe:	0c16      	lsrs	r6, r2, #16
10040dc0:	0c02      	lsrs	r2, r0, #16
10040dc2:	0400      	lsls	r0, r0, #16
10040dc4:	0c00      	lsrs	r0, r0, #16
10040dc6:	4345      	muls	r5, r0
10040dc8:	46ac      	mov	ip, r5
10040dca:	0005      	movs	r5, r0
10040dcc:	4375      	muls	r5, r6
10040dce:	46a8      	mov	r8, r5
10040dd0:	0015      	movs	r5, r2
10040dd2:	000f      	movs	r7, r1
10040dd4:	4375      	muls	r5, r6
10040dd6:	9200      	str	r2, [sp, #0]
10040dd8:	9502      	str	r5, [sp, #8]
10040dda:	002a      	movs	r2, r5
10040ddc:	9d00      	ldr	r5, [sp, #0]
10040dde:	436f      	muls	r7, r5
10040de0:	4665      	mov	r5, ip
10040de2:	0c2d      	lsrs	r5, r5, #16
10040de4:	46a9      	mov	r9, r5
10040de6:	4447      	add	r7, r8
10040de8:	444f      	add	r7, r9
10040dea:	45b8      	cmp	r8, r7
10040dec:	d905      	bls.n	10040dfa <__aeabi_dmul+0x376>
10040dee:	0015      	movs	r5, r2
10040df0:	2280      	movs	r2, #128	@ 0x80
10040df2:	0252      	lsls	r2, r2, #9
10040df4:	4690      	mov	r8, r2
10040df6:	4445      	add	r5, r8
10040df8:	9502      	str	r5, [sp, #8]
10040dfa:	0c3d      	lsrs	r5, r7, #16
10040dfc:	9503      	str	r5, [sp, #12]
10040dfe:	4665      	mov	r5, ip
10040e00:	042d      	lsls	r5, r5, #16
10040e02:	043f      	lsls	r7, r7, #16
10040e04:	0c2d      	lsrs	r5, r5, #16
10040e06:	46ac      	mov	ip, r5
10040e08:	003d      	movs	r5, r7
10040e0a:	4465      	add	r5, ip
10040e0c:	9504      	str	r5, [sp, #16]
10040e0e:	0c25      	lsrs	r5, r4, #16
10040e10:	0424      	lsls	r4, r4, #16
10040e12:	0c24      	lsrs	r4, r4, #16
10040e14:	46ac      	mov	ip, r5
10040e16:	0025      	movs	r5, r4
10040e18:	4375      	muls	r5, r6
10040e1a:	46a8      	mov	r8, r5
10040e1c:	4665      	mov	r5, ip
10040e1e:	000f      	movs	r7, r1
10040e20:	4369      	muls	r1, r5
10040e22:	4441      	add	r1, r8
10040e24:	4689      	mov	r9, r1
10040e26:	4367      	muls	r7, r4
10040e28:	0c39      	lsrs	r1, r7, #16
10040e2a:	4449      	add	r1, r9
10040e2c:	436e      	muls	r6, r5
10040e2e:	4588      	cmp	r8, r1
10040e30:	d903      	bls.n	10040e3a <__aeabi_dmul+0x3b6>
10040e32:	2280      	movs	r2, #128	@ 0x80
10040e34:	0252      	lsls	r2, r2, #9
10040e36:	4690      	mov	r8, r2
10040e38:	4446      	add	r6, r8
10040e3a:	0c0d      	lsrs	r5, r1, #16
10040e3c:	46a8      	mov	r8, r5
10040e3e:	0035      	movs	r5, r6
10040e40:	4445      	add	r5, r8
10040e42:	9505      	str	r5, [sp, #20]
10040e44:	9d03      	ldr	r5, [sp, #12]
10040e46:	043f      	lsls	r7, r7, #16
10040e48:	46a8      	mov	r8, r5
10040e4a:	0c3f      	lsrs	r7, r7, #16
10040e4c:	0409      	lsls	r1, r1, #16
10040e4e:	19c9      	adds	r1, r1, r7
10040e50:	4488      	add	r8, r1
10040e52:	4645      	mov	r5, r8
10040e54:	9503      	str	r5, [sp, #12]
10040e56:	4655      	mov	r5, sl
10040e58:	042e      	lsls	r6, r5, #16
10040e5a:	0c36      	lsrs	r6, r6, #16
10040e5c:	0c2f      	lsrs	r7, r5, #16
10040e5e:	0035      	movs	r5, r6
10040e60:	4345      	muls	r5, r0
10040e62:	4378      	muls	r0, r7
10040e64:	4681      	mov	r9, r0
10040e66:	0038      	movs	r0, r7
10040e68:	46a8      	mov	r8, r5
10040e6a:	0c2d      	lsrs	r5, r5, #16
10040e6c:	46aa      	mov	sl, r5
10040e6e:	9a00      	ldr	r2, [sp, #0]
10040e70:	4350      	muls	r0, r2
10040e72:	4372      	muls	r2, r6
10040e74:	444a      	add	r2, r9
10040e76:	4452      	add	r2, sl
10040e78:	4591      	cmp	r9, r2
10040e7a:	d903      	bls.n	10040e84 <__aeabi_dmul+0x400>
10040e7c:	2580      	movs	r5, #128	@ 0x80
10040e7e:	026d      	lsls	r5, r5, #9
10040e80:	46a9      	mov	r9, r5
10040e82:	4448      	add	r0, r9
10040e84:	0c15      	lsrs	r5, r2, #16
10040e86:	46a9      	mov	r9, r5
10040e88:	4645      	mov	r5, r8
10040e8a:	042d      	lsls	r5, r5, #16
10040e8c:	0c2d      	lsrs	r5, r5, #16
10040e8e:	46a8      	mov	r8, r5
10040e90:	4665      	mov	r5, ip
10040e92:	437d      	muls	r5, r7
10040e94:	0412      	lsls	r2, r2, #16
10040e96:	4448      	add	r0, r9
10040e98:	4490      	add	r8, r2
10040e9a:	46a9      	mov	r9, r5
10040e9c:	0032      	movs	r2, r6
10040e9e:	4665      	mov	r5, ip
10040ea0:	4362      	muls	r2, r4
10040ea2:	436e      	muls	r6, r5
10040ea4:	437c      	muls	r4, r7
10040ea6:	0c17      	lsrs	r7, r2, #16
10040ea8:	1936      	adds	r6, r6, r4
10040eaa:	19bf      	adds	r7, r7, r6
10040eac:	42bc      	cmp	r4, r7
10040eae:	d903      	bls.n	10040eb8 <__aeabi_dmul+0x434>
10040eb0:	2480      	movs	r4, #128	@ 0x80
10040eb2:	0264      	lsls	r4, r4, #9
10040eb4:	46a4      	mov	ip, r4
10040eb6:	44e1      	add	r9, ip
10040eb8:	9c02      	ldr	r4, [sp, #8]
10040eba:	9e03      	ldr	r6, [sp, #12]
10040ebc:	46a4      	mov	ip, r4
10040ebe:	9d05      	ldr	r5, [sp, #20]
10040ec0:	4466      	add	r6, ip
10040ec2:	428e      	cmp	r6, r1
10040ec4:	4189      	sbcs	r1, r1
10040ec6:	46ac      	mov	ip, r5
10040ec8:	0412      	lsls	r2, r2, #16
10040eca:	043c      	lsls	r4, r7, #16
10040ecc:	0c12      	lsrs	r2, r2, #16
10040ece:	18a2      	adds	r2, r4, r2
10040ed0:	4462      	add	r2, ip
10040ed2:	4249      	negs	r1, r1
10040ed4:	1854      	adds	r4, r2, r1
10040ed6:	4446      	add	r6, r8
10040ed8:	46a4      	mov	ip, r4
10040eda:	4546      	cmp	r6, r8
10040edc:	41a4      	sbcs	r4, r4
10040ede:	4682      	mov	sl, r0
10040ee0:	4264      	negs	r4, r4
10040ee2:	46a0      	mov	r8, r4
10040ee4:	42aa      	cmp	r2, r5
10040ee6:	4192      	sbcs	r2, r2
10040ee8:	458c      	cmp	ip, r1
10040eea:	4189      	sbcs	r1, r1
10040eec:	44e2      	add	sl, ip
10040eee:	44d0      	add	r8, sl
10040ef0:	4249      	negs	r1, r1
10040ef2:	4252      	negs	r2, r2
10040ef4:	430a      	orrs	r2, r1
10040ef6:	45a0      	cmp	r8, r4
10040ef8:	41a4      	sbcs	r4, r4
10040efa:	4582      	cmp	sl, r0
10040efc:	4189      	sbcs	r1, r1
10040efe:	4264      	negs	r4, r4
10040f00:	4249      	negs	r1, r1
10040f02:	430c      	orrs	r4, r1
10040f04:	4641      	mov	r1, r8
10040f06:	0c3f      	lsrs	r7, r7, #16
10040f08:	19d2      	adds	r2, r2, r7
10040f0a:	1912      	adds	r2, r2, r4
10040f0c:	0dcc      	lsrs	r4, r1, #23
10040f0e:	9904      	ldr	r1, [sp, #16]
10040f10:	0270      	lsls	r0, r6, #9
10040f12:	4308      	orrs	r0, r1
10040f14:	1e41      	subs	r1, r0, #1
10040f16:	4188      	sbcs	r0, r1
10040f18:	4641      	mov	r1, r8
10040f1a:	444a      	add	r2, r9
10040f1c:	0df6      	lsrs	r6, r6, #23
10040f1e:	0252      	lsls	r2, r2, #9
10040f20:	4330      	orrs	r0, r6
10040f22:	0249      	lsls	r1, r1, #9
10040f24:	4314      	orrs	r4, r2
10040f26:	4308      	orrs	r0, r1
10040f28:	01d2      	lsls	r2, r2, #7
10040f2a:	d535      	bpl.n	10040f98 <__aeabi_dmul+0x514>
10040f2c:	2201      	movs	r2, #1
10040f2e:	0843      	lsrs	r3, r0, #1
10040f30:	4002      	ands	r2, r0
10040f32:	4313      	orrs	r3, r2
10040f34:	07e0      	lsls	r0, r4, #31
10040f36:	4318      	orrs	r0, r3
10040f38:	0864      	lsrs	r4, r4, #1
10040f3a:	e634      	b.n	10040ba6 <__aeabi_dmul+0x122>
10040f3c:	9b00      	ldr	r3, [sp, #0]
10040f3e:	46a2      	mov	sl, r4
10040f40:	469b      	mov	fp, r3
10040f42:	4681      	mov	r9, r0
10040f44:	2480      	movs	r4, #128	@ 0x80
10040f46:	4653      	mov	r3, sl
10040f48:	0324      	lsls	r4, r4, #12
10040f4a:	431c      	orrs	r4, r3
10040f4c:	0324      	lsls	r4, r4, #12
10040f4e:	464a      	mov	r2, r9
10040f50:	4b2e      	ldr	r3, [pc, #184]	@ (1004100c <__aeabi_dmul+0x588>)
10040f52:	0b24      	lsrs	r4, r4, #12
10040f54:	e5ec      	b.n	10040b30 <__aeabi_dmul+0xac>
10040f56:	f7ff fb33 	bl	100405c0 <__clzsi2>
10040f5a:	2315      	movs	r3, #21
10040f5c:	469c      	mov	ip, r3
10040f5e:	4484      	add	ip, r0
10040f60:	0002      	movs	r2, r0
10040f62:	4663      	mov	r3, ip
10040f64:	3220      	adds	r2, #32
10040f66:	2b1c      	cmp	r3, #28
10040f68:	dc00      	bgt.n	10040f6c <__aeabi_dmul+0x4e8>
10040f6a:	e684      	b.n	10040c76 <__aeabi_dmul+0x1f2>
10040f6c:	2300      	movs	r3, #0
10040f6e:	4699      	mov	r9, r3
10040f70:	0023      	movs	r3, r4
10040f72:	3808      	subs	r0, #8
10040f74:	4083      	lsls	r3, r0
10040f76:	469a      	mov	sl, r3
10040f78:	e68e      	b.n	10040c98 <__aeabi_dmul+0x214>
10040f7a:	f7ff fb21 	bl	100405c0 <__clzsi2>
10040f7e:	0002      	movs	r2, r0
10040f80:	0003      	movs	r3, r0
10040f82:	3215      	adds	r2, #21
10040f84:	3320      	adds	r3, #32
10040f86:	2a1c      	cmp	r2, #28
10040f88:	dc00      	bgt.n	10040f8c <__aeabi_dmul+0x508>
10040f8a:	e64e      	b.n	10040c2a <__aeabi_dmul+0x1a6>
10040f8c:	0002      	movs	r2, r0
10040f8e:	0034      	movs	r4, r6
10040f90:	3a08      	subs	r2, #8
10040f92:	2000      	movs	r0, #0
10040f94:	4094      	lsls	r4, r2
10040f96:	e652      	b.n	10040c3e <__aeabi_dmul+0x1ba>
10040f98:	9301      	str	r3, [sp, #4]
10040f9a:	e604      	b.n	10040ba6 <__aeabi_dmul+0x122>
10040f9c:	4b1c      	ldr	r3, [pc, #112]	@ (10041010 <__aeabi_dmul+0x58c>)
10040f9e:	0021      	movs	r1, r4
10040fa0:	469c      	mov	ip, r3
10040fa2:	0003      	movs	r3, r0
10040fa4:	9d01      	ldr	r5, [sp, #4]
10040fa6:	40d3      	lsrs	r3, r2
10040fa8:	4465      	add	r5, ip
10040faa:	40a9      	lsls	r1, r5
10040fac:	4319      	orrs	r1, r3
10040fae:	0003      	movs	r3, r0
10040fb0:	40ab      	lsls	r3, r5
10040fb2:	1e58      	subs	r0, r3, #1
10040fb4:	4183      	sbcs	r3, r0
10040fb6:	4319      	orrs	r1, r3
10040fb8:	0008      	movs	r0, r1
10040fba:	40d4      	lsrs	r4, r2
10040fbc:	074b      	lsls	r3, r1, #29
10040fbe:	d009      	beq.n	10040fd4 <__aeabi_dmul+0x550>
10040fc0:	230f      	movs	r3, #15
10040fc2:	400b      	ands	r3, r1
10040fc4:	2b04      	cmp	r3, #4
10040fc6:	d005      	beq.n	10040fd4 <__aeabi_dmul+0x550>
10040fc8:	1d0b      	adds	r3, r1, #4
10040fca:	428b      	cmp	r3, r1
10040fcc:	4180      	sbcs	r0, r0
10040fce:	4240      	negs	r0, r0
10040fd0:	1824      	adds	r4, r4, r0
10040fd2:	0018      	movs	r0, r3
10040fd4:	0223      	lsls	r3, r4, #8
10040fd6:	d400      	bmi.n	10040fda <__aeabi_dmul+0x556>
10040fd8:	e6d6      	b.n	10040d88 <__aeabi_dmul+0x304>
10040fda:	2301      	movs	r3, #1
10040fdc:	2400      	movs	r4, #0
10040fde:	2200      	movs	r2, #0
10040fe0:	e5a6      	b.n	10040b30 <__aeabi_dmul+0xac>
10040fe2:	290f      	cmp	r1, #15
10040fe4:	d1aa      	bne.n	10040f3c <__aeabi_dmul+0x4b8>
10040fe6:	2380      	movs	r3, #128	@ 0x80
10040fe8:	4652      	mov	r2, sl
10040fea:	031b      	lsls	r3, r3, #12
10040fec:	421a      	tst	r2, r3
10040fee:	d0a9      	beq.n	10040f44 <__aeabi_dmul+0x4c0>
10040ff0:	421c      	tst	r4, r3
10040ff2:	d1a7      	bne.n	10040f44 <__aeabi_dmul+0x4c0>
10040ff4:	431c      	orrs	r4, r3
10040ff6:	9b00      	ldr	r3, [sp, #0]
10040ff8:	0002      	movs	r2, r0
10040ffa:	469b      	mov	fp, r3
10040ffc:	4b03      	ldr	r3, [pc, #12]	@ (1004100c <__aeabi_dmul+0x588>)
10040ffe:	e597      	b.n	10040b30 <__aeabi_dmul+0xac>
10041000:	2400      	movs	r4, #0
10041002:	e6c1      	b.n	10040d88 <__aeabi_dmul+0x304>
10041004:	2400      	movs	r4, #0
10041006:	4b01      	ldr	r3, [pc, #4]	@ (1004100c <__aeabi_dmul+0x588>)
10041008:	0022      	movs	r2, r4
1004100a:	e591      	b.n	10040b30 <__aeabi_dmul+0xac>
1004100c:	000007ff 	.word	0x000007ff
10041010:	0000041e 	.word	0x0000041e

10041014 <__aeabi_dsub>:
10041014:	b5f0      	push	{r4, r5, r6, r7, lr}
10041016:	464e      	mov	r6, r9
10041018:	4645      	mov	r5, r8
1004101a:	46de      	mov	lr, fp
1004101c:	4657      	mov	r7, sl
1004101e:	b5e0      	push	{r5, r6, r7, lr}
10041020:	b085      	sub	sp, #20
10041022:	9000      	str	r0, [sp, #0]
10041024:	9101      	str	r1, [sp, #4]
10041026:	030c      	lsls	r4, r1, #12
10041028:	004f      	lsls	r7, r1, #1
1004102a:	0fce      	lsrs	r6, r1, #31
1004102c:	0a61      	lsrs	r1, r4, #9
1004102e:	9c00      	ldr	r4, [sp, #0]
10041030:	46b0      	mov	r8, r6
10041032:	0f64      	lsrs	r4, r4, #29
10041034:	430c      	orrs	r4, r1
10041036:	9900      	ldr	r1, [sp, #0]
10041038:	0d7f      	lsrs	r7, r7, #21
1004103a:	00c8      	lsls	r0, r1, #3
1004103c:	0011      	movs	r1, r2
1004103e:	001a      	movs	r2, r3
10041040:	031b      	lsls	r3, r3, #12
10041042:	469c      	mov	ip, r3
10041044:	9100      	str	r1, [sp, #0]
10041046:	9201      	str	r2, [sp, #4]
10041048:	0051      	lsls	r1, r2, #1
1004104a:	0d4b      	lsrs	r3, r1, #21
1004104c:	4699      	mov	r9, r3
1004104e:	9b01      	ldr	r3, [sp, #4]
10041050:	9d00      	ldr	r5, [sp, #0]
10041052:	0fd9      	lsrs	r1, r3, #31
10041054:	4663      	mov	r3, ip
10041056:	0f6a      	lsrs	r2, r5, #29
10041058:	0a5b      	lsrs	r3, r3, #9
1004105a:	4313      	orrs	r3, r2
1004105c:	00ea      	lsls	r2, r5, #3
1004105e:	4694      	mov	ip, r2
10041060:	4693      	mov	fp, r2
10041062:	4ac1      	ldr	r2, [pc, #772]	@ (10041368 <__aeabi_dsub+0x354>)
10041064:	9003      	str	r0, [sp, #12]
10041066:	9302      	str	r3, [sp, #8]
10041068:	4591      	cmp	r9, r2
1004106a:	d100      	bne.n	1004106e <__aeabi_dsub+0x5a>
1004106c:	e0cd      	b.n	1004120a <__aeabi_dsub+0x1f6>
1004106e:	2501      	movs	r5, #1
10041070:	4069      	eors	r1, r5
10041072:	464d      	mov	r5, r9
10041074:	1b7d      	subs	r5, r7, r5
10041076:	46aa      	mov	sl, r5
10041078:	428e      	cmp	r6, r1
1004107a:	d100      	bne.n	1004107e <__aeabi_dsub+0x6a>
1004107c:	e080      	b.n	10041180 <__aeabi_dsub+0x16c>
1004107e:	2d00      	cmp	r5, #0
10041080:	dc00      	bgt.n	10041084 <__aeabi_dsub+0x70>
10041082:	e335      	b.n	100416f0 <__aeabi_dsub+0x6dc>
10041084:	4649      	mov	r1, r9
10041086:	2900      	cmp	r1, #0
10041088:	d100      	bne.n	1004108c <__aeabi_dsub+0x78>
1004108a:	e0df      	b.n	1004124c <__aeabi_dsub+0x238>
1004108c:	4297      	cmp	r7, r2
1004108e:	d100      	bne.n	10041092 <__aeabi_dsub+0x7e>
10041090:	e194      	b.n	100413bc <__aeabi_dsub+0x3a8>
10041092:	4652      	mov	r2, sl
10041094:	2501      	movs	r5, #1
10041096:	2a38      	cmp	r2, #56	@ 0x38
10041098:	dc19      	bgt.n	100410ce <__aeabi_dsub+0xba>
1004109a:	2280      	movs	r2, #128	@ 0x80
1004109c:	9b02      	ldr	r3, [sp, #8]
1004109e:	0412      	lsls	r2, r2, #16
100410a0:	4313      	orrs	r3, r2
100410a2:	9302      	str	r3, [sp, #8]
100410a4:	4652      	mov	r2, sl
100410a6:	2a1f      	cmp	r2, #31
100410a8:	dd00      	ble.n	100410ac <__aeabi_dsub+0x98>
100410aa:	e1e3      	b.n	10041474 <__aeabi_dsub+0x460>
100410ac:	4653      	mov	r3, sl
100410ae:	2220      	movs	r2, #32
100410b0:	4661      	mov	r1, ip
100410b2:	9d02      	ldr	r5, [sp, #8]
100410b4:	1ad2      	subs	r2, r2, r3
100410b6:	4095      	lsls	r5, r2
100410b8:	40d9      	lsrs	r1, r3
100410ba:	430d      	orrs	r5, r1
100410bc:	4661      	mov	r1, ip
100410be:	4091      	lsls	r1, r2
100410c0:	000a      	movs	r2, r1
100410c2:	1e51      	subs	r1, r2, #1
100410c4:	418a      	sbcs	r2, r1
100410c6:	4315      	orrs	r5, r2
100410c8:	9a02      	ldr	r2, [sp, #8]
100410ca:	40da      	lsrs	r2, r3
100410cc:	1aa4      	subs	r4, r4, r2
100410ce:	1b45      	subs	r5, r0, r5
100410d0:	42a8      	cmp	r0, r5
100410d2:	4180      	sbcs	r0, r0
100410d4:	4240      	negs	r0, r0
100410d6:	1a24      	subs	r4, r4, r0
100410d8:	0223      	lsls	r3, r4, #8
100410da:	d400      	bmi.n	100410de <__aeabi_dsub+0xca>
100410dc:	e13d      	b.n	1004135a <__aeabi_dsub+0x346>
100410de:	0264      	lsls	r4, r4, #9
100410e0:	0a64      	lsrs	r4, r4, #9
100410e2:	2c00      	cmp	r4, #0
100410e4:	d100      	bne.n	100410e8 <__aeabi_dsub+0xd4>
100410e6:	e147      	b.n	10041378 <__aeabi_dsub+0x364>
100410e8:	0020      	movs	r0, r4
100410ea:	f7ff fa69 	bl	100405c0 <__clzsi2>
100410ee:	0003      	movs	r3, r0
100410f0:	3b08      	subs	r3, #8
100410f2:	2120      	movs	r1, #32
100410f4:	0028      	movs	r0, r5
100410f6:	1aca      	subs	r2, r1, r3
100410f8:	40d0      	lsrs	r0, r2
100410fa:	409c      	lsls	r4, r3
100410fc:	0002      	movs	r2, r0
100410fe:	409d      	lsls	r5, r3
10041100:	4322      	orrs	r2, r4
10041102:	429f      	cmp	r7, r3
10041104:	dd00      	ble.n	10041108 <__aeabi_dsub+0xf4>
10041106:	e177      	b.n	100413f8 <__aeabi_dsub+0x3e4>
10041108:	1bd8      	subs	r0, r3, r7
1004110a:	3001      	adds	r0, #1
1004110c:	1a09      	subs	r1, r1, r0
1004110e:	002c      	movs	r4, r5
10041110:	408d      	lsls	r5, r1
10041112:	40c4      	lsrs	r4, r0
10041114:	1e6b      	subs	r3, r5, #1
10041116:	419d      	sbcs	r5, r3
10041118:	0013      	movs	r3, r2
1004111a:	40c2      	lsrs	r2, r0
1004111c:	408b      	lsls	r3, r1
1004111e:	4325      	orrs	r5, r4
10041120:	2700      	movs	r7, #0
10041122:	0014      	movs	r4, r2
10041124:	431d      	orrs	r5, r3
10041126:	076b      	lsls	r3, r5, #29
10041128:	d009      	beq.n	1004113e <__aeabi_dsub+0x12a>
1004112a:	230f      	movs	r3, #15
1004112c:	402b      	ands	r3, r5
1004112e:	2b04      	cmp	r3, #4
10041130:	d005      	beq.n	1004113e <__aeabi_dsub+0x12a>
10041132:	1d2b      	adds	r3, r5, #4
10041134:	42ab      	cmp	r3, r5
10041136:	41ad      	sbcs	r5, r5
10041138:	426d      	negs	r5, r5
1004113a:	1964      	adds	r4, r4, r5
1004113c:	001d      	movs	r5, r3
1004113e:	0223      	lsls	r3, r4, #8
10041140:	d400      	bmi.n	10041144 <__aeabi_dsub+0x130>
10041142:	e140      	b.n	100413c6 <__aeabi_dsub+0x3b2>
10041144:	4a88      	ldr	r2, [pc, #544]	@ (10041368 <__aeabi_dsub+0x354>)
10041146:	3701      	adds	r7, #1
10041148:	4297      	cmp	r7, r2
1004114a:	d100      	bne.n	1004114e <__aeabi_dsub+0x13a>
1004114c:	e101      	b.n	10041352 <__aeabi_dsub+0x33e>
1004114e:	2601      	movs	r6, #1
10041150:	4643      	mov	r3, r8
10041152:	4986      	ldr	r1, [pc, #536]	@ (1004136c <__aeabi_dsub+0x358>)
10041154:	08ed      	lsrs	r5, r5, #3
10041156:	4021      	ands	r1, r4
10041158:	074a      	lsls	r2, r1, #29
1004115a:	432a      	orrs	r2, r5
1004115c:	057c      	lsls	r4, r7, #21
1004115e:	024d      	lsls	r5, r1, #9
10041160:	0b2d      	lsrs	r5, r5, #12
10041162:	0d64      	lsrs	r4, r4, #21
10041164:	401e      	ands	r6, r3
10041166:	0524      	lsls	r4, r4, #20
10041168:	432c      	orrs	r4, r5
1004116a:	07f6      	lsls	r6, r6, #31
1004116c:	4334      	orrs	r4, r6
1004116e:	0010      	movs	r0, r2
10041170:	0021      	movs	r1, r4
10041172:	b005      	add	sp, #20
10041174:	bcf0      	pop	{r4, r5, r6, r7}
10041176:	46bb      	mov	fp, r7
10041178:	46b2      	mov	sl, r6
1004117a:	46a9      	mov	r9, r5
1004117c:	46a0      	mov	r8, r4
1004117e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10041180:	2d00      	cmp	r5, #0
10041182:	dc00      	bgt.n	10041186 <__aeabi_dsub+0x172>
10041184:	e2d0      	b.n	10041728 <__aeabi_dsub+0x714>
10041186:	4649      	mov	r1, r9
10041188:	2900      	cmp	r1, #0
1004118a:	d000      	beq.n	1004118e <__aeabi_dsub+0x17a>
1004118c:	e0d4      	b.n	10041338 <__aeabi_dsub+0x324>
1004118e:	4661      	mov	r1, ip
10041190:	9b02      	ldr	r3, [sp, #8]
10041192:	4319      	orrs	r1, r3
10041194:	d100      	bne.n	10041198 <__aeabi_dsub+0x184>
10041196:	e12b      	b.n	100413f0 <__aeabi_dsub+0x3dc>
10041198:	1e69      	subs	r1, r5, #1
1004119a:	2d01      	cmp	r5, #1
1004119c:	d100      	bne.n	100411a0 <__aeabi_dsub+0x18c>
1004119e:	e1d9      	b.n	10041554 <__aeabi_dsub+0x540>
100411a0:	4295      	cmp	r5, r2
100411a2:	d100      	bne.n	100411a6 <__aeabi_dsub+0x192>
100411a4:	e10a      	b.n	100413bc <__aeabi_dsub+0x3a8>
100411a6:	2501      	movs	r5, #1
100411a8:	2938      	cmp	r1, #56	@ 0x38
100411aa:	dc17      	bgt.n	100411dc <__aeabi_dsub+0x1c8>
100411ac:	468a      	mov	sl, r1
100411ae:	4653      	mov	r3, sl
100411b0:	2b1f      	cmp	r3, #31
100411b2:	dd00      	ble.n	100411b6 <__aeabi_dsub+0x1a2>
100411b4:	e1e7      	b.n	10041586 <__aeabi_dsub+0x572>
100411b6:	2220      	movs	r2, #32
100411b8:	1ad2      	subs	r2, r2, r3
100411ba:	9b02      	ldr	r3, [sp, #8]
100411bc:	4661      	mov	r1, ip
100411be:	4093      	lsls	r3, r2
100411c0:	001d      	movs	r5, r3
100411c2:	4653      	mov	r3, sl
100411c4:	40d9      	lsrs	r1, r3
100411c6:	4663      	mov	r3, ip
100411c8:	4093      	lsls	r3, r2
100411ca:	001a      	movs	r2, r3
100411cc:	430d      	orrs	r5, r1
100411ce:	1e51      	subs	r1, r2, #1
100411d0:	418a      	sbcs	r2, r1
100411d2:	4653      	mov	r3, sl
100411d4:	4315      	orrs	r5, r2
100411d6:	9a02      	ldr	r2, [sp, #8]
100411d8:	40da      	lsrs	r2, r3
100411da:	18a4      	adds	r4, r4, r2
100411dc:	182d      	adds	r5, r5, r0
100411de:	4285      	cmp	r5, r0
100411e0:	4180      	sbcs	r0, r0
100411e2:	4240      	negs	r0, r0
100411e4:	1824      	adds	r4, r4, r0
100411e6:	0223      	lsls	r3, r4, #8
100411e8:	d400      	bmi.n	100411ec <__aeabi_dsub+0x1d8>
100411ea:	e0b6      	b.n	1004135a <__aeabi_dsub+0x346>
100411ec:	4b5e      	ldr	r3, [pc, #376]	@ (10041368 <__aeabi_dsub+0x354>)
100411ee:	3701      	adds	r7, #1
100411f0:	429f      	cmp	r7, r3
100411f2:	d100      	bne.n	100411f6 <__aeabi_dsub+0x1e2>
100411f4:	e0ad      	b.n	10041352 <__aeabi_dsub+0x33e>
100411f6:	2101      	movs	r1, #1
100411f8:	4b5c      	ldr	r3, [pc, #368]	@ (1004136c <__aeabi_dsub+0x358>)
100411fa:	086a      	lsrs	r2, r5, #1
100411fc:	401c      	ands	r4, r3
100411fe:	4029      	ands	r1, r5
10041200:	430a      	orrs	r2, r1
10041202:	07e5      	lsls	r5, r4, #31
10041204:	4315      	orrs	r5, r2
10041206:	0864      	lsrs	r4, r4, #1
10041208:	e78d      	b.n	10041126 <__aeabi_dsub+0x112>
1004120a:	4a59      	ldr	r2, [pc, #356]	@ (10041370 <__aeabi_dsub+0x35c>)
1004120c:	9b02      	ldr	r3, [sp, #8]
1004120e:	4692      	mov	sl, r2
10041210:	4662      	mov	r2, ip
10041212:	44ba      	add	sl, r7
10041214:	431a      	orrs	r2, r3
10041216:	d02c      	beq.n	10041272 <__aeabi_dsub+0x25e>
10041218:	428e      	cmp	r6, r1
1004121a:	d02e      	beq.n	1004127a <__aeabi_dsub+0x266>
1004121c:	4652      	mov	r2, sl
1004121e:	2a00      	cmp	r2, #0
10041220:	d060      	beq.n	100412e4 <__aeabi_dsub+0x2d0>
10041222:	2f00      	cmp	r7, #0
10041224:	d100      	bne.n	10041228 <__aeabi_dsub+0x214>
10041226:	e0db      	b.n	100413e0 <__aeabi_dsub+0x3cc>
10041228:	4663      	mov	r3, ip
1004122a:	000e      	movs	r6, r1
1004122c:	9c02      	ldr	r4, [sp, #8]
1004122e:	08d8      	lsrs	r0, r3, #3
10041230:	0762      	lsls	r2, r4, #29
10041232:	4302      	orrs	r2, r0
10041234:	08e4      	lsrs	r4, r4, #3
10041236:	0013      	movs	r3, r2
10041238:	4323      	orrs	r3, r4
1004123a:	d100      	bne.n	1004123e <__aeabi_dsub+0x22a>
1004123c:	e254      	b.n	100416e8 <__aeabi_dsub+0x6d4>
1004123e:	2580      	movs	r5, #128	@ 0x80
10041240:	032d      	lsls	r5, r5, #12
10041242:	4325      	orrs	r5, r4
10041244:	032d      	lsls	r5, r5, #12
10041246:	4c48      	ldr	r4, [pc, #288]	@ (10041368 <__aeabi_dsub+0x354>)
10041248:	0b2d      	lsrs	r5, r5, #12
1004124a:	e78c      	b.n	10041166 <__aeabi_dsub+0x152>
1004124c:	4661      	mov	r1, ip
1004124e:	9b02      	ldr	r3, [sp, #8]
10041250:	4319      	orrs	r1, r3
10041252:	d100      	bne.n	10041256 <__aeabi_dsub+0x242>
10041254:	e0cc      	b.n	100413f0 <__aeabi_dsub+0x3dc>
10041256:	0029      	movs	r1, r5
10041258:	3901      	subs	r1, #1
1004125a:	2d01      	cmp	r5, #1
1004125c:	d100      	bne.n	10041260 <__aeabi_dsub+0x24c>
1004125e:	e188      	b.n	10041572 <__aeabi_dsub+0x55e>
10041260:	4295      	cmp	r5, r2
10041262:	d100      	bne.n	10041266 <__aeabi_dsub+0x252>
10041264:	e0aa      	b.n	100413bc <__aeabi_dsub+0x3a8>
10041266:	2501      	movs	r5, #1
10041268:	2938      	cmp	r1, #56	@ 0x38
1004126a:	dd00      	ble.n	1004126e <__aeabi_dsub+0x25a>
1004126c:	e72f      	b.n	100410ce <__aeabi_dsub+0xba>
1004126e:	468a      	mov	sl, r1
10041270:	e718      	b.n	100410a4 <__aeabi_dsub+0x90>
10041272:	2201      	movs	r2, #1
10041274:	4051      	eors	r1, r2
10041276:	428e      	cmp	r6, r1
10041278:	d1d0      	bne.n	1004121c <__aeabi_dsub+0x208>
1004127a:	4653      	mov	r3, sl
1004127c:	2b00      	cmp	r3, #0
1004127e:	d100      	bne.n	10041282 <__aeabi_dsub+0x26e>
10041280:	e0be      	b.n	10041400 <__aeabi_dsub+0x3ec>
10041282:	2f00      	cmp	r7, #0
10041284:	d000      	beq.n	10041288 <__aeabi_dsub+0x274>
10041286:	e138      	b.n	100414fa <__aeabi_dsub+0x4e6>
10041288:	46ca      	mov	sl, r9
1004128a:	0022      	movs	r2, r4
1004128c:	4302      	orrs	r2, r0
1004128e:	d100      	bne.n	10041292 <__aeabi_dsub+0x27e>
10041290:	e1e2      	b.n	10041658 <__aeabi_dsub+0x644>
10041292:	4653      	mov	r3, sl
10041294:	1e59      	subs	r1, r3, #1
10041296:	2b01      	cmp	r3, #1
10041298:	d100      	bne.n	1004129c <__aeabi_dsub+0x288>
1004129a:	e20d      	b.n	100416b8 <__aeabi_dsub+0x6a4>
1004129c:	4a32      	ldr	r2, [pc, #200]	@ (10041368 <__aeabi_dsub+0x354>)
1004129e:	4592      	cmp	sl, r2
100412a0:	d100      	bne.n	100412a4 <__aeabi_dsub+0x290>
100412a2:	e1d2      	b.n	1004164a <__aeabi_dsub+0x636>
100412a4:	2701      	movs	r7, #1
100412a6:	2938      	cmp	r1, #56	@ 0x38
100412a8:	dc13      	bgt.n	100412d2 <__aeabi_dsub+0x2be>
100412aa:	291f      	cmp	r1, #31
100412ac:	dd00      	ble.n	100412b0 <__aeabi_dsub+0x29c>
100412ae:	e1ee      	b.n	1004168e <__aeabi_dsub+0x67a>
100412b0:	2220      	movs	r2, #32
100412b2:	9b02      	ldr	r3, [sp, #8]
100412b4:	1a52      	subs	r2, r2, r1
100412b6:	0025      	movs	r5, r4
100412b8:	0007      	movs	r7, r0
100412ba:	469a      	mov	sl, r3
100412bc:	40cc      	lsrs	r4, r1
100412be:	4090      	lsls	r0, r2
100412c0:	4095      	lsls	r5, r2
100412c2:	40cf      	lsrs	r7, r1
100412c4:	44a2      	add	sl, r4
100412c6:	1e42      	subs	r2, r0, #1
100412c8:	4190      	sbcs	r0, r2
100412ca:	4653      	mov	r3, sl
100412cc:	432f      	orrs	r7, r5
100412ce:	4307      	orrs	r7, r0
100412d0:	9302      	str	r3, [sp, #8]
100412d2:	003d      	movs	r5, r7
100412d4:	4465      	add	r5, ip
100412d6:	4565      	cmp	r5, ip
100412d8:	4192      	sbcs	r2, r2
100412da:	9b02      	ldr	r3, [sp, #8]
100412dc:	4252      	negs	r2, r2
100412de:	464f      	mov	r7, r9
100412e0:	18d4      	adds	r4, r2, r3
100412e2:	e780      	b.n	100411e6 <__aeabi_dsub+0x1d2>
100412e4:	4a23      	ldr	r2, [pc, #140]	@ (10041374 <__aeabi_dsub+0x360>)
100412e6:	1c7d      	adds	r5, r7, #1
100412e8:	4215      	tst	r5, r2
100412ea:	d000      	beq.n	100412ee <__aeabi_dsub+0x2da>
100412ec:	e0aa      	b.n	10041444 <__aeabi_dsub+0x430>
100412ee:	4662      	mov	r2, ip
100412f0:	0025      	movs	r5, r4
100412f2:	9b02      	ldr	r3, [sp, #8]
100412f4:	4305      	orrs	r5, r0
100412f6:	431a      	orrs	r2, r3
100412f8:	2f00      	cmp	r7, #0
100412fa:	d000      	beq.n	100412fe <__aeabi_dsub+0x2ea>
100412fc:	e0f5      	b.n	100414ea <__aeabi_dsub+0x4d6>
100412fe:	2d00      	cmp	r5, #0
10041300:	d100      	bne.n	10041304 <__aeabi_dsub+0x2f0>
10041302:	e16b      	b.n	100415dc <__aeabi_dsub+0x5c8>
10041304:	2a00      	cmp	r2, #0
10041306:	d100      	bne.n	1004130a <__aeabi_dsub+0x2f6>
10041308:	e152      	b.n	100415b0 <__aeabi_dsub+0x59c>
1004130a:	4663      	mov	r3, ip
1004130c:	1ac5      	subs	r5, r0, r3
1004130e:	9b02      	ldr	r3, [sp, #8]
10041310:	1ae2      	subs	r2, r4, r3
10041312:	42a8      	cmp	r0, r5
10041314:	419b      	sbcs	r3, r3
10041316:	425b      	negs	r3, r3
10041318:	1ad3      	subs	r3, r2, r3
1004131a:	021a      	lsls	r2, r3, #8
1004131c:	d400      	bmi.n	10041320 <__aeabi_dsub+0x30c>
1004131e:	e1d5      	b.n	100416cc <__aeabi_dsub+0x6b8>
10041320:	4663      	mov	r3, ip
10041322:	1a1d      	subs	r5, r3, r0
10041324:	45ac      	cmp	ip, r5
10041326:	4192      	sbcs	r2, r2
10041328:	2601      	movs	r6, #1
1004132a:	9b02      	ldr	r3, [sp, #8]
1004132c:	4252      	negs	r2, r2
1004132e:	1b1c      	subs	r4, r3, r4
10041330:	4688      	mov	r8, r1
10041332:	1aa4      	subs	r4, r4, r2
10041334:	400e      	ands	r6, r1
10041336:	e6f6      	b.n	10041126 <__aeabi_dsub+0x112>
10041338:	4297      	cmp	r7, r2
1004133a:	d03f      	beq.n	100413bc <__aeabi_dsub+0x3a8>
1004133c:	4652      	mov	r2, sl
1004133e:	2501      	movs	r5, #1
10041340:	2a38      	cmp	r2, #56	@ 0x38
10041342:	dd00      	ble.n	10041346 <__aeabi_dsub+0x332>
10041344:	e74a      	b.n	100411dc <__aeabi_dsub+0x1c8>
10041346:	2280      	movs	r2, #128	@ 0x80
10041348:	9b02      	ldr	r3, [sp, #8]
1004134a:	0412      	lsls	r2, r2, #16
1004134c:	4313      	orrs	r3, r2
1004134e:	9302      	str	r3, [sp, #8]
10041350:	e72d      	b.n	100411ae <__aeabi_dsub+0x19a>
10041352:	003c      	movs	r4, r7
10041354:	2500      	movs	r5, #0
10041356:	2200      	movs	r2, #0
10041358:	e705      	b.n	10041166 <__aeabi_dsub+0x152>
1004135a:	2307      	movs	r3, #7
1004135c:	402b      	ands	r3, r5
1004135e:	2b00      	cmp	r3, #0
10041360:	d000      	beq.n	10041364 <__aeabi_dsub+0x350>
10041362:	e6e2      	b.n	1004112a <__aeabi_dsub+0x116>
10041364:	e06b      	b.n	1004143e <__aeabi_dsub+0x42a>
10041366:	46c0      	nop			@ (mov r8, r8)
10041368:	000007ff 	.word	0x000007ff
1004136c:	ff7fffff 	.word	0xff7fffff
10041370:	fffff801 	.word	0xfffff801
10041374:	000007fe 	.word	0x000007fe
10041378:	0028      	movs	r0, r5
1004137a:	f7ff f921 	bl	100405c0 <__clzsi2>
1004137e:	0003      	movs	r3, r0
10041380:	3318      	adds	r3, #24
10041382:	2b1f      	cmp	r3, #31
10041384:	dc00      	bgt.n	10041388 <__aeabi_dsub+0x374>
10041386:	e6b4      	b.n	100410f2 <__aeabi_dsub+0xde>
10041388:	002a      	movs	r2, r5
1004138a:	3808      	subs	r0, #8
1004138c:	4082      	lsls	r2, r0
1004138e:	429f      	cmp	r7, r3
10041390:	dd00      	ble.n	10041394 <__aeabi_dsub+0x380>
10041392:	e0b9      	b.n	10041508 <__aeabi_dsub+0x4f4>
10041394:	1bdb      	subs	r3, r3, r7
10041396:	1c58      	adds	r0, r3, #1
10041398:	281f      	cmp	r0, #31
1004139a:	dc00      	bgt.n	1004139e <__aeabi_dsub+0x38a>
1004139c:	e1a0      	b.n	100416e0 <__aeabi_dsub+0x6cc>
1004139e:	0015      	movs	r5, r2
100413a0:	3b1f      	subs	r3, #31
100413a2:	40dd      	lsrs	r5, r3
100413a4:	2820      	cmp	r0, #32
100413a6:	d005      	beq.n	100413b4 <__aeabi_dsub+0x3a0>
100413a8:	2340      	movs	r3, #64	@ 0x40
100413aa:	1a1b      	subs	r3, r3, r0
100413ac:	409a      	lsls	r2, r3
100413ae:	1e53      	subs	r3, r2, #1
100413b0:	419a      	sbcs	r2, r3
100413b2:	4315      	orrs	r5, r2
100413b4:	2307      	movs	r3, #7
100413b6:	2700      	movs	r7, #0
100413b8:	402b      	ands	r3, r5
100413ba:	e7d0      	b.n	1004135e <__aeabi_dsub+0x34a>
100413bc:	08c0      	lsrs	r0, r0, #3
100413be:	0762      	lsls	r2, r4, #29
100413c0:	4302      	orrs	r2, r0
100413c2:	08e4      	lsrs	r4, r4, #3
100413c4:	e737      	b.n	10041236 <__aeabi_dsub+0x222>
100413c6:	08ea      	lsrs	r2, r5, #3
100413c8:	0763      	lsls	r3, r4, #29
100413ca:	431a      	orrs	r2, r3
100413cc:	4bd3      	ldr	r3, [pc, #844]	@ (1004171c <__aeabi_dsub+0x708>)
100413ce:	08e4      	lsrs	r4, r4, #3
100413d0:	429f      	cmp	r7, r3
100413d2:	d100      	bne.n	100413d6 <__aeabi_dsub+0x3c2>
100413d4:	e72f      	b.n	10041236 <__aeabi_dsub+0x222>
100413d6:	0324      	lsls	r4, r4, #12
100413d8:	0b25      	lsrs	r5, r4, #12
100413da:	057c      	lsls	r4, r7, #21
100413dc:	0d64      	lsrs	r4, r4, #21
100413de:	e6c2      	b.n	10041166 <__aeabi_dsub+0x152>
100413e0:	46ca      	mov	sl, r9
100413e2:	0022      	movs	r2, r4
100413e4:	4302      	orrs	r2, r0
100413e6:	d158      	bne.n	1004149a <__aeabi_dsub+0x486>
100413e8:	4663      	mov	r3, ip
100413ea:	000e      	movs	r6, r1
100413ec:	9c02      	ldr	r4, [sp, #8]
100413ee:	9303      	str	r3, [sp, #12]
100413f0:	9b03      	ldr	r3, [sp, #12]
100413f2:	4657      	mov	r7, sl
100413f4:	08da      	lsrs	r2, r3, #3
100413f6:	e7e7      	b.n	100413c8 <__aeabi_dsub+0x3b4>
100413f8:	4cc9      	ldr	r4, [pc, #804]	@ (10041720 <__aeabi_dsub+0x70c>)
100413fa:	1aff      	subs	r7, r7, r3
100413fc:	4014      	ands	r4, r2
100413fe:	e692      	b.n	10041126 <__aeabi_dsub+0x112>
10041400:	4dc8      	ldr	r5, [pc, #800]	@ (10041724 <__aeabi_dsub+0x710>)
10041402:	1c7a      	adds	r2, r7, #1
10041404:	422a      	tst	r2, r5
10041406:	d000      	beq.n	1004140a <__aeabi_dsub+0x3f6>
10041408:	e084      	b.n	10041514 <__aeabi_dsub+0x500>
1004140a:	0022      	movs	r2, r4
1004140c:	4302      	orrs	r2, r0
1004140e:	2f00      	cmp	r7, #0
10041410:	d000      	beq.n	10041414 <__aeabi_dsub+0x400>
10041412:	e0ef      	b.n	100415f4 <__aeabi_dsub+0x5e0>
10041414:	2a00      	cmp	r2, #0
10041416:	d100      	bne.n	1004141a <__aeabi_dsub+0x406>
10041418:	e0e5      	b.n	100415e6 <__aeabi_dsub+0x5d2>
1004141a:	4662      	mov	r2, ip
1004141c:	9902      	ldr	r1, [sp, #8]
1004141e:	430a      	orrs	r2, r1
10041420:	d100      	bne.n	10041424 <__aeabi_dsub+0x410>
10041422:	e0c5      	b.n	100415b0 <__aeabi_dsub+0x59c>
10041424:	4663      	mov	r3, ip
10041426:	18c5      	adds	r5, r0, r3
10041428:	468c      	mov	ip, r1
1004142a:	4285      	cmp	r5, r0
1004142c:	4180      	sbcs	r0, r0
1004142e:	4464      	add	r4, ip
10041430:	4240      	negs	r0, r0
10041432:	1824      	adds	r4, r4, r0
10041434:	0223      	lsls	r3, r4, #8
10041436:	d502      	bpl.n	1004143e <__aeabi_dsub+0x42a>
10041438:	4bb9      	ldr	r3, [pc, #740]	@ (10041720 <__aeabi_dsub+0x70c>)
1004143a:	3701      	adds	r7, #1
1004143c:	401c      	ands	r4, r3
1004143e:	46ba      	mov	sl, r7
10041440:	9503      	str	r5, [sp, #12]
10041442:	e7d5      	b.n	100413f0 <__aeabi_dsub+0x3dc>
10041444:	4662      	mov	r2, ip
10041446:	1a85      	subs	r5, r0, r2
10041448:	42a8      	cmp	r0, r5
1004144a:	4192      	sbcs	r2, r2
1004144c:	4252      	negs	r2, r2
1004144e:	4691      	mov	r9, r2
10041450:	9b02      	ldr	r3, [sp, #8]
10041452:	1ae3      	subs	r3, r4, r3
10041454:	001a      	movs	r2, r3
10041456:	464b      	mov	r3, r9
10041458:	1ad2      	subs	r2, r2, r3
1004145a:	0013      	movs	r3, r2
1004145c:	4691      	mov	r9, r2
1004145e:	021a      	lsls	r2, r3, #8
10041460:	d46c      	bmi.n	1004153c <__aeabi_dsub+0x528>
10041462:	464a      	mov	r2, r9
10041464:	464c      	mov	r4, r9
10041466:	432a      	orrs	r2, r5
10041468:	d000      	beq.n	1004146c <__aeabi_dsub+0x458>
1004146a:	e63a      	b.n	100410e2 <__aeabi_dsub+0xce>
1004146c:	2600      	movs	r6, #0
1004146e:	2400      	movs	r4, #0
10041470:	2500      	movs	r5, #0
10041472:	e678      	b.n	10041166 <__aeabi_dsub+0x152>
10041474:	9902      	ldr	r1, [sp, #8]
10041476:	4653      	mov	r3, sl
10041478:	000d      	movs	r5, r1
1004147a:	3a20      	subs	r2, #32
1004147c:	40d5      	lsrs	r5, r2
1004147e:	2b20      	cmp	r3, #32
10041480:	d006      	beq.n	10041490 <__aeabi_dsub+0x47c>
10041482:	2240      	movs	r2, #64	@ 0x40
10041484:	1ad2      	subs	r2, r2, r3
10041486:	000b      	movs	r3, r1
10041488:	4093      	lsls	r3, r2
1004148a:	4662      	mov	r2, ip
1004148c:	431a      	orrs	r2, r3
1004148e:	4693      	mov	fp, r2
10041490:	465b      	mov	r3, fp
10041492:	1e5a      	subs	r2, r3, #1
10041494:	4193      	sbcs	r3, r2
10041496:	431d      	orrs	r5, r3
10041498:	e619      	b.n	100410ce <__aeabi_dsub+0xba>
1004149a:	4653      	mov	r3, sl
1004149c:	1e5a      	subs	r2, r3, #1
1004149e:	2b01      	cmp	r3, #1
100414a0:	d100      	bne.n	100414a4 <__aeabi_dsub+0x490>
100414a2:	e0c6      	b.n	10041632 <__aeabi_dsub+0x61e>
100414a4:	4e9d      	ldr	r6, [pc, #628]	@ (1004171c <__aeabi_dsub+0x708>)
100414a6:	45b2      	cmp	sl, r6
100414a8:	d100      	bne.n	100414ac <__aeabi_dsub+0x498>
100414aa:	e6bd      	b.n	10041228 <__aeabi_dsub+0x214>
100414ac:	4688      	mov	r8, r1
100414ae:	000e      	movs	r6, r1
100414b0:	2501      	movs	r5, #1
100414b2:	2a38      	cmp	r2, #56	@ 0x38
100414b4:	dc10      	bgt.n	100414d8 <__aeabi_dsub+0x4c4>
100414b6:	2a1f      	cmp	r2, #31
100414b8:	dc7f      	bgt.n	100415ba <__aeabi_dsub+0x5a6>
100414ba:	2120      	movs	r1, #32
100414bc:	0025      	movs	r5, r4
100414be:	1a89      	subs	r1, r1, r2
100414c0:	0007      	movs	r7, r0
100414c2:	4088      	lsls	r0, r1
100414c4:	408d      	lsls	r5, r1
100414c6:	40d7      	lsrs	r7, r2
100414c8:	40d4      	lsrs	r4, r2
100414ca:	1e41      	subs	r1, r0, #1
100414cc:	4188      	sbcs	r0, r1
100414ce:	9b02      	ldr	r3, [sp, #8]
100414d0:	433d      	orrs	r5, r7
100414d2:	1b1b      	subs	r3, r3, r4
100414d4:	4305      	orrs	r5, r0
100414d6:	9302      	str	r3, [sp, #8]
100414d8:	4662      	mov	r2, ip
100414da:	1b55      	subs	r5, r2, r5
100414dc:	45ac      	cmp	ip, r5
100414de:	4192      	sbcs	r2, r2
100414e0:	9b02      	ldr	r3, [sp, #8]
100414e2:	4252      	negs	r2, r2
100414e4:	464f      	mov	r7, r9
100414e6:	1a9c      	subs	r4, r3, r2
100414e8:	e5f6      	b.n	100410d8 <__aeabi_dsub+0xc4>
100414ea:	2d00      	cmp	r5, #0
100414ec:	d000      	beq.n	100414f0 <__aeabi_dsub+0x4dc>
100414ee:	e0b7      	b.n	10041660 <__aeabi_dsub+0x64c>
100414f0:	2a00      	cmp	r2, #0
100414f2:	d100      	bne.n	100414f6 <__aeabi_dsub+0x4e2>
100414f4:	e0f0      	b.n	100416d8 <__aeabi_dsub+0x6c4>
100414f6:	2601      	movs	r6, #1
100414f8:	400e      	ands	r6, r1
100414fa:	4663      	mov	r3, ip
100414fc:	9802      	ldr	r0, [sp, #8]
100414fe:	08d9      	lsrs	r1, r3, #3
10041500:	0742      	lsls	r2, r0, #29
10041502:	430a      	orrs	r2, r1
10041504:	08c4      	lsrs	r4, r0, #3
10041506:	e696      	b.n	10041236 <__aeabi_dsub+0x222>
10041508:	4c85      	ldr	r4, [pc, #532]	@ (10041720 <__aeabi_dsub+0x70c>)
1004150a:	1aff      	subs	r7, r7, r3
1004150c:	4014      	ands	r4, r2
1004150e:	0762      	lsls	r2, r4, #29
10041510:	08e4      	lsrs	r4, r4, #3
10041512:	e760      	b.n	100413d6 <__aeabi_dsub+0x3c2>
10041514:	4981      	ldr	r1, [pc, #516]	@ (1004171c <__aeabi_dsub+0x708>)
10041516:	428a      	cmp	r2, r1
10041518:	d100      	bne.n	1004151c <__aeabi_dsub+0x508>
1004151a:	e0c9      	b.n	100416b0 <__aeabi_dsub+0x69c>
1004151c:	4663      	mov	r3, ip
1004151e:	18c1      	adds	r1, r0, r3
10041520:	4281      	cmp	r1, r0
10041522:	4180      	sbcs	r0, r0
10041524:	9b02      	ldr	r3, [sp, #8]
10041526:	4240      	negs	r0, r0
10041528:	18e3      	adds	r3, r4, r3
1004152a:	181b      	adds	r3, r3, r0
1004152c:	07dd      	lsls	r5, r3, #31
1004152e:	085c      	lsrs	r4, r3, #1
10041530:	2307      	movs	r3, #7
10041532:	0849      	lsrs	r1, r1, #1
10041534:	430d      	orrs	r5, r1
10041536:	0017      	movs	r7, r2
10041538:	402b      	ands	r3, r5
1004153a:	e710      	b.n	1004135e <__aeabi_dsub+0x34a>
1004153c:	4663      	mov	r3, ip
1004153e:	1a1d      	subs	r5, r3, r0
10041540:	45ac      	cmp	ip, r5
10041542:	4192      	sbcs	r2, r2
10041544:	2601      	movs	r6, #1
10041546:	9b02      	ldr	r3, [sp, #8]
10041548:	4252      	negs	r2, r2
1004154a:	1b1c      	subs	r4, r3, r4
1004154c:	4688      	mov	r8, r1
1004154e:	1aa4      	subs	r4, r4, r2
10041550:	400e      	ands	r6, r1
10041552:	e5c6      	b.n	100410e2 <__aeabi_dsub+0xce>
10041554:	4663      	mov	r3, ip
10041556:	18c5      	adds	r5, r0, r3
10041558:	9b02      	ldr	r3, [sp, #8]
1004155a:	4285      	cmp	r5, r0
1004155c:	4180      	sbcs	r0, r0
1004155e:	469c      	mov	ip, r3
10041560:	4240      	negs	r0, r0
10041562:	4464      	add	r4, ip
10041564:	1824      	adds	r4, r4, r0
10041566:	2701      	movs	r7, #1
10041568:	0223      	lsls	r3, r4, #8
1004156a:	d400      	bmi.n	1004156e <__aeabi_dsub+0x55a>
1004156c:	e6f5      	b.n	1004135a <__aeabi_dsub+0x346>
1004156e:	2702      	movs	r7, #2
10041570:	e641      	b.n	100411f6 <__aeabi_dsub+0x1e2>
10041572:	4663      	mov	r3, ip
10041574:	1ac5      	subs	r5, r0, r3
10041576:	42a8      	cmp	r0, r5
10041578:	4180      	sbcs	r0, r0
1004157a:	9b02      	ldr	r3, [sp, #8]
1004157c:	4240      	negs	r0, r0
1004157e:	1ae4      	subs	r4, r4, r3
10041580:	2701      	movs	r7, #1
10041582:	1a24      	subs	r4, r4, r0
10041584:	e5a8      	b.n	100410d8 <__aeabi_dsub+0xc4>
10041586:	9d02      	ldr	r5, [sp, #8]
10041588:	4652      	mov	r2, sl
1004158a:	002b      	movs	r3, r5
1004158c:	3a20      	subs	r2, #32
1004158e:	40d3      	lsrs	r3, r2
10041590:	0019      	movs	r1, r3
10041592:	4653      	mov	r3, sl
10041594:	2b20      	cmp	r3, #32
10041596:	d006      	beq.n	100415a6 <__aeabi_dsub+0x592>
10041598:	2240      	movs	r2, #64	@ 0x40
1004159a:	1ad2      	subs	r2, r2, r3
1004159c:	002b      	movs	r3, r5
1004159e:	4093      	lsls	r3, r2
100415a0:	4662      	mov	r2, ip
100415a2:	431a      	orrs	r2, r3
100415a4:	4693      	mov	fp, r2
100415a6:	465d      	mov	r5, fp
100415a8:	1e6b      	subs	r3, r5, #1
100415aa:	419d      	sbcs	r5, r3
100415ac:	430d      	orrs	r5, r1
100415ae:	e615      	b.n	100411dc <__aeabi_dsub+0x1c8>
100415b0:	0762      	lsls	r2, r4, #29
100415b2:	08c0      	lsrs	r0, r0, #3
100415b4:	4302      	orrs	r2, r0
100415b6:	08e4      	lsrs	r4, r4, #3
100415b8:	e70d      	b.n	100413d6 <__aeabi_dsub+0x3c2>
100415ba:	0011      	movs	r1, r2
100415bc:	0027      	movs	r7, r4
100415be:	3920      	subs	r1, #32
100415c0:	40cf      	lsrs	r7, r1
100415c2:	2a20      	cmp	r2, #32
100415c4:	d005      	beq.n	100415d2 <__aeabi_dsub+0x5be>
100415c6:	2140      	movs	r1, #64	@ 0x40
100415c8:	1a8a      	subs	r2, r1, r2
100415ca:	4094      	lsls	r4, r2
100415cc:	0025      	movs	r5, r4
100415ce:	4305      	orrs	r5, r0
100415d0:	9503      	str	r5, [sp, #12]
100415d2:	9d03      	ldr	r5, [sp, #12]
100415d4:	1e6a      	subs	r2, r5, #1
100415d6:	4195      	sbcs	r5, r2
100415d8:	433d      	orrs	r5, r7
100415da:	e77d      	b.n	100414d8 <__aeabi_dsub+0x4c4>
100415dc:	2a00      	cmp	r2, #0
100415de:	d100      	bne.n	100415e2 <__aeabi_dsub+0x5ce>
100415e0:	e744      	b.n	1004146c <__aeabi_dsub+0x458>
100415e2:	2601      	movs	r6, #1
100415e4:	400e      	ands	r6, r1
100415e6:	4663      	mov	r3, ip
100415e8:	08d9      	lsrs	r1, r3, #3
100415ea:	9b02      	ldr	r3, [sp, #8]
100415ec:	075a      	lsls	r2, r3, #29
100415ee:	430a      	orrs	r2, r1
100415f0:	08dc      	lsrs	r4, r3, #3
100415f2:	e6f0      	b.n	100413d6 <__aeabi_dsub+0x3c2>
100415f4:	2a00      	cmp	r2, #0
100415f6:	d028      	beq.n	1004164a <__aeabi_dsub+0x636>
100415f8:	4662      	mov	r2, ip
100415fa:	9f02      	ldr	r7, [sp, #8]
100415fc:	08c0      	lsrs	r0, r0, #3
100415fe:	433a      	orrs	r2, r7
10041600:	d100      	bne.n	10041604 <__aeabi_dsub+0x5f0>
10041602:	e6dc      	b.n	100413be <__aeabi_dsub+0x3aa>
10041604:	0762      	lsls	r2, r4, #29
10041606:	4310      	orrs	r0, r2
10041608:	2280      	movs	r2, #128	@ 0x80
1004160a:	08e4      	lsrs	r4, r4, #3
1004160c:	0312      	lsls	r2, r2, #12
1004160e:	4214      	tst	r4, r2
10041610:	d009      	beq.n	10041626 <__aeabi_dsub+0x612>
10041612:	08fd      	lsrs	r5, r7, #3
10041614:	4215      	tst	r5, r2
10041616:	d106      	bne.n	10041626 <__aeabi_dsub+0x612>
10041618:	4663      	mov	r3, ip
1004161a:	2601      	movs	r6, #1
1004161c:	002c      	movs	r4, r5
1004161e:	08d8      	lsrs	r0, r3, #3
10041620:	077b      	lsls	r3, r7, #29
10041622:	4318      	orrs	r0, r3
10041624:	400e      	ands	r6, r1
10041626:	0f42      	lsrs	r2, r0, #29
10041628:	00c0      	lsls	r0, r0, #3
1004162a:	08c0      	lsrs	r0, r0, #3
1004162c:	0752      	lsls	r2, r2, #29
1004162e:	4302      	orrs	r2, r0
10041630:	e601      	b.n	10041236 <__aeabi_dsub+0x222>
10041632:	4663      	mov	r3, ip
10041634:	1a1d      	subs	r5, r3, r0
10041636:	45ac      	cmp	ip, r5
10041638:	4192      	sbcs	r2, r2
1004163a:	9b02      	ldr	r3, [sp, #8]
1004163c:	4252      	negs	r2, r2
1004163e:	1b1c      	subs	r4, r3, r4
10041640:	000e      	movs	r6, r1
10041642:	4688      	mov	r8, r1
10041644:	2701      	movs	r7, #1
10041646:	1aa4      	subs	r4, r4, r2
10041648:	e546      	b.n	100410d8 <__aeabi_dsub+0xc4>
1004164a:	4663      	mov	r3, ip
1004164c:	08d9      	lsrs	r1, r3, #3
1004164e:	9b02      	ldr	r3, [sp, #8]
10041650:	075a      	lsls	r2, r3, #29
10041652:	430a      	orrs	r2, r1
10041654:	08dc      	lsrs	r4, r3, #3
10041656:	e5ee      	b.n	10041236 <__aeabi_dsub+0x222>
10041658:	4663      	mov	r3, ip
1004165a:	9c02      	ldr	r4, [sp, #8]
1004165c:	9303      	str	r3, [sp, #12]
1004165e:	e6c7      	b.n	100413f0 <__aeabi_dsub+0x3dc>
10041660:	08c0      	lsrs	r0, r0, #3
10041662:	2a00      	cmp	r2, #0
10041664:	d100      	bne.n	10041668 <__aeabi_dsub+0x654>
10041666:	e6aa      	b.n	100413be <__aeabi_dsub+0x3aa>
10041668:	0762      	lsls	r2, r4, #29
1004166a:	4310      	orrs	r0, r2
1004166c:	2280      	movs	r2, #128	@ 0x80
1004166e:	08e4      	lsrs	r4, r4, #3
10041670:	0312      	lsls	r2, r2, #12
10041672:	4214      	tst	r4, r2
10041674:	d0d7      	beq.n	10041626 <__aeabi_dsub+0x612>
10041676:	9f02      	ldr	r7, [sp, #8]
10041678:	08fd      	lsrs	r5, r7, #3
1004167a:	4215      	tst	r5, r2
1004167c:	d1d3      	bne.n	10041626 <__aeabi_dsub+0x612>
1004167e:	4663      	mov	r3, ip
10041680:	2601      	movs	r6, #1
10041682:	08d8      	lsrs	r0, r3, #3
10041684:	077b      	lsls	r3, r7, #29
10041686:	002c      	movs	r4, r5
10041688:	4318      	orrs	r0, r3
1004168a:	400e      	ands	r6, r1
1004168c:	e7cb      	b.n	10041626 <__aeabi_dsub+0x612>
1004168e:	000a      	movs	r2, r1
10041690:	0027      	movs	r7, r4
10041692:	3a20      	subs	r2, #32
10041694:	40d7      	lsrs	r7, r2
10041696:	2920      	cmp	r1, #32
10041698:	d005      	beq.n	100416a6 <__aeabi_dsub+0x692>
1004169a:	2240      	movs	r2, #64	@ 0x40
1004169c:	1a52      	subs	r2, r2, r1
1004169e:	4094      	lsls	r4, r2
100416a0:	0025      	movs	r5, r4
100416a2:	4305      	orrs	r5, r0
100416a4:	9503      	str	r5, [sp, #12]
100416a6:	9d03      	ldr	r5, [sp, #12]
100416a8:	1e6a      	subs	r2, r5, #1
100416aa:	4195      	sbcs	r5, r2
100416ac:	432f      	orrs	r7, r5
100416ae:	e610      	b.n	100412d2 <__aeabi_dsub+0x2be>
100416b0:	0014      	movs	r4, r2
100416b2:	2500      	movs	r5, #0
100416b4:	2200      	movs	r2, #0
100416b6:	e556      	b.n	10041166 <__aeabi_dsub+0x152>
100416b8:	9b02      	ldr	r3, [sp, #8]
100416ba:	4460      	add	r0, ip
100416bc:	4699      	mov	r9, r3
100416be:	4560      	cmp	r0, ip
100416c0:	4192      	sbcs	r2, r2
100416c2:	444c      	add	r4, r9
100416c4:	4252      	negs	r2, r2
100416c6:	0005      	movs	r5, r0
100416c8:	18a4      	adds	r4, r4, r2
100416ca:	e74c      	b.n	10041566 <__aeabi_dsub+0x552>
100416cc:	001a      	movs	r2, r3
100416ce:	001c      	movs	r4, r3
100416d0:	432a      	orrs	r2, r5
100416d2:	d000      	beq.n	100416d6 <__aeabi_dsub+0x6c2>
100416d4:	e6b3      	b.n	1004143e <__aeabi_dsub+0x42a>
100416d6:	e6c9      	b.n	1004146c <__aeabi_dsub+0x458>
100416d8:	2480      	movs	r4, #128	@ 0x80
100416da:	2600      	movs	r6, #0
100416dc:	0324      	lsls	r4, r4, #12
100416de:	e5ae      	b.n	1004123e <__aeabi_dsub+0x22a>
100416e0:	2120      	movs	r1, #32
100416e2:	2500      	movs	r5, #0
100416e4:	1a09      	subs	r1, r1, r0
100416e6:	e517      	b.n	10041118 <__aeabi_dsub+0x104>
100416e8:	2200      	movs	r2, #0
100416ea:	2500      	movs	r5, #0
100416ec:	4c0b      	ldr	r4, [pc, #44]	@ (1004171c <__aeabi_dsub+0x708>)
100416ee:	e53a      	b.n	10041166 <__aeabi_dsub+0x152>
100416f0:	2d00      	cmp	r5, #0
100416f2:	d100      	bne.n	100416f6 <__aeabi_dsub+0x6e2>
100416f4:	e5f6      	b.n	100412e4 <__aeabi_dsub+0x2d0>
100416f6:	464b      	mov	r3, r9
100416f8:	1bda      	subs	r2, r3, r7
100416fa:	4692      	mov	sl, r2
100416fc:	2f00      	cmp	r7, #0
100416fe:	d100      	bne.n	10041702 <__aeabi_dsub+0x6ee>
10041700:	e66f      	b.n	100413e2 <__aeabi_dsub+0x3ce>
10041702:	2a38      	cmp	r2, #56	@ 0x38
10041704:	dc05      	bgt.n	10041712 <__aeabi_dsub+0x6fe>
10041706:	2680      	movs	r6, #128	@ 0x80
10041708:	0436      	lsls	r6, r6, #16
1004170a:	4334      	orrs	r4, r6
1004170c:	4688      	mov	r8, r1
1004170e:	000e      	movs	r6, r1
10041710:	e6d1      	b.n	100414b6 <__aeabi_dsub+0x4a2>
10041712:	4688      	mov	r8, r1
10041714:	000e      	movs	r6, r1
10041716:	2501      	movs	r5, #1
10041718:	e6de      	b.n	100414d8 <__aeabi_dsub+0x4c4>
1004171a:	46c0      	nop			@ (mov r8, r8)
1004171c:	000007ff 	.word	0x000007ff
10041720:	ff7fffff 	.word	0xff7fffff
10041724:	000007fe 	.word	0x000007fe
10041728:	2d00      	cmp	r5, #0
1004172a:	d100      	bne.n	1004172e <__aeabi_dsub+0x71a>
1004172c:	e668      	b.n	10041400 <__aeabi_dsub+0x3ec>
1004172e:	464b      	mov	r3, r9
10041730:	1bd9      	subs	r1, r3, r7
10041732:	2f00      	cmp	r7, #0
10041734:	d101      	bne.n	1004173a <__aeabi_dsub+0x726>
10041736:	468a      	mov	sl, r1
10041738:	e5a7      	b.n	1004128a <__aeabi_dsub+0x276>
1004173a:	2701      	movs	r7, #1
1004173c:	2938      	cmp	r1, #56	@ 0x38
1004173e:	dd00      	ble.n	10041742 <__aeabi_dsub+0x72e>
10041740:	e5c7      	b.n	100412d2 <__aeabi_dsub+0x2be>
10041742:	2280      	movs	r2, #128	@ 0x80
10041744:	0412      	lsls	r2, r2, #16
10041746:	4314      	orrs	r4, r2
10041748:	e5af      	b.n	100412aa <__aeabi_dsub+0x296>
1004174a:	46c0      	nop			@ (mov r8, r8)

1004174c <__aeabi_d2iz>:
1004174c:	000b      	movs	r3, r1
1004174e:	0002      	movs	r2, r0
10041750:	b570      	push	{r4, r5, r6, lr}
10041752:	4d16      	ldr	r5, [pc, #88]	@ (100417ac <__aeabi_d2iz+0x60>)
10041754:	030c      	lsls	r4, r1, #12
10041756:	b082      	sub	sp, #8
10041758:	0049      	lsls	r1, r1, #1
1004175a:	2000      	movs	r0, #0
1004175c:	9200      	str	r2, [sp, #0]
1004175e:	9301      	str	r3, [sp, #4]
10041760:	0b24      	lsrs	r4, r4, #12
10041762:	0d49      	lsrs	r1, r1, #21
10041764:	0fde      	lsrs	r6, r3, #31
10041766:	42a9      	cmp	r1, r5
10041768:	dd04      	ble.n	10041774 <__aeabi_d2iz+0x28>
1004176a:	4811      	ldr	r0, [pc, #68]	@ (100417b0 <__aeabi_d2iz+0x64>)
1004176c:	4281      	cmp	r1, r0
1004176e:	dd03      	ble.n	10041778 <__aeabi_d2iz+0x2c>
10041770:	4b10      	ldr	r3, [pc, #64]	@ (100417b4 <__aeabi_d2iz+0x68>)
10041772:	18f0      	adds	r0, r6, r3
10041774:	b002      	add	sp, #8
10041776:	bd70      	pop	{r4, r5, r6, pc}
10041778:	2080      	movs	r0, #128	@ 0x80
1004177a:	0340      	lsls	r0, r0, #13
1004177c:	4320      	orrs	r0, r4
1004177e:	4c0e      	ldr	r4, [pc, #56]	@ (100417b8 <__aeabi_d2iz+0x6c>)
10041780:	1a64      	subs	r4, r4, r1
10041782:	2c1f      	cmp	r4, #31
10041784:	dd08      	ble.n	10041798 <__aeabi_d2iz+0x4c>
10041786:	4b0d      	ldr	r3, [pc, #52]	@ (100417bc <__aeabi_d2iz+0x70>)
10041788:	1a5b      	subs	r3, r3, r1
1004178a:	40d8      	lsrs	r0, r3
1004178c:	0003      	movs	r3, r0
1004178e:	4258      	negs	r0, r3
10041790:	2e00      	cmp	r6, #0
10041792:	d1ef      	bne.n	10041774 <__aeabi_d2iz+0x28>
10041794:	0018      	movs	r0, r3
10041796:	e7ed      	b.n	10041774 <__aeabi_d2iz+0x28>
10041798:	4b09      	ldr	r3, [pc, #36]	@ (100417c0 <__aeabi_d2iz+0x74>)
1004179a:	9a00      	ldr	r2, [sp, #0]
1004179c:	469c      	mov	ip, r3
1004179e:	0003      	movs	r3, r0
100417a0:	4461      	add	r1, ip
100417a2:	408b      	lsls	r3, r1
100417a4:	40e2      	lsrs	r2, r4
100417a6:	4313      	orrs	r3, r2
100417a8:	e7f1      	b.n	1004178e <__aeabi_d2iz+0x42>
100417aa:	46c0      	nop			@ (mov r8, r8)
100417ac:	000003fe 	.word	0x000003fe
100417b0:	0000041d 	.word	0x0000041d
100417b4:	7fffffff 	.word	0x7fffffff
100417b8:	00000433 	.word	0x00000433
100417bc:	00000413 	.word	0x00000413
100417c0:	fffffbed 	.word	0xfffffbed

100417c4 <__aeabi_i2d>:
100417c4:	b570      	push	{r4, r5, r6, lr}
100417c6:	2800      	cmp	r0, #0
100417c8:	d016      	beq.n	100417f8 <__aeabi_i2d+0x34>
100417ca:	17c3      	asrs	r3, r0, #31
100417cc:	18c5      	adds	r5, r0, r3
100417ce:	405d      	eors	r5, r3
100417d0:	0fc4      	lsrs	r4, r0, #31
100417d2:	0028      	movs	r0, r5
100417d4:	f7fe fef4 	bl	100405c0 <__clzsi2>
100417d8:	4b10      	ldr	r3, [pc, #64]	@ (1004181c <__aeabi_i2d+0x58>)
100417da:	1a1b      	subs	r3, r3, r0
100417dc:	055b      	lsls	r3, r3, #21
100417de:	0d5b      	lsrs	r3, r3, #21
100417e0:	280a      	cmp	r0, #10
100417e2:	dc14      	bgt.n	1004180e <__aeabi_i2d+0x4a>
100417e4:	0002      	movs	r2, r0
100417e6:	002e      	movs	r6, r5
100417e8:	3215      	adds	r2, #21
100417ea:	4096      	lsls	r6, r2
100417ec:	220b      	movs	r2, #11
100417ee:	1a12      	subs	r2, r2, r0
100417f0:	40d5      	lsrs	r5, r2
100417f2:	032d      	lsls	r5, r5, #12
100417f4:	0b2d      	lsrs	r5, r5, #12
100417f6:	e003      	b.n	10041800 <__aeabi_i2d+0x3c>
100417f8:	2400      	movs	r4, #0
100417fa:	2300      	movs	r3, #0
100417fc:	2500      	movs	r5, #0
100417fe:	2600      	movs	r6, #0
10041800:	051b      	lsls	r3, r3, #20
10041802:	432b      	orrs	r3, r5
10041804:	07e4      	lsls	r4, r4, #31
10041806:	4323      	orrs	r3, r4
10041808:	0030      	movs	r0, r6
1004180a:	0019      	movs	r1, r3
1004180c:	bd70      	pop	{r4, r5, r6, pc}
1004180e:	380b      	subs	r0, #11
10041810:	4085      	lsls	r5, r0
10041812:	032d      	lsls	r5, r5, #12
10041814:	2600      	movs	r6, #0
10041816:	0b2d      	lsrs	r5, r5, #12
10041818:	e7f2      	b.n	10041800 <__aeabi_i2d+0x3c>
1004181a:	46c0      	nop			@ (mov r8, r8)
1004181c:	0000041e 	.word	0x0000041e

10041820 <__clzdi2>:
10041820:	b510      	push	{r4, lr}
10041822:	2900      	cmp	r1, #0
10041824:	d103      	bne.n	1004182e <__clzdi2+0xe>
10041826:	f7fe fecb 	bl	100405c0 <__clzsi2>
1004182a:	3020      	adds	r0, #32
1004182c:	e002      	b.n	10041834 <__clzdi2+0x14>
1004182e:	0008      	movs	r0, r1
10041830:	f7fe fec6 	bl	100405c0 <__clzsi2>
10041834:	bd10      	pop	{r4, pc}
10041836:	46c0      	nop			@ (mov r8, r8)

10041838 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
10041838:	b580      	push	{r7, lr}
1004183a:	b082      	sub	sp, #8
1004183c:	af00      	add	r7, sp, #0
1004183e:	0002      	movs	r2, r0
10041840:	1dfb      	adds	r3, r7, #7
10041842:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
10041844:	1dfb      	adds	r3, r7, #7
10041846:	781b      	ldrb	r3, [r3, #0]
10041848:	2b7f      	cmp	r3, #127	@ 0x7f
1004184a:	d809      	bhi.n	10041860 <__NVIC_EnableIRQ+0x28>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1004184c:	1dfb      	adds	r3, r7, #7
1004184e:	781b      	ldrb	r3, [r3, #0]
10041850:	001a      	movs	r2, r3
10041852:	231f      	movs	r3, #31
10041854:	401a      	ands	r2, r3
10041856:	4b04      	ldr	r3, [pc, #16]	@ (10041868 <__NVIC_EnableIRQ+0x30>)
10041858:	2101      	movs	r1, #1
1004185a:	4091      	lsls	r1, r2
1004185c:	000a      	movs	r2, r1
1004185e:	601a      	str	r2, [r3, #0]
    __COMPILER_BARRIER();
  }
}
10041860:	46c0      	nop			@ (mov r8, r8)
10041862:	46bd      	mov	sp, r7
10041864:	b002      	add	sp, #8
10041866:	bd80      	pop	{r7, pc}
10041868:	e000e100 	.word	0xe000e100

1004186c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
1004186c:	b590      	push	{r4, r7, lr}
1004186e:	b083      	sub	sp, #12
10041870:	af00      	add	r7, sp, #0
10041872:	0002      	movs	r2, r0
10041874:	6039      	str	r1, [r7, #0]
10041876:	1dfb      	adds	r3, r7, #7
10041878:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
1004187a:	1dfb      	adds	r3, r7, #7
1004187c:	781b      	ldrb	r3, [r3, #0]
1004187e:	2b7f      	cmp	r3, #127	@ 0x7f
10041880:	d828      	bhi.n	100418d4 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10041882:	4a2f      	ldr	r2, [pc, #188]	@ (10041940 <__NVIC_SetPriority+0xd4>)
10041884:	1dfb      	adds	r3, r7, #7
10041886:	781b      	ldrb	r3, [r3, #0]
10041888:	b25b      	sxtb	r3, r3
1004188a:	089b      	lsrs	r3, r3, #2
1004188c:	33c0      	adds	r3, #192	@ 0xc0
1004188e:	009b      	lsls	r3, r3, #2
10041890:	589b      	ldr	r3, [r3, r2]
10041892:	1dfa      	adds	r2, r7, #7
10041894:	7812      	ldrb	r2, [r2, #0]
10041896:	0011      	movs	r1, r2
10041898:	2203      	movs	r2, #3
1004189a:	400a      	ands	r2, r1
1004189c:	00d2      	lsls	r2, r2, #3
1004189e:	21ff      	movs	r1, #255	@ 0xff
100418a0:	4091      	lsls	r1, r2
100418a2:	000a      	movs	r2, r1
100418a4:	43d2      	mvns	r2, r2
100418a6:	401a      	ands	r2, r3
100418a8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
100418aa:	683b      	ldr	r3, [r7, #0]
100418ac:	019b      	lsls	r3, r3, #6
100418ae:	22ff      	movs	r2, #255	@ 0xff
100418b0:	401a      	ands	r2, r3
100418b2:	1dfb      	adds	r3, r7, #7
100418b4:	781b      	ldrb	r3, [r3, #0]
100418b6:	0018      	movs	r0, r3
100418b8:	2303      	movs	r3, #3
100418ba:	4003      	ands	r3, r0
100418bc:	00db      	lsls	r3, r3, #3
100418be:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
100418c0:	481f      	ldr	r0, [pc, #124]	@ (10041940 <__NVIC_SetPriority+0xd4>)
100418c2:	1dfb      	adds	r3, r7, #7
100418c4:	781b      	ldrb	r3, [r3, #0]
100418c6:	b25b      	sxtb	r3, r3
100418c8:	089b      	lsrs	r3, r3, #2
100418ca:	430a      	orrs	r2, r1
100418cc:	33c0      	adds	r3, #192	@ 0xc0
100418ce:	009b      	lsls	r3, r3, #2
100418d0:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
100418d2:	e031      	b.n	10041938 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
100418d4:	4a1b      	ldr	r2, [pc, #108]	@ (10041944 <__NVIC_SetPriority+0xd8>)
100418d6:	1dfb      	adds	r3, r7, #7
100418d8:	781b      	ldrb	r3, [r3, #0]
100418da:	0019      	movs	r1, r3
100418dc:	230f      	movs	r3, #15
100418de:	400b      	ands	r3, r1
100418e0:	3b08      	subs	r3, #8
100418e2:	089b      	lsrs	r3, r3, #2
100418e4:	3306      	adds	r3, #6
100418e6:	009b      	lsls	r3, r3, #2
100418e8:	18d3      	adds	r3, r2, r3
100418ea:	3304      	adds	r3, #4
100418ec:	681b      	ldr	r3, [r3, #0]
100418ee:	1dfa      	adds	r2, r7, #7
100418f0:	7812      	ldrb	r2, [r2, #0]
100418f2:	0011      	movs	r1, r2
100418f4:	2203      	movs	r2, #3
100418f6:	400a      	ands	r2, r1
100418f8:	00d2      	lsls	r2, r2, #3
100418fa:	21ff      	movs	r1, #255	@ 0xff
100418fc:	4091      	lsls	r1, r2
100418fe:	000a      	movs	r2, r1
10041900:	43d2      	mvns	r2, r2
10041902:	401a      	ands	r2, r3
10041904:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
10041906:	683b      	ldr	r3, [r7, #0]
10041908:	019b      	lsls	r3, r3, #6
1004190a:	22ff      	movs	r2, #255	@ 0xff
1004190c:	401a      	ands	r2, r3
1004190e:	1dfb      	adds	r3, r7, #7
10041910:	781b      	ldrb	r3, [r3, #0]
10041912:	0018      	movs	r0, r3
10041914:	2303      	movs	r3, #3
10041916:	4003      	ands	r3, r0
10041918:	00db      	lsls	r3, r3, #3
1004191a:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
1004191c:	4809      	ldr	r0, [pc, #36]	@ (10041944 <__NVIC_SetPriority+0xd8>)
1004191e:	1dfb      	adds	r3, r7, #7
10041920:	781b      	ldrb	r3, [r3, #0]
10041922:	001c      	movs	r4, r3
10041924:	230f      	movs	r3, #15
10041926:	4023      	ands	r3, r4
10041928:	3b08      	subs	r3, #8
1004192a:	089b      	lsrs	r3, r3, #2
1004192c:	430a      	orrs	r2, r1
1004192e:	3306      	adds	r3, #6
10041930:	009b      	lsls	r3, r3, #2
10041932:	18c3      	adds	r3, r0, r3
10041934:	3304      	adds	r3, #4
10041936:	601a      	str	r2, [r3, #0]
}
10041938:	46c0      	nop			@ (mov r8, r8)
1004193a:	46bd      	mov	sp, r7
1004193c:	b003      	add	sp, #12
1004193e:	bd90      	pop	{r4, r7, pc}
10041940:	e000e100 	.word	0xe000e100
10041944:	e000ed00 	.word	0xe000ed00

10041948 <LL_USART_EnableIT_RXNE_RXFNE>:
  * @rmtoll CR1        RXNEIE_RXFNEIE  LL_USART_EnableIT_RXNE_RXFNE
  * @param  USARTx USART Instance
  * @retval None
  */
__STATIC_INLINE void LL_USART_EnableIT_RXNE_RXFNE(USART_TypeDef *USARTx)
{
10041948:	b580      	push	{r7, lr}
1004194a:	b086      	sub	sp, #24
1004194c:	af00      	add	r7, sp, #0
1004194e:	6078      	str	r0, [r7, #4]
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
10041950:	f3ef 8310 	mrs	r3, PRIMASK
10041954:	60bb      	str	r3, [r7, #8]
  return(result);
10041956:	68bb      	ldr	r3, [r7, #8]
  ATOMIC_SET_BIT(USARTx->CR1, USART_CR1_RXNEIE_RXFNEIE);
10041958:	617b      	str	r3, [r7, #20]
1004195a:	2301      	movs	r3, #1
1004195c:	60fb      	str	r3, [r7, #12]
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004195e:	68fb      	ldr	r3, [r7, #12]
10041960:	f383 8810 	msr	PRIMASK, r3
}
10041964:	46c0      	nop			@ (mov r8, r8)
10041966:	687b      	ldr	r3, [r7, #4]
10041968:	681b      	ldr	r3, [r3, #0]
1004196a:	2220      	movs	r2, #32
1004196c:	431a      	orrs	r2, r3
1004196e:	687b      	ldr	r3, [r7, #4]
10041970:	601a      	str	r2, [r3, #0]
10041972:	697b      	ldr	r3, [r7, #20]
10041974:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
10041976:	693b      	ldr	r3, [r7, #16]
10041978:	f383 8810 	msr	PRIMASK, r3
}
1004197c:	46c0      	nop			@ (mov r8, r8)
}
1004197e:	46c0      	nop			@ (mov r8, r8)
10041980:	46bd      	mov	sp, r7
10041982:	b006      	add	sp, #24
10041984:	bd80      	pop	{r7, pc}
	...

10041988 <MX_APPE_Init>:
/* USER CODE END EV */

/* Functions Definition ------------------------------------------------------*/

uint32_t MX_APPE_Init(void *p_param)
{
10041988:	b580      	push	{r7, lr}
1004198a:	b086      	sub	sp, #24
1004198c:	af00      	add	r7, sp, #0
1004198e:	6078      	str	r0, [r7, #4]

  UNUSED(p_param);

  APP_DEBUG_SIGNAL_SET(APP_APPE_INIT);
10041990:	2000      	movs	r0, #0
10041992:	f004 feec 	bl	1004676e <APP_DEBUG_SIGNAL_SET>
  UTIL_ADV_TRACE_SetRegion(~0x0);
#endif

  /* USER CODE BEGIN APPE_Init_1 */
#if (CFG_LED_SUPPORTED == 1)
  Led_Init();
10041996:	f000 f858 	bl	10041a4a <Led_Init>
#endif
#if (CFG_BUTTON_SUPPORTED == 1)
  Button_Init();
1004199a:	f000 f867 	bl	10041a6c <Button_Init>
#endif
  
#if (CFG_DEBUG_APP_TRACE != 0) && (CFG_DEBUG_APP_ADV_TRACE == 0)
  COM_InitTypeDef COM_Init = 
1004199e:	2108      	movs	r1, #8
100419a0:	187b      	adds	r3, r7, r1
100419a2:	22e1      	movs	r2, #225	@ 0xe1
100419a4:	0252      	lsls	r2, r2, #9
100419a6:	601a      	str	r2, [r3, #0]
100419a8:	187b      	adds	r3, r7, r1
100419aa:	2200      	movs	r2, #0
100419ac:	605a      	str	r2, [r3, #4]
100419ae:	187b      	adds	r3, r7, r1
100419b0:	2200      	movs	r2, #0
100419b2:	811a      	strh	r2, [r3, #8]
100419b4:	187b      	adds	r3, r7, r1
100419b6:	2200      	movs	r2, #0
100419b8:	815a      	strh	r2, [r3, #10]
100419ba:	187b      	adds	r3, r7, r1
100419bc:	2200      	movs	r2, #0
100419be:	819a      	strh	r2, [r3, #12]
   .WordLength= COM_WORDLENGTH_8B,
   .StopBits = COM_STOPBITS_1,
   .Parity = COM_PARITY_NONE,
   .HwFlowCtl = COM_HWCONTROL_NONE
  };
  BSP_COM_Init(COM1, &COM_Init);
100419c0:	187b      	adds	r3, r7, r1
100419c2:	0019      	movs	r1, r3
100419c4:	2000      	movs	r0, #0
100419c6:	f007 fe4d 	bl	10049664 <BSP_COM_Init>
  
#endif  
  
  RxUART_Init();
100419ca:	f000 f959 	bl	10041c80 <RxUART_Init>
  
  /* USER CODE END APPE_Init_1 */

  if (HW_RNG_Init() != HW_RNG_SUCCESS)
100419ce:	f005 fa67 	bl	10046ea0 <HW_RNG_Init>
100419d2:	1e03      	subs	r3, r0, #0
100419d4:	d001      	beq.n	100419da <MX_APPE_Init+0x52>
  {
    Error_Handler();
100419d6:	f000 fade 	bl	10041f96 <Error_Handler>
  }

  /* Init the AES block */
  HW_AES_Init();
100419da:	f004 ffd1 	bl	10046980 <HW_AES_Init>
  HW_PKA_Init();
100419de:	f005 f8e5 	bl	10046bac <HW_PKA_Init>
  
  if( (RAM_VR.ResetReason & RCC_FLAG_WDGRST) == RCC_FLAG_WDGRST)
100419e2:	4b0f      	ldr	r3, [pc, #60]	@ (10041a20 <MX_APPE_Init+0x98>)
100419e4:	68da      	ldr	r2, [r3, #12]
100419e6:	2380      	movs	r3, #128	@ 0x80
100419e8:	059b      	lsls	r3, r3, #22
100419ea:	4013      	ands	r3, r2
100419ec:	d003      	beq.n	100419f6 <MX_APPE_Init+0x6e>
  {
    printf("\n\nWATCHDOG RESET!!!!!!!!!\n\n");
100419ee:	4b0d      	ldr	r3, [pc, #52]	@ (10041a24 <MX_APPE_Init+0x9c>)
100419f0:	0018      	movs	r0, r3
100419f2:	f029 fee9 	bl	1006b7c8 <puts>
  }
  
  if( (RAM_VR.ResetReason & RCC_CSR_SFTRSTF) == RCC_CSR_SFTRSTF)
100419f6:	4b0a      	ldr	r3, [pc, #40]	@ (10041a20 <MX_APPE_Init+0x98>)
100419f8:	68da      	ldr	r2, [r3, #12]
100419fa:	2380      	movs	r3, #128	@ 0x80
100419fc:	055b      	lsls	r3, r3, #21
100419fe:	4013      	ands	r3, r2
10041a00:	d003      	beq.n	10041a0a <MX_APPE_Init+0x82>
  {
    printf("\n\nSYSTEM RESET!!!!!!!!!\n\n");
10041a02:	4b09      	ldr	r3, [pc, #36]	@ (10041a28 <MX_APPE_Init+0xa0>)
10041a04:	0018      	movs	r0, r3
10041a06:	f029 fedf 	bl	1006b7c8 <puts>
  }

  APP_BLE_Init();
10041a0a:	f000 ff77 	bl	100428fc <APP_BLE_Init>
  UTIL_LPM_Init();
#endif /* CFG_LPM_SUPPORTED */
/* USER CODE BEGIN APPE_Init_2 */

/* USER CODE END APPE_Init_2 */
  APP_DEBUG_SIGNAL_RESET(APP_APPE_INIT);
10041a0e:	2000      	movs	r0, #0
10041a10:	f004 feb7 	bl	10046782 <APP_DEBUG_SIGNAL_RESET>
  return BLE_STATUS_SUCCESS;
10041a14:	2300      	movs	r3, #0
}
10041a16:	0018      	movs	r0, r3
10041a18:	46bd      	mov	sp, r7
10041a1a:	b006      	add	sp, #24
10041a1c:	bd80      	pop	{r7, pc}
10041a1e:	46c0      	nop			@ (mov r8, r8)
10041a20:	20000004 	.word	0x20000004
10041a24:	1006d390 	.word	0x1006d390
10041a28:	1006d3ac 	.word	0x1006d3ac

10041a2c <APPE_Button1Action>:
 * @brief  Action of button 1 when pressed, to be implemented by user.
 * @param  None
 * @retval None
 */
__WEAK void APPE_Button1Action(void)
{
10041a2c:	b580      	push	{r7, lr}
10041a2e:	af00      	add	r7, sp, #0
}
10041a30:	46c0      	nop			@ (mov r8, r8)
10041a32:	46bd      	mov	sp, r7
10041a34:	bd80      	pop	{r7, pc}

10041a36 <APPE_Button2Action>:
 * @brief  Action of button 2 when pressed, to be implemented by user.
 * @param  None
 * @retval None
 */
__WEAK void APPE_Button2Action(void)
{
10041a36:	b580      	push	{r7, lr}
10041a38:	af00      	add	r7, sp, #0
}
10041a3a:	46c0      	nop			@ (mov r8, r8)
10041a3c:	46bd      	mov	sp, r7
10041a3e:	bd80      	pop	{r7, pc}

10041a40 <APPE_Button3Action>:
 * @brief  Action of button 3 when pressed, to be implemented by user.
 * @param  None
 * @retval None
 */
__WEAK void APPE_Button3Action(void)
{
10041a40:	b580      	push	{r7, lr}
10041a42:	af00      	add	r7, sp, #0
}
10041a44:	46c0      	nop			@ (mov r8, r8)
10041a46:	46bd      	mov	sp, r7
10041a48:	bd80      	pop	{r7, pc}

10041a4a <Led_Init>:
#endif

/* USER CODE BEGIN FD_LOCAL_FUNCTIONS */
#if (CFG_LED_SUPPORTED == 1)
static void Led_Init( void )
{
10041a4a:	b580      	push	{r7, lr}
10041a4c:	af00      	add	r7, sp, #0
  /* Leds Initialization */
  BSP_LED_Init(LED_BLUE);
10041a4e:	2000      	movs	r0, #0
10041a50:	f007 fcb6 	bl	100493c0 <BSP_LED_Init>
  BSP_LED_Init(LED_GREEN);
10041a54:	2001      	movs	r0, #1
10041a56:	f007 fcb3 	bl	100493c0 <BSP_LED_Init>
  BSP_LED_Init(LED_RED);
10041a5a:	2002      	movs	r0, #2
10041a5c:	f007 fcb0 	bl	100493c0 <BSP_LED_Init>

  BSP_LED_On(LED_GREEN);
10041a60:	2001      	movs	r0, #1
10041a62:	f007 fd23 	bl	100494ac <BSP_LED_On>

  return;
10041a66:	46c0      	nop			@ (mov r8, r8)
}
10041a68:	46bd      	mov	sp, r7
10041a6a:	bd80      	pop	{r7, pc}

10041a6c <Button_Init>:
#endif

#if (CFG_BUTTON_SUPPORTED == 1)
static void Button_Init( void )
{
10041a6c:	b580      	push	{r7, lr}
10041a6e:	b082      	sub	sp, #8
10041a70:	af00      	add	r7, sp, #0
  /* Button Initialization */
  buttonDesc[B1].button = B1;
10041a72:	4b2b      	ldr	r3, [pc, #172]	@ (10041b20 <Button_Init+0xb4>)
10041a74:	2200      	movs	r2, #0
10041a76:	701a      	strb	r2, [r3, #0]
  buttonDesc[B2].button = B2;
10041a78:	4b29      	ldr	r3, [pc, #164]	@ (10041b20 <Button_Init+0xb4>)
10041a7a:	2228      	movs	r2, #40	@ 0x28
10041a7c:	2101      	movs	r1, #1
10041a7e:	5499      	strb	r1, [r3, r2]
  buttonDesc[B3].button = B3;
10041a80:	4b27      	ldr	r3, [pc, #156]	@ (10041b20 <Button_Init+0xb4>)
10041a82:	2250      	movs	r2, #80	@ 0x50
10041a84:	2102      	movs	r1, #2
10041a86:	5499      	strb	r1, [r3, r2]
  BSP_PB_Init(B1, BUTTON_MODE_EXTI);
10041a88:	2101      	movs	r1, #1
10041a8a:	2000      	movs	r0, #0
10041a8c:	f007 fd2c 	bl	100494e8 <BSP_PB_Init>
  BSP_PB_Init(B2, BUTTON_MODE_EXTI);
10041a90:	2101      	movs	r1, #1
10041a92:	2001      	movs	r0, #1
10041a94:	f007 fd28 	bl	100494e8 <BSP_PB_Init>
  BSP_PB_Init(B3, BUTTON_MODE_EXTI);
10041a98:	2101      	movs	r1, #1
10041a9a:	2002      	movs	r0, #2
10041a9c:	f007 fd24 	bl	100494e8 <BSP_PB_Init>
  HAL_PWR_EnableWakeUpPin(PWR_WAKEUP_PB14, PWR_WUP_FALLEDG);
#endif  
#endif  
  
  /* Register tasks associated to buttons */
  UTIL_SEQ_RegTask(1U << TASK_BUTTON_1, UTIL_SEQ_RFU, APPE_Button1Action);
10041aa0:	4b20      	ldr	r3, [pc, #128]	@ (10041b24 <Button_Init+0xb8>)
10041aa2:	001a      	movs	r2, r3
10041aa4:	2100      	movs	r1, #0
10041aa6:	2010      	movs	r0, #16
10041aa8:	f00d fdde 	bl	1004f668 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask(1U << TASK_BUTTON_2, UTIL_SEQ_RFU, APPE_Button2Action);
10041aac:	4b1e      	ldr	r3, [pc, #120]	@ (10041b28 <Button_Init+0xbc>)
10041aae:	001a      	movs	r2, r3
10041ab0:	2100      	movs	r1, #0
10041ab2:	2020      	movs	r0, #32
10041ab4:	f00d fdd8 	bl	1004f668 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask(1U << TASK_BUTTON_3, UTIL_SEQ_RFU, APPE_Button3Action);
10041ab8:	4b1c      	ldr	r3, [pc, #112]	@ (10041b2c <Button_Init+0xc0>)
10041aba:	001a      	movs	r2, r3
10041abc:	2100      	movs	r1, #0
10041abe:	2040      	movs	r0, #64	@ 0x40
10041ac0:	f00d fdd2 	bl	1004f668 <UTIL_SEQ_RegTask>

  /* Create timers to detect button long press (one for each button) */
  Button_TypeDef buttonIndex;
  for ( buttonIndex = B1; buttonIndex < BUTTON_NB_MAX; buttonIndex++ )
10041ac4:	1dfb      	adds	r3, r7, #7
10041ac6:	2200      	movs	r2, #0
10041ac8:	701a      	strb	r2, [r3, #0]
10041aca:	e021      	b.n	10041b10 <Button_Init+0xa4>
  {
    buttonDesc[buttonIndex].longTimerId.callback = Button_TriggerActions;
10041acc:	1dfb      	adds	r3, r7, #7
10041ace:	781a      	ldrb	r2, [r3, #0]
10041ad0:	4913      	ldr	r1, [pc, #76]	@ (10041b20 <Button_Init+0xb4>)
10041ad2:	0013      	movs	r3, r2
10041ad4:	009b      	lsls	r3, r3, #2
10041ad6:	189b      	adds	r3, r3, r2
10041ad8:	00db      	lsls	r3, r3, #3
10041ada:	18cb      	adds	r3, r1, r3
10041adc:	3310      	adds	r3, #16
10041ade:	4a14      	ldr	r2, [pc, #80]	@ (10041b30 <Button_Init+0xc4>)
10041ae0:	601a      	str	r2, [r3, #0]
    buttonDesc[buttonIndex].longTimerId.userData = &buttonDesc[buttonIndex];
10041ae2:	1dfb      	adds	r3, r7, #7
10041ae4:	7819      	ldrb	r1, [r3, #0]
10041ae6:	1dfb      	adds	r3, r7, #7
10041ae8:	781a      	ldrb	r2, [r3, #0]
10041aea:	000b      	movs	r3, r1
10041aec:	009b      	lsls	r3, r3, #2
10041aee:	185b      	adds	r3, r3, r1
10041af0:	00db      	lsls	r3, r3, #3
10041af2:	490b      	ldr	r1, [pc, #44]	@ (10041b20 <Button_Init+0xb4>)
10041af4:	1859      	adds	r1, r3, r1
10041af6:	480a      	ldr	r0, [pc, #40]	@ (10041b20 <Button_Init+0xb4>)
10041af8:	0013      	movs	r3, r2
10041afa:	009b      	lsls	r3, r3, #2
10041afc:	189b      	adds	r3, r3, r2
10041afe:	00db      	lsls	r3, r3, #3
10041b00:	18c3      	adds	r3, r0, r3
10041b02:	331c      	adds	r3, #28
10041b04:	6019      	str	r1, [r3, #0]
  for ( buttonIndex = B1; buttonIndex < BUTTON_NB_MAX; buttonIndex++ )
10041b06:	1dfb      	adds	r3, r7, #7
10041b08:	781a      	ldrb	r2, [r3, #0]
10041b0a:	1dfb      	adds	r3, r7, #7
10041b0c:	3201      	adds	r2, #1
10041b0e:	701a      	strb	r2, [r3, #0]
10041b10:	1dfb      	adds	r3, r7, #7
10041b12:	781b      	ldrb	r3, [r3, #0]
10041b14:	2b02      	cmp	r3, #2
10041b16:	d9d9      	bls.n	10041acc <Button_Init+0x60>
  }
  
  return;
10041b18:	46c0      	nop			@ (mov r8, r8)
}
10041b1a:	46bd      	mov	sp, r7
10041b1c:	b002      	add	sp, #8
10041b1e:	bd80      	pop	{r7, pc}
10041b20:	20000250 	.word	0x20000250
10041b24:	10041a2d 	.word	0x10041a2d
10041b28:	10041a37 	.word	0x10041a37
10041b2c:	10041a41 	.word	0x10041a41
10041b30:	10041b35 	.word	0x10041b35

10041b34 <Button_TriggerActions>:

static void Button_TriggerActions(void *arg)
{
10041b34:	b580      	push	{r7, lr}
10041b36:	b084      	sub	sp, #16
10041b38:	af00      	add	r7, sp, #0
10041b3a:	6078      	str	r0, [r7, #4]
  ButtonDesc_t *p_buttonDesc = ((VTIMER_HandleType *)arg)->userData;
10041b3c:	687b      	ldr	r3, [r7, #4]
10041b3e:	695b      	ldr	r3, [r3, #20]
10041b40:	60fb      	str	r3, [r7, #12]

  p_buttonDesc->longPressed = BSP_PB_GetState(p_buttonDesc->button);
10041b42:	68fb      	ldr	r3, [r7, #12]
10041b44:	781b      	ldrb	r3, [r3, #0]
10041b46:	0018      	movs	r0, r3
10041b48:	f007 fd6a 	bl	10049620 <BSP_PB_GetState>
10041b4c:	0003      	movs	r3, r0
10041b4e:	b2d9      	uxtb	r1, r3
10041b50:	68fb      	ldr	r3, [r7, #12]
10041b52:	2220      	movs	r2, #32
10041b54:	5499      	strb	r1, [r3, r2]

  APP_DBG_MSG("Button %d pressed\n", (p_buttonDesc->button + 1));
10041b56:	68fb      	ldr	r3, [r7, #12]
10041b58:	781b      	ldrb	r3, [r3, #0]
10041b5a:	1c5a      	adds	r2, r3, #1
10041b5c:	4b11      	ldr	r3, [pc, #68]	@ (10041ba4 <Button_TriggerActions+0x70>)
10041b5e:	0011      	movs	r1, r2
10041b60:	0018      	movs	r0, r3
10041b62:	f029 fdc1 	bl	1006b6e8 <iprintf>
  switch (p_buttonDesc->button)
10041b66:	68fb      	ldr	r3, [r7, #12]
10041b68:	781b      	ldrb	r3, [r3, #0]
10041b6a:	2b02      	cmp	r3, #2
10041b6c:	d00f      	beq.n	10041b8e <Button_TriggerActions+0x5a>
10041b6e:	dc13      	bgt.n	10041b98 <Button_TriggerActions+0x64>
10041b70:	2b00      	cmp	r3, #0
10041b72:	d002      	beq.n	10041b7a <Button_TriggerActions+0x46>
10041b74:	2b01      	cmp	r3, #1
10041b76:	d005      	beq.n	10041b84 <Button_TriggerActions+0x50>
      break;
    case B3:
      UTIL_SEQ_SetTask(1U << TASK_BUTTON_3, CFG_SEQ_PRIO_0);
      break;
    default:
      break;
10041b78:	e00e      	b.n	10041b98 <Button_TriggerActions+0x64>
      UTIL_SEQ_SetTask(1U << TASK_BUTTON_1, CFG_SEQ_PRIO_0);
10041b7a:	2100      	movs	r1, #0
10041b7c:	2010      	movs	r0, #16
10041b7e:	f00d fd97 	bl	1004f6b0 <UTIL_SEQ_SetTask>
      break;
10041b82:	e00a      	b.n	10041b9a <Button_TriggerActions+0x66>
      UTIL_SEQ_SetTask(1U << TASK_BUTTON_2, CFG_SEQ_PRIO_0);
10041b84:	2100      	movs	r1, #0
10041b86:	2020      	movs	r0, #32
10041b88:	f00d fd92 	bl	1004f6b0 <UTIL_SEQ_SetTask>
      break;
10041b8c:	e005      	b.n	10041b9a <Button_TriggerActions+0x66>
      UTIL_SEQ_SetTask(1U << TASK_BUTTON_3, CFG_SEQ_PRIO_0);
10041b8e:	2100      	movs	r1, #0
10041b90:	2040      	movs	r0, #64	@ 0x40
10041b92:	f00d fd8d 	bl	1004f6b0 <UTIL_SEQ_SetTask>
      break;
10041b96:	e000      	b.n	10041b9a <Button_TriggerActions+0x66>
      break;
10041b98:	46c0      	nop			@ (mov r8, r8)
  }

  return;
10041b9a:	46c0      	nop			@ (mov r8, r8)
}
10041b9c:	46bd      	mov	sp, r7
10041b9e:	b004      	add	sp, #16
10041ba0:	bd80      	pop	{r7, pc}
10041ba2:	46c0      	nop			@ (mov r8, r8)
10041ba4:	1006d3c8 	.word	0x1006d3c8

10041ba8 <MX_USART1_Init>:

#endif

HAL_StatusTypeDef MX_USART1_Init(UART_HandleTypeDef* huart, MX_UART_InitTypeDef *MXInit)
{
10041ba8:	b5b0      	push	{r4, r5, r7, lr}
10041baa:	b084      	sub	sp, #16
10041bac:	af00      	add	r7, sp, #0
10041bae:	6078      	str	r0, [r7, #4]
10041bb0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef ret;
  
  /* UART configuration */
  huart->Init.BaudRate       = MXInit->BaudRate;
10041bb2:	683b      	ldr	r3, [r7, #0]
10041bb4:	681a      	ldr	r2, [r3, #0]
10041bb6:	687b      	ldr	r3, [r7, #4]
10041bb8:	605a      	str	r2, [r3, #4]
  huart->Init.WordLength     = (uint32_t) MXInit->WordLength;
10041bba:	683b      	ldr	r3, [r7, #0]
10041bbc:	685a      	ldr	r2, [r3, #4]
10041bbe:	687b      	ldr	r3, [r7, #4]
10041bc0:	609a      	str	r2, [r3, #8]
  huart->Init.StopBits       = (uint32_t) MXInit->StopBits;
10041bc2:	683b      	ldr	r3, [r7, #0]
10041bc4:	891b      	ldrh	r3, [r3, #8]
10041bc6:	001a      	movs	r2, r3
10041bc8:	687b      	ldr	r3, [r7, #4]
10041bca:	60da      	str	r2, [r3, #12]
  huart->Init.Parity         = (uint32_t) MXInit->Parity;
10041bcc:	683b      	ldr	r3, [r7, #0]
10041bce:	895b      	ldrh	r3, [r3, #10]
10041bd0:	001a      	movs	r2, r3
10041bd2:	687b      	ldr	r3, [r7, #4]
10041bd4:	611a      	str	r2, [r3, #16]
  huart->Init.Mode           = UART_MODE_TX_RX;
10041bd6:	687b      	ldr	r3, [r7, #4]
10041bd8:	220c      	movs	r2, #12
10041bda:	615a      	str	r2, [r3, #20]
  huart->Init.HwFlowCtl      = (uint32_t) MXInit->HwFlowCtl;
10041bdc:	683b      	ldr	r3, [r7, #0]
10041bde:	899b      	ldrh	r3, [r3, #12]
10041be0:	001a      	movs	r2, r3
10041be2:	687b      	ldr	r3, [r7, #4]
10041be4:	619a      	str	r2, [r3, #24]
  huart->Init.OverSampling   = UART_OVERSAMPLING_8;
10041be6:	687b      	ldr	r3, [r7, #4]
10041be8:	2280      	movs	r2, #128	@ 0x80
10041bea:	0212      	lsls	r2, r2, #8
10041bec:	61da      	str	r2, [r3, #28]
  huart->Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
10041bee:	687b      	ldr	r3, [r7, #4]
10041bf0:	2200      	movs	r2, #0
10041bf2:	621a      	str	r2, [r3, #32]
  huart->Init.ClockPrescaler = UART_PRESCALER_DIV1;
10041bf4:	687b      	ldr	r3, [r7, #4]
10041bf6:	2200      	movs	r2, #0
10041bf8:	625a      	str	r2, [r3, #36]	@ 0x24

  ret = HAL_UART_Init(huart);
10041bfa:	250f      	movs	r5, #15
10041bfc:	197c      	adds	r4, r7, r5
10041bfe:	687b      	ldr	r3, [r7, #4]
10041c00:	0018      	movs	r0, r3
10041c02:	f00b fc2f 	bl	1004d464 <HAL_UART_Init>
10041c06:	0003      	movs	r3, r0
10041c08:	7023      	strb	r3, [r4, #0]
  if(ret != HAL_OK)
10041c0a:	197b      	adds	r3, r7, r5
10041c0c:	781b      	ldrb	r3, [r3, #0]
10041c0e:	2b00      	cmp	r3, #0
10041c10:	d002      	beq.n	10041c18 <MX_USART1_Init+0x70>
  {
    return ret;
10041c12:	197b      	adds	r3, r7, r5
10041c14:	781b      	ldrb	r3, [r3, #0]
10041c16:	e02f      	b.n	10041c78 <MX_USART1_Init+0xd0>
  }
  
  ret = HAL_UARTEx_SetTxFifoThreshold(huart, UART_TXFIFO_THRESHOLD_1_8);
10041c18:	250f      	movs	r5, #15
10041c1a:	197c      	adds	r4, r7, r5
10041c1c:	687b      	ldr	r3, [r7, #4]
10041c1e:	2100      	movs	r1, #0
10041c20:	0018      	movs	r0, r3
10041c22:	f00c f8f2 	bl	1004de0a <HAL_UARTEx_SetTxFifoThreshold>
10041c26:	0003      	movs	r3, r0
10041c28:	7023      	strb	r3, [r4, #0]
  if(ret != HAL_OK)
10041c2a:	197b      	adds	r3, r7, r5
10041c2c:	781b      	ldrb	r3, [r3, #0]
10041c2e:	2b00      	cmp	r3, #0
10041c30:	d002      	beq.n	10041c38 <MX_USART1_Init+0x90>
  {
    return ret;
10041c32:	197b      	adds	r3, r7, r5
10041c34:	781b      	ldrb	r3, [r3, #0]
10041c36:	e01f      	b.n	10041c78 <MX_USART1_Init+0xd0>
  }
  
  ret = HAL_UARTEx_SetRxFifoThreshold(huart, UART_RXFIFO_THRESHOLD_1_8);
10041c38:	250f      	movs	r5, #15
10041c3a:	197c      	adds	r4, r7, r5
10041c3c:	687b      	ldr	r3, [r7, #4]
10041c3e:	2100      	movs	r1, #0
10041c40:	0018      	movs	r0, r3
10041c42:	f00c f921 	bl	1004de88 <HAL_UARTEx_SetRxFifoThreshold>
10041c46:	0003      	movs	r3, r0
10041c48:	7023      	strb	r3, [r4, #0]
  if(ret != HAL_OK)
10041c4a:	197b      	adds	r3, r7, r5
10041c4c:	781b      	ldrb	r3, [r3, #0]
10041c4e:	2b00      	cmp	r3, #0
10041c50:	d002      	beq.n	10041c58 <MX_USART1_Init+0xb0>
  {
    return ret;
10041c52:	197b      	adds	r3, r7, r5
10041c54:	781b      	ldrb	r3, [r3, #0]
10041c56:	e00f      	b.n	10041c78 <MX_USART1_Init+0xd0>
  }
  
  ret = HAL_UARTEx_EnableFifoMode(huart);
10041c58:	250f      	movs	r5, #15
10041c5a:	197c      	adds	r4, r7, r5
10041c5c:	687b      	ldr	r3, [r7, #4]
10041c5e:	0018      	movs	r0, r3
10041c60:	f00c f896 	bl	1004dd90 <HAL_UARTEx_EnableFifoMode>
10041c64:	0003      	movs	r3, r0
10041c66:	7023      	strb	r3, [r4, #0]
  if(ret != HAL_OK)
10041c68:	197b      	adds	r3, r7, r5
10041c6a:	781b      	ldrb	r3, [r3, #0]
10041c6c:	2b00      	cmp	r3, #0
10041c6e:	d002      	beq.n	10041c76 <MX_USART1_Init+0xce>
  {
    return ret;
10041c70:	197b      	adds	r3, r7, r5
10041c72:	781b      	ldrb	r3, [r3, #0]
10041c74:	e000      	b.n	10041c78 <MX_USART1_Init+0xd0>
  }
  
  return HAL_OK;
10041c76:	2300      	movs	r3, #0
}
10041c78:	0018      	movs	r0, r3
10041c7a:	46bd      	mov	sp, r7
10041c7c:	b004      	add	sp, #16
10041c7e:	bdb0      	pop	{r4, r5, r7, pc}

10041c80 <RxUART_Init>:

static void RxUART_Init(void)
{
10041c80:	b580      	push	{r7, lr}
10041c82:	af00      	add	r7, sp, #0
  /* Enable the RX not empty interrupt */
  LL_USART_EnableIT_RXNE(USART1);
10041c84:	4b0a      	ldr	r3, [pc, #40]	@ (10041cb0 <RxUART_Init+0x30>)
10041c86:	0018      	movs	r0, r3
10041c88:	f7ff fe5e 	bl	10041948 <LL_USART_EnableIT_RXNE_RXFNE>
  
  /* Enable the UART IRQ */
  NVIC_SetPriority(USART1_IRQn, IRQ_HIGH_PRIORITY);
10041c8c:	2101      	movs	r1, #1
10041c8e:	2008      	movs	r0, #8
10041c90:	f7ff fdec 	bl	1004186c <__NVIC_SetPriority>
  NVIC_EnableIRQ(USART1_IRQn);
10041c94:	2008      	movs	r0, #8
10041c96:	f7ff fdcf 	bl	10041838 <__NVIC_EnableIRQ>
#if defined(__GNUC__) && !defined(__ARMCC_VERSION)
  setvbuf(stdout, NULL, _IONBF, 0);
10041c9a:	4b06      	ldr	r3, [pc, #24]	@ (10041cb4 <RxUART_Init+0x34>)
10041c9c:	681b      	ldr	r3, [r3, #0]
10041c9e:	6898      	ldr	r0, [r3, #8]
10041ca0:	2300      	movs	r3, #0
10041ca2:	2202      	movs	r2, #2
10041ca4:	2100      	movs	r1, #0
10041ca6:	f029 fd99 	bl	1006b7dc <setvbuf>
#endif
}
10041caa:	46c0      	nop			@ (mov r8, r8)
10041cac:	46bd      	mov	sp, r7
10041cae:	bd80      	pop	{r7, pc}
10041cb0:	41004000 	.word	0x41004000
10041cb4:	20000bfc 	.word	0x20000bfc

10041cb8 <MX_APPE_Process>:
 *
 * WRAP FUNCTIONS
 *
 *************************************************************/
void MX_APPE_Process(void)
{
10041cb8:	b580      	push	{r7, lr}
10041cba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MX_APPE_Process_1 */

  /* USER CODE END MX_APPE_Process_1 */
  UTIL_SEQ_Run(UTIL_SEQ_DEFAULT);
10041cbc:	2301      	movs	r3, #1
10041cbe:	425b      	negs	r3, r3
10041cc0:	0018      	movs	r0, r3
10041cc2:	f00d fbd1 	bl	1004f468 <UTIL_SEQ_Run>
  /* USER CODE BEGIN MX_APPE_Process_2 */

  /* USER CODE END MX_APPE_Process_2 */
}
10041cc6:	46c0      	nop			@ (mov r8, r8)
10041cc8:	46bd      	mov	sp, r7
10041cca:	bd80      	pop	{r7, pc}

10041ccc <UTIL_SEQ_PreIdle>:

void UTIL_SEQ_PreIdle( void )
{
10041ccc:	b580      	push	{r7, lr}
10041cce:	af00      	add	r7, sp, #0
#if (CFG_LPM_SUPPORTED == 1)
  /* USER CODE BEGIN UTIL_SEQ_PREIDLE */

  /* USER CODE END UTIL_SEQ_PREIDLE */
#endif /* CFG_LPM_SUPPORTED */
  return;
10041cd0:	46c0      	nop			@ (mov r8, r8)
}
10041cd2:	46bd      	mov	sp, r7
10041cd4:	bd80      	pop	{r7, pc}

10041cd6 <UTIL_SEQ_Idle>:

void UTIL_SEQ_Idle( void )
{
10041cd6:	b580      	push	{r7, lr}
10041cd8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UTIL_SEQ_IDLE_END */

  /* USER CODE END UTIL_SEQ_IDLE_END */
  }
#endif /* CFG_LPM_SUPPORTED */
}
10041cda:	46c0      	nop			@ (mov r8, r8)
10041cdc:	46bd      	mov	sp, r7
10041cde:	bd80      	pop	{r7, pc}

10041ce0 <__NVIC_SystemReset>:
/**
  \brief   System Reset
  \details Initiates a system reset request to reset the MCU.
 */
__NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
{
10041ce0:	b580      	push	{r7, lr}
10041ce2:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
10041ce4:	f3bf 8f4f 	dsb	sy
}
10041ce8:	46c0      	nop			@ (mov r8, r8)
  __DSB();                                                          /* Ensure all outstanding memory accesses included
                                                                       buffered write are completed before reset */
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
10041cea:	4b04      	ldr	r3, [pc, #16]	@ (10041cfc <__NVIC_SystemReset+0x1c>)
10041cec:	4a04      	ldr	r2, [pc, #16]	@ (10041d00 <__NVIC_SystemReset+0x20>)
10041cee:	60da      	str	r2, [r3, #12]
  __ASM volatile ("dsb 0xF":::"memory");
10041cf0:	f3bf 8f4f 	dsb	sy
}
10041cf4:	46c0      	nop			@ (mov r8, r8)
                 SCB_AIRCR_SYSRESETREQ_Msk);
  __DSB();                                                          /* Ensure completion of memory access */

  for(;;)                                                           /* wait until reset */
  {
    __NOP();
10041cf6:	46c0      	nop			@ (mov r8, r8)
10041cf8:	e7fd      	b.n	10041cf6 <__NVIC_SystemReset+0x16>
10041cfa:	46c0      	nop			@ (mov r8, r8)
10041cfc:	e000ed00 	.word	0xe000ed00
10041d00:	05fa0004 	.word	0x05fa0004

10041d04 <LL_RADIO_TIMER_GetAbsoluteTime>:
  * @brief  Get the Absolute Time of the wakeup timer (Granularity unit is 16 x slow clock period).
  * @param  WAKEUPx Radio Timer instance
  * @retval Absolute Time of Wakeup Timer
  */
__STATIC_INLINE uint32_t LL_RADIO_TIMER_GetAbsoluteTime(WAKEUP_TypeDef *WAKEUPx)
{
10041d04:	b580      	push	{r7, lr}
10041d06:	b082      	sub	sp, #8
10041d08:	af00      	add	r7, sp, #0
10041d0a:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_REG(WAKEUPx->ABSOLUTE_TIME));
10041d0c:	687b      	ldr	r3, [r7, #4]
10041d0e:	691b      	ldr	r3, [r3, #16]
}
10041d10:	0018      	movs	r0, r3
10041d12:	46bd      	mov	sp, r7
10041d14:	b002      	add	sp, #8
10041d16:	bd80      	pop	{r7, pc}

10041d18 <LL_AHB1_GRP1_EnableClock>:
  * @arg LL_AHB1_GRP1_PERIPH_RNG
  * @retval None
  * @note   LL_AHB1_GRP1_PERIPH_PKA
  */
__STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
{
10041d18:	b580      	push	{r7, lr}
10041d1a:	b084      	sub	sp, #16
10041d1c:	af00      	add	r7, sp, #0
10041d1e:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHBENR, Periphs);
10041d20:	4b07      	ldr	r3, [pc, #28]	@ (10041d40 <LL_AHB1_GRP1_EnableClock+0x28>)
10041d22:	6d19      	ldr	r1, [r3, #80]	@ 0x50
10041d24:	4b06      	ldr	r3, [pc, #24]	@ (10041d40 <LL_AHB1_GRP1_EnableClock+0x28>)
10041d26:	687a      	ldr	r2, [r7, #4]
10041d28:	430a      	orrs	r2, r1
10041d2a:	651a      	str	r2, [r3, #80]	@ 0x50
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHBENR, Periphs);
10041d2c:	4b04      	ldr	r3, [pc, #16]	@ (10041d40 <LL_AHB1_GRP1_EnableClock+0x28>)
10041d2e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
10041d30:	687a      	ldr	r2, [r7, #4]
10041d32:	4013      	ands	r3, r2
10041d34:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
10041d36:	68fb      	ldr	r3, [r7, #12]
}
10041d38:	46c0      	nop			@ (mov r8, r8)
10041d3a:	46bd      	mov	sp, r7
10041d3c:	b004      	add	sp, #16
10041d3e:	bd80      	pop	{r7, pc}
10041d40:	48400000 	.word	0x48400000

10041d44 <LL_APB2_GRP1_EnableClock>:
  * @arg LL_APB2_GRP1_PERIPH_MRBLE
  * @retval None
  * @note   LL_APB2_GRP1_PERIPH_MRBLE
  */
__STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
{
10041d44:	b580      	push	{r7, lr}
10041d46:	b084      	sub	sp, #16
10041d48:	af00      	add	r7, sp, #0
10041d4a:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->APB2ENR, Periphs);
10041d4c:	4b07      	ldr	r3, [pc, #28]	@ (10041d6c <LL_APB2_GRP1_EnableClock+0x28>)
10041d4e:	6e19      	ldr	r1, [r3, #96]	@ 0x60
10041d50:	4b06      	ldr	r3, [pc, #24]	@ (10041d6c <LL_APB2_GRP1_EnableClock+0x28>)
10041d52:	687a      	ldr	r2, [r7, #4]
10041d54:	430a      	orrs	r2, r1
10041d56:	661a      	str	r2, [r3, #96]	@ 0x60
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
10041d58:	4b04      	ldr	r3, [pc, #16]	@ (10041d6c <LL_APB2_GRP1_EnableClock+0x28>)
10041d5a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
10041d5c:	687a      	ldr	r2, [r7, #4]
10041d5e:	4013      	ands	r3, r2
10041d60:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
10041d62:	68fb      	ldr	r3, [r7, #12]
}
10041d64:	46c0      	nop			@ (mov r8, r8)
10041d66:	46bd      	mov	sp, r7
10041d68:	b004      	add	sp, #16
10041d6a:	bd80      	pop	{r7, pc}
10041d6c:	48400000 	.word	0x48400000

10041d70 <LL_APB2_GRP1_IsEnabledClock>:
  * @arg LL_APB2_GRP1_PERIPH_MRBLE
  * @retval uint32_t
  * @note   LL_APB2_GRP1_PERIPH_MRBLE
  */
__STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
{
10041d70:	b580      	push	{r7, lr}
10041d72:	b082      	sub	sp, #8
10041d74:	af00      	add	r7, sp, #0
10041d76:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
10041d78:	4b06      	ldr	r3, [pc, #24]	@ (10041d94 <LL_APB2_GRP1_IsEnabledClock+0x24>)
10041d7a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
10041d7c:	687a      	ldr	r2, [r7, #4]
10041d7e:	4013      	ands	r3, r2
10041d80:	687a      	ldr	r2, [r7, #4]
10041d82:	429a      	cmp	r2, r3
10041d84:	d101      	bne.n	10041d8a <LL_APB2_GRP1_IsEnabledClock+0x1a>
10041d86:	2301      	movs	r3, #1
10041d88:	e000      	b.n	10041d8c <LL_APB2_GRP1_IsEnabledClock+0x1c>
10041d8a:	2300      	movs	r3, #0
}
10041d8c:	0018      	movs	r0, r3
10041d8e:	46bd      	mov	sp, r7
10041d90:	b002      	add	sp, #8
10041d92:	bd80      	pop	{r7, pc}
10041d94:	48400000 	.word	0x48400000

10041d98 <LL_APB2_GRP1_ForceReset>:
  * @arg LL_APB2_GRP1_PERIPH_MRBLE
  * @retval None
  * @note   LL_APB2_GRP1_PERIPH_MRBLE
  */
__STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
{
10041d98:	b580      	push	{r7, lr}
10041d9a:	b082      	sub	sp, #8
10041d9c:	af00      	add	r7, sp, #0
10041d9e:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB2RSTR, Periphs);
10041da0:	4b04      	ldr	r3, [pc, #16]	@ (10041db4 <LL_APB2_GRP1_ForceReset+0x1c>)
10041da2:	6c19      	ldr	r1, [r3, #64]	@ 0x40
10041da4:	4b03      	ldr	r3, [pc, #12]	@ (10041db4 <LL_APB2_GRP1_ForceReset+0x1c>)
10041da6:	687a      	ldr	r2, [r7, #4]
10041da8:	430a      	orrs	r2, r1
10041daa:	641a      	str	r2, [r3, #64]	@ 0x40
}
10041dac:	46c0      	nop			@ (mov r8, r8)
10041dae:	46bd      	mov	sp, r7
10041db0:	b002      	add	sp, #8
10041db2:	bd80      	pop	{r7, pc}
10041db4:	48400000 	.word	0x48400000

10041db8 <LL_APB2_GRP1_ReleaseReset>:
  * @arg LL_APB2_GRP1_PERIPH_MRBLE
  * @retval None
  * @note   LL_APB2_GRP1_PERIPH_MRBLE
  */
__STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
{
10041db8:	b580      	push	{r7, lr}
10041dba:	b082      	sub	sp, #8
10041dbc:	af00      	add	r7, sp, #0
10041dbe:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(RCC->APB2RSTR, Periphs);
10041dc0:	4b05      	ldr	r3, [pc, #20]	@ (10041dd8 <LL_APB2_GRP1_ReleaseReset+0x20>)
10041dc2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
10041dc4:	687b      	ldr	r3, [r7, #4]
10041dc6:	43d9      	mvns	r1, r3
10041dc8:	4b03      	ldr	r3, [pc, #12]	@ (10041dd8 <LL_APB2_GRP1_ReleaseReset+0x20>)
10041dca:	400a      	ands	r2, r1
10041dcc:	641a      	str	r2, [r3, #64]	@ 0x40
}
10041dce:	46c0      	nop			@ (mov r8, r8)
10041dd0:	46bd      	mov	sp, r7
10041dd2:	b002      	add	sp, #8
10041dd4:	bd80      	pop	{r7, pc}
10041dd6:	46c0      	nop			@ (mov r8, r8)
10041dd8:	48400000 	.word	0x48400000

10041ddc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
10041ddc:	b580      	push	{r7, lr}
10041dde:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
10041de0:	f007 fe76 	bl	10049ad0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
10041de4:	f000 f810 	bl	10041e08 <SystemClock_Config>

  /* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
10041de8:	f000 f845 	bl	10041e76 <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
10041dec:	f000 f8c6 	bl	10041f7c <MX_GPIO_Init>
  MX_RADIO_Init();
10041df0:	f000 f872 	bl	10041ed8 <MX_RADIO_Init>
  MX_RADIO_TIMER_Init();
10041df4:	f000 f88e 	bl	10041f14 <MX_RADIO_TIMER_Init>
  MX_PKA_Init();
10041df8:	f000 f85a 	bl	10041eb0 <MX_PKA_Init>
  /* USER CODE BEGIN 2 */

  /* USER CODE END 2 */

  /* Init code for STM32_BLE */
  MX_APPE_Init(NULL);
10041dfc:	2000      	movs	r0, #0
10041dfe:	f7ff fdc3 	bl	10041988 <MX_APPE_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
    MX_APPE_Process();
10041e02:	f7ff ff59 	bl	10041cb8 <MX_APPE_Process>
10041e06:	e7fc      	b.n	10041e02 <main+0x26>

10041e08 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
10041e08:	b590      	push	{r4, r7, lr}
10041e0a:	b089      	sub	sp, #36	@ 0x24
10041e0c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
10041e0e:	2408      	movs	r4, #8
10041e10:	193b      	adds	r3, r7, r4
10041e12:	0018      	movs	r0, r3
10041e14:	2318      	movs	r3, #24
10041e16:	001a      	movs	r2, r3
10041e18:	2100      	movs	r1, #0
10041e1a:	f029 feb9 	bl	1006bb90 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
10041e1e:	003b      	movs	r3, r7
10041e20:	0018      	movs	r0, r3
10041e22:	2308      	movs	r3, #8
10041e24:	001a      	movs	r2, r3
10041e26:	2100      	movs	r1, #0
10041e28:	f029 feb2 	bl	1006bb90 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
10041e2c:	193b      	adds	r3, r7, r4
10041e2e:	2203      	movs	r2, #3
10041e30:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
10041e32:	193b      	adds	r3, r7, r4
10041e34:	2280      	movs	r2, #128	@ 0x80
10041e36:	0252      	lsls	r2, r2, #9
10041e38:	605a      	str	r2, [r3, #4]
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
10041e3a:	193b      	adds	r3, r7, r4
10041e3c:	2210      	movs	r2, #16
10041e3e:	60da      	str	r2, [r3, #12]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
10041e40:	193b      	adds	r3, r7, r4
10041e42:	0018      	movs	r0, r3
10041e44:	f00a ff56 	bl	1004ccf4 <HAL_RCC_OscConfig>
10041e48:	1e03      	subs	r3, r0, #0
10041e4a:	d001      	beq.n	10041e50 <SystemClock_Config+0x48>
  {
    Error_Handler();
10041e4c:	f000 f8a3 	bl	10041f96 <Error_Handler>
  }

  /** Configure the SYSCLKSource and SYSCLKDivider
  */
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_RC64MPLL;
10041e50:	003b      	movs	r3, r7
10041e52:	2200      	movs	r2, #0
10041e54:	601a      	str	r2, [r3, #0]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_RC64MPLL_DIV2;
10041e56:	003b      	movs	r3, r7
10041e58:	2220      	movs	r2, #32
10041e5a:	605a      	str	r2, [r3, #4]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_WAIT_STATES_0) != HAL_OK)
10041e5c:	003b      	movs	r3, r7
10041e5e:	2100      	movs	r1, #0
10041e60:	0018      	movs	r0, r3
10041e62:	f00b f891 	bl	1004cf88 <HAL_RCC_ClockConfig>
10041e66:	1e03      	subs	r3, r0, #0
10041e68:	d001      	beq.n	10041e6e <SystemClock_Config+0x66>
  {
    Error_Handler();
10041e6a:	f000 f894 	bl	10041f96 <Error_Handler>
  }
}
10041e6e:	46c0      	nop			@ (mov r8, r8)
10041e70:	46bd      	mov	sp, r7
10041e72:	b009      	add	sp, #36	@ 0x24
10041e74:	bd90      	pop	{r4, r7, pc}

10041e76 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
10041e76:	b580      	push	{r7, lr}
10041e78:	b086      	sub	sp, #24
10041e7a:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
10041e7c:	003b      	movs	r3, r7
10041e7e:	0018      	movs	r0, r3
10041e80:	2318      	movs	r3, #24
10041e82:	001a      	movs	r2, r3
10041e84:	2100      	movs	r1, #0
10041e86:	f029 fe83 	bl	1006bb90 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SMPS;
10041e8a:	003b      	movs	r3, r7
10041e8c:	2202      	movs	r2, #2
10041e8e:	601a      	str	r2, [r3, #0]
  PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLK_DIV4;
10041e90:	003b      	movs	r3, r7
10041e92:	2280      	movs	r2, #128	@ 0x80
10041e94:	0152      	lsls	r2, r2, #5
10041e96:	615a      	str	r2, [r3, #20]

  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
10041e98:	003b      	movs	r3, r7
10041e9a:	0018      	movs	r0, r3
10041e9c:	f00b fa0a 	bl	1004d2b4 <HAL_RCCEx_PeriphCLKConfig>
10041ea0:	1e03      	subs	r3, r0, #0
10041ea2:	d001      	beq.n	10041ea8 <PeriphCommonClock_Config+0x32>
  {
    Error_Handler();
10041ea4:	f000 f877 	bl	10041f96 <Error_Handler>
  }
}
10041ea8:	46c0      	nop			@ (mov r8, r8)
10041eaa:	46bd      	mov	sp, r7
10041eac:	b006      	add	sp, #24
10041eae:	bd80      	pop	{r7, pc}

10041eb0 <MX_PKA_Init>:
  * @brief PKA Initialization Function
  * @param None
  * @retval None
  */
static void MX_PKA_Init(void)
{
10041eb0:	b580      	push	{r7, lr}
10041eb2:	af00      	add	r7, sp, #0
  /* USER CODE END PKA_Init 0 */

  /* USER CODE BEGIN PKA_Init 1 */

  /* USER CODE END PKA_Init 1 */
  hpka.Instance = PKA;
10041eb4:	4b06      	ldr	r3, [pc, #24]	@ (10041ed0 <MX_PKA_Init+0x20>)
10041eb6:	4a07      	ldr	r2, [pc, #28]	@ (10041ed4 <MX_PKA_Init+0x24>)
10041eb8:	601a      	str	r2, [r3, #0]
  if (HAL_PKA_Init(&hpka) != HAL_OK)
10041eba:	4b05      	ldr	r3, [pc, #20]	@ (10041ed0 <MX_PKA_Init+0x20>)
10041ebc:	0018      	movs	r0, r3
10041ebe:	f008 fae2 	bl	1004a486 <HAL_PKA_Init>
10041ec2:	1e03      	subs	r3, r0, #0
10041ec4:	d001      	beq.n	10041eca <MX_PKA_Init+0x1a>
  {
    Error_Handler();
10041ec6:	f000 f866 	bl	10041f96 <Error_Handler>
  }
  /* USER CODE BEGIN PKA_Init 2 */

  /* USER CODE END PKA_Init 2 */

}
10041eca:	46c0      	nop			@ (mov r8, r8)
10041ecc:	46bd      	mov	sp, r7
10041ece:	bd80      	pop	{r7, pc}
10041ed0:	200002c8 	.word	0x200002c8
10041ed4:	48300000 	.word	0x48300000

10041ed8 <MX_RADIO_Init>:
  * @brief RADIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_RADIO_Init(void)
{
10041ed8:	b580      	push	{r7, lr}
10041eda:	b082      	sub	sp, #8
10041edc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RADIO_Init 0 */

  /* USER CODE END RADIO_Init 0 */

  RADIO_HandleTypeDef hradio = {0};
10041ede:	2300      	movs	r3, #0
10041ee0:	607b      	str	r3, [r7, #4]

  /* USER CODE BEGIN RADIO_Init 1 */

  /* USER CODE END RADIO_Init 1 */

  if (__HAL_RCC_RADIO_IS_CLK_DISABLED())
10041ee2:	2001      	movs	r0, #1
10041ee4:	f7ff ff44 	bl	10041d70 <LL_APB2_GRP1_IsEnabledClock>
10041ee8:	1e03      	subs	r3, r0, #0
10041eea:	d108      	bne.n	10041efe <MX_RADIO_Init+0x26>
  {
    /* Radio Peripheral reset */
    __HAL_RCC_RADIO_FORCE_RESET();
10041eec:	2001      	movs	r0, #1
10041eee:	f7ff ff53 	bl	10041d98 <LL_APB2_GRP1_ForceReset>
    __HAL_RCC_RADIO_RELEASE_RESET();
10041ef2:	2001      	movs	r0, #1
10041ef4:	f7ff ff60 	bl	10041db8 <LL_APB2_GRP1_ReleaseReset>

    /* Enable Radio peripheral clock */
    __HAL_RCC_RADIO_CLK_ENABLE();
10041ef8:	2001      	movs	r0, #1
10041efa:	f7ff ff23 	bl	10041d44 <LL_APB2_GRP1_EnableClock>
  }
  hradio.Instance = RADIO;
10041efe:	23c0      	movs	r3, #192	@ 0xc0
10041f00:	05db      	lsls	r3, r3, #23
10041f02:	607b      	str	r3, [r7, #4]
  HAL_RADIO_Init(&hradio);
10041f04:	1d3b      	adds	r3, r7, #4
10041f06:	0018      	movs	r0, r3
10041f08:	f008 fdb4 	bl	1004aa74 <HAL_RADIO_Init>
  /* USER CODE BEGIN RADIO_Init 2 */

  /* USER CODE END RADIO_Init 2 */

}
10041f0c:	46c0      	nop			@ (mov r8, r8)
10041f0e:	46bd      	mov	sp, r7
10041f10:	b002      	add	sp, #8
10041f12:	bd80      	pop	{r7, pc}

10041f14 <MX_RADIO_TIMER_Init>:
  * @brief RADIO_TIMER Initialization Function
  * @param None
  * @retval None
  */
static void MX_RADIO_TIMER_Init(void)
{
10041f14:	b580      	push	{r7, lr}
10041f16:	b082      	sub	sp, #8
10041f18:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN RADIO_TIMER_Init 0 */

  /* USER CODE END RADIO_TIMER_Init 0 */

  RADIO_TIMER_InitTypeDef RADIO_TIMER_InitStruct = {0};
10041f1a:	003b      	movs	r3, r7
10041f1c:	0018      	movs	r0, r3
10041f1e:	2308      	movs	r3, #8
10041f20:	001a      	movs	r2, r3
10041f22:	2100      	movs	r1, #0
10041f24:	f029 fe34 	bl	1006bb90 <memset>

  /* USER CODE BEGIN RADIO_TIMER_Init 1 */

  /* USER CODE END RADIO_TIMER_Init 1 */

  if (__HAL_RCC_RADIO_IS_CLK_DISABLED())
10041f28:	2001      	movs	r0, #1
10041f2a:	f7ff ff21 	bl	10041d70 <LL_APB2_GRP1_IsEnabledClock>
10041f2e:	1e03      	subs	r3, r0, #0
10041f30:	d108      	bne.n	10041f44 <MX_RADIO_TIMER_Init+0x30>
  {
    /* Radio Peripheral reset */
    __HAL_RCC_RADIO_FORCE_RESET();
10041f32:	2001      	movs	r0, #1
10041f34:	f7ff ff30 	bl	10041d98 <LL_APB2_GRP1_ForceReset>
    __HAL_RCC_RADIO_RELEASE_RESET();
10041f38:	2001      	movs	r0, #1
10041f3a:	f7ff ff3d 	bl	10041db8 <LL_APB2_GRP1_ReleaseReset>

    /* Enable Radio peripheral clock */
    __HAL_RCC_RADIO_CLK_ENABLE();
10041f3e:	2001      	movs	r0, #1
10041f40:	f7ff ff00 	bl	10041d44 <LL_APB2_GRP1_EnableClock>
  }
  /* Wait to be sure that the Radio Timer is active */
  while(LL_RADIO_TIMER_GetAbsoluteTime(WAKEUP) < 0x10);
10041f44:	46c0      	nop			@ (mov r8, r8)
10041f46:	4b0c      	ldr	r3, [pc, #48]	@ (10041f78 <MX_RADIO_TIMER_Init+0x64>)
10041f48:	0018      	movs	r0, r3
10041f4a:	f7ff fedb 	bl	10041d04 <LL_RADIO_TIMER_GetAbsoluteTime>
10041f4e:	0003      	movs	r3, r0
10041f50:	2b0f      	cmp	r3, #15
10041f52:	d9f8      	bls.n	10041f46 <MX_RADIO_TIMER_Init+0x32>
  RADIO_TIMER_InitStruct.XTAL_StartupTime = 320;
10041f54:	003b      	movs	r3, r7
10041f56:	22a0      	movs	r2, #160	@ 0xa0
10041f58:	0052      	lsls	r2, r2, #1
10041f5a:	801a      	strh	r2, [r3, #0]
  RADIO_TIMER_InitStruct.enableInitialCalibration = FALSE;
10041f5c:	003b      	movs	r3, r7
10041f5e:	2200      	movs	r2, #0
10041f60:	709a      	strb	r2, [r3, #2]
  RADIO_TIMER_InitStruct.periodicCalibrationInterval = 0;
10041f62:	003b      	movs	r3, r7
10041f64:	2200      	movs	r2, #0
10041f66:	605a      	str	r2, [r3, #4]
  HAL_RADIO_TIMER_Init(&RADIO_TIMER_InitStruct);
10041f68:	003b      	movs	r3, r7
10041f6a:	0018      	movs	r0, r3
10041f6c:	f009 fa98 	bl	1004b4a0 <HAL_RADIO_TIMER_Init>
  /* USER CODE BEGIN RADIO_TIMER_Init 2 */

  /* USER CODE END RADIO_TIMER_Init 2 */

}
10041f70:	46c0      	nop			@ (mov r8, r8)
10041f72:	46bd      	mov	sp, r7
10041f74:	b002      	add	sp, #8
10041f76:	bd80      	pop	{r7, pc}
10041f78:	60001800 	.word	0x60001800

10041f7c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
10041f7c:	b580      	push	{r7, lr}
10041f7e:	af00      	add	r7, sp, #0
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOB_CLK_ENABLE();
10041f80:	2008      	movs	r0, #8
10041f82:	f7ff fec9 	bl	10041d18 <LL_AHB1_GRP1_EnableClock>
  __HAL_RCC_GPIOA_CLK_ENABLE();
10041f86:	2004      	movs	r0, #4
10041f88:	f7ff fec6 	bl	10041d18 <LL_AHB1_GRP1_EnableClock>

  /*RT DEBUG GPIO_Init */
  RT_DEBUG_GPIO_Init();
10041f8c:	f004 fc03 	bl	10046796 <RT_DEBUG_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  GPIO_InitStruct.Alternate = 2;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
#endif
/* USER CODE END MX_GPIO_Init_2 */
}
10041f90:	46c0      	nop			@ (mov r8, r8)
10041f92:	46bd      	mov	sp, r7
10041f94:	bd80      	pop	{r7, pc}

10041f96 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
10041f96:	b580      	push	{r7, lr}
10041f98:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
10041f9a:	b672      	cpsid	i
}
10041f9c:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  NVIC_SystemReset();
10041f9e:	f7ff fe9f 	bl	10041ce0 <__NVIC_SystemReset>
	...

10041fa4 <LL_AHB1_GRP1_EnableClock>:
{
10041fa4:	b580      	push	{r7, lr}
10041fa6:	b084      	sub	sp, #16
10041fa8:	af00      	add	r7, sp, #0
10041faa:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->AHBENR, Periphs);
10041fac:	4b07      	ldr	r3, [pc, #28]	@ (10041fcc <LL_AHB1_GRP1_EnableClock+0x28>)
10041fae:	6d19      	ldr	r1, [r3, #80]	@ 0x50
10041fb0:	4b06      	ldr	r3, [pc, #24]	@ (10041fcc <LL_AHB1_GRP1_EnableClock+0x28>)
10041fb2:	687a      	ldr	r2, [r7, #4]
10041fb4:	430a      	orrs	r2, r1
10041fb6:	651a      	str	r2, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHBENR, Periphs);
10041fb8:	4b04      	ldr	r3, [pc, #16]	@ (10041fcc <LL_AHB1_GRP1_EnableClock+0x28>)
10041fba:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
10041fbc:	687a      	ldr	r2, [r7, #4]
10041fbe:	4013      	ands	r3, r2
10041fc0:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
10041fc2:	68fb      	ldr	r3, [r7, #12]
}
10041fc4:	46c0      	nop			@ (mov r8, r8)
10041fc6:	46bd      	mov	sp, r7
10041fc8:	b004      	add	sp, #16
10041fca:	bd80      	pop	{r7, pc}
10041fcc:	48400000 	.word	0x48400000

10041fd0 <LL_APB1_GRP1_EnableClock>:
{
10041fd0:	b580      	push	{r7, lr}
10041fd2:	b084      	sub	sp, #16
10041fd4:	af00      	add	r7, sp, #0
10041fd6:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB1ENR, Periphs);
10041fd8:	4b07      	ldr	r3, [pc, #28]	@ (10041ff8 <LL_APB1_GRP1_EnableClock+0x28>)
10041fda:	6d99      	ldr	r1, [r3, #88]	@ 0x58
10041fdc:	4b06      	ldr	r3, [pc, #24]	@ (10041ff8 <LL_APB1_GRP1_EnableClock+0x28>)
10041fde:	687a      	ldr	r2, [r7, #4]
10041fe0:	430a      	orrs	r2, r1
10041fe2:	659a      	str	r2, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
10041fe4:	4b04      	ldr	r3, [pc, #16]	@ (10041ff8 <LL_APB1_GRP1_EnableClock+0x28>)
10041fe6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
10041fe8:	687a      	ldr	r2, [r7, #4]
10041fea:	4013      	ands	r3, r2
10041fec:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
10041fee:	68fb      	ldr	r3, [r7, #12]
}
10041ff0:	46c0      	nop			@ (mov r8, r8)
10041ff2:	46bd      	mov	sp, r7
10041ff4:	b004      	add	sp, #16
10041ff6:	bd80      	pop	{r7, pc}
10041ff8:	48400000 	.word	0x48400000

10041ffc <LL_APB2_GRP1_EnableClock>:
{
10041ffc:	b580      	push	{r7, lr}
10041ffe:	b084      	sub	sp, #16
10042000:	af00      	add	r7, sp, #0
10042002:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB2ENR, Periphs);
10042004:	4b07      	ldr	r3, [pc, #28]	@ (10042024 <LL_APB2_GRP1_EnableClock+0x28>)
10042006:	6e19      	ldr	r1, [r3, #96]	@ 0x60
10042008:	4b06      	ldr	r3, [pc, #24]	@ (10042024 <LL_APB2_GRP1_EnableClock+0x28>)
1004200a:	687a      	ldr	r2, [r7, #4]
1004200c:	430a      	orrs	r2, r1
1004200e:	661a      	str	r2, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
10042010:	4b04      	ldr	r3, [pc, #16]	@ (10042024 <LL_APB2_GRP1_EnableClock+0x28>)
10042012:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
10042014:	687a      	ldr	r2, [r7, #4]
10042016:	4013      	ands	r3, r2
10042018:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
1004201a:	68fb      	ldr	r3, [r7, #12]
}
1004201c:	46c0      	nop			@ (mov r8, r8)
1004201e:	46bd      	mov	sp, r7
10042020:	b004      	add	sp, #16
10042022:	bd80      	pop	{r7, pc}
10042024:	48400000 	.word	0x48400000

10042028 <LL_APB2_GRP1_IsEnabledClock>:
{
10042028:	b580      	push	{r7, lr}
1004202a:	b082      	sub	sp, #8
1004202c:	af00      	add	r7, sp, #0
1004202e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
10042030:	4b06      	ldr	r3, [pc, #24]	@ (1004204c <LL_APB2_GRP1_IsEnabledClock+0x24>)
10042032:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
10042034:	687a      	ldr	r2, [r7, #4]
10042036:	4013      	ands	r3, r2
10042038:	687a      	ldr	r2, [r7, #4]
1004203a:	429a      	cmp	r2, r3
1004203c:	d101      	bne.n	10042042 <LL_APB2_GRP1_IsEnabledClock+0x1a>
1004203e:	2301      	movs	r3, #1
10042040:	e000      	b.n	10042044 <LL_APB2_GRP1_IsEnabledClock+0x1c>
10042042:	2300      	movs	r3, #0
}
10042044:	0018      	movs	r0, r3
10042046:	46bd      	mov	sp, r7
10042048:	b002      	add	sp, #8
1004204a:	bd80      	pop	{r7, pc}
1004204c:	48400000 	.word	0x48400000

10042050 <LL_APB2_GRP1_ForceReset>:
{
10042050:	b580      	push	{r7, lr}
10042052:	b082      	sub	sp, #8
10042054:	af00      	add	r7, sp, #0
10042056:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB2RSTR, Periphs);
10042058:	4b04      	ldr	r3, [pc, #16]	@ (1004206c <LL_APB2_GRP1_ForceReset+0x1c>)
1004205a:	6c19      	ldr	r1, [r3, #64]	@ 0x40
1004205c:	4b03      	ldr	r3, [pc, #12]	@ (1004206c <LL_APB2_GRP1_ForceReset+0x1c>)
1004205e:	687a      	ldr	r2, [r7, #4]
10042060:	430a      	orrs	r2, r1
10042062:	641a      	str	r2, [r3, #64]	@ 0x40
}
10042064:	46c0      	nop			@ (mov r8, r8)
10042066:	46bd      	mov	sp, r7
10042068:	b002      	add	sp, #8
1004206a:	bd80      	pop	{r7, pc}
1004206c:	48400000 	.word	0x48400000

10042070 <LL_APB2_GRP1_ReleaseReset>:
{
10042070:	b580      	push	{r7, lr}
10042072:	b082      	sub	sp, #8
10042074:	af00      	add	r7, sp, #0
10042076:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(RCC->APB2RSTR, Periphs);
10042078:	4b05      	ldr	r3, [pc, #20]	@ (10042090 <LL_APB2_GRP1_ReleaseReset+0x20>)
1004207a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
1004207c:	687b      	ldr	r3, [r7, #4]
1004207e:	43d9      	mvns	r1, r3
10042080:	4b03      	ldr	r3, [pc, #12]	@ (10042090 <LL_APB2_GRP1_ReleaseReset+0x20>)
10042082:	400a      	ands	r2, r1
10042084:	641a      	str	r2, [r3, #64]	@ 0x40
}
10042086:	46c0      	nop			@ (mov r8, r8)
10042088:	46bd      	mov	sp, r7
1004208a:	b002      	add	sp, #8
1004208c:	bd80      	pop	{r7, pc}
1004208e:	46c0      	nop			@ (mov r8, r8)
10042090:	48400000 	.word	0x48400000

10042094 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
10042094:	b580      	push	{r7, lr}
10042096:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */
  lowPowerIOSetup();
10042098:	f000 f8bc 	bl	10042214 <lowPowerIOSetup>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
1004209c:	46c0      	nop			@ (mov r8, r8)
1004209e:	46bd      	mov	sp, r7
100420a0:	bd80      	pop	{r7, pc}
	...

100420a4 <HAL_PKA_MspInit>:
* This function configures the hardware resources used in this example
* @param hpka: PKA handle pointer
* @retval None
*/
void HAL_PKA_MspInit(PKA_HandleTypeDef* hpka)
{
100420a4:	b580      	push	{r7, lr}
100420a6:	b082      	sub	sp, #8
100420a8:	af00      	add	r7, sp, #0
100420aa:	6078      	str	r0, [r7, #4]
  if(hpka->Instance==PKA)
100420ac:	687b      	ldr	r3, [r7, #4]
100420ae:	681b      	ldr	r3, [r3, #0]
100420b0:	4a09      	ldr	r2, [pc, #36]	@ (100420d8 <HAL_PKA_MspInit+0x34>)
100420b2:	4293      	cmp	r3, r2
100420b4:	d10c      	bne.n	100420d0 <HAL_PKA_MspInit+0x2c>
  {
  /* USER CODE BEGIN PKA_MspInit 0 */

  /* USER CODE END PKA_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_PKA_CLK_ENABLE();
100420b6:	2380      	movs	r3, #128	@ 0x80
100420b8:	025b      	lsls	r3, r3, #9
100420ba:	0018      	movs	r0, r3
100420bc:	f7ff ff72 	bl	10041fa4 <LL_AHB1_GRP1_EnableClock>
    /* PKA interrupt Init */
    HAL_NVIC_SetPriority(PKA_IRQn, 1, 0);
100420c0:	2200      	movs	r2, #0
100420c2:	2101      	movs	r1, #1
100420c4:	200d      	movs	r0, #13
100420c6:	f007 fe6b 	bl	10049da0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(PKA_IRQn);
100420ca:	200d      	movs	r0, #13
100420cc:	f007 fe7d 	bl	10049dca <HAL_NVIC_EnableIRQ>

  /* USER CODE END PKA_MspInit 1 */

  }

}
100420d0:	46c0      	nop			@ (mov r8, r8)
100420d2:	46bd      	mov	sp, r7
100420d4:	b002      	add	sp, #8
100420d6:	bd80      	pop	{r7, pc}
100420d8:	48300000 	.word	0x48300000

100420dc <HAL_RADIO_MspInit>:
* This function configures the hardware resources used in this example
* @param hradio: RADIO handle pointer
* @retval None
*/
void HAL_RADIO_MspInit(RADIO_HandleTypeDef* hradio)
{
100420dc:	b590      	push	{r4, r7, lr}
100420de:	b089      	sub	sp, #36	@ 0x24
100420e0:	af00      	add	r7, sp, #0
100420e2:	6078      	str	r0, [r7, #4]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
100420e4:	2408      	movs	r4, #8
100420e6:	193b      	adds	r3, r7, r4
100420e8:	0018      	movs	r0, r3
100420ea:	2318      	movs	r3, #24
100420ec:	001a      	movs	r2, r3
100420ee:	2100      	movs	r1, #0
100420f0:	f029 fd4e 	bl	1006bb90 <memset>
  if(hradio->Instance==RADIO)
100420f4:	687b      	ldr	r3, [r7, #4]
100420f6:	681a      	ldr	r2, [r3, #0]
100420f8:	23c0      	movs	r3, #192	@ 0xc0
100420fa:	05db      	lsls	r3, r3, #23
100420fc:	429a      	cmp	r2, r3
100420fe:	d12d      	bne.n	1004215c <HAL_RADIO_MspInit+0x80>

  /* USER CODE END RADIO_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RF;
10042100:	193b      	adds	r3, r7, r4
10042102:	2201      	movs	r2, #1
10042104:	601a      	str	r2, [r3, #0]
    PeriphClkInitStruct.RFClockSelection = RCC_RF_CLK_16M;
10042106:	193b      	adds	r3, r7, r4
10042108:	2204      	movs	r2, #4
1004210a:	611a      	str	r2, [r3, #16]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
1004210c:	193b      	adds	r3, r7, r4
1004210e:	0018      	movs	r0, r3
10042110:	f00b f8d0 	bl	1004d2b4 <HAL_RCCEx_PeriphCLKConfig>
10042114:	1e03      	subs	r3, r0, #0
10042116:	d001      	beq.n	1004211c <HAL_RADIO_MspInit+0x40>
    {
      Error_Handler();
10042118:	f7ff ff3d 	bl	10041f96 <Error_Handler>
    }

    /* Peripheral clock enable */
    if (__HAL_RCC_RADIO_IS_CLK_DISABLED())
1004211c:	2001      	movs	r0, #1
1004211e:	f7ff ff83 	bl	10042028 <LL_APB2_GRP1_IsEnabledClock>
10042122:	1e03      	subs	r3, r0, #0
10042124:	d108      	bne.n	10042138 <HAL_RADIO_MspInit+0x5c>
    {
      /* Radio reset */
      __HAL_RCC_RADIO_FORCE_RESET();
10042126:	2001      	movs	r0, #1
10042128:	f7ff ff92 	bl	10042050 <LL_APB2_GRP1_ForceReset>
      __HAL_RCC_RADIO_RELEASE_RESET();
1004212c:	2001      	movs	r0, #1
1004212e:	f7ff ff9f 	bl	10042070 <LL_APB2_GRP1_ReleaseReset>

      /* Enable Radio peripheral clock */
      __HAL_RCC_RADIO_CLK_ENABLE();
10042132:	2001      	movs	r0, #1
10042134:	f7ff ff62 	bl	10041ffc <LL_APB2_GRP1_EnableClock>
    }

    /**RADIO GPIO Configuration
    RF1     ------> RADIO_RF1
    */
    RT_DEBUG_GPIO_Init();
10042138:	f004 fb2d 	bl	10046796 <RT_DEBUG_GPIO_Init>

    /* RADIO interrupt Init */
    HAL_NVIC_SetPriority(RADIO_TXRX_IRQn, 0, 0);
1004213c:	2200      	movs	r2, #0
1004213e:	2100      	movs	r1, #0
10042140:	2012      	movs	r0, #18
10042142:	f007 fe2d 	bl	10049da0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RADIO_TXRX_IRQn);
10042146:	2012      	movs	r0, #18
10042148:	f007 fe3f 	bl	10049dca <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(RADIO_TXRX_SEQ_IRQn, 0, 0);
1004214c:	2200      	movs	r2, #0
1004214e:	2100      	movs	r1, #0
10042150:	2019      	movs	r0, #25
10042152:	f007 fe25 	bl	10049da0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(RADIO_TXRX_SEQ_IRQn);
10042156:	2019      	movs	r0, #25
10042158:	f007 fe37 	bl	10049dca <HAL_NVIC_EnableIRQ>

  /* USER CODE END RADIO_MspInit 1 */

  }

}
1004215c:	46c0      	nop			@ (mov r8, r8)
1004215e:	46bd      	mov	sp, r7
10042160:	b009      	add	sp, #36	@ 0x24
10042162:	bd90      	pop	{r4, r7, pc}

10042164 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
10042164:	b590      	push	{r4, r7, lr}
10042166:	b089      	sub	sp, #36	@ 0x24
10042168:	af00      	add	r7, sp, #0
1004216a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
1004216c:	240c      	movs	r4, #12
1004216e:	193b      	adds	r3, r7, r4
10042170:	0018      	movs	r0, r3
10042172:	2314      	movs	r3, #20
10042174:	001a      	movs	r2, r3
10042176:	2100      	movs	r1, #0
10042178:	f029 fd0a 	bl	1006bb90 <memset>
  if(huart->Instance==USART1)
1004217c:	687b      	ldr	r3, [r7, #4]
1004217e:	681b      	ldr	r3, [r3, #0]
10042180:	4a22      	ldr	r2, [pc, #136]	@ (1004220c <HAL_UART_MspInit+0xa8>)
10042182:	4293      	cmp	r3, r2
10042184:	d13e      	bne.n	10042204 <HAL_UART_MspInit+0xa0>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
10042186:	2380      	movs	r3, #128	@ 0x80
10042188:	00db      	lsls	r3, r3, #3
1004218a:	0018      	movs	r0, r3
1004218c:	f7ff ff20 	bl	10041fd0 <LL_APB1_GRP1_EnableClock>

    __HAL_RCC_GPIOB_CLK_ENABLE();
10042190:	2008      	movs	r0, #8
10042192:	f7ff ff07 	bl	10041fa4 <LL_AHB1_GRP1_EnableClock>
    __HAL_RCC_GPIOA_CLK_ENABLE();
10042196:	2004      	movs	r0, #4
10042198:	f7ff ff04 	bl	10041fa4 <LL_AHB1_GRP1_EnableClock>
    /**USART1 GPIO Configuration
    PB0     ------> USART1_RX
    PA1     ------> USART1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
1004219c:	193b      	adds	r3, r7, r4
1004219e:	2201      	movs	r2, #1
100421a0:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
100421a2:	193b      	adds	r3, r7, r4
100421a4:	2202      	movs	r2, #2
100421a6:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
100421a8:	193b      	adds	r3, r7, r4
100421aa:	2200      	movs	r2, #0
100421ac:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
100421ae:	193b      	adds	r3, r7, r4
100421b0:	2200      	movs	r2, #0
100421b2:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
100421b4:	193b      	adds	r3, r7, r4
100421b6:	2200      	movs	r2, #0
100421b8:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
100421ba:	193b      	adds	r3, r7, r4
100421bc:	4a14      	ldr	r2, [pc, #80]	@ (10042210 <HAL_UART_MspInit+0xac>)
100421be:	0019      	movs	r1, r3
100421c0:	0010      	movs	r0, r2
100421c2:	f007 ff7d 	bl	1004a0c0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1;
100421c6:	0021      	movs	r1, r4
100421c8:	187b      	adds	r3, r7, r1
100421ca:	2202      	movs	r2, #2
100421cc:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
100421ce:	187b      	adds	r3, r7, r1
100421d0:	2202      	movs	r2, #2
100421d2:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
100421d4:	187b      	adds	r3, r7, r1
100421d6:	2200      	movs	r2, #0
100421d8:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
100421da:	187b      	adds	r3, r7, r1
100421dc:	2200      	movs	r2, #0
100421de:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF2_USART1;
100421e0:	187b      	adds	r3, r7, r1
100421e2:	2202      	movs	r2, #2
100421e4:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
100421e6:	187a      	adds	r2, r7, r1
100421e8:	2390      	movs	r3, #144	@ 0x90
100421ea:	05db      	lsls	r3, r3, #23
100421ec:	0011      	movs	r1, r2
100421ee:	0018      	movs	r0, r3
100421f0:	f007 ff66 	bl	1004a0c0 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 1, 0);
100421f4:	2200      	movs	r2, #0
100421f6:	2101      	movs	r1, #1
100421f8:	2008      	movs	r0, #8
100421fa:	f007 fdd1 	bl	10049da0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
100421fe:	2008      	movs	r0, #8
10042200:	f007 fde3 	bl	10049dca <HAL_NVIC_EnableIRQ>

  /* USER CODE END USART1_MspInit 1 */

  }

}
10042204:	46c0      	nop			@ (mov r8, r8)
10042206:	46bd      	mov	sp, r7
10042208:	b009      	add	sp, #36	@ 0x24
1004220a:	bd90      	pop	{r4, r7, pc}
1004220c:	41004000 	.word	0x41004000
10042210:	48100000 	.word	0x48100000

10042214 <lowPowerIOSetup>:
  * @brief  Configures the IOs pull resistors to have the optimized power consumption.
  * @param  None
  * @retval None
  */
static void lowPowerIOSetup(void)
{
10042214:	b580      	push	{r7, lr}
10042216:	af00      	add	r7, sp, #0
  
  HAL_PWREx_EnableGPIOPullUp(PWR_GPIO_A, 
10042218:	210f      	movs	r1, #15
1004221a:	2000      	movs	r0, #0
1004221c:	f008 fa10 	bl	1004a640 <HAL_PWREx_EnableGPIOPullUp>
                       PWR_GPIO_BIT_0|
                       PWR_GPIO_BIT_1|
                       PWR_GPIO_BIT_2|                         
                       PWR_GPIO_BIT_3);
  
  HAL_PWREx_EnableGPIOPullDown(PWR_GPIO_A, 
10042220:	23f0      	movs	r3, #240	@ 0xf0
10042222:	011b      	lsls	r3, r3, #4
10042224:	0019      	movs	r1, r3
10042226:	2000      	movs	r0, #0
10042228:	f008 fa44 	bl	1004a6b4 <HAL_PWREx_EnableGPIOPullDown>
                             PWR_GPIO_BIT_8|
                             PWR_GPIO_BIT_9|
                             PWR_GPIO_BIT_10|
                             PWR_GPIO_BIT_11);
  
  HAL_PWREx_EnableGPIOPullDown(PWR_GPIO_B, 
1004222c:	4b06      	ldr	r3, [pc, #24]	@ (10042248 <lowPowerIOSetup+0x34>)
1004222e:	0019      	movs	r1, r3
10042230:	2001      	movs	r0, #1
10042232:	f008 fa3f 	bl	1004a6b4 <HAL_PWREx_EnableGPIOPullDown>
                             PWR_GPIO_BIT_6|
                             PWR_GPIO_BIT_7|
                             PWR_GPIO_BIT_12|
                             PWR_GPIO_BIT_13);
  
  HAL_PWREx_EnableGPIOPullUp(PWR_GPIO_B, 
10042236:	4b05      	ldr	r3, [pc, #20]	@ (1004224c <lowPowerIOSetup+0x38>)
10042238:	0019      	movs	r1, r3
1004223a:	2001      	movs	r0, #1
1004223c:	f008 fa00 	bl	1004a640 <HAL_PWREx_EnableGPIOPullUp>
                       PWR_GPIO_BIT_2|
                       PWR_GPIO_BIT_4|
                       PWR_GPIO_BIT_5|  
                       PWR_GPIO_BIT_14|
                       PWR_GPIO_BIT_15);
}
10042240:	46c0      	nop			@ (mov r8, r8)
10042242:	46bd      	mov	sp, r7
10042244:	bd80      	pop	{r7, pc}
10042246:	46c0      	nop			@ (mov r8, r8)
10042248:	000030c9 	.word	0x000030c9
1004224c:	0000c036 	.word	0x0000c036

10042250 <LL_USART_IsActiveFlag_RXNE_RXFNE>:
{
10042250:	b580      	push	{r7, lr}
10042252:	b082      	sub	sp, #8
10042254:	af00      	add	r7, sp, #0
10042256:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(USARTx->ISR, USART_ISR_RXNE_RXFNE) == (USART_ISR_RXNE_RXFNE)) ? 1UL : 0UL);
10042258:	687b      	ldr	r3, [r7, #4]
1004225a:	69db      	ldr	r3, [r3, #28]
1004225c:	2220      	movs	r2, #32
1004225e:	4013      	ands	r3, r2
10042260:	2b20      	cmp	r3, #32
10042262:	d101      	bne.n	10042268 <LL_USART_IsActiveFlag_RXNE_RXFNE+0x18>
10042264:	2301      	movs	r3, #1
10042266:	e000      	b.n	1004226a <LL_USART_IsActiveFlag_RXNE_RXFNE+0x1a>
10042268:	2300      	movs	r3, #0
}
1004226a:	0018      	movs	r0, r3
1004226c:	46bd      	mov	sp, r7
1004226e:	b002      	add	sp, #8
10042270:	bd80      	pop	{r7, pc}

10042272 <LL_USART_ReceiveData8>:
  * @rmtoll RDR          RDR           LL_USART_ReceiveData8
  * @param  USARTx USART Instance
  * @retval Value between Min_Data=0x00 and Max_Data=0xFF
  */
__STATIC_INLINE uint8_t LL_USART_ReceiveData8(const USART_TypeDef *USARTx)
{
10042272:	b580      	push	{r7, lr}
10042274:	b082      	sub	sp, #8
10042276:	af00      	add	r7, sp, #0
10042278:	6078      	str	r0, [r7, #4]
  return (uint8_t)(READ_BIT(USARTx->RDR, USART_RDR_RDR) & 0xFFU);
1004227a:	687b      	ldr	r3, [r7, #4]
1004227c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
1004227e:	b2db      	uxtb	r3, r3
}
10042280:	0018      	movs	r0, r3
10042282:	46bd      	mov	sp, r7
10042284:	b002      	add	sp, #8
10042286:	bd80      	pop	{r7, pc}

10042288 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
10042288:	b580      	push	{r7, lr}
1004228a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  HAL_NVIC_SystemReset();
1004228c:	f007 fdad 	bl	10049dea <HAL_NVIC_SystemReset>
  /* USER CODE END NonMaskableInt_IRQn 1 */
}
10042290:	46c0      	nop			@ (mov r8, r8)
10042292:	46bd      	mov	sp, r7
10042294:	bd80      	pop	{r7, pc}

10042296 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
10042296:	b580      	push	{r7, lr}
10042298:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */
  HAL_NVIC_SystemReset();
1004229a:	f007 fda6 	bl	10049dea <HAL_NVIC_SystemReset>
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
1004229e:	e7fe      	b.n	1004229e <HardFault_Handler+0x8>

100422a0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
100422a0:	b580      	push	{r7, lr}
100422a2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
100422a4:	46c0      	nop			@ (mov r8, r8)
100422a6:	46bd      	mov	sp, r7
100422a8:	bd80      	pop	{r7, pc}

100422aa <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
100422aa:	b580      	push	{r7, lr}
100422ac:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
100422ae:	46c0      	nop			@ (mov r8, r8)
100422b0:	46bd      	mov	sp, r7
100422b2:	bd80      	pop	{r7, pc}

100422b4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
100422b4:	b580      	push	{r7, lr}
100422b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
100422b8:	f007 fc6a 	bl	10049b90 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
100422bc:	46c0      	nop			@ (mov r8, r8)
100422be:	46bd      	mov	sp, r7
100422c0:	bd80      	pop	{r7, pc}
	...

100422c4 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 Interrupt.
  */
void USART1_IRQHandler(void)
{
100422c4:	b580      	push	{r7, lr}
100422c6:	b082      	sub	sp, #8
100422c8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */
  uint8_t read_data; 
  
  /* If the RX FIFO is Not Empty */
  if(LL_USART_IsActiveFlag_RXNE(USART1) == 1) {
100422ca:	4b0d      	ldr	r3, [pc, #52]	@ (10042300 <USART1_IRQHandler+0x3c>)
100422cc:	0018      	movs	r0, r3
100422ce:	f7ff ffbf 	bl	10042250 <LL_USART_IsActiveFlag_RXNE_RXFNE>
100422d2:	0003      	movs	r3, r0
100422d4:	2b01      	cmp	r3, #1
100422d6:	d10c      	bne.n	100422f2 <USART1_IRQHandler+0x2e>
    /* Read a byte from the RX FIFO */
    read_data = LL_USART_ReceiveData8(USART1);
100422d8:	4b09      	ldr	r3, [pc, #36]	@ (10042300 <USART1_IRQHandler+0x3c>)
100422da:	0018      	movs	r0, r3
100422dc:	f7ff ffc9 	bl	10042272 <LL_USART_ReceiveData8>
100422e0:	0003      	movs	r3, r0
100422e2:	001a      	movs	r2, r3
100422e4:	1dfb      	adds	r3, r7, #7
100422e6:	701a      	strb	r2, [r3, #0]
    
    /* Send the data received to the user RX callback */
    UART_CMD_DataReceived(&read_data, 1);
100422e8:	1dfb      	adds	r3, r7, #7
100422ea:	2101      	movs	r1, #1
100422ec:	0018      	movs	r0, r3
100422ee:	f001 fea1 	bl	10044034 <UART_CMD_DataReceived>
  }
  
  USART1->ICR = USART_ICR_ORECF | USART_ICR_NECF | USART_ICR_PECF | USART_ICR_FECF;
100422f2:	4b03      	ldr	r3, [pc, #12]	@ (10042300 <USART1_IRQHandler+0x3c>)
100422f4:	220f      	movs	r2, #15
100422f6:	621a      	str	r2, [r3, #32]
  
  /* USER CODE END USART1_IRQn 0 */
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
100422f8:	46c0      	nop			@ (mov r8, r8)
100422fa:	46bd      	mov	sp, r7
100422fc:	b002      	add	sp, #8
100422fe:	bd80      	pop	{r7, pc}
10042300:	41004000 	.word	0x41004000

10042304 <PKA_IRQHandler>:

/**
  * @brief This function handles PKA global interrupt.
  */
void PKA_IRQHandler(void)
{
10042304:	b580      	push	{r7, lr}
10042306:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN PKA_IRQn 0 */

  /* USER CODE END PKA_IRQn 0 */
  HAL_PKA_IRQHandler(&hpka);
10042308:	4b03      	ldr	r3, [pc, #12]	@ (10042318 <PKA_IRQHandler+0x14>)
1004230a:	0018      	movs	r0, r3
1004230c:	f008 f918 	bl	1004a540 <HAL_PKA_IRQHandler>
  /* USER CODE BEGIN PKA_IRQn 1 */

  /* USER CODE END PKA_IRQn 1 */
}
10042310:	46c0      	nop			@ (mov r8, r8)
10042312:	46bd      	mov	sp, r7
10042314:	bd80      	pop	{r7, pc}
10042316:	46c0      	nop			@ (mov r8, r8)
10042318:	200002c8 	.word	0x200002c8

1004231c <RADIO_TIMER_CPU_WKUP_IRQHandler>:

/**
  * @brief This function handles RADIO_TIMER_CPU_WKUP global interrupt.
  */
void RADIO_TIMER_CPU_WKUP_IRQHandler(void)
{
1004231c:	b580      	push	{r7, lr}
1004231e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN RADIO_TIMER_CPU_WKUP_IRQn 0 */

  /* USER CODE END RADIO_TIMER_CPU_WKUP_IRQn 0 */
  HAL_RADIO_TIMER_CPU_WKUP_IRQHandler();
10042320:	f00a faf2 	bl	1004c908 <HAL_RADIO_TIMER_CPU_WKUP_IRQHandler>
  /* USER CODE BEGIN RADIO_TIMER_CPU_WKUP_IRQn 1 */

  /* USER CODE END RADIO_TIMER_CPU_WKUP_IRQn 1 */
}
10042324:	46c0      	nop			@ (mov r8, r8)
10042326:	46bd      	mov	sp, r7
10042328:	bd80      	pop	{r7, pc}

1004232a <RADIO_TIMER_ERROR_IRQHandler>:

/**
  * @brief This function handles RADIO_TIMER_ERROR global interrupt.
  */
void RADIO_TIMER_ERROR_IRQHandler(void)
{
1004232a:	b580      	push	{r7, lr}
1004232c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN RADIO_TIMER_ERROR_IRQn 0 */

  /* USER CODE END RADIO_TIMER_ERROR_IRQn 0 */
  HAL_RADIO_TIMER_ERROR_IRQHandler();
1004232e:	f00a faf4 	bl	1004c91a <HAL_RADIO_TIMER_ERROR_IRQHandler>
  /* USER CODE BEGIN RADIO_TIMER_ERROR_IRQn 1 */

  /* USER CODE END RADIO_TIMER_ERROR_IRQn 1 */
}
10042332:	46c0      	nop			@ (mov r8, r8)
10042334:	46bd      	mov	sp, r7
10042336:	bd80      	pop	{r7, pc}

10042338 <RADIO_TXRX_IRQHandler>:

/**
  * @brief This function handles RADIO_TXRX global interrupt.
  */
void RADIO_TXRX_IRQHandler(void)
{
10042338:	b580      	push	{r7, lr}
1004233a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN RADIO_TXRX_IRQn 0 */

  /* USER CODE END RADIO_TXRX_IRQn 0 */
  HAL_RADIO_TXRX_IRQHandler();
1004233c:	f008 ff32 	bl	1004b1a4 <HAL_RADIO_TXRX_IRQHandler>
  /* USER CODE BEGIN RADIO_TXRX_IRQn 1 */

  /* USER CODE END RADIO_TXRX_IRQn 1 */
}
10042340:	46c0      	nop			@ (mov r8, r8)
10042342:	46bd      	mov	sp, r7
10042344:	bd80      	pop	{r7, pc}

10042346 <RADIO_TXRX_SEQ_IRQHandler>:

/**
  * @brief This function handles RADIO_TXRX_SEQ global interrupt.
  */
void RADIO_TXRX_SEQ_IRQHandler(void)
{
10042346:	b580      	push	{r7, lr}
10042348:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN RADIO_TXRX_SEQ_IRQn 0 */

  /* USER CODE END RADIO_TXRX_SEQ_IRQn 0 */
  HAL_RADIO_TXRX_SEQ_IRQHandler();
1004234a:	f008 ff4c 	bl	1004b1e6 <HAL_RADIO_TXRX_SEQ_IRQHandler>
  /* USER CODE BEGIN RADIO_TXRX_SEQ_IRQn 1 */

  /* USER CODE END RADIO_TXRX_SEQ_IRQn 1 */
}
1004234e:	46c0      	nop			@ (mov r8, r8)
10042350:	46bd      	mov	sp, r7
10042352:	bd80      	pop	{r7, pc}

10042354 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
10042354:	b580      	push	{r7, lr}
10042356:	b086      	sub	sp, #24
10042358:	af00      	add	r7, sp, #0
1004235a:	60f8      	str	r0, [r7, #12]
1004235c:	60b9      	str	r1, [r7, #8]
1004235e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
10042360:	2300      	movs	r3, #0
10042362:	617b      	str	r3, [r7, #20]
10042364:	e00a      	b.n	1004237c <_read+0x28>
  {
    *ptr++ = __io_getchar();
10042366:	e000      	b.n	1004236a <_read+0x16>
10042368:	bf00      	nop
1004236a:	0001      	movs	r1, r0
1004236c:	68bb      	ldr	r3, [r7, #8]
1004236e:	1c5a      	adds	r2, r3, #1
10042370:	60ba      	str	r2, [r7, #8]
10042372:	b2ca      	uxtb	r2, r1
10042374:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
10042376:	697b      	ldr	r3, [r7, #20]
10042378:	3301      	adds	r3, #1
1004237a:	617b      	str	r3, [r7, #20]
1004237c:	697a      	ldr	r2, [r7, #20]
1004237e:	687b      	ldr	r3, [r7, #4]
10042380:	429a      	cmp	r2, r3
10042382:	dbf0      	blt.n	10042366 <_read+0x12>
  }

  return len;
10042384:	687b      	ldr	r3, [r7, #4]
}
10042386:	0018      	movs	r0, r3
10042388:	46bd      	mov	sp, r7
1004238a:	b006      	add	sp, #24
1004238c:	bd80      	pop	{r7, pc}

1004238e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
1004238e:	b580      	push	{r7, lr}
10042390:	b086      	sub	sp, #24
10042392:	af00      	add	r7, sp, #0
10042394:	60f8      	str	r0, [r7, #12]
10042396:	60b9      	str	r1, [r7, #8]
10042398:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
1004239a:	2300      	movs	r3, #0
1004239c:	617b      	str	r3, [r7, #20]
1004239e:	e009      	b.n	100423b4 <_write+0x26>
  {
    __io_putchar(*ptr++);
100423a0:	68bb      	ldr	r3, [r7, #8]
100423a2:	1c5a      	adds	r2, r3, #1
100423a4:	60ba      	str	r2, [r7, #8]
100423a6:	781b      	ldrb	r3, [r3, #0]
100423a8:	0018      	movs	r0, r3
100423aa:	f007 f99b 	bl	100496e4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
100423ae:	697b      	ldr	r3, [r7, #20]
100423b0:	3301      	adds	r3, #1
100423b2:	617b      	str	r3, [r7, #20]
100423b4:	697a      	ldr	r2, [r7, #20]
100423b6:	687b      	ldr	r3, [r7, #4]
100423b8:	429a      	cmp	r2, r3
100423ba:	dbf1      	blt.n	100423a0 <_write+0x12>
  }
  return len;
100423bc:	687b      	ldr	r3, [r7, #4]
}
100423be:	0018      	movs	r0, r3
100423c0:	46bd      	mov	sp, r7
100423c2:	b006      	add	sp, #24
100423c4:	bd80      	pop	{r7, pc}

100423c6 <_close>:

int _close(int file)
{
100423c6:	b580      	push	{r7, lr}
100423c8:	b082      	sub	sp, #8
100423ca:	af00      	add	r7, sp, #0
100423cc:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
100423ce:	2301      	movs	r3, #1
100423d0:	425b      	negs	r3, r3
}
100423d2:	0018      	movs	r0, r3
100423d4:	46bd      	mov	sp, r7
100423d6:	b002      	add	sp, #8
100423d8:	bd80      	pop	{r7, pc}

100423da <_fstat>:


int _fstat(int file, struct stat *st)
{
100423da:	b580      	push	{r7, lr}
100423dc:	b082      	sub	sp, #8
100423de:	af00      	add	r7, sp, #0
100423e0:	6078      	str	r0, [r7, #4]
100423e2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
100423e4:	683b      	ldr	r3, [r7, #0]
100423e6:	2280      	movs	r2, #128	@ 0x80
100423e8:	0192      	lsls	r2, r2, #6
100423ea:	605a      	str	r2, [r3, #4]
  return 0;
100423ec:	2300      	movs	r3, #0
}
100423ee:	0018      	movs	r0, r3
100423f0:	46bd      	mov	sp, r7
100423f2:	b002      	add	sp, #8
100423f4:	bd80      	pop	{r7, pc}

100423f6 <_isatty>:

int _isatty(int file)
{
100423f6:	b580      	push	{r7, lr}
100423f8:	b082      	sub	sp, #8
100423fa:	af00      	add	r7, sp, #0
100423fc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
100423fe:	2301      	movs	r3, #1
}
10042400:	0018      	movs	r0, r3
10042402:	46bd      	mov	sp, r7
10042404:	b002      	add	sp, #8
10042406:	bd80      	pop	{r7, pc}

10042408 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
10042408:	b580      	push	{r7, lr}
1004240a:	b084      	sub	sp, #16
1004240c:	af00      	add	r7, sp, #0
1004240e:	60f8      	str	r0, [r7, #12]
10042410:	60b9      	str	r1, [r7, #8]
10042412:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
10042414:	2300      	movs	r3, #0
}
10042416:	0018      	movs	r0, r3
10042418:	46bd      	mov	sp, r7
1004241a:	b004      	add	sp, #16
1004241c:	bd80      	pop	{r7, pc}
	...

10042420 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
10042420:	b580      	push	{r7, lr}
10042422:	b086      	sub	sp, #24
10042424:	af00      	add	r7, sp, #0
10042426:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
10042428:	4a14      	ldr	r2, [pc, #80]	@ (1004247c <_sbrk+0x5c>)
1004242a:	4b15      	ldr	r3, [pc, #84]	@ (10042480 <_sbrk+0x60>)
1004242c:	1ad3      	subs	r3, r2, r3
1004242e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
10042430:	697b      	ldr	r3, [r7, #20]
10042432:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
10042434:	4b13      	ldr	r3, [pc, #76]	@ (10042484 <_sbrk+0x64>)
10042436:	681b      	ldr	r3, [r3, #0]
10042438:	2b00      	cmp	r3, #0
1004243a:	d102      	bne.n	10042442 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
1004243c:	4b11      	ldr	r3, [pc, #68]	@ (10042484 <_sbrk+0x64>)
1004243e:	4a12      	ldr	r2, [pc, #72]	@ (10042488 <_sbrk+0x68>)
10042440:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
10042442:	4b10      	ldr	r3, [pc, #64]	@ (10042484 <_sbrk+0x64>)
10042444:	681a      	ldr	r2, [r3, #0]
10042446:	687b      	ldr	r3, [r7, #4]
10042448:	18d3      	adds	r3, r2, r3
1004244a:	693a      	ldr	r2, [r7, #16]
1004244c:	429a      	cmp	r2, r3
1004244e:	d207      	bcs.n	10042460 <_sbrk+0x40>
  {
    errno = ENOMEM;
10042450:	f029 fc2a 	bl	1006bca8 <__errno>
10042454:	0003      	movs	r3, r0
10042456:	220c      	movs	r2, #12
10042458:	601a      	str	r2, [r3, #0]
    return (void *)-1;
1004245a:	2301      	movs	r3, #1
1004245c:	425b      	negs	r3, r3
1004245e:	e009      	b.n	10042474 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
10042460:	4b08      	ldr	r3, [pc, #32]	@ (10042484 <_sbrk+0x64>)
10042462:	681b      	ldr	r3, [r3, #0]
10042464:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
10042466:	4b07      	ldr	r3, [pc, #28]	@ (10042484 <_sbrk+0x64>)
10042468:	681a      	ldr	r2, [r3, #0]
1004246a:	687b      	ldr	r3, [r7, #4]
1004246c:	18d2      	adds	r2, r2, r3
1004246e:	4b05      	ldr	r3, [pc, #20]	@ (10042484 <_sbrk+0x64>)
10042470:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
10042472:	68fb      	ldr	r3, [r7, #12]
}
10042474:	0018      	movs	r0, r3
10042476:	46bd      	mov	sp, r7
10042478:	b006      	add	sp, #24
1004247a:	bd80      	pop	{r7, pc}
1004247c:	20010000 	.word	0x20010000
10042480:	00000c00 	.word	0x00000c00
10042484:	200002d4 	.word	0x200002d4
10042488:	20003ebc 	.word	0x20003ebc

1004248c <__NVIC_SystemReset>:
{
1004248c:	b580      	push	{r7, lr}
1004248e:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
10042490:	f3bf 8f4f 	dsb	sy
}
10042494:	46c0      	nop			@ (mov r8, r8)
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
10042496:	4b04      	ldr	r3, [pc, #16]	@ (100424a8 <__NVIC_SystemReset+0x1c>)
10042498:	4a04      	ldr	r2, [pc, #16]	@ (100424ac <__NVIC_SystemReset+0x20>)
1004249a:	60da      	str	r2, [r3, #12]
  __ASM volatile ("dsb 0xF":::"memory");
1004249c:	f3bf 8f4f 	dsb	sy
}
100424a0:	46c0      	nop			@ (mov r8, r8)
    __NOP();
100424a2:	46c0      	nop			@ (mov r8, r8)
100424a4:	e7fd      	b.n	100424a2 <__NVIC_SystemReset+0x16>
100424a6:	46c0      	nop			@ (mov r8, r8)
100424a8:	e000ed00 	.word	0xe000ed00
100424ac:	05fa0004 	.word	0x05fa0004

100424b0 <ModulesInit>:

/* USER CODE END PF */

/* Functions Definition ------------------------------------------------------*/
void ModulesInit(void)
{
100424b0:	b580      	push	{r7, lr}
100424b2:	af00      	add	r7, sp, #0
  BLENVM_Init();  
100424b4:	f002 f946 	bl	10044744 <BLENVM_Init>
  if (PKAMGR_Init() == PKAMGR_ERROR)
100424b8:	f006 f928 	bl	1004870c <PKAMGR_Init>
100424bc:	0003      	movs	r3, r0
100424be:	3301      	adds	r3, #1
100424c0:	d101      	bne.n	100424c6 <ModulesInit+0x16>
  {
    Error_Handler();
100424c2:	f7ff fd68 	bl	10041f96 <Error_Handler>
  }
}
100424c6:	46c0      	nop			@ (mov r8, r8)
100424c8:	46bd      	mov	sp, r7
100424ca:	bd80      	pop	{r7, pc}

100424cc <BLE_Init>:

void BLE_Init(void)
{
100424cc:	b5f0      	push	{r4, r5, r6, r7, lr}
100424ce:	b09b      	sub	sp, #108	@ 0x6c
100424d0:	af04      	add	r7, sp, #16
  uint8_t role;
  uint8_t privacy_type = 0;
100424d2:	2357      	movs	r3, #87	@ 0x57
100424d4:	18fb      	adds	r3, r7, r3
100424d6:	2200      	movs	r2, #0
100424d8:	701a      	strb	r2, [r3, #0]
  tBleStatus ret;
  uint16_t gatt_service_changed_handle;
  uint16_t gap_dev_name_char_handle;
  uint16_t gap_appearance_char_handle;
  uint16_t gap_periph_pref_conn_param_char_handle;
  uint8_t bd_address[6] = {0};
100424da:	2344      	movs	r3, #68	@ 0x44
100424dc:	18fb      	adds	r3, r7, r3
100424de:	2200      	movs	r2, #0
100424e0:	601a      	str	r2, [r3, #0]
100424e2:	2200      	movs	r2, #0
100424e4:	809a      	strh	r2, [r3, #4]
  uint8_t bd_address_len= 6;
100424e6:	2343      	movs	r3, #67	@ 0x43
100424e8:	18fb      	adds	r3, r7, r3
100424ea:	2206      	movs	r2, #6
100424ec:	701a      	strb	r2, [r3, #0]
  uint16_t appearance = CFG_GAP_APPEARANCE;
100424ee:	2340      	movs	r3, #64	@ 0x40
100424f0:	18fb      	adds	r3, r7, r3
100424f2:	2200      	movs	r2, #0
100424f4:	801a      	strh	r2, [r3, #0]
  
  BLE_STACK_InitTypeDef BLE_STACK_InitParams = {
100424f6:	260c      	movs	r6, #12
100424f8:	19ba      	adds	r2, r7, r6
100424fa:	4bb7      	ldr	r3, [pc, #732]	@ (100427d8 <BLE_Init+0x30c>)
100424fc:	0010      	movs	r0, r2
100424fe:	0019      	movs	r1, r3
10042500:	2334      	movs	r3, #52	@ 0x34
10042502:	001a      	movs	r2, r3
10042504:	f029 fbe2 	bl	1006bccc <memcpy>
    .isr1_fifo_size = CFG_BLE_ISR1_FIFO_SIZE, 
    .user_fifo_size = CFG_BLE_USER_FIFO_SIZE   
  };
  
  /* Bluetooth LE stack init */
  ret = BLE_STACK_Init(&BLE_STACK_InitParams);
10042508:	2556      	movs	r5, #86	@ 0x56
1004250a:	197c      	adds	r4, r7, r5
1004250c:	19bb      	adds	r3, r7, r6
1004250e:	0018      	movs	r0, r3
10042510:	f00d feba 	bl	10050288 <BLE_STACK_Init>
10042514:	0003      	movs	r3, r0
10042516:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS) {
10042518:	197b      	adds	r3, r7, r5
1004251a:	781b      	ldrb	r3, [r3, #0]
1004251c:	2b00      	cmp	r3, #0
1004251e:	d008      	beq.n	10042532 <BLE_Init+0x66>
    APP_DBG_MSG("Error in BLE_STACK_Init() 0x%02x\r\n", ret);
10042520:	197b      	adds	r3, r7, r5
10042522:	781a      	ldrb	r2, [r3, #0]
10042524:	4bad      	ldr	r3, [pc, #692]	@ (100427dc <BLE_Init+0x310>)
10042526:	0011      	movs	r1, r2
10042528:	0018      	movs	r0, r3
1004252a:	f029 f8dd 	bl	1006b6e8 <iprintf>
    Error_Handler();
1004252e:	f7ff fd32 	bl	10041f96 <Error_Handler>
#endif
  
  /**
   * Set TX Power.
   */
  ret = aci_hal_set_tx_power_level(0, CFG_TX_POWER);
10042532:	2556      	movs	r5, #86	@ 0x56
10042534:	197c      	adds	r4, r7, r5
10042536:	2118      	movs	r1, #24
10042538:	2000      	movs	r0, #0
1004253a:	f00d fb9b 	bl	1004fc74 <aci_hal_set_tx_power_level>
1004253e:	0003      	movs	r3, r0
10042540:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
10042542:	002a      	movs	r2, r5
10042544:	18bb      	adds	r3, r7, r2
10042546:	781b      	ldrb	r3, [r3, #0]
10042548:	2b00      	cmp	r3, #0
1004254a:	d007      	beq.n	1004255c <BLE_Init+0x90>
  {
    APP_DBG_MSG("  Fail   : aci_hal_set_tx_power_level command, result: 0x%02X\n", ret);
1004254c:	18bb      	adds	r3, r7, r2
1004254e:	781a      	ldrb	r2, [r3, #0]
10042550:	4ba3      	ldr	r3, [pc, #652]	@ (100427e0 <BLE_Init+0x314>)
10042552:	0011      	movs	r1, r2
10042554:	0018      	movs	r0, r3
10042556:	f029 f8c7 	bl	1006b6e8 <iprintf>
1004255a:	e003      	b.n	10042564 <BLE_Init+0x98>
  }
  else
  {
    APP_DBG_MSG("  Success: aci_hal_set_tx_power_level command\n");
1004255c:	4ba1      	ldr	r3, [pc, #644]	@ (100427e4 <BLE_Init+0x318>)
1004255e:	0018      	movs	r0, r3
10042560:	f029 f932 	bl	1006b7c8 <puts>
  }
  
  /**
   * Initialize GATT interface
   */
  ret = aci_gatt_srv_profile_init(GATT_INIT_SERVICE_CHANGED_BIT, &gatt_service_changed_handle);
10042564:	2556      	movs	r5, #86	@ 0x56
10042566:	197c      	adds	r4, r7, r5
10042568:	2352      	movs	r3, #82	@ 0x52
1004256a:	18fb      	adds	r3, r7, r3
1004256c:	0019      	movs	r1, r3
1004256e:	2001      	movs	r0, #1
10042570:	f006 fa80 	bl	10048a74 <aci_gatt_srv_profile_init>
10042574:	0003      	movs	r3, r0
10042576:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
10042578:	197b      	adds	r3, r7, r5
1004257a:	781b      	ldrb	r3, [r3, #0]
1004257c:	2b00      	cmp	r3, #0
1004257e:	d007      	beq.n	10042590 <BLE_Init+0xc4>
  {
    APP_DBG_MSG("  Fail   : aci_gatt_srv_profile_init command, result: 0x%02X\n", ret);
10042580:	197b      	adds	r3, r7, r5
10042582:	781a      	ldrb	r2, [r3, #0]
10042584:	4b98      	ldr	r3, [pc, #608]	@ (100427e8 <BLE_Init+0x31c>)
10042586:	0011      	movs	r1, r2
10042588:	0018      	movs	r0, r3
1004258a:	f029 f8ad 	bl	1006b6e8 <iprintf>
1004258e:	e003      	b.n	10042598 <BLE_Init+0xcc>
  }
  else
  {
    APP_DBG_MSG("  Success: aci_gatt_srv_profile_init command\n");
10042590:	4b96      	ldr	r3, [pc, #600]	@ (100427ec <BLE_Init+0x320>)
10042592:	0018      	movs	r0, r3
10042594:	f029 f918 	bl	1006b7c8 <puts>
  }
  
  /**
   * Initialize GAP interface
   */
  role = 0U;
10042598:	2155      	movs	r1, #85	@ 0x55
1004259a:	187b      	adds	r3, r7, r1
1004259c:	2200      	movs	r2, #0
1004259e:	701a      	strb	r2, [r3, #0]
  role |= GAP_CENTRAL_ROLE|GAP_BROADCASTER_ROLE;
100425a0:	187b      	adds	r3, r7, r1
100425a2:	187a      	adds	r2, r7, r1
100425a4:	7812      	ldrb	r2, [r2, #0]
100425a6:	2106      	movs	r1, #6
100425a8:	430a      	orrs	r2, r1
100425aa:	701a      	strb	r2, [r3, #0]
  
/* USER CODE BEGIN Role_Mngt*/

/* USER CODE END Role_Mngt */
  
  ret = aci_gap_init(privacy_type, CFG_BD_ADDRESS_TYPE);
100425ac:	2556      	movs	r5, #86	@ 0x56
100425ae:	197c      	adds	r4, r7, r5
100425b0:	2357      	movs	r3, #87	@ 0x57
100425b2:	18fb      	adds	r3, r7, r3
100425b4:	781b      	ldrb	r3, [r3, #0]
100425b6:	2101      	movs	r1, #1
100425b8:	0018      	movs	r0, r3
100425ba:	f00d f985 	bl	1004f8c8 <aci_gap_init>
100425be:	0003      	movs	r3, r0
100425c0:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
100425c2:	197b      	adds	r3, r7, r5
100425c4:	781b      	ldrb	r3, [r3, #0]
100425c6:	2b00      	cmp	r3, #0
100425c8:	d007      	beq.n	100425da <BLE_Init+0x10e>
  {
    APP_DBG_MSG("  Fail   : aci_gap_init command, result: 0x%02X\n", ret);
100425ca:	197b      	adds	r3, r7, r5
100425cc:	781a      	ldrb	r2, [r3, #0]
100425ce:	4b88      	ldr	r3, [pc, #544]	@ (100427f0 <BLE_Init+0x324>)
100425d0:	0011      	movs	r1, r2
100425d2:	0018      	movs	r0, r3
100425d4:	f029 f888 	bl	1006b6e8 <iprintf>
100425d8:	e003      	b.n	100425e2 <BLE_Init+0x116>
  }
  else
  {
    APP_DBG_MSG("  Success: aci_gap_init command\n");
100425da:	4b86      	ldr	r3, [pc, #536]	@ (100427f4 <BLE_Init+0x328>)
100425dc:	0018      	movs	r0, r3
100425de:	f029 f8f3 	bl	1006b7c8 <puts>
  }
  
  ret = aci_gap_profile_init(role, privacy_type,
100425e2:	2656      	movs	r6, #86	@ 0x56
100425e4:	19bc      	adds	r4, r7, r6
100425e6:	234e      	movs	r3, #78	@ 0x4e
100425e8:	18fd      	adds	r5, r7, r3
100425ea:	2350      	movs	r3, #80	@ 0x50
100425ec:	18fa      	adds	r2, r7, r3
100425ee:	2357      	movs	r3, #87	@ 0x57
100425f0:	18fb      	adds	r3, r7, r3
100425f2:	7819      	ldrb	r1, [r3, #0]
100425f4:	2355      	movs	r3, #85	@ 0x55
100425f6:	18fb      	adds	r3, r7, r3
100425f8:	7818      	ldrb	r0, [r3, #0]
100425fa:	234c      	movs	r3, #76	@ 0x4c
100425fc:	18fb      	adds	r3, r7, r3
100425fe:	9300      	str	r3, [sp, #0]
10042600:	002b      	movs	r3, r5
10042602:	f006 f8bf 	bl	10048784 <aci_gap_profile_init>
10042606:	0003      	movs	r3, r0
10042608:	7023      	strb	r3, [r4, #0]
                             &gap_dev_name_char_handle,
                             &gap_appearance_char_handle,
                             &gap_periph_pref_conn_param_char_handle);
  
#if (CFG_BD_ADDRESS_TYPE == HCI_ADDR_STATIC_RANDOM_ADDR)
  ret = aci_hal_read_config_data(CONFIG_DATA_STORED_STATIC_RANDOM_ADDRESS,
1004260a:	19bc      	adds	r4, r7, r6
1004260c:	2544      	movs	r5, #68	@ 0x44
1004260e:	197a      	adds	r2, r7, r5
10042610:	2343      	movs	r3, #67	@ 0x43
10042612:	18fb      	adds	r3, r7, r3
10042614:	0019      	movs	r1, r3
10042616:	2080      	movs	r0, #128	@ 0x80
10042618:	f00d fb28 	bl	1004fc6c <aci_hal_read_config_data>
1004261c:	0003      	movs	r3, r0
1004261e:	7023      	strb	r3, [r4, #0]
                                 &bd_address_len, bd_address);
  APP_DBG_MSG("  Static Random Bluetooth Address: %02x:%02x:%02x:%02x:%02x:%02x\n",bd_address[5],bd_address[4],bd_address[3],bd_address[2],bd_address[1],bd_address[0]);
10042620:	0028      	movs	r0, r5
10042622:	183b      	adds	r3, r7, r0
10042624:	795b      	ldrb	r3, [r3, #5]
10042626:	001c      	movs	r4, r3
10042628:	183b      	adds	r3, r7, r0
1004262a:	791b      	ldrb	r3, [r3, #4]
1004262c:	001d      	movs	r5, r3
1004262e:	183b      	adds	r3, r7, r0
10042630:	78db      	ldrb	r3, [r3, #3]
10042632:	001e      	movs	r6, r3
10042634:	183b      	adds	r3, r7, r0
10042636:	789b      	ldrb	r3, [r3, #2]
10042638:	001a      	movs	r2, r3
1004263a:	183b      	adds	r3, r7, r0
1004263c:	785b      	ldrb	r3, [r3, #1]
1004263e:	0019      	movs	r1, r3
10042640:	183b      	adds	r3, r7, r0
10042642:	781b      	ldrb	r3, [r3, #0]
10042644:	486c      	ldr	r0, [pc, #432]	@ (100427f8 <BLE_Init+0x32c>)
10042646:	9302      	str	r3, [sp, #8]
10042648:	9101      	str	r1, [sp, #4]
1004264a:	9200      	str	r2, [sp, #0]
1004264c:	0033      	movs	r3, r6
1004264e:	002a      	movs	r2, r5
10042650:	0021      	movs	r1, r4
10042652:	f029 f849 	bl	1006b6e8 <iprintf>
  APP_DBG_MSG("  Public Bluetooth Address: %02x:%02x:%02x:%02x:%02x:%02x\n",bd_address[5],bd_address[4],bd_address[3],bd_address[2],bd_address[1],bd_address[0]);
#else
#error "Invalid CFG_BD_ADDRESS_TYPE"
#endif
  
  ret = Gap_profile_set_dev_name(0, sizeof(a_GapDeviceName), (uint8_t*)a_GapDeviceName);
10042656:	2656      	movs	r6, #86	@ 0x56
10042658:	19bc      	adds	r4, r7, r6
1004265a:	4b68      	ldr	r3, [pc, #416]	@ (100427fc <BLE_Init+0x330>)
1004265c:	001a      	movs	r2, r3
1004265e:	2109      	movs	r1, #9
10042660:	2000      	movs	r0, #0
10042662:	f006 f921 	bl	100488a8 <Gap_profile_set_dev_name>
10042666:	0003      	movs	r3, r0
10042668:	7023      	strb	r3, [r4, #0]
  
  if (ret != BLE_STATUS_SUCCESS)
1004266a:	19bb      	adds	r3, r7, r6
1004266c:	781b      	ldrb	r3, [r3, #0]
1004266e:	2b00      	cmp	r3, #0
10042670:	d007      	beq.n	10042682 <BLE_Init+0x1b6>
  {
    APP_DBG_MSG("  Fail   : Gap_profile_set_dev_name - Device Name, result: 0x%02X\n", ret);
10042672:	19bb      	adds	r3, r7, r6
10042674:	781a      	ldrb	r2, [r3, #0]
10042676:	4b62      	ldr	r3, [pc, #392]	@ (10042800 <BLE_Init+0x334>)
10042678:	0011      	movs	r1, r2
1004267a:	0018      	movs	r0, r3
1004267c:	f029 f834 	bl	1006b6e8 <iprintf>
10042680:	e003      	b.n	1004268a <BLE_Init+0x1be>
  }
  else
  {
    APP_DBG_MSG("  Success: Gap_profile_set_dev_name - Device Name\n");
10042682:	4b60      	ldr	r3, [pc, #384]	@ (10042804 <BLE_Init+0x338>)
10042684:	0018      	movs	r0, r3
10042686:	f029 f89f 	bl	1006b7c8 <puts>
  }
  
  ret = Gap_profile_set_appearance(0, sizeof(appearance), (uint8_t*)&appearance);
1004268a:	2556      	movs	r5, #86	@ 0x56
1004268c:	197c      	adds	r4, r7, r5
1004268e:	2340      	movs	r3, #64	@ 0x40
10042690:	18fb      	adds	r3, r7, r3
10042692:	001a      	movs	r2, r3
10042694:	2102      	movs	r1, #2
10042696:	2000      	movs	r0, #0
10042698:	f006 f92c 	bl	100488f4 <Gap_profile_set_appearance>
1004269c:	0003      	movs	r3, r0
1004269e:	7023      	strb	r3, [r4, #0]
  
  if (ret != BLE_STATUS_SUCCESS)
100426a0:	197b      	adds	r3, r7, r5
100426a2:	781b      	ldrb	r3, [r3, #0]
100426a4:	2b00      	cmp	r3, #0
100426a6:	d007      	beq.n	100426b8 <BLE_Init+0x1ec>
  {
    APP_DBG_MSG("  Fail   : Gap_profile_set_appearance - Appearance, result: 0x%02X\n", ret);
100426a8:	197b      	adds	r3, r7, r5
100426aa:	781a      	ldrb	r2, [r3, #0]
100426ac:	4b56      	ldr	r3, [pc, #344]	@ (10042808 <BLE_Init+0x33c>)
100426ae:	0011      	movs	r1, r2
100426b0:	0018      	movs	r0, r3
100426b2:	f029 f819 	bl	1006b6e8 <iprintf>
100426b6:	e003      	b.n	100426c0 <BLE_Init+0x1f4>
  }
  else
  {
    APP_DBG_MSG("  Success: Gap_profile_set_appearance - Appearance\n");
100426b8:	4b54      	ldr	r3, [pc, #336]	@ (1004280c <BLE_Init+0x340>)
100426ba:	0018      	movs	r0, r3
100426bc:	f029 f884 	bl	1006b7c8 <puts>
  }
  
  /**
   * Initialize IO capability
   */
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.ioCapability = CFG_IO_CAPABILITY;
100426c0:	4b53      	ldr	r3, [pc, #332]	@ (10042810 <BLE_Init+0x344>)
100426c2:	2201      	movs	r2, #1
100426c4:	701a      	strb	r2, [r3, #0]
  ret = aci_gap_set_io_capability(bleAppContext.BleApplicationContext_legacy.bleSecurityParam.ioCapability);
100426c6:	4b52      	ldr	r3, [pc, #328]	@ (10042810 <BLE_Init+0x344>)
100426c8:	781b      	ldrb	r3, [r3, #0]
100426ca:	2556      	movs	r5, #86	@ 0x56
100426cc:	197c      	adds	r4, r7, r5
100426ce:	0018      	movs	r0, r3
100426d0:	f00c fd4c 	bl	1004f16c <aci_gap_set_io_capability>
100426d4:	0003      	movs	r3, r0
100426d6:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
100426d8:	197b      	adds	r3, r7, r5
100426da:	781b      	ldrb	r3, [r3, #0]
100426dc:	2b00      	cmp	r3, #0
100426de:	d007      	beq.n	100426f0 <BLE_Init+0x224>
  {
    APP_DBG_MSG("  Fail   : aci_gap_set_io_capability command, result: 0x%02X\n", ret);
100426e0:	197b      	adds	r3, r7, r5
100426e2:	781a      	ldrb	r2, [r3, #0]
100426e4:	4b4b      	ldr	r3, [pc, #300]	@ (10042814 <BLE_Init+0x348>)
100426e6:	0011      	movs	r1, r2
100426e8:	0018      	movs	r0, r3
100426ea:	f028 fffd 	bl	1006b6e8 <iprintf>
100426ee:	e003      	b.n	100426f8 <BLE_Init+0x22c>
  }
  else
  {
    APP_DBG_MSG("  Success: aci_gap_set_io_capability command\n");
100426f0:	4b49      	ldr	r3, [pc, #292]	@ (10042818 <BLE_Init+0x34c>)
100426f2:	0018      	movs	r0, r3
100426f4:	f029 f868 	bl	1006b7c8 <puts>
  }
  
  /**
   * Initialize authentication
   */
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.mitm_mode             = CFG_MITM_PROTECTION;
100426f8:	4b45      	ldr	r3, [pc, #276]	@ (10042810 <BLE_Init+0x344>)
100426fa:	2201      	movs	r2, #1
100426fc:	705a      	strb	r2, [r3, #1]
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.encryptionKeySizeMin  = CFG_ENCRYPTION_KEY_SIZE_MIN;
100426fe:	4b44      	ldr	r3, [pc, #272]	@ (10042810 <BLE_Init+0x344>)
10042700:	2208      	movs	r2, #8
10042702:	70da      	strb	r2, [r3, #3]
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.encryptionKeySizeMax  = CFG_ENCRYPTION_KEY_SIZE_MAX;
10042704:	4b42      	ldr	r3, [pc, #264]	@ (10042810 <BLE_Init+0x344>)
10042706:	2210      	movs	r2, #16
10042708:	711a      	strb	r2, [r3, #4]
  bleAppContext.BleApplicationContext_legacy.bleSecurityParam.bonding_mode          = CFG_BONDING_MODE;
1004270a:	4b41      	ldr	r3, [pc, #260]	@ (10042810 <BLE_Init+0x344>)
1004270c:	2201      	movs	r2, #1
1004270e:	709a      	strb	r2, [r3, #2]
  /* USER CODE BEGIN Ble_Hci_Gap_Gatt_Init_1*/
  
  /* USER CODE END Ble_Hci_Gap_Gatt_Init_1*/

  ret = aci_gap_set_security_requirements(bleAppContext.BleApplicationContext_legacy.bleSecurityParam.bonding_mode,
10042710:	4b3f      	ldr	r3, [pc, #252]	@ (10042810 <BLE_Init+0x344>)
10042712:	7898      	ldrb	r0, [r3, #2]
10042714:	4b3e      	ldr	r3, [pc, #248]	@ (10042810 <BLE_Init+0x344>)
10042716:	7859      	ldrb	r1, [r3, #1]
10042718:	4b3d      	ldr	r3, [pc, #244]	@ (10042810 <BLE_Init+0x344>)
1004271a:	78db      	ldrb	r3, [r3, #3]
1004271c:	4a3c      	ldr	r2, [pc, #240]	@ (10042810 <BLE_Init+0x344>)
1004271e:	7912      	ldrb	r2, [r2, #4]
10042720:	2656      	movs	r6, #86	@ 0x56
10042722:	19bc      	adds	r4, r7, r6
10042724:	2500      	movs	r5, #0
10042726:	9502      	str	r5, [sp, #8]
10042728:	9201      	str	r2, [sp, #4]
1004272a:	9300      	str	r3, [sp, #0]
1004272c:	2300      	movs	r3, #0
1004272e:	2200      	movs	r2, #0
10042730:	f00c fd2c 	bl	1004f18c <aci_gap_set_security_requirements>
10042734:	0003      	movs	r3, r0
10042736:	7023      	strb	r3, [r4, #0]
                                               CFG_KEYPRESS_NOTIFICATION_SUPPORT,
                                               bleAppContext.BleApplicationContext_legacy.bleSecurityParam.encryptionKeySizeMin,
                                               bleAppContext.BleApplicationContext_legacy.bleSecurityParam.encryptionKeySizeMax,
                                               GAP_PAIRING_RESP_NONE); 
  
  if (ret != BLE_STATUS_SUCCESS)
10042738:	19bb      	adds	r3, r7, r6
1004273a:	781b      	ldrb	r3, [r3, #0]
1004273c:	2b00      	cmp	r3, #0
1004273e:	d007      	beq.n	10042750 <BLE_Init+0x284>
  {
    APP_DBG_MSG("  Fail   : aci_gap_set_security_requirements command, result: 0x%02X\n", ret);
10042740:	19bb      	adds	r3, r7, r6
10042742:	781a      	ldrb	r2, [r3, #0]
10042744:	4b35      	ldr	r3, [pc, #212]	@ (1004281c <BLE_Init+0x350>)
10042746:	0011      	movs	r1, r2
10042748:	0018      	movs	r0, r3
1004274a:	f028 ffcd 	bl	1006b6e8 <iprintf>
1004274e:	e003      	b.n	10042758 <BLE_Init+0x28c>
  }
  else
  {
    APP_DBG_MSG("  Success: aci_gap_set_security_requirements command\n");
10042750:	4b33      	ldr	r3, [pc, #204]	@ (10042820 <BLE_Init+0x354>)
10042752:	0018      	movs	r0, r3
10042754:	f029 f838 	bl	1006b7c8 <puts>
  }

  /**
   * Initialize Filter Accept List
   */
  if (bleAppContext.BleApplicationContext_legacy.bleSecurityParam.bonding_mode)
10042758:	4b2d      	ldr	r3, [pc, #180]	@ (10042810 <BLE_Init+0x344>)
1004275a:	789b      	ldrb	r3, [r3, #2]
1004275c:	2b00      	cmp	r3, #0
1004275e:	d017      	beq.n	10042790 <BLE_Init+0x2c4>
  {  
    ret = aci_gap_configure_filter_accept_and_resolving_list(0x01);
10042760:	2556      	movs	r5, #86	@ 0x56
10042762:	197c      	adds	r4, r7, r5
10042764:	2001      	movs	r0, #1
10042766:	f00d f949 	bl	1004f9fc <aci_gap_configure_filter_accept_and_resolving_list>
1004276a:	0003      	movs	r3, r0
1004276c:	7023      	strb	r3, [r4, #0]
    if (ret != BLE_STATUS_SUCCESS)
1004276e:	002a      	movs	r2, r5
10042770:	18bb      	adds	r3, r7, r2
10042772:	781b      	ldrb	r3, [r3, #0]
10042774:	2b00      	cmp	r3, #0
10042776:	d007      	beq.n	10042788 <BLE_Init+0x2bc>
    {
      APP_DBG_MSG("  Fail   : aci_gap_configure_filter_accept_and_resolving_list command, result: 0x%02X\n", ret);
10042778:	18bb      	adds	r3, r7, r2
1004277a:	781a      	ldrb	r2, [r3, #0]
1004277c:	4b29      	ldr	r3, [pc, #164]	@ (10042824 <BLE_Init+0x358>)
1004277e:	0011      	movs	r1, r2
10042780:	0018      	movs	r0, r3
10042782:	f028 ffb1 	bl	1006b6e8 <iprintf>
10042786:	e003      	b.n	10042790 <BLE_Init+0x2c4>
    }
    else
    {
      APP_DBG_MSG("  Success: aci_gap_configure_filter_accept_and_resolving_list command\n");
10042788:	4b27      	ldr	r3, [pc, #156]	@ (10042828 <BLE_Init+0x35c>)
1004278a:	0018      	movs	r0, r3
1004278c:	f029 f81c 	bl	1006b7c8 <puts>
    }
  }
  
  uint8_t LE_Event_Mask[8] = {0xFF,0xFF,0xFF,0xFF,
10042790:	1d3b      	adds	r3, r7, #4
10042792:	4a26      	ldr	r2, [pc, #152]	@ (1004282c <BLE_Init+0x360>)
10042794:	ca03      	ldmia	r2!, {r0, r1}
10042796:	c303      	stmia	r3!, {r0, r1}
    HCI_LE_EVT_MASK_BYTE4_PERIODIC_ADVERTISING_SUBEVENT_DATA_REQ|HCI_LE_EVT_MASK_BYTE4_PERIODIC_ADVERTISING_RESPONSE_REPORT,
    0xFF,0xFF,0xFF};  
  ret= aci_gap_set_le_event_mask(LE_Event_Mask);
10042798:	2556      	movs	r5, #86	@ 0x56
1004279a:	197c      	adds	r4, r7, r5
1004279c:	1d3b      	adds	r3, r7, #4
1004279e:	0018      	movs	r0, r3
100427a0:	f00d f89a 	bl	1004f8d8 <aci_gap_set_le_event_mask>
100427a4:	0003      	movs	r3, r0
100427a6:	7023      	strb	r3, [r4, #0]
  
  if (ret != BLE_STATUS_SUCCESS)
100427a8:	197b      	adds	r3, r7, r5
100427aa:	781b      	ldrb	r3, [r3, #0]
100427ac:	2b00      	cmp	r3, #0
100427ae:	d007      	beq.n	100427c0 <BLE_Init+0x2f4>
  {
    APP_DBG_MSG("  Fail   : aci_gap_set_le_event_mask command, result: 0x%02X\n", ret);
100427b0:	197b      	adds	r3, r7, r5
100427b2:	781a      	ldrb	r2, [r3, #0]
100427b4:	4b1e      	ldr	r3, [pc, #120]	@ (10042830 <BLE_Init+0x364>)
100427b6:	0011      	movs	r1, r2
100427b8:	0018      	movs	r0, r3
100427ba:	f028 ff95 	bl	1006b6e8 <iprintf>
100427be:	e003      	b.n	100427c8 <BLE_Init+0x2fc>
  }
  else
  {
    APP_DBG_MSG("  Success: aci_gap_set_le_event_mask command\n");
100427c0:	4b1c      	ldr	r3, [pc, #112]	@ (10042834 <BLE_Init+0x368>)
100427c2:	0018      	movs	r0, r3
100427c4:	f029 f800 	bl	1006b7c8 <puts>
  }  

  APP_DBG_MSG("==>> End BLE_Init function\n");
100427c8:	4b1b      	ldr	r3, [pc, #108]	@ (10042838 <BLE_Init+0x36c>)
100427ca:	0018      	movs	r0, r3
100427cc:	f028 fffc 	bl	1006b7c8 <puts>
  
}
100427d0:	46c0      	nop			@ (mov r8, r8)
100427d2:	46bd      	mov	sp, r7
100427d4:	b017      	add	sp, #92	@ 0x5c
100427d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100427d8:	1006d884 	.word	0x1006d884
100427dc:	1006d3dc 	.word	0x1006d3dc
100427e0:	1006d400 	.word	0x1006d400
100427e4:	1006d440 	.word	0x1006d440
100427e8:	1006d470 	.word	0x1006d470
100427ec:	1006d4b0 	.word	0x1006d4b0
100427f0:	1006d4e0 	.word	0x1006d4e0
100427f4:	1006d514 	.word	0x1006d514
100427f8:	1006d534 	.word	0x1006d534
100427fc:	1006e598 	.word	0x1006e598
10042800:	1006d578 	.word	0x1006d578
10042804:	1006d5bc 	.word	0x1006d5bc
10042808:	1006d5f0 	.word	0x1006d5f0
1004280c:	1006d634 	.word	0x1006d634
10042810:	200002d8 	.word	0x200002d8
10042814:	1006d668 	.word	0x1006d668
10042818:	1006d6a8 	.word	0x1006d6a8
1004281c:	1006d6d8 	.word	0x1006d6d8
10042820:	1006d720 	.word	0x1006d720
10042824:	1006d758 	.word	0x1006d758
10042828:	1006d7b0 	.word	0x1006d7b0
1004282c:	1006d8b8 	.word	0x1006d8b8
10042830:	1006d7f8 	.word	0x1006d7f8
10042834:	1006d838 	.word	0x1006d838
10042838:	1006d868 	.word	0x1006d868

1004283c <BLEStack_Process_Schedule>:

void BLEStack_Process_Schedule(void)
{
1004283c:	b580      	push	{r7, lr}
1004283e:	af00      	add	r7, sp, #0
  /* Keep BLE Stack Process priority low, since there are limited cases
     where stack wants to be rescheduled for busy waiting.  */
  UTIL_SEQ_SetTask( 1U << CFG_TASK_BLE_STACK, CFG_SEQ_PRIO_1);
10042840:	2101      	movs	r1, #1
10042842:	2001      	movs	r0, #1
10042844:	f00c ff34 	bl	1004f6b0 <UTIL_SEQ_SetTask>
}
10042848:	46c0      	nop			@ (mov r8, r8)
1004284a:	46bd      	mov	sp, r7
1004284c:	bd80      	pop	{r7, pc}

1004284e <BLEStack_Process>:

static void BLEStack_Process(void)
{
1004284e:	b580      	push	{r7, lr}
10042850:	af00      	add	r7, sp, #0
  APP_DEBUG_SIGNAL_SET(APP_STACK_PROCESS);
10042852:	2001      	movs	r0, #1
10042854:	f003 ff8b 	bl	1004676e <APP_DEBUG_SIGNAL_SET>
  BLE_STACK_Tick();
10042858:	f00d fc32 	bl	100500c0 <BLE_STACK_Tick>
  APP_DEBUG_SIGNAL_RESET(APP_STACK_PROCESS);
1004285c:	2001      	movs	r0, #1
1004285e:	f003 ff90 	bl	10046782 <APP_DEBUG_SIGNAL_RESET>
}
10042862:	46c0      	nop			@ (mov r8, r8)
10042864:	46bd      	mov	sp, r7
10042866:	bd80      	pop	{r7, pc}

10042868 <VTimer_Process>:

void VTimer_Process(void)
{
10042868:	b580      	push	{r7, lr}
1004286a:	af00      	add	r7, sp, #0
  HAL_RADIO_TIMER_Tick();
1004286c:	f008 ff10 	bl	1004b690 <HAL_RADIO_TIMER_Tick>
}
10042870:	46c0      	nop			@ (mov r8, r8)
10042872:	46bd      	mov	sp, r7
10042874:	bd80      	pop	{r7, pc}

10042876 <VTimer_Process_Schedule>:

void VTimer_Process_Schedule(void)
{
10042876:	b580      	push	{r7, lr}
10042878:	af00      	add	r7, sp, #0
  UTIL_SEQ_SetTask( 1U << CFG_TASK_VTIMER, CFG_SEQ_PRIO_0);
1004287a:	2100      	movs	r1, #0
1004287c:	2002      	movs	r0, #2
1004287e:	f00c ff17 	bl	1004f6b0 <UTIL_SEQ_SetTask>
}
10042882:	46c0      	nop			@ (mov r8, r8)
10042884:	46bd      	mov	sp, r7
10042886:	bd80      	pop	{r7, pc}

10042888 <NVM_Process>:

void NVM_Process(void)
{
10042888:	b580      	push	{r7, lr}
1004288a:	af00      	add	r7, sp, #0
  NVMDB_Tick();
1004288c:	f005 fec4 	bl	10048618 <NVMDB_Tick>
}
10042890:	46c0      	nop			@ (mov r8, r8)
10042892:	46bd      	mov	sp, r7
10042894:	bd80      	pop	{r7, pc}

10042896 <NVM_Process_Schedule>:

void NVM_Process_Schedule(void)
{
10042896:	b580      	push	{r7, lr}
10042898:	af00      	add	r7, sp, #0
  UTIL_SEQ_SetTask( 1U << CFG_TASK_NVM, CFG_SEQ_PRIO_1);
1004289a:	2101      	movs	r1, #1
1004289c:	2004      	movs	r0, #4
1004289e:	f00c ff07 	bl	1004f6b0 <UTIL_SEQ_SetTask>
}
100428a2:	46c0      	nop			@ (mov r8, r8)
100428a4:	46bd      	mov	sp, r7
100428a6:	bd80      	pop	{r7, pc}

100428a8 <HAL_RADIO_TIMER_CpuWakeUpCallback>:
  VTimer_Process_Schedule();
}

/* Function called from RADIO_TIMER_CPU_WKUP_IRQHandler() context. */
void HAL_RADIO_TIMER_CpuWakeUpCallback(void)
{
100428a8:	b580      	push	{r7, lr}
100428aa:	af00      	add	r7, sp, #0
  VTimer_Process_Schedule();
100428ac:	f7ff ffe3 	bl	10042876 <VTimer_Process_Schedule>
}
100428b0:	46c0      	nop			@ (mov r8, r8)
100428b2:	46bd      	mov	sp, r7
100428b4:	bd80      	pop	{r7, pc}

100428b6 <HAL_RADIO_TxRxCallback>:

/* Function called from RADIO_TXRX_IRQHandler() context. */
void HAL_RADIO_TxRxCallback(uint32_t flags)
{
100428b6:	b580      	push	{r7, lr}
100428b8:	b082      	sub	sp, #8
100428ba:	af00      	add	r7, sp, #0
100428bc:	6078      	str	r0, [r7, #4]
  BLE_STACK_RadioHandler(flags);
100428be:	687b      	ldr	r3, [r7, #4]
100428c0:	0018      	movs	r0, r3
100428c2:	f01f f989 	bl	10061bd8 <BLE_STACK_RadioHandler>
  
  VTimer_Process_Schedule();
100428c6:	f7ff ffd6 	bl	10042876 <VTimer_Process_Schedule>
  NVM_Process_Schedule();
100428ca:	f7ff ffe4 	bl	10042896 <NVM_Process_Schedule>
}
100428ce:	46c0      	nop			@ (mov r8, r8)
100428d0:	46bd      	mov	sp, r7
100428d2:	b002      	add	sp, #8
100428d4:	bd80      	pop	{r7, pc}

100428d6 <BLE_STACK_ProcessRequest>:

void BLE_STACK_ProcessRequest(void)
{
100428d6:	b580      	push	{r7, lr}
100428d8:	af00      	add	r7, sp, #0
  BLEStack_Process_Schedule();
100428da:	f7ff ffaf 	bl	1004283c <BLEStack_Process_Schedule>
}
100428de:	46c0      	nop			@ (mov r8, r8)
100428e0:	46bd      	mov	sp, r7
100428e2:	bd80      	pop	{r7, pc}

100428e4 <UART_CMD_ProcessRequestCB>:

void UART_CMD_ProcessRequestCB(void)
{
100428e4:	b580      	push	{r7, lr}
100428e6:	af00      	add	r7, sp, #0
  UTIL_SEQ_SetTask(1u << CFG_TASK_UART_CMD_PROCESS, CFG_SEQ_PRIO_0);  
100428e8:	2380      	movs	r3, #128	@ 0x80
100428ea:	00db      	lsls	r3, r3, #3
100428ec:	2100      	movs	r1, #0
100428ee:	0018      	movs	r0, r3
100428f0:	f00c fede 	bl	1004f6b0 <UTIL_SEQ_SetTask>
}
100428f4:	46c0      	nop			@ (mov r8, r8)
100428f6:	46bd      	mov	sp, r7
100428f8:	bd80      	pop	{r7, pc}
	...

100428fc <APP_BLE_Init>:

/* Functions Definition ------------------------------------------------------*/
void APP_BLE_Init(void)
{
100428fc:	b580      	push	{r7, lr}
100428fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN APP_BLE_Init_1 */

  /* USER CODE END APP_BLE_Init_1 */  

  UTIL_SEQ_RegTask(1U << CFG_TASK_BLE_STACK, UTIL_SEQ_RFU, BLEStack_Process);
10042900:	4b16      	ldr	r3, [pc, #88]	@ (1004295c <APP_BLE_Init+0x60>)
10042902:	001a      	movs	r2, r3
10042904:	2100      	movs	r1, #0
10042906:	2001      	movs	r0, #1
10042908:	f00c feae 	bl	1004f668 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask(1U << CFG_TASK_VTIMER, UTIL_SEQ_RFU, VTimer_Process);
1004290c:	4b14      	ldr	r3, [pc, #80]	@ (10042960 <APP_BLE_Init+0x64>)
1004290e:	001a      	movs	r2, r3
10042910:	2100      	movs	r1, #0
10042912:	2002      	movs	r0, #2
10042914:	f00c fea8 	bl	1004f668 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask(1U << CFG_TASK_NVM, UTIL_SEQ_RFU, NVM_Process);
10042918:	4b12      	ldr	r3, [pc, #72]	@ (10042964 <APP_BLE_Init+0x68>)
1004291a:	001a      	movs	r2, r3
1004291c:	2100      	movs	r1, #0
1004291e:	2004      	movs	r0, #4
10042920:	f00c fea2 	bl	1004f668 <UTIL_SEQ_RegTask>
  
  ModulesInit();
10042924:	f7ff fdc4 	bl	100424b0 <ModulesInit>
  
  /* Initialization of HCI & GATT & GAP layer */
  BLE_Init();
10042928:	f7ff fdd0 	bl	100424cc <BLE_Init>
  
  /* USER CODE BEGIN APP_BLE_Init_2 */
  UTIL_SEQ_RegTask(1U << CFG_TASK_UART_CMD_PROCESS, UTIL_SEQ_RFU, UART_CMD_Process);
1004292c:	4a0e      	ldr	r2, [pc, #56]	@ (10042968 <APP_BLE_Init+0x6c>)
1004292e:	2380      	movs	r3, #128	@ 0x80
10042930:	00db      	lsls	r3, r3, #3
10042932:	2100      	movs	r1, #0
10042934:	0018      	movs	r0, r3
10042936:	f00c fe97 	bl	1004f668 <UTIL_SEQ_RegTask>
  UTIL_SEQ_RegTask( 1u << CFG_TASK_START_INFO_TRANSFER, UTIL_SEQ_RFU, periodic_sync_info_transfer);
1004293a:	4a0c      	ldr	r2, [pc, #48]	@ (1004296c <APP_BLE_Init+0x70>)
1004293c:	2380      	movs	r3, #128	@ 0x80
1004293e:	009b      	lsls	r3, r3, #2
10042940:	2100      	movs	r1, #0
10042942:	0018      	movs	r0, r3
10042944:	f00c fe90 	bl	1004f668 <UTIL_SEQ_RegTask>
  
  ESL_AP_Init();
10042948:	f000 ff72 	bl	10043830 <ESL_AP_Init>
  
  start_periodic_adv();
1004294c:	f000 fdda 	bl	10043504 <start_periodic_adv>
  
  start_auto_connection();
10042950:	f000 fe94 	bl	1004367c <start_auto_connection>
  
  /* USER CODE END APP_BLE_Init_2 */
  
  return;
10042954:	46c0      	nop			@ (mov r8, r8)
}
10042956:	46bd      	mov	sp, r7
10042958:	bd80      	pop	{r7, pc}
1004295a:	46c0      	nop			@ (mov r8, r8)
1004295c:	1004284f 	.word	0x1004284f
10042960:	10042869 	.word	0x10042869
10042964:	10042889 	.word	0x10042889
10042968:	10044705 	.word	0x10044705
1004296c:	100437a1 	.word	0x100437a1

10042970 <BLEEVT_App_Notification>:

void BLEEVT_App_Notification(const hci_pckt *hci_pckt)
{
10042970:	b5f0      	push	{r4, r5, r6, r7, lr}
10042972:	46c6      	mov	lr, r8
10042974:	b500      	push	{lr}
10042976:	b0a8      	sub	sp, #160	@ 0xa0
10042978:	af06      	add	r7, sp, #24
1004297a:	6078      	str	r0, [r7, #4]
  tBleStatus ret = BLE_STATUS_ERROR;
1004297c:	2373      	movs	r3, #115	@ 0x73
1004297e:	18fb      	adds	r3, r7, r3
10042980:	2286      	movs	r2, #134	@ 0x86
10042982:	701a      	strb	r2, [r3, #0]
#ifndef DISABLE_WATCHDOG
  HAL_IWDG_Refresh(&hiwdg);
#endif
  /* USER CODE END SVCCTL_App_Notification */
  
  if(hci_pckt->type != HCI_EVENT_PKT_TYPE && hci_pckt->type != HCI_EVENT_EXT_PKT_TYPE)
10042984:	687b      	ldr	r3, [r7, #4]
10042986:	781b      	ldrb	r3, [r3, #0]
10042988:	2b04      	cmp	r3, #4
1004298a:	d005      	beq.n	10042998 <BLEEVT_App_Notification+0x28>
1004298c:	687b      	ldr	r3, [r7, #4]
1004298e:	781b      	ldrb	r3, [r3, #0]
10042990:	2b82      	cmp	r3, #130	@ 0x82
10042992:	d001      	beq.n	10042998 <BLEEVT_App_Notification+0x28>
10042994:	f000 fbd5 	bl	10043142 <BLEEVT_App_Notification+0x7d2>
  {
    /* Not an event */
    return;
  }
  
  p_event_pckt = (hci_event_pckt*)hci_pckt->data;
10042998:	687b      	ldr	r3, [r7, #4]
1004299a:	3301      	adds	r3, #1
1004299c:	66fb      	str	r3, [r7, #108]	@ 0x6c
    
  if(hci_pckt->type == HCI_EVENT_PKT_TYPE){
1004299e:	687b      	ldr	r3, [r7, #4]
100429a0:	781b      	ldrb	r3, [r3, #0]
100429a2:	2b04      	cmp	r3, #4
100429a4:	d105      	bne.n	100429b2 <BLEEVT_App_Notification+0x42>
    event_data = p_event_pckt->data;
100429a6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
100429a8:	3302      	adds	r3, #2
100429aa:	2284      	movs	r2, #132	@ 0x84
100429ac:	18ba      	adds	r2, r7, r2
100429ae:	6013      	str	r3, [r2, #0]
100429b0:	e007      	b.n	100429c2 <BLEEVT_App_Notification+0x52>
  }
  else { /* hci_pckt->type == HCI_EVENT_EXT_PKT_TYPE */
    hci_event_ext_pckt *p_event_pckt = (hci_event_ext_pckt*)hci_pckt->data;
100429b2:	687b      	ldr	r3, [r7, #4]
100429b4:	3301      	adds	r3, #1
100429b6:	66bb      	str	r3, [r7, #104]	@ 0x68
    event_data = p_event_pckt->data;
100429b8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
100429ba:	3303      	adds	r3, #3
100429bc:	2284      	movs	r2, #132	@ 0x84
100429be:	18ba      	adds	r2, r7, r2
100429c0:	6013      	str	r3, [r2, #0]
  }

  switch (p_event_pckt->evt) /* evt field is at same offset in hci_event_pckt and hci_event_ext_pckt */
100429c2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
100429c4:	781b      	ldrb	r3, [r3, #0]
100429c6:	2bff      	cmp	r3, #255	@ 0xff
100429c8:	d100      	bne.n	100429cc <BLEEVT_App_Notification+0x5c>
100429ca:	e267      	b.n	10042e9c <BLEEVT_App_Notification+0x52c>
100429cc:	dd01      	ble.n	100429d2 <BLEEVT_App_Notification+0x62>
100429ce:	f000 fbaf 	bl	10043130 <BLEEVT_App_Notification+0x7c0>
100429d2:	2b3e      	cmp	r3, #62	@ 0x3e
100429d4:	d036      	beq.n	10042a44 <BLEEVT_App_Notification+0xd4>
100429d6:	dd00      	ble.n	100429da <BLEEVT_App_Notification+0x6a>
100429d8:	e3aa      	b.n	10043130 <BLEEVT_App_Notification+0x7c0>
100429da:	2b05      	cmp	r3, #5
100429dc:	d003      	beq.n	100429e6 <BLEEVT_App_Notification+0x76>
100429de:	2b10      	cmp	r3, #16
100429e0:	d100      	bne.n	100429e4 <BLEEVT_App_Notification+0x74>
100429e2:	e391      	b.n	10043108 <BLEEVT_App_Notification+0x798>
100429e4:	e3a4      	b.n	10043130 <BLEEVT_App_Notification+0x7c0>
  {
  case HCI_DISCONNECTION_COMPLETE_EVT_CODE:
    {
      hci_disconnection_complete_event_rp0 *p_disconnection_complete_event;
      p_disconnection_complete_event = (hci_disconnection_complete_event_rp0 *) p_event_pckt->data;
100429e6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
100429e8:	3302      	adds	r3, #2
100429ea:	60fb      	str	r3, [r7, #12]
      
        /* USER CODE BEGIN EVT_DISCONN_COMPLETE_3 */

        /* USER CODE END EVT_DISCONN_COMPLETE_3 */

      if (p_disconnection_complete_event->Connection_Handle == bleAppContext.BleApplicationContext_legacy.connectionHandle)
100429ec:	68fb      	ldr	r3, [r7, #12]
100429ee:	785a      	ldrb	r2, [r3, #1]
100429f0:	789b      	ldrb	r3, [r3, #2]
100429f2:	021b      	lsls	r3, r3, #8
100429f4:	4313      	orrs	r3, r2
100429f6:	b29a      	uxth	r2, r3
100429f8:	4be7      	ldr	r3, [pc, #924]	@ (10042d98 <BLEEVT_App_Notification+0x428>)
100429fa:	899b      	ldrh	r3, [r3, #12]
100429fc:	429a      	cmp	r2, r3
100429fe:	d11d      	bne.n	10042a3c <BLEEVT_App_Notification+0xcc>
      {
        bleAppContext.BleApplicationContext_legacy.connectionHandle = 0xFFFF;
10042a00:	4be5      	ldr	r3, [pc, #916]	@ (10042d98 <BLEEVT_App_Notification+0x428>)
10042a02:	2201      	movs	r2, #1
10042a04:	4252      	negs	r2, r2
10042a06:	819a      	strh	r2, [r3, #12]
        bleAppContext.Device_Connection_Status = APP_BLE_IDLE;
10042a08:	4be3      	ldr	r3, [pc, #908]	@ (10042d98 <BLEEVT_App_Notification+0x428>)
10042a0a:	2200      	movs	r2, #0
10042a0c:	739a      	strb	r2, [r3, #14]
        APP_DBG_MSG(">>== HCI_DISCONNECTION_COMPLETE_EVT_CODE\n");
10042a0e:	4be3      	ldr	r3, [pc, #908]	@ (10042d9c <BLEEVT_App_Notification+0x42c>)
10042a10:	0018      	movs	r0, r3
10042a12:	f028 fed9 	bl	1006b7c8 <puts>
        APP_DBG_MSG("     - Connection Handle:   0x%02X\n     - Reason:    0x%02X\n",
10042a16:	68fb      	ldr	r3, [r7, #12]
10042a18:	785a      	ldrb	r2, [r3, #1]
10042a1a:	789b      	ldrb	r3, [r3, #2]
10042a1c:	021b      	lsls	r3, r3, #8
10042a1e:	4313      	orrs	r3, r2
10042a20:	b29b      	uxth	r3, r3
10042a22:	0019      	movs	r1, r3
10042a24:	68fb      	ldr	r3, [r7, #12]
10042a26:	78db      	ldrb	r3, [r3, #3]
10042a28:	001a      	movs	r2, r3
10042a2a:	4bdd      	ldr	r3, [pc, #884]	@ (10042da0 <BLEEVT_App_Notification+0x430>)
10042a2c:	0018      	movs	r0, r3
10042a2e:	f028 fe5b 	bl	1006b6e8 <iprintf>
                    p_disconnection_complete_event->Connection_Handle,
                    p_disconnection_complete_event->Reason);
        
        /* In case a task was waiting for this event. */
        UTIL_SEQ_SetEvt(1 << CFG_IDLEEVT_READ_REMOTE_FEATURES_COMPLETE);
10042a32:	2008      	movs	r0, #8
10042a34:	f00c fe68 	bl	1004f708 <UTIL_SEQ_SetEvt>
        
        /* USER CODE BEGIN EVT_DISCONN_COMPLETE_2 */
        start_auto_connection();
10042a38:	f000 fe20 	bl	1004367c <start_auto_connection>
        
        /* USER CODE END EVT_DISCONN_COMPLETE_2 */
      }
      
      gap_cmd_resp_release();
10042a3c:	f000 fca2 	bl	10043384 <gap_cmd_resp_release>
      
      /* USER CODE BEGIN EVT_DISCONN_COMPLETE_1 */
      
      /* USER CODE END EVT_DISCONN_COMPLETE_1 */
    }
    break;
10042a40:	f000 fbbb 	bl	100431ba <BLEEVT_App_Notification+0x84a>

  case HCI_LE_META_EVT_CODE:
    {
      p_meta_evt = (hci_le_meta_event*) p_event_pckt->data;
10042a44:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
10042a46:	3302      	adds	r3, #2
10042a48:	647b      	str	r3, [r7, #68]	@ 0x44
      /* USER CODE BEGIN EVT_LE_META_EVENT */
      
      /* USER CODE END EVT_LE_META_EVENT */
      switch (p_meta_evt->subevent)
10042a4a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042a4c:	781b      	ldrb	r3, [r3, #0]
10042a4e:	2b29      	cmp	r3, #41	@ 0x29
10042a50:	d900      	bls.n	10042a54 <BLEEVT_App_Notification+0xe4>
10042a52:	e216      	b.n	10042e82 <BLEEVT_App_Notification+0x512>
10042a54:	009a      	lsls	r2, r3, #2
10042a56:	4bd3      	ldr	r3, [pc, #844]	@ (10042da4 <BLEEVT_App_Notification+0x434>)
10042a58:	18d3      	adds	r3, r2, r3
10042a5a:	681b      	ldr	r3, [r3, #0]
10042a5c:	469f      	mov	pc, r3
      {
      case HCI_LE_CONNECTION_UPDATE_COMPLETE_SUBEVT_CODE:
        {
          hci_le_connection_update_complete_event_rp0 *p_conn_update_complete;
          p_conn_update_complete = (hci_le_connection_update_complete_event_rp0 *) p_meta_evt->data;
10042a5e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042a60:	3301      	adds	r3, #1
10042a62:	623b      	str	r3, [r7, #32]
          APP_DBG_MSG(">>== HCI_LE_CONNECTION_UPDATE_COMPLETE_SUBEVT_CODE\n");
10042a64:	4bd0      	ldr	r3, [pc, #832]	@ (10042da8 <BLEEVT_App_Notification+0x438>)
10042a66:	0018      	movs	r0, r3
10042a68:	f028 feae 	bl	1006b7c8 <puts>
          APP_DBG_MSG("     - Connection Interval:   %d.%02d ms\n     - Connection latency:    %d\n     - Supervision Timeout:   %d ms\n",
10042a6c:	6a3b      	ldr	r3, [r7, #32]
10042a6e:	78da      	ldrb	r2, [r3, #3]
10042a70:	791b      	ldrb	r3, [r3, #4]
10042a72:	021b      	lsls	r3, r3, #8
10042a74:	4313      	orrs	r3, r2
10042a76:	b29b      	uxth	r3, r3
10042a78:	0018      	movs	r0, r3
10042a7a:	f7fe fea3 	bl	100417c4 <__aeabi_i2d>
10042a7e:	2200      	movs	r2, #0
10042a80:	4bca      	ldr	r3, [pc, #808]	@ (10042dac <BLEEVT_App_Notification+0x43c>)
10042a82:	f7fd ffff 	bl	10040a84 <__aeabi_dmul>
10042a86:	0002      	movs	r2, r0
10042a88:	000b      	movs	r3, r1
10042a8a:	0010      	movs	r0, r2
10042a8c:	0019      	movs	r1, r3
10042a8e:	f7fe fe5d 	bl	1004174c <__aeabi_d2iz>
10042a92:	0006      	movs	r6, r0
10042a94:	6a3b      	ldr	r3, [r7, #32]
10042a96:	78da      	ldrb	r2, [r3, #3]
10042a98:	791b      	ldrb	r3, [r3, #4]
10042a9a:	021b      	lsls	r3, r3, #8
10042a9c:	4313      	orrs	r3, r2
10042a9e:	b29b      	uxth	r3, r3
10042aa0:	0018      	movs	r0, r3
10042aa2:	f7fe fe8f 	bl	100417c4 <__aeabi_i2d>
10042aa6:	2200      	movs	r2, #0
10042aa8:	4bc0      	ldr	r3, [pc, #768]	@ (10042dac <BLEEVT_App_Notification+0x43c>)
10042aaa:	f7fd ffeb 	bl	10040a84 <__aeabi_dmul>
10042aae:	0002      	movs	r2, r0
10042ab0:	000b      	movs	r3, r1
10042ab2:	0010      	movs	r0, r2
10042ab4:	0019      	movs	r1, r3
10042ab6:	2200      	movs	r2, #0
10042ab8:	2300      	movs	r3, #0
10042aba:	f7fd fd6d 	bl	10040598 <__aeabi_dcmpgt>
10042abe:	1e03      	subs	r3, r0, #0
10042ac0:	d03d      	beq.n	10042b3e <BLEEVT_App_Notification+0x1ce>
10042ac2:	6a3b      	ldr	r3, [r7, #32]
10042ac4:	78da      	ldrb	r2, [r3, #3]
10042ac6:	791b      	ldrb	r3, [r3, #4]
10042ac8:	021b      	lsls	r3, r3, #8
10042aca:	4313      	orrs	r3, r2
10042acc:	b29b      	uxth	r3, r3
10042ace:	0018      	movs	r0, r3
10042ad0:	f7fe fe78 	bl	100417c4 <__aeabi_i2d>
10042ad4:	2200      	movs	r2, #0
10042ad6:	4bb5      	ldr	r3, [pc, #724]	@ (10042dac <BLEEVT_App_Notification+0x43c>)
10042ad8:	f7fd ffd4 	bl	10040a84 <__aeabi_dmul>
10042adc:	0002      	movs	r2, r0
10042ade:	000b      	movs	r3, r1
10042ae0:	0014      	movs	r4, r2
10042ae2:	001d      	movs	r5, r3
10042ae4:	6a3b      	ldr	r3, [r7, #32]
10042ae6:	78da      	ldrb	r2, [r3, #3]
10042ae8:	791b      	ldrb	r3, [r3, #4]
10042aea:	021b      	lsls	r3, r3, #8
10042aec:	4313      	orrs	r3, r2
10042aee:	b29b      	uxth	r3, r3
10042af0:	0018      	movs	r0, r3
10042af2:	f7fe fe67 	bl	100417c4 <__aeabi_i2d>
10042af6:	2200      	movs	r2, #0
10042af8:	4bac      	ldr	r3, [pc, #688]	@ (10042dac <BLEEVT_App_Notification+0x43c>)
10042afa:	f7fd ffc3 	bl	10040a84 <__aeabi_dmul>
10042afe:	0002      	movs	r2, r0
10042b00:	000b      	movs	r3, r1
10042b02:	0010      	movs	r0, r2
10042b04:	0019      	movs	r1, r3
10042b06:	f7fe fe21 	bl	1004174c <__aeabi_d2iz>
10042b0a:	0003      	movs	r3, r0
10042b0c:	0018      	movs	r0, r3
10042b0e:	f7fe fe59 	bl	100417c4 <__aeabi_i2d>
10042b12:	0002      	movs	r2, r0
10042b14:	000b      	movs	r3, r1
10042b16:	0020      	movs	r0, r4
10042b18:	0029      	movs	r1, r5
10042b1a:	f7fe fa7b 	bl	10041014 <__aeabi_dsub>
10042b1e:	0002      	movs	r2, r0
10042b20:	000b      	movs	r3, r1
10042b22:	0010      	movs	r0, r2
10042b24:	0019      	movs	r1, r3
10042b26:	2200      	movs	r2, #0
10042b28:	4ba1      	ldr	r3, [pc, #644]	@ (10042db0 <BLEEVT_App_Notification+0x440>)
10042b2a:	f7fd ffab 	bl	10040a84 <__aeabi_dmul>
10042b2e:	0002      	movs	r2, r0
10042b30:	000b      	movs	r3, r1
10042b32:	0010      	movs	r0, r2
10042b34:	0019      	movs	r1, r3
10042b36:	f7fe fe09 	bl	1004174c <__aeabi_d2iz>
10042b3a:	0002      	movs	r2, r0
10042b3c:	e03a      	b.n	10042bb4 <BLEEVT_App_Notification+0x244>
10042b3e:	6a3b      	ldr	r3, [r7, #32]
10042b40:	78da      	ldrb	r2, [r3, #3]
10042b42:	791b      	ldrb	r3, [r3, #4]
10042b44:	021b      	lsls	r3, r3, #8
10042b46:	4313      	orrs	r3, r2
10042b48:	b29b      	uxth	r3, r3
10042b4a:	0018      	movs	r0, r3
10042b4c:	f7fe fe3a 	bl	100417c4 <__aeabi_i2d>
10042b50:	2200      	movs	r2, #0
10042b52:	4b96      	ldr	r3, [pc, #600]	@ (10042dac <BLEEVT_App_Notification+0x43c>)
10042b54:	f7fd ff96 	bl	10040a84 <__aeabi_dmul>
10042b58:	0002      	movs	r2, r0
10042b5a:	000b      	movs	r3, r1
10042b5c:	0010      	movs	r0, r2
10042b5e:	0019      	movs	r1, r3
10042b60:	f7fe fdf4 	bl	1004174c <__aeabi_d2iz>
10042b64:	0003      	movs	r3, r0
10042b66:	0018      	movs	r0, r3
10042b68:	f7fe fe2c 	bl	100417c4 <__aeabi_i2d>
10042b6c:	0004      	movs	r4, r0
10042b6e:	000d      	movs	r5, r1
10042b70:	6a3b      	ldr	r3, [r7, #32]
10042b72:	78da      	ldrb	r2, [r3, #3]
10042b74:	791b      	ldrb	r3, [r3, #4]
10042b76:	021b      	lsls	r3, r3, #8
10042b78:	4313      	orrs	r3, r2
10042b7a:	b29b      	uxth	r3, r3
10042b7c:	0018      	movs	r0, r3
10042b7e:	f7fe fe21 	bl	100417c4 <__aeabi_i2d>
10042b82:	2200      	movs	r2, #0
10042b84:	4b89      	ldr	r3, [pc, #548]	@ (10042dac <BLEEVT_App_Notification+0x43c>)
10042b86:	f7fd ff7d 	bl	10040a84 <__aeabi_dmul>
10042b8a:	0002      	movs	r2, r0
10042b8c:	000b      	movs	r3, r1
10042b8e:	0020      	movs	r0, r4
10042b90:	0029      	movs	r1, r5
10042b92:	f7fe fa3f 	bl	10041014 <__aeabi_dsub>
10042b96:	0002      	movs	r2, r0
10042b98:	000b      	movs	r3, r1
10042b9a:	0010      	movs	r0, r2
10042b9c:	0019      	movs	r1, r3
10042b9e:	2200      	movs	r2, #0
10042ba0:	4b83      	ldr	r3, [pc, #524]	@ (10042db0 <BLEEVT_App_Notification+0x440>)
10042ba2:	f7fd ff6f 	bl	10040a84 <__aeabi_dmul>
10042ba6:	0002      	movs	r2, r0
10042ba8:	000b      	movs	r3, r1
10042baa:	0010      	movs	r0, r2
10042bac:	0019      	movs	r1, r3
10042bae:	f7fe fdcd 	bl	1004174c <__aeabi_d2iz>
10042bb2:	0002      	movs	r2, r0
10042bb4:	6a3b      	ldr	r3, [r7, #32]
10042bb6:	7959      	ldrb	r1, [r3, #5]
10042bb8:	799b      	ldrb	r3, [r3, #6]
10042bba:	021b      	lsls	r3, r3, #8
10042bbc:	430b      	orrs	r3, r1
10042bbe:	b29b      	uxth	r3, r3
10042bc0:	001c      	movs	r4, r3
10042bc2:	6a3b      	ldr	r3, [r7, #32]
10042bc4:	79d9      	ldrb	r1, [r3, #7]
10042bc6:	7a1b      	ldrb	r3, [r3, #8]
10042bc8:	021b      	lsls	r3, r3, #8
10042bca:	430b      	orrs	r3, r1
10042bcc:	b29b      	uxth	r3, r3
10042bce:	0019      	movs	r1, r3
10042bd0:	000b      	movs	r3, r1
10042bd2:	009b      	lsls	r3, r3, #2
10042bd4:	185b      	adds	r3, r3, r1
10042bd6:	005b      	lsls	r3, r3, #1
10042bd8:	4876      	ldr	r0, [pc, #472]	@ (10042db4 <BLEEVT_App_Notification+0x444>)
10042bda:	9300      	str	r3, [sp, #0]
10042bdc:	0023      	movs	r3, r4
10042bde:	0031      	movs	r1, r6
10042be0:	f028 fd82 	bl	1006b6e8 <iprintf>
          UNUSED(p_conn_update_complete);
          /* USER CODE BEGIN EVT_LE_CONN_UPDATE_COMPLETE */
          
          /* USER CODE END EVT_LE_CONN_UPDATE_COMPLETE */                      
        } 
        break;
10042be4:	e159      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
      case HCI_LE_PHY_UPDATE_COMPLETE_SUBEVT_CODE:
        {
          hci_le_phy_update_complete_event_rp0 *p_le_phy_update_complete;
          p_le_phy_update_complete = (hci_le_phy_update_complete_event_rp0*)p_meta_evt->data;
10042be6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042be8:	3301      	adds	r3, #1
10042bea:	62fb      	str	r3, [r7, #44]	@ 0x2c
          UNUSED(p_le_phy_update_complete);
          
          gap_cmd_resp_release();
10042bec:	f000 fbca 	bl	10043384 <gap_cmd_resp_release>
          
          /* USER CODE BEGIN EVT_LE_PHY_UPDATE_COMPLETE */
          
          /* USER CODE END EVT_LE_PHY_UPDATE_COMPLETE */
        }
        break;
10042bf0:	e153      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
      case HCI_LE_ENHANCED_CONNECTION_COMPLETE_SUBEVT_CODE:
        {          
          hci_le_enhanced_connection_complete_event_rp0 *p_enhanced_conn_complete;
          p_enhanced_conn_complete = (hci_le_enhanced_connection_complete_event_rp0 *) p_meta_evt->data;
10042bf2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042bf4:	3301      	adds	r3, #1
10042bf6:	62bb      	str	r3, [r7, #40]	@ 0x28
          
          connection_complete_event(p_enhanced_conn_complete->Status,
10042bf8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042bfa:	781d      	ldrb	r5, [r3, #0]
10042bfc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042bfe:	785a      	ldrb	r2, [r3, #1]
10042c00:	789b      	ldrb	r3, [r3, #2]
10042c02:	021b      	lsls	r3, r3, #8
10042c04:	4313      	orrs	r3, r2
10042c06:	b29e      	uxth	r6, r3
10042c08:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042c0a:	78db      	ldrb	r3, [r3, #3]
10042c0c:	469c      	mov	ip, r3
10042c0e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042c10:	791b      	ldrb	r3, [r3, #4]
10042c12:	4698      	mov	r8, r3
                                    p_enhanced_conn_complete->Connection_Handle,
                                    p_enhanced_conn_complete->Role,
                                    p_enhanced_conn_complete->Peer_Address_Type,
                                    p_enhanced_conn_complete->Peer_Address,
10042c14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042c16:	1d5a      	adds	r2, r3, #5
          connection_complete_event(p_enhanced_conn_complete->Status,
10042c18:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042c1a:	7dd9      	ldrb	r1, [r3, #23]
10042c1c:	7e1b      	ldrb	r3, [r3, #24]
10042c1e:	021b      	lsls	r3, r3, #8
10042c20:	430b      	orrs	r3, r1
10042c22:	b299      	uxth	r1, r3
10042c24:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042c26:	7e58      	ldrb	r0, [r3, #25]
10042c28:	7e9b      	ldrb	r3, [r3, #26]
10042c2a:	021b      	lsls	r3, r3, #8
10042c2c:	4303      	orrs	r3, r0
10042c2e:	b298      	uxth	r0, r3
10042c30:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10042c32:	7edc      	ldrb	r4, [r3, #27]
10042c34:	7f1b      	ldrb	r3, [r3, #28]
10042c36:	021b      	lsls	r3, r3, #8
10042c38:	4323      	orrs	r3, r4
10042c3a:	b29b      	uxth	r3, r3
10042c3c:	9303      	str	r3, [sp, #12]
10042c3e:	9002      	str	r0, [sp, #8]
10042c40:	9101      	str	r1, [sp, #4]
10042c42:	9200      	str	r2, [sp, #0]
10042c44:	4643      	mov	r3, r8
10042c46:	4662      	mov	r2, ip
10042c48:	0031      	movs	r1, r6
10042c4a:	0028      	movs	r0, r5
10042c4c:	f000 faba 	bl	100431c4 <connection_complete_event>
                                    p_enhanced_conn_complete->Connection_Interval,
                                    p_enhanced_conn_complete->Peripheral_Latency,
                                    p_enhanced_conn_complete->Supervision_Timeout);
        }
        break;
10042c50:	e123      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
      case HCI_LE_ENHANCED_CONNECTION_COMPLETE_V2_SUBEVT_CODE:
        {
          hci_le_enhanced_connection_complete_v2_event_rp0 *event;
          event = (hci_le_enhanced_connection_complete_v2_event_rp0 *) p_meta_evt->data;
10042c52:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042c54:	3301      	adds	r3, #1
10042c56:	643b      	str	r3, [r7, #64]	@ 0x40
          connection_complete_event(event->Status,
10042c58:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c5a:	781d      	ldrb	r5, [r3, #0]
10042c5c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c5e:	785a      	ldrb	r2, [r3, #1]
10042c60:	789b      	ldrb	r3, [r3, #2]
10042c62:	021b      	lsls	r3, r3, #8
10042c64:	4313      	orrs	r3, r2
10042c66:	b29e      	uxth	r6, r3
10042c68:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c6a:	78db      	ldrb	r3, [r3, #3]
10042c6c:	469c      	mov	ip, r3
10042c6e:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c70:	791b      	ldrb	r3, [r3, #4]
10042c72:	4698      	mov	r8, r3
                                    event->Connection_Handle,
                                    event->Role,
                                    event->Peer_Address_Type,
                                    event->Peer_Address,
10042c74:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c76:	1d5a      	adds	r2, r3, #5
          connection_complete_event(event->Status,
10042c78:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c7a:	7dd9      	ldrb	r1, [r3, #23]
10042c7c:	7e1b      	ldrb	r3, [r3, #24]
10042c7e:	021b      	lsls	r3, r3, #8
10042c80:	430b      	orrs	r3, r1
10042c82:	b299      	uxth	r1, r3
10042c84:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c86:	7e58      	ldrb	r0, [r3, #25]
10042c88:	7e9b      	ldrb	r3, [r3, #26]
10042c8a:	021b      	lsls	r3, r3, #8
10042c8c:	4303      	orrs	r3, r0
10042c8e:	b298      	uxth	r0, r3
10042c90:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10042c92:	7edc      	ldrb	r4, [r3, #27]
10042c94:	7f1b      	ldrb	r3, [r3, #28]
10042c96:	021b      	lsls	r3, r3, #8
10042c98:	4323      	orrs	r3, r4
10042c9a:	b29b      	uxth	r3, r3
10042c9c:	9303      	str	r3, [sp, #12]
10042c9e:	9002      	str	r0, [sp, #8]
10042ca0:	9101      	str	r1, [sp, #4]
10042ca2:	9200      	str	r2, [sp, #0]
10042ca4:	4643      	mov	r3, r8
10042ca6:	4662      	mov	r2, ip
10042ca8:	0031      	movs	r1, r6
10042caa:	0028      	movs	r0, r5
10042cac:	f000 fa8a 	bl	100431c4 <connection_complete_event>
                                    event->Connection_Interval,
                                    event->Peripheral_Latency,
                                    event->Supervision_Timeout);
        }
        break;        
10042cb0:	e0f3      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
      case HCI_LE_CONNECTION_COMPLETE_SUBEVT_CODE:
        {
          hci_le_connection_complete_event_rp0 *p_conn_complete;
          p_conn_complete = (hci_le_connection_complete_event_rp0 *) p_meta_evt->data;
10042cb2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042cb4:	3301      	adds	r3, #1
10042cb6:	617b      	str	r3, [r7, #20]
          
          connection_complete_event(p_conn_complete->Status,
10042cb8:	697b      	ldr	r3, [r7, #20]
10042cba:	781d      	ldrb	r5, [r3, #0]
10042cbc:	697b      	ldr	r3, [r7, #20]
10042cbe:	785a      	ldrb	r2, [r3, #1]
10042cc0:	789b      	ldrb	r3, [r3, #2]
10042cc2:	021b      	lsls	r3, r3, #8
10042cc4:	4313      	orrs	r3, r2
10042cc6:	b29e      	uxth	r6, r3
10042cc8:	697b      	ldr	r3, [r7, #20]
10042cca:	78db      	ldrb	r3, [r3, #3]
10042ccc:	469c      	mov	ip, r3
10042cce:	697b      	ldr	r3, [r7, #20]
10042cd0:	791b      	ldrb	r3, [r3, #4]
10042cd2:	4698      	mov	r8, r3
                                    p_conn_complete->Connection_Handle,
                                    p_conn_complete->Role,
                                    p_conn_complete->Peer_Address_Type,
                                    p_conn_complete->Peer_Address,
10042cd4:	697b      	ldr	r3, [r7, #20]
10042cd6:	1d5a      	adds	r2, r3, #5
          connection_complete_event(p_conn_complete->Status,
10042cd8:	697b      	ldr	r3, [r7, #20]
10042cda:	7ad9      	ldrb	r1, [r3, #11]
10042cdc:	7b1b      	ldrb	r3, [r3, #12]
10042cde:	021b      	lsls	r3, r3, #8
10042ce0:	430b      	orrs	r3, r1
10042ce2:	b299      	uxth	r1, r3
10042ce4:	697b      	ldr	r3, [r7, #20]
10042ce6:	7b58      	ldrb	r0, [r3, #13]
10042ce8:	7b9b      	ldrb	r3, [r3, #14]
10042cea:	021b      	lsls	r3, r3, #8
10042cec:	4303      	orrs	r3, r0
10042cee:	b298      	uxth	r0, r3
10042cf0:	697b      	ldr	r3, [r7, #20]
10042cf2:	7bdc      	ldrb	r4, [r3, #15]
10042cf4:	7c1b      	ldrb	r3, [r3, #16]
10042cf6:	021b      	lsls	r3, r3, #8
10042cf8:	4323      	orrs	r3, r4
10042cfa:	b29b      	uxth	r3, r3
10042cfc:	9303      	str	r3, [sp, #12]
10042cfe:	9002      	str	r0, [sp, #8]
10042d00:	9101      	str	r1, [sp, #4]
10042d02:	9200      	str	r2, [sp, #0]
10042d04:	4643      	mov	r3, r8
10042d06:	4662      	mov	r2, ip
10042d08:	0031      	movs	r1, r6
10042d0a:	0028      	movs	r0, r5
10042d0c:	f000 fa5a 	bl	100431c4 <connection_complete_event>
                                    p_conn_complete->Connection_Interval,
                                    p_conn_complete->Peripheral_Latency,
                                    p_conn_complete->Supervision_Timeout);
        }
        break;      
10042d10:	e0c3      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
      case HCI_LE_ADVERTISING_REPORT_SUBEVT_CODE:
        {
          hci_le_advertising_report_event_rp0 *p_adv_report;
          p_adv_report = (hci_le_advertising_report_event_rp0 *) p_meta_evt->data;
10042d12:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042d14:	3301      	adds	r3, #1
10042d16:	61fb      	str	r3, [r7, #28]
          /* USER CODE BEGIN EVT_LE_ADVERTISING_REPORT */
          uint8_t found_status;
        
          found_status = analyse_adv_report(p_adv_report->Advertising_Report.Data_Length, p_adv_report->Advertising_Report.Data_RSSI,
10042d18:	69fb      	ldr	r3, [r7, #28]
10042d1a:	7a58      	ldrb	r0, [r3, #9]
10042d1c:	69fb      	ldr	r3, [r7, #28]
10042d1e:	330a      	adds	r3, #10
10042d20:	0019      	movs	r1, r3
10042d22:	69fb      	ldr	r3, [r7, #28]
10042d24:	789a      	ldrb	r2, [r3, #2]
                                            p_adv_report->Advertising_Report.Address_Type, p_adv_report->Advertising_Report.Address);
10042d26:	69fb      	ldr	r3, [r7, #28]
10042d28:	3303      	adds	r3, #3
          found_status = analyse_adv_report(p_adv_report->Advertising_Report.Data_Length, p_adv_report->Advertising_Report.Data_RSSI,
10042d2a:	251b      	movs	r5, #27
10042d2c:	197c      	adds	r4, r7, r5
10042d2e:	f000 fb31 	bl	10043394 <analyse_adv_report>
10042d32:	0003      	movs	r3, r0
10042d34:	7023      	strb	r3, [r4, #0]
          if (found_status != 0)
10042d36:	197b      	adds	r3, r7, r5
10042d38:	781b      	ldrb	r3, [r3, #0]
10042d3a:	2b00      	cmp	r3, #0
10042d3c:	d100      	bne.n	10042d40 <BLEEVT_App_Notification+0x3d0>
10042d3e:	e0a9      	b.n	10042e94 <BLEEVT_App_Notification+0x524>
          {
            APP_BLE_Procedure_Gap_Central(PROC_GAP_CENTRAL_SCAN_TERMINATE);
10042d40:	2001      	movs	r0, #1
10042d42:	f000 fa8d 	bl	10043260 <APP_BLE_Procedure_Gap_Central>
          }
          /* USER CODE END EVT_LE_ADVERTISING_REPORT */
	  UNUSED(p_adv_report);

        }
        break;   
10042d46:	e0a5      	b.n	10042e94 <BLEEVT_App_Notification+0x524>
      case HCI_LE_EXTENDED_ADVERTISING_REPORT_SUBEVT_CODE:
        {
          hci_le_extended_advertising_report_event_rp0 *p_ext_adv_report;
          p_ext_adv_report = (hci_le_extended_advertising_report_event_rp0 *) p_meta_evt->data;
10042d48:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042d4a:	3301      	adds	r3, #1
10042d4c:	637b      	str	r3, [r7, #52]	@ 0x34
          /* USER CODE BEGIN EVT_LE_EXT_ADVERTISING_REPORT */
          uint8_t found_status;
        
          found_status = analyse_adv_report(p_ext_adv_report->Extended_Advertising_Report.Data_Length, p_ext_adv_report->Extended_Advertising_Report.Data,
10042d4e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10042d50:	7e18      	ldrb	r0, [r3, #24]
10042d52:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10042d54:	3319      	adds	r3, #25
10042d56:	0019      	movs	r1, r3
10042d58:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10042d5a:	78da      	ldrb	r2, [r3, #3]
                                            p_ext_adv_report->Extended_Advertising_Report.Address_Type, p_ext_adv_report->Extended_Advertising_Report.Address);
10042d5c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10042d5e:	3304      	adds	r3, #4
          found_status = analyse_adv_report(p_ext_adv_report->Extended_Advertising_Report.Data_Length, p_ext_adv_report->Extended_Advertising_Report.Data,
10042d60:	2533      	movs	r5, #51	@ 0x33
10042d62:	197c      	adds	r4, r7, r5
10042d64:	f000 fb16 	bl	10043394 <analyse_adv_report>
10042d68:	0003      	movs	r3, r0
10042d6a:	7023      	strb	r3, [r4, #0]
          if (found_status != 0)
10042d6c:	197b      	adds	r3, r7, r5
10042d6e:	781b      	ldrb	r3, [r3, #0]
10042d70:	2b00      	cmp	r3, #0
10042d72:	d100      	bne.n	10042d76 <BLEEVT_App_Notification+0x406>
10042d74:	e090      	b.n	10042e98 <BLEEVT_App_Notification+0x528>
          {
            APP_BLE_Procedure_Gap_Central(PROC_GAP_CENTRAL_SCAN_TERMINATE);
10042d76:	2001      	movs	r0, #1
10042d78:	f000 fa72 	bl	10043260 <APP_BLE_Procedure_Gap_Central>
          }
          /* USER CODE END EVT_LE_EXT_ADVERTISING_REPORT */
          UNUSED(p_ext_adv_report);

        }
        break;          
10042d7c:	e08c      	b.n	10042e98 <BLEEVT_App_Notification+0x528>
      /* USER CODE BEGIN EVT_LE_META_EVENT_1 */
      case HCI_LE_READ_REMOTE_FEATURES_COMPLETE_SUBEVT_CODE:
        {
          hci_le_read_remote_features_complete_event_rp0 *event;
          event = (hci_le_read_remote_features_complete_event_rp0 *) p_meta_evt->data;
10042d7e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042d80:	3301      	adds	r3, #1
10042d82:	627b      	str	r3, [r7, #36]	@ 0x24
          (void)event;
          
          APP_DBG_MSG("LE_Features: ");
10042d84:	4b0c      	ldr	r3, [pc, #48]	@ (10042db8 <BLEEVT_App_Notification+0x448>)
10042d86:	0018      	movs	r0, r3
10042d88:	f028 fcae 	bl	1006b6e8 <iprintf>
          for(int i = 0; i < 8; i++)
10042d8c:	2300      	movs	r3, #0
10042d8e:	2280      	movs	r2, #128	@ 0x80
10042d90:	18ba      	adds	r2, r7, r2
10042d92:	6013      	str	r3, [r2, #0]
10042d94:	e024      	b.n	10042de0 <BLEEVT_App_Notification+0x470>
10042d96:	46c0      	nop			@ (mov r8, r8)
10042d98:	200002d8 	.word	0x200002d8
10042d9c:	1006d8c0 	.word	0x1006d8c0
10042da0:	1006d8ec 	.word	0x1006d8ec
10042da4:	1006e5a4 	.word	0x1006e5a4
10042da8:	1006d92c 	.word	0x1006d92c
10042dac:	3ff40000 	.word	0x3ff40000
10042db0:	40590000 	.word	0x40590000
10042db4:	1006d960 	.word	0x1006d960
10042db8:	1006d9d0 	.word	0x1006d9d0
            APP_DBG_MSG("0x%02X ", event->LE_Features[i]);
10042dbc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
10042dbe:	2480      	movs	r4, #128	@ 0x80
10042dc0:	193b      	adds	r3, r7, r4
10042dc2:	681b      	ldr	r3, [r3, #0]
10042dc4:	18d3      	adds	r3, r2, r3
10042dc6:	3303      	adds	r3, #3
10042dc8:	781b      	ldrb	r3, [r3, #0]
10042dca:	001a      	movs	r2, r3
10042dcc:	4bde      	ldr	r3, [pc, #888]	@ (10043148 <BLEEVT_App_Notification+0x7d8>)
10042dce:	0011      	movs	r1, r2
10042dd0:	0018      	movs	r0, r3
10042dd2:	f028 fc89 	bl	1006b6e8 <iprintf>
          for(int i = 0; i < 8; i++)
10042dd6:	193b      	adds	r3, r7, r4
10042dd8:	681b      	ldr	r3, [r3, #0]
10042dda:	3301      	adds	r3, #1
10042ddc:	193a      	adds	r2, r7, r4
10042dde:	6013      	str	r3, [r2, #0]
10042de0:	2380      	movs	r3, #128	@ 0x80
10042de2:	18fb      	adds	r3, r7, r3
10042de4:	681b      	ldr	r3, [r3, #0]
10042de6:	2b07      	cmp	r3, #7
10042de8:	dde8      	ble.n	10042dbc <BLEEVT_App_Notification+0x44c>
          APP_DBG_MSG("\n");
10042dea:	200a      	movs	r0, #10
10042dec:	f028 fc8c 	bl	1006b708 <putchar>
          
          UTIL_SEQ_SetEvt(1 << CFG_IDLEEVT_READ_REMOTE_FEATURES_COMPLETE);
10042df0:	2008      	movs	r0, #8
10042df2:	f00c fc89 	bl	1004f708 <UTIL_SEQ_SetEvt>
        }
        break;
10042df6:	e050      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
      case HCI_LE_PERIODIC_ADVERTISING_SUBEVENT_DATA_REQUEST_SUBEVT_CODE:
        {
          hci_le_periodic_advertising_subevent_data_request_event_rp0 *event;
          event = (hci_le_periodic_advertising_subevent_data_request_event_rp0 *) p_meta_evt->data;
10042df8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042dfa:	3301      	adds	r3, #1
10042dfc:	63bb      	str	r3, [r7, #56]	@ 0x38
          
          //APP_DBG_MSG("PADV_DATA_REQUEST %d %d\n", event->Subevent_Start, event->Subevent_Data_Count);
          
          for(int i = event->Subevent_Start; i < event->Subevent_Start + event->Subevent_Data_Count; i++)
10042dfe:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10042e00:	785b      	ldrb	r3, [r3, #1]
10042e02:	67fb      	str	r3, [r7, #124]	@ 0x7c
10042e04:	e007      	b.n	10042e16 <BLEEVT_App_Notification+0x4a6>
          {
            ESL_AP_SubeventDataRequest(i);
10042e06:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
10042e08:	b2db      	uxtb	r3, r3
10042e0a:	0018      	movs	r0, r3
10042e0c:	f000 ff30 	bl	10043c70 <ESL_AP_SubeventDataRequest>
          for(int i = event->Subevent_Start; i < event->Subevent_Start + event->Subevent_Data_Count; i++)
10042e10:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
10042e12:	3301      	adds	r3, #1
10042e14:	67fb      	str	r3, [r7, #124]	@ 0x7c
10042e16:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10042e18:	785b      	ldrb	r3, [r3, #1]
10042e1a:	001a      	movs	r2, r3
10042e1c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10042e1e:	789b      	ldrb	r3, [r3, #2]
10042e20:	18d3      	adds	r3, r2, r3
10042e22:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
10042e24:	429a      	cmp	r2, r3
10042e26:	dbee      	blt.n	10042e06 <BLEEVT_App_Notification+0x496>
          }
          
        }
        break;
10042e28:	e037      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
      case HCI_LE_PERIODIC_ADVERTISING_RESPONSE_REPORT_SUBEVT_CODE:
        {
          hci_le_periodic_advertising_response_report_event_rp0 *event;
          event = (hci_le_periodic_advertising_response_report_event_rp0 *) p_meta_evt->data;
10042e2a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042e2c:	3301      	adds	r3, #1
10042e2e:	63fb      	str	r3, [r7, #60]	@ 0x3c
          
          packed_Periodic_Advertising_Response_t *periodic_adv_resp_p;
          
          APP_DBG_MSG("HCI_LE_PERIODIC_ADVERTISING_RESPONSE_REPORT\n");
10042e30:	4bc6      	ldr	r3, [pc, #792]	@ (1004314c <BLEEVT_App_Notification+0x7dc>)
10042e32:	0018      	movs	r0, r3
10042e34:	f028 fcc8 	bl	1006b7c8 <puts>
          
          periodic_adv_resp_p = &event->Periodic_Advertising_Response;
10042e38:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10042e3a:	3304      	adds	r3, #4
10042e3c:	67bb      	str	r3, [r7, #120]	@ 0x78
          
          for(int i = 0; i < event->Num_Responses; i++)
10042e3e:	2300      	movs	r3, #0
10042e40:	677b      	str	r3, [r7, #116]	@ 0x74
10042e42:	e017      	b.n	10042e74 <BLEEVT_App_Notification+0x504>
          {
            ESL_AP_ResponseReport(event->Subevent, periodic_adv_resp_p->Response_Slot, periodic_adv_resp_p->Data_Length, periodic_adv_resp_p->Data);
10042e44:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10042e46:	7858      	ldrb	r0, [r3, #1]
10042e48:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
10042e4a:	78d9      	ldrb	r1, [r3, #3]
10042e4c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
10042e4e:	795a      	ldrb	r2, [r3, #5]
10042e50:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
10042e52:	3306      	adds	r3, #6
10042e54:	f000 fff8 	bl	10043e48 <ESL_AP_ResponseReport>
            periodic_adv_resp_p = periodic_adv_resp_p + sizeof(packed_Periodic_Advertising_Response_t) + periodic_adv_resp_p->Data_Length;
10042e58:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
10042e5a:	795b      	ldrb	r3, [r3, #5]
10042e5c:	001a      	movs	r2, r3
10042e5e:	0013      	movs	r3, r2
10042e60:	005b      	lsls	r3, r3, #1
10042e62:	189b      	adds	r3, r3, r2
10042e64:	005b      	lsls	r3, r3, #1
10042e66:	3324      	adds	r3, #36	@ 0x24
10042e68:	6fba      	ldr	r2, [r7, #120]	@ 0x78
10042e6a:	18d3      	adds	r3, r2, r3
10042e6c:	67bb      	str	r3, [r7, #120]	@ 0x78
          for(int i = 0; i < event->Num_Responses; i++)
10042e6e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
10042e70:	3301      	adds	r3, #1
10042e72:	677b      	str	r3, [r7, #116]	@ 0x74
10042e74:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
10042e76:	78db      	ldrb	r3, [r3, #3]
10042e78:	001a      	movs	r2, r3
10042e7a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
10042e7c:	4293      	cmp	r3, r2
10042e7e:	dbe1      	blt.n	10042e44 <BLEEVT_App_Notification+0x4d4>
          }
          
        }
        break;
10042e80:	e00b      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>

      /* USER CODE END EVT_LE_META_EVENT_1 */
        
      default:
        /* USER CODE BEGIN SUBEVENT_DEFAULT */
        APP_DBG_MSG("HCI_LE_META_EVT: 0x%02X\n", p_meta_evt->subevent);
10042e82:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10042e84:	781b      	ldrb	r3, [r3, #0]
10042e86:	001a      	movs	r2, r3
10042e88:	4bb1      	ldr	r3, [pc, #708]	@ (10043150 <BLEEVT_App_Notification+0x7e0>)
10042e8a:	0011      	movs	r1, r2
10042e8c:	0018      	movs	r0, r3
10042e8e:	f028 fc2b 	bl	1006b6e8 <iprintf>
        /* USER CODE END SUBEVENT_DEFAULT */
        break;
10042e92:	e002      	b.n	10042e9a <BLEEVT_App_Notification+0x52a>
        break;   
10042e94:	46c0      	nop			@ (mov r8, r8)
10042e96:	e190      	b.n	100431ba <BLEEVT_App_Notification+0x84a>
        break;          
10042e98:	46c0      	nop			@ (mov r8, r8)
      }
    } /* HCI_LE_META_EVT_CODE */
    break;
10042e9a:	e18e      	b.n	100431ba <BLEEVT_App_Notification+0x84a>

  case HCI_VENDOR_EVT_CODE:
    {
      aci_blecore_event *p_blecore_evt = (aci_blecore_event*) event_data;
10042e9c:	2384      	movs	r3, #132	@ 0x84
10042e9e:	18fb      	adds	r3, r7, r3
10042ea0:	681b      	ldr	r3, [r3, #0]
10042ea2:	667b      	str	r3, [r7, #100]	@ 0x64
      /* USER CODE BEGIN EVT_VENDOR */
      
      /* USER CODE END EVT_VENDOR */
      switch (p_blecore_evt->ecode)
10042ea4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
10042ea6:	781a      	ldrb	r2, [r3, #0]
10042ea8:	785b      	ldrb	r3, [r3, #1]
10042eaa:	021b      	lsls	r3, r3, #8
10042eac:	4313      	orrs	r3, r2
10042eae:	b29b      	uxth	r3, r3
10042eb0:	4aa8      	ldr	r2, [pc, #672]	@ (10043154 <BLEEVT_App_Notification+0x7e4>)
10042eb2:	4293      	cmp	r3, r2
10042eb4:	d100      	bne.n	10042eb8 <BLEEVT_App_Notification+0x548>
10042eb6:	e0d7      	b.n	10043068 <BLEEVT_App_Notification+0x6f8>
10042eb8:	4aa6      	ldr	r2, [pc, #664]	@ (10043154 <BLEEVT_App_Notification+0x7e4>)
10042eba:	4293      	cmp	r3, r2
10042ebc:	dd00      	ble.n	10042ec0 <BLEEVT_App_Notification+0x550>
10042ebe:	e112      	b.n	100430e6 <BLEEVT_App_Notification+0x776>
10042ec0:	4aa5      	ldr	r2, [pc, #660]	@ (10043158 <BLEEVT_App_Notification+0x7e8>)
10042ec2:	4293      	cmp	r3, r2
10042ec4:	d02a      	beq.n	10042f1c <BLEEVT_App_Notification+0x5ac>
10042ec6:	4aa4      	ldr	r2, [pc, #656]	@ (10043158 <BLEEVT_App_Notification+0x7e8>)
10042ec8:	4293      	cmp	r3, r2
10042eca:	dd00      	ble.n	10042ece <BLEEVT_App_Notification+0x55e>
10042ecc:	e10b      	b.n	100430e6 <BLEEVT_App_Notification+0x776>
10042ece:	4aa3      	ldr	r2, [pc, #652]	@ (1004315c <BLEEVT_App_Notification+0x7ec>)
10042ed0:	4293      	cmp	r3, r2
10042ed2:	d100      	bne.n	10042ed6 <BLEEVT_App_Notification+0x566>
10042ed4:	e085      	b.n	10042fe2 <BLEEVT_App_Notification+0x672>
10042ed6:	4aa1      	ldr	r2, [pc, #644]	@ (1004315c <BLEEVT_App_Notification+0x7ec>)
10042ed8:	4293      	cmp	r3, r2
10042eda:	dd00      	ble.n	10042ede <BLEEVT_App_Notification+0x56e>
10042edc:	e103      	b.n	100430e6 <BLEEVT_App_Notification+0x776>
10042ede:	4aa0      	ldr	r2, [pc, #640]	@ (10043160 <BLEEVT_App_Notification+0x7f0>)
10042ee0:	4293      	cmp	r3, r2
10042ee2:	d064      	beq.n	10042fae <BLEEVT_App_Notification+0x63e>
10042ee4:	2281      	movs	r2, #129	@ 0x81
10042ee6:	00d2      	lsls	r2, r2, #3
10042ee8:	4293      	cmp	r3, r2
10042eea:	db00      	blt.n	10042eee <BLEEVT_App_Notification+0x57e>
10042eec:	e0fb      	b.n	100430e6 <BLEEVT_App_Notification+0x776>
10042eee:	4a9d      	ldr	r2, [pc, #628]	@ (10043164 <BLEEVT_App_Notification+0x7f4>)
10042ef0:	4293      	cmp	r3, r2
10042ef2:	d100      	bne.n	10042ef6 <BLEEVT_App_Notification+0x586>
10042ef4:	e07a      	b.n	10042fec <BLEEVT_App_Notification+0x67c>
10042ef6:	4a9b      	ldr	r2, [pc, #620]	@ (10043164 <BLEEVT_App_Notification+0x7f4>)
10042ef8:	4293      	cmp	r3, r2
10042efa:	dd00      	ble.n	10042efe <BLEEVT_App_Notification+0x58e>
10042efc:	e0f3      	b.n	100430e6 <BLEEVT_App_Notification+0x776>
10042efe:	4a9a      	ldr	r2, [pc, #616]	@ (10043168 <BLEEVT_App_Notification+0x7f8>)
10042f00:	4293      	cmp	r3, r2
10042f02:	d100      	bne.n	10042f06 <BLEEVT_App_Notification+0x596>
10042f04:	e092      	b.n	1004302c <BLEEVT_App_Notification+0x6bc>
10042f06:	4a98      	ldr	r2, [pc, #608]	@ (10043168 <BLEEVT_App_Notification+0x7f8>)
10042f08:	4293      	cmp	r3, r2
10042f0a:	dd00      	ble.n	10042f0e <BLEEVT_App_Notification+0x59e>
10042f0c:	e0eb      	b.n	100430e6 <BLEEVT_App_Notification+0x776>
10042f0e:	2b04      	cmp	r3, #4
10042f10:	d100      	bne.n	10042f14 <BLEEVT_App_Notification+0x5a4>
10042f12:	e0f5      	b.n	10043100 <BLEEVT_App_Notification+0x790>
10042f14:	2b06      	cmp	r3, #6
10042f16:	d100      	bne.n	10042f1a <BLEEVT_App_Notification+0x5aa>
10042f18:	e0d8      	b.n	100430cc <BLEEVT_App_Notification+0x75c>
10042f1a:	e0e4      	b.n	100430e6 <BLEEVT_App_Notification+0x776>
        
        /* USER CODE END ecode */
      case ACI_L2CAP_CONNECTION_UPDATE_REQ_VSEVT_CODE:
        {
          aci_l2cap_connection_update_req_event_rp0 *p_l2cap_conn_update_req;
          p_l2cap_conn_update_req = (aci_l2cap_connection_update_req_event_rp0 *) p_blecore_evt->data;
10042f1c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
10042f1e:	3302      	adds	r3, #2
10042f20:	65bb      	str	r3, [r7, #88]	@ 0x58
          tBleStatus ret; 
          uint8_t req_resp = 0x01;
10042f22:	2157      	movs	r1, #87	@ 0x57
10042f24:	187b      	adds	r3, r7, r1
10042f26:	2201      	movs	r2, #1
10042f28:	701a      	strb	r2, [r3, #0]

          /* USER CODE BEGIN EVT_L2CAP_CONNECTION_UPDATE_REQ */

          /* USER CODE END EVT_L2CAP_CONNECTION_UPDATE_REQ */

          ret = aci_l2cap_connection_parameter_update_resp(p_l2cap_conn_update_req->Connection_Handle,
10042f2a:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
10042f2c:	781a      	ldrb	r2, [r3, #0]
10042f2e:	785b      	ldrb	r3, [r3, #1]
10042f30:	021b      	lsls	r3, r3, #8
10042f32:	4313      	orrs	r3, r2
10042f34:	b298      	uxth	r0, r3
10042f36:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
10042f38:	795a      	ldrb	r2, [r3, #5]
10042f3a:	799b      	ldrb	r3, [r3, #6]
10042f3c:	021b      	lsls	r3, r3, #8
10042f3e:	4313      	orrs	r3, r2
10042f40:	b29d      	uxth	r5, r3
10042f42:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
10042f44:	79da      	ldrb	r2, [r3, #7]
10042f46:	7a1b      	ldrb	r3, [r3, #8]
10042f48:	021b      	lsls	r3, r3, #8
10042f4a:	4313      	orrs	r3, r2
10042f4c:	b29e      	uxth	r6, r3
10042f4e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
10042f50:	7a5a      	ldrb	r2, [r3, #9]
10042f52:	7a9b      	ldrb	r3, [r3, #10]
10042f54:	021b      	lsls	r3, r3, #8
10042f56:	4313      	orrs	r3, r2
10042f58:	b29b      	uxth	r3, r3
10042f5a:	469c      	mov	ip, r3
10042f5c:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
10042f5e:	7ada      	ldrb	r2, [r3, #11]
10042f60:	7b1b      	ldrb	r3, [r3, #12]
10042f62:	021b      	lsls	r3, r3, #8
10042f64:	4313      	orrs	r3, r2
10042f66:	b29b      	uxth	r3, r3
10042f68:	6dba      	ldr	r2, [r7, #88]	@ 0x58
10042f6a:	7892      	ldrb	r2, [r2, #2]
10042f6c:	2456      	movs	r4, #86	@ 0x56
10042f6e:	193c      	adds	r4, r7, r4
10042f70:	1879      	adds	r1, r7, r1
10042f72:	7809      	ldrb	r1, [r1, #0]
10042f74:	9104      	str	r1, [sp, #16]
10042f76:	9203      	str	r2, [sp, #12]
10042f78:	2210      	movs	r2, #16
10042f7a:	9202      	str	r2, [sp, #8]
10042f7c:	2210      	movs	r2, #16
10042f7e:	9201      	str	r2, [sp, #4]
10042f80:	9300      	str	r3, [sp, #0]
10042f82:	4663      	mov	r3, ip
10042f84:	0032      	movs	r2, r6
10042f86:	0029      	movs	r1, r5
10042f88:	f00c f9a5 	bl	1004f2d6 <aci_l2cap_connection_parameter_update_resp>
10042f8c:	0003      	movs	r3, r0
10042f8e:	7023      	strb	r3, [r4, #0]
                                                           p_l2cap_conn_update_req->Timeout_Multiplier,
                                                           CONN_CE_LENGTH_MS(10),
                                                           CONN_CE_LENGTH_MS(10),
                                                           p_l2cap_conn_update_req->Identifier,
                                                           req_resp);
          if(ret != BLE_STATUS_SUCCESS)
10042f90:	2456      	movs	r4, #86	@ 0x56
10042f92:	193b      	adds	r3, r7, r4
10042f94:	781b      	ldrb	r3, [r3, #0]
10042f96:	2b00      	cmp	r3, #0
10042f98:	d004      	beq.n	10042fa4 <BLEEVT_App_Notification+0x634>
          {
            APP_DBG_MSG("  Fail   : aci_l2cap_connection_parameter_update_resp command\n");
10042f9a:	4b74      	ldr	r3, [pc, #464]	@ (1004316c <BLEEVT_App_Notification+0x7fc>)
10042f9c:	0018      	movs	r0, r3
10042f9e:	f028 fc13 	bl	1006b7c8 <puts>
          
          /* USER CODE BEGIN EVT_L2CAP_CONNECTION_UPDATE_RESP */
          
          /* USER CODE END EVT_L2CAP_CONNECTION_UPDATE_RESP */
        }
        break;         
10042fa2:	e0b0      	b.n	10043106 <BLEEVT_App_Notification+0x796>
            APP_DBG_MSG("  Success: aci_l2cap_connection_parameter_update_resp command\n");
10042fa4:	4b72      	ldr	r3, [pc, #456]	@ (10043170 <BLEEVT_App_Notification+0x800>)
10042fa6:	0018      	movs	r0, r3
10042fa8:	f028 fc0e 	bl	1006b7c8 <puts>
        break;         
10042fac:	e0ab      	b.n	10043106 <BLEEVT_App_Notification+0x796>
      case ACI_GAP_PROC_COMPLETE_VSEVT_CODE:
        {
          APP_DBG_MSG(">>== ACI_GAP_PROC_COMPLETE_VSEVT_CODE\n");
10042fae:	4b71      	ldr	r3, [pc, #452]	@ (10043174 <BLEEVT_App_Notification+0x804>)
10042fb0:	0018      	movs	r0, r3
10042fb2:	f028 fc09 	bl	1006b7c8 <puts>
          aci_gap_proc_complete_event_rp0 *p_gap_proc_complete;
          p_gap_proc_complete = (aci_gap_proc_complete_event_rp0*) p_blecore_evt->data;
10042fb6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
10042fb8:	3302      	adds	r3, #2
10042fba:	653b      	str	r3, [r7, #80]	@ 0x50

          /* USER CODE BEGIN EVT_GAP_PROCEDURE_COMPLETE */
            if ((p_gap_proc_complete->Procedure_Code == GAP_GENERAL_DISCOVERY_PROC) &&
10042fbc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
10042fbe:	781b      	ldrb	r3, [r3, #0]
10042fc0:	2b01      	cmp	r3, #1
10042fc2:	d000      	beq.n	10042fc6 <BLEEVT_App_Notification+0x656>
10042fc4:	e09e      	b.n	10043104 <BLEEVT_App_Notification+0x794>
                (p_gap_proc_complete->Status == 0x00))
10042fc6:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
10042fc8:	785b      	ldrb	r3, [r3, #1]
            if ((p_gap_proc_complete->Procedure_Code == GAP_GENERAL_DISCOVERY_PROC) &&
10042fca:	2b00      	cmp	r3, #0
10042fcc:	d000      	beq.n	10042fd0 <BLEEVT_App_Notification+0x660>
10042fce:	e099      	b.n	10043104 <BLEEVT_App_Notification+0x794>
            {
              APP_DBG_MSG("-- GAP_GENERAL_DISCOVERY_PROC completed\n");
10042fd0:	4b69      	ldr	r3, [pc, #420]	@ (10043178 <BLEEVT_App_Notification+0x808>)
10042fd2:	0018      	movs	r0, r3
10042fd4:	f028 fbf8 	bl	1006b7c8 <puts>
              UTIL_SEQ_SetTask(1u << CFG_TASK_CONN_DEV_ID, CFG_SEQ_PRIO_0);
10042fd8:	2100      	movs	r1, #0
10042fda:	2080      	movs	r0, #128	@ 0x80
10042fdc:	f00c fb68 	bl	1004f6b0 <UTIL_SEQ_SetTask>
            }
          /* USER CODE END EVT_GAP_PROCEDURE_COMPLETE */
        }
        break;
10042fe0:	e090      	b.n	10043104 <BLEEVT_App_Notification+0x794>
       
        /* USER CODE END RADIO_ACTIVITY_EVENT*/
        break;
      case ACI_GAP_KEYPRESS_NOTIFICATION_VSEVT_CODE:
        {
          APP_DBG_MSG(">>== ACI_GAP_KEYPRESS_NOTIFICATION_VSEVT_CODE\n");
10042fe2:	4b66      	ldr	r3, [pc, #408]	@ (1004317c <BLEEVT_App_Notification+0x80c>)
10042fe4:	0018      	movs	r0, r3
10042fe6:	f028 fbef 	bl	1006b7c8 <puts>
          /* USER CODE BEGIN ACI_GAP_KEYPRESS_NOTIFICATION_VSEVT_CODE*/

          /* USER CODE END ACI_GAP_KEYPRESS_NOTIFICATION_VSEVT_CODE*/
        }
        break;
10042fea:	e08c      	b.n	10043106 <BLEEVT_App_Notification+0x796>
      case ACI_GAP_PASSKEY_REQ_VSEVT_CODE:
        {
          APP_DBG_MSG(">>== ACI_GAP_PASSKEY_REQ_VSEVT_CODE\n");
10042fec:	4b64      	ldr	r3, [pc, #400]	@ (10043180 <BLEEVT_App_Notification+0x810>)
10042fee:	0018      	movs	r0, r3
10042ff0:	f028 fbea 	bl	1006b7c8 <puts>

          ret = aci_gap_passkey_resp(bleAppContext.BleApplicationContext_legacy.connectionHandle, CFG_FIXED_PIN);
10042ff4:	4b63      	ldr	r3, [pc, #396]	@ (10043184 <BLEEVT_App_Notification+0x814>)
10042ff6:	899b      	ldrh	r3, [r3, #12]
10042ff8:	2573      	movs	r5, #115	@ 0x73
10042ffa:	197c      	adds	r4, r7, r5
10042ffc:	4a62      	ldr	r2, [pc, #392]	@ (10043188 <BLEEVT_App_Notification+0x818>)
10042ffe:	0011      	movs	r1, r2
10043000:	0018      	movs	r0, r3
10043002:	f00c f8f2 	bl	1004f1ea <aci_gap_passkey_resp>
10043006:	0003      	movs	r3, r0
10043008:	7023      	strb	r3, [r4, #0]
          if (ret != BLE_STATUS_SUCCESS)
1004300a:	197b      	adds	r3, r7, r5
1004300c:	781b      	ldrb	r3, [r3, #0]
1004300e:	2b00      	cmp	r3, #0
10043010:	d007      	beq.n	10043022 <BLEEVT_App_Notification+0x6b2>
          {
            APP_DBG_MSG("==>> aci_gap_passkey_resp : Fail, reason: 0x%02X\n", ret);
10043012:	197b      	adds	r3, r7, r5
10043014:	781a      	ldrb	r2, [r3, #0]
10043016:	4b5d      	ldr	r3, [pc, #372]	@ (1004318c <BLEEVT_App_Notification+0x81c>)
10043018:	0011      	movs	r1, r2
1004301a:	0018      	movs	r0, r3
1004301c:	f028 fb64 	bl	1006b6e8 <iprintf>
          }
          /* USER CODE BEGIN ACI_GAP_PASSKEY_REQ_VSEVT_CODE*/

          /* USER CODE END ACI_GAP_PASSKEY_REQ_VSEVT_CODE*/
        }
        break;
10043020:	e071      	b.n	10043106 <BLEEVT_App_Notification+0x796>
            APP_DBG_MSG("==>> aci_gap_passkey_resp : Success\n");
10043022:	4b5b      	ldr	r3, [pc, #364]	@ (10043190 <BLEEVT_App_Notification+0x820>)
10043024:	0018      	movs	r0, r3
10043026:	f028 fbcf 	bl	1006b7c8 <puts>
        break;
1004302a:	e06c      	b.n	10043106 <BLEEVT_App_Notification+0x796>
      case ACI_GAP_PAIRING_COMPLETE_VSEVT_CODE:
        {
          APP_DBG_MSG(">>== ACI_GAP_PAIRING_COMPLETE_VSEVT_CODE\n");
1004302c:	4b59      	ldr	r3, [pc, #356]	@ (10043194 <BLEEVT_App_Notification+0x824>)
1004302e:	0018      	movs	r0, r3
10043030:	f028 fbca 	bl	1006b7c8 <puts>
          aci_gap_pairing_complete_event_rp0 *p_pairing_complete;
          p_pairing_complete = (aci_gap_pairing_complete_event_rp0*)p_blecore_evt->data;
10043034:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
10043036:	3302      	adds	r3, #2
10043038:	64fb      	str	r3, [r7, #76]	@ 0x4c

          if (p_pairing_complete->Status != 0)
1004303a:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
1004303c:	789b      	ldrb	r3, [r3, #2]
1004303e:	2b00      	cmp	r3, #0
10043040:	d00a      	beq.n	10043058 <BLEEVT_App_Notification+0x6e8>
          {
            APP_DBG_MSG("     - Pairing KO\n     - Status: 0x%02X\n     - Reason: 0x%02X\n",
10043042:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043044:	789b      	ldrb	r3, [r3, #2]
10043046:	0019      	movs	r1, r3
10043048:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
1004304a:	78db      	ldrb	r3, [r3, #3]
1004304c:	001a      	movs	r2, r3
1004304e:	4b52      	ldr	r3, [pc, #328]	@ (10043198 <BLEEVT_App_Notification+0x828>)
10043050:	0018      	movs	r0, r3
10043052:	f028 fb49 	bl	1006b6e8 <iprintf>
10043056:	e003      	b.n	10043060 <BLEEVT_App_Notification+0x6f0>
                        p_pairing_complete->Status, p_pairing_complete->Reason);
          }
          else
          {
            APP_DBG_MSG("     - Pairing Success\n");
10043058:	4b50      	ldr	r3, [pc, #320]	@ (1004319c <BLEEVT_App_Notification+0x82c>)
1004305a:	0018      	movs	r0, r3
1004305c:	f028 fbb4 	bl	1006b7c8 <puts>
          }
          APP_DBG_MSG("\n");
10043060:	200a      	movs	r0, #10
10043062:	f028 fb51 	bl	1006b708 <putchar>

          /* USER CODE BEGIN ACI_GAP_PAIRING_COMPLETE_VSEVT_CODE*/

          /* USER CODE END ACI_GAP_PAIRING_COMPLETE_VSEVT_CODE*/
        }
        break;
10043066:	e04e      	b.n	10043106 <BLEEVT_App_Notification+0x796>
      case ACI_GATT_SRV_READ_VSEVT_CODE :
        {
          APP_DBG_MSG(">>== ACI_GATT_SRV_READ_VSEVT_CODE\n");
10043068:	4b4d      	ldr	r3, [pc, #308]	@ (100431a0 <BLEEVT_App_Notification+0x830>)
1004306a:	0018      	movs	r0, r3
1004306c:	f028 fbac 	bl	1006b7c8 <puts>

          aci_gatt_srv_read_event_rp0    *p_read;
          p_read = (aci_gatt_srv_read_event_rp0*)p_blecore_evt->data;
10043070:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
10043072:	3302      	adds	r3, #2
10043074:	663b      	str	r3, [r7, #96]	@ 0x60
          uint8_t error_code = BLE_ATT_ERR_INSUFF_AUTHORIZATION;
10043076:	245f      	movs	r4, #95	@ 0x5f
10043078:	193b      	adds	r3, r7, r4
1004307a:	2208      	movs	r2, #8
1004307c:	701a      	strb	r2, [r3, #0]
          
          APP_DBG_MSG("Handle 0x%04X\n",  p_read->Attribute_Handle);
1004307e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
10043080:	791a      	ldrb	r2, [r3, #4]
10043082:	795b      	ldrb	r3, [r3, #5]
10043084:	021b      	lsls	r3, r3, #8
10043086:	4313      	orrs	r3, r2
10043088:	b29b      	uxth	r3, r3
1004308a:	001a      	movs	r2, r3
1004308c:	4b45      	ldr	r3, [pc, #276]	@ (100431a4 <BLEEVT_App_Notification+0x834>)
1004308e:	0011      	movs	r1, r2
10043090:	0018      	movs	r0, r3
10043092:	f028 fb29 	bl	1006b6e8 <iprintf>
          
          /* USER CODE BEGIN ACI_GATT_SRV_READ_VSEVT_CODE_BEGIN */
          
          /* USER CODE END ACI_GATT_SRV_READ_VSEVT_CODE_BEGIN */
          
          aci_gatt_srv_resp(p_read->Connection_Handle,
10043096:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
10043098:	781a      	ldrb	r2, [r3, #0]
1004309a:	785b      	ldrb	r3, [r3, #1]
1004309c:	021b      	lsls	r3, r3, #8
1004309e:	4313      	orrs	r3, r2
100430a0:	b298      	uxth	r0, r3
100430a2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
100430a4:	789a      	ldrb	r2, [r3, #2]
100430a6:	78db      	ldrb	r3, [r3, #3]
100430a8:	021b      	lsls	r3, r3, #8
100430aa:	4313      	orrs	r3, r2
100430ac:	b299      	uxth	r1, r3
100430ae:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
100430b0:	791a      	ldrb	r2, [r3, #4]
100430b2:	795b      	ldrb	r3, [r3, #5]
100430b4:	021b      	lsls	r3, r3, #8
100430b6:	4313      	orrs	r3, r2
100430b8:	b29a      	uxth	r2, r3
100430ba:	193b      	adds	r3, r7, r4
100430bc:	781b      	ldrb	r3, [r3, #0]
100430be:	2400      	movs	r4, #0
100430c0:	9401      	str	r4, [sp, #4]
100430c2:	2400      	movs	r4, #0
100430c4:	9400      	str	r4, [sp, #0]
100430c6:	f00c f8dd 	bl	1004f284 <aci_gatt_srv_resp>
                            NULL);
          
          /* USER CODE BEGIN ACI_GATT_SRV_READ_VSEVT_CODE_END */
          
          /* USER CODE END ACI_GATT_SRV_READ_VSEVT_CODE_END */
          break;
100430ca:	e01c      	b.n	10043106 <BLEEVT_App_Notification+0x796>
        /* USER CODE BEGIN EVT_VENDOR_1 */
        
      case ACI_HAL_FW_ERROR_VSEVT_CODE:
        {
          aci_hal_fw_error_event_rp0 *event;
          event = (aci_hal_fw_error_event_rp0 *)p_blecore_evt->data;
100430cc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
100430ce:	3302      	adds	r3, #2
100430d0:	64bb      	str	r3, [r7, #72]	@ 0x48
          
          APP_DBG_MSG("ACI_HAL_FW_ERROR_VSEVT 0x%02X\n", event->FW_Error_Type);
100430d2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100430d4:	781b      	ldrb	r3, [r3, #0]
100430d6:	001a      	movs	r2, r3
100430d8:	4b33      	ldr	r3, [pc, #204]	@ (100431a8 <BLEEVT_App_Notification+0x838>)
100430da:	0011      	movs	r1, r2
100430dc:	0018      	movs	r0, r3
100430de:	f028 fb03 	bl	1006b6e8 <iprintf>
          NVIC_SystemReset();
100430e2:	f7ff f9d3 	bl	1004248c <__NVIC_SystemReset>
        }
        break;
        /* USER CODE END EVT_VENDOR_1 */
      default:
        /* USER CODE BEGIN EVT_VENDOR_DEFAULT */
        APP_DBG_MSG("HCI_VENDOR_EVT: 0x%04X\n", p_blecore_evt->ecode);
100430e6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
100430e8:	781a      	ldrb	r2, [r3, #0]
100430ea:	785b      	ldrb	r3, [r3, #1]
100430ec:	021b      	lsls	r3, r3, #8
100430ee:	4313      	orrs	r3, r2
100430f0:	b29b      	uxth	r3, r3
100430f2:	001a      	movs	r2, r3
100430f4:	4b2d      	ldr	r3, [pc, #180]	@ (100431ac <BLEEVT_App_Notification+0x83c>)
100430f6:	0011      	movs	r1, r2
100430f8:	0018      	movs	r0, r3
100430fa:	f028 faf5 	bl	1006b6e8 <iprintf>
        /* USER CODE END EVT_VENDOR_DEFAULT */        
        break;
100430fe:	e002      	b.n	10043106 <BLEEVT_App_Notification+0x796>
        break;
10043100:	46c0      	nop			@ (mov r8, r8)
10043102:	e05a      	b.n	100431ba <BLEEVT_App_Notification+0x84a>
        break;
10043104:	46c0      	nop			@ (mov r8, r8)
      }
    } /* HCI_VENDOR_EVT_CODE */
    break;
10043106:	e058      	b.n	100431ba <BLEEVT_App_Notification+0x84a>
    
  case HCI_HARDWARE_ERROR_EVT_CODE:
    {
      hci_hardware_error_event_rp0 *p_hci_hardware_error_event;
      p_hci_hardware_error_event = (hci_hardware_error_event_rp0*)p_event_pckt->data;
10043108:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
1004310a:	3302      	adds	r3, #2
1004310c:	613b      	str	r3, [r7, #16]
      
      APP_DBG_MSG("HCI_HARDWARE_ERROR_EVT 0x%02X\n", p_hci_hardware_error_event->Hardware_Code);
1004310e:	693b      	ldr	r3, [r7, #16]
10043110:	781b      	ldrb	r3, [r3, #0]
10043112:	001a      	movs	r2, r3
10043114:	4b26      	ldr	r3, [pc, #152]	@ (100431b0 <BLEEVT_App_Notification+0x840>)
10043116:	0011      	movs	r1, r2
10043118:	0018      	movs	r0, r3
1004311a:	f028 fae5 	bl	1006b6e8 <iprintf>
      
      if (p_hci_hardware_error_event->Hardware_Code <= 0x03)
1004311e:	693b      	ldr	r3, [r7, #16]
10043120:	781b      	ldrb	r3, [r3, #0]
10043122:	2b03      	cmp	r3, #3
10043124:	d848      	bhi.n	100431b8 <BLEEVT_App_Notification+0x848>
      {
        HAL_Delay(5);
10043126:	2005      	movs	r0, #5
10043128:	f006 fd58 	bl	10049bdc <HAL_Delay>
        NVIC_SystemReset();
1004312c:	f7ff f9ae 	bl	1004248c <__NVIC_SystemReset>
    
    /* USER CODE END EVENT_PCKT */
    
  default:
    /* USER CODE BEGIN ECODE_DEFAULT*/
    APP_DBG_MSG("HCI_EVENT: 0x%02X\n", p_event_pckt->evt);
10043130:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
10043132:	781b      	ldrb	r3, [r3, #0]
10043134:	001a      	movs	r2, r3
10043136:	4b1f      	ldr	r3, [pc, #124]	@ (100431b4 <BLEEVT_App_Notification+0x844>)
10043138:	0011      	movs	r1, r2
1004313a:	0018      	movs	r0, r3
1004313c:	f028 fad4 	bl	1006b6e8 <iprintf>
    /* USER CODE END ECODE_DEFAULT*/
    break;
10043140:	e03b      	b.n	100431ba <BLEEVT_App_Notification+0x84a>
    return;
10043142:	46c0      	nop			@ (mov r8, r8)
10043144:	e039      	b.n	100431ba <BLEEVT_App_Notification+0x84a>
10043146:	46c0      	nop			@ (mov r8, r8)
10043148:	1006d9e0 	.word	0x1006d9e0
1004314c:	1006d9e8 	.word	0x1006d9e8
10043150:	1006da14 	.word	0x1006da14
10043154:	00000c19 	.word	0x00000c19
10043158:	00000802 	.word	0x00000802
1004315c:	0000040a 	.word	0x0000040a
10043160:	00000407 	.word	0x00000407
10043164:	00000402 	.word	0x00000402
10043168:	00000401 	.word	0x00000401
1004316c:	1006da30 	.word	0x1006da30
10043170:	1006da70 	.word	0x1006da70
10043174:	1006dab0 	.word	0x1006dab0
10043178:	1006dad8 	.word	0x1006dad8
1004317c:	1006db00 	.word	0x1006db00
10043180:	1006db30 	.word	0x1006db30
10043184:	200002d8 	.word	0x200002d8
10043188:	0001b207 	.word	0x0001b207
1004318c:	1006db54 	.word	0x1006db54
10043190:	1006db88 	.word	0x1006db88
10043194:	1006dbac 	.word	0x1006dbac
10043198:	1006dbd8 	.word	0x1006dbd8
1004319c:	1006dc18 	.word	0x1006dc18
100431a0:	1006dc30 	.word	0x1006dc30
100431a4:	1006dc54 	.word	0x1006dc54
100431a8:	1006dc64 	.word	0x1006dc64
100431ac:	1006dc84 	.word	0x1006dc84
100431b0:	1006dc9c 	.word	0x1006dc9c
100431b4:	1006dcbc 	.word	0x1006dcbc
    break;
100431b8:	46c0      	nop			@ (mov r8, r8)
  }
}
100431ba:	46bd      	mov	sp, r7
100431bc:	b022      	add	sp, #136	@ 0x88
100431be:	bc80      	pop	{r7}
100431c0:	46b8      	mov	r8, r7
100431c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100431c4 <connection_complete_event>:
                                      uint8_t Peer_Address_Type,
                                      uint8_t Peer_Address[6],
                                      uint16_t Conn_Interval,
                                      uint16_t Peripheral_Latency,
                                      uint16_t Supervision_Timeout)
{
100431c4:	b5f0      	push	{r4, r5, r6, r7, lr}
100431c6:	b087      	sub	sp, #28
100431c8:	af04      	add	r7, sp, #16
100431ca:	0005      	movs	r5, r0
100431cc:	000c      	movs	r4, r1
100431ce:	0010      	movs	r0, r2
100431d0:	0019      	movs	r1, r3
100431d2:	1dfb      	adds	r3, r7, #7
100431d4:	1c2a      	adds	r2, r5, #0
100431d6:	701a      	strb	r2, [r3, #0]
100431d8:	1d3b      	adds	r3, r7, #4
100431da:	1c22      	adds	r2, r4, #0
100431dc:	801a      	strh	r2, [r3, #0]
100431de:	1dbb      	adds	r3, r7, #6
100431e0:	1c02      	adds	r2, r0, #0
100431e2:	701a      	strb	r2, [r3, #0]
100431e4:	1cfb      	adds	r3, r7, #3
100431e6:	1c0a      	adds	r2, r1, #0
100431e8:	701a      	strb	r2, [r3, #0]
  /* USER CODE BEGIN HCI_EVT_LE_CONN_COMPLETE_1 */
  
  /* USER CODE END HCI_EVT_LE_CONN_COMPLETE_1 */
   APP_DBG_MSG(">>== hci_le_connection_complete_event - Connection handle: 0x%04X\n", Connection_Handle);
100431ea:	1d3b      	adds	r3, r7, #4
100431ec:	881a      	ldrh	r2, [r3, #0]
100431ee:	4b19      	ldr	r3, [pc, #100]	@ (10043254 <connection_complete_event+0x90>)
100431f0:	0011      	movs	r1, r2
100431f2:	0018      	movs	r0, r3
100431f4:	f028 fa78 	bl	1006b6e8 <iprintf>
   APP_DBG_MSG("     - Connection established with @:%02x:%02x:%02x:%02x:%02x:%02x\n",
100431f8:	6a3b      	ldr	r3, [r7, #32]
100431fa:	3305      	adds	r3, #5
100431fc:	781b      	ldrb	r3, [r3, #0]
100431fe:	001c      	movs	r4, r3
10043200:	6a3b      	ldr	r3, [r7, #32]
10043202:	3304      	adds	r3, #4
10043204:	781b      	ldrb	r3, [r3, #0]
10043206:	001d      	movs	r5, r3
10043208:	6a3b      	ldr	r3, [r7, #32]
1004320a:	3303      	adds	r3, #3
1004320c:	781b      	ldrb	r3, [r3, #0]
1004320e:	001e      	movs	r6, r3
10043210:	6a3b      	ldr	r3, [r7, #32]
10043212:	3302      	adds	r3, #2
10043214:	781b      	ldrb	r3, [r3, #0]
10043216:	001a      	movs	r2, r3
10043218:	6a3b      	ldr	r3, [r7, #32]
1004321a:	3301      	adds	r3, #1
1004321c:	781b      	ldrb	r3, [r3, #0]
1004321e:	0019      	movs	r1, r3
10043220:	6a3b      	ldr	r3, [r7, #32]
10043222:	781b      	ldrb	r3, [r3, #0]
10043224:	480c      	ldr	r0, [pc, #48]	@ (10043258 <connection_complete_event+0x94>)
10043226:	9302      	str	r3, [sp, #8]
10043228:	9101      	str	r1, [sp, #4]
1004322a:	9200      	str	r2, [sp, #0]
1004322c:	0033      	movs	r3, r6
1004322e:	002a      	movs	r2, r5
10043230:	0021      	movs	r1, r4
10043232:	f028 fa59 	bl	1006b6e8 <iprintf>
               Peer_Address[3],
               Peer_Address[2],
               Peer_Address[1],
               Peer_Address[0]);
   
   bleAppContext.BleApplicationContext_legacy.connectionHandle = Connection_Handle;
10043236:	4b09      	ldr	r3, [pc, #36]	@ (1004325c <connection_complete_event+0x98>)
10043238:	1d3a      	adds	r2, r7, #4
1004323a:	8812      	ldrh	r2, [r2, #0]
1004323c:	819a      	strh	r2, [r3, #12]
   
   /* USER CODE BEGIN HCI_EVT_LE_CONN_COMPLETE */
   
   UTIL_SEQ_SetTask( 1U << CFG_TASK_START_INFO_TRANSFER, CFG_SEQ_PRIO_0);
1004323e:	2380      	movs	r3, #128	@ 0x80
10043240:	009b      	lsls	r3, r3, #2
10043242:	2100      	movs	r1, #0
10043244:	0018      	movs	r0, r3
10043246:	f00c fa33 	bl	1004f6b0 <UTIL_SEQ_SetTask>
   
   /* USER CODE END HCI_EVT_LE_CONN_COMPLETE */

}/* end hci_le_connection_complete_event() */
1004324a:	46c0      	nop			@ (mov r8, r8)
1004324c:	46bd      	mov	sp, r7
1004324e:	b003      	add	sp, #12
10043250:	bdf0      	pop	{r4, r5, r6, r7, pc}
10043252:	46c0      	nop			@ (mov r8, r8)
10043254:	1006dcd0 	.word	0x1006dcd0
10043258:	1006dd14 	.word	0x1006dd14
1004325c:	200002d8 	.word	0x200002d8

10043260 <APP_BLE_Procedure_Gap_Central>:
  }
  return;
}

void APP_BLE_Procedure_Gap_Central(ProcGapCentralId_t ProcGapCentralId)
{
10043260:	b5b0      	push	{r4, r5, r7, lr}
10043262:	b088      	sub	sp, #32
10043264:	af02      	add	r7, sp, #8
10043266:	0002      	movs	r2, r0
10043268:	1dfb      	adds	r3, r7, #7
1004326a:	701a      	strb	r2, [r3, #0]
  UNUSED(paramB);
  UNUSED(paramC);
  UNUSED(paramD);

  /* First set parameters before calling ACI APIs, only if needed */
  switch(ProcGapCentralId)
1004326c:	1dfb      	adds	r3, r7, #7
1004326e:	781b      	ldrb	r3, [r3, #0]
10043270:	2b00      	cmp	r3, #0
10043272:	d002      	beq.n	1004327a <APP_BLE_Procedure_Gap_Central+0x1a>
10043274:	2b01      	cmp	r3, #1
10043276:	d009      	beq.n	1004328c <APP_BLE_Procedure_Gap_Central+0x2c>

      /* USER CODE END PROC_GAP_CENTRAL_SCAN_TERMINATE */
      break;
    }/* PROC_GAP_CENTRAL_SCAN_TERMINATE */
    default:
      break;
10043278:	e00f      	b.n	1004329a <APP_BLE_Procedure_Gap_Central+0x3a>
      paramA = SCAN_INT_MS(500);
1004327a:	23c8      	movs	r3, #200	@ 0xc8
1004327c:	009b      	lsls	r3, r3, #2
1004327e:	617b      	str	r3, [r7, #20]
      paramB = SCAN_WIN_MS(500);
10043280:	23c8      	movs	r3, #200	@ 0xc8
10043282:	009b      	lsls	r3, r3, #2
10043284:	613b      	str	r3, [r7, #16]
      paramC = APP_BLE_SCANNING;
10043286:	2304      	movs	r3, #4
10043288:	60fb      	str	r3, [r7, #12]
      break;
1004328a:	e006      	b.n	1004329a <APP_BLE_Procedure_Gap_Central+0x3a>
      paramA = 1;
1004328c:	2301      	movs	r3, #1
1004328e:	617b      	str	r3, [r7, #20]
      paramB = 1;
10043290:	2301      	movs	r3, #1
10043292:	613b      	str	r3, [r7, #16]
      paramC = APP_BLE_IDLE;
10043294:	2300      	movs	r3, #0
10043296:	60fb      	str	r3, [r7, #12]
      break;
10043298:	46c0      	nop			@ (mov r8, r8)
  }

  /* Call ACI APIs */
  switch(ProcGapCentralId)
1004329a:	1dfb      	adds	r3, r7, #7
1004329c:	781b      	ldrb	r3, [r3, #0]
1004329e:	2b00      	cmp	r3, #0
100432a0:	d002      	beq.n	100432a8 <APP_BLE_Procedure_Gap_Central+0x48>
100432a2:	2b01      	cmp	r3, #1
100432a4:	d03f      	beq.n	10043326 <APP_BLE_Procedure_Gap_Central+0xc6>
      }
      break;
    }/* PROC_GAP_CENTRAL_SCAN_TERMINATE */

    default:
      break;
100432a6:	e05b      	b.n	10043360 <APP_BLE_Procedure_Gap_Central+0x100>
      status = aci_gap_set_scan_configuration(DUPLICATE_FILTER_ENABLED, 0x00, LE_1M_PHY_BIT, HCI_SCAN_TYPE_ACTIVE, paramA, paramB);
100432a8:	697b      	ldr	r3, [r7, #20]
100432aa:	b29b      	uxth	r3, r3
100432ac:	693a      	ldr	r2, [r7, #16]
100432ae:	b292      	uxth	r2, r2
100432b0:	250b      	movs	r5, #11
100432b2:	197c      	adds	r4, r7, r5
100432b4:	9201      	str	r2, [sp, #4]
100432b6:	9300      	str	r3, [sp, #0]
100432b8:	2301      	movs	r3, #1
100432ba:	2201      	movs	r2, #1
100432bc:	2100      	movs	r1, #0
100432be:	2001      	movs	r0, #1
100432c0:	f00b fec7 	bl	1004f052 <aci_gap_set_scan_configuration>
100432c4:	0003      	movs	r3, r0
100432c6:	7023      	strb	r3, [r4, #0]
      if (status != BLE_STATUS_SUCCESS)
100432c8:	197b      	adds	r3, r7, r5
100432ca:	781b      	ldrb	r3, [r3, #0]
100432cc:	2b00      	cmp	r3, #0
100432ce:	d007      	beq.n	100432e0 <APP_BLE_Procedure_Gap_Central+0x80>
        APP_DBG_MSG("aci_gap_set_scan_configuration - fail, result: 0x%02X\n", status);
100432d0:	197b      	adds	r3, r7, r5
100432d2:	781a      	ldrb	r2, [r3, #0]
100432d4:	4b24      	ldr	r3, [pc, #144]	@ (10043368 <APP_BLE_Procedure_Gap_Central+0x108>)
100432d6:	0011      	movs	r1, r2
100432d8:	0018      	movs	r0, r3
100432da:	f028 fa05 	bl	1006b6e8 <iprintf>
100432de:	e003      	b.n	100432e8 <APP_BLE_Procedure_Gap_Central+0x88>
        APP_DBG_MSG("==>> aci_gap_set_scan_configuration - Success\n");
100432e0:	4b22      	ldr	r3, [pc, #136]	@ (1004336c <APP_BLE_Procedure_Gap_Central+0x10c>)
100432e2:	0018      	movs	r0, r3
100432e4:	f028 fa70 	bl	1006b7c8 <puts>
      status = aci_gap_start_procedure (GAP_GENERAL_DISCOVERY_PROC,LE_1M_PHY_BIT,0,0);
100432e8:	250b      	movs	r5, #11
100432ea:	197c      	adds	r4, r7, r5
100432ec:	2300      	movs	r3, #0
100432ee:	2200      	movs	r2, #0
100432f0:	2101      	movs	r1, #1
100432f2:	2001      	movs	r0, #1
100432f4:	f00b ff07 	bl	1004f106 <aci_gap_start_procedure>
100432f8:	0003      	movs	r3, r0
100432fa:	7023      	strb	r3, [r4, #0]
      if (status != BLE_STATUS_SUCCESS)
100432fc:	197b      	adds	r3, r7, r5
100432fe:	781b      	ldrb	r3, [r3, #0]
10043300:	2b00      	cmp	r3, #0
10043302:	d007      	beq.n	10043314 <APP_BLE_Procedure_Gap_Central+0xb4>
        APP_DBG_MSG("aci_gap_start_procedure - fail, result: 0x%02X\n", status);
10043304:	197b      	adds	r3, r7, r5
10043306:	781a      	ldrb	r2, [r3, #0]
10043308:	4b19      	ldr	r3, [pc, #100]	@ (10043370 <APP_BLE_Procedure_Gap_Central+0x110>)
1004330a:	0011      	movs	r1, r2
1004330c:	0018      	movs	r0, r3
1004330e:	f028 f9eb 	bl	1006b6e8 <iprintf>
      break;
10043312:	e025      	b.n	10043360 <APP_BLE_Procedure_Gap_Central+0x100>
        bleAppContext.Device_Connection_Status = (APP_BLE_ConnStatus_t)paramC;
10043314:	68fb      	ldr	r3, [r7, #12]
10043316:	b2da      	uxtb	r2, r3
10043318:	4b16      	ldr	r3, [pc, #88]	@ (10043374 <APP_BLE_Procedure_Gap_Central+0x114>)
1004331a:	739a      	strb	r2, [r3, #14]
        APP_DBG_MSG("==>> aci_gap_start_procedure - Success\n");
1004331c:	4b16      	ldr	r3, [pc, #88]	@ (10043378 <APP_BLE_Procedure_Gap_Central+0x118>)
1004331e:	0018      	movs	r0, r3
10043320:	f028 fa52 	bl	1006b7c8 <puts>
      break;
10043324:	e01c      	b.n	10043360 <APP_BLE_Procedure_Gap_Central+0x100>
      status = aci_gap_terminate_proc(GAP_GENERAL_DISCOVERY_PROC);
10043326:	250b      	movs	r5, #11
10043328:	197c      	adds	r4, r7, r5
1004332a:	2001      	movs	r0, #1
1004332c:	f00b ff0e 	bl	1004f14c <aci_gap_terminate_proc>
10043330:	0003      	movs	r3, r0
10043332:	7023      	strb	r3, [r4, #0]
      if (status != BLE_STATUS_SUCCESS)
10043334:	002a      	movs	r2, r5
10043336:	18bb      	adds	r3, r7, r2
10043338:	781b      	ldrb	r3, [r3, #0]
1004333a:	2b00      	cmp	r3, #0
1004333c:	d007      	beq.n	1004334e <APP_BLE_Procedure_Gap_Central+0xee>
        APP_DBG_MSG("aci_gap_terminate_gap_proc - fail, result: 0x%02X\n",status);
1004333e:	18bb      	adds	r3, r7, r2
10043340:	781a      	ldrb	r2, [r3, #0]
10043342:	4b0e      	ldr	r3, [pc, #56]	@ (1004337c <APP_BLE_Procedure_Gap_Central+0x11c>)
10043344:	0011      	movs	r1, r2
10043346:	0018      	movs	r0, r3
10043348:	f028 f9ce 	bl	1006b6e8 <iprintf>
      break;
1004334c:	e007      	b.n	1004335e <APP_BLE_Procedure_Gap_Central+0xfe>
        bleAppContext.Device_Connection_Status = (APP_BLE_ConnStatus_t)paramC;
1004334e:	68fb      	ldr	r3, [r7, #12]
10043350:	b2da      	uxtb	r2, r3
10043352:	4b08      	ldr	r3, [pc, #32]	@ (10043374 <APP_BLE_Procedure_Gap_Central+0x114>)
10043354:	739a      	strb	r2, [r3, #14]
        APP_DBG_MSG("==>> aci_gap_terminate_gap_proc - Success\n");
10043356:	4b0a      	ldr	r3, [pc, #40]	@ (10043380 <APP_BLE_Procedure_Gap_Central+0x120>)
10043358:	0018      	movs	r0, r3
1004335a:	f028 fa35 	bl	1006b7c8 <puts>
      break;
1004335e:	46c0      	nop			@ (mov r8, r8)
  }
  return;
10043360:	46c0      	nop			@ (mov r8, r8)
}
10043362:	46bd      	mov	sp, r7
10043364:	b006      	add	sp, #24
10043366:	bdb0      	pop	{r4, r5, r7, pc}
10043368:	1006de0c 	.word	0x1006de0c
1004336c:	1006de44 	.word	0x1006de44
10043370:	1006de74 	.word	0x1006de74
10043374:	200002d8 	.word	0x200002d8
10043378:	1006dea4 	.word	0x1006dea4
1004337c:	1006decc 	.word	0x1006decc
10043380:	1006df00 	.word	0x1006df00

10043384 <gap_cmd_resp_release>:

static void gap_cmd_resp_release(void)
{
10043384:	b580      	push	{r7, lr}
10043386:	af00      	add	r7, sp, #0
  UTIL_SEQ_SetEvt(1 << CFG_IDLEEVT_PROC_GAP_COMPLETE);
10043388:	2001      	movs	r0, #1
1004338a:	f00c f9bd 	bl	1004f708 <UTIL_SEQ_SetEvt>
  return;
1004338e:	46c0      	nop			@ (mov r8, r8)
}
10043390:	46bd      	mov	sp, r7
10043392:	bd80      	pop	{r7, pc}

10043394 <analyse_adv_report>:

/* USER CODE BEGIN FD_LOCAL_FUNCTION */

static uint8_t analyse_adv_report(uint8_t adv_data_size, uint8_t *p_adv_data,
                                  uint8_t address_type, uint8_t *p_address)
{
10043394:	b5f0      	push	{r4, r5, r6, r7, lr}
10043396:	b08b      	sub	sp, #44	@ 0x2c
10043398:	af04      	add	r7, sp, #16
1004339a:	60b9      	str	r1, [r7, #8]
1004339c:	0011      	movs	r1, r2
1004339e:	607b      	str	r3, [r7, #4]
100433a0:	230f      	movs	r3, #15
100433a2:	18fb      	adds	r3, r7, r3
100433a4:	1c02      	adds	r2, r0, #0
100433a6:	701a      	strb	r2, [r3, #0]
100433a8:	230e      	movs	r3, #14
100433aa:	18fb      	adds	r3, r7, r3
100433ac:	1c0a      	adds	r2, r1, #0
100433ae:	701a      	strb	r2, [r3, #0]
  uint8_t found_status = 0;
100433b0:	2317      	movs	r3, #23
100433b2:	18fb      	adds	r3, r7, r3
100433b4:	2200      	movs	r2, #0
100433b6:	701a      	strb	r2, [r3, #0]
  uint16_t i = 0;
100433b8:	2314      	movs	r3, #20
100433ba:	18fb      	adds	r3, r7, r3
100433bc:	2200      	movs	r2, #0
100433be:	801a      	strh	r2, [r3, #0]
  uint8_t ad_length, ad_type;

  while(i < adv_data_size)
100433c0:	e088      	b.n	100434d4 <analyse_adv_report+0x140>
  {
    ad_length = p_adv_data[i];
100433c2:	2114      	movs	r1, #20
100433c4:	187b      	adds	r3, r7, r1
100433c6:	881b      	ldrh	r3, [r3, #0]
100433c8:	68ba      	ldr	r2, [r7, #8]
100433ca:	18d2      	adds	r2, r2, r3
100433cc:	2313      	movs	r3, #19
100433ce:	18fb      	adds	r3, r7, r3
100433d0:	7812      	ldrb	r2, [r2, #0]
100433d2:	701a      	strb	r2, [r3, #0]
    ad_type = p_adv_data[i + 1];
100433d4:	187b      	adds	r3, r7, r1
100433d6:	881b      	ldrh	r3, [r3, #0]
100433d8:	3301      	adds	r3, #1
100433da:	68ba      	ldr	r2, [r7, #8]
100433dc:	18d2      	adds	r2, r2, r3
100433de:	2112      	movs	r1, #18
100433e0:	187b      	adds	r3, r7, r1
100433e2:	7812      	ldrb	r2, [r2, #0]
100433e4:	701a      	strb	r2, [r3, #0]
    
    switch (ad_type)
100433e6:	187b      	adds	r3, r7, r1
100433e8:	781b      	ldrb	r3, [r3, #0]
100433ea:	2bff      	cmp	r3, #255	@ 0xff
100433ec:	d005      	beq.n	100433fa <analyse_adv_report+0x66>
100433ee:	dc59      	bgt.n	100434a4 <analyse_adv_report+0x110>
100433f0:	2b01      	cmp	r3, #1
100433f2:	d059      	beq.n	100434a8 <analyse_adv_report+0x114>
100433f4:	2b0a      	cmp	r3, #10
100433f6:	d059      	beq.n	100434ac <analyse_adv_report+0x118>
          found_status = 1;
        }
        break;
      }
    default:
      break;
100433f8:	e054      	b.n	100434a4 <analyse_adv_report+0x110>
        if ((ad_length >= 7) && 
100433fa:	2313      	movs	r3, #19
100433fc:	18fb      	adds	r3, r7, r3
100433fe:	781b      	ldrb	r3, [r3, #0]
10043400:	2b06      	cmp	r3, #6
10043402:	d955      	bls.n	100434b0 <analyse_adv_report+0x11c>
            (p_adv_data[i + 2] == 0x30) &&
10043404:	2114      	movs	r1, #20
10043406:	187b      	adds	r3, r7, r1
10043408:	881b      	ldrh	r3, [r3, #0]
1004340a:	3302      	adds	r3, #2
1004340c:	68ba      	ldr	r2, [r7, #8]
1004340e:	18d3      	adds	r3, r2, r3
10043410:	781b      	ldrb	r3, [r3, #0]
        if ((ad_length >= 7) && 
10043412:	2b30      	cmp	r3, #48	@ 0x30
10043414:	d14c      	bne.n	100434b0 <analyse_adv_report+0x11c>
            (p_adv_data[i + 3] == 0x00) &&
10043416:	187b      	adds	r3, r7, r1
10043418:	881b      	ldrh	r3, [r3, #0]
1004341a:	3303      	adds	r3, #3
1004341c:	68ba      	ldr	r2, [r7, #8]
1004341e:	18d3      	adds	r3, r2, r3
10043420:	781b      	ldrb	r3, [r3, #0]
            (p_adv_data[i + 2] == 0x30) &&
10043422:	2b00      	cmp	r3, #0
10043424:	d144      	bne.n	100434b0 <analyse_adv_report+0x11c>
            (p_adv_data[i + 4] == 0x02) && /* blueST v2*/
10043426:	187b      	adds	r3, r7, r1
10043428:	881b      	ldrh	r3, [r3, #0]
1004342a:	3304      	adds	r3, #4
1004342c:	68ba      	ldr	r2, [r7, #8]
1004342e:	18d3      	adds	r3, r2, r3
10043430:	781b      	ldrb	r3, [r3, #0]
            (p_adv_data[i + 3] == 0x00) &&
10043432:	2b02      	cmp	r3, #2
10043434:	d13c      	bne.n	100434b0 <analyse_adv_report+0x11c>
            (p_adv_data[i + 6] == 0x83))
10043436:	187b      	adds	r3, r7, r1
10043438:	881b      	ldrh	r3, [r3, #0]
1004343a:	3306      	adds	r3, #6
1004343c:	68ba      	ldr	r2, [r7, #8]
1004343e:	18d3      	adds	r3, r2, r3
10043440:	781b      	ldrb	r3, [r3, #0]
            (p_adv_data[i + 4] == 0x02) && /* blueST v2*/
10043442:	2b83      	cmp	r3, #131	@ 0x83
10043444:	d134      	bne.n	100434b0 <analyse_adv_report+0x11c>
          bleAppContext.deviceServerBdAddrType = address_type;
10043446:	4b2d      	ldr	r3, [pc, #180]	@ (100434fc <analyse_adv_report+0x168>)
10043448:	220e      	movs	r2, #14
1004344a:	18ba      	adds	r2, r7, r2
1004344c:	7812      	ldrb	r2, [r2, #0]
1004344e:	741a      	strb	r2, [r3, #16]
          memcpy(bleAppContext.a_deviceServerBdAddr, p_address, BD_ADDR_SIZE);
10043450:	4b2a      	ldr	r3, [pc, #168]	@ (100434fc <analyse_adv_report+0x168>)
10043452:	2211      	movs	r2, #17
10043454:	6879      	ldr	r1, [r7, #4]
10043456:	189b      	adds	r3, r3, r2
10043458:	2206      	movs	r2, #6
1004345a:	0018      	movs	r0, r3
1004345c:	f028 fc36 	bl	1006bccc <memcpy>
          bleAppContext.deviceServerFound = 0x01;
10043460:	4b26      	ldr	r3, [pc, #152]	@ (100434fc <analyse_adv_report+0x168>)
10043462:	2201      	movs	r2, #1
10043464:	73da      	strb	r2, [r3, #15]
          APP_DBG_MSG("  P2P server, db addr 0x%02X:%02X:%02X:%02X:%02X:%02X\n",
10043466:	4b25      	ldr	r3, [pc, #148]	@ (100434fc <analyse_adv_report+0x168>)
10043468:	7d9b      	ldrb	r3, [r3, #22]
1004346a:	001c      	movs	r4, r3
1004346c:	4b23      	ldr	r3, [pc, #140]	@ (100434fc <analyse_adv_report+0x168>)
1004346e:	7d5b      	ldrb	r3, [r3, #21]
10043470:	001d      	movs	r5, r3
10043472:	4b22      	ldr	r3, [pc, #136]	@ (100434fc <analyse_adv_report+0x168>)
10043474:	7d1b      	ldrb	r3, [r3, #20]
10043476:	001e      	movs	r6, r3
10043478:	4b20      	ldr	r3, [pc, #128]	@ (100434fc <analyse_adv_report+0x168>)
1004347a:	7cdb      	ldrb	r3, [r3, #19]
1004347c:	001a      	movs	r2, r3
1004347e:	4b1f      	ldr	r3, [pc, #124]	@ (100434fc <analyse_adv_report+0x168>)
10043480:	7c9b      	ldrb	r3, [r3, #18]
10043482:	0019      	movs	r1, r3
10043484:	4b1d      	ldr	r3, [pc, #116]	@ (100434fc <analyse_adv_report+0x168>)
10043486:	7c5b      	ldrb	r3, [r3, #17]
10043488:	481d      	ldr	r0, [pc, #116]	@ (10043500 <analyse_adv_report+0x16c>)
1004348a:	9302      	str	r3, [sp, #8]
1004348c:	9101      	str	r1, [sp, #4]
1004348e:	9200      	str	r2, [sp, #0]
10043490:	0033      	movs	r3, r6
10043492:	002a      	movs	r2, r5
10043494:	0021      	movs	r1, r4
10043496:	f028 f927 	bl	1006b6e8 <iprintf>
          found_status = 1;
1004349a:	2317      	movs	r3, #23
1004349c:	18fb      	adds	r3, r7, r3
1004349e:	2201      	movs	r2, #1
100434a0:	701a      	strb	r2, [r3, #0]
        break;
100434a2:	e005      	b.n	100434b0 <analyse_adv_report+0x11c>
      break;
100434a4:	46c0      	nop			@ (mov r8, r8)
100434a6:	e004      	b.n	100434b2 <analyse_adv_report+0x11e>
      break;
100434a8:	46c0      	nop			@ (mov r8, r8)
100434aa:	e002      	b.n	100434b2 <analyse_adv_report+0x11e>
      break;
100434ac:	46c0      	nop			@ (mov r8, r8)
100434ae:	e000      	b.n	100434b2 <analyse_adv_report+0x11e>
        break;
100434b0:	46c0      	nop			@ (mov r8, r8)
    }/* end of switch*/
    
    i += ad_length + 1; /* increment the iterator to go on next element*/
100434b2:	2313      	movs	r3, #19
100434b4:	18fb      	adds	r3, r7, r3
100434b6:	781b      	ldrb	r3, [r3, #0]
100434b8:	b29a      	uxth	r2, r3
100434ba:	2114      	movs	r1, #20
100434bc:	187b      	adds	r3, r7, r1
100434be:	881b      	ldrh	r3, [r3, #0]
100434c0:	18d3      	adds	r3, r2, r3
100434c2:	b29a      	uxth	r2, r3
100434c4:	187b      	adds	r3, r7, r1
100434c6:	3201      	adds	r2, #1
100434c8:	801a      	strh	r2, [r3, #0]
    
    if (found_status != 0)
100434ca:	2317      	movs	r3, #23
100434cc:	18fb      	adds	r3, r7, r3
100434ce:	781b      	ldrb	r3, [r3, #0]
100434d0:	2b00      	cmp	r3, #0
100434d2:	d10a      	bne.n	100434ea <analyse_adv_report+0x156>
  while(i < adv_data_size)
100434d4:	230f      	movs	r3, #15
100434d6:	18fb      	adds	r3, r7, r3
100434d8:	781b      	ldrb	r3, [r3, #0]
100434da:	b29b      	uxth	r3, r3
100434dc:	2214      	movs	r2, #20
100434de:	18ba      	adds	r2, r7, r2
100434e0:	8812      	ldrh	r2, [r2, #0]
100434e2:	429a      	cmp	r2, r3
100434e4:	d200      	bcs.n	100434e8 <analyse_adv_report+0x154>
100434e6:	e76c      	b.n	100433c2 <analyse_adv_report+0x2e>
100434e8:	e000      	b.n	100434ec <analyse_adv_report+0x158>
    {
      break;
100434ea:	46c0      	nop			@ (mov r8, r8)
    }
  }/* end of while*/

  return found_status;
100434ec:	2317      	movs	r3, #23
100434ee:	18fb      	adds	r3, r7, r3
100434f0:	781b      	ldrb	r3, [r3, #0]
}
100434f2:	0018      	movs	r0, r3
100434f4:	46bd      	mov	sp, r7
100434f6:	b007      	add	sp, #28
100434f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100434fa:	46c0      	nop			@ (mov r8, r8)
100434fc:	200002d8 	.word	0x200002d8
10043500:	1006df2c 	.word	0x1006df2c

10043504 <start_periodic_adv>:

static void start_periodic_adv(void)
{
10043504:	b590      	push	{r4, r7, lr}
10043506:	b08f      	sub	sp, #60	@ 0x3c
10043508:	af0c      	add	r7, sp, #48	@ 0x30
  tBleStatus status;
  Advertising_Set_Parameters_t advertising_set_parameters;
  
  status = aci_gap_set_advertising_configuration(0, 
1004350a:	1dfc      	adds	r4, r7, #7
1004350c:	23c8      	movs	r3, #200	@ 0xc8
1004350e:	00da      	lsls	r2, r3, #3
10043510:	2300      	movs	r3, #0
10043512:	930a      	str	r3, [sp, #40]	@ 0x28
10043514:	2300      	movs	r3, #0
10043516:	9309      	str	r3, [sp, #36]	@ 0x24
10043518:	2301      	movs	r3, #1
1004351a:	9308      	str	r3, [sp, #32]
1004351c:	2300      	movs	r3, #0
1004351e:	9307      	str	r3, [sp, #28]
10043520:	2301      	movs	r3, #1
10043522:	9306      	str	r3, [sp, #24]
10043524:	2300      	movs	r3, #0
10043526:	9305      	str	r3, [sp, #20]
10043528:	2300      	movs	r3, #0
1004352a:	9304      	str	r3, [sp, #16]
1004352c:	2300      	movs	r3, #0
1004352e:	9303      	str	r3, [sp, #12]
10043530:	2300      	movs	r3, #0
10043532:	9302      	str	r3, [sp, #8]
10043534:	2307      	movs	r3, #7
10043536:	9301      	str	r3, [sp, #4]
10043538:	23c8      	movs	r3, #200	@ 0xc8
1004353a:	00db      	lsls	r3, r3, #3
1004353c:	9300      	str	r3, [sp, #0]
1004353e:	0013      	movs	r3, r2
10043540:	2200      	movs	r2, #0
10043542:	2100      	movs	r1, #0
10043544:	2000      	movs	r0, #0
10043546:	f00c fa69 	bl	1004fa1c <aci_gap_set_advertising_configuration>
1004354a:	0003      	movs	r3, r0
1004354c:	7023      	strb	r3, [r4, #0]
                                                 HCI_PHY_LE_1M, /* Primary advertising PHY */
                                                 0, /* 0 skips */
                                                 HCI_PHY_LE_1M, /* Secondary advertising PHY. Not used with legacy advertising. */
                                                 0, /* SID */
                                                 0 /* No scan request notifications */);
  if (status != BLE_STATUS_SUCCESS)
1004354e:	1dfb      	adds	r3, r7, #7
10043550:	781b      	ldrb	r3, [r3, #0]
10043552:	2b00      	cmp	r3, #0
10043554:	d007      	beq.n	10043566 <start_periodic_adv+0x62>
  {
    APP_DBG_MSG("==>> aci_gap_set_advertising_configuration - fail, result: 0x%02X\n", status);
10043556:	1dfb      	adds	r3, r7, #7
10043558:	781a      	ldrb	r2, [r3, #0]
1004355a:	4b40      	ldr	r3, [pc, #256]	@ (1004365c <start_periodic_adv+0x158>)
1004355c:	0011      	movs	r1, r2
1004355e:	0018      	movs	r0, r3
10043560:	f028 f8c2 	bl	1006b6e8 <iprintf>
10043564:	e003      	b.n	1004356e <start_periodic_adv+0x6a>
  }
  else
  {
    APP_DBG_MSG("==>> Success: aci_gap_set_advertising_configuration\n");
10043566:	4b3e      	ldr	r3, [pc, #248]	@ (10043660 <start_periodic_adv+0x15c>)
10043568:	0018      	movs	r0, r3
1004356a:	f028 f92d 	bl	1006b7c8 <puts>
  }
  
  status = hci_le_set_periodic_advertising_parameters_v2(0,
1004356e:	1dfc      	adds	r4, r7, #7
10043570:	2380      	movs	r3, #128	@ 0x80
10043572:	005a      	lsls	r2, r3, #1
10043574:	2380      	movs	r3, #128	@ 0x80
10043576:	0059      	lsls	r1, r3, #1
10043578:	2308      	movs	r3, #8
1004357a:	9304      	str	r3, [sp, #16]
1004357c:	2304      	movs	r3, #4
1004357e:	9303      	str	r3, [sp, #12]
10043580:	2302      	movs	r3, #2
10043582:	9302      	str	r3, [sp, #8]
10043584:	2318      	movs	r3, #24
10043586:	9301      	str	r3, [sp, #4]
10043588:	2304      	movs	r3, #4
1004358a:	9300      	str	r3, [sp, #0]
1004358c:	2300      	movs	r3, #0
1004358e:	2000      	movs	r0, #0
10043590:	f00b ff32 	bl	1004f3f8 <hci_le_set_periodic_advertising_parameters_v2>
10043594:	0003      	movs	r3, r0
10043596:	7023      	strb	r3, [r4, #0]
                                                         PAWR_NUM_SUBEVENTS,
                                                         (PAWR_SUBEVENT_INTERVAL_MS*100)/125,
                                                         (PAWR_RESPONSE_SLOT_DELAY_MS*100)/125,
                                                         PAWR_RESPONSE_SLOT_SPACING_US/125,
                                                         PAWR_NUM_RESPONSE_SLOTS);
  if (status != BLE_STATUS_SUCCESS)
10043598:	1dfb      	adds	r3, r7, #7
1004359a:	781b      	ldrb	r3, [r3, #0]
1004359c:	2b00      	cmp	r3, #0
1004359e:	d007      	beq.n	100435b0 <start_periodic_adv+0xac>
  {
    APP_DBG_MSG("==>> hci_le_set_periodic_advertising_parameters_v2 - fail, result: 0x%02X\n", status);
100435a0:	1dfb      	adds	r3, r7, #7
100435a2:	781a      	ldrb	r2, [r3, #0]
100435a4:	4b2f      	ldr	r3, [pc, #188]	@ (10043664 <start_periodic_adv+0x160>)
100435a6:	0011      	movs	r1, r2
100435a8:	0018      	movs	r0, r3
100435aa:	f028 f89d 	bl	1006b6e8 <iprintf>
100435ae:	e003      	b.n	100435b8 <start_periodic_adv+0xb4>
  }
  else
  {
    APP_DBG_MSG("==>> Success: hci_le_set_periodic_advertising_parameters_v2\n");
100435b0:	4b2d      	ldr	r3, [pc, #180]	@ (10043668 <start_periodic_adv+0x164>)
100435b2:	0018      	movs	r0, r3
100435b4:	f028 f908 	bl	1006b7c8 <puts>
  }
  
  status = hci_le_set_periodic_advertising_enable(HCI_ENABLE, 0);
100435b8:	1dfc      	adds	r4, r7, #7
100435ba:	2100      	movs	r1, #0
100435bc:	2001      	movs	r0, #1
100435be:	f00b ff05 	bl	1004f3cc <hci_le_set_periodic_advertising_enable>
100435c2:	0003      	movs	r3, r0
100435c4:	7023      	strb	r3, [r4, #0]
  if (status != BLE_STATUS_SUCCESS)
100435c6:	1dfb      	adds	r3, r7, #7
100435c8:	781b      	ldrb	r3, [r3, #0]
100435ca:	2b00      	cmp	r3, #0
100435cc:	d007      	beq.n	100435de <start_periodic_adv+0xda>
  {
    APP_DBG_MSG("==>> hci_le_set_periodic_advertising_enable - fail, result: 0x%02X\n", status);
100435ce:	1dfb      	adds	r3, r7, #7
100435d0:	781a      	ldrb	r2, [r3, #0]
100435d2:	4b26      	ldr	r3, [pc, #152]	@ (1004366c <start_periodic_adv+0x168>)
100435d4:	0011      	movs	r1, r2
100435d6:	0018      	movs	r0, r3
100435d8:	f028 f886 	bl	1006b6e8 <iprintf>
100435dc:	e003      	b.n	100435e6 <start_periodic_adv+0xe2>
  }
  else
  {
    APP_DBG_MSG("==>> Success: hci_le_set_periodic_advertising_enable\n");
100435de:	4b24      	ldr	r3, [pc, #144]	@ (10043670 <start_periodic_adv+0x16c>)
100435e0:	0018      	movs	r0, r3
100435e2:	f028 f8f1 	bl	1006b7c8 <puts>
  }
  
  advertising_set_parameters.Advertising_Handle = 0;
100435e6:	003b      	movs	r3, r7
100435e8:	2200      	movs	r2, #0
100435ea:	701a      	strb	r2, [r3, #0]
  advertising_set_parameters.Duration = 0;
100435ec:	003b      	movs	r3, r7
100435ee:	2200      	movs	r2, #0
100435f0:	805a      	strh	r2, [r3, #2]
  advertising_set_parameters.Max_Extended_Advertising_Events = 0;
100435f2:	003b      	movs	r3, r7
100435f4:	2200      	movs	r2, #0
100435f6:	711a      	strb	r2, [r3, #4]
  
  status = hci_le_set_extended_advertising_enable(HCI_ENABLE, 1, &advertising_set_parameters);
100435f8:	1dfc      	adds	r4, r7, #7
100435fa:	003b      	movs	r3, r7
100435fc:	001a      	movs	r2, r3
100435fe:	2101      	movs	r1, #1
10043600:	2001      	movs	r0, #1
10043602:	f00b feaf 	bl	1004f364 <hci_le_set_extended_advertising_enable>
10043606:	0003      	movs	r3, r0
10043608:	7023      	strb	r3, [r4, #0]
  if (status != BLE_STATUS_SUCCESS)
1004360a:	1dfb      	adds	r3, r7, #7
1004360c:	781b      	ldrb	r3, [r3, #0]
1004360e:	2b00      	cmp	r3, #0
10043610:	d007      	beq.n	10043622 <start_periodic_adv+0x11e>
  {
    APP_DBG_MSG("==>> hci_le_set_extended_advertising_enable - fail, result: 0x%02X\n", status);
10043612:	1dfb      	adds	r3, r7, #7
10043614:	781a      	ldrb	r2, [r3, #0]
10043616:	4b17      	ldr	r3, [pc, #92]	@ (10043674 <start_periodic_adv+0x170>)
10043618:	0011      	movs	r1, r2
1004361a:	0018      	movs	r0, r3
1004361c:	f028 f864 	bl	1006b6e8 <iprintf>
10043620:	e003      	b.n	1004362a <start_periodic_adv+0x126>
  }
  else
  {
    APP_DBG_MSG("==>> Success: hci_le_set_extended_advertising_enable\n");
10043622:	4b15      	ldr	r3, [pc, #84]	@ (10043678 <start_periodic_adv+0x174>)
10043624:	0018      	movs	r0, r3
10043626:	f028 f8cf 	bl	1006b7c8 <puts>
  }
  
  status = hci_le_set_extended_advertising_enable(HCI_DISABLE, 1, &advertising_set_parameters); 
1004362a:	1dfc      	adds	r4, r7, #7
1004362c:	003b      	movs	r3, r7
1004362e:	001a      	movs	r2, r3
10043630:	2101      	movs	r1, #1
10043632:	2000      	movs	r0, #0
10043634:	f00b fe96 	bl	1004f364 <hci_le_set_extended_advertising_enable>
10043638:	0003      	movs	r3, r0
1004363a:	7023      	strb	r3, [r4, #0]
  
  if (status != BLE_STATUS_SUCCESS)
1004363c:	1dfb      	adds	r3, r7, #7
1004363e:	781b      	ldrb	r3, [r3, #0]
10043640:	2b00      	cmp	r3, #0
10043642:	d006      	beq.n	10043652 <start_periodic_adv+0x14e>
  {
    APP_DBG_MSG("==>> hci_le_set_extended_advertising_enable - fail, result: 0x%02X\n", status);
10043644:	1dfb      	adds	r3, r7, #7
10043646:	781a      	ldrb	r2, [r3, #0]
10043648:	4b0a      	ldr	r3, [pc, #40]	@ (10043674 <start_periodic_adv+0x170>)
1004364a:	0011      	movs	r1, r2
1004364c:	0018      	movs	r0, r3
1004364e:	f028 f84b 	bl	1006b6e8 <iprintf>
  }
}
10043652:	46c0      	nop			@ (mov r8, r8)
10043654:	46bd      	mov	sp, r7
10043656:	b003      	add	sp, #12
10043658:	bd90      	pop	{r4, r7, pc}
1004365a:	46c0      	nop			@ (mov r8, r8)
1004365c:	1006df64 	.word	0x1006df64
10043660:	1006dfa8 	.word	0x1006dfa8
10043664:	1006dfdc 	.word	0x1006dfdc
10043668:	1006e028 	.word	0x1006e028
1004366c:	1006e064 	.word	0x1006e064
10043670:	1006e0a8 	.word	0x1006e0a8
10043674:	1006e0e0 	.word	0x1006e0e0
10043678:	1006e124 	.word	0x1006e124

1004367c <start_auto_connection>:

static void start_auto_connection(void)
{
1004367c:	b590      	push	{r4, r7, lr}
1004367e:	b087      	sub	sp, #28
10043680:	af04      	add	r7, sp, #16
  tBleStatus status;
  
  status = aci_gap_add_devices_to_filter_accept_and_resolving_list(1, 1, sizeof(esl_devices)/sizeof(List_Entry_t), esl_devices);
10043682:	1dfc      	adds	r4, r7, #7
10043684:	4b3d      	ldr	r3, [pc, #244]	@ (1004377c <start_auto_connection+0x100>)
10043686:	2209      	movs	r2, #9
10043688:	2101      	movs	r1, #1
1004368a:	2001      	movs	r0, #1
1004368c:	f00c f982 	bl	1004f994 <aci_gap_add_devices_to_filter_accept_and_resolving_list>
10043690:	0003      	movs	r3, r0
10043692:	7023      	strb	r3, [r4, #0]
  if (status != BLE_STATUS_SUCCESS)
10043694:	1dfb      	adds	r3, r7, #7
10043696:	781b      	ldrb	r3, [r3, #0]
10043698:	2b00      	cmp	r3, #0
1004369a:	d009      	beq.n	100436b0 <start_auto_connection+0x34>
  {
    APP_DBG_MSG("aci_gap_add_devices_to_filter_accept_and_resolving_list - fail, result: 0x%02X\n", status);
1004369c:	1dfb      	adds	r3, r7, #7
1004369e:	781a      	ldrb	r2, [r3, #0]
100436a0:	4b37      	ldr	r3, [pc, #220]	@ (10043780 <start_auto_connection+0x104>)
100436a2:	0011      	movs	r1, r2
100436a4:	0018      	movs	r0, r3
100436a6:	f028 f81f 	bl	1006b6e8 <iprintf>
    Error_Handler();
100436aa:	f7fe fc74 	bl	10041f96 <Error_Handler>
100436ae:	e003      	b.n	100436b8 <start_auto_connection+0x3c>
  }
  else
  {
    
    APP_DBG_MSG("==>> aci_gap_add_devices_to_filter_accept_and_resolving_list - Success\n");
100436b0:	4b34      	ldr	r3, [pc, #208]	@ (10043784 <start_auto_connection+0x108>)
100436b2:	0018      	movs	r0, r3
100436b4:	f028 f888 	bl	1006b7c8 <puts>
  }
  
  status = aci_gap_set_scan_configuration(DUPLICATE_FILTER_ENABLED, HCI_SCAN_FILTER_BASIC_FILTERED, LE_1M_PHY_BIT, HCI_SCAN_TYPE_PASSIVE, (SCAN_INTERVAL_MS*1000)/625, (SCAN_WINDOW_MS*1000)/625);
100436b8:	1dfc      	adds	r4, r7, #7
100436ba:	23a0      	movs	r3, #160	@ 0xa0
100436bc:	9301      	str	r3, [sp, #4]
100436be:	23a0      	movs	r3, #160	@ 0xa0
100436c0:	9300      	str	r3, [sp, #0]
100436c2:	2300      	movs	r3, #0
100436c4:	2201      	movs	r2, #1
100436c6:	2101      	movs	r1, #1
100436c8:	2001      	movs	r0, #1
100436ca:	f00b fcc2 	bl	1004f052 <aci_gap_set_scan_configuration>
100436ce:	0003      	movs	r3, r0
100436d0:	7023      	strb	r3, [r4, #0]
  if (status != BLE_STATUS_SUCCESS)
100436d2:	1dfb      	adds	r3, r7, #7
100436d4:	781b      	ldrb	r3, [r3, #0]
100436d6:	2b00      	cmp	r3, #0
100436d8:	d009      	beq.n	100436ee <start_auto_connection+0x72>
  {
    APP_DBG_MSG("aci_gap_set_scan_configuration - fail, result: 0x%02X\n", status);
100436da:	1dfb      	adds	r3, r7, #7
100436dc:	781a      	ldrb	r2, [r3, #0]
100436de:	4b2a      	ldr	r3, [pc, #168]	@ (10043788 <start_auto_connection+0x10c>)
100436e0:	0011      	movs	r1, r2
100436e2:	0018      	movs	r0, r3
100436e4:	f028 f800 	bl	1006b6e8 <iprintf>
    Error_Handler();
100436e8:	f7fe fc55 	bl	10041f96 <Error_Handler>
100436ec:	e003      	b.n	100436f6 <start_auto_connection+0x7a>
  }
  else
  {
    APP_DBG_MSG("==>> aci_gap_set_scan_configuration - Success\n");
100436ee:	4b27      	ldr	r3, [pc, #156]	@ (1004378c <start_auto_connection+0x110>)
100436f0:	0018      	movs	r0, r3
100436f2:	f028 f869 	bl	1006b7c8 <puts>
  }
  
  status = aci_gap_set_connection_configuration(LE_1M_PHY_BIT,
100436f6:	1dfc      	adds	r4, r7, #7
100436f8:	2302      	movs	r3, #2
100436fa:	9302      	str	r3, [sp, #8]
100436fc:	2302      	movs	r3, #2
100436fe:	9301      	str	r3, [sp, #4]
10043700:	2332      	movs	r3, #50	@ 0x32
10043702:	9300      	str	r3, [sp, #0]
10043704:	2300      	movs	r3, #0
10043706:	2228      	movs	r2, #40	@ 0x28
10043708:	2128      	movs	r1, #40	@ 0x28
1004370a:	2001      	movs	r0, #1
1004370c:	f00b fccc 	bl	1004f0a8 <aci_gap_set_connection_configuration>
10043710:	0003      	movs	r3, r0
10043712:	7023      	strb	r3, [r4, #0]
                                                (CONNECTION_INTERVAL_MS*100)/125, (CONNECTION_INTERVAL_MS*100)/125,
                                                0u,
                                                SUPERVISION_TIMEOUT_MS/10,
                                                2, 2);  
  if (status == BLE_STATUS_SUCCESS)
10043714:	1dfb      	adds	r3, r7, #7
10043716:	781b      	ldrb	r3, [r3, #0]
10043718:	2b00      	cmp	r3, #0
1004371a:	d107      	bne.n	1004372c <start_auto_connection+0xb0>
  {
    APP_DBG_MSG("==>> aci_gap_set_connection_configuration Success , result: 0x%02x\n", status);
1004371c:	1dfb      	adds	r3, r7, #7
1004371e:	781a      	ldrb	r2, [r3, #0]
10043720:	4b1b      	ldr	r3, [pc, #108]	@ (10043790 <start_auto_connection+0x114>)
10043722:	0011      	movs	r1, r2
10043724:	0018      	movs	r0, r3
10043726:	f027 ffdf 	bl	1006b6e8 <iprintf>
1004372a:	e008      	b.n	1004373e <start_auto_connection+0xc2>
  }
  else
  {
    APP_DBG_MSG("==>> aci_gap_set_connection_configuration Failed , result: 0x%02x\n", status);
1004372c:	1dfb      	adds	r3, r7, #7
1004372e:	781a      	ldrb	r2, [r3, #0]
10043730:	4b18      	ldr	r3, [pc, #96]	@ (10043794 <start_auto_connection+0x118>)
10043732:	0011      	movs	r1, r2
10043734:	0018      	movs	r0, r3
10043736:	f027 ffd7 	bl	1006b6e8 <iprintf>
    Error_Handler();
1004373a:	f7fe fc2c 	bl	10041f96 <Error_Handler>
  } 
  
  status = aci_gap_start_procedure(GAP_AUTO_CONNECTION_ESTABLISHMENT_PROC, LE_1M_PHY_BIT, 0, 0);
1004373e:	1dfc      	adds	r4, r7, #7
10043740:	2300      	movs	r3, #0
10043742:	2200      	movs	r2, #0
10043744:	2101      	movs	r1, #1
10043746:	2002      	movs	r0, #2
10043748:	f00b fcdd 	bl	1004f106 <aci_gap_start_procedure>
1004374c:	0003      	movs	r3, r0
1004374e:	7023      	strb	r3, [r4, #0]
  if (status != BLE_STATUS_SUCCESS)
10043750:	1dfb      	adds	r3, r7, #7
10043752:	781b      	ldrb	r3, [r3, #0]
10043754:	2b00      	cmp	r3, #0
10043756:	d009      	beq.n	1004376c <start_auto_connection+0xf0>
  {
    APP_DBG_MSG("aci_gap_start_procedure - fail, result: 0x%02X\n", status);
10043758:	1dfb      	adds	r3, r7, #7
1004375a:	781a      	ldrb	r2, [r3, #0]
1004375c:	4b0e      	ldr	r3, [pc, #56]	@ (10043798 <start_auto_connection+0x11c>)
1004375e:	0011      	movs	r1, r2
10043760:	0018      	movs	r0, r3
10043762:	f027 ffc1 	bl	1006b6e8 <iprintf>
    Error_Handler();
10043766:	f7fe fc16 	bl	10041f96 <Error_Handler>
  }
  else
  {
    APP_DBG_MSG("==>> aci_gap_start_procedure (auto connection) - Success\n");
  }  
}
1004376a:	e003      	b.n	10043774 <start_auto_connection+0xf8>
    APP_DBG_MSG("==>> aci_gap_start_procedure (auto connection) - Success\n");
1004376c:	4b0b      	ldr	r3, [pc, #44]	@ (1004379c <start_auto_connection+0x120>)
1004376e:	0018      	movs	r0, r3
10043770:	f028 f82a 	bl	1006b7c8 <puts>
}
10043774:	46c0      	nop			@ (mov r8, r8)
10043776:	46bd      	mov	sp, r7
10043778:	b003      	add	sp, #12
1004377a:	bd90      	pop	{r4, r7, pc}
1004377c:	20000a38 	.word	0x20000a38
10043780:	1006e15c 	.word	0x1006e15c
10043784:	1006e1ac 	.word	0x1006e1ac
10043788:	1006de0c 	.word	0x1006de0c
1004378c:	1006de44 	.word	0x1006de44
10043790:	1006e1f4 	.word	0x1006e1f4
10043794:	1006e238 	.word	0x1006e238
10043798:	1006de74 	.word	0x1006de74
1004379c:	1006e27c 	.word	0x1006e27c

100437a0 <periodic_sync_info_transfer>:

/* Task for CFG_TASK_START_INFO_TRANSFER */
void periodic_sync_info_transfer(void)
{
100437a0:	b590      	push	{r4, r7, lr}
100437a2:	b083      	sub	sp, #12
100437a4:	af00      	add	r7, sp, #0
  tBleStatus status;
  
  UTIL_SEQ_ClrEvt(1 << CFG_IDLEEVT_READ_REMOTE_FEATURES_COMPLETE);
100437a6:	2008      	movs	r0, #8
100437a8:	f00b ffcc 	bl	1004f744 <UTIL_SEQ_ClrEvt>
  
  status = hci_le_read_remote_features(bleAppContext.BleApplicationContext_legacy.connectionHandle);
100437ac:	4b1b      	ldr	r3, [pc, #108]	@ (1004381c <periodic_sync_info_transfer+0x7c>)
100437ae:	899b      	ldrh	r3, [r3, #12]
100437b0:	1dfc      	adds	r4, r7, #7
100437b2:	0018      	movs	r0, r3
100437b4:	f00b fdc6 	bl	1004f344 <hci_le_read_remote_features>
100437b8:	0003      	movs	r3, r0
100437ba:	7023      	strb	r3, [r4, #0]
  if (status != BLE_STATUS_SUCCESS)
100437bc:	1dfb      	adds	r3, r7, #7
100437be:	781b      	ldrb	r3, [r3, #0]
100437c0:	2b00      	cmp	r3, #0
100437c2:	d007      	beq.n	100437d4 <periodic_sync_info_transfer+0x34>
  {
    APP_DBG_MSG("hci_le_read_remote_features - fail, result: 0x%02X\n", status);
100437c4:	1dfb      	adds	r3, r7, #7
100437c6:	781a      	ldrb	r2, [r3, #0]
100437c8:	4b15      	ldr	r3, [pc, #84]	@ (10043820 <periodic_sync_info_transfer+0x80>)
100437ca:	0011      	movs	r1, r2
100437cc:	0018      	movs	r0, r3
100437ce:	f027 ff8b 	bl	1006b6e8 <iprintf>
    return;
100437d2:	e020      	b.n	10043816 <periodic_sync_info_transfer+0x76>
  }
  else
  {
    APP_DBG_MSG("==>> hci_le_read_remote_features - Success\n");
100437d4:	4b13      	ldr	r3, [pc, #76]	@ (10043824 <periodic_sync_info_transfer+0x84>)
100437d6:	0018      	movs	r0, r3
100437d8:	f027 fff6 	bl	1006b7c8 <puts>
    UTIL_SEQ_WaitEvt(1 << CFG_IDLEEVT_READ_REMOTE_FEATURES_COMPLETE);
100437dc:	2008      	movs	r0, #8
100437de:	f00b ffcf 	bl	1004f780 <UTIL_SEQ_WaitEvt>
  }
  
  status = hci_le_periodic_advertising_set_info_transfer(bleAppContext.BleApplicationContext_legacy.connectionHandle, 0, 0); 
100437e2:	4b0e      	ldr	r3, [pc, #56]	@ (1004381c <periodic_sync_info_transfer+0x7c>)
100437e4:	899b      	ldrh	r3, [r3, #12]
100437e6:	1dfc      	adds	r4, r7, #7
100437e8:	2200      	movs	r2, #0
100437ea:	2100      	movs	r1, #0
100437ec:	0018      	movs	r0, r3
100437ee:	f00b fdd0 	bl	1004f392 <hci_le_periodic_advertising_set_info_transfer>
100437f2:	0003      	movs	r3, r0
100437f4:	7023      	strb	r3, [r4, #0]
  if (status != BLE_STATUS_SUCCESS)
100437f6:	1dfb      	adds	r3, r7, #7
100437f8:	781b      	ldrb	r3, [r3, #0]
100437fa:	2b00      	cmp	r3, #0
100437fc:	d007      	beq.n	1004380e <periodic_sync_info_transfer+0x6e>
  {
    APP_DBG_MSG("hci_le_periodic_advertising_set_info_transfer - fail, result: 0x%02X\n", status);
100437fe:	1dfb      	adds	r3, r7, #7
10043800:	781a      	ldrb	r2, [r3, #0]
10043802:	4b09      	ldr	r3, [pc, #36]	@ (10043828 <periodic_sync_info_transfer+0x88>)
10043804:	0011      	movs	r1, r2
10043806:	0018      	movs	r0, r3
10043808:	f027 ff6e 	bl	1006b6e8 <iprintf>
    return;
1004380c:	e003      	b.n	10043816 <periodic_sync_info_transfer+0x76>
  }
  else
  {
    APP_DBG_MSG("==>> hci_le_periodic_advertising_set_info_transfer - Success\n");
1004380e:	4b07      	ldr	r3, [pc, #28]	@ (1004382c <periodic_sync_info_transfer+0x8c>)
10043810:	0018      	movs	r0, r3
10043812:	f027 ffd9 	bl	1006b7c8 <puts>
  }
}
10043816:	46bd      	mov	sp, r7
10043818:	b003      	add	sp, #12
1004381a:	bd90      	pop	{r4, r7, pc}
1004381c:	200002d8 	.word	0x200002d8
10043820:	1006e2b8 	.word	0x1006e2b8
10043824:	1006e2ec 	.word	0x1006e2ec
10043828:	1006e318 	.word	0x1006e318
1004382c:	1006e360 	.word	0x1006e360

10043830 <ESL_AP_Init>:


uint8_t get_esl_id_from_response(uint8_t subevent, uint8_t response_slot, uint8_t *esl_id_p);

void ESL_AP_Init(void)
{  
10043830:	b580      	push	{r7, lr}
10043832:	b082      	sub	sp, #8
10043834:	af00      	add	r7, sp, #0
  for(int i = 0; i < MAX_GROUPS; i++)
10043836:	2300      	movs	r3, #0
10043838:	607b      	str	r3, [r7, #4]
1004383a:	e00d      	b.n	10043858 <ESL_AP_Init+0x28>
  {
    LST_init_head(&esl_group_info[i].cmd_queue);
1004383c:	687a      	ldr	r2, [r7, #4]
1004383e:	0013      	movs	r3, r2
10043840:	011b      	lsls	r3, r3, #4
10043842:	1a9b      	subs	r3, r3, r2
10043844:	009b      	lsls	r3, r3, #2
10043846:	1a9b      	subs	r3, r3, r2
10043848:	4a07      	ldr	r2, [pc, #28]	@ (10043868 <ESL_AP_Init+0x38>)
1004384a:	189b      	adds	r3, r3, r2
1004384c:	0018      	movs	r0, r3
1004384e:	f005 fb81 	bl	10048f54 <LST_init_head>
  for(int i = 0; i < MAX_GROUPS; i++)
10043852:	687b      	ldr	r3, [r7, #4]
10043854:	3301      	adds	r3, #1
10043856:	607b      	str	r3, [r7, #4]
10043858:	687b      	ldr	r3, [r7, #4]
1004385a:	2b03      	cmp	r3, #3
1004385c:	ddee      	ble.n	1004383c <ESL_AP_Init+0xc>
  }
}
1004385e:	46c0      	nop			@ (mov r8, r8)
10043860:	46c0      	nop			@ (mov r8, r8)
10043862:	46bd      	mov	sp, r7
10043864:	b002      	add	sp, #8
10043866:	bd80      	pop	{r7, pc}
10043868:	200002f0 	.word	0x200002f0

1004386c <ESL_AP_cmd_ping>:

uint8_t ESL_AP_cmd_ping(uint8_t group_id, uint8_t esl_id, resp_cb_t resp_cb)
{
1004386c:	b580      	push	{r7, lr}
1004386e:	b084      	sub	sp, #16
10043870:	af00      	add	r7, sp, #0
10043872:	603a      	str	r2, [r7, #0]
10043874:	1dfb      	adds	r3, r7, #7
10043876:	1c02      	adds	r2, r0, #0
10043878:	701a      	strb	r2, [r3, #0]
1004387a:	1dbb      	adds	r3, r7, #6
1004387c:	1c0a      	adds	r2, r1, #0
1004387e:	701a      	strb	r2, [r3, #0]
  cmd_buff_t * cmd_buff;
  uint8_t cmd_opcode = ESL_CMD_PING;
10043880:	230f      	movs	r3, #15
10043882:	18fb      	adds	r3, r7, r3
10043884:	2200      	movs	r2, #0
10043886:	701a      	strb	r2, [r3, #0]
  uint8_t cmd_length;
  
  if(esl_id == BRC_ESL_ID)
10043888:	1dbb      	adds	r3, r7, #6
1004388a:	781b      	ldrb	r3, [r3, #0]
1004388c:	2bff      	cmp	r3, #255	@ 0xff
1004388e:	d101      	bne.n	10043894 <ESL_AP_cmd_ping+0x28>
    return 1;
10043890:	2301      	movs	r3, #1
10043892:	e041      	b.n	10043918 <ESL_AP_cmd_ping+0xac>
  
  if(group_id >= MAX_GROUPS)
10043894:	1dfb      	adds	r3, r7, #7
10043896:	781b      	ldrb	r3, [r3, #0]
10043898:	2b03      	cmp	r3, #3
1004389a:	d901      	bls.n	100438a0 <ESL_AP_cmd_ping+0x34>
    return 2;
1004389c:	2302      	movs	r3, #2
1004389e:	e03b      	b.n	10043918 <ESL_AP_cmd_ping+0xac>
  
  cmd_length = GET_LENGTH_FROM_OPCODE(cmd_opcode);
100438a0:	230f      	movs	r3, #15
100438a2:	18fb      	adds	r3, r7, r3
100438a4:	781b      	ldrb	r3, [r3, #0]
100438a6:	091b      	lsrs	r3, r3, #4
100438a8:	b2da      	uxtb	r2, r3
100438aa:	210e      	movs	r1, #14
100438ac:	187b      	adds	r3, r7, r1
100438ae:	3202      	adds	r2, #2
100438b0:	701a      	strb	r2, [r3, #0]
  
  cmd_buff = malloc(sizeof(cmd_buff_t)+cmd_length);
100438b2:	187b      	adds	r3, r7, r1
100438b4:	781b      	ldrb	r3, [r3, #0]
100438b6:	3310      	adds	r3, #16
100438b8:	0018      	movs	r0, r3
100438ba:	f027 fd8b 	bl	1006b3d4 <malloc>
100438be:	0003      	movs	r3, r0
100438c0:	60bb      	str	r3, [r7, #8]
  
  if(cmd_buff == NULL)
100438c2:	68bb      	ldr	r3, [r7, #8]
100438c4:	2b00      	cmp	r3, #0
100438c6:	d101      	bne.n	100438cc <ESL_AP_cmd_ping+0x60>
    return 1;
100438c8:	2301      	movs	r3, #1
100438ca:	e025      	b.n	10043918 <ESL_AP_cmd_ping+0xac>
  
  LST_insert_tail(&esl_group_info[group_id].cmd_queue, &cmd_buff->node);
100438cc:	1dfb      	adds	r3, r7, #7
100438ce:	781a      	ldrb	r2, [r3, #0]
100438d0:	0013      	movs	r3, r2
100438d2:	011b      	lsls	r3, r3, #4
100438d4:	1a9b      	subs	r3, r3, r2
100438d6:	009b      	lsls	r3, r3, #2
100438d8:	1a9b      	subs	r3, r3, r2
100438da:	4a11      	ldr	r2, [pc, #68]	@ (10043920 <ESL_AP_cmd_ping+0xb4>)
100438dc:	189b      	adds	r3, r3, r2
100438de:	68ba      	ldr	r2, [r7, #8]
100438e0:	0011      	movs	r1, r2
100438e2:	0018      	movs	r0, r3
100438e4:	f005 fb88 	bl	10048ff8 <LST_insert_tail>
  
  //cmd_buff->sending = false;
  cmd_buff->resp_cb = resp_cb;
100438e8:	68bb      	ldr	r3, [r7, #8]
100438ea:	683a      	ldr	r2, [r7, #0]
100438ec:	60da      	str	r2, [r3, #12]
  
  if(esl_id == BRC_ESL_ID)
100438ee:	1dbb      	adds	r3, r7, #6
100438f0:	781b      	ldrb	r3, [r3, #0]
100438f2:	2bff      	cmp	r3, #255	@ 0xff
100438f4:	d103      	bne.n	100438fe <ESL_AP_cmd_ping+0x92>
  {
    cmd_buff->retransmissions = BRC_RETRANSMISSIONS;
100438f6:	68bb      	ldr	r3, [r7, #8]
100438f8:	2205      	movs	r2, #5
100438fa:	721a      	strb	r2, [r3, #8]
100438fc:	e002      	b.n	10043904 <ESL_AP_cmd_ping+0x98>
  }
  else
  {
    cmd_buff->retransmissions = UNC_RETRANSMISSIONS;
100438fe:	68bb      	ldr	r3, [r7, #8]
10043900:	220a      	movs	r2, #10
10043902:	721a      	strb	r2, [r3, #8]
  }
  
  cmd_buff->cmd[0] = cmd_opcode;
10043904:	68bb      	ldr	r3, [r7, #8]
10043906:	220f      	movs	r2, #15
10043908:	18ba      	adds	r2, r7, r2
1004390a:	7812      	ldrb	r2, [r2, #0]
1004390c:	741a      	strb	r2, [r3, #16]
  cmd_buff->cmd[1] = esl_id;
1004390e:	68bb      	ldr	r3, [r7, #8]
10043910:	1dba      	adds	r2, r7, #6
10043912:	7812      	ldrb	r2, [r2, #0]
10043914:	745a      	strb	r2, [r3, #17]
  
  return 0;  
10043916:	2300      	movs	r3, #0
}
10043918:	0018      	movs	r0, r3
1004391a:	46bd      	mov	sp, r7
1004391c:	b004      	add	sp, #16
1004391e:	bd80      	pop	{r7, pc}
10043920:	200002f0 	.word	0x200002f0

10043924 <prepare_cmd_buff>:

static void * prepare_cmd_buff(uint8_t cmd_opcode, uint8_t group_id, uint8_t esl_id, resp_cb_t resp_cb)
{
10043924:	b590      	push	{r4, r7, lr}
10043926:	b085      	sub	sp, #20
10043928:	af00      	add	r7, sp, #0
1004392a:	0004      	movs	r4, r0
1004392c:	0008      	movs	r0, r1
1004392e:	0011      	movs	r1, r2
10043930:	603b      	str	r3, [r7, #0]
10043932:	1dfb      	adds	r3, r7, #7
10043934:	1c22      	adds	r2, r4, #0
10043936:	701a      	strb	r2, [r3, #0]
10043938:	1dbb      	adds	r3, r7, #6
1004393a:	1c02      	adds	r2, r0, #0
1004393c:	701a      	strb	r2, [r3, #0]
1004393e:	1d7b      	adds	r3, r7, #5
10043940:	1c0a      	adds	r2, r1, #0
10043942:	701a      	strb	r2, [r3, #0]
  uint8_t cmd_length;
  cmd_buff_t * cmd_buff;
  
  if(group_id >= MAX_GROUPS)
10043944:	1dbb      	adds	r3, r7, #6
10043946:	781b      	ldrb	r3, [r3, #0]
10043948:	2b03      	cmp	r3, #3
1004394a:	d901      	bls.n	10043950 <prepare_cmd_buff+0x2c>
    return NULL;
1004394c:	2300      	movs	r3, #0
1004394e:	e039      	b.n	100439c4 <prepare_cmd_buff+0xa0>
  
  cmd_length = GET_LENGTH_FROM_OPCODE(cmd_opcode);
10043950:	1dfb      	adds	r3, r7, #7
10043952:	781b      	ldrb	r3, [r3, #0]
10043954:	091b      	lsrs	r3, r3, #4
10043956:	b2da      	uxtb	r2, r3
10043958:	210f      	movs	r1, #15
1004395a:	187b      	adds	r3, r7, r1
1004395c:	3202      	adds	r2, #2
1004395e:	701a      	strb	r2, [r3, #0]
  
  cmd_buff = malloc(sizeof(cmd_buff_t)+cmd_length);
10043960:	187b      	adds	r3, r7, r1
10043962:	781b      	ldrb	r3, [r3, #0]
10043964:	3310      	adds	r3, #16
10043966:	0018      	movs	r0, r3
10043968:	f027 fd34 	bl	1006b3d4 <malloc>
1004396c:	0003      	movs	r3, r0
1004396e:	60bb      	str	r3, [r7, #8]
  
  if(cmd_buff == NULL)
10043970:	68bb      	ldr	r3, [r7, #8]
10043972:	2b00      	cmp	r3, #0
10043974:	d101      	bne.n	1004397a <prepare_cmd_buff+0x56>
    return NULL;
10043976:	2300      	movs	r3, #0
10043978:	e024      	b.n	100439c4 <prepare_cmd_buff+0xa0>
  
  LST_insert_tail(&esl_group_info[group_id].cmd_queue, &cmd_buff->node);
1004397a:	1dbb      	adds	r3, r7, #6
1004397c:	781a      	ldrb	r2, [r3, #0]
1004397e:	0013      	movs	r3, r2
10043980:	011b      	lsls	r3, r3, #4
10043982:	1a9b      	subs	r3, r3, r2
10043984:	009b      	lsls	r3, r3, #2
10043986:	1a9b      	subs	r3, r3, r2
10043988:	4a10      	ldr	r2, [pc, #64]	@ (100439cc <prepare_cmd_buff+0xa8>)
1004398a:	189b      	adds	r3, r3, r2
1004398c:	68ba      	ldr	r2, [r7, #8]
1004398e:	0011      	movs	r1, r2
10043990:	0018      	movs	r0, r3
10043992:	f005 fb31 	bl	10048ff8 <LST_insert_tail>
  
  cmd_buff->resp_cb = resp_cb;
10043996:	68bb      	ldr	r3, [r7, #8]
10043998:	683a      	ldr	r2, [r7, #0]
1004399a:	60da      	str	r2, [r3, #12]
  
  if(esl_id == BRC_ESL_ID)
1004399c:	1d7b      	adds	r3, r7, #5
1004399e:	781b      	ldrb	r3, [r3, #0]
100439a0:	2bff      	cmp	r3, #255	@ 0xff
100439a2:	d103      	bne.n	100439ac <prepare_cmd_buff+0x88>
  {
    cmd_buff->retransmissions = BRC_RETRANSMISSIONS;
100439a4:	68bb      	ldr	r3, [r7, #8]
100439a6:	2205      	movs	r2, #5
100439a8:	721a      	strb	r2, [r3, #8]
100439aa:	e002      	b.n	100439b2 <prepare_cmd_buff+0x8e>
  }
  else
  {
    cmd_buff->retransmissions = UNC_RETRANSMISSIONS;
100439ac:	68bb      	ldr	r3, [r7, #8]
100439ae:	220a      	movs	r2, #10
100439b0:	721a      	strb	r2, [r3, #8]
  }
  
  cmd_buff->cmd[0] = cmd_opcode;
100439b2:	68bb      	ldr	r3, [r7, #8]
100439b4:	1dfa      	adds	r2, r7, #7
100439b6:	7812      	ldrb	r2, [r2, #0]
100439b8:	741a      	strb	r2, [r3, #16]
  cmd_buff->cmd[1] = esl_id;
100439ba:	68bb      	ldr	r3, [r7, #8]
100439bc:	1d7a      	adds	r2, r7, #5
100439be:	7812      	ldrb	r2, [r2, #0]
100439c0:	745a      	strb	r2, [r3, #17]
  
  return cmd_buff;
100439c2:	68bb      	ldr	r3, [r7, #8]
}
100439c4:	0018      	movs	r0, r3
100439c6:	46bd      	mov	sp, r7
100439c8:	b005      	add	sp, #20
100439ca:	bd90      	pop	{r4, r7, pc}
100439cc:	200002f0 	.word	0x200002f0

100439d0 <ESL_AP_cmd_led_control>:

uint8_t ESL_AP_cmd_led_control(uint8_t group_id, uint8_t esl_id, resp_cb_t resp_cb, uint8_t led_index, uint8_t on_off)
{
100439d0:	b590      	push	{r4, r7, lr}
100439d2:	b085      	sub	sp, #20
100439d4:	af00      	add	r7, sp, #0
100439d6:	0004      	movs	r4, r0
100439d8:	0008      	movs	r0, r1
100439da:	603a      	str	r2, [r7, #0]
100439dc:	0019      	movs	r1, r3
100439de:	1dfb      	adds	r3, r7, #7
100439e0:	1c22      	adds	r2, r4, #0
100439e2:	701a      	strb	r2, [r3, #0]
100439e4:	1dbb      	adds	r3, r7, #6
100439e6:	1c02      	adds	r2, r0, #0
100439e8:	701a      	strb	r2, [r3, #0]
100439ea:	1d7b      	adds	r3, r7, #5
100439ec:	1c0a      	adds	r2, r1, #0
100439ee:	701a      	strb	r2, [r3, #0]
  cmd_buff_t * cmd_buff;
  uint8_t cmd_opcode = ESL_CMD_LED_CONTROL;
100439f0:	200f      	movs	r0, #15
100439f2:	183b      	adds	r3, r7, r0
100439f4:	22b0      	movs	r2, #176	@ 0xb0
100439f6:	701a      	strb	r2, [r3, #0]
  
  cmd_buff = prepare_cmd_buff(cmd_opcode, group_id, esl_id, resp_cb);
100439f8:	683c      	ldr	r4, [r7, #0]
100439fa:	1dbb      	adds	r3, r7, #6
100439fc:	781a      	ldrb	r2, [r3, #0]
100439fe:	1dfb      	adds	r3, r7, #7
10043a00:	7819      	ldrb	r1, [r3, #0]
10043a02:	183b      	adds	r3, r7, r0
10043a04:	7818      	ldrb	r0, [r3, #0]
10043a06:	0023      	movs	r3, r4
10043a08:	f7ff ff8c 	bl	10043924 <prepare_cmd_buff>
10043a0c:	0003      	movs	r3, r0
10043a0e:	60bb      	str	r3, [r7, #8]
  
  if(cmd_buff == NULL)
10043a10:	68bb      	ldr	r3, [r7, #8]
10043a12:	2b00      	cmp	r3, #0
10043a14:	d101      	bne.n	10043a1a <ESL_AP_cmd_led_control+0x4a>
    return 1;
10043a16:	2301      	movs	r3, #1
10043a18:	e031      	b.n	10043a7e <ESL_AP_cmd_led_control+0xae>
  
  cmd_buff->cmd[2] = led_index;
10043a1a:	68bb      	ldr	r3, [r7, #8]
10043a1c:	1d7a      	adds	r2, r7, #5
10043a1e:	7812      	ldrb	r2, [r2, #0]
10043a20:	749a      	strb	r2, [r3, #18]
  cmd_buff->cmd[3] = 0; /* rgb component. Not used.  */  
10043a22:	68bb      	ldr	r3, [r7, #8]
10043a24:	2200      	movs	r2, #0
10043a26:	74da      	strb	r2, [r3, #19]
  memset(cmd_buff->cmd + 4, 0, 7); /* Flashing pattern. Ignored for the moment. */
10043a28:	68bb      	ldr	r3, [r7, #8]
10043a2a:	3310      	adds	r3, #16
10043a2c:	3304      	adds	r3, #4
10043a2e:	2207      	movs	r2, #7
10043a30:	2100      	movs	r1, #0
10043a32:	0018      	movs	r0, r3
10043a34:	f028 f8ac 	bl	1006bb90 <memset>
  if(on_off == 0)
10043a38:	2320      	movs	r3, #32
10043a3a:	18fb      	adds	r3, r7, r3
10043a3c:	781b      	ldrb	r3, [r3, #0]
10043a3e:	2b00      	cmp	r3, #0
10043a40:	d106      	bne.n	10043a50 <ESL_AP_cmd_led_control+0x80>
  {
    /* LED off */
    cmd_buff->cmd[11] = 0;
10043a42:	68bb      	ldr	r3, [r7, #8]
10043a44:	2200      	movs	r2, #0
10043a46:	76da      	strb	r2, [r3, #27]
    cmd_buff->cmd[12] = 0;
10043a48:	68bb      	ldr	r3, [r7, #8]
10043a4a:	2200      	movs	r2, #0
10043a4c:	771a      	strb	r2, [r3, #28]
10043a4e:	e015      	b.n	10043a7c <ESL_AP_cmd_led_control+0xac>
  }
  else if(on_off == 1)
10043a50:	2320      	movs	r3, #32
10043a52:	18fb      	adds	r3, r7, r3
10043a54:	781b      	ldrb	r3, [r3, #0]
10043a56:	2b01      	cmp	r3, #1
10043a58:	d108      	bne.n	10043a6c <ESL_AP_cmd_led_control+0x9c>
  {
    /* LED on */
    HOST_TO_LE_16(&cmd_buff->cmd[11], 0x0001);
10043a5a:	68bb      	ldr	r3, [r7, #8]
10043a5c:	2201      	movs	r2, #1
10043a5e:	76da      	strb	r2, [r3, #27]
10043a60:	68bb      	ldr	r3, [r7, #8]
10043a62:	331b      	adds	r3, #27
10043a64:	3301      	adds	r3, #1
10043a66:	2200      	movs	r2, #0
10043a68:	701a      	strb	r2, [r3, #0]
10043a6a:	e007      	b.n	10043a7c <ESL_AP_cmd_led_control+0xac>
  }
  else
  {
    /* TBR: standard values needs to be used. Now value 2 is used for the sake of simplicity. */
    HOST_TO_LE_16(&cmd_buff->cmd[11], 0x0002);
10043a6c:	68bb      	ldr	r3, [r7, #8]
10043a6e:	2202      	movs	r2, #2
10043a70:	76da      	strb	r2, [r3, #27]
10043a72:	68bb      	ldr	r3, [r7, #8]
10043a74:	331b      	adds	r3, #27
10043a76:	3301      	adds	r3, #1
10043a78:	2200      	movs	r2, #0
10043a7a:	701a      	strb	r2, [r3, #0]
  }
  
  return 0;  
10043a7c:	2300      	movs	r3, #0
}
10043a7e:	0018      	movs	r0, r3
10043a80:	46bd      	mov	sp, r7
10043a82:	b005      	add	sp, #20
10043a84:	bd90      	pop	{r4, r7, pc}

10043a86 <ESL_AP_cmd_txt>:

/* Can send a maximum of 11 characters. */
uint8_t ESL_AP_cmd_txt(uint8_t group_id, uint8_t esl_id, resp_cb_t resp_cb, const char *txt)
{
10043a86:	b5f0      	push	{r4, r5, r6, r7, lr}
10043a88:	b089      	sub	sp, #36	@ 0x24
10043a8a:	af00      	add	r7, sp, #0
10043a8c:	60ba      	str	r2, [r7, #8]
10043a8e:	607b      	str	r3, [r7, #4]
10043a90:	250f      	movs	r5, #15
10043a92:	197b      	adds	r3, r7, r5
10043a94:	1c02      	adds	r2, r0, #0
10043a96:	701a      	strb	r2, [r3, #0]
10043a98:	200e      	movs	r0, #14
10043a9a:	183b      	adds	r3, r7, r0
10043a9c:	1c0a      	adds	r2, r1, #0
10043a9e:	701a      	strb	r2, [r3, #0]
  cmd_buff_t * cmd_buff;
  uint8_t cmd_opcode = ESL_CMD_VS_TXT;
10043aa0:	261f      	movs	r6, #31
10043aa2:	19bb      	adds	r3, r7, r6
10043aa4:	22bf      	movs	r2, #191	@ 0xbf
10043aa6:	701a      	strb	r2, [r3, #0]
  uint8_t cmd_length;
  
  cmd_buff = prepare_cmd_buff(cmd_opcode, group_id, esl_id, resp_cb);
10043aa8:	68bc      	ldr	r4, [r7, #8]
10043aaa:	183b      	adds	r3, r7, r0
10043aac:	781a      	ldrb	r2, [r3, #0]
10043aae:	197b      	adds	r3, r7, r5
10043ab0:	7819      	ldrb	r1, [r3, #0]
10043ab2:	19bb      	adds	r3, r7, r6
10043ab4:	7818      	ldrb	r0, [r3, #0]
10043ab6:	0023      	movs	r3, r4
10043ab8:	f7ff ff34 	bl	10043924 <prepare_cmd_buff>
10043abc:	0003      	movs	r3, r0
10043abe:	61bb      	str	r3, [r7, #24]
  
  if(cmd_buff == NULL)
10043ac0:	69bb      	ldr	r3, [r7, #24]
10043ac2:	2b00      	cmp	r3, #0
10043ac4:	d101      	bne.n	10043aca <ESL_AP_cmd_txt+0x44>
    return 1;
10043ac6:	2301      	movs	r3, #1
10043ac8:	e030      	b.n	10043b2c <ESL_AP_cmd_txt+0xa6>
  
  cmd_length = GET_LENGTH_FROM_OPCODE(cmd_opcode);
10043aca:	231f      	movs	r3, #31
10043acc:	18fb      	adds	r3, r7, r3
10043ace:	781b      	ldrb	r3, [r3, #0]
10043ad0:	091b      	lsrs	r3, r3, #4
10043ad2:	b2da      	uxtb	r2, r3
10043ad4:	2517      	movs	r5, #23
10043ad6:	197b      	adds	r3, r7, r5
10043ad8:	3202      	adds	r2, #2
10043ada:	701a      	strb	r2, [r3, #0]
  
  memset(&cmd_buff->cmd[2], 0, cmd_length-2);
10043adc:	69bb      	ldr	r3, [r7, #24]
10043ade:	3312      	adds	r3, #18
10043ae0:	0018      	movs	r0, r3
10043ae2:	197b      	adds	r3, r7, r5
10043ae4:	781b      	ldrb	r3, [r3, #0]
10043ae6:	3b02      	subs	r3, #2
10043ae8:	001a      	movs	r2, r3
10043aea:	2100      	movs	r1, #0
10043aec:	f028 f850 	bl	1006bb90 <memset>
  memcpy(&cmd_buff->cmd[2], txt, MIN(strlen(txt), cmd_length-2));
10043af0:	69bb      	ldr	r3, [r7, #24]
10043af2:	3312      	adds	r3, #18
10043af4:	001c      	movs	r4, r3
10043af6:	687b      	ldr	r3, [r7, #4]
10043af8:	0018      	movs	r0, r3
10043afa:	f7fc fb8f 	bl	1004021c <strlen>
10043afe:	0002      	movs	r2, r0
10043b00:	197b      	adds	r3, r7, r5
10043b02:	781b      	ldrb	r3, [r3, #0]
10043b04:	3b02      	subs	r3, #2
10043b06:	429a      	cmp	r2, r3
10043b08:	d205      	bcs.n	10043b16 <ESL_AP_cmd_txt+0x90>
10043b0a:	687b      	ldr	r3, [r7, #4]
10043b0c:	0018      	movs	r0, r3
10043b0e:	f7fc fb85 	bl	1004021c <strlen>
10043b12:	0002      	movs	r2, r0
10043b14:	e004      	b.n	10043b20 <ESL_AP_cmd_txt+0x9a>
10043b16:	2317      	movs	r3, #23
10043b18:	18fb      	adds	r3, r7, r3
10043b1a:	781b      	ldrb	r3, [r3, #0]
10043b1c:	3b02      	subs	r3, #2
10043b1e:	001a      	movs	r2, r3
10043b20:	687b      	ldr	r3, [r7, #4]
10043b22:	0019      	movs	r1, r3
10043b24:	0020      	movs	r0, r4
10043b26:	f028 f8d1 	bl	1006bccc <memcpy>
  
  return 0;  
10043b2a:	2300      	movs	r3, #0
}
10043b2c:	0018      	movs	r0, r3
10043b2e:	46bd      	mov	sp, r7
10043b30:	b009      	add	sp, #36	@ 0x24
10043b32:	bdf0      	pop	{r4, r5, r6, r7, pc}

10043b34 <ESL_AP_cmd_price>:

uint8_t ESL_AP_cmd_price(uint8_t group_id, uint8_t esl_id, resp_cb_t resp_cb, uint16_t val_int, uint8_t val_fract)
{
10043b34:	b590      	push	{r4, r7, lr}
10043b36:	b085      	sub	sp, #20
10043b38:	af00      	add	r7, sp, #0
10043b3a:	0004      	movs	r4, r0
10043b3c:	0008      	movs	r0, r1
10043b3e:	603a      	str	r2, [r7, #0]
10043b40:	0019      	movs	r1, r3
10043b42:	1dfb      	adds	r3, r7, #7
10043b44:	1c22      	adds	r2, r4, #0
10043b46:	701a      	strb	r2, [r3, #0]
10043b48:	1dbb      	adds	r3, r7, #6
10043b4a:	1c02      	adds	r2, r0, #0
10043b4c:	701a      	strb	r2, [r3, #0]
10043b4e:	1d3b      	adds	r3, r7, #4
10043b50:	1c0a      	adds	r2, r1, #0
10043b52:	801a      	strh	r2, [r3, #0]
  cmd_buff_t * cmd_buff;
  uint8_t cmd_opcode = ESL_CMD_VS_PRICE;
10043b54:	200f      	movs	r0, #15
10043b56:	183b      	adds	r3, r7, r0
10043b58:	223f      	movs	r2, #63	@ 0x3f
10043b5a:	701a      	strb	r2, [r3, #0]
  
  cmd_buff = prepare_cmd_buff(cmd_opcode, group_id, esl_id, resp_cb);
10043b5c:	683c      	ldr	r4, [r7, #0]
10043b5e:	1dbb      	adds	r3, r7, #6
10043b60:	781a      	ldrb	r2, [r3, #0]
10043b62:	1dfb      	adds	r3, r7, #7
10043b64:	7819      	ldrb	r1, [r3, #0]
10043b66:	183b      	adds	r3, r7, r0
10043b68:	7818      	ldrb	r0, [r3, #0]
10043b6a:	0023      	movs	r3, r4
10043b6c:	f7ff feda 	bl	10043924 <prepare_cmd_buff>
10043b70:	0003      	movs	r3, r0
10043b72:	60bb      	str	r3, [r7, #8]
  
  if(cmd_buff == NULL)
10043b74:	68bb      	ldr	r3, [r7, #8]
10043b76:	2b00      	cmp	r3, #0
10043b78:	d101      	bne.n	10043b7e <ESL_AP_cmd_price+0x4a>
    return 1;
10043b7a:	2301      	movs	r3, #1
10043b7c:	e013      	b.n	10043ba6 <ESL_AP_cmd_price+0x72>
  
  HOST_TO_LE_16(&cmd_buff->cmd[2],val_int);
10043b7e:	1d3b      	adds	r3, r7, #4
10043b80:	881b      	ldrh	r3, [r3, #0]
10043b82:	b2da      	uxtb	r2, r3
10043b84:	68bb      	ldr	r3, [r7, #8]
10043b86:	749a      	strb	r2, [r3, #18]
10043b88:	1d3b      	adds	r3, r7, #4
10043b8a:	881b      	ldrh	r3, [r3, #0]
10043b8c:	0a1b      	lsrs	r3, r3, #8
10043b8e:	b29a      	uxth	r2, r3
10043b90:	68bb      	ldr	r3, [r7, #8]
10043b92:	3312      	adds	r3, #18
10043b94:	3301      	adds	r3, #1
10043b96:	b2d2      	uxtb	r2, r2
10043b98:	701a      	strb	r2, [r3, #0]
  cmd_buff->cmd[4] = val_fract;
10043b9a:	68ba      	ldr	r2, [r7, #8]
10043b9c:	2320      	movs	r3, #32
10043b9e:	18fb      	adds	r3, r7, r3
10043ba0:	781b      	ldrb	r3, [r3, #0]
10043ba2:	7513      	strb	r3, [r2, #20]
  
  return 0;  
10043ba4:	2300      	movs	r3, #0
}
10043ba6:	0018      	movs	r0, r3
10043ba8:	46bd      	mov	sp, r7
10043baa:	b005      	add	sp, #20
10043bac:	bd90      	pop	{r4, r7, pc}

10043bae <ESL_AP_cmd_read_sensor_data>:

uint8_t ESL_AP_cmd_read_sensor_data(uint8_t group_id, uint8_t esl_id, resp_cb_t resp_cb, uint8_t sensor_index)
{
10043bae:	b590      	push	{r4, r7, lr}
10043bb0:	b085      	sub	sp, #20
10043bb2:	af00      	add	r7, sp, #0
10043bb4:	0004      	movs	r4, r0
10043bb6:	0008      	movs	r0, r1
10043bb8:	603a      	str	r2, [r7, #0]
10043bba:	0019      	movs	r1, r3
10043bbc:	1dfb      	adds	r3, r7, #7
10043bbe:	1c22      	adds	r2, r4, #0
10043bc0:	701a      	strb	r2, [r3, #0]
10043bc2:	1dbb      	adds	r3, r7, #6
10043bc4:	1c02      	adds	r2, r0, #0
10043bc6:	701a      	strb	r2, [r3, #0]
10043bc8:	1d7b      	adds	r3, r7, #5
10043bca:	1c0a      	adds	r2, r1, #0
10043bcc:	701a      	strb	r2, [r3, #0]
  cmd_buff_t * cmd_buff;
  uint8_t cmd_opcode = ESL_CMD_READ_SENSOR_DATA;
10043bce:	200f      	movs	r0, #15
10043bd0:	183b      	adds	r3, r7, r0
10043bd2:	2210      	movs	r2, #16
10043bd4:	701a      	strb	r2, [r3, #0]
  
  cmd_buff = prepare_cmd_buff(cmd_opcode, group_id, esl_id, resp_cb);
10043bd6:	683c      	ldr	r4, [r7, #0]
10043bd8:	1dbb      	adds	r3, r7, #6
10043bda:	781a      	ldrb	r2, [r3, #0]
10043bdc:	1dfb      	adds	r3, r7, #7
10043bde:	7819      	ldrb	r1, [r3, #0]
10043be0:	183b      	adds	r3, r7, r0
10043be2:	7818      	ldrb	r0, [r3, #0]
10043be4:	0023      	movs	r3, r4
10043be6:	f7ff fe9d 	bl	10043924 <prepare_cmd_buff>
10043bea:	0003      	movs	r3, r0
10043bec:	60bb      	str	r3, [r7, #8]
  
  if(cmd_buff == NULL)
10043bee:	68bb      	ldr	r3, [r7, #8]
10043bf0:	2b00      	cmp	r3, #0
10043bf2:	d101      	bne.n	10043bf8 <ESL_AP_cmd_read_sensor_data+0x4a>
    return 1;
10043bf4:	2301      	movs	r3, #1
10043bf6:	e004      	b.n	10043c02 <ESL_AP_cmd_read_sensor_data+0x54>
  
  cmd_buff->cmd[2] = sensor_index;
10043bf8:	68bb      	ldr	r3, [r7, #8]
10043bfa:	1d7a      	adds	r2, r7, #5
10043bfc:	7812      	ldrb	r2, [r2, #0]
10043bfe:	749a      	strb	r2, [r3, #18]
  
  return 0;  
10043c00:	2300      	movs	r3, #0
}
10043c02:	0018      	movs	r0, r3
10043c04:	46bd      	mov	sp, r7
10043c06:	b005      	add	sp, #20
10043c08:	bd90      	pop	{r4, r7, pc}

10043c0a <ESL_AP_cmd_display_image>:

uint8_t ESL_AP_cmd_display_image(uint8_t group_id, uint8_t esl_id, resp_cb_t resp_cb, uint8_t display_index, uint8_t image_index)
{
10043c0a:	b590      	push	{r4, r7, lr}
10043c0c:	b085      	sub	sp, #20
10043c0e:	af00      	add	r7, sp, #0
10043c10:	0004      	movs	r4, r0
10043c12:	0008      	movs	r0, r1
10043c14:	603a      	str	r2, [r7, #0]
10043c16:	0019      	movs	r1, r3
10043c18:	1dfb      	adds	r3, r7, #7
10043c1a:	1c22      	adds	r2, r4, #0
10043c1c:	701a      	strb	r2, [r3, #0]
10043c1e:	1dbb      	adds	r3, r7, #6
10043c20:	1c02      	adds	r2, r0, #0
10043c22:	701a      	strb	r2, [r3, #0]
10043c24:	1d7b      	adds	r3, r7, #5
10043c26:	1c0a      	adds	r2, r1, #0
10043c28:	701a      	strb	r2, [r3, #0]
  cmd_buff_t * cmd_buff;
  uint8_t cmd_opcode = ESL_CMD_DISPLAY_IMG;
10043c2a:	200f      	movs	r0, #15
10043c2c:	183b      	adds	r3, r7, r0
10043c2e:	2220      	movs	r2, #32
10043c30:	701a      	strb	r2, [r3, #0]
  
  cmd_buff = prepare_cmd_buff(cmd_opcode, group_id, esl_id, resp_cb);
10043c32:	683c      	ldr	r4, [r7, #0]
10043c34:	1dbb      	adds	r3, r7, #6
10043c36:	781a      	ldrb	r2, [r3, #0]
10043c38:	1dfb      	adds	r3, r7, #7
10043c3a:	7819      	ldrb	r1, [r3, #0]
10043c3c:	183b      	adds	r3, r7, r0
10043c3e:	7818      	ldrb	r0, [r3, #0]
10043c40:	0023      	movs	r3, r4
10043c42:	f7ff fe6f 	bl	10043924 <prepare_cmd_buff>
10043c46:	0003      	movs	r3, r0
10043c48:	60bb      	str	r3, [r7, #8]
  
  if(cmd_buff == NULL)
10043c4a:	68bb      	ldr	r3, [r7, #8]
10043c4c:	2b00      	cmp	r3, #0
10043c4e:	d101      	bne.n	10043c54 <ESL_AP_cmd_display_image+0x4a>
    return 1;
10043c50:	2301      	movs	r3, #1
10043c52:	e009      	b.n	10043c68 <ESL_AP_cmd_display_image+0x5e>
  
  cmd_buff->cmd[2] = display_index;
10043c54:	68bb      	ldr	r3, [r7, #8]
10043c56:	1d7a      	adds	r2, r7, #5
10043c58:	7812      	ldrb	r2, [r2, #0]
10043c5a:	749a      	strb	r2, [r3, #18]
  cmd_buff->cmd[3] = image_index;
10043c5c:	68ba      	ldr	r2, [r7, #8]
10043c5e:	2320      	movs	r3, #32
10043c60:	18fb      	adds	r3, r7, r3
10043c62:	781b      	ldrb	r3, [r3, #0]
10043c64:	74d3      	strb	r3, [r2, #19]
  
  return 0;  
10043c66:	2300      	movs	r3, #0
}
10043c68:	0018      	movs	r0, r3
10043c6a:	46bd      	mov	sp, r7
10043c6c:	b005      	add	sp, #20
10043c6e:	bd90      	pop	{r4, r7, pc}

10043c70 <ESL_AP_SubeventDataRequest>:

void ESL_AP_SubeventDataRequest(uint8_t subevent)
{
10043c70:	b5b0      	push	{r4, r5, r7, lr}
10043c72:	b096      	sub	sp, #88	@ 0x58
10043c74:	af00      	add	r7, sp, #0
10043c76:	0002      	movs	r2, r0
10043c78:	1dfb      	adds	r3, r7, #7
10043c7a:	701a      	strb	r2, [r3, #0]
  tBleStatus ble_status;
  tListNode *list_head_p;
  cmd_buff_t* current_node_p;
  cmd_buff_t* node_to_remove_p = NULL;
10043c7c:	2300      	movs	r3, #0
10043c7e:	657b      	str	r3, [r7, #84]	@ 0x54
  esl_group_info_t *esl_group_info_p;
  uint8_t curr_payload_len;
  Subevent_Data_Ptr_Parameters_t Subevent_Data_Ptr_Parameters;
  uint8_t cmd_length;
  uint8_t num_cmd = 0;
10043c80:	2352      	movs	r3, #82	@ 0x52
10043c82:	18fb      	adds	r3, r7, r3
10043c84:	2200      	movs	r2, #0
10043c86:	701a      	strb	r2, [r3, #0]
  uint8_t esl_payload[MAX_ESL_PAYLOAD_SIZE];
  
  /* subevent is the Group ID */
  
  if(subevent >= MAX_GROUPS)
10043c88:	1dfb      	adds	r3, r7, #7
10043c8a:	781b      	ldrb	r3, [r3, #0]
10043c8c:	2b03      	cmp	r3, #3
10043c8e:	d900      	bls.n	10043c92 <ESL_AP_SubeventDataRequest+0x22>
10043c90:	e0d0      	b.n	10043e34 <ESL_AP_SubeventDataRequest+0x1c4>
    return;
  
  esl_group_info_p = &esl_group_info[subevent];  
10043c92:	1dfb      	adds	r3, r7, #7
10043c94:	781a      	ldrb	r2, [r3, #0]
10043c96:	0013      	movs	r3, r2
10043c98:	011b      	lsls	r3, r3, #4
10043c9a:	1a9b      	subs	r3, r3, r2
10043c9c:	009b      	lsls	r3, r3, #2
10043c9e:	1a9b      	subs	r3, r3, r2
10043ca0:	4a66      	ldr	r2, [pc, #408]	@ (10043e3c <ESL_AP_SubeventDataRequest+0x1cc>)
10043ca2:	189b      	adds	r3, r3, r2
10043ca4:	64fb      	str	r3, [r7, #76]	@ 0x4c
  
  /* First byte of synchronization packet for commands is the Group ID. */
  esl_payload[0] = subevent;
10043ca6:	2308      	movs	r3, #8
10043ca8:	18fb      	adds	r3, r7, r3
10043caa:	1dfa      	adds	r2, r7, #7
10043cac:	7812      	ldrb	r2, [r2, #0]
10043cae:	701a      	strb	r2, [r3, #0]
  curr_payload_len = 1;
10043cb0:	2353      	movs	r3, #83	@ 0x53
10043cb2:	18fb      	adds	r3, r7, r3
10043cb4:	2201      	movs	r2, #1
10043cb6:	701a      	strb	r2, [r3, #0]
  
  list_head_p = &esl_group_info_p->cmd_queue;
10043cb8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043cba:	64bb      	str	r3, [r7, #72]	@ 0x48
    
  current_node_p = (cmd_buff_t*)list_head_p->next;
10043cbc:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10043cbe:	781a      	ldrb	r2, [r3, #0]
10043cc0:	7859      	ldrb	r1, [r3, #1]
10043cc2:	0209      	lsls	r1, r1, #8
10043cc4:	430a      	orrs	r2, r1
10043cc6:	7899      	ldrb	r1, [r3, #2]
10043cc8:	0409      	lsls	r1, r1, #16
10043cca:	430a      	orrs	r2, r1
10043ccc:	78db      	ldrb	r3, [r3, #3]
10043cce:	061b      	lsls	r3, r3, #24
10043cd0:	4313      	orrs	r3, r2
10043cd2:	643b      	str	r3, [r7, #64]	@ 0x40
  
  while(&current_node_p->node != list_head_p)
10043cd4:	e052      	b.n	10043d7c <ESL_AP_SubeventDataRequest+0x10c>
  {
    num_cmd++;
10043cd6:	2152      	movs	r1, #82	@ 0x52
10043cd8:	187b      	adds	r3, r7, r1
10043cda:	781a      	ldrb	r2, [r3, #0]
10043cdc:	187b      	adds	r3, r7, r1
10043cde:	3201      	adds	r2, #1
10043ce0:	701a      	strb	r2, [r3, #0]
    if(num_cmd > PAWR_NUM_RESPONSE_SLOTS && current_node_p->cmd[ESL_ID_CMD_OFFSET] != BRC_ESL_ID)
10043ce2:	187b      	adds	r3, r7, r1
10043ce4:	781b      	ldrb	r3, [r3, #0]
10043ce6:	2b08      	cmp	r3, #8
10043ce8:	d903      	bls.n	10043cf2 <ESL_AP_SubeventDataRequest+0x82>
10043cea:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043cec:	7c5b      	ldrb	r3, [r3, #17]
10043cee:	2bff      	cmp	r3, #255	@ 0xff
10043cf0:	d14a      	bne.n	10043d88 <ESL_AP_SubeventDataRequest+0x118>
         However we can send a broadcast command regardless of the number of
         response slots, because they have no response. */
      break;
    }
    
    cmd_length = GET_LENGTH_FROM_OPCODE(current_node_p->cmd[0]);
10043cf2:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043cf4:	7c1b      	ldrb	r3, [r3, #16]
10043cf6:	091b      	lsrs	r3, r3, #4
10043cf8:	b2da      	uxtb	r2, r3
10043cfa:	2447      	movs	r4, #71	@ 0x47
10043cfc:	193b      	adds	r3, r7, r4
10043cfe:	3202      	adds	r2, #2
10043d00:	701a      	strb	r2, [r3, #0]
    
    if(curr_payload_len + cmd_length > MAX_ESL_PAYLOAD_SIZE)
10043d02:	2553      	movs	r5, #83	@ 0x53
10043d04:	197b      	adds	r3, r7, r5
10043d06:	781a      	ldrb	r2, [r3, #0]
10043d08:	193b      	adds	r3, r7, r4
10043d0a:	781b      	ldrb	r3, [r3, #0]
10043d0c:	18d3      	adds	r3, r2, r3
10043d0e:	2b30      	cmp	r3, #48	@ 0x30
10043d10:	d83c      	bhi.n	10043d8c <ESL_AP_SubeventDataRequest+0x11c>
      break;
    
    memcpy(&esl_payload[curr_payload_len], current_node_p->cmd, cmd_length);
10043d12:	197b      	adds	r3, r7, r5
10043d14:	781b      	ldrb	r3, [r3, #0]
10043d16:	2208      	movs	r2, #8
10043d18:	18ba      	adds	r2, r7, r2
10043d1a:	18d0      	adds	r0, r2, r3
10043d1c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043d1e:	3310      	adds	r3, #16
10043d20:	0019      	movs	r1, r3
10043d22:	193b      	adds	r3, r7, r4
10043d24:	781b      	ldrb	r3, [r3, #0]
10043d26:	001a      	movs	r2, r3
10043d28:	f027 ffd0 	bl	1006bccc <memcpy>
    curr_payload_len += cmd_length;
10043d2c:	197b      	adds	r3, r7, r5
10043d2e:	1979      	adds	r1, r7, r5
10043d30:	193a      	adds	r2, r7, r4
10043d32:	7809      	ldrb	r1, [r1, #0]
10043d34:	7812      	ldrb	r2, [r2, #0]
10043d36:	188a      	adds	r2, r1, r2
10043d38:	701a      	strb	r2, [r3, #0]
    
    //current_node_p->sending = true;
    
    /* Update retransmission count and remove them from
      queue if count has reached 0. */
    if(current_node_p->retransmissions == 0)
10043d3a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043d3c:	7a1b      	ldrb	r3, [r3, #8]
10043d3e:	2b00      	cmp	r3, #0
10043d40:	d106      	bne.n	10043d50 <ESL_AP_SubeventDataRequest+0xe0>
    {
      LST_remove_node(&current_node_p->node);
10043d42:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043d44:	0018      	movs	r0, r3
10043d46:	f005 fa1b 	bl	10049180 <LST_remove_node>
      node_to_remove_p = current_node_p;
10043d4a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043d4c:	657b      	str	r3, [r7, #84]	@ 0x54
10043d4e:	e004      	b.n	10043d5a <ESL_AP_SubeventDataRequest+0xea>
    }
    else 
    {
      current_node_p->retransmissions--;
10043d50:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043d52:	7a1a      	ldrb	r2, [r3, #8]
10043d54:	3a01      	subs	r2, #1
10043d56:	b2d2      	uxtb	r2, r2
10043d58:	721a      	strb	r2, [r3, #8]
    }
    
    LST_get_next_node(&current_node_p->node, (tListNode **)&current_node_p);
10043d5a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043d5c:	001a      	movs	r2, r3
10043d5e:	2340      	movs	r3, #64	@ 0x40
10043d60:	18fb      	adds	r3, r7, r3
10043d62:	0019      	movs	r1, r3
10043d64:	0010      	movs	r0, r2
10043d66:	f005 fa9c 	bl	100492a2 <LST_get_next_node>
    
    if(node_to_remove_p != NULL)
10043d6a:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
10043d6c:	2b00      	cmp	r3, #0
10043d6e:	d005      	beq.n	10043d7c <ESL_AP_SubeventDataRequest+0x10c>
    {
      free(node_to_remove_p);
10043d70:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
10043d72:	0018      	movs	r0, r3
10043d74:	f027 fb38 	bl	1006b3e8 <free>
      node_to_remove_p = NULL;
10043d78:	2300      	movs	r3, #0
10043d7a:	657b      	str	r3, [r7, #84]	@ 0x54
  while(&current_node_p->node != list_head_p)
10043d7c:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
10043d7e:	001a      	movs	r2, r3
10043d80:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10043d82:	4293      	cmp	r3, r2
10043d84:	d1a7      	bne.n	10043cd6 <ESL_AP_SubeventDataRequest+0x66>
10043d86:	e002      	b.n	10043d8e <ESL_AP_SubeventDataRequest+0x11e>
      break;
10043d88:	46c0      	nop			@ (mov r8, r8)
10043d8a:	e000      	b.n	10043d8e <ESL_AP_SubeventDataRequest+0x11e>
      break;
10043d8c:	46c0      	nop			@ (mov r8, r8)
    } 
  }
  
  if(curr_payload_len == 1)
10043d8e:	2353      	movs	r3, #83	@ 0x53
10043d90:	18fb      	adds	r3, r7, r3
10043d92:	781b      	ldrb	r3, [r3, #0]
10043d94:	2b01      	cmp	r3, #1
10043d96:	d103      	bne.n	10043da0 <ESL_AP_SubeventDataRequest+0x130>
  {
    /* No commands to be sent. */
    esl_group_info_p->adv_packet_len = 0;
10043d98:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043d9a:	2200      	movs	r2, #0
10043d9c:	721a      	strb	r2, [r3, #8]
    
    return;
10043d9e:	e04a      	b.n	10043e36 <ESL_AP_SubeventDataRequest+0x1c6>
  }
  
  esl_group_info_p->adv_packet[0] = curr_payload_len + 1; /* One byte for AD type. */
10043da0:	2153      	movs	r1, #83	@ 0x53
10043da2:	187b      	adds	r3, r7, r1
10043da4:	781b      	ldrb	r3, [r3, #0]
10043da6:	3301      	adds	r3, #1
10043da8:	b2da      	uxtb	r2, r3
10043daa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043dac:	725a      	strb	r2, [r3, #9]
  esl_group_info_p->adv_packet[1] = AD_TYPE_ELECTRONIC_SHELF_LABEL;
10043dae:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043db0:	2234      	movs	r2, #52	@ 0x34
10043db2:	729a      	strb	r2, [r3, #10]
  memcpy(&esl_group_info_p->adv_packet[2], esl_payload, curr_payload_len);
10043db4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043db6:	330b      	adds	r3, #11
10043db8:	0018      	movs	r0, r3
10043dba:	000c      	movs	r4, r1
10043dbc:	187b      	adds	r3, r7, r1
10043dbe:	781a      	ldrb	r2, [r3, #0]
10043dc0:	2308      	movs	r3, #8
10043dc2:	18fb      	adds	r3, r7, r3
10043dc4:	0019      	movs	r1, r3
10043dc6:	f027 ff81 	bl	1006bccc <memcpy>
  
  esl_group_info_p->adv_packet_len = curr_payload_len + 2;
10043dca:	193b      	adds	r3, r7, r4
10043dcc:	781b      	ldrb	r3, [r3, #0]
10043dce:	3302      	adds	r3, #2
10043dd0:	b2da      	uxtb	r2, r3
10043dd2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043dd4:	721a      	strb	r2, [r3, #8]
  
  Subevent_Data_Ptr_Parameters.Subevent = subevent;
10043dd6:	2138      	movs	r1, #56	@ 0x38
10043dd8:	187b      	adds	r3, r7, r1
10043dda:	1dfa      	adds	r2, r7, #7
10043ddc:	7812      	ldrb	r2, [r2, #0]
10043dde:	701a      	strb	r2, [r3, #0]
  //TBR: calculate the used response slots depending on the current commands.
  Subevent_Data_Ptr_Parameters.Response_Slot_Start = 0;
10043de0:	187b      	adds	r3, r7, r1
10043de2:	2200      	movs	r2, #0
10043de4:	705a      	strb	r2, [r3, #1]
  Subevent_Data_Ptr_Parameters.Response_Slot_Count = PAWR_NUM_RESPONSE_SLOTS;
10043de6:	187b      	adds	r3, r7, r1
10043de8:	2208      	movs	r2, #8
10043dea:	709a      	strb	r2, [r3, #2]
  Subevent_Data_Ptr_Parameters.Subevent_Data_Length = esl_group_info_p->adv_packet_len;
10043dec:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043dee:	7a1a      	ldrb	r2, [r3, #8]
10043df0:	187b      	adds	r3, r7, r1
10043df2:	70da      	strb	r2, [r3, #3]
  Subevent_Data_Ptr_Parameters.Subevent_Data = esl_group_info_p->adv_packet;
10043df4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10043df6:	3309      	adds	r3, #9
10043df8:	001a      	movs	r2, r3
10043dfa:	187b      	adds	r3, r7, r1
10043dfc:	605a      	str	r2, [r3, #4]
  
  ble_status = ll_set_periodic_advertising_subevent_data_ptr(0, 1, &Subevent_Data_Ptr_Parameters);  
10043dfe:	2546      	movs	r5, #70	@ 0x46
10043e00:	197c      	adds	r4, r7, r5
10043e02:	187b      	adds	r3, r7, r1
10043e04:	001a      	movs	r2, r3
10043e06:	2101      	movs	r1, #1
10043e08:	2000      	movs	r0, #0
10043e0a:	f014 fe69 	bl	10058ae0 <ll_set_periodic_advertising_subevent_data_ptr>
10043e0e:	0003      	movs	r3, r0
10043e10:	7023      	strb	r3, [r4, #0]
  if (ble_status != BLE_STATUS_SUCCESS)
10043e12:	197b      	adds	r3, r7, r5
10043e14:	781b      	ldrb	r3, [r3, #0]
10043e16:	2b00      	cmp	r3, #0
10043e18:	d007      	beq.n	10043e2a <ESL_AP_SubeventDataRequest+0x1ba>
  {
    APP_DBG_MSG("==>> ll_set_periodic_advertising_subevent_data_ptr - fail, result: 0x%02X\n", ble_status);
10043e1a:	197b      	adds	r3, r7, r5
10043e1c:	781a      	ldrb	r2, [r3, #0]
10043e1e:	4b08      	ldr	r3, [pc, #32]	@ (10043e40 <ESL_AP_SubeventDataRequest+0x1d0>)
10043e20:	0011      	movs	r1, r2
10043e22:	0018      	movs	r0, r3
10043e24:	f027 fc60 	bl	1006b6e8 <iprintf>
10043e28:	e005      	b.n	10043e36 <ESL_AP_SubeventDataRequest+0x1c6>
  }
  else
  {
    APP_DBG_MSG("==>> Success: ll_set_periodic_advertising_subevent_data_ptr\n");
10043e2a:	4b06      	ldr	r3, [pc, #24]	@ (10043e44 <ESL_AP_SubeventDataRequest+0x1d4>)
10043e2c:	0018      	movs	r0, r3
10043e2e:	f027 fccb 	bl	1006b7c8 <puts>
10043e32:	e000      	b.n	10043e36 <ESL_AP_SubeventDataRequest+0x1c6>
    return;
10043e34:	46c0      	nop			@ (mov r8, r8)
  }        
}
10043e36:	46bd      	mov	sp, r7
10043e38:	b016      	add	sp, #88	@ 0x58
10043e3a:	bdb0      	pop	{r4, r5, r7, pc}
10043e3c:	200002f0 	.word	0x200002f0
10043e40:	1006e3a0 	.word	0x1006e3a0
10043e44:	1006e3ec 	.word	0x1006e3ec

10043e48 <ESL_AP_ResponseReport>:

void ESL_AP_ResponseReport(uint8_t subevent, uint8_t response_slot, uint8_t data_length, uint8_t *data)
{
10043e48:	b590      	push	{r4, r7, lr}
10043e4a:	b08b      	sub	sp, #44	@ 0x2c
10043e4c:	af00      	add	r7, sp, #0
10043e4e:	0004      	movs	r4, r0
10043e50:	0008      	movs	r0, r1
10043e52:	0011      	movs	r1, r2
10043e54:	603b      	str	r3, [r7, #0]
10043e56:	1dfb      	adds	r3, r7, #7
10043e58:	1c22      	adds	r2, r4, #0
10043e5a:	701a      	strb	r2, [r3, #0]
10043e5c:	1dbb      	adds	r3, r7, #6
10043e5e:	1c02      	adds	r2, r0, #0
10043e60:	701a      	strb	r2, [r3, #0]
10043e62:	1d7b      	adds	r3, r7, #5
10043e64:	1c0a      	adds	r2, r1, #0
10043e66:	701a      	strb	r2, [r3, #0]
  esl_group_info_t *esl_group_info_p;
  tListNode *list_head_p;
  cmd_buff_t* current_node_p;
  cmd_buff_t* node_to_remove_p = NULL;
10043e68:	2300      	movs	r3, #0
10043e6a:	627b      	str	r3, [r7, #36]	@ 0x24
  uint8_t esl_id;
  uint8_t *current_data_resp_p;
  uint8_t resp_length;
  
  if(subevent >= MAX_GROUPS)
10043e6c:	1dfb      	adds	r3, r7, #7
10043e6e:	781b      	ldrb	r3, [r3, #0]
10043e70:	2b03      	cmp	r3, #3
10043e72:	d900      	bls.n	10043e76 <ESL_AP_ResponseReport+0x2e>
10043e74:	e070      	b.n	10043f58 <ESL_AP_ResponseReport+0x110>
    return;
  
  /* We assume only one AD type is present */
  if(data[1] != AD_TYPE_ELECTRONIC_SHELF_LABEL)
10043e76:	683b      	ldr	r3, [r7, #0]
10043e78:	3301      	adds	r3, #1
10043e7a:	781b      	ldrb	r3, [r3, #0]
10043e7c:	2b34      	cmp	r3, #52	@ 0x34
10043e7e:	d16d      	bne.n	10043f5c <ESL_AP_ResponseReport+0x114>
    return;
  
  if(get_esl_id_from_response(subevent, response_slot, &esl_id) != 0)
10043e80:	230f      	movs	r3, #15
10043e82:	18fa      	adds	r2, r7, r3
10043e84:	1dbb      	adds	r3, r7, #6
10043e86:	7819      	ldrb	r1, [r3, #0]
10043e88:	1dfb      	adds	r3, r7, #7
10043e8a:	781b      	ldrb	r3, [r3, #0]
10043e8c:	0018      	movs	r0, r3
10043e8e:	f000 f86d 	bl	10043f6c <get_esl_id_from_response>
10043e92:	1e03      	subs	r3, r0, #0
10043e94:	d164      	bne.n	10043f60 <ESL_AP_ResponseReport+0x118>
    /* No corresponding ESL ID found for that response. This should not happen. */
    return;
  }  
  
  /* Inspect sent commands and link them to the responses. */
  esl_group_info_p = &esl_group_info[subevent];
10043e96:	1dfb      	adds	r3, r7, #7
10043e98:	781a      	ldrb	r2, [r3, #0]
10043e9a:	0013      	movs	r3, r2
10043e9c:	011b      	lsls	r3, r3, #4
10043e9e:	1a9b      	subs	r3, r3, r2
10043ea0:	009b      	lsls	r3, r3, #2
10043ea2:	1a9b      	subs	r3, r3, r2
10043ea4:	4a30      	ldr	r2, [pc, #192]	@ (10043f68 <ESL_AP_ResponseReport+0x120>)
10043ea6:	189b      	adds	r3, r3, r2
10043ea8:	61fb      	str	r3, [r7, #28]
  
  list_head_p = &esl_group_info_p->cmd_queue;
10043eaa:	69fb      	ldr	r3, [r7, #28]
10043eac:	61bb      	str	r3, [r7, #24]
    
  current_node_p = (cmd_buff_t*)list_head_p->next;
10043eae:	69bb      	ldr	r3, [r7, #24]
10043eb0:	781a      	ldrb	r2, [r3, #0]
10043eb2:	7859      	ldrb	r1, [r3, #1]
10043eb4:	0209      	lsls	r1, r1, #8
10043eb6:	430a      	orrs	r2, r1
10043eb8:	7899      	ldrb	r1, [r3, #2]
10043eba:	0409      	lsls	r1, r1, #16
10043ebc:	430a      	orrs	r2, r1
10043ebe:	78db      	ldrb	r3, [r3, #3]
10043ec0:	061b      	lsls	r3, r3, #24
10043ec2:	4313      	orrs	r3, r2
10043ec4:	613b      	str	r3, [r7, #16]
  
  current_data_resp_p = data + 2; /* Skip first 2 bytes for AD length and type. */
10043ec6:	683b      	ldr	r3, [r7, #0]
10043ec8:	3302      	adds	r3, #2
10043eca:	623b      	str	r3, [r7, #32]
  
  while(&current_node_p->node != list_head_p && current_data_resp_p < data + data_length)
10043ecc:	e037      	b.n	10043f3e <ESL_AP_ResponseReport+0xf6>
  {
    if(current_node_p->cmd[ESL_ID_CMD_OFFSET] == esl_id)
10043ece:	693b      	ldr	r3, [r7, #16]
10043ed0:	7c5a      	ldrb	r2, [r3, #17]
10043ed2:	210f      	movs	r1, #15
10043ed4:	187b      	adds	r3, r7, r1
10043ed6:	781b      	ldrb	r3, [r3, #0]
10043ed8:	429a      	cmp	r2, r3
10043eda:	d11f      	bne.n	10043f1c <ESL_AP_ResponseReport+0xd4>
    {
      if(current_node_p->resp_cb != NULL)
10043edc:	693b      	ldr	r3, [r7, #16]
10043ede:	68db      	ldr	r3, [r3, #12]
10043ee0:	2b00      	cmp	r3, #0
10043ee2:	d008      	beq.n	10043ef6 <ESL_AP_ResponseReport+0xae>
      {
        current_node_p->resp_cb(subevent, esl_id, current_data_resp_p);
10043ee4:	693b      	ldr	r3, [r7, #16]
10043ee6:	68db      	ldr	r3, [r3, #12]
10043ee8:	187a      	adds	r2, r7, r1
10043eea:	7811      	ldrb	r1, [r2, #0]
10043eec:	6a3c      	ldr	r4, [r7, #32]
10043eee:	1dfa      	adds	r2, r7, #7
10043ef0:	7810      	ldrb	r0, [r2, #0]
10043ef2:	0022      	movs	r2, r4
10043ef4:	4798      	blx	r3
      }
      
      /* Command has received a response. Remove from queue. */      
      LST_remove_node(&current_node_p->node);      
10043ef6:	693b      	ldr	r3, [r7, #16]
10043ef8:	0018      	movs	r0, r3
10043efa:	f005 f941 	bl	10049180 <LST_remove_node>
      node_to_remove_p = current_node_p;
10043efe:	693b      	ldr	r3, [r7, #16]
10043f00:	627b      	str	r3, [r7, #36]	@ 0x24
      
      /* Pass to following response. */
      resp_length = GET_LENGTH_FROM_OPCODE(current_data_resp_p[0]);
10043f02:	6a3b      	ldr	r3, [r7, #32]
10043f04:	781b      	ldrb	r3, [r3, #0]
10043f06:	091b      	lsrs	r3, r3, #4
10043f08:	b2da      	uxtb	r2, r3
10043f0a:	2117      	movs	r1, #23
10043f0c:	187b      	adds	r3, r7, r1
10043f0e:	3202      	adds	r2, #2
10043f10:	701a      	strb	r2, [r3, #0]
      current_data_resp_p += resp_length;
10043f12:	187b      	adds	r3, r7, r1
10043f14:	781b      	ldrb	r3, [r3, #0]
10043f16:	6a3a      	ldr	r2, [r7, #32]
10043f18:	18d3      	adds	r3, r2, r3
10043f1a:	623b      	str	r3, [r7, #32]
    }
    
    LST_get_next_node(&current_node_p->node, (tListNode **)&current_node_p);
10043f1c:	693b      	ldr	r3, [r7, #16]
10043f1e:	001a      	movs	r2, r3
10043f20:	2310      	movs	r3, #16
10043f22:	18fb      	adds	r3, r7, r3
10043f24:	0019      	movs	r1, r3
10043f26:	0010      	movs	r0, r2
10043f28:	f005 f9bb 	bl	100492a2 <LST_get_next_node>
    
    if(node_to_remove_p != NULL)
10043f2c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
10043f2e:	2b00      	cmp	r3, #0
10043f30:	d005      	beq.n	10043f3e <ESL_AP_ResponseReport+0xf6>
    {
      free(node_to_remove_p);
10043f32:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
10043f34:	0018      	movs	r0, r3
10043f36:	f027 fa57 	bl	1006b3e8 <free>
      node_to_remove_p = NULL;
10043f3a:	2300      	movs	r3, #0
10043f3c:	627b      	str	r3, [r7, #36]	@ 0x24
  while(&current_node_p->node != list_head_p && current_data_resp_p < data + data_length)
10043f3e:	693b      	ldr	r3, [r7, #16]
10043f40:	001a      	movs	r2, r3
10043f42:	69bb      	ldr	r3, [r7, #24]
10043f44:	4293      	cmp	r3, r2
10043f46:	d00c      	beq.n	10043f62 <ESL_AP_ResponseReport+0x11a>
10043f48:	1d7b      	adds	r3, r7, #5
10043f4a:	781b      	ldrb	r3, [r3, #0]
10043f4c:	683a      	ldr	r2, [r7, #0]
10043f4e:	18d3      	adds	r3, r2, r3
10043f50:	6a3a      	ldr	r2, [r7, #32]
10043f52:	429a      	cmp	r2, r3
10043f54:	d3bb      	bcc.n	10043ece <ESL_AP_ResponseReport+0x86>
10043f56:	e004      	b.n	10043f62 <ESL_AP_ResponseReport+0x11a>
    return;
10043f58:	46c0      	nop			@ (mov r8, r8)
10043f5a:	e002      	b.n	10043f62 <ESL_AP_ResponseReport+0x11a>
    return;
10043f5c:	46c0      	nop			@ (mov r8, r8)
10043f5e:	e000      	b.n	10043f62 <ESL_AP_ResponseReport+0x11a>
    return;
10043f60:	46c0      	nop			@ (mov r8, r8)
    }    
  }  
}
10043f62:	46bd      	mov	sp, r7
10043f64:	b00b      	add	sp, #44	@ 0x2c
10043f66:	bd90      	pop	{r4, r7, pc}
10043f68:	200002f0 	.word	0x200002f0

10043f6c <get_esl_id_from_response>:

uint8_t get_esl_id_from_response(uint8_t subevent, uint8_t response_slot, uint8_t *esl_id_p)
{
10043f6c:	b580      	push	{r7, lr}
10043f6e:	b088      	sub	sp, #32
10043f70:	af00      	add	r7, sp, #0
10043f72:	603a      	str	r2, [r7, #0]
10043f74:	1dfb      	adds	r3, r7, #7
10043f76:	1c02      	adds	r2, r0, #0
10043f78:	701a      	strb	r2, [r3, #0]
10043f7a:	1dbb      	adds	r3, r7, #6
10043f7c:	1c0a      	adds	r2, r1, #0
10043f7e:	701a      	strb	r2, [r3, #0]
  esl_group_info_t *esl_group_info_p;
  uint8_t *esl_payload_p;
  uint8_t esl_payload_len;
  uint8_t *cmd_p;
  int8_t cmd_idx = -1;
10043f80:	231b      	movs	r3, #27
10043f82:	18fb      	adds	r3, r7, r3
10043f84:	22ff      	movs	r2, #255	@ 0xff
10043f86:	701a      	strb	r2, [r3, #0]
  uint8_t cmd_length;
  
  if(subevent >= MAX_GROUPS)
10043f88:	1dfb      	adds	r3, r7, #7
10043f8a:	781b      	ldrb	r3, [r3, #0]
10043f8c:	2b03      	cmp	r3, #3
10043f8e:	d901      	bls.n	10043f94 <get_esl_id_from_response+0x28>
    return 1;
10043f90:	2301      	movs	r3, #1
10043f92:	e049      	b.n	10044028 <get_esl_id_from_response+0xbc>
  
  /* Inspect last sent ESL payload. */
  esl_group_info_p = &esl_group_info[subevent];
10043f94:	1dfb      	adds	r3, r7, #7
10043f96:	781a      	ldrb	r2, [r3, #0]
10043f98:	0013      	movs	r3, r2
10043f9a:	011b      	lsls	r3, r3, #4
10043f9c:	1a9b      	subs	r3, r3, r2
10043f9e:	009b      	lsls	r3, r3, #2
10043fa0:	1a9b      	subs	r3, r3, r2
10043fa2:	4a23      	ldr	r2, [pc, #140]	@ (10044030 <get_esl_id_from_response+0xc4>)
10043fa4:	189b      	adds	r3, r3, r2
10043fa6:	617b      	str	r3, [r7, #20]
  esl_payload_p = &esl_group_info_p->adv_packet[2]; /* Two bytes for AD length and type */
10043fa8:	697b      	ldr	r3, [r7, #20]
10043faa:	330b      	adds	r3, #11
10043fac:	613b      	str	r3, [r7, #16]
  esl_payload_len = esl_group_info_p->adv_packet_len - 2;
10043fae:	697b      	ldr	r3, [r7, #20]
10043fb0:	7a1a      	ldrb	r2, [r3, #8]
10043fb2:	230f      	movs	r3, #15
10043fb4:	18fb      	adds	r3, r7, r3
10043fb6:	3a02      	subs	r2, #2
10043fb8:	701a      	strb	r2, [r3, #0]
  
  cmd_p = &esl_payload_p[1];
10043fba:	693b      	ldr	r3, [r7, #16]
10043fbc:	3301      	adds	r3, #1
10043fbe:	61fb      	str	r3, [r7, #28]
  
  while(cmd_p < esl_payload_p + esl_payload_len)
10043fc0:	e029      	b.n	10044016 <get_esl_id_from_response+0xaa>
  {
    cmd_idx++;
10043fc2:	211b      	movs	r1, #27
10043fc4:	187b      	adds	r3, r7, r1
10043fc6:	781b      	ldrb	r3, [r3, #0]
10043fc8:	b25b      	sxtb	r3, r3
10043fca:	b2db      	uxtb	r3, r3
10043fcc:	3301      	adds	r3, #1
10043fce:	b2da      	uxtb	r2, r3
10043fd0:	187b      	adds	r3, r7, r1
10043fd2:	701a      	strb	r2, [r3, #0]
    
    if(cmd_idx == response_slot)
10043fd4:	187b      	adds	r3, r7, r1
10043fd6:	2200      	movs	r2, #0
10043fd8:	569a      	ldrsb	r2, [r3, r2]
10043fda:	1dbb      	adds	r3, r7, #6
10043fdc:	781b      	ldrb	r3, [r3, #0]
10043fde:	429a      	cmp	r2, r3
10043fe0:	d10c      	bne.n	10043ffc <get_esl_id_from_response+0x90>
    {
      if(cmd_p[ESL_ID_CMD_OFFSET] == BRC_ESL_ID)
10043fe2:	69fb      	ldr	r3, [r7, #28]
10043fe4:	3301      	adds	r3, #1
10043fe6:	781b      	ldrb	r3, [r3, #0]
10043fe8:	2bff      	cmp	r3, #255	@ 0xff
10043fea:	d101      	bne.n	10043ff0 <get_esl_id_from_response+0x84>
      {
        return 1;
10043fec:	2301      	movs	r3, #1
10043fee:	e01b      	b.n	10044028 <get_esl_id_from_response+0xbc>
      }
      
      *esl_id_p = cmd_p[ESL_ID_CMD_OFFSET];
10043ff0:	69fb      	ldr	r3, [r7, #28]
10043ff2:	785a      	ldrb	r2, [r3, #1]
10043ff4:	683b      	ldr	r3, [r7, #0]
10043ff6:	701a      	strb	r2, [r3, #0]
      
      return 0;
10043ff8:	2300      	movs	r3, #0
10043ffa:	e015      	b.n	10044028 <get_esl_id_from_response+0xbc>
    }    
    
    cmd_length = GET_LENGTH_FROM_OPCODE(cmd_p[0]);    
10043ffc:	69fb      	ldr	r3, [r7, #28]
10043ffe:	781b      	ldrb	r3, [r3, #0]
10044000:	091b      	lsrs	r3, r3, #4
10044002:	b2da      	uxtb	r2, r3
10044004:	210e      	movs	r1, #14
10044006:	187b      	adds	r3, r7, r1
10044008:	3202      	adds	r2, #2
1004400a:	701a      	strb	r2, [r3, #0]
    cmd_p += cmd_length;
1004400c:	187b      	adds	r3, r7, r1
1004400e:	781b      	ldrb	r3, [r3, #0]
10044010:	69fa      	ldr	r2, [r7, #28]
10044012:	18d3      	adds	r3, r2, r3
10044014:	61fb      	str	r3, [r7, #28]
  while(cmd_p < esl_payload_p + esl_payload_len)
10044016:	230f      	movs	r3, #15
10044018:	18fb      	adds	r3, r7, r3
1004401a:	781b      	ldrb	r3, [r3, #0]
1004401c:	693a      	ldr	r2, [r7, #16]
1004401e:	18d3      	adds	r3, r2, r3
10044020:	69fa      	ldr	r2, [r7, #28]
10044022:	429a      	cmp	r2, r3
10044024:	d3cd      	bcc.n	10043fc2 <get_esl_id_from_response+0x56>
  }
  
  return 1;
10044026:	2301      	movs	r3, #1
}
10044028:	0018      	movs	r0, r3
1004402a:	46bd      	mov	sp, r7
1004402c:	b008      	add	sp, #32
1004402e:	bd80      	pop	{r7, pc}
10044030:	200002f0 	.word	0x200002f0

10044034 <UART_CMD_DataReceived>:
static volatile uint16_t indexReceiveChar = 0;
static uint8_t echo_mode = 0;
static volatile uint8_t buff_lock = 0;

void UART_CMD_DataReceived(uint8_t * pRxDataBuff, uint16_t nDataSize)
{
10044034:	b580      	push	{r7, lr}
10044036:	b082      	sub	sp, #8
10044038:	af00      	add	r7, sp, #0
1004403a:	6078      	str	r0, [r7, #4]
1004403c:	000a      	movs	r2, r1
1004403e:	1cbb      	adds	r3, r7, #2
10044040:	801a      	strh	r2, [r3, #0]
  /* nDataSize always 1 in current implementation. */
  
  if(buff_lock)
10044042:	4b1a      	ldr	r3, [pc, #104]	@ (100440ac <UART_CMD_DataReceived+0x78>)
10044044:	781b      	ldrb	r3, [r3, #0]
10044046:	b2db      	uxtb	r3, r3
10044048:	2b00      	cmp	r3, #0
1004404a:	d12b      	bne.n	100440a4 <UART_CMD_DataReceived+0x70>
    /* Previous command still need to be processed. This should not happen. */
    return;
  }  
  
  /* Filling buffer and wait for '\r' char */
  if (indexReceiveChar < C_SIZE_CMD_STRING - 1)
1004404c:	4b18      	ldr	r3, [pc, #96]	@ (100440b0 <UART_CMD_DataReceived+0x7c>)
1004404e:	881b      	ldrh	r3, [r3, #0]
10044050:	b29b      	uxth	r3, r3
10044052:	2bfe      	cmp	r3, #254	@ 0xfe
10044054:	d827      	bhi.n	100440a6 <UART_CMD_DataReceived+0x72>
  {
    if(echo_mode)
10044056:	4b17      	ldr	r3, [pc, #92]	@ (100440b4 <UART_CMD_DataReceived+0x80>)
10044058:	781b      	ldrb	r3, [r3, #0]
1004405a:	2b00      	cmp	r3, #0
1004405c:	d004      	beq.n	10044068 <UART_CMD_DataReceived+0x34>
    {
      putchar(*pRxDataBuff);
1004405e:	687b      	ldr	r3, [r7, #4]
10044060:	781b      	ldrb	r3, [r3, #0]
10044062:	0018      	movs	r0, r3
10044064:	f027 fb50 	bl	1006b708 <putchar>
    }
    if (*pRxDataBuff == '\r')
10044068:	687b      	ldr	r3, [r7, #4]
1004406a:	781b      	ldrb	r3, [r3, #0]
1004406c:	2b0d      	cmp	r3, #13
1004406e:	d10c      	bne.n	1004408a <UART_CMD_DataReceived+0x56>
    {
      CommandString[indexReceiveChar] = '\0';
10044070:	4b0f      	ldr	r3, [pc, #60]	@ (100440b0 <UART_CMD_DataReceived+0x7c>)
10044072:	881b      	ldrh	r3, [r3, #0]
10044074:	b29b      	uxth	r3, r3
10044076:	001a      	movs	r2, r3
10044078:	4b0f      	ldr	r3, [pc, #60]	@ (100440b8 <UART_CMD_DataReceived+0x84>)
1004407a:	2100      	movs	r1, #0
1004407c:	5499      	strb	r1, [r3, r2]
      buff_lock = 1;
1004407e:	4b0b      	ldr	r3, [pc, #44]	@ (100440ac <UART_CMD_DataReceived+0x78>)
10044080:	2201      	movs	r2, #1
10044082:	701a      	strb	r2, [r3, #0]
        
      //APP_DBG_MSG("received %s\n", CommandString);
      
      UART_CMD_ProcessRequestCB();
10044084:	f7fe fc2e 	bl	100428e4 <UART_CMD_ProcessRequestCB>
10044088:	e00d      	b.n	100440a6 <UART_CMD_DataReceived+0x72>
    }
    else
    {
      CommandString[indexReceiveChar++] = *pRxDataBuff;
1004408a:	4b09      	ldr	r3, [pc, #36]	@ (100440b0 <UART_CMD_DataReceived+0x7c>)
1004408c:	881b      	ldrh	r3, [r3, #0]
1004408e:	b29b      	uxth	r3, r3
10044090:	1c5a      	adds	r2, r3, #1
10044092:	b291      	uxth	r1, r2
10044094:	4a06      	ldr	r2, [pc, #24]	@ (100440b0 <UART_CMD_DataReceived+0x7c>)
10044096:	8011      	strh	r1, [r2, #0]
10044098:	001a      	movs	r2, r3
1004409a:	687b      	ldr	r3, [r7, #4]
1004409c:	7819      	ldrb	r1, [r3, #0]
1004409e:	4b06      	ldr	r3, [pc, #24]	@ (100440b8 <UART_CMD_DataReceived+0x84>)
100440a0:	5499      	strb	r1, [r3, r2]
100440a2:	e000      	b.n	100440a6 <UART_CMD_DataReceived+0x72>
    return;
100440a4:	46c0      	nop			@ (mov r8, r8)
    }
  }
}
100440a6:	46bd      	mov	sp, r7
100440a8:	b002      	add	sp, #8
100440aa:	bd80      	pop	{r7, pc}
100440ac:	200004df 	.word	0x200004df
100440b0:	200004dc 	.word	0x200004dc
100440b4:	200004de 	.word	0x200004de
100440b8:	200003dc 	.word	0x200003dc

100440bc <print_esl_resp>:

static void print_esl_resp(uint8_t group_id, uint8_t esl_id, uint8_t *resp)
{
100440bc:	b580      	push	{r7, lr}
100440be:	b084      	sub	sp, #16
100440c0:	af00      	add	r7, sp, #0
100440c2:	603a      	str	r2, [r7, #0]
100440c4:	1dfb      	adds	r3, r7, #7
100440c6:	1c02      	adds	r2, r0, #0
100440c8:	701a      	strb	r2, [r3, #0]
100440ca:	1dbb      	adds	r3, r7, #6
100440cc:	1c0a      	adds	r2, r1, #0
100440ce:	701a      	strb	r2, [r3, #0]
  uint8_t resp_length;
  
  resp_length =  GET_LENGTH_FROM_OPCODE(resp[0]);
100440d0:	683b      	ldr	r3, [r7, #0]
100440d2:	781b      	ldrb	r3, [r3, #0]
100440d4:	091b      	lsrs	r3, r3, #4
100440d6:	b2da      	uxtb	r2, r3
100440d8:	230b      	movs	r3, #11
100440da:	18fb      	adds	r3, r7, r3
100440dc:	3202      	adds	r2, #2
100440de:	701a      	strb	r2, [r3, #0]
  
  APP_DBG_MSG("Response from ESL (%d, %d): ", group_id, esl_id);
100440e0:	1dfb      	adds	r3, r7, #7
100440e2:	7819      	ldrb	r1, [r3, #0]
100440e4:	1dbb      	adds	r3, r7, #6
100440e6:	781a      	ldrb	r2, [r3, #0]
100440e8:	4b10      	ldr	r3, [pc, #64]	@ (1004412c <print_esl_resp+0x70>)
100440ea:	0018      	movs	r0, r3
100440ec:	f027 fafc 	bl	1006b6e8 <iprintf>
  
  for(int i = 0; i < resp_length; i++)
100440f0:	2300      	movs	r3, #0
100440f2:	60fb      	str	r3, [r7, #12]
100440f4:	e00c      	b.n	10044110 <print_esl_resp+0x54>
  {
    APP_DBG_MSG("0x%02X ", resp[i]);
100440f6:	68fb      	ldr	r3, [r7, #12]
100440f8:	683a      	ldr	r2, [r7, #0]
100440fa:	18d3      	adds	r3, r2, r3
100440fc:	781b      	ldrb	r3, [r3, #0]
100440fe:	001a      	movs	r2, r3
10044100:	4b0b      	ldr	r3, [pc, #44]	@ (10044130 <print_esl_resp+0x74>)
10044102:	0011      	movs	r1, r2
10044104:	0018      	movs	r0, r3
10044106:	f027 faef 	bl	1006b6e8 <iprintf>
  for(int i = 0; i < resp_length; i++)
1004410a:	68fb      	ldr	r3, [r7, #12]
1004410c:	3301      	adds	r3, #1
1004410e:	60fb      	str	r3, [r7, #12]
10044110:	230b      	movs	r3, #11
10044112:	18fb      	adds	r3, r7, r3
10044114:	781b      	ldrb	r3, [r3, #0]
10044116:	68fa      	ldr	r2, [r7, #12]
10044118:	429a      	cmp	r2, r3
1004411a:	dbec      	blt.n	100440f6 <print_esl_resp+0x3a>
  }
  
  APP_DBG_MSG("\n");
1004411c:	200a      	movs	r0, #10
1004411e:	f027 faf3 	bl	1006b708 <putchar>
}
10044122:	46c0      	nop			@ (mov r8, r8)
10044124:	46bd      	mov	sp, r7
10044126:	b004      	add	sp, #16
10044128:	bd80      	pop	{r7, pc}
1004412a:	46c0      	nop			@ (mov r8, r8)
1004412c:	1006e428 	.word	0x1006e428
10044130:	1006e448 	.word	0x1006e448

10044134 <ping_resp_cb>:

static void ping_resp_cb(uint8_t group_id, uint8_t esl_id, uint8_t *resp)
{
10044134:	b590      	push	{r4, r7, lr}
10044136:	b087      	sub	sp, #28
10044138:	af02      	add	r7, sp, #8
1004413a:	603a      	str	r2, [r7, #0]
1004413c:	1dfb      	adds	r3, r7, #7
1004413e:	1c02      	adds	r2, r0, #0
10044140:	701a      	strb	r2, [r3, #0]
10044142:	1dbb      	adds	r3, r7, #6
10044144:	1c0a      	adds	r2, r1, #0
10044146:	701a      	strb	r2, [r3, #0]
  uint8_t status = 0;
10044148:	230f      	movs	r3, #15
1004414a:	18fb      	adds	r3, r7, r3
1004414c:	2200      	movs	r2, #0
1004414e:	701a      	strb	r2, [r3, #0]
  uint16_t basic_state = 0;  
10044150:	240c      	movs	r4, #12
10044152:	193b      	adds	r3, r7, r4
10044154:	2200      	movs	r2, #0
10044156:	801a      	strh	r2, [r3, #0]
  
  print_esl_resp(group_id, esl_id, resp);
10044158:	683a      	ldr	r2, [r7, #0]
1004415a:	1dbb      	adds	r3, r7, #6
1004415c:	7819      	ldrb	r1, [r3, #0]
1004415e:	1dfb      	adds	r3, r7, #7
10044160:	781b      	ldrb	r3, [r3, #0]
10044162:	0018      	movs	r0, r3
10044164:	f7ff ffaa 	bl	100440bc <print_esl_resp>
  
  if(resp[0] == ESL_RESP_BASIC_STATE)
10044168:	683b      	ldr	r3, [r7, #0]
1004416a:	781b      	ldrb	r3, [r3, #0]
1004416c:	2b10      	cmp	r3, #16
1004416e:	d10d      	bne.n	1004418c <ping_resp_cb+0x58>
  {
    basic_state = LE_TO_HOST_16(&resp[1]);    
10044170:	683b      	ldr	r3, [r7, #0]
10044172:	3301      	adds	r3, #1
10044174:	781b      	ldrb	r3, [r3, #0]
10044176:	b21a      	sxth	r2, r3
10044178:	683b      	ldr	r3, [r7, #0]
1004417a:	3302      	adds	r3, #2
1004417c:	781b      	ldrb	r3, [r3, #0]
1004417e:	021b      	lsls	r3, r3, #8
10044180:	b21b      	sxth	r3, r3
10044182:	4313      	orrs	r3, r2
10044184:	b21a      	sxth	r2, r3
10044186:	193b      	adds	r3, r7, r4
10044188:	801a      	strh	r2, [r3, #0]
1004418a:	e003      	b.n	10044194 <ping_resp_cb+0x60>
  }
  else
  {
    status = 1;
1004418c:	230f      	movs	r3, #15
1004418e:	18fb      	adds	r3, r7, r3
10044190:	2201      	movs	r2, #1
10044192:	701a      	strb	r2, [r3, #0]
  }
  
  printf("+STATE:%02X,%02X,%d,%d\r\n", group_id, esl_id, status, basic_state);
10044194:	1dfb      	adds	r3, r7, #7
10044196:	7819      	ldrb	r1, [r3, #0]
10044198:	1dbb      	adds	r3, r7, #6
1004419a:	781a      	ldrb	r2, [r3, #0]
1004419c:	230f      	movs	r3, #15
1004419e:	18fb      	adds	r3, r7, r3
100441a0:	781c      	ldrb	r4, [r3, #0]
100441a2:	230c      	movs	r3, #12
100441a4:	18fb      	adds	r3, r7, r3
100441a6:	881b      	ldrh	r3, [r3, #0]
100441a8:	4804      	ldr	r0, [pc, #16]	@ (100441bc <ping_resp_cb+0x88>)
100441aa:	9300      	str	r3, [sp, #0]
100441ac:	0023      	movs	r3, r4
100441ae:	f027 fa9b 	bl	1006b6e8 <iprintf>
}
100441b2:	46c0      	nop			@ (mov r8, r8)
100441b4:	46bd      	mov	sp, r7
100441b6:	b005      	add	sp, #20
100441b8:	bd90      	pop	{r4, r7, pc}
100441ba:	46c0      	nop			@ (mov r8, r8)
100441bc:	1006e450 	.word	0x1006e450

100441c0 <led_resp_cb>:

static void led_resp_cb(uint8_t group_id, uint8_t esl_id, uint8_t *resp)
{
100441c0:	b580      	push	{r7, lr}
100441c2:	b084      	sub	sp, #16
100441c4:	af00      	add	r7, sp, #0
100441c6:	603a      	str	r2, [r7, #0]
100441c8:	1dfb      	adds	r3, r7, #7
100441ca:	1c02      	adds	r2, r0, #0
100441cc:	701a      	strb	r2, [r3, #0]
100441ce:	1dbb      	adds	r3, r7, #6
100441d0:	1c0a      	adds	r2, r1, #0
100441d2:	701a      	strb	r2, [r3, #0]
  uint8_t status;
  
  print_esl_resp(group_id, esl_id, resp);
100441d4:	683a      	ldr	r2, [r7, #0]
100441d6:	1dbb      	adds	r3, r7, #6
100441d8:	7819      	ldrb	r1, [r3, #0]
100441da:	1dfb      	adds	r3, r7, #7
100441dc:	781b      	ldrb	r3, [r3, #0]
100441de:	0018      	movs	r0, r3
100441e0:	f7ff ff6c 	bl	100440bc <print_esl_resp>
  
  if(resp[0] == ESL_RESP_LED_STATE)
100441e4:	683b      	ldr	r3, [r7, #0]
100441e6:	781b      	ldrb	r3, [r3, #0]
100441e8:	2b01      	cmp	r3, #1
100441ea:	d104      	bne.n	100441f6 <led_resp_cb+0x36>
  {
    status = 0;
100441ec:	230f      	movs	r3, #15
100441ee:	18fb      	adds	r3, r7, r3
100441f0:	2200      	movs	r2, #0
100441f2:	701a      	strb	r2, [r3, #0]
100441f4:	e003      	b.n	100441fe <led_resp_cb+0x3e>
  }
  else
  {
    status = 1;
100441f6:	230f      	movs	r3, #15
100441f8:	18fb      	adds	r3, r7, r3
100441fa:	2201      	movs	r2, #1
100441fc:	701a      	strb	r2, [r3, #0]
  }
  
  printf("+LED:%02X,%02X,%d\r\n", group_id, esl_id, status);
100441fe:	1dfb      	adds	r3, r7, #7
10044200:	7819      	ldrb	r1, [r3, #0]
10044202:	1dbb      	adds	r3, r7, #6
10044204:	781a      	ldrb	r2, [r3, #0]
10044206:	230f      	movs	r3, #15
10044208:	18fb      	adds	r3, r7, r3
1004420a:	781b      	ldrb	r3, [r3, #0]
1004420c:	4803      	ldr	r0, [pc, #12]	@ (1004421c <led_resp_cb+0x5c>)
1004420e:	f027 fa6b 	bl	1006b6e8 <iprintf>
}
10044212:	46c0      	nop			@ (mov r8, r8)
10044214:	46bd      	mov	sp, r7
10044216:	b004      	add	sp, #16
10044218:	bd80      	pop	{r7, pc}
1004421a:	46c0      	nop			@ (mov r8, r8)
1004421c:	1006e46c 	.word	0x1006e46c

10044220 <txt_resp_cb>:

static void txt_resp_cb(uint8_t group_id, uint8_t esl_id, uint8_t *resp)
{
10044220:	b580      	push	{r7, lr}
10044222:	b084      	sub	sp, #16
10044224:	af00      	add	r7, sp, #0
10044226:	603a      	str	r2, [r7, #0]
10044228:	1dfb      	adds	r3, r7, #7
1004422a:	1c02      	adds	r2, r0, #0
1004422c:	701a      	strb	r2, [r3, #0]
1004422e:	1dbb      	adds	r3, r7, #6
10044230:	1c0a      	adds	r2, r1, #0
10044232:	701a      	strb	r2, [r3, #0]
  uint8_t status;
  
  print_esl_resp(group_id, esl_id, resp);
10044234:	683a      	ldr	r2, [r7, #0]
10044236:	1dbb      	adds	r3, r7, #6
10044238:	7819      	ldrb	r1, [r3, #0]
1004423a:	1dfb      	adds	r3, r7, #7
1004423c:	781b      	ldrb	r3, [r3, #0]
1004423e:	0018      	movs	r0, r3
10044240:	f7ff ff3c 	bl	100440bc <print_esl_resp>
  
  if(resp[0] == ESL_RESP_VS_OK)
10044244:	683b      	ldr	r3, [r7, #0]
10044246:	781b      	ldrb	r3, [r3, #0]
10044248:	2b0f      	cmp	r3, #15
1004424a:	d104      	bne.n	10044256 <txt_resp_cb+0x36>
  {
    status = 0;
1004424c:	230f      	movs	r3, #15
1004424e:	18fb      	adds	r3, r7, r3
10044250:	2200      	movs	r2, #0
10044252:	701a      	strb	r2, [r3, #0]
10044254:	e003      	b.n	1004425e <txt_resp_cb+0x3e>
  }
  else
  {
    status = 1;
10044256:	230f      	movs	r3, #15
10044258:	18fb      	adds	r3, r7, r3
1004425a:	2201      	movs	r2, #1
1004425c:	701a      	strb	r2, [r3, #0]
  }
  
  printf("+TXT:%02X,%02X,%d\r\n", group_id, esl_id, status);
1004425e:	1dfb      	adds	r3, r7, #7
10044260:	7819      	ldrb	r1, [r3, #0]
10044262:	1dbb      	adds	r3, r7, #6
10044264:	781a      	ldrb	r2, [r3, #0]
10044266:	230f      	movs	r3, #15
10044268:	18fb      	adds	r3, r7, r3
1004426a:	781b      	ldrb	r3, [r3, #0]
1004426c:	4803      	ldr	r0, [pc, #12]	@ (1004427c <txt_resp_cb+0x5c>)
1004426e:	f027 fa3b 	bl	1006b6e8 <iprintf>
}
10044272:	46c0      	nop			@ (mov r8, r8)
10044274:	46bd      	mov	sp, r7
10044276:	b004      	add	sp, #16
10044278:	bd80      	pop	{r7, pc}
1004427a:	46c0      	nop			@ (mov r8, r8)
1004427c:	1006e480 	.word	0x1006e480

10044280 <price_resp_cb>:

static void price_resp_cb(uint8_t group_id, uint8_t esl_id, uint8_t *resp)
{
10044280:	b580      	push	{r7, lr}
10044282:	b084      	sub	sp, #16
10044284:	af00      	add	r7, sp, #0
10044286:	603a      	str	r2, [r7, #0]
10044288:	1dfb      	adds	r3, r7, #7
1004428a:	1c02      	adds	r2, r0, #0
1004428c:	701a      	strb	r2, [r3, #0]
1004428e:	1dbb      	adds	r3, r7, #6
10044290:	1c0a      	adds	r2, r1, #0
10044292:	701a      	strb	r2, [r3, #0]
  uint8_t status;
  
  print_esl_resp(group_id, esl_id, resp);
10044294:	683a      	ldr	r2, [r7, #0]
10044296:	1dbb      	adds	r3, r7, #6
10044298:	7819      	ldrb	r1, [r3, #0]
1004429a:	1dfb      	adds	r3, r7, #7
1004429c:	781b      	ldrb	r3, [r3, #0]
1004429e:	0018      	movs	r0, r3
100442a0:	f7ff ff0c 	bl	100440bc <print_esl_resp>
  
  if(resp[0] == ESL_RESP_VS_OK)
100442a4:	683b      	ldr	r3, [r7, #0]
100442a6:	781b      	ldrb	r3, [r3, #0]
100442a8:	2b0f      	cmp	r3, #15
100442aa:	d104      	bne.n	100442b6 <price_resp_cb+0x36>
  {
    status = 0;
100442ac:	230f      	movs	r3, #15
100442ae:	18fb      	adds	r3, r7, r3
100442b0:	2200      	movs	r2, #0
100442b2:	701a      	strb	r2, [r3, #0]
100442b4:	e003      	b.n	100442be <price_resp_cb+0x3e>
  }
  else
  {
    status = 1;
100442b6:	230f      	movs	r3, #15
100442b8:	18fb      	adds	r3, r7, r3
100442ba:	2201      	movs	r2, #1
100442bc:	701a      	strb	r2, [r3, #0]
  }
  
  printf("+PRICE:%02X,%02X,%d\r\n", group_id, esl_id, status);
100442be:	1dfb      	adds	r3, r7, #7
100442c0:	7819      	ldrb	r1, [r3, #0]
100442c2:	1dbb      	adds	r3, r7, #6
100442c4:	781a      	ldrb	r2, [r3, #0]
100442c6:	230f      	movs	r3, #15
100442c8:	18fb      	adds	r3, r7, r3
100442ca:	781b      	ldrb	r3, [r3, #0]
100442cc:	4803      	ldr	r0, [pc, #12]	@ (100442dc <price_resp_cb+0x5c>)
100442ce:	f027 fa0b 	bl	1006b6e8 <iprintf>
}
100442d2:	46c0      	nop			@ (mov r8, r8)
100442d4:	46bd      	mov	sp, r7
100442d6:	b004      	add	sp, #16
100442d8:	bd80      	pop	{r7, pc}
100442da:	46c0      	nop			@ (mov r8, r8)
100442dc:	1006e494 	.word	0x1006e494

100442e0 <batt_resp_cb>:

static void batt_resp_cb(uint8_t group_id, uint8_t esl_id, uint8_t *resp)
{
100442e0:	b5b0      	push	{r4, r5, r7, lr}
100442e2:	b086      	sub	sp, #24
100442e4:	af02      	add	r7, sp, #8
100442e6:	603a      	str	r2, [r7, #0]
100442e8:	1dfb      	adds	r3, r7, #7
100442ea:	1c02      	adds	r2, r0, #0
100442ec:	701a      	strb	r2, [r3, #0]
100442ee:	1dbb      	adds	r3, r7, #6
100442f0:	1c0a      	adds	r2, r1, #0
100442f2:	701a      	strb	r2, [r3, #0]
  uint8_t status;  
  uint8_t resp_param_length;
  uint16_t batt_voltage = 0;
100442f4:	230c      	movs	r3, #12
100442f6:	18fb      	adds	r3, r7, r3
100442f8:	2200      	movs	r2, #0
100442fa:	801a      	strh	r2, [r3, #0]
  uint8_t sensor_index;
  
  resp_param_length =  GET_PARAM_LENGTH_FROM_OPCODE(resp[0]);
100442fc:	683b      	ldr	r3, [r7, #0]
100442fe:	781b      	ldrb	r3, [r3, #0]
10044300:	091b      	lsrs	r3, r3, #4
10044302:	b2da      	uxtb	r2, r3
10044304:	240b      	movs	r4, #11
10044306:	193b      	adds	r3, r7, r4
10044308:	3201      	adds	r2, #1
1004430a:	701a      	strb	r2, [r3, #0]
  sensor_index = resp[1];
1004430c:	250a      	movs	r5, #10
1004430e:	197b      	adds	r3, r7, r5
10044310:	683a      	ldr	r2, [r7, #0]
10044312:	7852      	ldrb	r2, [r2, #1]
10044314:	701a      	strb	r2, [r3, #0]
  
  print_esl_resp(group_id, esl_id, resp);
10044316:	683a      	ldr	r2, [r7, #0]
10044318:	1dbb      	adds	r3, r7, #6
1004431a:	7819      	ldrb	r1, [r3, #0]
1004431c:	1dfb      	adds	r3, r7, #7
1004431e:	781b      	ldrb	r3, [r3, #0]
10044320:	0018      	movs	r0, r3
10044322:	f7ff fecb 	bl	100440bc <print_esl_resp>
  
  if(resp_param_length != 3 || sensor_index != 0)
10044326:	193b      	adds	r3, r7, r4
10044328:	781b      	ldrb	r3, [r3, #0]
1004432a:	2b03      	cmp	r3, #3
1004432c:	d103      	bne.n	10044336 <batt_resp_cb+0x56>
1004432e:	197b      	adds	r3, r7, r5
10044330:	781b      	ldrb	r3, [r3, #0]
10044332:	2b00      	cmp	r3, #0
10044334:	d004      	beq.n	10044340 <batt_resp_cb+0x60>
  {
    status = 1;
10044336:	230f      	movs	r3, #15
10044338:	18fb      	adds	r3, r7, r3
1004433a:	2201      	movs	r2, #1
1004433c:	701a      	strb	r2, [r3, #0]
    goto fail;
1004433e:	e01d      	b.n	1004437c <batt_resp_cb+0x9c>
  }
  
  if((resp[0] & 0x0F) == ESL_RESP_SENSOR_VALUE_TAG_NIBBLE)
10044340:	683b      	ldr	r3, [r7, #0]
10044342:	781b      	ldrb	r3, [r3, #0]
10044344:	001a      	movs	r2, r3
10044346:	230f      	movs	r3, #15
10044348:	4013      	ands	r3, r2
1004434a:	2b0e      	cmp	r3, #14
1004434c:	d112      	bne.n	10044374 <batt_resp_cb+0x94>
  {
    status = 0;
1004434e:	230f      	movs	r3, #15
10044350:	18fb      	adds	r3, r7, r3
10044352:	2200      	movs	r2, #0
10044354:	701a      	strb	r2, [r3, #0]
    batt_voltage = LE_TO_HOST_16(&resp[2]);    
10044356:	683b      	ldr	r3, [r7, #0]
10044358:	3302      	adds	r3, #2
1004435a:	781b      	ldrb	r3, [r3, #0]
1004435c:	b21a      	sxth	r2, r3
1004435e:	683b      	ldr	r3, [r7, #0]
10044360:	3303      	adds	r3, #3
10044362:	781b      	ldrb	r3, [r3, #0]
10044364:	021b      	lsls	r3, r3, #8
10044366:	b21b      	sxth	r3, r3
10044368:	4313      	orrs	r3, r2
1004436a:	b21a      	sxth	r2, r3
1004436c:	230c      	movs	r3, #12
1004436e:	18fb      	adds	r3, r7, r3
10044370:	801a      	strh	r2, [r3, #0]
10044372:	e003      	b.n	1004437c <batt_resp_cb+0x9c>
  }
  else
  {
    status = 1;
10044374:	230f      	movs	r3, #15
10044376:	18fb      	adds	r3, r7, r3
10044378:	2201      	movs	r2, #1
1004437a:	701a      	strb	r2, [r3, #0]
  }
  
fail:
  printf("+BATT:%02X,%02X,%d,%d\r\n", group_id, esl_id, status, batt_voltage);
1004437c:	1dfb      	adds	r3, r7, #7
1004437e:	7819      	ldrb	r1, [r3, #0]
10044380:	1dbb      	adds	r3, r7, #6
10044382:	781a      	ldrb	r2, [r3, #0]
10044384:	230f      	movs	r3, #15
10044386:	18fb      	adds	r3, r7, r3
10044388:	781c      	ldrb	r4, [r3, #0]
1004438a:	230c      	movs	r3, #12
1004438c:	18fb      	adds	r3, r7, r3
1004438e:	881b      	ldrh	r3, [r3, #0]
10044390:	4804      	ldr	r0, [pc, #16]	@ (100443a4 <batt_resp_cb+0xc4>)
10044392:	9300      	str	r3, [sp, #0]
10044394:	0023      	movs	r3, r4
10044396:	f027 f9a7 	bl	1006b6e8 <iprintf>
}
1004439a:	46c0      	nop			@ (mov r8, r8)
1004439c:	46bd      	mov	sp, r7
1004439e:	b004      	add	sp, #16
100443a0:	bdb0      	pop	{r4, r5, r7, pc}
100443a2:	46c0      	nop			@ (mov r8, r8)
100443a4:	1006e4ac 	.word	0x1006e4ac

100443a8 <img_resp_cb>:

static void img_resp_cb(uint8_t group_id, uint8_t esl_id, uint8_t *resp)
{
100443a8:	b590      	push	{r4, r7, lr}
100443aa:	b087      	sub	sp, #28
100443ac:	af02      	add	r7, sp, #8
100443ae:	603a      	str	r2, [r7, #0]
100443b0:	1dfb      	adds	r3, r7, #7
100443b2:	1c02      	adds	r2, r0, #0
100443b4:	701a      	strb	r2, [r3, #0]
100443b6:	1dbb      	adds	r3, r7, #6
100443b8:	1c0a      	adds	r2, r1, #0
100443ba:	701a      	strb	r2, [r3, #0]
  uint8_t status;
  uint8_t img_index = 0;
100443bc:	240e      	movs	r4, #14
100443be:	193b      	adds	r3, r7, r4
100443c0:	2200      	movs	r2, #0
100443c2:	701a      	strb	r2, [r3, #0]
  
  print_esl_resp(group_id, esl_id, resp);
100443c4:	683a      	ldr	r2, [r7, #0]
100443c6:	1dbb      	adds	r3, r7, #6
100443c8:	7819      	ldrb	r1, [r3, #0]
100443ca:	1dfb      	adds	r3, r7, #7
100443cc:	781b      	ldrb	r3, [r3, #0]
100443ce:	0018      	movs	r0, r3
100443d0:	f7ff fe74 	bl	100440bc <print_esl_resp>
  
  if(resp[0] == ESL_RESP_DISPLAY_STATE)
100443d4:	683b      	ldr	r3, [r7, #0]
100443d6:	781b      	ldrb	r3, [r3, #0]
100443d8:	2b11      	cmp	r3, #17
100443da:	d108      	bne.n	100443ee <img_resp_cb+0x46>
  {
    status = 0;
100443dc:	230f      	movs	r3, #15
100443de:	18fb      	adds	r3, r7, r3
100443e0:	2200      	movs	r2, #0
100443e2:	701a      	strb	r2, [r3, #0]
    img_index = resp[2];
100443e4:	193b      	adds	r3, r7, r4
100443e6:	683a      	ldr	r2, [r7, #0]
100443e8:	7892      	ldrb	r2, [r2, #2]
100443ea:	701a      	strb	r2, [r3, #0]
100443ec:	e003      	b.n	100443f6 <img_resp_cb+0x4e>
  }
  else
  {
    status = 1;
100443ee:	230f      	movs	r3, #15
100443f0:	18fb      	adds	r3, r7, r3
100443f2:	2201      	movs	r2, #1
100443f4:	701a      	strb	r2, [r3, #0]
  }
  
  printf("+IMG:%02X,%02X,%d,%d\r\n", group_id, esl_id, status, img_index);
100443f6:	1dfb      	adds	r3, r7, #7
100443f8:	7819      	ldrb	r1, [r3, #0]
100443fa:	1dbb      	adds	r3, r7, #6
100443fc:	781a      	ldrb	r2, [r3, #0]
100443fe:	230f      	movs	r3, #15
10044400:	18fb      	adds	r3, r7, r3
10044402:	781c      	ldrb	r4, [r3, #0]
10044404:	230e      	movs	r3, #14
10044406:	18fb      	adds	r3, r7, r3
10044408:	781b      	ldrb	r3, [r3, #0]
1004440a:	4804      	ldr	r0, [pc, #16]	@ (1004441c <img_resp_cb+0x74>)
1004440c:	9300      	str	r3, [sp, #0]
1004440e:	0023      	movs	r3, r4
10044410:	f027 f96a 	bl	1006b6e8 <iprintf>
}
10044414:	46c0      	nop			@ (mov r8, r8)
10044416:	46bd      	mov	sp, r7
10044418:	b005      	add	sp, #20
1004441a:	bd90      	pop	{r4, r7, pc}
1004441c:	1006e4c4 	.word	0x1006e4c4

10044420 <parse_cmd>:

static int parse_cmd(void)
{
10044420:	b590      	push	{r4, r7, lr}
10044422:	b0a1      	sub	sp, #132	@ 0x84
10044424:	af02      	add	r7, sp, #8
  uint32_t group_id, esl_id;
  
  if(strncasecmp((char *)CommandString, "ATE", 3) == 0)
10044426:	499e      	ldr	r1, [pc, #632]	@ (100446a0 <parse_cmd+0x280>)
10044428:	4b9e      	ldr	r3, [pc, #632]	@ (100446a4 <parse_cmd+0x284>)
1004442a:	2203      	movs	r2, #3
1004442c:	0018      	movs	r0, r3
1004442e:	f027 fbb7 	bl	1006bba0 <strncasecmp>
10044432:	1e03      	subs	r3, r0, #0
10044434:	d113      	bne.n	1004445e <parse_cmd+0x3e>
  {
    uint32_t echo = 1;
10044436:	2301      	movs	r3, #1
10044438:	657b      	str	r3, [r7, #84]	@ 0x54
    
    sscanf((char*)CommandString + 3, "%x", &echo);
1004443a:	4b9b      	ldr	r3, [pc, #620]	@ (100446a8 <parse_cmd+0x288>)
1004443c:	2254      	movs	r2, #84	@ 0x54
1004443e:	18ba      	adds	r2, r7, r2
10044440:	499a      	ldr	r1, [pc, #616]	@ (100446ac <parse_cmd+0x28c>)
10044442:	0018      	movs	r0, r3
10044444:	f027 fa80 	bl	1006b948 <siscanf>
    if(echo > 1)
10044448:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
1004444a:	2b01      	cmp	r3, #1
1004444c:	d901      	bls.n	10044452 <parse_cmd+0x32>
    {
      return 1;
1004444e:	2301      	movs	r3, #1
10044450:	e121      	b.n	10044696 <parse_cmd+0x276>
    }
    else
    {
      echo_mode = echo;
10044452:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
10044454:	b2da      	uxtb	r2, r3
10044456:	4b96      	ldr	r3, [pc, #600]	@ (100446b0 <parse_cmd+0x290>)
10044458:	701a      	strb	r2, [r3, #0]
      
      return 0;
1004445a:	2300      	movs	r3, #0
1004445c:	e11b      	b.n	10044696 <parse_cmd+0x276>
    }
  }
  else if(strncasecmp((char *)CommandString, "AT+PING=", 8) == 0)
1004445e:	4995      	ldr	r1, [pc, #596]	@ (100446b4 <parse_cmd+0x294>)
10044460:	4b90      	ldr	r3, [pc, #576]	@ (100446a4 <parse_cmd+0x284>)
10044462:	2208      	movs	r2, #8
10044464:	0018      	movs	r0, r3
10044466:	f027 fb9b 	bl	1006bba0 <strncasecmp>
1004446a:	1e03      	subs	r3, r0, #0
1004446c:	d11f      	bne.n	100444ae <parse_cmd+0x8e>
  {
    int ret;
    
    ret = sscanf((char*)CommandString + 8, "%x,%x", &group_id, &esl_id);
1004446e:	4892      	ldr	r0, [pc, #584]	@ (100446b8 <parse_cmd+0x298>)
10044470:	2358      	movs	r3, #88	@ 0x58
10044472:	18fb      	adds	r3, r7, r3
10044474:	225c      	movs	r2, #92	@ 0x5c
10044476:	18ba      	adds	r2, r7, r2
10044478:	4990      	ldr	r1, [pc, #576]	@ (100446bc <parse_cmd+0x29c>)
1004447a:	f027 fa65 	bl	1006b948 <siscanf>
1004447e:	0003      	movs	r3, r0
10044480:	663b      	str	r3, [r7, #96]	@ 0x60
    if(ret != 2 || group_id >= MAX_GROUPS)
10044482:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
10044484:	2b02      	cmp	r3, #2
10044486:	d102      	bne.n	1004448e <parse_cmd+0x6e>
10044488:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
1004448a:	2b03      	cmp	r3, #3
1004448c:	d901      	bls.n	10044492 <parse_cmd+0x72>
    {
      return 1;
1004448e:	2301      	movs	r3, #1
10044490:	e101      	b.n	10044696 <parse_cmd+0x276>
    }
    else
    {
      if(ESL_AP_cmd_ping(group_id, esl_id, ping_resp_cb) == 0)
10044492:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
10044494:	b2db      	uxtb	r3, r3
10044496:	6dba      	ldr	r2, [r7, #88]	@ 0x58
10044498:	b2d1      	uxtb	r1, r2
1004449a:	4a89      	ldr	r2, [pc, #548]	@ (100446c0 <parse_cmd+0x2a0>)
1004449c:	0018      	movs	r0, r3
1004449e:	f7ff f9e5 	bl	1004386c <ESL_AP_cmd_ping>
100444a2:	1e03      	subs	r3, r0, #0
100444a4:	d101      	bne.n	100444aa <parse_cmd+0x8a>
      {
        return 0;
100444a6:	2300      	movs	r3, #0
100444a8:	e0f5      	b.n	10044696 <parse_cmd+0x276>
      }
      else
      {
        return 1;
100444aa:	2301      	movs	r3, #1
100444ac:	e0f3      	b.n	10044696 <parse_cmd+0x276>
      }
    }
  }
  else if(strncasecmp((char *)CommandString, "AT+IMG=", 7) == 0)
100444ae:	4985      	ldr	r1, [pc, #532]	@ (100446c4 <parse_cmd+0x2a4>)
100444b0:	4b7c      	ldr	r3, [pc, #496]	@ (100446a4 <parse_cmd+0x284>)
100444b2:	2207      	movs	r2, #7
100444b4:	0018      	movs	r0, r3
100444b6:	f027 fb73 	bl	1006bba0 <strncasecmp>
100444ba:	1e03      	subs	r3, r0, #0
100444bc:	d126      	bne.n	1004450c <parse_cmd+0xec>
  {
    uint32_t image_index;
    int ret;
    
    ret = sscanf((char*)CommandString + 7, "%x,%x,%x", &group_id, &esl_id, &image_index);
100444be:	4882      	ldr	r0, [pc, #520]	@ (100446c8 <parse_cmd+0x2a8>)
100444c0:	2358      	movs	r3, #88	@ 0x58
100444c2:	18fc      	adds	r4, r7, r3
100444c4:	235c      	movs	r3, #92	@ 0x5c
100444c6:	18fa      	adds	r2, r7, r3
100444c8:	4980      	ldr	r1, [pc, #512]	@ (100446cc <parse_cmd+0x2ac>)
100444ca:	2350      	movs	r3, #80	@ 0x50
100444cc:	18fb      	adds	r3, r7, r3
100444ce:	9300      	str	r3, [sp, #0]
100444d0:	0023      	movs	r3, r4
100444d2:	f027 fa39 	bl	1006b948 <siscanf>
100444d6:	0003      	movs	r3, r0
100444d8:	667b      	str	r3, [r7, #100]	@ 0x64
    if(ret != 3 || group_id >= MAX_GROUPS)
100444da:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
100444dc:	2b03      	cmp	r3, #3
100444de:	d102      	bne.n	100444e6 <parse_cmd+0xc6>
100444e0:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
100444e2:	2b03      	cmp	r3, #3
100444e4:	d901      	bls.n	100444ea <parse_cmd+0xca>
    {
      return 1;
100444e6:	2301      	movs	r3, #1
100444e8:	e0d5      	b.n	10044696 <parse_cmd+0x276>
    }
    else
    {
      if(ESL_AP_cmd_display_image(group_id, esl_id, img_resp_cb, 0, image_index) == 0)
100444ea:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
100444ec:	b2d8      	uxtb	r0, r3
100444ee:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
100444f0:	b2d9      	uxtb	r1, r3
100444f2:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
100444f4:	b2db      	uxtb	r3, r3
100444f6:	4a76      	ldr	r2, [pc, #472]	@ (100446d0 <parse_cmd+0x2b0>)
100444f8:	9300      	str	r3, [sp, #0]
100444fa:	2300      	movs	r3, #0
100444fc:	f7ff fb85 	bl	10043c0a <ESL_AP_cmd_display_image>
10044500:	1e03      	subs	r3, r0, #0
10044502:	d101      	bne.n	10044508 <parse_cmd+0xe8>
      {
        return 0;
10044504:	2300      	movs	r3, #0
10044506:	e0c6      	b.n	10044696 <parse_cmd+0x276>
      }
      else
      {
        return 1;
10044508:	2301      	movs	r3, #1
1004450a:	e0c4      	b.n	10044696 <parse_cmd+0x276>
      }
    }
  }
  else if (strncasecmp((char *)CommandString, "AT+LED=", 7) == 0)
1004450c:	4971      	ldr	r1, [pc, #452]	@ (100446d4 <parse_cmd+0x2b4>)
1004450e:	4b65      	ldr	r3, [pc, #404]	@ (100446a4 <parse_cmd+0x284>)
10044510:	2207      	movs	r2, #7
10044512:	0018      	movs	r0, r3
10044514:	f027 fb44 	bl	1006bba0 <strncasecmp>
10044518:	1e03      	subs	r3, r0, #0
1004451a:	d129      	bne.n	10044570 <parse_cmd+0x150>
  {
    uint32_t led_status;
    int ret;
    
    ret = sscanf((char*)CommandString + 7, "%x,%x,%u", &group_id, &esl_id, &led_status);
1004451c:	486a      	ldr	r0, [pc, #424]	@ (100446c8 <parse_cmd+0x2a8>)
1004451e:	2358      	movs	r3, #88	@ 0x58
10044520:	18fc      	adds	r4, r7, r3
10044522:	235c      	movs	r3, #92	@ 0x5c
10044524:	18fa      	adds	r2, r7, r3
10044526:	496c      	ldr	r1, [pc, #432]	@ (100446d8 <parse_cmd+0x2b8>)
10044528:	234c      	movs	r3, #76	@ 0x4c
1004452a:	18fb      	adds	r3, r7, r3
1004452c:	9300      	str	r3, [sp, #0]
1004452e:	0023      	movs	r3, r4
10044530:	f027 fa0a 	bl	1006b948 <siscanf>
10044534:	0003      	movs	r3, r0
10044536:	66bb      	str	r3, [r7, #104]	@ 0x68
    if(ret != 3 || group_id >= MAX_GROUPS || led_status > 2)
10044538:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
1004453a:	2b03      	cmp	r3, #3
1004453c:	d105      	bne.n	1004454a <parse_cmd+0x12a>
1004453e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
10044540:	2b03      	cmp	r3, #3
10044542:	d802      	bhi.n	1004454a <parse_cmd+0x12a>
10044544:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10044546:	2b02      	cmp	r3, #2
10044548:	d901      	bls.n	1004454e <parse_cmd+0x12e>
    {
      return 1;
1004454a:	2301      	movs	r3, #1
1004454c:	e0a3      	b.n	10044696 <parse_cmd+0x276>
    }
    else
    {
      if(ESL_AP_cmd_led_control(group_id, esl_id, led_resp_cb, 0, led_status) == 0)
1004454e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
10044550:	b2d8      	uxtb	r0, r3
10044552:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
10044554:	b2d9      	uxtb	r1, r3
10044556:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10044558:	b2db      	uxtb	r3, r3
1004455a:	4a60      	ldr	r2, [pc, #384]	@ (100446dc <parse_cmd+0x2bc>)
1004455c:	9300      	str	r3, [sp, #0]
1004455e:	2300      	movs	r3, #0
10044560:	f7ff fa36 	bl	100439d0 <ESL_AP_cmd_led_control>
10044564:	1e03      	subs	r3, r0, #0
10044566:	d101      	bne.n	1004456c <parse_cmd+0x14c>
      {
        return 0;
10044568:	2300      	movs	r3, #0
1004456a:	e094      	b.n	10044696 <parse_cmd+0x276>
      }
      else
      {
        return 1;
1004456c:	2301      	movs	r3, #1
1004456e:	e092      	b.n	10044696 <parse_cmd+0x276>
      }
    }
  }
  else if (strncasecmp((char *)CommandString, "AT+TXT=", 7) == 0)
10044570:	495b      	ldr	r1, [pc, #364]	@ (100446e0 <parse_cmd+0x2c0>)
10044572:	4b4c      	ldr	r3, [pc, #304]	@ (100446a4 <parse_cmd+0x284>)
10044574:	2207      	movs	r2, #7
10044576:	0018      	movs	r0, r3
10044578:	f027 fb12 	bl	1006bba0 <strncasecmp>
1004457c:	1e03      	subs	r3, r0, #0
1004457e:	d122      	bne.n	100445c6 <parse_cmd+0x1a6>
  {
    char text[61];
    int ret;
    
    ret = sscanf((char*)CommandString + 7, "%x,%x,%[^\t\r\n]", &group_id, &esl_id, text);
10044580:	4851      	ldr	r0, [pc, #324]	@ (100446c8 <parse_cmd+0x2a8>)
10044582:	2358      	movs	r3, #88	@ 0x58
10044584:	18fc      	adds	r4, r7, r3
10044586:	235c      	movs	r3, #92	@ 0x5c
10044588:	18fa      	adds	r2, r7, r3
1004458a:	4956      	ldr	r1, [pc, #344]	@ (100446e4 <parse_cmd+0x2c4>)
1004458c:	1d3b      	adds	r3, r7, #4
1004458e:	9300      	str	r3, [sp, #0]
10044590:	0023      	movs	r3, r4
10044592:	f027 f9d9 	bl	1006b948 <siscanf>
10044596:	0003      	movs	r3, r0
10044598:	66fb      	str	r3, [r7, #108]	@ 0x6c
    if(ret != 3 || group_id >= MAX_GROUPS)
1004459a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
1004459c:	2b03      	cmp	r3, #3
1004459e:	d102      	bne.n	100445a6 <parse_cmd+0x186>
100445a0:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
100445a2:	2b03      	cmp	r3, #3
100445a4:	d901      	bls.n	100445aa <parse_cmd+0x18a>
    {
      return 1;
100445a6:	2301      	movs	r3, #1
100445a8:	e075      	b.n	10044696 <parse_cmd+0x276>
    }
    else
    {
      if(ESL_AP_cmd_txt(group_id, esl_id, txt_resp_cb, text) == 0)
100445aa:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
100445ac:	b2d8      	uxtb	r0, r3
100445ae:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
100445b0:	b2d9      	uxtb	r1, r3
100445b2:	1d3b      	adds	r3, r7, #4
100445b4:	4a4c      	ldr	r2, [pc, #304]	@ (100446e8 <parse_cmd+0x2c8>)
100445b6:	f7ff fa66 	bl	10043a86 <ESL_AP_cmd_txt>
100445ba:	1e03      	subs	r3, r0, #0
100445bc:	d101      	bne.n	100445c2 <parse_cmd+0x1a2>
      {
        return 0;
100445be:	2300      	movs	r3, #0
100445c0:	e069      	b.n	10044696 <parse_cmd+0x276>
      }
      else
      {
        return 1;
100445c2:	2301      	movs	r3, #1
100445c4:	e067      	b.n	10044696 <parse_cmd+0x276>
      }
    }
  }
  else if (strncasecmp((char *)CommandString, "AT+PRICE=", 9) == 0)
100445c6:	4949      	ldr	r1, [pc, #292]	@ (100446ec <parse_cmd+0x2cc>)
100445c8:	4b36      	ldr	r3, [pc, #216]	@ (100446a4 <parse_cmd+0x284>)
100445ca:	2209      	movs	r2, #9
100445cc:	0018      	movs	r0, r3
100445ce:	f027 fae7 	bl	1006bba0 <strncasecmp>
100445d2:	1e03      	subs	r3, r0, #0
100445d4:	d133      	bne.n	1004463e <parse_cmd+0x21e>
  {
    uint32_t val_int, val_fract;
    int ret;
    
    ret = sscanf((char*)CommandString + 9, "%x,%x,%u.%u", &group_id, &esl_id, &val_int, &val_fract);
100445d6:	4846      	ldr	r0, [pc, #280]	@ (100446f0 <parse_cmd+0x2d0>)
100445d8:	2358      	movs	r3, #88	@ 0x58
100445da:	18fc      	adds	r4, r7, r3
100445dc:	235c      	movs	r3, #92	@ 0x5c
100445de:	18fa      	adds	r2, r7, r3
100445e0:	4944      	ldr	r1, [pc, #272]	@ (100446f4 <parse_cmd+0x2d4>)
100445e2:	2344      	movs	r3, #68	@ 0x44
100445e4:	18fb      	adds	r3, r7, r3
100445e6:	9301      	str	r3, [sp, #4]
100445e8:	2348      	movs	r3, #72	@ 0x48
100445ea:	18fb      	adds	r3, r7, r3
100445ec:	9300      	str	r3, [sp, #0]
100445ee:	0023      	movs	r3, r4
100445f0:	f027 f9aa 	bl	1006b948 <siscanf>
100445f4:	0003      	movs	r3, r0
100445f6:	673b      	str	r3, [r7, #112]	@ 0x70
    if(ret != 4 || group_id >= MAX_GROUPS || val_int > 999 || val_fract > 99)
100445f8:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
100445fa:	2b04      	cmp	r3, #4
100445fc:	d10a      	bne.n	10044614 <parse_cmd+0x1f4>
100445fe:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
10044600:	2b03      	cmp	r3, #3
10044602:	d807      	bhi.n	10044614 <parse_cmd+0x1f4>
10044604:	6cba      	ldr	r2, [r7, #72]	@ 0x48
10044606:	23fa      	movs	r3, #250	@ 0xfa
10044608:	009b      	lsls	r3, r3, #2
1004460a:	429a      	cmp	r2, r3
1004460c:	d202      	bcs.n	10044614 <parse_cmd+0x1f4>
1004460e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10044610:	2b63      	cmp	r3, #99	@ 0x63
10044612:	d901      	bls.n	10044618 <parse_cmd+0x1f8>
    {
      return 1;
10044614:	2301      	movs	r3, #1
10044616:	e03e      	b.n	10044696 <parse_cmd+0x276>
    }
    else
    {
      if(ESL_AP_cmd_price(group_id, esl_id, price_resp_cb, val_int, val_fract) == 0)
10044618:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
1004461a:	b2d8      	uxtb	r0, r3
1004461c:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
1004461e:	b2d9      	uxtb	r1, r3
10044620:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
10044622:	b29c      	uxth	r4, r3
10044624:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10044626:	b2db      	uxtb	r3, r3
10044628:	4a33      	ldr	r2, [pc, #204]	@ (100446f8 <parse_cmd+0x2d8>)
1004462a:	9300      	str	r3, [sp, #0]
1004462c:	0023      	movs	r3, r4
1004462e:	f7ff fa81 	bl	10043b34 <ESL_AP_cmd_price>
10044632:	1e03      	subs	r3, r0, #0
10044634:	d101      	bne.n	1004463a <parse_cmd+0x21a>
      {
        return 0;
10044636:	2300      	movs	r3, #0
10044638:	e02d      	b.n	10044696 <parse_cmd+0x276>
      }
      else
      {
        return 1;
1004463a:	2301      	movs	r3, #1
1004463c:	e02b      	b.n	10044696 <parse_cmd+0x276>
      }
    }
  }
  else if (strncasecmp((char *)CommandString, "AT+BATT=", 8) == 0)
1004463e:	492f      	ldr	r1, [pc, #188]	@ (100446fc <parse_cmd+0x2dc>)
10044640:	4b18      	ldr	r3, [pc, #96]	@ (100446a4 <parse_cmd+0x284>)
10044642:	2208      	movs	r2, #8
10044644:	0018      	movs	r0, r3
10044646:	f027 faab 	bl	1006bba0 <strncasecmp>
1004464a:	1e03      	subs	r3, r0, #0
1004464c:	d122      	bne.n	10044694 <parse_cmd+0x274>
  {
    int ret;
    
    ret = sscanf((char*)CommandString + 8, "%x,%x", &group_id, &esl_id);
1004464e:	481a      	ldr	r0, [pc, #104]	@ (100446b8 <parse_cmd+0x298>)
10044650:	2358      	movs	r3, #88	@ 0x58
10044652:	18fb      	adds	r3, r7, r3
10044654:	225c      	movs	r2, #92	@ 0x5c
10044656:	18ba      	adds	r2, r7, r2
10044658:	4918      	ldr	r1, [pc, #96]	@ (100446bc <parse_cmd+0x29c>)
1004465a:	f027 f975 	bl	1006b948 <siscanf>
1004465e:	0003      	movs	r3, r0
10044660:	677b      	str	r3, [r7, #116]	@ 0x74
    if(ret != 2 || group_id >= MAX_GROUPS || esl_id == 0xFF)
10044662:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
10044664:	2b02      	cmp	r3, #2
10044666:	d105      	bne.n	10044674 <parse_cmd+0x254>
10044668:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
1004466a:	2b03      	cmp	r3, #3
1004466c:	d802      	bhi.n	10044674 <parse_cmd+0x254>
1004466e:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
10044670:	2bff      	cmp	r3, #255	@ 0xff
10044672:	d101      	bne.n	10044678 <parse_cmd+0x258>
    {
      return 1;
10044674:	2301      	movs	r3, #1
10044676:	e00e      	b.n	10044696 <parse_cmd+0x276>
    }
    else
    {
      if(ESL_AP_cmd_read_sensor_data(group_id, esl_id, batt_resp_cb, 0) == 0)
10044678:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
1004467a:	b2d8      	uxtb	r0, r3
1004467c:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
1004467e:	b2d9      	uxtb	r1, r3
10044680:	4a1f      	ldr	r2, [pc, #124]	@ (10044700 <parse_cmd+0x2e0>)
10044682:	2300      	movs	r3, #0
10044684:	f7ff fa93 	bl	10043bae <ESL_AP_cmd_read_sensor_data>
10044688:	1e03      	subs	r3, r0, #0
1004468a:	d101      	bne.n	10044690 <parse_cmd+0x270>
      {
        return 0;
1004468c:	2300      	movs	r3, #0
1004468e:	e002      	b.n	10044696 <parse_cmd+0x276>
      }
      else
      {      
        return 1;
10044690:	2301      	movs	r3, #1
10044692:	e000      	b.n	10044696 <parse_cmd+0x276>
      }
    }
  }
  
  return 1;
10044694:	2301      	movs	r3, #1
  
}
10044696:	0018      	movs	r0, r3
10044698:	46bd      	mov	sp, r7
1004469a:	b01f      	add	sp, #124	@ 0x7c
1004469c:	bd90      	pop	{r4, r7, pc}
1004469e:	46c0      	nop			@ (mov r8, r8)
100446a0:	1006e4dc 	.word	0x1006e4dc
100446a4:	200003dc 	.word	0x200003dc
100446a8:	200003df 	.word	0x200003df
100446ac:	1006e4e0 	.word	0x1006e4e0
100446b0:	200004de 	.word	0x200004de
100446b4:	1006e4e4 	.word	0x1006e4e4
100446b8:	200003e4 	.word	0x200003e4
100446bc:	1006e4f0 	.word	0x1006e4f0
100446c0:	10044135 	.word	0x10044135
100446c4:	1006e4f8 	.word	0x1006e4f8
100446c8:	200003e3 	.word	0x200003e3
100446cc:	1006e500 	.word	0x1006e500
100446d0:	100443a9 	.word	0x100443a9
100446d4:	1006e50c 	.word	0x1006e50c
100446d8:	1006e514 	.word	0x1006e514
100446dc:	100441c1 	.word	0x100441c1
100446e0:	1006e520 	.word	0x1006e520
100446e4:	1006e528 	.word	0x1006e528
100446e8:	10044221 	.word	0x10044221
100446ec:	1006e538 	.word	0x1006e538
100446f0:	200003e5 	.word	0x200003e5
100446f4:	1006e544 	.word	0x1006e544
100446f8:	10044281 	.word	0x10044281
100446fc:	1006e550 	.word	0x1006e550
10044700:	100442e1 	.word	0x100442e1

10044704 <UART_CMD_Process>:

void UART_CMD_Process(void)
{
10044704:	b580      	push	{r7, lr}
10044706:	af00      	add	r7, sp, #0
  if(parse_cmd() == 0)
10044708:	f7ff fe8a 	bl	10044420 <parse_cmd>
1004470c:	1e03      	subs	r3, r0, #0
1004470e:	d104      	bne.n	1004471a <UART_CMD_Process+0x16>
  {
    printf("OK\r\n");
10044710:	4b08      	ldr	r3, [pc, #32]	@ (10044734 <UART_CMD_Process+0x30>)
10044712:	0018      	movs	r0, r3
10044714:	f027 f858 	bl	1006b7c8 <puts>
10044718:	e003      	b.n	10044722 <UART_CMD_Process+0x1e>
  }
  else
  {
    printf("ERROR\r\n");
1004471a:	4b07      	ldr	r3, [pc, #28]	@ (10044738 <UART_CMD_Process+0x34>)
1004471c:	0018      	movs	r0, r3
1004471e:	f027 f853 	bl	1006b7c8 <puts>
  }
  
  indexReceiveChar = 0;
10044722:	4b06      	ldr	r3, [pc, #24]	@ (1004473c <UART_CMD_Process+0x38>)
10044724:	2200      	movs	r2, #0
10044726:	801a      	strh	r2, [r3, #0]
  
  buff_lock = 0;
10044728:	4b05      	ldr	r3, [pc, #20]	@ (10044740 <UART_CMD_Process+0x3c>)
1004472a:	2200      	movs	r2, #0
1004472c:	701a      	strb	r2, [r3, #0]
}
1004472e:	46c0      	nop			@ (mov r8, r8)
10044730:	46bd      	mov	sp, r7
10044732:	bd80      	pop	{r7, pc}
10044734:	1006e55c 	.word	0x1006e55c
10044738:	1006e560 	.word	0x1006e560
1004473c:	200004dc 	.word	0x200004dc
10044740:	200004df 	.word	0x200004df

10044744 <BLENVM_Init>:
/** @defgroup NVM_UpperLayer_Public_Functions Public Functions
 * @{
 */

void BLENVM_Init(void)
{
10044744:	b580      	push	{r7, lr}
10044746:	af00      	add	r7, sp, #0
  NVMDB_Init();
10044748:	f003 fc20 	bl	10047f8c <NVMDB_Init>

  NVMDB_HandleInit(SEC_GATT_BD, &sec_gatt_db_h);
1004474c:	4b07      	ldr	r3, [pc, #28]	@ (1004476c <BLENVM_Init+0x28>)
1004474e:	0019      	movs	r1, r3
10044750:	2000      	movs	r0, #0
10044752:	f003 fd79 	bl	10048248 <NVMDB_HandleInit>
  NVMDB_HandleInit(DEVICE_ID_DB, &device_id_db_h);
10044756:	4b06      	ldr	r3, [pc, #24]	@ (10044770 <BLENVM_Init+0x2c>)
10044758:	0019      	movs	r1, r3
1004475a:	2001      	movs	r0, #1
1004475c:	f003 fd74 	bl	10048248 <NVMDB_HandleInit>
  curr_handle_p = &sec_gatt_db_h;
10044760:	4b04      	ldr	r3, [pc, #16]	@ (10044774 <BLENVM_Init+0x30>)
10044762:	4a02      	ldr	r2, [pc, #8]	@ (1004476c <BLENVM_Init+0x28>)
10044764:	601a      	str	r2, [r3, #0]
}
10044766:	46c0      	nop			@ (mov r8, r8)
10044768:	46bd      	mov	sp, r7
1004476a:	bd80      	pop	{r7, pc}
1004476c:	200004e0 	.word	0x200004e0
10044770:	200004f0 	.word	0x200004f0
10044774:	20000500 	.word	0x20000500

10044778 <BLEPLAT_NvmAdd>:
BLEPLAT_NvmStatusTypeDef BLEPLAT_NvmAdd(BLEPLAT_NvmRecordTypeDef Type,
                                        const uint8_t* pData,
                                        uint16_t Size,
                                        const uint8_t* pExtraData,
                                        uint16_t ExtraSize)
{
10044778:	b5f0      	push	{r4, r5, r6, r7, lr}
1004477a:	b089      	sub	sp, #36	@ 0x24
1004477c:	af02      	add	r7, sp, #8
1004477e:	60b9      	str	r1, [r7, #8]
10044780:	0011      	movs	r1, r2
10044782:	607b      	str	r3, [r7, #4]
10044784:	240f      	movs	r4, #15
10044786:	193b      	adds	r3, r7, r4
10044788:	1c02      	adds	r2, r0, #0
1004478a:	701a      	strb	r2, [r3, #0]
1004478c:	230c      	movs	r3, #12
1004478e:	18fb      	adds	r3, r7, r3
10044790:	1c0a      	adds	r2, r1, #0
10044792:	801a      	strh	r2, [r3, #0]
  NVMDB_status_t ret;

  if(Type == BLEPLAT_NVM_REC_DEVICE_ID)
10044794:	193b      	adds	r3, r7, r4
10044796:	781b      	ldrb	r3, [r3, #0]
10044798:	2b02      	cmp	r3, #2
1004479a:	d103      	bne.n	100447a4 <BLEPLAT_NvmAdd+0x2c>
  {
    curr_handle_p = &device_id_db_h;
1004479c:	4b1a      	ldr	r3, [pc, #104]	@ (10044808 <BLEPLAT_NvmAdd+0x90>)
1004479e:	4a1b      	ldr	r2, [pc, #108]	@ (1004480c <BLEPLAT_NvmAdd+0x94>)
100447a0:	601a      	str	r2, [r3, #0]
100447a2:	e002      	b.n	100447aa <BLEPLAT_NvmAdd+0x32>
  }
  else
  {
    curr_handle_p = &sec_gatt_db_h;
100447a4:	4b18      	ldr	r3, [pc, #96]	@ (10044808 <BLEPLAT_NvmAdd+0x90>)
100447a6:	4a1a      	ldr	r2, [pc, #104]	@ (10044810 <BLEPLAT_NvmAdd+0x98>)
100447a8:	601a      	str	r2, [r3, #0]
  }

  DEBUG_GPIO2_HIGH();

  ret = NVMDB_AppendRecord(curr_handle_p, Type, Size, pData, ExtraSize, pExtraData);
100447aa:	4b17      	ldr	r3, [pc, #92]	@ (10044808 <BLEPLAT_NvmAdd+0x90>)
100447ac:	6818      	ldr	r0, [r3, #0]
100447ae:	2617      	movs	r6, #23
100447b0:	19bc      	adds	r4, r7, r6
100447b2:	68bd      	ldr	r5, [r7, #8]
100447b4:	230c      	movs	r3, #12
100447b6:	18fb      	adds	r3, r7, r3
100447b8:	881b      	ldrh	r3, [r3, #0]
100447ba:	469c      	mov	ip, r3
100447bc:	230f      	movs	r3, #15
100447be:	18fb      	adds	r3, r7, r3
100447c0:	7819      	ldrb	r1, [r3, #0]
100447c2:	687b      	ldr	r3, [r7, #4]
100447c4:	9301      	str	r3, [sp, #4]
100447c6:	2328      	movs	r3, #40	@ 0x28
100447c8:	2208      	movs	r2, #8
100447ca:	189b      	adds	r3, r3, r2
100447cc:	19db      	adds	r3, r3, r7
100447ce:	881b      	ldrh	r3, [r3, #0]
100447d0:	9300      	str	r3, [sp, #0]
100447d2:	002b      	movs	r3, r5
100447d4:	4662      	mov	r2, ip
100447d6:	f003 fdd9 	bl	1004838c <NVMDB_AppendRecord>
100447da:	0003      	movs	r3, r0
100447dc:	7023      	strb	r3, [r4, #0]

  DEBUG_GPIO2_LOW();

  if(ret == NVMDB_STATUS_OK)
100447de:	19bb      	adds	r3, r7, r6
100447e0:	781b      	ldrb	r3, [r3, #0]
100447e2:	2b00      	cmp	r3, #0
100447e4:	d101      	bne.n	100447ea <BLEPLAT_NvmAdd+0x72>
  {
    return BLEPLAT_OK;
100447e6:	2300      	movs	r3, #0
100447e8:	e009      	b.n	100447fe <BLEPLAT_NvmAdd+0x86>
  }

  if(ret == NVMDB_STATUS_FULL_DB)
100447ea:	2317      	movs	r3, #23
100447ec:	18fb      	adds	r3, r7, r3
100447ee:	781b      	ldrb	r3, [r3, #0]
100447f0:	2b02      	cmp	r3, #2
100447f2:	d102      	bne.n	100447fa <BLEPLAT_NvmAdd+0x82>
  {
    return BLEPLAT_FULL;
100447f4:	2301      	movs	r3, #1
100447f6:	425b      	negs	r3, r3
100447f8:	e001      	b.n	100447fe <BLEPLAT_NvmAdd+0x86>
  }

  return BLEPLAT_BUSY;
100447fa:	2302      	movs	r3, #2
100447fc:	425b      	negs	r3, r3
}
100447fe:	0018      	movs	r0, r3
10044800:	46bd      	mov	sp, r7
10044802:	b007      	add	sp, #28
10044804:	bdf0      	pop	{r4, r5, r6, r7, pc}
10044806:	46c0      	nop			@ (mov r8, r8)
10044808:	20000500 	.word	0x20000500
1004480c:	200004f0 	.word	0x200004f0
10044810:	200004e0 	.word	0x200004e0

10044814 <BLEPLAT_NvmGet>:
BLEPLAT_NvmStatusTypeDef BLEPLAT_NvmGet(BLEPLAT_NvmSeekModeTypeDef Mode,
                                        BLEPLAT_NvmRecordTypeDef Type,
                                        uint16_t Offset,
                                        uint8_t* pData,
                                        uint16_t Size)
{
10044814:	b5b0      	push	{r4, r5, r7, lr}
10044816:	b086      	sub	sp, #24
10044818:	af02      	add	r7, sp, #8
1004481a:	0004      	movs	r4, r0
1004481c:	0008      	movs	r0, r1
1004481e:	0011      	movs	r1, r2
10044820:	603b      	str	r3, [r7, #0]
10044822:	1dfb      	adds	r3, r7, #7
10044824:	1c22      	adds	r2, r4, #0
10044826:	701a      	strb	r2, [r3, #0]
10044828:	1dbb      	adds	r3, r7, #6
1004482a:	1c02      	adds	r2, r0, #0
1004482c:	701a      	strb	r2, [r3, #0]
1004482e:	1d3b      	adds	r3, r7, #4
10044830:	1c0a      	adds	r2, r1, #0
10044832:	801a      	strh	r2, [r3, #0]
  NVMDB_RecordSizeType size_out;
  NVMDB_status_t ret;
  NVMDB_IdType db_id;

  if(Type == BLEPLAT_NVM_REC_DEVICE_ID)
10044834:	1dbb      	adds	r3, r7, #6
10044836:	781b      	ldrb	r3, [r3, #0]
10044838:	2b02      	cmp	r3, #2
1004483a:	d107      	bne.n	1004484c <BLEPLAT_NvmGet+0x38>
  {
    curr_handle_p = &device_id_db_h;
1004483c:	4b2e      	ldr	r3, [pc, #184]	@ (100448f8 <BLEPLAT_NvmGet+0xe4>)
1004483e:	4a2f      	ldr	r2, [pc, #188]	@ (100448fc <BLEPLAT_NvmGet+0xe8>)
10044840:	601a      	str	r2, [r3, #0]
    db_id = 1;
10044842:	230e      	movs	r3, #14
10044844:	18fb      	adds	r3, r7, r3
10044846:	2201      	movs	r2, #1
10044848:	701a      	strb	r2, [r3, #0]
1004484a:	e006      	b.n	1004485a <BLEPLAT_NvmGet+0x46>
  }
  else
  {
    curr_handle_p = &sec_gatt_db_h;
1004484c:	4b2a      	ldr	r3, [pc, #168]	@ (100448f8 <BLEPLAT_NvmGet+0xe4>)
1004484e:	4a2c      	ldr	r2, [pc, #176]	@ (10044900 <BLEPLAT_NvmGet+0xec>)
10044850:	601a      	str	r2, [r3, #0]
    db_id = 0;
10044852:	230e      	movs	r3, #14
10044854:	18fb      	adds	r3, r7, r3
10044856:	2200      	movs	r2, #0
10044858:	701a      	strb	r2, [r3, #0]
  }

  if(Mode == BLEPLAT_NVM_CURRENT)
1004485a:	1dfb      	adds	r3, r7, #7
1004485c:	781b      	ldrb	r3, [r3, #0]
1004485e:	2b02      	cmp	r3, #2
10044860:	d112      	bne.n	10044888 <BLEPLAT_NvmGet+0x74>
  {
    ret = NVMDB_ReadCurrentRecord(curr_handle_p, Offset, pData, Size, &size_out);
10044862:	4b25      	ldr	r3, [pc, #148]	@ (100448f8 <BLEPLAT_NvmGet+0xe4>)
10044864:	6818      	ldr	r0, [r3, #0]
10044866:	230f      	movs	r3, #15
10044868:	18fc      	adds	r4, r7, r3
1004486a:	2320      	movs	r3, #32
1004486c:	18fb      	adds	r3, r7, r3
1004486e:	881d      	ldrh	r5, [r3, #0]
10044870:	683a      	ldr	r2, [r7, #0]
10044872:	1d3b      	adds	r3, r7, #4
10044874:	8819      	ldrh	r1, [r3, #0]
10044876:	230c      	movs	r3, #12
10044878:	18fb      	adds	r3, r7, r3
1004487a:	9300      	str	r3, [sp, #0]
1004487c:	002b      	movs	r3, r5
1004487e:	f003 fd51 	bl	10048324 <NVMDB_ReadCurrentRecord>
10044882:	0003      	movs	r3, r0
10044884:	7023      	strb	r3, [r4, #0]
10044886:	e021      	b.n	100448cc <BLEPLAT_NvmGet+0xb8>
  }
  else
  {
    if(Mode == BLEPLAT_NVM_FIRST)
10044888:	1dfb      	adds	r3, r7, #7
1004488a:	781b      	ldrb	r3, [r3, #0]
1004488c:	2b00      	cmp	r3, #0
1004488e:	d108      	bne.n	100448a2 <BLEPLAT_NvmGet+0x8e>
    {
      NVMDB_HandleInit(db_id, curr_handle_p);
10044890:	4b19      	ldr	r3, [pc, #100]	@ (100448f8 <BLEPLAT_NvmGet+0xe4>)
10044892:	681a      	ldr	r2, [r3, #0]
10044894:	230e      	movs	r3, #14
10044896:	18fb      	adds	r3, r7, r3
10044898:	781b      	ldrb	r3, [r3, #0]
1004489a:	0011      	movs	r1, r2
1004489c:	0018      	movs	r0, r3
1004489e:	f003 fcd3 	bl	10048248 <NVMDB_HandleInit>
    }
    ret = NVMDB_ReadNextRecord(curr_handle_p, Type, Offset, pData, Size, &size_out);
100448a2:	4b15      	ldr	r3, [pc, #84]	@ (100448f8 <BLEPLAT_NvmGet+0xe4>)
100448a4:	6818      	ldr	r0, [r3, #0]
100448a6:	230f      	movs	r3, #15
100448a8:	18fc      	adds	r4, r7, r3
100448aa:	683d      	ldr	r5, [r7, #0]
100448ac:	1d3b      	adds	r3, r7, #4
100448ae:	881a      	ldrh	r2, [r3, #0]
100448b0:	1dbb      	adds	r3, r7, #6
100448b2:	7819      	ldrb	r1, [r3, #0]
100448b4:	230c      	movs	r3, #12
100448b6:	18fb      	adds	r3, r7, r3
100448b8:	9301      	str	r3, [sp, #4]
100448ba:	2320      	movs	r3, #32
100448bc:	18fb      	adds	r3, r7, r3
100448be:	881b      	ldrh	r3, [r3, #0]
100448c0:	9300      	str	r3, [sp, #0]
100448c2:	002b      	movs	r3, r5
100448c4:	f003 fcf4 	bl	100482b0 <NVMDB_ReadNextRecord>
100448c8:	0003      	movs	r3, r0
100448ca:	7023      	strb	r3, [r4, #0]
  }

  if(ret == NVMDB_STATUS_OK)
100448cc:	230f      	movs	r3, #15
100448ce:	18fb      	adds	r3, r7, r3
100448d0:	781b      	ldrb	r3, [r3, #0]
100448d2:	2b00      	cmp	r3, #0
100448d4:	d101      	bne.n	100448da <BLEPLAT_NvmGet+0xc6>
  {
    return BLEPLAT_OK;
100448d6:	2300      	movs	r3, #0
100448d8:	e009      	b.n	100448ee <BLEPLAT_NvmGet+0xda>
  }

  if(ret == NVMDB_STATUS_END_OF_DB)
100448da:	230f      	movs	r3, #15
100448dc:	18fb      	adds	r3, r7, r3
100448de:	781b      	ldrb	r3, [r3, #0]
100448e0:	2b04      	cmp	r3, #4
100448e2:	d102      	bne.n	100448ea <BLEPLAT_NvmGet+0xd6>
  {
    return BLEPLAT_EOF;
100448e4:	2303      	movs	r3, #3
100448e6:	425b      	negs	r3, r3
100448e8:	e001      	b.n	100448ee <BLEPLAT_NvmGet+0xda>
  }

  return BLEPLAT_BUSY;
100448ea:	2302      	movs	r3, #2
100448ec:	425b      	negs	r3, r3
}
100448ee:	0018      	movs	r0, r3
100448f0:	46bd      	mov	sp, r7
100448f2:	b004      	add	sp, #16
100448f4:	bdb0      	pop	{r4, r5, r7, pc}
100448f6:	46c0      	nop			@ (mov r8, r8)
100448f8:	20000500 	.word	0x20000500
100448fc:	200004f0 	.word	0x200004f0
10044900:	200004e0 	.word	0x200004e0

10044904 <BLEPLAT_NvmCompare>:

int BLEPLAT_NvmCompare(uint16_t Offset, const uint8_t* pData, uint16_t Size)
{
10044904:	b590      	push	{r4, r7, lr}
10044906:	b085      	sub	sp, #20
10044908:	af00      	add	r7, sp, #0
1004490a:	6039      	str	r1, [r7, #0]
1004490c:	0011      	movs	r1, r2
1004490e:	1dbb      	adds	r3, r7, #6
10044910:	1c02      	adds	r2, r0, #0
10044912:	801a      	strh	r2, [r3, #0]
10044914:	1d3b      	adds	r3, r7, #4
10044916:	1c0a      	adds	r2, r1, #0
10044918:	801a      	strh	r2, [r3, #0]
  int ret;

  ret = NVMDB_CompareCurrentRecord(curr_handle_p, Offset, pData, Size);
1004491a:	4b0e      	ldr	r3, [pc, #56]	@ (10044954 <BLEPLAT_NvmCompare+0x50>)
1004491c:	6818      	ldr	r0, [r3, #0]
1004491e:	1d3b      	adds	r3, r7, #4
10044920:	881c      	ldrh	r4, [r3, #0]
10044922:	683a      	ldr	r2, [r7, #0]
10044924:	1dbb      	adds	r3, r7, #6
10044926:	8819      	ldrh	r1, [r3, #0]
10044928:	0023      	movs	r3, r4
1004492a:	f002 fcf7 	bl	1004731c <NVMDB_CompareCurrentRecord>
1004492e:	0003      	movs	r3, r0
10044930:	60fb      	str	r3, [r7, #12]

  if(ret == 0)
10044932:	68fb      	ldr	r3, [r7, #12]
10044934:	2b00      	cmp	r3, #0
10044936:	d101      	bne.n	1004493c <BLEPLAT_NvmCompare+0x38>
  {
    return BLEPLAT_OK;
10044938:	2300      	movs	r3, #0
1004493a:	e007      	b.n	1004494c <BLEPLAT_NvmCompare+0x48>
  }
  else if(ret < 0)
1004493c:	68fb      	ldr	r3, [r7, #12]
1004493e:	2b00      	cmp	r3, #0
10044940:	da02      	bge.n	10044948 <BLEPLAT_NvmCompare+0x44>
  {
    return Size;
10044942:	1d3b      	adds	r3, r7, #4
10044944:	881b      	ldrh	r3, [r3, #0]
10044946:	e001      	b.n	1004494c <BLEPLAT_NvmCompare+0x48>
  }
  else
  {
    return BLEPLAT_EOF;
10044948:	2303      	movs	r3, #3
1004494a:	425b      	negs	r3, r3
  }
}
1004494c:	0018      	movs	r0, r3
1004494e:	46bd      	mov	sp, r7
10044950:	b005      	add	sp, #20
10044952:	bd90      	pop	{r4, r7, pc}
10044954:	20000500 	.word	0x20000500

10044958 <BLEPLAT_NvmDiscard>:

void BLEPLAT_NvmDiscard(BLEPLAT_NvmSeekModeTypeDef Mode)
{
10044958:	b580      	push	{r7, lr}
1004495a:	b082      	sub	sp, #8
1004495c:	af00      	add	r7, sp, #0
1004495e:	0002      	movs	r2, r0
10044960:	1dfb      	adds	r3, r7, #7
10044962:	701a      	strb	r2, [r3, #0]
  DEBUG_GPIO2_HIGH();
  if(Mode == BLEPLAT_NVM_CURRENT)
10044964:	1dfb      	adds	r3, r7, #7
10044966:	781b      	ldrb	r3, [r3, #0]
10044968:	2b02      	cmp	r3, #2
1004496a:	d10a      	bne.n	10044982 <BLEPLAT_NvmDiscard+0x2a>
  {
    if(curr_handle_p == &device_id_db_h) // Do not allow to erase device ID data.
1004496c:	4b0b      	ldr	r3, [pc, #44]	@ (1004499c <BLEPLAT_NvmDiscard+0x44>)
1004496e:	681a      	ldr	r2, [r3, #0]
10044970:	4b0b      	ldr	r3, [pc, #44]	@ (100449a0 <BLEPLAT_NvmDiscard+0x48>)
10044972:	429a      	cmp	r2, r3
10044974:	d00d      	beq.n	10044992 <BLEPLAT_NvmDiscard+0x3a>
    {
      return;
    }
    NVMDB_DeleteRecord(curr_handle_p);
10044976:	4b09      	ldr	r3, [pc, #36]	@ (1004499c <BLEPLAT_NvmDiscard+0x44>)
10044978:	681b      	ldr	r3, [r3, #0]
1004497a:	0018      	movs	r0, r3
1004497c:	f003 fd6c 	bl	10048458 <NVMDB_DeleteRecord>
10044980:	e008      	b.n	10044994 <BLEPLAT_NvmDiscard+0x3c>
  }
  else if(Mode == BLEPLAT_NVM_ALL)
10044982:	1dfb      	adds	r3, r7, #7
10044984:	781b      	ldrb	r3, [r3, #0]
10044986:	2b03      	cmp	r3, #3
10044988:	d104      	bne.n	10044994 <BLEPLAT_NvmDiscard+0x3c>
  {

    NVMDB_Erase(SEC_GATT_BD);
1004498a:	2000      	movs	r0, #0
1004498c:	f003 fd72 	bl	10048474 <NVMDB_Erase>
10044990:	e000      	b.n	10044994 <BLEPLAT_NvmDiscard+0x3c>
      return;
10044992:	46c0      	nop			@ (mov r8, r8)
       else
        return;
       }*/
  }
  DEBUG_GPIO2_LOW();
}
10044994:	46bd      	mov	sp, r7
10044996:	b002      	add	sp, #8
10044998:	bd80      	pop	{r7, pc}
1004499a:	46c0      	nop			@ (mov r8, r8)
1004499c:	20000500 	.word	0x20000500
100449a0:	200004f0 	.word	0x200004f0

100449a4 <BLEPLAT_MemCpy>:
#if defined(STM32WB06) || defined(STM32WB07) || defined(STM32WB09)
uint32_t SYNTH0_ANA_ENG_bak, PWR_ENGTRIM_bak;
#endif

void BLEPLAT_MemCpy(void *Dest, const void *Src, unsigned int Size)
{
100449a4:	b580      	push	{r7, lr}
100449a6:	b084      	sub	sp, #16
100449a8:	af00      	add	r7, sp, #0
100449aa:	60f8      	str	r0, [r7, #12]
100449ac:	60b9      	str	r1, [r7, #8]
100449ae:	607a      	str	r2, [r7, #4]
  Osal_MemCpy(Dest, Src, Size);
100449b0:	687a      	ldr	r2, [r7, #4]
100449b2:	68b9      	ldr	r1, [r7, #8]
100449b4:	68fb      	ldr	r3, [r7, #12]
100449b6:	0018      	movs	r0, r3
100449b8:	f7fb fba4 	bl	10040104 <Osal_MemCpy>
}
100449bc:	46c0      	nop			@ (mov r8, r8)
100449be:	46bd      	mov	sp, r7
100449c0:	b004      	add	sp, #16
100449c2:	bd80      	pop	{r7, pc}

100449c4 <BLEPLAT_MemSet>:

void BLEPLAT_MemSet(void *Ptr, int Value, unsigned int Size)
{
100449c4:	b580      	push	{r7, lr}
100449c6:	b084      	sub	sp, #16
100449c8:	af00      	add	r7, sp, #0
100449ca:	60f8      	str	r0, [r7, #12]
100449cc:	60b9      	str	r1, [r7, #8]
100449ce:	607a      	str	r2, [r7, #4]
  memset(Ptr, Value, Size);
100449d0:	687a      	ldr	r2, [r7, #4]
100449d2:	68b9      	ldr	r1, [r7, #8]
100449d4:	68fb      	ldr	r3, [r7, #12]
100449d6:	0018      	movs	r0, r3
100449d8:	f027 f8da 	bl	1006bb90 <memset>
}
100449dc:	46c0      	nop			@ (mov r8, r8)
100449de:	46bd      	mov	sp, r7
100449e0:	b004      	add	sp, #16
100449e2:	bd80      	pop	{r7, pc}

100449e4 <BLEPLAT_MemCmp>:

int BLEPLAT_MemCmp(void *S1, void *S2, unsigned int Size)
{
100449e4:	b580      	push	{r7, lr}
100449e6:	b084      	sub	sp, #16
100449e8:	af00      	add	r7, sp, #0
100449ea:	60f8      	str	r0, [r7, #12]
100449ec:	60b9      	str	r1, [r7, #8]
100449ee:	607a      	str	r2, [r7, #4]
  return memcmp(S1, S2, Size);
100449f0:	687a      	ldr	r2, [r7, #4]
100449f2:	68b9      	ldr	r1, [r7, #8]
100449f4:	68fb      	ldr	r3, [r7, #12]
100449f6:	0018      	movs	r0, r3
100449f8:	f027 f8bc 	bl	1006bb74 <memcmp>
100449fc:	0003      	movs	r3, r0
}
100449fe:	0018      	movs	r0, r3
10044a00:	46bd      	mov	sp, r7
10044a02:	b004      	add	sp, #16
10044a04:	bd80      	pop	{r7, pc}

10044a06 <BLEPLAT_GetPartInfo>:

/**
 * @brief Get Device ID, Version and Revision numbers
 */
void BLEPLAT_GetPartInfo(uint8_t *pDeviceId, uint8_t *pMajorCut, uint8_t *pMinorCut)
{
10044a06:	b590      	push	{r4, r7, lr}
10044a08:	b089      	sub	sp, #36	@ 0x24
10044a0a:	af00      	add	r7, sp, #0
10044a0c:	60f8      	str	r0, [r7, #12]
10044a0e:	60b9      	str	r1, [r7, #8]
10044a10:	607a      	str	r2, [r7, #4]
   PartInfoType partInfo;

   /* get partInfo */
   GetPartInfo(&partInfo);
10044a12:	2410      	movs	r4, #16
10044a14:	193b      	adds	r3, r7, r4
10044a16:	0018      	movs	r0, r3
10044a18:	f004 fa3e 	bl	10048e98 <GetPartInfo>

  /* Set device ID */
  *pDeviceId  = partInfo.die_id;
10044a1c:	0021      	movs	r1, r4
10044a1e:	187b      	adds	r3, r7, r1
10044a20:	781a      	ldrb	r2, [r3, #0]
10044a22:	68fb      	ldr	r3, [r7, #12]
10044a24:	701a      	strb	r2, [r3, #0]

  /* Set major cut  */
  *pMajorCut = partInfo.die_major;
10044a26:	187b      	adds	r3, r7, r1
10044a28:	785a      	ldrb	r2, [r3, #1]
10044a2a:	68bb      	ldr	r3, [r7, #8]
10044a2c:	701a      	strb	r2, [r3, #0]

  /* Set minor cut */
  *pMinorCut = partInfo.die_cut;
10044a2e:	187b      	adds	r3, r7, r1
10044a30:	789a      	ldrb	r2, [r3, #2]
10044a32:	687b      	ldr	r3, [r7, #4]
10044a34:	701a      	strb	r2, [r3, #0]
}
10044a36:	46c0      	nop			@ (mov r8, r8)
10044a38:	46bd      	mov	sp, r7
10044a3a:	b009      	add	sp, #36	@ 0x24
10044a3c:	bd90      	pop	{r4, r7, pc}

10044a3e <BLEPLAT_AesEcbEncrypt>:
}

void BLEPLAT_AesEcbEncrypt(const uint32_t *plainTextData,
                           const uint32_t *key,
                           uint32_t *encryptedData)
{
10044a3e:	b580      	push	{r7, lr}
10044a40:	b084      	sub	sp, #16
10044a42:	af00      	add	r7, sp, #0
10044a44:	60f8      	str	r0, [r7, #12]
10044a46:	60b9      	str	r1, [r7, #8]
10044a48:	607a      	str	r2, [r7, #4]
  HW_AES_Encrypt(plainTextData, key, encryptedData);
10044a4a:	687a      	ldr	r2, [r7, #4]
10044a4c:	68b9      	ldr	r1, [r7, #8]
10044a4e:	68fb      	ldr	r3, [r7, #12]
10044a50:	0018      	movs	r0, r3
10044a52:	f001 ffa9 	bl	100469a8 <HW_AES_Encrypt>
}
10044a56:	46c0      	nop			@ (mov r8, r8)
10044a58:	46bd      	mov	sp, r7
10044a5a:	b004      	add	sp, #16
10044a5c:	bd80      	pop	{r7, pc}

10044a5e <BLEPLAT_AesCMACEncryptInit>:

int32_t BLEPLAT_AesCMACEncryptInit(BLEPLAT_AESCMACctxTypeDef *pAESCMACctx)
{
10044a5e:	b580      	push	{r7, lr}
10044a60:	b082      	sub	sp, #8
10044a62:	af00      	add	r7, sp, #0
10044a64:	6078      	str	r0, [r7, #4]
  return AES_CMAC_Encrypt_Init((AESCMACctx_stt*)pAESCMACctx);
10044a66:	687b      	ldr	r3, [r7, #4]
10044a68:	0018      	movs	r0, r3
10044a6a:	f028 fc19 	bl	1006d2a0 <AES_CMAC_Encrypt_Init>
10044a6e:	0003      	movs	r3, r0
}
10044a70:	0018      	movs	r0, r3
10044a72:	46bd      	mov	sp, r7
10044a74:	b002      	add	sp, #8
10044a76:	bd80      	pop	{r7, pc}

10044a78 <BLEPLAT_AesCMACEncryptAppend>:

int32_t BLEPLAT_AesCMACEncryptAppend(BLEPLAT_AESCMACctxTypeDef *pAESCMACctx,
                                     const uint8_t  *pInputBuffer,
                                     int32_t InputSize)
{
10044a78:	b580      	push	{r7, lr}
10044a7a:	b084      	sub	sp, #16
10044a7c:	af00      	add	r7, sp, #0
10044a7e:	60f8      	str	r0, [r7, #12]
10044a80:	60b9      	str	r1, [r7, #8]
10044a82:	607a      	str	r2, [r7, #4]
  return AES_CMAC_Encrypt_Append((AESCMACctx_stt*)pAESCMACctx, pInputBuffer, InputSize);
10044a84:	687a      	ldr	r2, [r7, #4]
10044a86:	68b9      	ldr	r1, [r7, #8]
10044a88:	68fb      	ldr	r3, [r7, #12]
10044a8a:	0018      	movs	r0, r3
10044a8c:	f028 fa9e 	bl	1006cfcc <AES_CMAC_Encrypt_Append>
10044a90:	0003      	movs	r3, r0
}
10044a92:	0018      	movs	r0, r3
10044a94:	46bd      	mov	sp, r7
10044a96:	b004      	add	sp, #16
10044a98:	bd80      	pop	{r7, pc}

10044a9a <BLEPLAT_AesCMACEncryptFinish>:

int32_t BLEPLAT_AesCMACEncryptFinish(BLEPLAT_AESCMACctxTypeDef *pAESCMACctx,
                                     uint8_t *pOutputBuffer,
                                     int32_t *pOutputSize)
{
10044a9a:	b580      	push	{r7, lr}
10044a9c:	b084      	sub	sp, #16
10044a9e:	af00      	add	r7, sp, #0
10044aa0:	60f8      	str	r0, [r7, #12]
10044aa2:	60b9      	str	r1, [r7, #8]
10044aa4:	607a      	str	r2, [r7, #4]
  return AES_CMAC_Encrypt_Finish((AESCMACctx_stt*)pAESCMACctx, pOutputBuffer, pOutputSize);
10044aa6:	687a      	ldr	r2, [r7, #4]
10044aa8:	68b9      	ldr	r1, [r7, #8]
10044aaa:	68fb      	ldr	r3, [r7, #12]
10044aac:	0018      	movs	r0, r3
10044aae:	f028 fbc1 	bl	1006d234 <AES_CMAC_Encrypt_Finish>
10044ab2:	0003      	movs	r3, r0
}
10044ab4:	0018      	movs	r0, r3
10044ab6:	46bd      	mov	sp, r7
10044ab8:	b004      	add	sp, #16
10044aba:	bd80      	pop	{r7, pc}

10044abc <BLEPLAT_RngGetRandom16>:

void BLEPLAT_RngGetRandom16(uint16_t* num)
{
10044abc:	b580      	push	{r7, lr}
10044abe:	b082      	sub	sp, #8
10044ac0:	af00      	add	r7, sp, #0
10044ac2:	6078      	str	r0, [r7, #4]
  HW_RNG_GetRandom16(num);
10044ac4:	687b      	ldr	r3, [r7, #4]
10044ac6:	0018      	movs	r0, r3
10044ac8:	f002 fa1e 	bl	10046f08 <HW_RNG_GetRandom16>
}
10044acc:	46c0      	nop			@ (mov r8, r8)
10044ace:	46bd      	mov	sp, r7
10044ad0:	b002      	add	sp, #8
10044ad2:	bd80      	pop	{r7, pc}

10044ad4 <BLEPLAT_RngGetRandom32>:

void BLEPLAT_RngGetRandom32(uint32_t* num)
{
10044ad4:	b580      	push	{r7, lr}
10044ad6:	b082      	sub	sp, #8
10044ad8:	af00      	add	r7, sp, #0
10044ada:	6078      	str	r0, [r7, #4]
  HW_RNG_GetRandom32(num);
10044adc:	687b      	ldr	r3, [r7, #4]
10044ade:	0018      	movs	r0, r3
10044ae0:	f002 fa2c 	bl	10046f3c <HW_RNG_GetRandom32>
}
10044ae4:	46c0      	nop			@ (mov r8, r8)
10044ae6:	46bd      	mov	sp, r7
10044ae8:	b002      	add	sp, #8
10044aea:	bd80      	pop	{r7, pc}

10044aec <BLEPLAT_DBmToPALevel>:

uint8_t BLEPLAT_DBmToPALevel(int8_t TX_dBm)
{
10044aec:	b580      	push	{r7, lr}
10044aee:	b082      	sub	sp, #8
10044af0:	af00      	add	r7, sp, #0
10044af2:	0002      	movs	r2, r0
10044af4:	1dfb      	adds	r3, r7, #7
10044af6:	701a      	strb	r2, [r3, #0]
  return RADIO_DBmToPALevel(TX_dBm);
10044af8:	1dfb      	adds	r3, r7, #7
10044afa:	781b      	ldrb	r3, [r3, #0]
10044afc:	b25b      	sxtb	r3, r3
10044afe:	0018      	movs	r0, r3
10044b00:	f004 f89a 	bl	10048c38 <RADIO_DBmToPALevel>
10044b04:	0003      	movs	r3, r0
}
10044b06:	0018      	movs	r0, r3
10044b08:	46bd      	mov	sp, r7
10044b0a:	b002      	add	sp, #8
10044b0c:	bd80      	pop	{r7, pc}

10044b0e <BLEPLAT_PALevelToDBm>:
{
  return RADIO_DBmToPALevelGe(TX_dBm);
}

int8_t BLEPLAT_PALevelToDBm(uint8_t PA_Level)
{
10044b0e:	b580      	push	{r7, lr}
10044b10:	b082      	sub	sp, #8
10044b12:	af00      	add	r7, sp, #0
10044b14:	0002      	movs	r2, r0
10044b16:	1dfb      	adds	r3, r7, #7
10044b18:	701a      	strb	r2, [r3, #0]
  return RADIO_PALevelToDBm(PA_Level);
10044b1a:	1dfb      	adds	r3, r7, #7
10044b1c:	781b      	ldrb	r3, [r3, #0]
10044b1e:	0018      	movs	r0, r3
10044b20:	f004 f8ee 	bl	10048d00 <RADIO_PALevelToDBm>
10044b24:	0003      	movs	r3, r0
}
10044b26:	0018      	movs	r0, r3
10044b28:	46bd      	mov	sp, r7
10044b2a:	b002      	add	sp, #8
10044b2c:	bd80      	pop	{r7, pc}

10044b2e <BLEPLAT_GetMaxPALevel>:
{
  RADIO_ReadTransmitPower(Min_Tx_Power, Max_Tx_Power);
}

uint8_t BLEPLAT_GetMaxPALevel(void)
{
10044b2e:	b580      	push	{r7, lr}
10044b30:	af00      	add	r7, sp, #0
  return RADIO_GetMaxPALevel();
10044b32:	f004 f919 	bl	10048d68 <RADIO_GetMaxPALevel>
10044b36:	0003      	movs	r3, r0
}
10044b38:	0018      	movs	r0, r3
10044b3a:	46bd      	mov	sp, r7
10044b3c:	bd80      	pop	{r7, pc}

10044b3e <BLEPLAT_GetDefaultPALevel>:

uint8_t BLEPLAT_GetDefaultPALevel(void)
{
10044b3e:	b580      	push	{r7, lr}
10044b40:	af00      	add	r7, sp, #0
  return RADIO_GetDefaultPALevel();
10044b42:	f004 f917 	bl	10048d74 <RADIO_GetDefaultPALevel>
10044b46:	0003      	movs	r3, r0
}
10044b48:	0018      	movs	r0, r3
10044b4a:	46bd      	mov	sp, r7
10044b4c:	bd80      	pop	{r7, pc}

10044b4e <BLEPLAT_SetHighPower>:

void BLEPLAT_SetHighPower(uint8_t enable)
{
10044b4e:	b580      	push	{r7, lr}
10044b50:	b082      	sub	sp, #8
10044b52:	af00      	add	r7, sp, #0
10044b54:	0002      	movs	r2, r0
10044b56:	1dfb      	adds	r3, r7, #7
10044b58:	701a      	strb	r2, [r3, #0]
  RADIO_SetHighPower((FunctionalState)enable);
10044b5a:	1dfb      	adds	r3, r7, #7
10044b5c:	781b      	ldrb	r3, [r3, #0]
10044b5e:	0018      	movs	r0, r3
10044b60:	f004 f90e 	bl	10048d80 <RADIO_SetHighPower>
}
10044b64:	46c0      	nop			@ (mov r8, r8)
10044b66:	46bd      	mov	sp, r7
10044b68:	b002      	add	sp, #8
10044b6a:	bd80      	pop	{r7, pc}

10044b6c <BLEPLAT_CalculateRSSI>:

int8_t BLEPLAT_CalculateRSSI(void)
{
10044b6c:	b580      	push	{r7, lr}
10044b6e:	af00      	add	r7, sp, #0
  return HAL_RADIO_ReadRSSI();
10044b70:	f006 fac8 	bl	1004b104 <HAL_RADIO_ReadRSSI>
10044b74:	0003      	movs	r3, r0
}
10044b76:	0018      	movs	r0, r3
10044b78:	46bd      	mov	sp, r7
10044b7a:	bd80      	pop	{r7, pc}

10044b7c <BLEPLAT_GetDemodCI>:
{
  return RADIO_UpdateAvgRSSI(avg_rssi, rssi, rssi_filter_coeff);
}

uint8_t BLEPLAT_GetDemodCI(void)
{
10044b7c:	b580      	push	{r7, lr}
10044b7e:	af00      	add	r7, sp, #0
  return GetDemodCI();
10044b80:	f004 f9ca 	bl	10048f18 <GetDemodCI>
10044b84:	0003      	movs	r3, r0
}
10044b86:	0018      	movs	r0, r3
10044b88:	46bd      	mov	sp, r7
10044b8a:	bd80      	pop	{r7, pc}

10044b8c <BLEPLAT_GetCurrentSysTime>:
{
  RADIO_AntIdxRemap(AntPattLen, pAntRamTable, pAntPatt);
}

uint64_t BLEPLAT_GetCurrentSysTime(void)
{
10044b8c:	b580      	push	{r7, lr}
10044b8e:	af00      	add	r7, sp, #0
  return HAL_RADIO_TIMER_GetCurrentSysTime();
10044b90:	f006 fff8 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
10044b94:	0002      	movs	r2, r0
10044b96:	000b      	movs	r3, r1

}
10044b98:	0010      	movs	r0, r2
10044b9a:	0019      	movs	r1, r3
10044b9c:	46bd      	mov	sp, r7
10044b9e:	bd80      	pop	{r7, pc}

10044ba0 <BLEPLAT_StartTimer>:
{
  return HAL_RADIO_TIMER_GetFutureSysTime64(SysTime);
}

int BLEPLAT_StartTimer(BLEPLAT_TimerHandleTypeDef *TimerHandle, uint64_t Time)
{
10044ba0:	b580      	push	{r7, lr}
10044ba2:	b084      	sub	sp, #16
10044ba4:	af00      	add	r7, sp, #0
10044ba6:	60f8      	str	r0, [r7, #12]
10044ba8:	603a      	str	r2, [r7, #0]
10044baa:	607b      	str	r3, [r7, #4]
  return HAL_RADIO_TIMER_StartVirtualTimerSysTime((VTIMER_HandleType*)TimerHandle, Time);
10044bac:	683a      	ldr	r2, [r7, #0]
10044bae:	687b      	ldr	r3, [r7, #4]
10044bb0:	68f9      	ldr	r1, [r7, #12]
10044bb2:	0008      	movs	r0, r1
10044bb4:	f006 fff8 	bl	1004bba8 <HAL_RADIO_TIMER_StartVirtualTimerSysTime>
10044bb8:	0003      	movs	r3, r0
}
10044bba:	0018      	movs	r0, r3
10044bbc:	46bd      	mov	sp, r7
10044bbe:	b004      	add	sp, #16
10044bc0:	bd80      	pop	{r7, pc}

10044bc2 <BLEPLAT_StopTimer>:

void BLEPLAT_StopTimer(BLEPLAT_TimerHandleTypeDef *TimerHandle)
{
10044bc2:	b580      	push	{r7, lr}
10044bc4:	b082      	sub	sp, #8
10044bc6:	af00      	add	r7, sp, #0
10044bc8:	6078      	str	r0, [r7, #4]
  HAL_RADIO_TIMER_StopVirtualTimer((VTIMER_HandleType*)TimerHandle);
10044bca:	687b      	ldr	r3, [r7, #4]
10044bcc:	0018      	movs	r0, r3
10044bce:	f007 f805 	bl	1004bbdc <HAL_RADIO_TIMER_StopVirtualTimer>
}
10044bd2:	46c0      	nop			@ (mov r8, r8)
10044bd4:	46bd      	mov	sp, r7
10044bd6:	b002      	add	sp, #8
10044bd8:	bd80      	pop	{r7, pc}

10044bda <BLEPLAT_SetRadioTimerValue>:

uint8_t BLEPLAT_SetRadioTimerValue(uint32_t Time, uint8_t EventType, uint8_t CalReq)
{
10044bda:	b580      	push	{r7, lr}
10044bdc:	b082      	sub	sp, #8
10044bde:	af00      	add	r7, sp, #0
10044be0:	6078      	str	r0, [r7, #4]
10044be2:	0008      	movs	r0, r1
10044be4:	0011      	movs	r1, r2
10044be6:	1cfb      	adds	r3, r7, #3
10044be8:	1c02      	adds	r2, r0, #0
10044bea:	701a      	strb	r2, [r3, #0]
10044bec:	1cbb      	adds	r3, r7, #2
10044bee:	1c0a      	adds	r2, r1, #0
10044bf0:	701a      	strb	r2, [r3, #0]
  return HAL_RADIO_TIMER_SetRadioTimerValue(Time, EventType, CalReq);
10044bf2:	1cbb      	adds	r3, r7, #2
10044bf4:	781a      	ldrb	r2, [r3, #0]
10044bf6:	1cfb      	adds	r3, r7, #3
10044bf8:	7819      	ldrb	r1, [r3, #0]
10044bfa:	687b      	ldr	r3, [r7, #4]
10044bfc:	0018      	movs	r0, r3
10044bfe:	f006 feab 	bl	1004b958 <HAL_RADIO_TIMER_SetRadioTimerValue>
10044c02:	0003      	movs	r3, r0
10044c04:	b2db      	uxtb	r3, r3
}
10044c06:	0018      	movs	r0, r3
10044c08:	46bd      	mov	sp, r7
10044c0a:	b002      	add	sp, #8
10044c0c:	bd80      	pop	{r7, pc}

10044c0e <BLEPLAT_ClearRadioTimerValue>:

uint8_t BLEPLAT_ClearRadioTimerValue(void)
{
10044c0e:	b580      	push	{r7, lr}
10044c10:	af00      	add	r7, sp, #0
  return HAL_RADIO_TIMER_ClearRadioTimerValue();
10044c12:	f006 fef1 	bl	1004b9f8 <HAL_RADIO_TIMER_ClearRadioTimerValue>
10044c16:	0003      	movs	r3, r0
10044c18:	b2db      	uxtb	r3, r3
}
10044c1a:	0018      	movs	r0, r3
10044c1c:	46bd      	mov	sp, r7
10044c1e:	bd80      	pop	{r7, pc}

10044c20 <BLEPLAT_GetAnchorPoint>:

uint64_t BLEPLAT_GetAnchorPoint(uint64_t *pCurrentSysTime)
{
10044c20:	b580      	push	{r7, lr}
10044c22:	b082      	sub	sp, #8
10044c24:	af00      	add	r7, sp, #0
10044c26:	6078      	str	r0, [r7, #4]
  return HAL_RADIO_TIMER_GetAnchorPoint(pCurrentSysTime);
10044c28:	687b      	ldr	r3, [r7, #4]
10044c2a:	0018      	movs	r0, r3
10044c2c:	f006 fe80 	bl	1004b930 <HAL_RADIO_TIMER_GetAnchorPoint>
10044c30:	0002      	movs	r2, r0
10044c32:	000b      	movs	r3, r1
}
10044c34:	0010      	movs	r0, r2
10044c36:	0019      	movs	r1, r3
10044c38:	46bd      	mov	sp, r7
10044c3a:	b002      	add	sp, #8
10044c3c:	bd80      	pop	{r7, pc}

10044c3e <BLEPLAT_SetRadioCloseTimeout>:

void BLEPLAT_SetRadioCloseTimeout(void)
{
10044c3e:	b580      	push	{r7, lr}
10044c40:	af00      	add	r7, sp, #0
  HAL_RADIO_TIMER_SetRadioCloseTimeout();
10044c42:	f006 ff4d 	bl	1004bae0 <HAL_RADIO_TIMER_SetRadioCloseTimeout>
}
10044c46:	46c0      	nop			@ (mov r8, r8)
10044c48:	46bd      	mov	sp, r7
10044c4a:	bd80      	pop	{r7, pc}

10044c4c <LL_RADIO_SetCurrentConnectionMachineNumber>:
  * @rmtoll WORD1          CURSTMACHNUM       LL_RADIO_SetCurrentConnectionMachineNumber
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetCurrentConnectionMachineNumber(uint32_t value)
{
10044c4c:	b580      	push	{r7, lr}
10044c4e:	b082      	sub	sp, #8
10044c50:	af00      	add	r7, sp, #0
10044c52:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD1, GLOBAL_WORD1_CURSTMACHNUM, value);
10044c54:	4b07      	ldr	r3, [pc, #28]	@ (10044c74 <LL_RADIO_SetCurrentConnectionMachineNumber+0x28>)
10044c56:	685b      	ldr	r3, [r3, #4]
10044c58:	227f      	movs	r2, #127	@ 0x7f
10044c5a:	4393      	bics	r3, r2
10044c5c:	0019      	movs	r1, r3
10044c5e:	687b      	ldr	r3, [r7, #4]
10044c60:	227f      	movs	r2, #127	@ 0x7f
10044c62:	401a      	ands	r2, r3
10044c64:	4b03      	ldr	r3, [pc, #12]	@ (10044c74 <LL_RADIO_SetCurrentConnectionMachineNumber+0x28>)
10044c66:	430a      	orrs	r2, r1
10044c68:	605a      	str	r2, [r3, #4]
}
10044c6a:	46c0      	nop			@ (mov r8, r8)
10044c6c:	46bd      	mov	sp, r7
10044c6e:	b002      	add	sp, #8
10044c70:	bd80      	pop	{r7, pc}
10044c72:	46c0      	nop			@ (mov r8, r8)
10044c74:	200000c0 	.word	0x200000c0

10044c78 <LL_RADIO_GlobalEnableBlue>:
  * @brief  RADIO Enable
  * @rmtoll WORD1          ACTIVE            LL_RADIO_GlobalEnableBlue
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_GlobalEnableBlue(void)
{
10044c78:	b580      	push	{r7, lr}
10044c7a:	af00      	add	r7, sp, #0
  SET_BIT(BLUEGLOBWORD->WORD1, GLOBAL_WORD1_ACTIVE);
10044c7c:	4b04      	ldr	r3, [pc, #16]	@ (10044c90 <LL_RADIO_GlobalEnableBlue+0x18>)
10044c7e:	685a      	ldr	r2, [r3, #4]
10044c80:	4b03      	ldr	r3, [pc, #12]	@ (10044c90 <LL_RADIO_GlobalEnableBlue+0x18>)
10044c82:	2180      	movs	r1, #128	@ 0x80
10044c84:	430a      	orrs	r2, r1
10044c86:	605a      	str	r2, [r3, #4]
}
10044c88:	46c0      	nop			@ (mov r8, r8)
10044c8a:	46bd      	mov	sp, r7
10044c8c:	bd80      	pop	{r7, pc}
10044c8e:	46c0      	nop			@ (mov r8, r8)
10044c90:	200000c0 	.word	0x200000c0

10044c94 <LL_RADIO_GlobalDisableBlue>:
  * @brief  RADIO Disable
  * @rmtoll WORD1          ACTIVE            LL_RADIO_GlobalDisableBlue
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_GlobalDisableBlue(void)
{
10044c94:	b580      	push	{r7, lr}
10044c96:	af00      	add	r7, sp, #0
  CLEAR_BIT(BLUEGLOBWORD->WORD1, GLOBAL_WORD1_ACTIVE);
10044c98:	4b04      	ldr	r3, [pc, #16]	@ (10044cac <LL_RADIO_GlobalDisableBlue+0x18>)
10044c9a:	685a      	ldr	r2, [r3, #4]
10044c9c:	4b03      	ldr	r3, [pc, #12]	@ (10044cac <LL_RADIO_GlobalDisableBlue+0x18>)
10044c9e:	2180      	movs	r1, #128	@ 0x80
10044ca0:	438a      	bics	r2, r1
10044ca2:	605a      	str	r2, [r3, #4]
}
10044ca4:	46c0      	nop			@ (mov r8, r8)
10044ca6:	46bd      	mov	sp, r7
10044ca8:	bd80      	pop	{r7, pc}
10044caa:	46c0      	nop			@ (mov r8, r8)
10044cac:	200000c0 	.word	0x200000c0

10044cb0 <LL_RADIO_SetReceiveWindowTimeout>:
  * @rmtoll WORD4          RCVTIMEOUT       LL_RADIO_SetReceiveWindowTimeout
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetReceiveWindowTimeout(uint32_t value)
{
10044cb0:	b580      	push	{r7, lr}
10044cb2:	b082      	sub	sp, #8
10044cb4:	af00      	add	r7, sp, #0
10044cb6:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD4, GLOBAL_WORD4_RCVTIMEOUT, value);
10044cb8:	4b07      	ldr	r3, [pc, #28]	@ (10044cd8 <LL_RADIO_SetReceiveWindowTimeout+0x28>)
10044cba:	691b      	ldr	r3, [r3, #16]
10044cbc:	4a07      	ldr	r2, [pc, #28]	@ (10044cdc <LL_RADIO_SetReceiveWindowTimeout+0x2c>)
10044cbe:	4013      	ands	r3, r2
10044cc0:	0019      	movs	r1, r3
10044cc2:	687b      	ldr	r3, [r7, #4]
10044cc4:	021b      	lsls	r3, r3, #8
10044cc6:	4a06      	ldr	r2, [pc, #24]	@ (10044ce0 <LL_RADIO_SetReceiveWindowTimeout+0x30>)
10044cc8:	401a      	ands	r2, r3
10044cca:	4b03      	ldr	r3, [pc, #12]	@ (10044cd8 <LL_RADIO_SetReceiveWindowTimeout+0x28>)
10044ccc:	430a      	orrs	r2, r1
10044cce:	611a      	str	r2, [r3, #16]
}
10044cd0:	46c0      	nop			@ (mov r8, r8)
10044cd2:	46bd      	mov	sp, r7
10044cd4:	b002      	add	sp, #8
10044cd6:	bd80      	pop	{r7, pc}
10044cd8:	200000c0 	.word	0x200000c0
10044cdc:	f00000ff 	.word	0xf00000ff
10044ce0:	0fffff00 	.word	0x0fffff00

10044ce4 <LL_RADIO_SetUnmappedChannel>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetUnmappedChannel(uint8_t stateMachineNo, uint32_t value)
{
10044ce4:	b580      	push	{r7, lr}
10044ce6:	b082      	sub	sp, #8
10044ce8:	af00      	add	r7, sp, #0
10044cea:	0002      	movs	r2, r0
10044cec:	6039      	str	r1, [r7, #0]
10044cee:	1dfb      	adds	r3, r7, #7
10044cf0:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_UCHAN, value);
10044cf2:	1dfb      	adds	r3, r7, #7
10044cf4:	781b      	ldrb	r3, [r3, #0]
10044cf6:	225c      	movs	r2, #92	@ 0x5c
10044cf8:	4353      	muls	r3, r2
10044cfa:	4a0b      	ldr	r2, [pc, #44]	@ (10044d28 <LL_RADIO_SetUnmappedChannel+0x44>)
10044cfc:	4694      	mov	ip, r2
10044cfe:	4463      	add	r3, ip
10044d00:	681b      	ldr	r3, [r3, #0]
10044d02:	223f      	movs	r2, #63	@ 0x3f
10044d04:	4393      	bics	r3, r2
10044d06:	0019      	movs	r1, r3
10044d08:	683b      	ldr	r3, [r7, #0]
10044d0a:	223f      	movs	r2, #63	@ 0x3f
10044d0c:	401a      	ands	r2, r3
10044d0e:	1dfb      	adds	r3, r7, #7
10044d10:	781b      	ldrb	r3, [r3, #0]
10044d12:	205c      	movs	r0, #92	@ 0x5c
10044d14:	4343      	muls	r3, r0
10044d16:	4804      	ldr	r0, [pc, #16]	@ (10044d28 <LL_RADIO_SetUnmappedChannel+0x44>)
10044d18:	4684      	mov	ip, r0
10044d1a:	4463      	add	r3, ip
10044d1c:	430a      	orrs	r2, r1
10044d1e:	601a      	str	r2, [r3, #0]
}
10044d20:	46c0      	nop			@ (mov r8, r8)
10044d22:	46bd      	mov	sp, r7
10044d24:	b002      	add	sp, #8
10044d26:	bd80      	pop	{r7, pc}
10044d28:	200000dc 	.word	0x200000dc

10044d2c <LL_RADIO_RadioCommandList_Enable>:
  * @rmtoll WORD0          RADIOCOMLISTENA            LL_RADIO_RadioCommandList_Enable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_RadioCommandList_Enable(uint8_t stateMachineNo)
{
10044d2c:	b580      	push	{r7, lr}
10044d2e:	b082      	sub	sp, #8
10044d30:	af00      	add	r7, sp, #0
10044d32:	0002      	movs	r2, r0
10044d34:	1dfb      	adds	r3, r7, #7
10044d36:	701a      	strb	r2, [r3, #0]
  SET_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_RADIOCOMLISTENA);
10044d38:	1dfb      	adds	r3, r7, #7
10044d3a:	781b      	ldrb	r3, [r3, #0]
10044d3c:	225c      	movs	r2, #92	@ 0x5c
10044d3e:	4353      	muls	r3, r2
10044d40:	4a08      	ldr	r2, [pc, #32]	@ (10044d64 <LL_RADIO_RadioCommandList_Enable+0x38>)
10044d42:	4694      	mov	ip, r2
10044d44:	4463      	add	r3, ip
10044d46:	681a      	ldr	r2, [r3, #0]
10044d48:	1dfb      	adds	r3, r7, #7
10044d4a:	781b      	ldrb	r3, [r3, #0]
10044d4c:	215c      	movs	r1, #92	@ 0x5c
10044d4e:	434b      	muls	r3, r1
10044d50:	4904      	ldr	r1, [pc, #16]	@ (10044d64 <LL_RADIO_RadioCommandList_Enable+0x38>)
10044d52:	468c      	mov	ip, r1
10044d54:	4463      	add	r3, ip
10044d56:	2140      	movs	r1, #64	@ 0x40
10044d58:	430a      	orrs	r2, r1
10044d5a:	601a      	str	r2, [r3, #0]
}
10044d5c:	46c0      	nop			@ (mov r8, r8)
10044d5e:	46bd      	mov	sp, r7
10044d60:	b002      	add	sp, #8
10044d62:	bd80      	pop	{r7, pc}
10044d64:	200000dc 	.word	0x200000dc

10044d68 <LL_RADIO_RadioCommandList_Disable>:
  * @rmtoll WORD0          RADIOCOMLISTENA            LL_RADIO_RadioCommandList_Disable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_RadioCommandList_Disable(uint8_t stateMachineNo)
{
10044d68:	b580      	push	{r7, lr}
10044d6a:	b082      	sub	sp, #8
10044d6c:	af00      	add	r7, sp, #0
10044d6e:	0002      	movs	r2, r0
10044d70:	1dfb      	adds	r3, r7, #7
10044d72:	701a      	strb	r2, [r3, #0]
  CLEAR_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_RADIOCOMLISTENA);
10044d74:	1dfb      	adds	r3, r7, #7
10044d76:	781b      	ldrb	r3, [r3, #0]
10044d78:	225c      	movs	r2, #92	@ 0x5c
10044d7a:	4353      	muls	r3, r2
10044d7c:	4a08      	ldr	r2, [pc, #32]	@ (10044da0 <LL_RADIO_RadioCommandList_Disable+0x38>)
10044d7e:	4694      	mov	ip, r2
10044d80:	4463      	add	r3, ip
10044d82:	681a      	ldr	r2, [r3, #0]
10044d84:	1dfb      	adds	r3, r7, #7
10044d86:	781b      	ldrb	r3, [r3, #0]
10044d88:	215c      	movs	r1, #92	@ 0x5c
10044d8a:	434b      	muls	r3, r1
10044d8c:	4904      	ldr	r1, [pc, #16]	@ (10044da0 <LL_RADIO_RadioCommandList_Disable+0x38>)
10044d8e:	468c      	mov	ip, r1
10044d90:	4463      	add	r3, ip
10044d92:	2140      	movs	r1, #64	@ 0x40
10044d94:	438a      	bics	r2, r1
10044d96:	601a      	str	r2, [r3, #0]
}
10044d98:	46c0      	nop			@ (mov r8, r8)
10044d9a:	46bd      	mov	sp, r7
10044d9c:	b002      	add	sp, #8
10044d9e:	bd80      	pop	{r7, pc}
10044da0:	200000dc 	.word	0x200000dc

10044da4 <LL_RADIO_TxMode_Enable>:
  * @rmtoll WORD0          TXMODE            LL_RADIO_TxMode_Enable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TxMode_Enable(uint8_t stateMachineNo)
{
10044da4:	b580      	push	{r7, lr}
10044da6:	b082      	sub	sp, #8
10044da8:	af00      	add	r7, sp, #0
10044daa:	0002      	movs	r2, r0
10044dac:	1dfb      	adds	r3, r7, #7
10044dae:	701a      	strb	r2, [r3, #0]
  SET_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_TXMODE);
10044db0:	1dfb      	adds	r3, r7, #7
10044db2:	781b      	ldrb	r3, [r3, #0]
10044db4:	225c      	movs	r2, #92	@ 0x5c
10044db6:	4353      	muls	r3, r2
10044db8:	4a08      	ldr	r2, [pc, #32]	@ (10044ddc <LL_RADIO_TxMode_Enable+0x38>)
10044dba:	4694      	mov	ip, r2
10044dbc:	4463      	add	r3, ip
10044dbe:	681a      	ldr	r2, [r3, #0]
10044dc0:	1dfb      	adds	r3, r7, #7
10044dc2:	781b      	ldrb	r3, [r3, #0]
10044dc4:	215c      	movs	r1, #92	@ 0x5c
10044dc6:	434b      	muls	r3, r1
10044dc8:	4904      	ldr	r1, [pc, #16]	@ (10044ddc <LL_RADIO_TxMode_Enable+0x38>)
10044dca:	468c      	mov	ip, r1
10044dcc:	4463      	add	r3, ip
10044dce:	2180      	movs	r1, #128	@ 0x80
10044dd0:	430a      	orrs	r2, r1
10044dd2:	601a      	str	r2, [r3, #0]
}
10044dd4:	46c0      	nop			@ (mov r8, r8)
10044dd6:	46bd      	mov	sp, r7
10044dd8:	b002      	add	sp, #8
10044dda:	bd80      	pop	{r7, pc}
10044ddc:	200000dc 	.word	0x200000dc

10044de0 <LL_RADIO_TxMode_Disable>:
  * @rmtoll WORD0          TXMODE            LL_RADIO_TxMode_Disable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TxMode_Disable(uint8_t stateMachineNo)
{
10044de0:	b580      	push	{r7, lr}
10044de2:	b082      	sub	sp, #8
10044de4:	af00      	add	r7, sp, #0
10044de6:	0002      	movs	r2, r0
10044de8:	1dfb      	adds	r3, r7, #7
10044dea:	701a      	strb	r2, [r3, #0]
  CLEAR_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_TXMODE);
10044dec:	1dfb      	adds	r3, r7, #7
10044dee:	781b      	ldrb	r3, [r3, #0]
10044df0:	225c      	movs	r2, #92	@ 0x5c
10044df2:	4353      	muls	r3, r2
10044df4:	4a08      	ldr	r2, [pc, #32]	@ (10044e18 <LL_RADIO_TxMode_Disable+0x38>)
10044df6:	4694      	mov	ip, r2
10044df8:	4463      	add	r3, ip
10044dfa:	681a      	ldr	r2, [r3, #0]
10044dfc:	1dfb      	adds	r3, r7, #7
10044dfe:	781b      	ldrb	r3, [r3, #0]
10044e00:	215c      	movs	r1, #92	@ 0x5c
10044e02:	434b      	muls	r3, r1
10044e04:	4904      	ldr	r1, [pc, #16]	@ (10044e18 <LL_RADIO_TxMode_Disable+0x38>)
10044e06:	468c      	mov	ip, r1
10044e08:	4463      	add	r3, ip
10044e0a:	2180      	movs	r1, #128	@ 0x80
10044e0c:	438a      	bics	r2, r1
10044e0e:	601a      	str	r2, [r3, #0]
}
10044e10:	46c0      	nop			@ (mov r8, r8)
10044e12:	46bd      	mov	sp, r7
10044e14:	b002      	add	sp, #8
10044e16:	bd80      	pop	{r7, pc}
10044e18:	200000dc 	.word	0x200000dc

10044e1c <LL_RADIO_TxMode_IsEnabled>:
  * @rmtoll WORD0          TXMODE            LL_RADIO_TxMode_IsEnabled
  * @param  stateMachineNo
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RADIO_TxMode_IsEnabled(uint8_t stateMachineNo)
{
10044e1c:	b580      	push	{r7, lr}
10044e1e:	b082      	sub	sp, #8
10044e20:	af00      	add	r7, sp, #0
10044e22:	0002      	movs	r2, r0
10044e24:	1dfb      	adds	r3, r7, #7
10044e26:	701a      	strb	r2, [r3, #0]
  return ((READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_TXMODE) == (STATEMACH_WORD0_TXMODE)) ? 1U : 0U);
10044e28:	1dfb      	adds	r3, r7, #7
10044e2a:	781b      	ldrb	r3, [r3, #0]
10044e2c:	225c      	movs	r2, #92	@ 0x5c
10044e2e:	4353      	muls	r3, r2
10044e30:	4a07      	ldr	r2, [pc, #28]	@ (10044e50 <LL_RADIO_TxMode_IsEnabled+0x34>)
10044e32:	4694      	mov	ip, r2
10044e34:	4463      	add	r3, ip
10044e36:	681b      	ldr	r3, [r3, #0]
10044e38:	2280      	movs	r2, #128	@ 0x80
10044e3a:	4013      	ands	r3, r2
10044e3c:	2b80      	cmp	r3, #128	@ 0x80
10044e3e:	d101      	bne.n	10044e44 <LL_RADIO_TxMode_IsEnabled+0x28>
10044e40:	2301      	movs	r3, #1
10044e42:	e000      	b.n	10044e46 <LL_RADIO_TxMode_IsEnabled+0x2a>
10044e44:	2300      	movs	r3, #0
}
10044e46:	0018      	movs	r0, r3
10044e48:	46bd      	mov	sp, r7
10044e4a:	b002      	add	sp, #8
10044e4c:	bd80      	pop	{r7, pc}
10044e4e:	46c0      	nop			@ (mov r8, r8)
10044e50:	200000dc 	.word	0x200000dc

10044e54 <LL_RADIO_SetRemapChannel>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetRemapChannel(uint8_t stateMachineNo, uint32_t value)
{
10044e54:	b580      	push	{r7, lr}
10044e56:	b082      	sub	sp, #8
10044e58:	af00      	add	r7, sp, #0
10044e5a:	0002      	movs	r2, r0
10044e5c:	6039      	str	r1, [r7, #0]
10044e5e:	1dfb      	adds	r3, r7, #7
10044e60:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_REMAP_CHAN, value);
10044e62:	1dfb      	adds	r3, r7, #7
10044e64:	781b      	ldrb	r3, [r3, #0]
10044e66:	225c      	movs	r2, #92	@ 0x5c
10044e68:	4353      	muls	r3, r2
10044e6a:	4a0c      	ldr	r2, [pc, #48]	@ (10044e9c <LL_RADIO_SetRemapChannel+0x48>)
10044e6c:	4694      	mov	ip, r2
10044e6e:	4463      	add	r3, ip
10044e70:	681b      	ldr	r3, [r3, #0]
10044e72:	4a0b      	ldr	r2, [pc, #44]	@ (10044ea0 <LL_RADIO_SetRemapChannel+0x4c>)
10044e74:	4013      	ands	r3, r2
10044e76:	0019      	movs	r1, r3
10044e78:	683b      	ldr	r3, [r7, #0]
10044e7a:	021a      	lsls	r2, r3, #8
10044e7c:	23fc      	movs	r3, #252	@ 0xfc
10044e7e:	019b      	lsls	r3, r3, #6
10044e80:	401a      	ands	r2, r3
10044e82:	1dfb      	adds	r3, r7, #7
10044e84:	781b      	ldrb	r3, [r3, #0]
10044e86:	205c      	movs	r0, #92	@ 0x5c
10044e88:	4343      	muls	r3, r0
10044e8a:	4804      	ldr	r0, [pc, #16]	@ (10044e9c <LL_RADIO_SetRemapChannel+0x48>)
10044e8c:	4684      	mov	ip, r0
10044e8e:	4463      	add	r3, ip
10044e90:	430a      	orrs	r2, r1
10044e92:	601a      	str	r2, [r3, #0]
}
10044e94:	46c0      	nop			@ (mov r8, r8)
10044e96:	46bd      	mov	sp, r7
10044e98:	b002      	add	sp, #8
10044e9a:	bd80      	pop	{r7, pc}
10044e9c:	200000dc 	.word	0x200000dc
10044ea0:	ffffc0ff 	.word	0xffffc0ff

10044ea4 <LL_RADIO_GetRemapChannel>:
  * @rmtoll WORD0          REMAP_CHAN       LL_RADIO_GetRemapChannel
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetRemapChannel(uint8_t stateMachineNo)
{
10044ea4:	b580      	push	{r7, lr}
10044ea6:	b082      	sub	sp, #8
10044ea8:	af00      	add	r7, sp, #0
10044eaa:	0002      	movs	r2, r0
10044eac:	1dfb      	adds	r3, r7, #7
10044eae:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD0,
10044eb0:	1dfb      	adds	r3, r7, #7
10044eb2:	781b      	ldrb	r3, [r3, #0]
10044eb4:	225c      	movs	r2, #92	@ 0x5c
10044eb6:	4353      	muls	r3, r2
10044eb8:	4a05      	ldr	r2, [pc, #20]	@ (10044ed0 <LL_RADIO_GetRemapChannel+0x2c>)
10044eba:	4694      	mov	ip, r2
10044ebc:	4463      	add	r3, ip
10044ebe:	681b      	ldr	r3, [r3, #0]
10044ec0:	0a1b      	lsrs	r3, r3, #8
10044ec2:	223f      	movs	r2, #63	@ 0x3f
10044ec4:	4013      	ands	r3, r2
                             STATEMACH_WORD0_REMAP_CHAN) >> STATEMACH_WORD0_REMAP_CHAN_Pos);
}
10044ec6:	0018      	movs	r0, r3
10044ec8:	46bd      	mov	sp, r7
10044eca:	b002      	add	sp, #8
10044ecc:	bd80      	pop	{r7, pc}
10044ece:	46c0      	nop			@ (mov r8, r8)
10044ed0:	200000dc 	.word	0x200000dc

10044ed4 <LL_RADIO_ToggleNextExpectedSequenceNumber>:
  * @rmtoll WORD0          NESN       LL_RADIO_ToggleNextExpectedSequenceNumber
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_ToggleNextExpectedSequenceNumber(uint8_t stateMachineNo)
{
10044ed4:	b580      	push	{r7, lr}
10044ed6:	b082      	sub	sp, #8
10044ed8:	af00      	add	r7, sp, #0
10044eda:	0002      	movs	r2, r0
10044edc:	1dfb      	adds	r3, r7, #7
10044ede:	701a      	strb	r2, [r3, #0]
  TOGGLE_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_NESN);
10044ee0:	1dfb      	adds	r3, r7, #7
10044ee2:	781b      	ldrb	r3, [r3, #0]
10044ee4:	225c      	movs	r2, #92	@ 0x5c
10044ee6:	4353      	muls	r3, r2
10044ee8:	4a09      	ldr	r2, [pc, #36]	@ (10044f10 <LL_RADIO_ToggleNextExpectedSequenceNumber+0x3c>)
10044eea:	4694      	mov	ip, r2
10044eec:	4463      	add	r3, ip
10044eee:	681a      	ldr	r2, [r3, #0]
10044ef0:	1dfb      	adds	r3, r7, #7
10044ef2:	781b      	ldrb	r3, [r3, #0]
10044ef4:	215c      	movs	r1, #92	@ 0x5c
10044ef6:	434b      	muls	r3, r1
10044ef8:	4905      	ldr	r1, [pc, #20]	@ (10044f10 <LL_RADIO_ToggleNextExpectedSequenceNumber+0x3c>)
10044efa:	468c      	mov	ip, r1
10044efc:	4463      	add	r3, ip
10044efe:	2180      	movs	r1, #128	@ 0x80
10044f00:	0209      	lsls	r1, r1, #8
10044f02:	404a      	eors	r2, r1
10044f04:	601a      	str	r2, [r3, #0]
}
10044f06:	46c0      	nop			@ (mov r8, r8)
10044f08:	46bd      	mov	sp, r7
10044f0a:	b002      	add	sp, #8
10044f0c:	bd80      	pop	{r7, pc}
10044f0e:	46c0      	nop			@ (mov r8, r8)
10044f10:	200000dc 	.word	0x200000dc

10044f14 <LL_RADIO_Encryption_Enable>:
  * @rmtoll WORD0          ENCRYPTON            LL_RADIO_Encryption_Enable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_Encryption_Enable(uint8_t stateMachineNo)
{
10044f14:	b580      	push	{r7, lr}
10044f16:	b082      	sub	sp, #8
10044f18:	af00      	add	r7, sp, #0
10044f1a:	0002      	movs	r2, r0
10044f1c:	1dfb      	adds	r3, r7, #7
10044f1e:	701a      	strb	r2, [r3, #0]
  SET_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_ENCRYPTON);
10044f20:	1dfb      	adds	r3, r7, #7
10044f22:	781b      	ldrb	r3, [r3, #0]
10044f24:	225c      	movs	r2, #92	@ 0x5c
10044f26:	4353      	muls	r3, r2
10044f28:	4a09      	ldr	r2, [pc, #36]	@ (10044f50 <LL_RADIO_Encryption_Enable+0x3c>)
10044f2a:	4694      	mov	ip, r2
10044f2c:	4463      	add	r3, ip
10044f2e:	681a      	ldr	r2, [r3, #0]
10044f30:	1dfb      	adds	r3, r7, #7
10044f32:	781b      	ldrb	r3, [r3, #0]
10044f34:	215c      	movs	r1, #92	@ 0x5c
10044f36:	434b      	muls	r3, r1
10044f38:	4905      	ldr	r1, [pc, #20]	@ (10044f50 <LL_RADIO_Encryption_Enable+0x3c>)
10044f3a:	468c      	mov	ip, r1
10044f3c:	4463      	add	r3, ip
10044f3e:	2180      	movs	r1, #128	@ 0x80
10044f40:	0389      	lsls	r1, r1, #14
10044f42:	430a      	orrs	r2, r1
10044f44:	601a      	str	r2, [r3, #0]
}
10044f46:	46c0      	nop			@ (mov r8, r8)
10044f48:	46bd      	mov	sp, r7
10044f4a:	b002      	add	sp, #8
10044f4c:	bd80      	pop	{r7, pc}
10044f4e:	46c0      	nop			@ (mov r8, r8)
10044f50:	200000dc 	.word	0x200000dc

10044f54 <LL_RADIO_Encryption_Disable>:
  * @rmtoll WORD0          ENCRYPTON            LL_RADIO_Encryption_Disable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_Encryption_Disable(uint8_t stateMachineNo)
{
10044f54:	b580      	push	{r7, lr}
10044f56:	b082      	sub	sp, #8
10044f58:	af00      	add	r7, sp, #0
10044f5a:	0002      	movs	r2, r0
10044f5c:	1dfb      	adds	r3, r7, #7
10044f5e:	701a      	strb	r2, [r3, #0]
  CLEAR_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_ENCRYPTON);
10044f60:	1dfb      	adds	r3, r7, #7
10044f62:	781b      	ldrb	r3, [r3, #0]
10044f64:	225c      	movs	r2, #92	@ 0x5c
10044f66:	4353      	muls	r3, r2
10044f68:	4a08      	ldr	r2, [pc, #32]	@ (10044f8c <LL_RADIO_Encryption_Disable+0x38>)
10044f6a:	4694      	mov	ip, r2
10044f6c:	4463      	add	r3, ip
10044f6e:	681a      	ldr	r2, [r3, #0]
10044f70:	1dfb      	adds	r3, r7, #7
10044f72:	781b      	ldrb	r3, [r3, #0]
10044f74:	215c      	movs	r1, #92	@ 0x5c
10044f76:	434b      	muls	r3, r1
10044f78:	4904      	ldr	r1, [pc, #16]	@ (10044f8c <LL_RADIO_Encryption_Disable+0x38>)
10044f7a:	468c      	mov	ip, r1
10044f7c:	4463      	add	r3, ip
10044f7e:	4904      	ldr	r1, [pc, #16]	@ (10044f90 <LL_RADIO_Encryption_Disable+0x3c>)
10044f80:	400a      	ands	r2, r1
10044f82:	601a      	str	r2, [r3, #0]
}
10044f84:	46c0      	nop			@ (mov r8, r8)
10044f86:	46bd      	mov	sp, r7
10044f88:	b002      	add	sp, #8
10044f8a:	bd80      	pop	{r7, pc}
10044f8c:	200000dc 	.word	0x200000dc
10044f90:	ffdfffff 	.word	0xffdfffff

10044f94 <LL_RADIO_SetTransmissionPhy>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetTransmissionPhy(uint8_t stateMachineNo, uint32_t value)
{
10044f94:	b580      	push	{r7, lr}
10044f96:	b082      	sub	sp, #8
10044f98:	af00      	add	r7, sp, #0
10044f9a:	0002      	movs	r2, r0
10044f9c:	6039      	str	r1, [r7, #0]
10044f9e:	1dfb      	adds	r3, r7, #7
10044fa0:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_TXPHY, value);
10044fa2:	1dfb      	adds	r3, r7, #7
10044fa4:	781b      	ldrb	r3, [r3, #0]
10044fa6:	225c      	movs	r2, #92	@ 0x5c
10044fa8:	4353      	muls	r3, r2
10044faa:	4a0c      	ldr	r2, [pc, #48]	@ (10044fdc <LL_RADIO_SetTransmissionPhy+0x48>)
10044fac:	4694      	mov	ip, r2
10044fae:	4463      	add	r3, ip
10044fb0:	681b      	ldr	r3, [r3, #0]
10044fb2:	4a0b      	ldr	r2, [pc, #44]	@ (10044fe0 <LL_RADIO_SetTransmissionPhy+0x4c>)
10044fb4:	4013      	ands	r3, r2
10044fb6:	0019      	movs	r1, r3
10044fb8:	683b      	ldr	r3, [r7, #0]
10044fba:	061a      	lsls	r2, r3, #24
10044fbc:	23e0      	movs	r3, #224	@ 0xe0
10044fbe:	04db      	lsls	r3, r3, #19
10044fc0:	401a      	ands	r2, r3
10044fc2:	1dfb      	adds	r3, r7, #7
10044fc4:	781b      	ldrb	r3, [r3, #0]
10044fc6:	205c      	movs	r0, #92	@ 0x5c
10044fc8:	4343      	muls	r3, r0
10044fca:	4804      	ldr	r0, [pc, #16]	@ (10044fdc <LL_RADIO_SetTransmissionPhy+0x48>)
10044fcc:	4684      	mov	ip, r0
10044fce:	4463      	add	r3, ip
10044fd0:	430a      	orrs	r2, r1
10044fd2:	601a      	str	r2, [r3, #0]
}
10044fd4:	46c0      	nop			@ (mov r8, r8)
10044fd6:	46bd      	mov	sp, r7
10044fd8:	b002      	add	sp, #8
10044fda:	bd80      	pop	{r7, pc}
10044fdc:	200000dc 	.word	0x200000dc
10044fe0:	f8ffffff 	.word	0xf8ffffff

10044fe4 <LL_RADIO_GetTransmissionPhy>:
  * @rmtoll WORD0          TXPHY       LL_RADIO_GetTransmissionPhy
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetTransmissionPhy(uint8_t stateMachineNo)
{
10044fe4:	b580      	push	{r7, lr}
10044fe6:	b082      	sub	sp, #8
10044fe8:	af00      	add	r7, sp, #0
10044fea:	0002      	movs	r2, r0
10044fec:	1dfb      	adds	r3, r7, #7
10044fee:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_TXPHY) >> STATEMACH_WORD0_TXPHY_Pos);
10044ff0:	1dfb      	adds	r3, r7, #7
10044ff2:	781b      	ldrb	r3, [r3, #0]
10044ff4:	225c      	movs	r2, #92	@ 0x5c
10044ff6:	4353      	muls	r3, r2
10044ff8:	4a05      	ldr	r2, [pc, #20]	@ (10045010 <LL_RADIO_GetTransmissionPhy+0x2c>)
10044ffa:	4694      	mov	ip, r2
10044ffc:	4463      	add	r3, ip
10044ffe:	681b      	ldr	r3, [r3, #0]
10045000:	0e1b      	lsrs	r3, r3, #24
10045002:	2207      	movs	r2, #7
10045004:	4013      	ands	r3, r2
}
10045006:	0018      	movs	r0, r3
10045008:	46bd      	mov	sp, r7
1004500a:	b002      	add	sp, #8
1004500c:	bd80      	pop	{r7, pc}
1004500e:	46c0      	nop			@ (mov r8, r8)
10045010:	200000dc 	.word	0x200000dc

10045014 <LL_RADIO_SetCTEDisable>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetCTEDisable(uint8_t stateMachineNo, uint32_t value)
{
10045014:	b580      	push	{r7, lr}
10045016:	b082      	sub	sp, #8
10045018:	af00      	add	r7, sp, #0
1004501a:	0002      	movs	r2, r0
1004501c:	6039      	str	r1, [r7, #0]
1004501e:	1dfb      	adds	r3, r7, #7
10045020:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_CTEDISABLE, value);
10045022:	1dfb      	adds	r3, r7, #7
10045024:	781b      	ldrb	r3, [r3, #0]
10045026:	225c      	movs	r2, #92	@ 0x5c
10045028:	4353      	muls	r3, r2
1004502a:	4a0c      	ldr	r2, [pc, #48]	@ (1004505c <LL_RADIO_SetCTEDisable+0x48>)
1004502c:	4694      	mov	ip, r2
1004502e:	4463      	add	r3, ip
10045030:	681b      	ldr	r3, [r3, #0]
10045032:	4a0b      	ldr	r2, [pc, #44]	@ (10045060 <LL_RADIO_SetCTEDisable+0x4c>)
10045034:	4013      	ands	r3, r2
10045036:	0019      	movs	r1, r3
10045038:	683b      	ldr	r3, [r7, #0]
1004503a:	06da      	lsls	r2, r3, #27
1004503c:	2380      	movs	r3, #128	@ 0x80
1004503e:	051b      	lsls	r3, r3, #20
10045040:	401a      	ands	r2, r3
10045042:	1dfb      	adds	r3, r7, #7
10045044:	781b      	ldrb	r3, [r3, #0]
10045046:	205c      	movs	r0, #92	@ 0x5c
10045048:	4343      	muls	r3, r0
1004504a:	4804      	ldr	r0, [pc, #16]	@ (1004505c <LL_RADIO_SetCTEDisable+0x48>)
1004504c:	4684      	mov	ip, r0
1004504e:	4463      	add	r3, ip
10045050:	430a      	orrs	r2, r1
10045052:	601a      	str	r2, [r3, #0]
}
10045054:	46c0      	nop			@ (mov r8, r8)
10045056:	46bd      	mov	sp, r7
10045058:	b002      	add	sp, #8
1004505a:	bd80      	pop	{r7, pc}
1004505c:	200000dc 	.word	0x200000dc
10045060:	f7ffffff 	.word	0xf7ffffff

10045064 <LL_RADIO_SetReceptionPhy>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetReceptionPhy(uint8_t stateMachineNo, uint32_t value)
{
10045064:	b580      	push	{r7, lr}
10045066:	b082      	sub	sp, #8
10045068:	af00      	add	r7, sp, #0
1004506a:	0002      	movs	r2, r0
1004506c:	6039      	str	r1, [r7, #0]
1004506e:	1dfb      	adds	r3, r7, #7
10045070:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_RXPHY, value);
10045072:	1dfb      	adds	r3, r7, #7
10045074:	781b      	ldrb	r3, [r3, #0]
10045076:	225c      	movs	r2, #92	@ 0x5c
10045078:	4353      	muls	r3, r2
1004507a:	4a0c      	ldr	r2, [pc, #48]	@ (100450ac <LL_RADIO_SetReceptionPhy+0x48>)
1004507c:	4694      	mov	ip, r2
1004507e:	4463      	add	r3, ip
10045080:	681b      	ldr	r3, [r3, #0]
10045082:	4a0b      	ldr	r2, [pc, #44]	@ (100450b0 <LL_RADIO_SetReceptionPhy+0x4c>)
10045084:	4013      	ands	r3, r2
10045086:	0019      	movs	r1, r3
10045088:	683b      	ldr	r3, [r7, #0]
1004508a:	071a      	lsls	r2, r3, #28
1004508c:	23e0      	movs	r3, #224	@ 0xe0
1004508e:	05db      	lsls	r3, r3, #23
10045090:	401a      	ands	r2, r3
10045092:	1dfb      	adds	r3, r7, #7
10045094:	781b      	ldrb	r3, [r3, #0]
10045096:	205c      	movs	r0, #92	@ 0x5c
10045098:	4343      	muls	r3, r0
1004509a:	4804      	ldr	r0, [pc, #16]	@ (100450ac <LL_RADIO_SetReceptionPhy+0x48>)
1004509c:	4684      	mov	ip, r0
1004509e:	4463      	add	r3, ip
100450a0:	430a      	orrs	r2, r1
100450a2:	601a      	str	r2, [r3, #0]
}
100450a4:	46c0      	nop			@ (mov r8, r8)
100450a6:	46bd      	mov	sp, r7
100450a8:	b002      	add	sp, #8
100450aa:	bd80      	pop	{r7, pc}
100450ac:	200000dc 	.word	0x200000dc
100450b0:	8fffffff 	.word	0x8fffffff

100450b4 <LL_RADIO_GetReceptionPhy>:
  * @rmtoll WORD0          RXPHY       LL_RADIO_GetReceptionPhy
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetReceptionPhy(uint8_t stateMachineNo)
{
100450b4:	b580      	push	{r7, lr}
100450b6:	b082      	sub	sp, #8
100450b8:	af00      	add	r7, sp, #0
100450ba:	0002      	movs	r2, r0
100450bc:	1dfb      	adds	r3, r7, #7
100450be:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD0, STATEMACH_WORD0_RXPHY) >> STATEMACH_WORD0_RXPHY_Pos);
100450c0:	1dfb      	adds	r3, r7, #7
100450c2:	781b      	ldrb	r3, [r3, #0]
100450c4:	225c      	movs	r2, #92	@ 0x5c
100450c6:	4353      	muls	r3, r2
100450c8:	4a05      	ldr	r2, [pc, #20]	@ (100450e0 <LL_RADIO_GetReceptionPhy+0x2c>)
100450ca:	4694      	mov	ip, r2
100450cc:	4463      	add	r3, ip
100450ce:	681b      	ldr	r3, [r3, #0]
100450d0:	0f1b      	lsrs	r3, r3, #28
100450d2:	2207      	movs	r2, #7
100450d4:	4013      	ands	r3, r2
}
100450d6:	0018      	movs	r0, r3
100450d8:	46bd      	mov	sp, r7
100450da:	b002      	add	sp, #8
100450dc:	bd80      	pop	{r7, pc}
100450de:	46c0      	nop			@ (mov r8, r8)
100450e0:	200000dc 	.word	0x200000dc

100450e4 <LL_RADIO_SetTxPoint>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetTxPoint(uint8_t stateMachineNo, uint32_t value)
{
100450e4:	b580      	push	{r7, lr}
100450e6:	b082      	sub	sp, #8
100450e8:	af00      	add	r7, sp, #0
100450ea:	0002      	movs	r2, r0
100450ec:	6039      	str	r1, [r7, #0]
100450ee:	1dfb      	adds	r3, r7, #7
100450f0:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD1, STATEMACH_WORD1_TXPOINT, value);
100450f2:	1dfb      	adds	r3, r7, #7
100450f4:	781b      	ldrb	r3, [r3, #0]
100450f6:	225c      	movs	r2, #92	@ 0x5c
100450f8:	4353      	muls	r3, r2
100450fa:	4a08      	ldr	r2, [pc, #32]	@ (1004511c <LL_RADIO_SetTxPoint+0x38>)
100450fc:	4694      	mov	ip, r2
100450fe:	4463      	add	r3, ip
10045100:	685b      	ldr	r3, [r3, #4]
10045102:	1dfb      	adds	r3, r7, #7
10045104:	781b      	ldrb	r3, [r3, #0]
10045106:	225c      	movs	r2, #92	@ 0x5c
10045108:	4353      	muls	r3, r2
1004510a:	4a04      	ldr	r2, [pc, #16]	@ (1004511c <LL_RADIO_SetTxPoint+0x38>)
1004510c:	4694      	mov	ip, r2
1004510e:	4463      	add	r3, ip
10045110:	683a      	ldr	r2, [r7, #0]
10045112:	605a      	str	r2, [r3, #4]
}
10045114:	46c0      	nop			@ (mov r8, r8)
10045116:	46bd      	mov	sp, r7
10045118:	b002      	add	sp, #8
1004511a:	bd80      	pop	{r7, pc}
1004511c:	200000dc 	.word	0x200000dc

10045120 <LL_RADIO_SetRcvPoint>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetRcvPoint(uint8_t stateMachineNo, uint32_t value)
{
10045120:	b580      	push	{r7, lr}
10045122:	b082      	sub	sp, #8
10045124:	af00      	add	r7, sp, #0
10045126:	0002      	movs	r2, r0
10045128:	6039      	str	r1, [r7, #0]
1004512a:	1dfb      	adds	r3, r7, #7
1004512c:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD2, STATEMACH_WORD2_RCVPOINT, value);
1004512e:	1dfb      	adds	r3, r7, #7
10045130:	781b      	ldrb	r3, [r3, #0]
10045132:	225c      	movs	r2, #92	@ 0x5c
10045134:	4353      	muls	r3, r2
10045136:	4a08      	ldr	r2, [pc, #32]	@ (10045158 <LL_RADIO_SetRcvPoint+0x38>)
10045138:	4694      	mov	ip, r2
1004513a:	4463      	add	r3, ip
1004513c:	689b      	ldr	r3, [r3, #8]
1004513e:	1dfb      	adds	r3, r7, #7
10045140:	781b      	ldrb	r3, [r3, #0]
10045142:	225c      	movs	r2, #92	@ 0x5c
10045144:	4353      	muls	r3, r2
10045146:	4a04      	ldr	r2, [pc, #16]	@ (10045158 <LL_RADIO_SetRcvPoint+0x38>)
10045148:	4694      	mov	ip, r2
1004514a:	4463      	add	r3, ip
1004514c:	683a      	ldr	r2, [r7, #0]
1004514e:	609a      	str	r2, [r3, #8]
}
10045150:	46c0      	nop			@ (mov r8, r8)
10045152:	46bd      	mov	sp, r7
10045154:	b002      	add	sp, #8
10045156:	bd80      	pop	{r7, pc}
10045158:	200000dc 	.word	0x200000dc

1004515c <LL_RADIO_SetPacketCounterTx_31_0>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetPacketCounterTx_31_0(uint8_t stateMachineNo, uint32_t value)
{
1004515c:	b580      	push	{r7, lr}
1004515e:	b082      	sub	sp, #8
10045160:	af00      	add	r7, sp, #0
10045162:	0002      	movs	r2, r0
10045164:	6039      	str	r1, [r7, #0]
10045166:	1dfb      	adds	r3, r7, #7
10045168:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD6, STATEMACH_WORD6_PCNTTX_31_0, value);
1004516a:	1dfb      	adds	r3, r7, #7
1004516c:	781b      	ldrb	r3, [r3, #0]
1004516e:	225c      	movs	r2, #92	@ 0x5c
10045170:	4353      	muls	r3, r2
10045172:	4a08      	ldr	r2, [pc, #32]	@ (10045194 <LL_RADIO_SetPacketCounterTx_31_0+0x38>)
10045174:	4694      	mov	ip, r2
10045176:	4463      	add	r3, ip
10045178:	699b      	ldr	r3, [r3, #24]
1004517a:	1dfb      	adds	r3, r7, #7
1004517c:	781b      	ldrb	r3, [r3, #0]
1004517e:	225c      	movs	r2, #92	@ 0x5c
10045180:	4353      	muls	r3, r2
10045182:	4a04      	ldr	r2, [pc, #16]	@ (10045194 <LL_RADIO_SetPacketCounterTx_31_0+0x38>)
10045184:	4694      	mov	ip, r2
10045186:	4463      	add	r3, ip
10045188:	683a      	ldr	r2, [r7, #0]
1004518a:	619a      	str	r2, [r3, #24]
}
1004518c:	46c0      	nop			@ (mov r8, r8)
1004518e:	46bd      	mov	sp, r7
10045190:	b002      	add	sp, #8
10045192:	bd80      	pop	{r7, pc}
10045194:	200000dc 	.word	0x200000dc

10045198 <LL_RADIO_SetPacketCounterTx_39_32>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetPacketCounterTx_39_32(uint8_t stateMachineNo, uint32_t value)
{
10045198:	b580      	push	{r7, lr}
1004519a:	b082      	sub	sp, #8
1004519c:	af00      	add	r7, sp, #0
1004519e:	0002      	movs	r2, r0
100451a0:	6039      	str	r1, [r7, #0]
100451a2:	1dfb      	adds	r3, r7, #7
100451a4:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD7, STATEMACH_WORD7_PCNTTX_39_32, value);
100451a6:	1dfb      	adds	r3, r7, #7
100451a8:	781b      	ldrb	r3, [r3, #0]
100451aa:	225c      	movs	r2, #92	@ 0x5c
100451ac:	4353      	muls	r3, r2
100451ae:	4a0b      	ldr	r2, [pc, #44]	@ (100451dc <LL_RADIO_SetPacketCounterTx_39_32+0x44>)
100451b0:	4694      	mov	ip, r2
100451b2:	4463      	add	r3, ip
100451b4:	69db      	ldr	r3, [r3, #28]
100451b6:	22ff      	movs	r2, #255	@ 0xff
100451b8:	4393      	bics	r3, r2
100451ba:	0019      	movs	r1, r3
100451bc:	683b      	ldr	r3, [r7, #0]
100451be:	22ff      	movs	r2, #255	@ 0xff
100451c0:	401a      	ands	r2, r3
100451c2:	1dfb      	adds	r3, r7, #7
100451c4:	781b      	ldrb	r3, [r3, #0]
100451c6:	205c      	movs	r0, #92	@ 0x5c
100451c8:	4343      	muls	r3, r0
100451ca:	4804      	ldr	r0, [pc, #16]	@ (100451dc <LL_RADIO_SetPacketCounterTx_39_32+0x44>)
100451cc:	4684      	mov	ip, r0
100451ce:	4463      	add	r3, ip
100451d0:	430a      	orrs	r2, r1
100451d2:	61da      	str	r2, [r3, #28]
}
100451d4:	46c0      	nop			@ (mov r8, r8)
100451d6:	46bd      	mov	sp, r7
100451d8:	b002      	add	sp, #8
100451da:	bd80      	pop	{r7, pc}
100451dc:	200000dc 	.word	0x200000dc

100451e0 <LL_RADIO_GetPacketCounterTx_39_32>:
  * @rmtoll WORD7          PCNTTX_39_32       LL_RADIO_GetPacketCounterTx_39_32
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetPacketCounterTx_39_32(uint8_t stateMachineNo)
{
100451e0:	b580      	push	{r7, lr}
100451e2:	b082      	sub	sp, #8
100451e4:	af00      	add	r7, sp, #0
100451e6:	0002      	movs	r2, r0
100451e8:	1dfb      	adds	r3, r7, #7
100451ea:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD7,
100451ec:	1dfb      	adds	r3, r7, #7
100451ee:	781b      	ldrb	r3, [r3, #0]
100451f0:	225c      	movs	r2, #92	@ 0x5c
100451f2:	4353      	muls	r3, r2
100451f4:	4a04      	ldr	r2, [pc, #16]	@ (10045208 <LL_RADIO_GetPacketCounterTx_39_32+0x28>)
100451f6:	4694      	mov	ip, r2
100451f8:	4463      	add	r3, ip
100451fa:	69db      	ldr	r3, [r3, #28]
100451fc:	22ff      	movs	r2, #255	@ 0xff
100451fe:	4013      	ands	r3, r2
                             STATEMACH_WORD7_PCNTTX_39_32) >> STATEMACH_WORD7_PCNTTX_39_32_Pos);
}
10045200:	0018      	movs	r0, r3
10045202:	46bd      	mov	sp, r7
10045204:	b002      	add	sp, #8
10045206:	bd80      	pop	{r7, pc}
10045208:	200000dc 	.word	0x200000dc

1004520c <LL_RADIO_SetPacketCounterRx_23_0>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetPacketCounterRx_23_0(uint8_t stateMachineNo, uint32_t value)
{
1004520c:	b580      	push	{r7, lr}
1004520e:	b082      	sub	sp, #8
10045210:	af00      	add	r7, sp, #0
10045212:	0002      	movs	r2, r0
10045214:	6039      	str	r1, [r7, #0]
10045216:	1dfb      	adds	r3, r7, #7
10045218:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD7, STATEMACH_WORD7_PCNTRCV_23_0, value);
1004521a:	1dfb      	adds	r3, r7, #7
1004521c:	781b      	ldrb	r3, [r3, #0]
1004521e:	225c      	movs	r2, #92	@ 0x5c
10045220:	4353      	muls	r3, r2
10045222:	4a0b      	ldr	r2, [pc, #44]	@ (10045250 <LL_RADIO_SetPacketCounterRx_23_0+0x44>)
10045224:	4694      	mov	ip, r2
10045226:	4463      	add	r3, ip
10045228:	69db      	ldr	r3, [r3, #28]
1004522a:	22ff      	movs	r2, #255	@ 0xff
1004522c:	4013      	ands	r3, r2
1004522e:	0019      	movs	r1, r3
10045230:	683b      	ldr	r3, [r7, #0]
10045232:	021a      	lsls	r2, r3, #8
10045234:	1dfb      	adds	r3, r7, #7
10045236:	781b      	ldrb	r3, [r3, #0]
10045238:	205c      	movs	r0, #92	@ 0x5c
1004523a:	4343      	muls	r3, r0
1004523c:	4804      	ldr	r0, [pc, #16]	@ (10045250 <LL_RADIO_SetPacketCounterRx_23_0+0x44>)
1004523e:	4684      	mov	ip, r0
10045240:	4463      	add	r3, ip
10045242:	430a      	orrs	r2, r1
10045244:	61da      	str	r2, [r3, #28]
}
10045246:	46c0      	nop			@ (mov r8, r8)
10045248:	46bd      	mov	sp, r7
1004524a:	b002      	add	sp, #8
1004524c:	bd80      	pop	{r7, pc}
1004524e:	46c0      	nop			@ (mov r8, r8)
10045250:	200000dc 	.word	0x200000dc

10045254 <LL_RADIO_GetPacketCounterRx_23_0>:
  * @rmtoll WORD7          PCNTRCV_23_0       LL_RADIO_GetPacketCounterRx_23_0
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetPacketCounterRx_23_0(uint8_t stateMachineNo)
{
10045254:	b580      	push	{r7, lr}
10045256:	b082      	sub	sp, #8
10045258:	af00      	add	r7, sp, #0
1004525a:	0002      	movs	r2, r0
1004525c:	1dfb      	adds	r3, r7, #7
1004525e:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD7,
10045260:	1dfb      	adds	r3, r7, #7
10045262:	781b      	ldrb	r3, [r3, #0]
10045264:	225c      	movs	r2, #92	@ 0x5c
10045266:	4353      	muls	r3, r2
10045268:	4a05      	ldr	r2, [pc, #20]	@ (10045280 <LL_RADIO_GetPacketCounterRx_23_0+0x2c>)
1004526a:	4694      	mov	ip, r2
1004526c:	4463      	add	r3, ip
1004526e:	69db      	ldr	r3, [r3, #28]
10045270:	0a1b      	lsrs	r3, r3, #8
10045272:	021b      	lsls	r3, r3, #8
10045274:	0a1b      	lsrs	r3, r3, #8
                             STATEMACH_WORD7_PCNTRCV_23_0) >> STATEMACH_WORD7_PCNTRCV_23_0_Pos);
}
10045276:	0018      	movs	r0, r3
10045278:	46bd      	mov	sp, r7
1004527a:	b002      	add	sp, #8
1004527c:	bd80      	pop	{r7, pc}
1004527e:	46c0      	nop			@ (mov r8, r8)
10045280:	200000dc 	.word	0x200000dc

10045284 <LL_RADIO_SetPacketCounterRx_39_24>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetPacketCounterRx_39_24(uint8_t stateMachineNo, uint32_t value)
{
10045284:	b580      	push	{r7, lr}
10045286:	b082      	sub	sp, #8
10045288:	af00      	add	r7, sp, #0
1004528a:	0002      	movs	r2, r0
1004528c:	6039      	str	r1, [r7, #0]
1004528e:	1dfb      	adds	r3, r7, #7
10045290:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD8, STATEMACH_WORD8_PCNTRCV_39_24, value);
10045292:	1dfb      	adds	r3, r7, #7
10045294:	781b      	ldrb	r3, [r3, #0]
10045296:	225c      	movs	r2, #92	@ 0x5c
10045298:	4353      	muls	r3, r2
1004529a:	4a0b      	ldr	r2, [pc, #44]	@ (100452c8 <LL_RADIO_SetPacketCounterRx_39_24+0x44>)
1004529c:	4694      	mov	ip, r2
1004529e:	4463      	add	r3, ip
100452a0:	6a1b      	ldr	r3, [r3, #32]
100452a2:	0c1b      	lsrs	r3, r3, #16
100452a4:	0419      	lsls	r1, r3, #16
100452a6:	683b      	ldr	r3, [r7, #0]
100452a8:	041b      	lsls	r3, r3, #16
100452aa:	0c1a      	lsrs	r2, r3, #16
100452ac:	1dfb      	adds	r3, r7, #7
100452ae:	781b      	ldrb	r3, [r3, #0]
100452b0:	205c      	movs	r0, #92	@ 0x5c
100452b2:	4343      	muls	r3, r0
100452b4:	4804      	ldr	r0, [pc, #16]	@ (100452c8 <LL_RADIO_SetPacketCounterRx_39_24+0x44>)
100452b6:	4684      	mov	ip, r0
100452b8:	4463      	add	r3, ip
100452ba:	430a      	orrs	r2, r1
100452bc:	621a      	str	r2, [r3, #32]
}
100452be:	46c0      	nop			@ (mov r8, r8)
100452c0:	46bd      	mov	sp, r7
100452c2:	b002      	add	sp, #8
100452c4:	bd80      	pop	{r7, pc}
100452c6:	46c0      	nop			@ (mov r8, r8)
100452c8:	200000dc 	.word	0x200000dc

100452cc <LL_RADIO_GetPacketCounterRx_39_24>:
  * @rmtoll WORD8          PCNTRCV_39_24       LL_RADIO_GetPacketCounterRx_39_24
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetPacketCounterRx_39_24(uint8_t stateMachineNo)
{
100452cc:	b580      	push	{r7, lr}
100452ce:	b082      	sub	sp, #8
100452d0:	af00      	add	r7, sp, #0
100452d2:	0002      	movs	r2, r0
100452d4:	1dfb      	adds	r3, r7, #7
100452d6:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD8,
100452d8:	1dfb      	adds	r3, r7, #7
100452da:	781b      	ldrb	r3, [r3, #0]
100452dc:	225c      	movs	r2, #92	@ 0x5c
100452de:	4353      	muls	r3, r2
100452e0:	4a04      	ldr	r2, [pc, #16]	@ (100452f4 <LL_RADIO_GetPacketCounterRx_39_24+0x28>)
100452e2:	4694      	mov	ip, r2
100452e4:	4463      	add	r3, ip
100452e6:	6a1b      	ldr	r3, [r3, #32]
100452e8:	041b      	lsls	r3, r3, #16
100452ea:	0c1b      	lsrs	r3, r3, #16
                             STATEMACH_WORD8_PCNTRCV_39_24) >> STATEMACH_WORD8_PCNTRCV_39_24_Pos);
}
100452ec:	0018      	movs	r0, r3
100452ee:	46bd      	mov	sp, r7
100452f0:	b002      	add	sp, #8
100452f2:	bd80      	pop	{r7, pc}
100452f4:	200000dc 	.word	0x200000dc

100452f8 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Enable>:
  * @rmtoll WORD8          INTENCERROR            LL_RADIO_ReceiveEncryptionErrorInterrupt_Enable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_ReceiveEncryptionErrorInterrupt_Enable(uint8_t stateMachineNo)
{
100452f8:	b580      	push	{r7, lr}
100452fa:	b082      	sub	sp, #8
100452fc:	af00      	add	r7, sp, #0
100452fe:	0002      	movs	r2, r0
10045300:	1dfb      	adds	r3, r7, #7
10045302:	701a      	strb	r2, [r3, #0]
  SET_BIT((BLUEDATAWORD + stateMachineNo)->WORD8, STATEMACH_WORD8_INTENCERROR);
10045304:	1dfb      	adds	r3, r7, #7
10045306:	781b      	ldrb	r3, [r3, #0]
10045308:	225c      	movs	r2, #92	@ 0x5c
1004530a:	4353      	muls	r3, r2
1004530c:	4a09      	ldr	r2, [pc, #36]	@ (10045334 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Enable+0x3c>)
1004530e:	4694      	mov	ip, r2
10045310:	4463      	add	r3, ip
10045312:	6a1a      	ldr	r2, [r3, #32]
10045314:	1dfb      	adds	r3, r7, #7
10045316:	781b      	ldrb	r3, [r3, #0]
10045318:	215c      	movs	r1, #92	@ 0x5c
1004531a:	434b      	muls	r3, r1
1004531c:	4905      	ldr	r1, [pc, #20]	@ (10045334 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Enable+0x3c>)
1004531e:	468c      	mov	ip, r1
10045320:	4463      	add	r3, ip
10045322:	2180      	movs	r1, #128	@ 0x80
10045324:	0589      	lsls	r1, r1, #22
10045326:	430a      	orrs	r2, r1
10045328:	621a      	str	r2, [r3, #32]
}
1004532a:	46c0      	nop			@ (mov r8, r8)
1004532c:	46bd      	mov	sp, r7
1004532e:	b002      	add	sp, #8
10045330:	bd80      	pop	{r7, pc}
10045332:	46c0      	nop			@ (mov r8, r8)
10045334:	200000dc 	.word	0x200000dc

10045338 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable>:
  * @rmtoll WORD8          INTENCERROR            LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable
  * @param  stateMachineNo
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable(uint8_t stateMachineNo)
{
10045338:	b580      	push	{r7, lr}
1004533a:	b082      	sub	sp, #8
1004533c:	af00      	add	r7, sp, #0
1004533e:	0002      	movs	r2, r0
10045340:	1dfb      	adds	r3, r7, #7
10045342:	701a      	strb	r2, [r3, #0]
  CLEAR_BIT((BLUEDATAWORD + stateMachineNo)->WORD8, STATEMACH_WORD8_INTENCERROR);
10045344:	1dfb      	adds	r3, r7, #7
10045346:	781b      	ldrb	r3, [r3, #0]
10045348:	225c      	movs	r2, #92	@ 0x5c
1004534a:	4353      	muls	r3, r2
1004534c:	4a08      	ldr	r2, [pc, #32]	@ (10045370 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable+0x38>)
1004534e:	4694      	mov	ip, r2
10045350:	4463      	add	r3, ip
10045352:	6a1a      	ldr	r2, [r3, #32]
10045354:	1dfb      	adds	r3, r7, #7
10045356:	781b      	ldrb	r3, [r3, #0]
10045358:	215c      	movs	r1, #92	@ 0x5c
1004535a:	434b      	muls	r3, r1
1004535c:	4904      	ldr	r1, [pc, #16]	@ (10045370 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable+0x38>)
1004535e:	468c      	mov	ip, r1
10045360:	4463      	add	r3, ip
10045362:	4904      	ldr	r1, [pc, #16]	@ (10045374 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable+0x3c>)
10045364:	400a      	ands	r2, r1
10045366:	621a      	str	r2, [r3, #32]
}
10045368:	46c0      	nop			@ (mov r8, r8)
1004536a:	46bd      	mov	sp, r7
1004536c:	b002      	add	sp, #8
1004536e:	bd80      	pop	{r7, pc}
10045370:	200000dc 	.word	0x200000dc
10045374:	dfffffff 	.word	0xdfffffff

10045378 <LL_RADIO_SetAccessAddress>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetAccessAddress(uint8_t stateMachineNo, uint32_t value)
{
10045378:	b580      	push	{r7, lr}
1004537a:	b082      	sub	sp, #8
1004537c:	af00      	add	r7, sp, #0
1004537e:	0002      	movs	r2, r0
10045380:	6039      	str	r1, [r7, #0]
10045382:	1dfb      	adds	r3, r7, #7
10045384:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORD9, STATEMACH_WORD9_ACCADDR, value);
10045386:	1dfb      	adds	r3, r7, #7
10045388:	781b      	ldrb	r3, [r3, #0]
1004538a:	225c      	movs	r2, #92	@ 0x5c
1004538c:	4353      	muls	r3, r2
1004538e:	4a08      	ldr	r2, [pc, #32]	@ (100453b0 <LL_RADIO_SetAccessAddress+0x38>)
10045390:	4694      	mov	ip, r2
10045392:	4463      	add	r3, ip
10045394:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
10045396:	1dfb      	adds	r3, r7, #7
10045398:	781b      	ldrb	r3, [r3, #0]
1004539a:	225c      	movs	r2, #92	@ 0x5c
1004539c:	4353      	muls	r3, r2
1004539e:	4a04      	ldr	r2, [pc, #16]	@ (100453b0 <LL_RADIO_SetAccessAddress+0x38>)
100453a0:	4694      	mov	ip, r2
100453a2:	4463      	add	r3, ip
100453a4:	683a      	ldr	r2, [r7, #0]
100453a6:	625a      	str	r2, [r3, #36]	@ 0x24
}
100453a8:	46c0      	nop			@ (mov r8, r8)
100453aa:	46bd      	mov	sp, r7
100453ac:	b002      	add	sp, #8
100453ae:	bd80      	pop	{r7, pc}
100453b0:	200000dc 	.word	0x200000dc

100453b4 <LL_RADIO_GetAccessAddress>:
  * @rmtoll WORD9          ACCADDR       LL_RADIO_GetAccessAddress
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetAccessAddress(uint8_t stateMachineNo)
{
100453b4:	b580      	push	{r7, lr}
100453b6:	b082      	sub	sp, #8
100453b8:	af00      	add	r7, sp, #0
100453ba:	0002      	movs	r2, r0
100453bc:	1dfb      	adds	r3, r7, #7
100453be:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORD9,
100453c0:	1dfb      	adds	r3, r7, #7
100453c2:	781b      	ldrb	r3, [r3, #0]
100453c4:	225c      	movs	r2, #92	@ 0x5c
100453c6:	4353      	muls	r3, r2
100453c8:	4a03      	ldr	r2, [pc, #12]	@ (100453d8 <LL_RADIO_GetAccessAddress+0x24>)
100453ca:	4694      	mov	ip, r2
100453cc:	4463      	add	r3, ip
100453ce:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                             STATEMACH_WORD9_ACCADDR) >> STATEMACH_WORD9_ACCADDR_Pos);
}
100453d0:	0018      	movs	r0, r3
100453d2:	46bd      	mov	sp, r7
100453d4:	b002      	add	sp, #8
100453d6:	bd80      	pop	{r7, pc}
100453d8:	200000dc 	.word	0x200000dc

100453dc <LL_RADIO_SetCRCInitializationValue>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetCRCInitializationValue(uint8_t stateMachineNo, uint32_t value)
{
100453dc:	b580      	push	{r7, lr}
100453de:	b082      	sub	sp, #8
100453e0:	af00      	add	r7, sp, #0
100453e2:	0002      	movs	r2, r0
100453e4:	6039      	str	r1, [r7, #0]
100453e6:	1dfb      	adds	r3, r7, #7
100453e8:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORDA, STATEMACH_WORDA_CRCINIT, value);
100453ea:	1dfb      	adds	r3, r7, #7
100453ec:	781b      	ldrb	r3, [r3, #0]
100453ee:	225c      	movs	r2, #92	@ 0x5c
100453f0:	4353      	muls	r3, r2
100453f2:	4a0b      	ldr	r2, [pc, #44]	@ (10045420 <LL_RADIO_SetCRCInitializationValue+0x44>)
100453f4:	4694      	mov	ip, r2
100453f6:	4463      	add	r3, ip
100453f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
100453fa:	0e1b      	lsrs	r3, r3, #24
100453fc:	0619      	lsls	r1, r3, #24
100453fe:	683b      	ldr	r3, [r7, #0]
10045400:	021b      	lsls	r3, r3, #8
10045402:	0a1a      	lsrs	r2, r3, #8
10045404:	1dfb      	adds	r3, r7, #7
10045406:	781b      	ldrb	r3, [r3, #0]
10045408:	205c      	movs	r0, #92	@ 0x5c
1004540a:	4343      	muls	r3, r0
1004540c:	4804      	ldr	r0, [pc, #16]	@ (10045420 <LL_RADIO_SetCRCInitializationValue+0x44>)
1004540e:	4684      	mov	ip, r0
10045410:	4463      	add	r3, ip
10045412:	430a      	orrs	r2, r1
10045414:	629a      	str	r2, [r3, #40]	@ 0x28
}
10045416:	46c0      	nop			@ (mov r8, r8)
10045418:	46bd      	mov	sp, r7
1004541a:	b002      	add	sp, #8
1004541c:	bd80      	pop	{r7, pc}
1004541e:	46c0      	nop			@ (mov r8, r8)
10045420:	200000dc 	.word	0x200000dc

10045424 <LL_RADIO_SetMaximumReceiveLength>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetMaximumReceiveLength(uint8_t stateMachineNo, uint32_t value)
{
10045424:	b580      	push	{r7, lr}
10045426:	b082      	sub	sp, #8
10045428:	af00      	add	r7, sp, #0
1004542a:	0002      	movs	r2, r0
1004542c:	6039      	str	r1, [r7, #0]
1004542e:	1dfb      	adds	r3, r7, #7
10045430:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORDA, STATEMACH_WORDA_MAXRECEIVEDLENGTH, value);
10045432:	1dfb      	adds	r3, r7, #7
10045434:	781b      	ldrb	r3, [r3, #0]
10045436:	225c      	movs	r2, #92	@ 0x5c
10045438:	4353      	muls	r3, r2
1004543a:	4a0a      	ldr	r2, [pc, #40]	@ (10045464 <LL_RADIO_SetMaximumReceiveLength+0x40>)
1004543c:	4694      	mov	ip, r2
1004543e:	4463      	add	r3, ip
10045440:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
10045442:	021b      	lsls	r3, r3, #8
10045444:	0a19      	lsrs	r1, r3, #8
10045446:	683b      	ldr	r3, [r7, #0]
10045448:	061a      	lsls	r2, r3, #24
1004544a:	1dfb      	adds	r3, r7, #7
1004544c:	781b      	ldrb	r3, [r3, #0]
1004544e:	205c      	movs	r0, #92	@ 0x5c
10045450:	4343      	muls	r3, r0
10045452:	4804      	ldr	r0, [pc, #16]	@ (10045464 <LL_RADIO_SetMaximumReceiveLength+0x40>)
10045454:	4684      	mov	ip, r0
10045456:	4463      	add	r3, ip
10045458:	430a      	orrs	r2, r1
1004545a:	629a      	str	r2, [r3, #40]	@ 0x28
}
1004545c:	46c0      	nop			@ (mov r8, r8)
1004545e:	46bd      	mov	sp, r7
10045460:	b002      	add	sp, #8
10045462:	bd80      	pop	{r7, pc}
10045464:	200000dc 	.word	0x200000dc

10045468 <LL_RADIO_TxHp_Enable>:
  * @rmtoll WORDB          TXHP            LL_RADIO_TxHp_Enable
  * @param  stateMachineNo
  * @retval
  */
__STATIC_INLINE void LL_RADIO_TxHp_Enable(uint8_t stateMachineNo)
{
10045468:	b580      	push	{r7, lr}
1004546a:	b082      	sub	sp, #8
1004546c:	af00      	add	r7, sp, #0
1004546e:	0002      	movs	r2, r0
10045470:	1dfb      	adds	r3, r7, #7
10045472:	701a      	strb	r2, [r3, #0]
  SET_BIT((BLUEDATAWORD + stateMachineNo)->WORDB, STATEMACH_WORDB_TXHP);
10045474:	1dfb      	adds	r3, r7, #7
10045476:	781b      	ldrb	r3, [r3, #0]
10045478:	225c      	movs	r2, #92	@ 0x5c
1004547a:	4353      	muls	r3, r2
1004547c:	4a08      	ldr	r2, [pc, #32]	@ (100454a0 <LL_RADIO_TxHp_Enable+0x38>)
1004547e:	4694      	mov	ip, r2
10045480:	4463      	add	r3, ip
10045482:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
10045484:	1dfb      	adds	r3, r7, #7
10045486:	781b      	ldrb	r3, [r3, #0]
10045488:	215c      	movs	r1, #92	@ 0x5c
1004548a:	434b      	muls	r3, r1
1004548c:	4904      	ldr	r1, [pc, #16]	@ (100454a0 <LL_RADIO_TxHp_Enable+0x38>)
1004548e:	468c      	mov	ip, r1
10045490:	4463      	add	r3, ip
10045492:	2180      	movs	r1, #128	@ 0x80
10045494:	430a      	orrs	r2, r1
10045496:	62da      	str	r2, [r3, #44]	@ 0x2c
}
10045498:	46c0      	nop			@ (mov r8, r8)
1004549a:	46bd      	mov	sp, r7
1004549c:	b002      	add	sp, #8
1004549e:	bd80      	pop	{r7, pc}
100454a0:	200000dc 	.word	0x200000dc

100454a4 <LL_RADIO_TxHp_Disable>:
  * @rmtoll WORDB          TXHP            LL_RADIO_TxHp_Disable
  * @param  stateMachineNo
  * @retval
  */
__STATIC_INLINE void LL_RADIO_TxHp_Disable(uint8_t stateMachineNo)
{
100454a4:	b580      	push	{r7, lr}
100454a6:	b082      	sub	sp, #8
100454a8:	af00      	add	r7, sp, #0
100454aa:	0002      	movs	r2, r0
100454ac:	1dfb      	adds	r3, r7, #7
100454ae:	701a      	strb	r2, [r3, #0]
  CLEAR_BIT((BLUEDATAWORD + stateMachineNo)->WORDB, STATEMACH_WORDB_TXHP);
100454b0:	1dfb      	adds	r3, r7, #7
100454b2:	781b      	ldrb	r3, [r3, #0]
100454b4:	225c      	movs	r2, #92	@ 0x5c
100454b6:	4353      	muls	r3, r2
100454b8:	4a08      	ldr	r2, [pc, #32]	@ (100454dc <LL_RADIO_TxHp_Disable+0x38>)
100454ba:	4694      	mov	ip, r2
100454bc:	4463      	add	r3, ip
100454be:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
100454c0:	1dfb      	adds	r3, r7, #7
100454c2:	781b      	ldrb	r3, [r3, #0]
100454c4:	215c      	movs	r1, #92	@ 0x5c
100454c6:	434b      	muls	r3, r1
100454c8:	4904      	ldr	r1, [pc, #16]	@ (100454dc <LL_RADIO_TxHp_Disable+0x38>)
100454ca:	468c      	mov	ip, r1
100454cc:	4463      	add	r3, ip
100454ce:	2180      	movs	r1, #128	@ 0x80
100454d0:	438a      	bics	r2, r1
100454d2:	62da      	str	r2, [r3, #44]	@ 0x2c
}
100454d4:	46c0      	nop			@ (mov r8, r8)
100454d6:	46bd      	mov	sp, r7
100454d8:	b002      	add	sp, #8
100454da:	bd80      	pop	{r7, pc}
100454dc:	200000dc 	.word	0x200000dc

100454e0 <LL_RADIO_TxHp_IsEnabled>:
  * @rmtoll WORDB          TXHP            LL_RADIO_TxHp_IsEnabled
  * @param  stateMachineNo
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RADIO_TxHp_IsEnabled(uint8_t stateMachineNo)
{
100454e0:	b580      	push	{r7, lr}
100454e2:	b082      	sub	sp, #8
100454e4:	af00      	add	r7, sp, #0
100454e6:	0002      	movs	r2, r0
100454e8:	1dfb      	adds	r3, r7, #7
100454ea:	701a      	strb	r2, [r3, #0]
  return ((READ_BIT((BLUEDATAWORD + stateMachineNo)->WORDB, STATEMACH_WORDB_TXHP) == (STATEMACH_WORDB_TXHP)) ? 1U : 0U);
100454ec:	1dfb      	adds	r3, r7, #7
100454ee:	781b      	ldrb	r3, [r3, #0]
100454f0:	225c      	movs	r2, #92	@ 0x5c
100454f2:	4353      	muls	r3, r2
100454f4:	4a07      	ldr	r2, [pc, #28]	@ (10045514 <LL_RADIO_TxHp_IsEnabled+0x34>)
100454f6:	4694      	mov	ip, r2
100454f8:	4463      	add	r3, ip
100454fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
100454fc:	2280      	movs	r2, #128	@ 0x80
100454fe:	4013      	ands	r3, r2
10045500:	2b80      	cmp	r3, #128	@ 0x80
10045502:	d101      	bne.n	10045508 <LL_RADIO_TxHp_IsEnabled+0x28>
10045504:	2301      	movs	r3, #1
10045506:	e000      	b.n	1004550a <LL_RADIO_TxHp_IsEnabled+0x2a>
10045508:	2300      	movs	r3, #0
}
1004550a:	0018      	movs	r0, r3
1004550c:	46bd      	mov	sp, r7
1004550e:	b002      	add	sp, #8
10045510:	bd80      	pop	{r7, pc}
10045512:	46c0      	nop			@ (mov r8, r8)
10045514:	200000dc 	.word	0x200000dc

10045518 <LL_RADIO_SetPAPower>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetPAPower(uint8_t stateMachineNo, uint32_t value)
{
10045518:	b580      	push	{r7, lr}
1004551a:	b082      	sub	sp, #8
1004551c:	af00      	add	r7, sp, #0
1004551e:	0002      	movs	r2, r0
10045520:	6039      	str	r1, [r7, #0]
10045522:	1dfb      	adds	r3, r7, #7
10045524:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORDB, STATEMACH_WORDB_PAPOWER, value);
10045526:	1dfb      	adds	r3, r7, #7
10045528:	781b      	ldrb	r3, [r3, #0]
1004552a:	225c      	movs	r2, #92	@ 0x5c
1004552c:	4353      	muls	r3, r2
1004552e:	4a0b      	ldr	r2, [pc, #44]	@ (1004555c <LL_RADIO_SetPAPower+0x44>)
10045530:	4694      	mov	ip, r2
10045532:	4463      	add	r3, ip
10045534:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
10045536:	221f      	movs	r2, #31
10045538:	4393      	bics	r3, r2
1004553a:	0019      	movs	r1, r3
1004553c:	683b      	ldr	r3, [r7, #0]
1004553e:	221f      	movs	r2, #31
10045540:	401a      	ands	r2, r3
10045542:	1dfb      	adds	r3, r7, #7
10045544:	781b      	ldrb	r3, [r3, #0]
10045546:	205c      	movs	r0, #92	@ 0x5c
10045548:	4343      	muls	r3, r0
1004554a:	4804      	ldr	r0, [pc, #16]	@ (1004555c <LL_RADIO_SetPAPower+0x44>)
1004554c:	4684      	mov	ip, r0
1004554e:	4463      	add	r3, ip
10045550:	430a      	orrs	r2, r1
10045552:	62da      	str	r2, [r3, #44]	@ 0x2c
}
10045554:	46c0      	nop			@ (mov r8, r8)
10045556:	46bd      	mov	sp, r7
10045558:	b002      	add	sp, #8
1004555a:	bd80      	pop	{r7, pc}
1004555c:	200000dc 	.word	0x200000dc

10045560 <LL_RADIO_GetPAPower>:
  * @rmtoll WORDB          PAPOWER       LL_RADIO_GetPAPower
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetPAPower(uint8_t stateMachineNo)
{
10045560:	b580      	push	{r7, lr}
10045562:	b082      	sub	sp, #8
10045564:	af00      	add	r7, sp, #0
10045566:	0002      	movs	r2, r0
10045568:	1dfb      	adds	r3, r7, #7
1004556a:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORDB,
1004556c:	1dfb      	adds	r3, r7, #7
1004556e:	781b      	ldrb	r3, [r3, #0]
10045570:	225c      	movs	r2, #92	@ 0x5c
10045572:	4353      	muls	r3, r2
10045574:	4a04      	ldr	r2, [pc, #16]	@ (10045588 <LL_RADIO_GetPAPower+0x28>)
10045576:	4694      	mov	ip, r2
10045578:	4463      	add	r3, ip
1004557a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
1004557c:	221f      	movs	r2, #31
1004557e:	4013      	ands	r3, r2
                             STATEMACH_WORDB_PAPOWER) >> STATEMACH_WORDB_PAPOWER_Pos);
}
10045580:	0018      	movs	r0, r3
10045582:	46bd      	mov	sp, r7
10045584:	b002      	add	sp, #8
10045586:	bd80      	pop	{r7, pc}
10045588:	200000dc 	.word	0x200000dc

1004558c <LL_RADIO_SetHopIncrement>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetHopIncrement(uint8_t stateMachineNo, uint32_t value)
{
1004558c:	b580      	push	{r7, lr}
1004558e:	b082      	sub	sp, #8
10045590:	af00      	add	r7, sp, #0
10045592:	0002      	movs	r2, r0
10045594:	6039      	str	r1, [r7, #0]
10045596:	1dfb      	adds	r3, r7, #7
10045598:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORDB, STATEMACH_WORDB_HOPINCR, value);
1004559a:	1dfb      	adds	r3, r7, #7
1004559c:	781b      	ldrb	r3, [r3, #0]
1004559e:	225c      	movs	r2, #92	@ 0x5c
100455a0:	4353      	muls	r3, r2
100455a2:	4a0c      	ldr	r2, [pc, #48]	@ (100455d4 <LL_RADIO_SetHopIncrement+0x48>)
100455a4:	4694      	mov	ip, r2
100455a6:	4463      	add	r3, ip
100455a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
100455aa:	4a0b      	ldr	r2, [pc, #44]	@ (100455d8 <LL_RADIO_SetHopIncrement+0x4c>)
100455ac:	4013      	ands	r3, r2
100455ae:	0019      	movs	r1, r3
100455b0:	683b      	ldr	r3, [r7, #0]
100455b2:	021a      	lsls	r2, r3, #8
100455b4:	23fc      	movs	r3, #252	@ 0xfc
100455b6:	019b      	lsls	r3, r3, #6
100455b8:	401a      	ands	r2, r3
100455ba:	1dfb      	adds	r3, r7, #7
100455bc:	781b      	ldrb	r3, [r3, #0]
100455be:	205c      	movs	r0, #92	@ 0x5c
100455c0:	4343      	muls	r3, r0
100455c2:	4804      	ldr	r0, [pc, #16]	@ (100455d4 <LL_RADIO_SetHopIncrement+0x48>)
100455c4:	4684      	mov	ip, r0
100455c6:	4463      	add	r3, ip
100455c8:	430a      	orrs	r2, r1
100455ca:	62da      	str	r2, [r3, #44]	@ 0x2c
}
100455cc:	46c0      	nop			@ (mov r8, r8)
100455ce:	46bd      	mov	sp, r7
100455d0:	b002      	add	sp, #8
100455d2:	bd80      	pop	{r7, pc}
100455d4:	200000dc 	.word	0x200000dc
100455d8:	ffffc0ff 	.word	0xffffc0ff

100455dc <LL_RADIO_GetHopIncrement>:
  * @rmtoll WORDB          HOPINCR       LL_RADIO_GetHopIncrement
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetHopIncrement(uint8_t stateMachineNo)
{
100455dc:	b580      	push	{r7, lr}
100455de:	b082      	sub	sp, #8
100455e0:	af00      	add	r7, sp, #0
100455e2:	0002      	movs	r2, r0
100455e4:	1dfb      	adds	r3, r7, #7
100455e6:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORDB,
100455e8:	1dfb      	adds	r3, r7, #7
100455ea:	781b      	ldrb	r3, [r3, #0]
100455ec:	225c      	movs	r2, #92	@ 0x5c
100455ee:	4353      	muls	r3, r2
100455f0:	4a05      	ldr	r2, [pc, #20]	@ (10045608 <LL_RADIO_GetHopIncrement+0x2c>)
100455f2:	4694      	mov	ip, r2
100455f4:	4463      	add	r3, ip
100455f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
100455f8:	0a1b      	lsrs	r3, r3, #8
100455fa:	223f      	movs	r2, #63	@ 0x3f
100455fc:	4013      	ands	r3, r2
                             STATEMACH_WORDB_HOPINCR) >> STATEMACH_WORDB_HOPINCR_Pos);
}
100455fe:	0018      	movs	r0, r3
10045600:	46bd      	mov	sp, r7
10045602:	b002      	add	sp, #8
10045604:	bd80      	pop	{r7, pc}
10045606:	46c0      	nop			@ (mov r8, r8)
10045608:	200000dc 	.word	0x200000dc

1004560c <LL_RADIO_SetUsedChannelFlags_15_0>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetUsedChannelFlags_15_0(uint8_t stateMachineNo, uint32_t value)
{
1004560c:	b580      	push	{r7, lr}
1004560e:	b082      	sub	sp, #8
10045610:	af00      	add	r7, sp, #0
10045612:	0002      	movs	r2, r0
10045614:	6039      	str	r1, [r7, #0]
10045616:	1dfb      	adds	r3, r7, #7
10045618:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORDB, STATEMACH_WORDB_USEDCHANNELFLAGS_15_0, value);
1004561a:	1dfb      	adds	r3, r7, #7
1004561c:	781b      	ldrb	r3, [r3, #0]
1004561e:	225c      	movs	r2, #92	@ 0x5c
10045620:	4353      	muls	r3, r2
10045622:	4a0a      	ldr	r2, [pc, #40]	@ (1004564c <LL_RADIO_SetUsedChannelFlags_15_0+0x40>)
10045624:	4694      	mov	ip, r2
10045626:	4463      	add	r3, ip
10045628:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
1004562a:	041b      	lsls	r3, r3, #16
1004562c:	0c19      	lsrs	r1, r3, #16
1004562e:	683b      	ldr	r3, [r7, #0]
10045630:	041a      	lsls	r2, r3, #16
10045632:	1dfb      	adds	r3, r7, #7
10045634:	781b      	ldrb	r3, [r3, #0]
10045636:	205c      	movs	r0, #92	@ 0x5c
10045638:	4343      	muls	r3, r0
1004563a:	4804      	ldr	r0, [pc, #16]	@ (1004564c <LL_RADIO_SetUsedChannelFlags_15_0+0x40>)
1004563c:	4684      	mov	ip, r0
1004563e:	4463      	add	r3, ip
10045640:	430a      	orrs	r2, r1
10045642:	62da      	str	r2, [r3, #44]	@ 0x2c
}
10045644:	46c0      	nop			@ (mov r8, r8)
10045646:	46bd      	mov	sp, r7
10045648:	b002      	add	sp, #8
1004564a:	bd80      	pop	{r7, pc}
1004564c:	200000dc 	.word	0x200000dc

10045650 <LL_RADIO_GetUsedChannelFlags_15_0>:
  * @rmtoll WORDB          USEDCHANNELFLAGS_15_0       LL_RADIO_GetUsedChannelFlags_15_0
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetUsedChannelFlags_15_0(uint8_t stateMachineNo)
{
10045650:	b580      	push	{r7, lr}
10045652:	b082      	sub	sp, #8
10045654:	af00      	add	r7, sp, #0
10045656:	0002      	movs	r2, r0
10045658:	1dfb      	adds	r3, r7, #7
1004565a:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORDB,
1004565c:	1dfb      	adds	r3, r7, #7
1004565e:	781b      	ldrb	r3, [r3, #0]
10045660:	225c      	movs	r2, #92	@ 0x5c
10045662:	4353      	muls	r3, r2
10045664:	4a05      	ldr	r2, [pc, #20]	@ (1004567c <LL_RADIO_GetUsedChannelFlags_15_0+0x2c>)
10045666:	4694      	mov	ip, r2
10045668:	4463      	add	r3, ip
1004566a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
1004566c:	0c1b      	lsrs	r3, r3, #16
1004566e:	041b      	lsls	r3, r3, #16
10045670:	0c1b      	lsrs	r3, r3, #16
                             STATEMACH_WORDB_USEDCHANNELFLAGS_15_0) >> STATEMACH_WORDB_USEDCHANNELFLAGS_15_0_Pos);
}
10045672:	0018      	movs	r0, r3
10045674:	46bd      	mov	sp, r7
10045676:	b002      	add	sp, #8
10045678:	bd80      	pop	{r7, pc}
1004567a:	46c0      	nop			@ (mov r8, r8)
1004567c:	200000dc 	.word	0x200000dc

10045680 <LL_RADIO_SetUsedChannelFlags_36_16>:
  * @param  stateMachineNo
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetUsedChannelFlags_36_16(uint8_t stateMachineNo, uint32_t value)
{
10045680:	b580      	push	{r7, lr}
10045682:	b082      	sub	sp, #8
10045684:	af00      	add	r7, sp, #0
10045686:	0002      	movs	r2, r0
10045688:	6039      	str	r1, [r7, #0]
1004568a:	1dfb      	adds	r3, r7, #7
1004568c:	701a      	strb	r2, [r3, #0]
  MODIFY_REG_FIELD((BLUEDATAWORD + stateMachineNo)->WORDC, STATEMACH_WORDC_USEDCHANNELFLAGS_36_16, value);
1004568e:	1dfb      	adds	r3, r7, #7
10045690:	781b      	ldrb	r3, [r3, #0]
10045692:	225c      	movs	r2, #92	@ 0x5c
10045694:	4353      	muls	r3, r2
10045696:	4a0b      	ldr	r2, [pc, #44]	@ (100456c4 <LL_RADIO_SetUsedChannelFlags_36_16+0x44>)
10045698:	4694      	mov	ip, r2
1004569a:	4463      	add	r3, ip
1004569c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
1004569e:	0d9b      	lsrs	r3, r3, #22
100456a0:	0599      	lsls	r1, r3, #22
100456a2:	683b      	ldr	r3, [r7, #0]
100456a4:	029b      	lsls	r3, r3, #10
100456a6:	0a9a      	lsrs	r2, r3, #10
100456a8:	1dfb      	adds	r3, r7, #7
100456aa:	781b      	ldrb	r3, [r3, #0]
100456ac:	205c      	movs	r0, #92	@ 0x5c
100456ae:	4343      	muls	r3, r0
100456b0:	4804      	ldr	r0, [pc, #16]	@ (100456c4 <LL_RADIO_SetUsedChannelFlags_36_16+0x44>)
100456b2:	4684      	mov	ip, r0
100456b4:	4463      	add	r3, ip
100456b6:	430a      	orrs	r2, r1
100456b8:	631a      	str	r2, [r3, #48]	@ 0x30
}
100456ba:	46c0      	nop			@ (mov r8, r8)
100456bc:	46bd      	mov	sp, r7
100456be:	b002      	add	sp, #8
100456c0:	bd80      	pop	{r7, pc}
100456c2:	46c0      	nop			@ (mov r8, r8)
100456c4:	200000dc 	.word	0x200000dc

100456c8 <LL_RADIO_GetUsedChannelFlags_36_16>:
  * @rmtoll WORDC          USEDCHANNELFLAGS_36_16       LL_RADIO_GetUsedChannelFlags_36_16
  * @param  stateMachineNo
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetUsedChannelFlags_36_16(uint8_t stateMachineNo)
{
100456c8:	b580      	push	{r7, lr}
100456ca:	b082      	sub	sp, #8
100456cc:	af00      	add	r7, sp, #0
100456ce:	0002      	movs	r2, r0
100456d0:	1dfb      	adds	r3, r7, #7
100456d2:	701a      	strb	r2, [r3, #0]
  return (uint32_t)(READ_BIT((BLUEDATAWORD + stateMachineNo)->WORDC,
100456d4:	1dfb      	adds	r3, r7, #7
100456d6:	781b      	ldrb	r3, [r3, #0]
100456d8:	225c      	movs	r2, #92	@ 0x5c
100456da:	4353      	muls	r3, r2
100456dc:	4a04      	ldr	r2, [pc, #16]	@ (100456f0 <LL_RADIO_GetUsedChannelFlags_36_16+0x28>)
100456de:	4694      	mov	ip, r2
100456e0:	4463      	add	r3, ip
100456e2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
100456e4:	029b      	lsls	r3, r3, #10
100456e6:	0a9b      	lsrs	r3, r3, #10
                             STATEMACH_WORDC_USEDCHANNELFLAGS_36_16) >> STATEMACH_WORDC_USEDCHANNELFLAGS_36_16_Pos);
}
100456e8:	0018      	movs	r0, r3
100456ea:	46bd      	mov	sp, r7
100456ec:	b002      	add	sp, #8
100456ee:	bd80      	pop	{r7, pc}
100456f0:	200000dc 	.word	0x200000dc

100456f4 <LL_RADIO_SetNextPointer>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetNextPointer(TXRXPACK_TypeDef *p, uint32_t value)
{
100456f4:	b580      	push	{r7, lr}
100456f6:	b082      	sub	sp, #8
100456f8:	af00      	add	r7, sp, #0
100456fa:	6078      	str	r0, [r7, #4]
100456fc:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD0, TXRXPACK_WORD0_NEXTPTR, value);
100456fe:	687b      	ldr	r3, [r7, #4]
10045700:	681b      	ldr	r3, [r3, #0]
10045702:	687b      	ldr	r3, [r7, #4]
10045704:	683a      	ldr	r2, [r7, #0]
10045706:	601a      	str	r2, [r3, #0]
}
10045708:	46c0      	nop			@ (mov r8, r8)
1004570a:	46bd      	mov	sp, r7
1004570c:	b002      	add	sp, #8
1004570e:	bd80      	pop	{r7, pc}

10045710 <LL_RADIO_SetCalibrationRequest>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetCalibrationRequest(TXRXPACK_TypeDef *p, uint32_t value)
{
10045710:	b580      	push	{r7, lr}
10045712:	b082      	sub	sp, #8
10045714:	af00      	add	r7, sp, #0
10045716:	6078      	str	r0, [r7, #4]
10045718:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_CALREQ, value);
1004571a:	687b      	ldr	r3, [r7, #4]
1004571c:	685b      	ldr	r3, [r3, #4]
1004571e:	2201      	movs	r2, #1
10045720:	4393      	bics	r3, r2
10045722:	001a      	movs	r2, r3
10045724:	683b      	ldr	r3, [r7, #0]
10045726:	2101      	movs	r1, #1
10045728:	400b      	ands	r3, r1
1004572a:	431a      	orrs	r2, r3
1004572c:	687b      	ldr	r3, [r7, #4]
1004572e:	605a      	str	r2, [r3, #4]
}
10045730:	46c0      	nop			@ (mov r8, r8)
10045732:	46bd      	mov	sp, r7
10045734:	b002      	add	sp, #8
10045736:	bd80      	pop	{r7, pc}

10045738 <LL_RADIO_SetKeepSemaRequest>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetKeepSemaRequest(TXRXPACK_TypeDef *p, uint32_t value)
{
10045738:	b580      	push	{r7, lr}
1004573a:	b082      	sub	sp, #8
1004573c:	af00      	add	r7, sp, #0
1004573e:	6078      	str	r0, [r7, #4]
10045740:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_KEEPSEMAREQ, value);
10045742:	687b      	ldr	r3, [r7, #4]
10045744:	685b      	ldr	r3, [r3, #4]
10045746:	2204      	movs	r2, #4
10045748:	4393      	bics	r3, r2
1004574a:	001a      	movs	r2, r3
1004574c:	683b      	ldr	r3, [r7, #0]
1004574e:	009b      	lsls	r3, r3, #2
10045750:	2104      	movs	r1, #4
10045752:	400b      	ands	r3, r1
10045754:	431a      	orrs	r2, r3
10045756:	687b      	ldr	r3, [r7, #4]
10045758:	605a      	str	r2, [r3, #4]
}
1004575a:	46c0      	nop			@ (mov r8, r8)
1004575c:	46bd      	mov	sp, r7
1004575e:	b002      	add	sp, #8
10045760:	bd80      	pop	{r7, pc}

10045762 <LL_RADIO_SetCTEAndSamplingEnable>:
  * @rmtoll WORD1          CTEANDSAMPLINGENABLE        LL_RADIO_SetCTEAndSamplingEnable
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetCTEAndSamplingEnable(TXRXPACK_TypeDef *p, uint32_t value)
{
10045762:	b580      	push	{r7, lr}
10045764:	b082      	sub	sp, #8
10045766:	af00      	add	r7, sp, #0
10045768:	6078      	str	r0, [r7, #4]
1004576a:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_CTEANDSAMPLINGENABLE, value);
1004576c:	687b      	ldr	r3, [r7, #4]
1004576e:	685b      	ldr	r3, [r3, #4]
10045770:	2208      	movs	r2, #8
10045772:	4393      	bics	r3, r2
10045774:	001a      	movs	r2, r3
10045776:	683b      	ldr	r3, [r7, #0]
10045778:	00db      	lsls	r3, r3, #3
1004577a:	2108      	movs	r1, #8
1004577c:	400b      	ands	r3, r1
1004577e:	431a      	orrs	r2, r3
10045780:	687b      	ldr	r3, [r7, #4]
10045782:	605a      	str	r2, [r3, #4]
}
10045784:	46c0      	nop			@ (mov r8, r8)
10045786:	46bd      	mov	sp, r7
10045788:	b002      	add	sp, #8
1004578a:	bd80      	pop	{r7, pc}

1004578c <LL_RADIO_SetCRCInitializationSelector>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetCRCInitializationSelector(TXRXPACK_TypeDef *p, uint32_t value)
{
1004578c:	b580      	push	{r7, lr}
1004578e:	b082      	sub	sp, #8
10045790:	af00      	add	r7, sp, #0
10045792:	6078      	str	r0, [r7, #4]
10045794:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_CRCINITSEL, value);
10045796:	687b      	ldr	r3, [r7, #4]
10045798:	685b      	ldr	r3, [r3, #4]
1004579a:	2210      	movs	r2, #16
1004579c:	4393      	bics	r3, r2
1004579e:	001a      	movs	r2, r3
100457a0:	683b      	ldr	r3, [r7, #0]
100457a2:	011b      	lsls	r3, r3, #4
100457a4:	2110      	movs	r1, #16
100457a6:	400b      	ands	r3, r1
100457a8:	431a      	orrs	r2, r3
100457aa:	687b      	ldr	r3, [r7, #4]
100457ac:	605a      	str	r2, [r3, #4]
}
100457ae:	46c0      	nop			@ (mov r8, r8)
100457b0:	46bd      	mov	sp, r7
100457b2:	b002      	add	sp, #8
100457b4:	bd80      	pop	{r7, pc}

100457b6 <LL_RADIO_SetAdvertise>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetAdvertise(TXRXPACK_TypeDef *p, uint32_t value)
{
100457b6:	b580      	push	{r7, lr}
100457b8:	b082      	sub	sp, #8
100457ba:	af00      	add	r7, sp, #0
100457bc:	6078      	str	r0, [r7, #4]
100457be:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_ADVERTISE, value);
100457c0:	687b      	ldr	r3, [r7, #4]
100457c2:	685b      	ldr	r3, [r3, #4]
100457c4:	2220      	movs	r2, #32
100457c6:	4393      	bics	r3, r2
100457c8:	001a      	movs	r2, r3
100457ca:	683b      	ldr	r3, [r7, #0]
100457cc:	015b      	lsls	r3, r3, #5
100457ce:	2120      	movs	r1, #32
100457d0:	400b      	ands	r3, r1
100457d2:	431a      	orrs	r2, r3
100457d4:	687b      	ldr	r3, [r7, #4]
100457d6:	605a      	str	r2, [r3, #4]
}
100457d8:	46c0      	nop			@ (mov r8, r8)
100457da:	46bd      	mov	sp, r7
100457dc:	b002      	add	sp, #8
100457de:	bd80      	pop	{r7, pc}

100457e0 <LL_RADIO_AutomaticSnNesnHardwareMechanism_Enable>:
  * @rmtoll WORD1          SN_EN            LL_RADIO_AutomaticSnNesnHardwareMechanism_Enable
  * @param  p RADIO Instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_AutomaticSnNesnHardwareMechanism_Enable(TXRXPACK_TypeDef *p)
{
100457e0:	b580      	push	{r7, lr}
100457e2:	b082      	sub	sp, #8
100457e4:	af00      	add	r7, sp, #0
100457e6:	6078      	str	r0, [r7, #4]
  SET_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_SN_EN);
100457e8:	687b      	ldr	r3, [r7, #4]
100457ea:	685b      	ldr	r3, [r3, #4]
100457ec:	2240      	movs	r2, #64	@ 0x40
100457ee:	431a      	orrs	r2, r3
100457f0:	687b      	ldr	r3, [r7, #4]
100457f2:	605a      	str	r2, [r3, #4]
}
100457f4:	46c0      	nop			@ (mov r8, r8)
100457f6:	46bd      	mov	sp, r7
100457f8:	b002      	add	sp, #8
100457fa:	bd80      	pop	{r7, pc}

100457fc <LL_RADIO_IncrementerChannel_Enable>:
  * @rmtoll WORD1          INCCHAN            LL_RADIO_IncrementerChannel_Enable
  * @param  p RADIO Instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_IncrementerChannel_Enable(TXRXPACK_TypeDef *p)
{
100457fc:	b580      	push	{r7, lr}
100457fe:	b082      	sub	sp, #8
10045800:	af00      	add	r7, sp, #0
10045802:	6078      	str	r0, [r7, #4]
  SET_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_INCCHAN);
10045804:	687b      	ldr	r3, [r7, #4]
10045806:	685b      	ldr	r3, [r3, #4]
10045808:	2280      	movs	r2, #128	@ 0x80
1004580a:	431a      	orrs	r2, r3
1004580c:	687b      	ldr	r3, [r7, #4]
1004580e:	605a      	str	r2, [r3, #4]
}
10045810:	46c0      	nop			@ (mov r8, r8)
10045812:	46bd      	mov	sp, r7
10045814:	b002      	add	sp, #8
10045816:	bd80      	pop	{r7, pc}

10045818 <LL_RADIO_IncrementerChannel_Disable>:
  * @rmtoll WORD1          INCCHAN            LL_RADIO_IncrementerChannel_Disable
  * @param  p RADIO Instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_IncrementerChannel_Disable(TXRXPACK_TypeDef *p)
{
10045818:	b580      	push	{r7, lr}
1004581a:	b082      	sub	sp, #8
1004581c:	af00      	add	r7, sp, #0
1004581e:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_INCCHAN);
10045820:	687b      	ldr	r3, [r7, #4]
10045822:	685b      	ldr	r3, [r3, #4]
10045824:	2280      	movs	r2, #128	@ 0x80
10045826:	4393      	bics	r3, r2
10045828:	001a      	movs	r2, r3
1004582a:	687b      	ldr	r3, [r7, #4]
1004582c:	605a      	str	r2, [r3, #4]
}
1004582e:	46c0      	nop			@ (mov r8, r8)
10045830:	46bd      	mov	sp, r7
10045832:	b002      	add	sp, #8
10045834:	bd80      	pop	{r7, pc}
	...

10045838 <LL_RADIO_SetNextTxMode>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetNextTxMode(TXRXPACK_TypeDef *p, uint32_t value)
{
10045838:	b580      	push	{r7, lr}
1004583a:	b082      	sub	sp, #8
1004583c:	af00      	add	r7, sp, #0
1004583e:	6078      	str	r0, [r7, #4]
10045840:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_NEXTTXMODE, value);
10045842:	687b      	ldr	r3, [r7, #4]
10045844:	685b      	ldr	r3, [r3, #4]
10045846:	4a07      	ldr	r2, [pc, #28]	@ (10045864 <LL_RADIO_SetNextTxMode+0x2c>)
10045848:	401a      	ands	r2, r3
1004584a:	683b      	ldr	r3, [r7, #0]
1004584c:	0219      	lsls	r1, r3, #8
1004584e:	2380      	movs	r3, #128	@ 0x80
10045850:	005b      	lsls	r3, r3, #1
10045852:	400b      	ands	r3, r1
10045854:	431a      	orrs	r2, r3
10045856:	687b      	ldr	r3, [r7, #4]
10045858:	605a      	str	r2, [r3, #4]
}
1004585a:	46c0      	nop			@ (mov r8, r8)
1004585c:	46bd      	mov	sp, r7
1004585e:	b002      	add	sp, #8
10045860:	bd80      	pop	{r7, pc}
10045862:	46c0      	nop			@ (mov r8, r8)
10045864:	fffffeff 	.word	0xfffffeff

10045868 <LL_RADIO_SetAllTableDataReady>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetAllTableDataReady(TXRXPACK_TypeDef *p, uint32_t value)
{
10045868:	b580      	push	{r7, lr}
1004586a:	b082      	sub	sp, #8
1004586c:	af00      	add	r7, sp, #0
1004586e:	6078      	str	r0, [r7, #4]
10045870:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_ALLTABLEREADY, value);
10045872:	687b      	ldr	r3, [r7, #4]
10045874:	685b      	ldr	r3, [r3, #4]
10045876:	4a07      	ldr	r2, [pc, #28]	@ (10045894 <LL_RADIO_SetAllTableDataReady+0x2c>)
10045878:	401a      	ands	r2, r3
1004587a:	683b      	ldr	r3, [r7, #0]
1004587c:	0259      	lsls	r1, r3, #9
1004587e:	2380      	movs	r3, #128	@ 0x80
10045880:	009b      	lsls	r3, r3, #2
10045882:	400b      	ands	r3, r1
10045884:	431a      	orrs	r2, r3
10045886:	687b      	ldr	r3, [r7, #4]
10045888:	605a      	str	r2, [r3, #4]
}
1004588a:	46c0      	nop			@ (mov r8, r8)
1004588c:	46bd      	mov	sp, r7
1004588e:	b002      	add	sp, #8
10045890:	bd80      	pop	{r7, pc}
10045892:	46c0      	nop			@ (mov r8, r8)
10045894:	fffffdff 	.word	0xfffffdff

10045898 <LL_RADIO_SetTransmissionDataReady>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetTransmissionDataReady(TXRXPACK_TypeDef *p, uint32_t value)
{
10045898:	b580      	push	{r7, lr}
1004589a:	b082      	sub	sp, #8
1004589c:	af00      	add	r7, sp, #0
1004589e:	6078      	str	r0, [r7, #4]
100458a0:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD1, TXRXPACK_WORD1_TXDATAREADY, value);
100458a2:	687b      	ldr	r3, [r7, #4]
100458a4:	685b      	ldr	r3, [r3, #4]
100458a6:	4a07      	ldr	r2, [pc, #28]	@ (100458c4 <LL_RADIO_SetTransmissionDataReady+0x2c>)
100458a8:	401a      	ands	r2, r3
100458aa:	683b      	ldr	r3, [r7, #0]
100458ac:	0299      	lsls	r1, r3, #10
100458ae:	2380      	movs	r3, #128	@ 0x80
100458b0:	00db      	lsls	r3, r3, #3
100458b2:	400b      	ands	r3, r1
100458b4:	431a      	orrs	r2, r3
100458b6:	687b      	ldr	r3, [r7, #4]
100458b8:	605a      	str	r2, [r3, #4]
}
100458ba:	46c0      	nop			@ (mov r8, r8)
100458bc:	46bd      	mov	sp, r7
100458be:	b002      	add	sp, #8
100458c0:	bd80      	pop	{r7, pc}
100458c2:	46c0      	nop			@ (mov r8, r8)
100458c4:	fffffbff 	.word	0xfffffbff

100458c8 <LL_RADIO_SetDataPointer>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetDataPointer(TXRXPACK_TypeDef *p, uint32_t value)
{
100458c8:	b580      	push	{r7, lr}
100458ca:	b082      	sub	sp, #8
100458cc:	af00      	add	r7, sp, #0
100458ce:	6078      	str	r0, [r7, #4]
100458d0:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD2, TXRXPACK_WORD2_DATAPTR, value);
100458d2:	687b      	ldr	r3, [r7, #4]
100458d4:	689b      	ldr	r3, [r3, #8]
100458d6:	687b      	ldr	r3, [r7, #4]
100458d8:	683a      	ldr	r2, [r7, #0]
100458da:	609a      	str	r2, [r3, #8]
}
100458dc:	46c0      	nop			@ (mov r8, r8)
100458de:	46bd      	mov	sp, r7
100458e0:	b002      	add	sp, #8
100458e2:	bd80      	pop	{r7, pc}

100458e4 <LL_RADIO_GetDataPointer>:
  * @rmtoll WORD2          DATAPTR       LL_RADIO_GetDataPointer
  * @param  p RADIO Instance
  * @retval uint32_t
  */
__STATIC_INLINE uint32_t LL_RADIO_GetDataPointer(TXRXPACK_TypeDef *p)
{
100458e4:	b580      	push	{r7, lr}
100458e6:	b082      	sub	sp, #8
100458e8:	af00      	add	r7, sp, #0
100458ea:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD2, TXRXPACK_WORD2_DATAPTR) >> TXRXPACK_WORD2_DATAPTR_Pos);
100458ec:	687b      	ldr	r3, [r7, #4]
100458ee:	689b      	ldr	r3, [r3, #8]
}
100458f0:	0018      	movs	r0, r3
100458f2:	46bd      	mov	sp, r7
100458f4:	b002      	add	sp, #8
100458f6:	bd80      	pop	{r7, pc}

100458f8 <LL_RADIO_SetTimer2Triggering>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetTimer2Triggering(TXRXPACK_TypeDef *p, uint32_t value)
{
100458f8:	b580      	push	{r7, lr}
100458fa:	b082      	sub	sp, #8
100458fc:	af00      	add	r7, sp, #0
100458fe:	6078      	str	r0, [r7, #4]
10045900:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_TIMER2, value);
10045902:	687b      	ldr	r3, [r7, #4]
10045904:	68db      	ldr	r3, [r3, #12]
10045906:	0d1b      	lsrs	r3, r3, #20
10045908:	051a      	lsls	r2, r3, #20
1004590a:	683b      	ldr	r3, [r7, #0]
1004590c:	031b      	lsls	r3, r3, #12
1004590e:	0b1b      	lsrs	r3, r3, #12
10045910:	431a      	orrs	r2, r3
10045912:	687b      	ldr	r3, [r7, #4]
10045914:	60da      	str	r2, [r3, #12]
}
10045916:	46c0      	nop			@ (mov r8, r8)
10045918:	46bd      	mov	sp, r7
1004591a:	b002      	add	sp, #8
1004591c:	bd80      	pop	{r7, pc}

1004591e <LL_RADIO_Timer2_Enable>:
  * @rmtoll WORD3          TIMER2EN            LL_RADIO_Timer2_Enable
  * @param  p
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_Timer2_Enable(TXRXPACK_TypeDef *p)
{
1004591e:	b580      	push	{r7, lr}
10045920:	b082      	sub	sp, #8
10045922:	af00      	add	r7, sp, #0
10045924:	6078      	str	r0, [r7, #4]
  SET_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_TIMER2EN);
10045926:	687b      	ldr	r3, [r7, #4]
10045928:	68db      	ldr	r3, [r3, #12]
1004592a:	2280      	movs	r2, #128	@ 0x80
1004592c:	0352      	lsls	r2, r2, #13
1004592e:	431a      	orrs	r2, r3
10045930:	687b      	ldr	r3, [r7, #4]
10045932:	60da      	str	r2, [r3, #12]
}
10045934:	46c0      	nop			@ (mov r8, r8)
10045936:	46bd      	mov	sp, r7
10045938:	b002      	add	sp, #8
1004593a:	bd80      	pop	{r7, pc}

1004593c <LL_RADIO_SetTrigRcv>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetTrigRcv(TXRXPACK_TypeDef *p, uint32_t value)
{
1004593c:	b580      	push	{r7, lr}
1004593e:	b082      	sub	sp, #8
10045940:	af00      	add	r7, sp, #0
10045942:	6078      	str	r0, [r7, #4]
10045944:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_TRIGRCV, value);
10045946:	687b      	ldr	r3, [r7, #4]
10045948:	68db      	ldr	r3, [r3, #12]
1004594a:	4a07      	ldr	r2, [pc, #28]	@ (10045968 <LL_RADIO_SetTrigRcv+0x2c>)
1004594c:	401a      	ands	r2, r3
1004594e:	683b      	ldr	r3, [r7, #0]
10045950:	0599      	lsls	r1, r3, #22
10045952:	2380      	movs	r3, #128	@ 0x80
10045954:	03db      	lsls	r3, r3, #15
10045956:	400b      	ands	r3, r1
10045958:	431a      	orrs	r2, r3
1004595a:	687b      	ldr	r3, [r7, #4]
1004595c:	60da      	str	r2, [r3, #12]
}
1004595e:	46c0      	nop			@ (mov r8, r8)
10045960:	46bd      	mov	sp, r7
10045962:	b002      	add	sp, #8
10045964:	bd80      	pop	{r7, pc}
10045966:	46c0      	nop			@ (mov r8, r8)
10045968:	ffbfffff 	.word	0xffbfffff

1004596c <LL_RADIO_SetTrigDone>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetTrigDone(TXRXPACK_TypeDef *p, uint32_t value)
{
1004596c:	b580      	push	{r7, lr}
1004596e:	b082      	sub	sp, #8
10045970:	af00      	add	r7, sp, #0
10045972:	6078      	str	r0, [r7, #4]
10045974:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_TRIGDONE, value);
10045976:	687b      	ldr	r3, [r7, #4]
10045978:	68db      	ldr	r3, [r3, #12]
1004597a:	4a07      	ldr	r2, [pc, #28]	@ (10045998 <LL_RADIO_SetTrigDone+0x2c>)
1004597c:	401a      	ands	r2, r3
1004597e:	683b      	ldr	r3, [r7, #0]
10045980:	05d9      	lsls	r1, r3, #23
10045982:	2380      	movs	r3, #128	@ 0x80
10045984:	041b      	lsls	r3, r3, #16
10045986:	400b      	ands	r3, r1
10045988:	431a      	orrs	r2, r3
1004598a:	687b      	ldr	r3, [r7, #4]
1004598c:	60da      	str	r2, [r3, #12]
}
1004598e:	46c0      	nop			@ (mov r8, r8)
10045990:	46bd      	mov	sp, r7
10045992:	b002      	add	sp, #8
10045994:	bd80      	pop	{r7, pc}
10045996:	46c0      	nop			@ (mov r8, r8)
10045998:	ff7fffff 	.word	0xff7fffff

1004599c <LL_RADIO_SetIntTxOk>:
  * @param  p RADIO Instance
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_SetIntTxOk(TXRXPACK_TypeDef *p, uint32_t value)
{
1004599c:	b580      	push	{r7, lr}
1004599e:	b082      	sub	sp, #8
100459a0:	af00      	add	r7, sp, #0
100459a2:	6078      	str	r0, [r7, #4]
100459a4:	6039      	str	r1, [r7, #0]
  MODIFY_REG_FIELD(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_INTTXOK, value);
100459a6:	687b      	ldr	r3, [r7, #4]
100459a8:	68db      	ldr	r3, [r3, #12]
100459aa:	4a07      	ldr	r2, [pc, #28]	@ (100459c8 <LL_RADIO_SetIntTxOk+0x2c>)
100459ac:	401a      	ands	r2, r3
100459ae:	683b      	ldr	r3, [r7, #0]
100459b0:	0619      	lsls	r1, r3, #24
100459b2:	2380      	movs	r3, #128	@ 0x80
100459b4:	045b      	lsls	r3, r3, #17
100459b6:	400b      	ands	r3, r1
100459b8:	431a      	orrs	r2, r3
100459ba:	687b      	ldr	r3, [r7, #4]
100459bc:	60da      	str	r2, [r3, #12]
}
100459be:	46c0      	nop			@ (mov r8, r8)
100459c0:	46bd      	mov	sp, r7
100459c2:	b002      	add	sp, #8
100459c4:	bd80      	pop	{r7, pc}
100459c6:	46c0      	nop			@ (mov r8, r8)
100459c8:	feffffff 	.word	0xfeffffff

100459cc <LL_RADIO_IntDone_Enable>:
  * @rmtoll WORD3          INTDONE            LL_RADIO_IntDone_Enable
  * @param  p
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_IntDone_Enable(TXRXPACK_TypeDef *p)
{
100459cc:	b580      	push	{r7, lr}
100459ce:	b082      	sub	sp, #8
100459d0:	af00      	add	r7, sp, #0
100459d2:	6078      	str	r0, [r7, #4]
  SET_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_INTDONE);
100459d4:	687b      	ldr	r3, [r7, #4]
100459d6:	68db      	ldr	r3, [r3, #12]
100459d8:	2280      	movs	r2, #128	@ 0x80
100459da:	0492      	lsls	r2, r2, #18
100459dc:	431a      	orrs	r2, r3
100459de:	687b      	ldr	r3, [r7, #4]
100459e0:	60da      	str	r2, [r3, #12]
}
100459e2:	46c0      	nop			@ (mov r8, r8)
100459e4:	46bd      	mov	sp, r7
100459e6:	b002      	add	sp, #8
100459e8:	bd80      	pop	{r7, pc}

100459ea <LL_RADIO_IntRcvTimeout_Enable>:
  * @rmtoll WORD3          INTRCVTIMEOUT            LL_RADIO_IntRcvTimeout_Enable
  * @param  p
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_IntRcvTimeout_Enable(TXRXPACK_TypeDef *p)
{
100459ea:	b580      	push	{r7, lr}
100459ec:	b082      	sub	sp, #8
100459ee:	af00      	add	r7, sp, #0
100459f0:	6078      	str	r0, [r7, #4]
  SET_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_INTRCVTIMEOUT);
100459f2:	687b      	ldr	r3, [r7, #4]
100459f4:	68db      	ldr	r3, [r3, #12]
100459f6:	2280      	movs	r2, #128	@ 0x80
100459f8:	04d2      	lsls	r2, r2, #19
100459fa:	431a      	orrs	r2, r3
100459fc:	687b      	ldr	r3, [r7, #4]
100459fe:	60da      	str	r2, [r3, #12]
}
10045a00:	46c0      	nop			@ (mov r8, r8)
10045a02:	46bd      	mov	sp, r7
10045a04:	b002      	add	sp, #8
10045a06:	bd80      	pop	{r7, pc}

10045a08 <LL_RADIO_IntRcvCRCErr_Enable>:
  * @rmtoll WORD3          INTRCVCRCERR            LL_RADIO_IntRcvCRCErr_Enable
  * @param  p
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_IntRcvCRCErr_Enable(TXRXPACK_TypeDef *p)
{
10045a08:	b580      	push	{r7, lr}
10045a0a:	b082      	sub	sp, #8
10045a0c:	af00      	add	r7, sp, #0
10045a0e:	6078      	str	r0, [r7, #4]
  SET_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_INTRCVCRCERR);
10045a10:	687b      	ldr	r3, [r7, #4]
10045a12:	68db      	ldr	r3, [r3, #12]
10045a14:	2280      	movs	r2, #128	@ 0x80
10045a16:	05d2      	lsls	r2, r2, #23
10045a18:	431a      	orrs	r2, r3
10045a1a:	687b      	ldr	r3, [r7, #4]
10045a1c:	60da      	str	r2, [r3, #12]
}
10045a1e:	46c0      	nop			@ (mov r8, r8)
10045a20:	46bd      	mov	sp, r7
10045a22:	b002      	add	sp, #8
10045a24:	bd80      	pop	{r7, pc}

10045a26 <LL_RADIO_IntRcvOk_Enable>:
  * @rmtoll WORD3          INTRCVOK            LL_RADIO_IntRcvOk_Enable
  * @param  p
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_IntRcvOk_Enable(TXRXPACK_TypeDef *p)
{
10045a26:	b580      	push	{r7, lr}
10045a28:	b082      	sub	sp, #8
10045a2a:	af00      	add	r7, sp, #0
10045a2c:	6078      	str	r0, [r7, #4]
  SET_BIT(((TXRXPACK_WORD_TypeDef *)p)->WORD3, TXRXPACK_WORD3_INTRCVOK);
10045a2e:	687b      	ldr	r3, [r7, #4]
10045a30:	68db      	ldr	r3, [r3, #12]
10045a32:	2280      	movs	r2, #128	@ 0x80
10045a34:	0612      	lsls	r2, r2, #24
10045a36:	431a      	orrs	r2, r3
10045a38:	687b      	ldr	r3, [r7, #4]
10045a3a:	60da      	str	r2, [r3, #12]
}
10045a3c:	46c0      	nop			@ (mov r8, r8)
10045a3e:	46bd      	mov	sp, r7
10045a40:	b002      	add	sp, #8
10045a42:	bd80      	pop	{r7, pc}

10045a44 <LL_RADIO_BlueSetInterrupt1RegRegister>:
  * @rmtoll INTERRUPT1REG          ALL       LL_RADIO_BlueSetInterrupt1RegRegister
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_BlueSetInterrupt1RegRegister(uint32_t value)
{
10045a44:	b580      	push	{r7, lr}
10045a46:	b082      	sub	sp, #8
10045a48:	af00      	add	r7, sp, #0
10045a4a:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUE->INTERRUPT1REG, BLUE_INTERRUPT1REG_ALL, value);
10045a4c:	23c0      	movs	r3, #192	@ 0xc0
10045a4e:	05db      	lsls	r3, r3, #23
10045a50:	685b      	ldr	r3, [r3, #4]
10045a52:	4a07      	ldr	r2, [pc, #28]	@ (10045a70 <LL_RADIO_BlueSetInterrupt1RegRegister+0x2c>)
10045a54:	4013      	ands	r3, r2
10045a56:	0019      	movs	r1, r3
10045a58:	687b      	ldr	r3, [r7, #4]
10045a5a:	4a06      	ldr	r2, [pc, #24]	@ (10045a74 <LL_RADIO_BlueSetInterrupt1RegRegister+0x30>)
10045a5c:	401a      	ands	r2, r3
10045a5e:	23c0      	movs	r3, #192	@ 0xc0
10045a60:	05db      	lsls	r3, r3, #23
10045a62:	430a      	orrs	r2, r1
10045a64:	605a      	str	r2, [r3, #4]
}
10045a66:	46c0      	nop			@ (mov r8, r8)
10045a68:	46bd      	mov	sp, r7
10045a6a:	b002      	add	sp, #8
10045a6c:	bd80      	pop	{r7, pc}
10045a6e:	46c0      	nop			@ (mov r8, r8)
10045a70:	0002004f 	.word	0x0002004f
10045a74:	fffdffb0 	.word	0xfffdffb0

10045a78 <LL_RADIO_BlueSetClearSemaphoreRequest>:
  * @rmtoll CMDREG          CLEARSEMAREQ       LL_RADIO_BlueSetClearSemaphoreRequest
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_BlueSetClearSemaphoreRequest(uint32_t value)
{
10045a78:	b580      	push	{r7, lr}
10045a7a:	b082      	sub	sp, #8
10045a7c:	af00      	add	r7, sp, #0
10045a7e:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUE->CMDREG, BLUE_CMDREG_CLEARSEMAREQ, value);
10045a80:	23c0      	movs	r3, #192	@ 0xc0
10045a82:	05db      	lsls	r3, r3, #23
10045a84:	699b      	ldr	r3, [r3, #24]
10045a86:	2208      	movs	r2, #8
10045a88:	4393      	bics	r3, r2
10045a8a:	0019      	movs	r1, r3
10045a8c:	687b      	ldr	r3, [r7, #4]
10045a8e:	00db      	lsls	r3, r3, #3
10045a90:	2208      	movs	r2, #8
10045a92:	401a      	ands	r2, r3
10045a94:	23c0      	movs	r3, #192	@ 0xc0
10045a96:	05db      	lsls	r3, r3, #23
10045a98:	430a      	orrs	r2, r1
10045a9a:	619a      	str	r2, [r3, #24]
}
10045a9c:	46c0      	nop			@ (mov r8, r8)
10045a9e:	46bd      	mov	sp, r7
10045aa0:	b002      	add	sp, #8
10045aa2:	bd80      	pop	{r7, pc}

10045aa4 <LL_RADIO_BlueSetTxRxSkip>:
  * @rmtoll CMDREG          BLUE_CMDREG_TXRXSKIP       LL_RADIO_BlueSetTxRxSkip
  * @param  value
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_BlueSetTxRxSkip(uint32_t value)
{
10045aa4:	b580      	push	{r7, lr}
10045aa6:	b082      	sub	sp, #8
10045aa8:	af00      	add	r7, sp, #0
10045aaa:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUE->CMDREG, BLUE_CMDREG_TXRXSKIP, value);
10045aac:	23c0      	movs	r3, #192	@ 0xc0
10045aae:	05db      	lsls	r3, r3, #23
10045ab0:	699b      	ldr	r3, [r3, #24]
10045ab2:	2201      	movs	r2, #1
10045ab4:	4393      	bics	r3, r2
10045ab6:	0019      	movs	r1, r3
10045ab8:	687b      	ldr	r3, [r7, #4]
10045aba:	2201      	movs	r2, #1
10045abc:	401a      	ands	r2, r3
10045abe:	23c0      	movs	r3, #192	@ 0xc0
10045ac0:	05db      	lsls	r3, r3, #23
10045ac2:	430a      	orrs	r2, r1
10045ac4:	619a      	str	r2, [r3, #24]
}
10045ac6:	46c0      	nop			@ (mov r8, r8)
10045ac8:	46bd      	mov	sp, r7
10045aca:	b002      	add	sp, #8
10045acc:	bd80      	pop	{r7, pc}

10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>:
 */
/* Calculate the Timeout to be programmed on Timer2 to obtain a give T_IFS
 * when the next packet is a transmit one
*/
uint32_t BLEPLAT_CNTR_GetTimer2TimeoutForIfs(uint32_t T_Ifs, BLEPLAT_CNTR_Transaction Transaction, uint8_t Cal_Enabled)
{
10045ace:	b580      	push	{r7, lr}
10045ad0:	b088      	sub	sp, #32
10045ad2:	af00      	add	r7, sp, #0
10045ad4:	6078      	str	r0, [r7, #4]
10045ad6:	0008      	movs	r0, r1
10045ad8:	0011      	movs	r1, r2
10045ada:	1cfb      	adds	r3, r7, #3
10045adc:	1c02      	adds	r2, r0, #0
10045ade:	701a      	strb	r2, [r3, #0]
10045ae0:	1cbb      	adds	r3, r7, #2
10045ae2:	1c0a      	adds	r2, r1, #0
10045ae4:	701a      	strb	r2, [r3, #0]
    uint32_t Timeout = T_Ifs;
10045ae6:	687b      	ldr	r3, [r7, #4]
10045ae8:	617b      	str	r3, [r7, #20]
    uint32_t Tx_Delay_Comp;
    uint32_t Init_Delay;

    if(Transaction == BLEPLAT_CNTR_RxTx)
10045aea:	1cfb      	adds	r3, r7, #3
10045aec:	781b      	ldrb	r3, [r3, #0]
10045aee:	2b01      	cmp	r3, #1
10045af0:	d105      	bne.n	10045afe <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x30>
         * scanning
         */
#ifdef STM32WB05
        const int32_t Adjust_Value = 4;
#else
        const int32_t Adjust_Value = 6;
10045af2:	2306      	movs	r3, #6
10045af4:	60bb      	str	r3, [r7, #8]
#endif
        Tx_Delay_Comp = (TX_DELAY_START>>3) + Adjust_Value;
10045af6:	68bb      	ldr	r3, [r7, #8]
10045af8:	3302      	adds	r3, #2
10045afa:	61fb      	str	r3, [r7, #28]
10045afc:	e015      	b.n	10045b2a <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x5c>
    }
    else if(Transaction == BLEPLAT_CNTR_TxRx)
10045afe:	1cfb      	adds	r3, r7, #3
10045b00:	781b      	ldrb	r3, [r3, #0]
10045b02:	2b00      	cmp	r3, #0
10045b04:	d105      	bne.n	10045b12 <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x44>
         * AGC behavior.
         */
#ifdef STM32WB05
        const int32_t Adjust_Value = 4;
#else
        const int32_t Adjust_Value = 4;
10045b06:	2304      	movs	r3, #4
10045b08:	60fb      	str	r3, [r7, #12]
#endif
        Tx_Delay_Comp = (TX_DELAY_END>>3) + Adjust_Value;
10045b0a:	68fb      	ldr	r3, [r7, #12]
10045b0c:	3302      	adds	r3, #2
10045b0e:	61fb      	str	r3, [r7, #28]
10045b10:	e00b      	b.n	10045b2a <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x5c>
    }
    else if(Transaction == BLEPLAT_CNTR_TxTx)
10045b12:	1cfb      	adds	r3, r7, #3
10045b14:	781b      	ldrb	r3, [r3, #0]
10045b16:	2b02      	cmp	r3, #2
10045b18:	d105      	bne.n	10045b26 <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x58>
         * T_IFS measurements in extended advertising (AUX_CHAIN_IND)
         */
#ifdef STM32WB05
        const int32_t Adjust_Value = 1;
#else
        const int32_t Adjust_Value = 2;
10045b1a:	2302      	movs	r3, #2
10045b1c:	613b      	str	r3, [r7, #16]
#endif
        Tx_Delay_Comp = ((TX_DELAY_START + TX_DELAY_END)>>3) + Adjust_Value;
10045b1e:	693b      	ldr	r3, [r7, #16]
10045b20:	3304      	adds	r3, #4
10045b22:	61fb      	str	r3, [r7, #28]
10045b24:	e001      	b.n	10045b2a <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x5c>
    }
    else
    {
        Tx_Delay_Comp = 0;
10045b26:	2300      	movs	r3, #0
10045b28:	61fb      	str	r3, [r7, #28]
    }

    if((Transaction == BLEPLAT_CNTR_RxTx) || (Transaction == BLEPLAT_CNTR_TxTx))
10045b2a:	1cfb      	adds	r3, r7, #3
10045b2c:	781b      	ldrb	r3, [r3, #0]
10045b2e:	2b01      	cmp	r3, #1
10045b30:	d003      	beq.n	10045b3a <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x6c>
10045b32:	1cfb      	adds	r3, r7, #3
10045b34:	781b      	ldrb	r3, [r3, #0]
10045b36:	2b02      	cmp	r3, #2
10045b38:	d109      	bne.n	10045b4e <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x80>
    {
        if(Cal_Enabled == TRUE)
10045b3a:	1cbb      	adds	r3, r7, #2
10045b3c:	781b      	ldrb	r3, [r3, #0]
10045b3e:	2b01      	cmp	r3, #1
10045b40:	d102      	bne.n	10045b48 <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x7a>
        {
            Init_Delay = TIMER12_INIT_DELAY_CAL + RADIO_FSM_TX_DELAY_CAL;
10045b42:	239b      	movs	r3, #155	@ 0x9b
10045b44:	61bb      	str	r3, [r7, #24]
        if(Cal_Enabled == TRUE)
10045b46:	e013      	b.n	10045b70 <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0xa2>
        }
        else
        {
            Init_Delay = TIMER2_INIT_DELAY_NO_CAL + RADIO_FSM_TX_DELAY_NO_CAL;
10045b48:	233d      	movs	r3, #61	@ 0x3d
10045b4a:	61bb      	str	r3, [r7, #24]
        if(Cal_Enabled == TRUE)
10045b4c:	e010      	b.n	10045b70 <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0xa2>
        }
    }
    else if((Transaction == BLEPLAT_CNTR_TxRx) || (Transaction == BLEPLAT_CNTR_RxRx))
10045b4e:	1cfb      	adds	r3, r7, #3
10045b50:	781b      	ldrb	r3, [r3, #0]
10045b52:	2b00      	cmp	r3, #0
10045b54:	d003      	beq.n	10045b5e <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x90>
10045b56:	1cfb      	adds	r3, r7, #3
10045b58:	781b      	ldrb	r3, [r3, #0]
10045b5a:	2b03      	cmp	r3, #3
10045b5c:	d108      	bne.n	10045b70 <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0xa2>
         * The current calculation of Timer2 for TX-RX events is slightly conservative
         * since it soes not consider the delay from digital modulator to antenna and from
         * antenna to digital demodulator. As a consequence the demodulator is turned on
         * a few microseconds earlier than stricty needed.
         */
        if(Cal_Enabled == TRUE)
10045b5e:	1cbb      	adds	r3, r7, #2
10045b60:	781b      	ldrb	r3, [r3, #0]
10045b62:	2b01      	cmp	r3, #1
10045b64:	d102      	bne.n	10045b6c <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0x9e>
        {
            Init_Delay = TIMER12_INIT_DELAY_CAL + RADIO_FSM_RX_DELAY_CAL;
10045b66:	2399      	movs	r3, #153	@ 0x99
10045b68:	61bb      	str	r3, [r7, #24]
10045b6a:	e001      	b.n	10045b70 <BLEPLAT_CNTR_GetTimer2TimeoutForIfs+0xa2>
        }
        else
        {
            Init_Delay = TIMER2_INIT_DELAY_NO_CAL + RADIO_FSM_RX_DELAY_NO_CAL;
10045b6c:	233b      	movs	r3, #59	@ 0x3b
10045b6e:	61bb      	str	r3, [r7, #24]
    }
    else
    {
    }

    Timeout -= (Init_Delay + Tx_Delay_Comp);
10045b70:	69ba      	ldr	r2, [r7, #24]
10045b72:	69fb      	ldr	r3, [r7, #28]
10045b74:	18d3      	adds	r3, r2, r3
10045b76:	697a      	ldr	r2, [r7, #20]
10045b78:	1ad3      	subs	r3, r2, r3
10045b7a:	617b      	str	r3, [r7, #20]

    return Timeout;
10045b7c:	697b      	ldr	r3, [r7, #20]
}
10045b7e:	0018      	movs	r0, r3
10045b80:	46bd      	mov	sp, r7
10045b82:	b008      	add	sp, #32
10045b84:	bd80      	pop	{r7, pc}

10045b86 <BLEPLAT_CNTR_ClearInterrupt>:

void BLEPLAT_CNTR_ClearInterrupt(uint32_t x)
{
10045b86:	b580      	push	{r7, lr}
10045b88:	b082      	sub	sp, #8
10045b8a:	af00      	add	r7, sp, #0
10045b8c:	6078      	str	r0, [r7, #4]
    LL_RADIO_BlueSetInterrupt1RegRegister(x);
10045b8e:	687b      	ldr	r3, [r7, #4]
10045b90:	0018      	movs	r0, r3
10045b92:	f7ff ff57 	bl	10045a44 <LL_RADIO_BlueSetInterrupt1RegRegister>
}
10045b96:	46c0      	nop			@ (mov r8, r8)
10045b98:	46bd      	mov	sp, r7
10045b9a:	b002      	add	sp, #8
10045b9c:	bd80      	pop	{r7, pc}

10045b9e <BLEPLAT_CNTR_ClearSemareq>:

void BLEPLAT_CNTR_ClearSemareq(void)
{
10045b9e:	b580      	push	{r7, lr}
10045ba0:	af00      	add	r7, sp, #0
    LL_RADIO_BlueSetClearSemaphoreRequest(0x1U);
10045ba2:	2001      	movs	r0, #1
10045ba4:	f7ff ff68 	bl	10045a78 <LL_RADIO_BlueSetClearSemaphoreRequest>
}
10045ba8:	46c0      	nop			@ (mov r8, r8)
10045baa:	46bd      	mov	sp, r7
10045bac:	bd80      	pop	{r7, pc}

10045bae <BLEPLAT_CNTR_TxRxSkip>:

void BLEPLAT_CNTR_TxRxSkip(void)
{
10045bae:	b580      	push	{r7, lr}
10045bb0:	af00      	add	r7, sp, #0
    LL_RADIO_BlueSetTxRxSkip(0x1U);
10045bb2:	2001      	movs	r0, #1
10045bb4:	f7ff ff76 	bl	10045aa4 <LL_RADIO_BlueSetTxRxSkip>
}
10045bb8:	46c0      	nop			@ (mov r8, r8)
10045bba:	46bd      	mov	sp, r7
10045bbc:	bd80      	pop	{r7, pc}

10045bbe <BLEPLAT_CNTR_GlobDisableBlue>:
{
    return LL_RADIO_BlueGetTimerCapture();
}

void BLEPLAT_CNTR_GlobDisableBlue()
{
10045bbe:	b580      	push	{r7, lr}
10045bc0:	af00      	add	r7, sp, #0
    LL_RADIO_GlobalDisableBlue();
10045bc2:	f7ff f867 	bl	10044c94 <LL_RADIO_GlobalDisableBlue>
}
10045bc6:	46c0      	nop			@ (mov r8, r8)
10045bc8:	46bd      	mov	sp, r7
10045bca:	bd80      	pop	{r7, pc}

10045bcc <BLEPLAT_CNTR_GlobEnableBlue>:

void BLEPLAT_CNTR_GlobEnableBlue()
{
10045bcc:	b580      	push	{r7, lr}
10045bce:	af00      	add	r7, sp, #0
    LL_RADIO_GlobalEnableBlue();
10045bd0:	f7ff f852 	bl	10044c78 <LL_RADIO_GlobalEnableBlue>
}
10045bd4:	46c0      	nop			@ (mov r8, r8)
10045bd6:	46bd      	mov	sp, r7
10045bd8:	bd80      	pop	{r7, pc}

10045bda <BLEPLAT_CNTR_GlobWriteSlot>:
{
    LL_RADIO_SetReceivedNoCalDelayChk((uint32_t) x);
}

void BLEPLAT_CNTR_GlobWriteSlot(uint8_t slotNo)
{
10045bda:	b580      	push	{r7, lr}
10045bdc:	b082      	sub	sp, #8
10045bde:	af00      	add	r7, sp, #0
10045be0:	0002      	movs	r2, r0
10045be2:	1dfb      	adds	r3, r7, #7
10045be4:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetCurrentConnectionMachineNumber((uint32_t) slotNo);
10045be6:	1dfb      	adds	r3, r7, #7
10045be8:	781b      	ldrb	r3, [r3, #0]
10045bea:	0018      	movs	r0, r3
10045bec:	f7ff f82e 	bl	10044c4c <LL_RADIO_SetCurrentConnectionMachineNumber>
}
10045bf0:	46c0      	nop			@ (mov r8, r8)
10045bf2:	46bd      	mov	sp, r7
10045bf4:	b002      	add	sp, #8
10045bf6:	bd80      	pop	{r7, pc}

10045bf8 <BLEPLAT_CNTR_IntGetIntStatusAnyHwError>:
{
    LL_RADIO_SetTxDelayEnd((uint32_t) x);
}

uint32_t BLEPLAT_CNTR_IntGetIntStatusAnyHwError(uint32_t x)
{
10045bf8:	b580      	push	{r7, lr}
10045bfa:	b082      	sub	sp, #8
10045bfc:	af00      	add	r7, sp, #0
10045bfe:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & ANY_HW_ERROR_INTERRUPT_Msk);
10045c00:	687b      	ldr	r3, [r7, #4]
10045c02:	4a03      	ldr	r2, [pc, #12]	@ (10045c10 <BLEPLAT_CNTR_IntGetIntStatusAnyHwError+0x18>)
10045c04:	4013      	ands	r3, r2
}
10045c06:	0018      	movs	r0, r3
10045c08:	46bd      	mov	sp, r7
10045c0a:	b002      	add	sp, #8
10045c0c:	bd80      	pop	{r7, pc}
10045c0e:	46c0      	nop			@ (mov r8, r8)
10045c10:	00c9df30 	.word	0x00c9df30

10045c14 <BLEPLAT_CNTR_IntGetIntStatusBitAct2Error>:
{
    return (uint32_t)(x & BLUE_STATUSREG_RXOVERFLOWERROR_Msk);
}

uint32_t BLEPLAT_CNTR_IntGetIntStatusBitAct2Error(uint32_t x)
{
10045c14:	b580      	push	{r7, lr}
10045c16:	b082      	sub	sp, #8
10045c18:	af00      	add	r7, sp, #0
10045c1a:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_ACTIVE2ERROR_Msk);
10045c1c:	687a      	ldr	r2, [r7, #4]
10045c1e:	2380      	movs	r3, #128	@ 0x80
10045c20:	03db      	lsls	r3, r3, #15
10045c22:	4013      	ands	r3, r2
}
10045c24:	0018      	movs	r0, r3
10045c26:	46bd      	mov	sp, r7
10045c28:	b002      	add	sp, #8
10045c2a:	bd80      	pop	{r7, pc}

10045c2c <BLEPLAT_CNTR_IntGetIntStatusBitTimerOverrun>:

uint32_t BLEPLAT_CNTR_IntGetIntStatusBitTimerOverrun(uint32_t x)
{
10045c2c:	b580      	push	{r7, lr}
10045c2e:	b082      	sub	sp, #8
10045c30:	af00      	add	r7, sp, #0
10045c32:	6078      	str	r0, [r7, #4]
    return 0;
10045c34:	2300      	movs	r3, #0
}
10045c36:	0018      	movs	r0, r3
10045c38:	46bd      	mov	sp, r7
10045c3a:	b002      	add	sp, #8
10045c3c:	bd80      	pop	{r7, pc}

10045c3e <BLEPLAT_CNTR_IntGetIntStatusCrcErr>:

#if defined(BLUE_STATUSREG_RCVCRCERR_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusCrcErr(uint32_t x)
{
10045c3e:	b580      	push	{r7, lr}
10045c40:	b082      	sub	sp, #8
10045c42:	af00      	add	r7, sp, #0
10045c44:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_RCVCRCERR_Msk);
10045c46:	687a      	ldr	r2, [r7, #4]
10045c48:	2380      	movs	r3, #128	@ 0x80
10045c4a:	05db      	lsls	r3, r3, #23
10045c4c:	4013      	ands	r3, r2
}
10045c4e:	0018      	movs	r0, r3
10045c50:	46bd      	mov	sp, r7
10045c52:	b002      	add	sp, #8
10045c54:	bd80      	pop	{r7, pc}

10045c56 <BLEPLAT_CNTR_IntGetIntStatusDone>:
#endif

#if defined(BLUE_STATUSREG_DONE_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusDone(uint32_t x)
{
10045c56:	b580      	push	{r7, lr}
10045c58:	b082      	sub	sp, #8
10045c5a:	af00      	add	r7, sp, #0
10045c5c:	6078      	str	r0, [r7, #4]
	return (uint32_t)(x & BLUE_STATUSREG_DONE_Msk);
10045c5e:	687a      	ldr	r2, [r7, #4]
10045c60:	2380      	movs	r3, #128	@ 0x80
10045c62:	049b      	lsls	r3, r3, #18
10045c64:	4013      	ands	r3, r2
}
10045c66:	0018      	movs	r0, r3
10045c68:	46bd      	mov	sp, r7
10045c6a:	b002      	add	sp, #8
10045c6c:	bd80      	pop	{r7, pc}

10045c6e <BLEPLAT_CNTR_IntGetIntStatusEncErr>:
#endif

#if defined(BLUE_STATUSREG_ENCERROR_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusEncErr(uint32_t x)
{
10045c6e:	b580      	push	{r7, lr}
10045c70:	b082      	sub	sp, #8
10045c72:	af00      	add	r7, sp, #0
10045c74:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_ENCERROR_Msk);
10045c76:	687a      	ldr	r2, [r7, #4]
10045c78:	2380      	movs	r3, #128	@ 0x80
10045c7a:	019b      	lsls	r3, r3, #6
10045c7c:	4013      	ands	r3, r2
}
10045c7e:	0018      	movs	r0, r3
10045c80:	46bd      	mov	sp, r7
10045c82:	b002      	add	sp, #8
10045c84:	bd80      	pop	{r7, pc}

10045c86 <BLEPLAT_CNTR_IntGetIntStatusLenErr>:
#endif

#if defined(BLUE_STATUSREG_RCVLENGTHERROR_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusLenErr(uint32_t x)
{
10045c86:	b580      	push	{r7, lr}
10045c88:	b082      	sub	sp, #8
10045c8a:	af00      	add	r7, sp, #0
10045c8c:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_RCVLENGTHERROR_Msk);
10045c8e:	687a      	ldr	r2, [r7, #4]
10045c90:	2380      	movs	r3, #128	@ 0x80
10045c92:	02db      	lsls	r3, r3, #11
10045c94:	4013      	ands	r3, r2
}
10045c96:	0018      	movs	r0, r3
10045c98:	46bd      	mov	sp, r7
10045c9a:	b002      	add	sp, #8
10045c9c:	bd80      	pop	{r7, pc}

10045c9e <BLEPLAT_CNTR_IntGetIntStatusNoactiveError>:
#endif

#if defined(BLUE_STATUSREG_NOACTIVELERROR_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusNoactiveError(uint32_t x)
{
10045c9e:	b580      	push	{r7, lr}
10045ca0:	b082      	sub	sp, #8
10045ca2:	af00      	add	r7, sp, #0
10045ca4:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_NOACTIVELERROR_Msk);
10045ca6:	687a      	ldr	r2, [r7, #4]
10045ca8:	2380      	movs	r3, #128	@ 0x80
10045caa:	025b      	lsls	r3, r3, #9
10045cac:	4013      	ands	r3, r2
}
10045cae:	0018      	movs	r0, r3
10045cb0:	46bd      	mov	sp, r7
10045cb2:	b002      	add	sp, #8
10045cb4:	bd80      	pop	{r7, pc}

10045cb6 <BLEPLAT_CNTR_IntGetIntStatusTxRxSkip>:
#endif

#if defined(BLUE_STATUSREG_TXRXSKIP_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusTxRxSkip(uint32_t x)
{
10045cb6:	b580      	push	{r7, lr}
10045cb8:	b082      	sub	sp, #8
10045cba:	af00      	add	r7, sp, #0
10045cbc:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_TXRXSKIP_Msk);
10045cbe:	687a      	ldr	r2, [r7, #4]
10045cc0:	2380      	movs	r3, #128	@ 0x80
10045cc2:	039b      	lsls	r3, r3, #14
10045cc4:	4013      	ands	r3, r2
}
10045cc6:	0018      	movs	r0, r3
10045cc8:	46bd      	mov	sp, r7
10045cca:	b002      	add	sp, #8
10045ccc:	bd80      	pop	{r7, pc}

10045cce <BLEPLAT_CNTR_IntGetIntStatusTxError1>:
#endif

#if defined(BLUE_STATUSREG_TXERROR_1_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusTxError1(uint32_t x)
{
10045cce:	b580      	push	{r7, lr}
10045cd0:	b082      	sub	sp, #8
10045cd2:	af00      	add	r7, sp, #0
10045cd4:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_TXERROR_1_Msk);
10045cd6:	687a      	ldr	r2, [r7, #4]
10045cd8:	2380      	movs	r3, #128	@ 0x80
10045cda:	009b      	lsls	r3, r3, #2
10045cdc:	4013      	ands	r3, r2
}
10045cde:	0018      	movs	r0, r3
10045ce0:	46bd      	mov	sp, r7
10045ce2:	b002      	add	sp, #8
10045ce4:	bd80      	pop	{r7, pc}

10045ce6 <BLEPLAT_CNTR_IntGetIntStatusTxError3>:
#endif

#if defined(BLUE_STATUSREG_TXERROR_3_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusTxError3(uint32_t x)
{
10045ce6:	b580      	push	{r7, lr}
10045ce8:	b082      	sub	sp, #8
10045cea:	af00      	add	r7, sp, #0
10045cec:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_TXERROR_3_Msk);
10045cee:	687a      	ldr	r2, [r7, #4]
10045cf0:	2380      	movs	r3, #128	@ 0x80
10045cf2:	011b      	lsls	r3, r3, #4
10045cf4:	4013      	ands	r3, r2
}
10045cf6:	0018      	movs	r0, r3
10045cf8:	46bd      	mov	sp, r7
10045cfa:	b002      	add	sp, #8
10045cfc:	bd80      	pop	{r7, pc}

10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>:
#endif

#if defined(BLUE_STATUSREG_RCVOK_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusRxOk(uint32_t x)
{
10045cfe:	b580      	push	{r7, lr}
10045d00:	b082      	sub	sp, #8
10045d02:	af00      	add	r7, sp, #0
10045d04:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_RCVOK_Msk);
10045d06:	687b      	ldr	r3, [r7, #4]
10045d08:	0fdb      	lsrs	r3, r3, #31
10045d0a:	07db      	lsls	r3, r3, #31
}
10045d0c:	0018      	movs	r0, r3
10045d0e:	46bd      	mov	sp, r7
10045d10:	b002      	add	sp, #8
10045d12:	bd80      	pop	{r7, pc}

10045d14 <BLEPLAT_CNTR_IntGetIntStatusTimeout>:
#endif

#if defined(BLUE_STATUSREG_RCVTIMEOUT_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusTimeout(uint32_t x)
{
10045d14:	b580      	push	{r7, lr}
10045d16:	b082      	sub	sp, #8
10045d18:	af00      	add	r7, sp, #0
10045d1a:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_RCVTIMEOUT_Msk);
10045d1c:	687a      	ldr	r2, [r7, #4]
10045d1e:	2380      	movs	r3, #128	@ 0x80
10045d20:	04db      	lsls	r3, r3, #19
10045d22:	4013      	ands	r3, r2
}
10045d24:	0018      	movs	r0, r3
10045d26:	46bd      	mov	sp, r7
10045d28:	b002      	add	sp, #8
10045d2a:	bd80      	pop	{r7, pc}

10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>:
}
#endif

#if defined(BLUE_STATUSREG_PREVTRANSMIT_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusTxDone(uint32_t x)
{
10045d2c:	b580      	push	{r7, lr}
10045d2e:	b082      	sub	sp, #8
10045d30:	af00      	add	r7, sp, #0
10045d32:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_PREVTRANSMIT_Msk);
10045d34:	687b      	ldr	r3, [r7, #4]
10045d36:	2240      	movs	r2, #64	@ 0x40
10045d38:	4013      	ands	r3, r2
}
10045d3a:	0018      	movs	r0, r3
10045d3c:	46bd      	mov	sp, r7
10045d3e:	b002      	add	sp, #8
10045d40:	bd80      	pop	{r7, pc}

10045d42 <BLEPLAT_CNTR_IntGetIntStatusTxOk>:
#endif

#if defined(BLUE_STATUSREG_TXOK_Msk)
uint32_t BLEPLAT_CNTR_IntGetIntStatusTxOk(uint32_t x)
{
10045d42:	b580      	push	{r7, lr}
10045d44:	b082      	sub	sp, #8
10045d46:	af00      	add	r7, sp, #0
10045d48:	6078      	str	r0, [r7, #4]
    return (uint32_t)(x & BLUE_STATUSREG_TXOK_Msk);
10045d4a:	687a      	ldr	r2, [r7, #4]
10045d4c:	2380      	movs	r3, #128	@ 0x80
10045d4e:	045b      	lsls	r3, r3, #17
10045d50:	4013      	ands	r3, r2
}
10045d52:	0018      	movs	r0, r3
10045d54:	46bd      	mov	sp, r7
10045d56:	b002      	add	sp, #8
10045d58:	bd80      	pop	{r7, pc}

10045d5a <BLEPLAT_CNTR_PacketClrCteSamplingEn>:
{
    LL_RADIO_SetCRCInitializationSelector((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x0);
}

void BLEPLAT_CNTR_PacketClrCteSamplingEn(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045d5a:	b580      	push	{r7, lr}
10045d5c:	b082      	sub	sp, #8
10045d5e:	af00      	add	r7, sp, #0
10045d60:	6078      	str	r0, [r7, #4]
#if defined(STM32WB05) || defined(STM32WB09)
  LL_RADIO_SetCTEAndSamplingEnable((TXRXPACK_TypeDef*)packetP, 0x0);
10045d62:	687b      	ldr	r3, [r7, #4]
10045d64:	2100      	movs	r1, #0
10045d66:	0018      	movs	r0, r3
10045d68:	f7ff fcfb 	bl	10045762 <LL_RADIO_SetCTEAndSamplingEnable>
#elif defined(STM32WB06) || defined(STM32WB07)
  /* nothing to do */
#endif
}
10045d6c:	46c0      	nop			@ (mov r8, r8)
10045d6e:	46bd      	mov	sp, r7
10045d70:	b002      	add	sp, #8
10045d72:	bd80      	pop	{r7, pc}

10045d74 <BLEPLAT_CNTR_PacketClrIncChan>:

void BLEPLAT_CNTR_PacketClrIncChan(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045d74:	b580      	push	{r7, lr}
10045d76:	b082      	sub	sp, #8
10045d78:	af00      	add	r7, sp, #0
10045d7a:	6078      	str	r0, [r7, #4]
    LL_RADIO_IncrementerChannel_Disable((TXRXPACK_TypeDef*)packetP);
10045d7c:	687b      	ldr	r3, [r7, #4]
10045d7e:	0018      	movs	r0, r3
10045d80:	f7ff fd4a 	bl	10045818 <LL_RADIO_IncrementerChannel_Disable>
}
10045d84:	46c0      	nop			@ (mov r8, r8)
10045d86:	46bd      	mov	sp, r7
10045d88:	b002      	add	sp, #8
10045d8a:	bd80      	pop	{r7, pc}

10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>:

void BLEPLAT_CNTR_PacketClrPllTrig(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045d8c:	b580      	push	{r7, lr}
10045d8e:	b082      	sub	sp, #8
10045d90:	af00      	add	r7, sp, #0
10045d92:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetCalibrationRequest((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x0);
10045d94:	687b      	ldr	r3, [r7, #4]
10045d96:	2100      	movs	r1, #0
10045d98:	0018      	movs	r0, r3
10045d9a:	f7ff fcb9 	bl	10045710 <LL_RADIO_SetCalibrationRequest>
}
10045d9e:	46c0      	nop			@ (mov r8, r8)
10045da0:	46bd      	mov	sp, r7
10045da2:	b002      	add	sp, #8
10045da4:	bd80      	pop	{r7, pc}

10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>:
#endif

}

uint8_t* BLEPLAT_CNTR_PacketGetDataPtr(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045da6:	b580      	push	{r7, lr}
10045da8:	b082      	sub	sp, #8
10045daa:	af00      	add	r7, sp, #0
10045dac:	6078      	str	r0, [r7, #4]
    return (uint8_t*)CONV_ADR(LL_RADIO_GetDataPointer((TXRXPACK_TypeDef*)packetP));
10045dae:	687b      	ldr	r3, [r7, #4]
10045db0:	0018      	movs	r0, r3
10045db2:	f7ff fd97 	bl	100458e4 <LL_RADIO_GetDataPointer>
10045db6:	0003      	movs	r3, r0
}
10045db8:	0018      	movs	r0, r3
10045dba:	46bd      	mov	sp, r7
10045dbc:	b002      	add	sp, #8
10045dbe:	bd80      	pop	{r7, pc}

10045dc0 <BLEPLAT_CNTR_PacketInitTo0>:

void BLEPLAT_CNTR_PacketInitTo0(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045dc0:	b580      	push	{r7, lr}
10045dc2:	b082      	sub	sp, #8
10045dc4:	af00      	add	r7, sp, #0
10045dc6:	6078      	str	r0, [r7, #4]
    memset((void*)packetP, 0, sizeof(TXRXPACK_WORD_TypeDef));
10045dc8:	687b      	ldr	r3, [r7, #4]
10045dca:	2210      	movs	r2, #16
10045dcc:	2100      	movs	r1, #0
10045dce:	0018      	movs	r0, r3
10045dd0:	f025 fede 	bl	1006bb90 <memset>
}
10045dd4:	46c0      	nop			@ (mov r8, r8)
10045dd6:	46bd      	mov	sp, r7
10045dd8:	b002      	add	sp, #8
10045dda:	bd80      	pop	{r7, pc}

10045ddc <BLEPLAT_CNTR_PacketSetAdvPduFormat>:

void BLEPLAT_CNTR_PacketSetAdvPduFormat(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045ddc:	b580      	push	{r7, lr}
10045dde:	b082      	sub	sp, #8
10045de0:	af00      	add	r7, sp, #0
10045de2:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetAdvertise((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045de4:	687b      	ldr	r3, [r7, #4]
10045de6:	2101      	movs	r1, #1
10045de8:	0018      	movs	r0, r3
10045dea:	f7ff fce4 	bl	100457b6 <LL_RADIO_SetAdvertise>
}
10045dee:	46c0      	nop			@ (mov r8, r8)
10045df0:	46bd      	mov	sp, r7
10045df2:	b002      	add	sp, #8
10045df4:	bd80      	pop	{r7, pc}

10045df6 <BLEPLAT_CNTR_PacketSetCrcinitSel>:

void BLEPLAT_CNTR_PacketSetCrcinitSel(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045df6:	b580      	push	{r7, lr}
10045df8:	b082      	sub	sp, #8
10045dfa:	af00      	add	r7, sp, #0
10045dfc:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetCRCInitializationSelector((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045dfe:	687b      	ldr	r3, [r7, #4]
10045e00:	2101      	movs	r1, #1
10045e02:	0018      	movs	r0, r3
10045e04:	f7ff fcc2 	bl	1004578c <LL_RADIO_SetCRCInitializationSelector>
}
10045e08:	46c0      	nop			@ (mov r8, r8)
10045e0a:	46bd      	mov	sp, r7
10045e0c:	b002      	add	sp, #8
10045e0e:	bd80      	pop	{r7, pc}

10045e10 <BLEPLAT_CNTR_PacketSetCteSamplingEn>:

void BLEPLAT_CNTR_PacketSetCteSamplingEn(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045e10:	b580      	push	{r7, lr}
10045e12:	b082      	sub	sp, #8
10045e14:	af00      	add	r7, sp, #0
10045e16:	6078      	str	r0, [r7, #4]
#if defined(STM32WB05) || defined(STM32WB09)
  LL_RADIO_SetCTEAndSamplingEnable((TXRXPACK_TypeDef*)packetP, 0x01);
10045e18:	687b      	ldr	r3, [r7, #4]
10045e1a:	2101      	movs	r1, #1
10045e1c:	0018      	movs	r0, r3
10045e1e:	f7ff fca0 	bl	10045762 <LL_RADIO_SetCTEAndSamplingEnable>
#elif defined(STM32WB06) || defined(STM32WB07)
  /* nothing to do */
#endif
}
10045e22:	46c0      	nop			@ (mov r8, r8)
10045e24:	46bd      	mov	sp, r7
10045e26:	b002      	add	sp, #8
10045e28:	bd80      	pop	{r7, pc}

10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>:
{
     LL_RADIO_SetAdvertise((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x0);
}

void BLEPLAT_CNTR_PacketSetDataPtr(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP, void* dataP)
{
10045e2a:	b580      	push	{r7, lr}
10045e2c:	b082      	sub	sp, #8
10045e2e:	af00      	add	r7, sp, #0
10045e30:	6078      	str	r0, [r7, #4]
10045e32:	6039      	str	r1, [r7, #0]
    LL_RADIO_SetDataPointer((TXRXPACK_TypeDef*)packetP, BLUE_DATA_PTR_CAST(dataP));
10045e34:	683a      	ldr	r2, [r7, #0]
10045e36:	687b      	ldr	r3, [r7, #4]
10045e38:	0011      	movs	r1, r2
10045e3a:	0018      	movs	r0, r3
10045e3c:	f7ff fd44 	bl	100458c8 <LL_RADIO_SetDataPointer>
}
10045e40:	46c0      	nop			@ (mov r8, r8)
10045e42:	46bd      	mov	sp, r7
10045e44:	b002      	add	sp, #8
10045e46:	bd80      	pop	{r7, pc}

10045e48 <BLEPLAT_CNTR_PacketSetIncChan>:

void BLEPLAT_CNTR_PacketSetIncChan(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045e48:	b580      	push	{r7, lr}
10045e4a:	b082      	sub	sp, #8
10045e4c:	af00      	add	r7, sp, #0
10045e4e:	6078      	str	r0, [r7, #4]
    LL_RADIO_IncrementerChannel_Enable((TXRXPACK_TypeDef*)packetP);
10045e50:	687b      	ldr	r3, [r7, #4]
10045e52:	0018      	movs	r0, r3
10045e54:	f7ff fcd2 	bl	100457fc <LL_RADIO_IncrementerChannel_Enable>
}
10045e58:	46c0      	nop			@ (mov r8, r8)
10045e5a:	46bd      	mov	sp, r7
10045e5c:	b002      	add	sp, #8
10045e5e:	bd80      	pop	{r7, pc}

10045e60 <BLEPLAT_CNTR_PacketSetIntCrcErr>:

void BLEPLAT_CNTR_PacketSetIntCrcErr(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045e60:	b580      	push	{r7, lr}
10045e62:	b082      	sub	sp, #8
10045e64:	af00      	add	r7, sp, #0
10045e66:	6078      	str	r0, [r7, #4]
    LL_RADIO_IntRcvCRCErr_Enable((TXRXPACK_TypeDef*)packetP);
10045e68:	687b      	ldr	r3, [r7, #4]
10045e6a:	0018      	movs	r0, r3
10045e6c:	f7ff fdcc 	bl	10045a08 <LL_RADIO_IntRcvCRCErr_Enable>
}
10045e70:	46c0      	nop			@ (mov r8, r8)
10045e72:	46bd      	mov	sp, r7
10045e74:	b002      	add	sp, #8
10045e76:	bd80      	pop	{r7, pc}

10045e78 <BLEPLAT_CNTR_PacketSetIntDone>:

void BLEPLAT_CNTR_PacketSetIntDone(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045e78:	b580      	push	{r7, lr}
10045e7a:	b082      	sub	sp, #8
10045e7c:	af00      	add	r7, sp, #0
10045e7e:	6078      	str	r0, [r7, #4]
    LL_RADIO_IntDone_Enable((TXRXPACK_TypeDef*)packetP);
10045e80:	687b      	ldr	r3, [r7, #4]
10045e82:	0018      	movs	r0, r3
10045e84:	f7ff fda2 	bl	100459cc <LL_RADIO_IntDone_Enable>
}
10045e88:	46c0      	nop			@ (mov r8, r8)
10045e8a:	46bd      	mov	sp, r7
10045e8c:	b002      	add	sp, #8
10045e8e:	bd80      	pop	{r7, pc}

10045e90 <BLEPLAT_CNTR_PacketSetIntRcvOk>:

void BLEPLAT_CNTR_PacketSetIntRcvOk(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045e90:	b580      	push	{r7, lr}
10045e92:	b082      	sub	sp, #8
10045e94:	af00      	add	r7, sp, #0
10045e96:	6078      	str	r0, [r7, #4]
    LL_RADIO_IntRcvOk_Enable((TXRXPACK_TypeDef*)packetP);
10045e98:	687b      	ldr	r3, [r7, #4]
10045e9a:	0018      	movs	r0, r3
10045e9c:	f7ff fdc3 	bl	10045a26 <LL_RADIO_IntRcvOk_Enable>
}
10045ea0:	46c0      	nop			@ (mov r8, r8)
10045ea2:	46bd      	mov	sp, r7
10045ea4:	b002      	add	sp, #8
10045ea6:	bd80      	pop	{r7, pc}

10045ea8 <BLEPLAT_CNTR_PacketSetIntTimeout>:

void BLEPLAT_CNTR_PacketSetIntTimeout(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045ea8:	b580      	push	{r7, lr}
10045eaa:	b082      	sub	sp, #8
10045eac:	af00      	add	r7, sp, #0
10045eae:	6078      	str	r0, [r7, #4]
    LL_RADIO_IntRcvTimeout_Enable((TXRXPACK_TypeDef*)packetP);
10045eb0:	687b      	ldr	r3, [r7, #4]
10045eb2:	0018      	movs	r0, r3
10045eb4:	f7ff fd99 	bl	100459ea <LL_RADIO_IntRcvTimeout_Enable>
}
10045eb8:	46c0      	nop			@ (mov r8, r8)
10045eba:	46bd      	mov	sp, r7
10045ebc:	b002      	add	sp, #8
10045ebe:	bd80      	pop	{r7, pc}

10045ec0 <BLEPLAT_CNTR_PacketSetIntTxOk>:
{
  LL_RADIO_SetIntTimeCapture((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1U);
}

void BLEPLAT_CNTR_PacketSetIntTxOk(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045ec0:	b580      	push	{r7, lr}
10045ec2:	b082      	sub	sp, #8
10045ec4:	af00      	add	r7, sp, #0
10045ec6:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetIntTxOk((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045ec8:	687b      	ldr	r3, [r7, #4]
10045eca:	2101      	movs	r1, #1
10045ecc:	0018      	movs	r0, r3
10045ece:	f7ff fd65 	bl	1004599c <LL_RADIO_SetIntTxOk>
}
10045ed2:	46c0      	nop			@ (mov r8, r8)
10045ed4:	46bd      	mov	sp, r7
10045ed6:	b002      	add	sp, #8
10045ed8:	bd80      	pop	{r7, pc}

10045eda <BLEPLAT_CNTR_PacketSetKeepsemareq>:

void BLEPLAT_CNTR_PacketSetKeepsemareq(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045eda:	b580      	push	{r7, lr}
10045edc:	b082      	sub	sp, #8
10045ede:	af00      	add	r7, sp, #0
10045ee0:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetKeepSemaRequest((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045ee2:	687b      	ldr	r3, [r7, #4]
10045ee4:	2101      	movs	r1, #1
10045ee6:	0018      	movs	r0, r3
10045ee8:	f7ff fc26 	bl	10045738 <LL_RADIO_SetKeepSemaRequest>
}
10045eec:	46c0      	nop			@ (mov r8, r8)
10045eee:	46bd      	mov	sp, r7
10045ef0:	b002      	add	sp, #8
10045ef2:	bd80      	pop	{r7, pc}

10045ef4 <BLEPLAT_CNTR_PacketSetNextPtr>:

void BLEPLAT_CNTR_PacketSetNextPtr(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP, BLEPLAT_CNTR_TXRXPACK_TypeDef* packetNextP)
{
10045ef4:	b580      	push	{r7, lr}
10045ef6:	b082      	sub	sp, #8
10045ef8:	af00      	add	r7, sp, #0
10045efa:	6078      	str	r0, [r7, #4]
10045efc:	6039      	str	r1, [r7, #0]
    LL_RADIO_SetNextPointer((TXRXPACK_TypeDef*)packetP, (uint32_t) BLUE_STRUCT_PTR_CAST((TXRXPACK_TypeDef*)packetNextP));
10045efe:	683a      	ldr	r2, [r7, #0]
10045f00:	687b      	ldr	r3, [r7, #4]
10045f02:	0011      	movs	r1, r2
10045f04:	0018      	movs	r0, r3
10045f06:	f7ff fbf5 	bl	100456f4 <LL_RADIO_SetNextPointer>
}
10045f0a:	46c0      	nop			@ (mov r8, r8)
10045f0c:	46bd      	mov	sp, r7
10045f0e:	b002      	add	sp, #8
10045f10:	bd80      	pop	{r7, pc}

10045f12 <BLEPLAT_CNTR_PacketSetNextRxMode>:

void BLEPLAT_CNTR_PacketSetNextRxMode(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045f12:	b580      	push	{r7, lr}
10045f14:	b082      	sub	sp, #8
10045f16:	af00      	add	r7, sp, #0
10045f18:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetNextTxMode((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x0);
10045f1a:	687b      	ldr	r3, [r7, #4]
10045f1c:	2100      	movs	r1, #0
10045f1e:	0018      	movs	r0, r3
10045f20:	f7ff fc8a 	bl	10045838 <LL_RADIO_SetNextTxMode>
}
10045f24:	46c0      	nop			@ (mov r8, r8)
10045f26:	46bd      	mov	sp, r7
10045f28:	b002      	add	sp, #8
10045f2a:	bd80      	pop	{r7, pc}

10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>:

void BLEPLAT_CNTR_PacketSetNextSlot(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP, uint8_t slot)
{
10045f2c:	b580      	push	{r7, lr}
10045f2e:	b082      	sub	sp, #8
10045f30:	af00      	add	r7, sp, #0
10045f32:	6078      	str	r0, [r7, #4]
10045f34:	000a      	movs	r2, r1
10045f36:	1cfb      	adds	r3, r7, #3
10045f38:	701a      	strb	r2, [r3, #0]
    /* nothing to do */
}
10045f3a:	46c0      	nop			@ (mov r8, r8)
10045f3c:	46bd      	mov	sp, r7
10045f3e:	b002      	add	sp, #8
10045f40:	bd80      	pop	{r7, pc}

10045f42 <BLEPLAT_CNTR_PacketSetNextTxMode>:

void BLEPLAT_CNTR_PacketSetNextTxMode(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045f42:	b580      	push	{r7, lr}
10045f44:	b082      	sub	sp, #8
10045f46:	af00      	add	r7, sp, #0
10045f48:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetNextTxMode((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045f4a:	687b      	ldr	r3, [r7, #4]
10045f4c:	2101      	movs	r1, #1
10045f4e:	0018      	movs	r0, r3
10045f50:	f7ff fc72 	bl	10045838 <LL_RADIO_SetNextTxMode>
}
10045f54:	46c0      	nop			@ (mov r8, r8)
10045f56:	46bd      	mov	sp, r7
10045f58:	b002      	add	sp, #8
10045f5a:	bd80      	pop	{r7, pc}

10045f5c <BLEPLAT_CNTR_PacketSetNsEn>:

void BLEPLAT_CNTR_PacketSetNsEn(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045f5c:	b580      	push	{r7, lr}
10045f5e:	b082      	sub	sp, #8
10045f60:	af00      	add	r7, sp, #0
10045f62:	6078      	str	r0, [r7, #4]
    LL_RADIO_AutomaticSnNesnHardwareMechanism_Enable((TXRXPACK_TypeDef*)packetP);
10045f64:	687b      	ldr	r3, [r7, #4]
10045f66:	0018      	movs	r0, r3
10045f68:	f7ff fc3a 	bl	100457e0 <LL_RADIO_AutomaticSnNesnHardwareMechanism_Enable>
}
10045f6c:	46c0      	nop			@ (mov r8, r8)
10045f6e:	46bd      	mov	sp, r7
10045f70:	b002      	add	sp, #8
10045f72:	bd80      	pop	{r7, pc}

10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>:

void BLEPLAT_CNTR_PacketSetPllTrig(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045f74:	b580      	push	{r7, lr}
10045f76:	b082      	sub	sp, #8
10045f78:	af00      	add	r7, sp, #0
10045f7a:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetCalibrationRequest((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045f7c:	687b      	ldr	r3, [r7, #4]
10045f7e:	2101      	movs	r1, #1
10045f80:	0018      	movs	r0, r3
10045f82:	f7ff fbc5 	bl	10045710 <LL_RADIO_SetCalibrationRequest>
}
10045f86:	46c0      	nop			@ (mov r8, r8)
10045f88:	46bd      	mov	sp, r7
10045f8a:	b002      	add	sp, #8
10045f8c:	bd80      	pop	{r7, pc}

10045f8e <BLEPLAT_CNTR_PacketSetRxReady>:

void BLEPLAT_CNTR_PacketSetRxReady(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045f8e:	b580      	push	{r7, lr}
10045f90:	b082      	sub	sp, #8
10045f92:	af00      	add	r7, sp, #0
10045f94:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetAllTableDataReady((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045f96:	687b      	ldr	r3, [r7, #4]
10045f98:	2101      	movs	r1, #1
10045f9a:	0018      	movs	r0, r3
10045f9c:	f7ff fc64 	bl	10045868 <LL_RADIO_SetAllTableDataReady>
}
10045fa0:	46c0      	nop			@ (mov r8, r8)
10045fa2:	46bd      	mov	sp, r7
10045fa4:	b002      	add	sp, #8
10045fa6:	bd80      	pop	{r7, pc}

10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>:

void BLEPLAT_CNTR_PacketSetTimeout(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP, uint32_t x)
{
10045fa8:	b580      	push	{r7, lr}
10045faa:	b082      	sub	sp, #8
10045fac:	af00      	add	r7, sp, #0
10045fae:	6078      	str	r0, [r7, #4]
10045fb0:	6039      	str	r1, [r7, #0]
    LL_RADIO_SetTimer2Triggering((TXRXPACK_TypeDef*)packetP, x);
10045fb2:	683a      	ldr	r2, [r7, #0]
10045fb4:	687b      	ldr	r3, [r7, #4]
10045fb6:	0011      	movs	r1, r2
10045fb8:	0018      	movs	r0, r3
10045fba:	f7ff fc9d 	bl	100458f8 <LL_RADIO_SetTimer2Triggering>
}
10045fbe:	46c0      	nop			@ (mov r8, r8)
10045fc0:	46bd      	mov	sp, r7
10045fc2:	b002      	add	sp, #8
10045fc4:	bd80      	pop	{r7, pc}

10045fc6 <BLEPLAT_CNTR_PacketSetTimer2Active>:

void BLEPLAT_CNTR_PacketSetTimer2Active(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045fc6:	b580      	push	{r7, lr}
10045fc8:	b082      	sub	sp, #8
10045fca:	af00      	add	r7, sp, #0
10045fcc:	6078      	str	r0, [r7, #4]
    LL_RADIO_Timer2_Enable((TXRXPACK_TypeDef*)packetP);
10045fce:	687b      	ldr	r3, [r7, #4]
10045fd0:	0018      	movs	r0, r3
10045fd2:	f7ff fca4 	bl	1004591e <LL_RADIO_Timer2_Enable>
}
10045fd6:	46c0      	nop			@ (mov r8, r8)
10045fd8:	46bd      	mov	sp, r7
10045fda:	b002      	add	sp, #8
10045fdc:	bd80      	pop	{r7, pc}

10045fde <BLEPLAT_CNTR_PacketSetTimerTrigDone>:

void BLEPLAT_CNTR_PacketSetTimerTrigDone(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045fde:	b580      	push	{r7, lr}
10045fe0:	b082      	sub	sp, #8
10045fe2:	af00      	add	r7, sp, #0
10045fe4:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetTrigDone((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10045fe6:	687b      	ldr	r3, [r7, #4]
10045fe8:	2101      	movs	r1, #1
10045fea:	0018      	movs	r0, r3
10045fec:	f7ff fcbe 	bl	1004596c <LL_RADIO_SetTrigDone>
}
10045ff0:	46c0      	nop			@ (mov r8, r8)
10045ff2:	46bd      	mov	sp, r7
10045ff4:	b002      	add	sp, #8
10045ff6:	bd80      	pop	{r7, pc}

10045ff8 <BLEPLAT_CNTR_PacketSetTimerTrigRcv>:

void BLEPLAT_CNTR_PacketSetTimerTrigRcv(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10045ff8:	b580      	push	{r7, lr}
10045ffa:	b082      	sub	sp, #8
10045ffc:	af00      	add	r7, sp, #0
10045ffe:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetTrigRcv((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10046000:	687b      	ldr	r3, [r7, #4]
10046002:	2101      	movs	r1, #1
10046004:	0018      	movs	r0, r3
10046006:	f7ff fc99 	bl	1004593c <LL_RADIO_SetTrigRcv>
}
1004600a:	46c0      	nop			@ (mov r8, r8)
1004600c:	46bd      	mov	sp, r7
1004600e:	b002      	add	sp, #8
10046010:	bd80      	pop	{r7, pc}

10046012 <BLEPLAT_CNTR_PacketSetTxReady>:

void BLEPLAT_CNTR_PacketSetTxReady(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10046012:	b580      	push	{r7, lr}
10046014:	b082      	sub	sp, #8
10046016:	af00      	add	r7, sp, #0
10046018:	6078      	str	r0, [r7, #4]
    LL_RADIO_SetTransmissionDataReady((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
1004601a:	687b      	ldr	r3, [r7, #4]
1004601c:	2101      	movs	r1, #1
1004601e:	0018      	movs	r0, r3
10046020:	f7ff fc3a 	bl	10045898 <LL_RADIO_SetTransmissionDataReady>
    LL_RADIO_SetAllTableDataReady((TXRXPACK_TypeDef*)packetP, (uint32_t) 0x1);
10046024:	687b      	ldr	r3, [r7, #4]
10046026:	2101      	movs	r1, #1
10046028:	0018      	movs	r0, r3
1004602a:	f7ff fc1d 	bl	10045868 <LL_RADIO_SetAllTableDataReady>
}
1004602e:	46c0      	nop			@ (mov r8, r8)
10046030:	46bd      	mov	sp, r7
10046032:	b002      	add	sp, #8
10046034:	bd80      	pop	{r7, pc}

10046036 <BLEPLAT_CNTR_SetRcvLen>:
{
    /* nothing to do */
}

void BLEPLAT_CNTR_SetRcvLen(BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP, uint32_t rcvLen)
{
10046036:	b580      	push	{r7, lr}
10046038:	b082      	sub	sp, #8
1004603a:	af00      	add	r7, sp, #0
1004603c:	6078      	str	r0, [r7, #4]
1004603e:	6039      	str	r1, [r7, #0]
  (void)packetP;
  LL_RADIO_SetReceiveWindowTimeout((uint32_t) (rcvLen & 0xFFFFFU));
10046040:	683b      	ldr	r3, [r7, #0]
10046042:	031b      	lsls	r3, r3, #12
10046044:	0b1b      	lsrs	r3, r3, #12
10046046:	0018      	movs	r0, r3
10046048:	f7fe fe32 	bl	10044cb0 <LL_RADIO_SetReceiveWindowTimeout>
}
1004604c:	46c0      	nop			@ (mov r8, r8)
1004604e:	46bd      	mov	sp, r7
10046050:	b002      	add	sp, #8
10046052:	bd80      	pop	{r7, pc}

10046054 <BLEPLAT_CNTR_SmCteOff>:

void BLEPLAT_CNTR_SmCteOff(uint8_t smNo)
{
10046054:	b580      	push	{r7, lr}
10046056:	b082      	sub	sp, #8
10046058:	af00      	add	r7, sp, #0
1004605a:	0002      	movs	r2, r0
1004605c:	1dfb      	adds	r3, r7, #7
1004605e:	701a      	strb	r2, [r3, #0]
#if defined(STM32WB05) || defined(STM32WB09)
  LL_RADIO_SetCTEDisable(smNo, 0x01);
10046060:	1dfb      	adds	r3, r7, #7
10046062:	781b      	ldrb	r3, [r3, #0]
10046064:	2101      	movs	r1, #1
10046066:	0018      	movs	r0, r3
10046068:	f7fe ffd4 	bl	10045014 <LL_RADIO_SetCTEDisable>
#elif defined(STM32WB06) || defined(STM32WB07)
  /* nothing to do */
#endif
}
1004606c:	46c0      	nop			@ (mov r8, r8)
1004606e:	46bd      	mov	sp, r7
10046070:	b002      	add	sp, #8
10046072:	bd80      	pop	{r7, pc}

10046074 <BLEPLAT_CNTR_SmEnRadioConfig>:
  /* nothing to do */
#endif
}

void BLEPLAT_CNTR_SmEnRadioConfig(uint8_t smNo, uint32_t enable)
{
10046074:	b580      	push	{r7, lr}
10046076:	b082      	sub	sp, #8
10046078:	af00      	add	r7, sp, #0
1004607a:	0002      	movs	r2, r0
1004607c:	6039      	str	r1, [r7, #0]
1004607e:	1dfb      	adds	r3, r7, #7
10046080:	701a      	strb	r2, [r3, #0]
    if(enable)
10046082:	683b      	ldr	r3, [r7, #0]
10046084:	2b00      	cmp	r3, #0
10046086:	d005      	beq.n	10046094 <BLEPLAT_CNTR_SmEnRadioConfig+0x20>
	    LL_RADIO_RadioCommandList_Enable(smNo);
10046088:	1dfb      	adds	r3, r7, #7
1004608a:	781b      	ldrb	r3, [r3, #0]
1004608c:	0018      	movs	r0, r3
1004608e:	f7fe fe4d 	bl	10044d2c <LL_RADIO_RadioCommandList_Enable>
	else
	    LL_RADIO_RadioCommandList_Disable(smNo);
}
10046092:	e004      	b.n	1004609e <BLEPLAT_CNTR_SmEnRadioConfig+0x2a>
	    LL_RADIO_RadioCommandList_Disable(smNo);
10046094:	1dfb      	adds	r3, r7, #7
10046096:	781b      	ldrb	r3, [r3, #0]
10046098:	0018      	movs	r0, r3
1004609a:	f7fe fe65 	bl	10044d68 <LL_RADIO_RadioCommandList_Disable>
}
1004609e:	46c0      	nop			@ (mov r8, r8)
100460a0:	46bd      	mov	sp, r7
100460a2:	b002      	add	sp, #8
100460a4:	bd80      	pop	{r7, pc}

100460a6 <BLEPLAT_CNTR_SmEncOff>:

void BLEPLAT_CNTR_SmEncOff(uint8_t smNo)
{
100460a6:	b580      	push	{r7, lr}
100460a8:	b082      	sub	sp, #8
100460aa:	af00      	add	r7, sp, #0
100460ac:	0002      	movs	r2, r0
100460ae:	1dfb      	adds	r3, r7, #7
100460b0:	701a      	strb	r2, [r3, #0]
    LL_RADIO_Encryption_Disable(smNo);
100460b2:	1dfb      	adds	r3, r7, #7
100460b4:	781b      	ldrb	r3, [r3, #0]
100460b6:	0018      	movs	r0, r3
100460b8:	f7fe ff4c 	bl	10044f54 <LL_RADIO_Encryption_Disable>
    LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable(smNo);
100460bc:	1dfb      	adds	r3, r7, #7
100460be:	781b      	ldrb	r3, [r3, #0]
100460c0:	0018      	movs	r0, r3
100460c2:	f7ff f939 	bl	10045338 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Disable>
}
100460c6:	46c0      	nop			@ (mov r8, r8)
100460c8:	46bd      	mov	sp, r7
100460ca:	b002      	add	sp, #8
100460cc:	bd80      	pop	{r7, pc}

100460ce <BLEPLAT_CNTR_SmEncOn>:

void BLEPLAT_CNTR_SmEncOn(uint8_t smNo)
{
100460ce:	b580      	push	{r7, lr}
100460d0:	b082      	sub	sp, #8
100460d2:	af00      	add	r7, sp, #0
100460d4:	0002      	movs	r2, r0
100460d6:	1dfb      	adds	r3, r7, #7
100460d8:	701a      	strb	r2, [r3, #0]
    LL_RADIO_Encryption_Enable(smNo);
100460da:	1dfb      	adds	r3, r7, #7
100460dc:	781b      	ldrb	r3, [r3, #0]
100460de:	0018      	movs	r0, r3
100460e0:	f7fe ff18 	bl	10044f14 <LL_RADIO_Encryption_Enable>
    LL_RADIO_ReceiveEncryptionErrorInterrupt_Enable(smNo);
100460e4:	1dfb      	adds	r3, r7, #7
100460e6:	781b      	ldrb	r3, [r3, #0]
100460e8:	0018      	movs	r0, r3
100460ea:	f7ff f905 	bl	100452f8 <LL_RADIO_ReceiveEncryptionErrorInterrupt_Enable>
}
100460ee:	46c0      	nop			@ (mov r8, r8)
100460f0:	46bd      	mov	sp, r7
100460f2:	b002      	add	sp, #8
100460f4:	bd80      	pop	{r7, pc}

100460f6 <BLEPLAT_CNTR_SmGetAccessAddr>:

uint32_t BLEPLAT_CNTR_SmGetAccessAddr(uint8_t smNo)
{
100460f6:	b580      	push	{r7, lr}
100460f8:	b082      	sub	sp, #8
100460fa:	af00      	add	r7, sp, #0
100460fc:	0002      	movs	r2, r0
100460fe:	1dfb      	adds	r3, r7, #7
10046100:	701a      	strb	r2, [r3, #0]
    return LL_RADIO_GetAccessAddress(smNo);
10046102:	1dfb      	adds	r3, r7, #7
10046104:	781b      	ldrb	r3, [r3, #0]
10046106:	0018      	movs	r0, r3
10046108:	f7ff f954 	bl	100453b4 <LL_RADIO_GetAccessAddress>
1004610c:	0003      	movs	r3, r0
}
1004610e:	0018      	movs	r0, r3
10046110:	46bd      	mov	sp, r7
10046112:	b002      	add	sp, #8
10046114:	bd80      	pop	{r7, pc}

10046116 <BLEPLAT_CNTR_SmGetChannelMap>:

void BLEPLAT_CNTR_SmGetChannelMap(uint8_t smNo, uint8_t* chanMap)
{
10046116:	b580      	push	{r7, lr}
10046118:	b082      	sub	sp, #8
1004611a:	af00      	add	r7, sp, #0
1004611c:	0002      	movs	r2, r0
1004611e:	6039      	str	r1, [r7, #0]
10046120:	1dfb      	adds	r3, r7, #7
10046122:	701a      	strb	r2, [r3, #0]
    chanMap[0] = (uint8_t)(LL_RADIO_GetUsedChannelFlags_15_0(smNo));
10046124:	1dfb      	adds	r3, r7, #7
10046126:	781b      	ldrb	r3, [r3, #0]
10046128:	0018      	movs	r0, r3
1004612a:	f7ff fa91 	bl	10045650 <LL_RADIO_GetUsedChannelFlags_15_0>
1004612e:	0003      	movs	r3, r0
10046130:	b2da      	uxtb	r2, r3
10046132:	683b      	ldr	r3, [r7, #0]
10046134:	701a      	strb	r2, [r3, #0]
    chanMap[1] = (uint8_t)(LL_RADIO_GetUsedChannelFlags_15_0(smNo) >> 8U);
10046136:	1dfb      	adds	r3, r7, #7
10046138:	781b      	ldrb	r3, [r3, #0]
1004613a:	0018      	movs	r0, r3
1004613c:	f7ff fa88 	bl	10045650 <LL_RADIO_GetUsedChannelFlags_15_0>
10046140:	0003      	movs	r3, r0
10046142:	0a1a      	lsrs	r2, r3, #8
10046144:	683b      	ldr	r3, [r7, #0]
10046146:	3301      	adds	r3, #1
10046148:	b2d2      	uxtb	r2, r2
1004614a:	701a      	strb	r2, [r3, #0]
    chanMap[2] = (uint8_t)(LL_RADIO_GetUsedChannelFlags_36_16(smNo));
1004614c:	1dfb      	adds	r3, r7, #7
1004614e:	781b      	ldrb	r3, [r3, #0]
10046150:	0018      	movs	r0, r3
10046152:	f7ff fab9 	bl	100456c8 <LL_RADIO_GetUsedChannelFlags_36_16>
10046156:	0002      	movs	r2, r0
10046158:	683b      	ldr	r3, [r7, #0]
1004615a:	3302      	adds	r3, #2
1004615c:	b2d2      	uxtb	r2, r2
1004615e:	701a      	strb	r2, [r3, #0]
    chanMap[3] = (uint8_t)(LL_RADIO_GetUsedChannelFlags_36_16(smNo) >> 8U);
10046160:	1dfb      	adds	r3, r7, #7
10046162:	781b      	ldrb	r3, [r3, #0]
10046164:	0018      	movs	r0, r3
10046166:	f7ff faaf 	bl	100456c8 <LL_RADIO_GetUsedChannelFlags_36_16>
1004616a:	0003      	movs	r3, r0
1004616c:	0a1a      	lsrs	r2, r3, #8
1004616e:	683b      	ldr	r3, [r7, #0]
10046170:	3303      	adds	r3, #3
10046172:	b2d2      	uxtb	r2, r2
10046174:	701a      	strb	r2, [r3, #0]
    chanMap[4] = (uint8_t)(LL_RADIO_GetUsedChannelFlags_36_16(smNo) >> 16U);
10046176:	1dfb      	adds	r3, r7, #7
10046178:	781b      	ldrb	r3, [r3, #0]
1004617a:	0018      	movs	r0, r3
1004617c:	f7ff faa4 	bl	100456c8 <LL_RADIO_GetUsedChannelFlags_36_16>
10046180:	0003      	movs	r3, r0
10046182:	0c1a      	lsrs	r2, r3, #16
10046184:	683b      	ldr	r3, [r7, #0]
10046186:	3304      	adds	r3, #4
10046188:	b2d2      	uxtb	r2, r2
1004618a:	701a      	strb	r2, [r3, #0]
}
1004618c:	46c0      	nop			@ (mov r8, r8)
1004618e:	46bd      	mov	sp, r7
10046190:	b002      	add	sp, #8
10046192:	bd80      	pop	{r7, pc}

10046194 <BLEPLAT_CNTR_SmGetEncIvPtr>:
  return (uint8_t)0;
#endif
}

uint32_t* BLEPLAT_CNTR_SmGetEncIvPtr(uint8_t smNo)
{
10046194:	b580      	push	{r7, lr}
10046196:	b082      	sub	sp, #8
10046198:	af00      	add	r7, sp, #0
1004619a:	0002      	movs	r2, r0
1004619c:	1dfb      	adds	r3, r7, #7
1004619e:	701a      	strb	r2, [r3, #0]
    return (uint32_t*)&(bluedata + smNo)->ENCRYPTIV[0];
100461a0:	1dfb      	adds	r3, r7, #7
100461a2:	781b      	ldrb	r3, [r3, #0]
100461a4:	225c      	movs	r2, #92	@ 0x5c
100461a6:	4353      	muls	r3, r2
100461a8:	4a03      	ldr	r2, [pc, #12]	@ (100461b8 <BLEPLAT_CNTR_SmGetEncIvPtr+0x24>)
100461aa:	4694      	mov	ip, r2
100461ac:	4463      	add	r3, ip
100461ae:	3338      	adds	r3, #56	@ 0x38
}
100461b0:	0018      	movs	r0, r3
100461b2:	46bd      	mov	sp, r7
100461b4:	b002      	add	sp, #8
100461b6:	bd80      	pop	{r7, pc}
100461b8:	200000dc 	.word	0x200000dc

100461bc <BLEPLAT_CNTR_SmGetEncKeyPtr>:

uint32_t* BLEPLAT_CNTR_SmGetEncKeyPtr(uint8_t smNo)
{
100461bc:	b580      	push	{r7, lr}
100461be:	b082      	sub	sp, #8
100461c0:	af00      	add	r7, sp, #0
100461c2:	0002      	movs	r2, r0
100461c4:	1dfb      	adds	r3, r7, #7
100461c6:	701a      	strb	r2, [r3, #0]
	return (uint32_t*)&(bluedata + smNo)->ENCRYPTK[0];
100461c8:	1dfb      	adds	r3, r7, #7
100461ca:	781b      	ldrb	r3, [r3, #0]
100461cc:	225c      	movs	r2, #92	@ 0x5c
100461ce:	4353      	muls	r3, r2
100461d0:	4a03      	ldr	r2, [pc, #12]	@ (100461e0 <BLEPLAT_CNTR_SmGetEncKeyPtr+0x24>)
100461d2:	4694      	mov	ip, r2
100461d4:	4463      	add	r3, ip
100461d6:	3340      	adds	r3, #64	@ 0x40
}
100461d8:	0018      	movs	r0, r3
100461da:	46bd      	mov	sp, r7
100461dc:	b002      	add	sp, #8
100461de:	bd80      	pop	{r7, pc}
100461e0:	200000dc 	.word	0x200000dc

100461e4 <BLEPLAT_CNTR_SmGetHopIncr>:
{
    return (uint8_t)LL_RADIO_Encryption_IsEnabled(smNo);
}

uint8_t BLEPLAT_CNTR_SmGetHopIncr(uint8_t smNo)
{
100461e4:	b580      	push	{r7, lr}
100461e6:	b082      	sub	sp, #8
100461e8:	af00      	add	r7, sp, #0
100461ea:	0002      	movs	r2, r0
100461ec:	1dfb      	adds	r3, r7, #7
100461ee:	701a      	strb	r2, [r3, #0]
    return (uint8_t)LL_RADIO_GetHopIncrement(smNo);
100461f0:	1dfb      	adds	r3, r7, #7
100461f2:	781b      	ldrb	r3, [r3, #0]
100461f4:	0018      	movs	r0, r3
100461f6:	f7ff f9f1 	bl	100455dc <LL_RADIO_GetHopIncrement>
100461fa:	0003      	movs	r3, r0
100461fc:	b2db      	uxtb	r3, r3
}
100461fe:	0018      	movs	r0, r3
10046200:	46bd      	mov	sp, r7
10046202:	b002      	add	sp, #8
10046204:	bd80      	pop	{r7, pc}

10046206 <BLEPLAT_CNTR_SmGetMode>:

uint8_t BLEPLAT_CNTR_SmGetMode(uint8_t smNo)
{
10046206:	b580      	push	{r7, lr}
10046208:	b082      	sub	sp, #8
1004620a:	af00      	add	r7, sp, #0
1004620c:	0002      	movs	r2, r0
1004620e:	1dfb      	adds	r3, r7, #7
10046210:	701a      	strb	r2, [r3, #0]
    return LL_RADIO_TxMode_IsEnabled(smNo);
10046212:	1dfb      	adds	r3, r7, #7
10046214:	781b      	ldrb	r3, [r3, #0]
10046216:	0018      	movs	r0, r3
10046218:	f7fe fe00 	bl	10044e1c <LL_RADIO_TxMode_IsEnabled>
1004621c:	0003      	movs	r3, r0
1004621e:	b2db      	uxtb	r3, r3
}
10046220:	0018      	movs	r0, r3
10046222:	46bd      	mov	sp, r7
10046224:	b002      	add	sp, #8
10046226:	bd80      	pop	{r7, pc}

10046228 <BLEPLAT_CNTR_SmGetRemapChan>:
{
    return (BLEPLAT_CNTR_TXRXPACK_TypeDef*)BLUE_TRANS_STRUCT_PTR_CAST(CONV_ADR(LL_RADIO_GetTxPointPrevious(smNo)));
}

uint8_t BLEPLAT_CNTR_SmGetRemapChan(uint8_t smNo)
{
10046228:	b580      	push	{r7, lr}
1004622a:	b082      	sub	sp, #8
1004622c:	af00      	add	r7, sp, #0
1004622e:	0002      	movs	r2, r0
10046230:	1dfb      	adds	r3, r7, #7
10046232:	701a      	strb	r2, [r3, #0]
    return (uint8_t)LL_RADIO_GetRemapChannel(smNo);
10046234:	1dfb      	adds	r3, r7, #7
10046236:	781b      	ldrb	r3, [r3, #0]
10046238:	0018      	movs	r0, r3
1004623a:	f7fe fe33 	bl	10044ea4 <LL_RADIO_GetRemapChannel>
1004623e:	0003      	movs	r3, r0
10046240:	b2db      	uxtb	r3, r3
}
10046242:	0018      	movs	r0, r3
10046244:	46bd      	mov	sp, r7
10046246:	b002      	add	sp, #8
10046248:	bd80      	pop	{r7, pc}

1004624a <BLEPLAT_CNTR_SmGetRxCount>:

void BLEPLAT_CNTR_SmGetRxCount(uint8_t smNo, uint32_t* packetCount)
{
1004624a:	b590      	push	{r4, r7, lr}
1004624c:	b083      	sub	sp, #12
1004624e:	af00      	add	r7, sp, #0
10046250:	0002      	movs	r2, r0
10046252:	6039      	str	r1, [r7, #0]
10046254:	1dfb      	adds	r3, r7, #7
10046256:	701a      	strb	r2, [r3, #0]

    packetCount[0] = LL_RADIO_GetPacketCounterRx_23_0(smNo);
10046258:	1dfb      	adds	r3, r7, #7
1004625a:	781b      	ldrb	r3, [r3, #0]
1004625c:	0018      	movs	r0, r3
1004625e:	f7fe fff9 	bl	10045254 <LL_RADIO_GetPacketCounterRx_23_0>
10046262:	0002      	movs	r2, r0
10046264:	683b      	ldr	r3, [r7, #0]
10046266:	601a      	str	r2, [r3, #0]
    packetCount[0] = packetCount[0] | ((uint32_t)LL_RADIO_GetPacketCounterRx_39_24(smNo) << 24U);
10046268:	683b      	ldr	r3, [r7, #0]
1004626a:	681c      	ldr	r4, [r3, #0]
1004626c:	1dfb      	adds	r3, r7, #7
1004626e:	781b      	ldrb	r3, [r3, #0]
10046270:	0018      	movs	r0, r3
10046272:	f7ff f82b 	bl	100452cc <LL_RADIO_GetPacketCounterRx_39_24>
10046276:	0003      	movs	r3, r0
10046278:	061b      	lsls	r3, r3, #24
1004627a:	0022      	movs	r2, r4
1004627c:	431a      	orrs	r2, r3
1004627e:	683b      	ldr	r3, [r7, #0]
10046280:	601a      	str	r2, [r3, #0]
    packetCount[1] = LL_RADIO_GetPacketCounterRx_39_24(smNo) >> 8U;
10046282:	1dfb      	adds	r3, r7, #7
10046284:	781b      	ldrb	r3, [r3, #0]
10046286:	0018      	movs	r0, r3
10046288:	f7ff f820 	bl	100452cc <LL_RADIO_GetPacketCounterRx_39_24>
1004628c:	0002      	movs	r2, r0
1004628e:	683b      	ldr	r3, [r7, #0]
10046290:	3304      	adds	r3, #4
10046292:	0a12      	lsrs	r2, r2, #8
10046294:	601a      	str	r2, [r3, #0]
}
10046296:	46c0      	nop			@ (mov r8, r8)
10046298:	46bd      	mov	sp, r7
1004629a:	b003      	add	sp, #12
1004629c:	bd90      	pop	{r4, r7, pc}

1004629e <BLEPLAT_CNTR_SmGetRxPhy>:

uint8_t BLEPLAT_CNTR_SmGetRxPhy(uint8_t smNo)
{
1004629e:	b580      	push	{r7, lr}
100462a0:	b082      	sub	sp, #8
100462a2:	af00      	add	r7, sp, #0
100462a4:	0002      	movs	r2, r0
100462a6:	1dfb      	adds	r3, r7, #7
100462a8:	701a      	strb	r2, [r3, #0]
    return (uint8_t)LL_RADIO_GetReceptionPhy(smNo);
100462aa:	1dfb      	adds	r3, r7, #7
100462ac:	781b      	ldrb	r3, [r3, #0]
100462ae:	0018      	movs	r0, r3
100462b0:	f7fe ff00 	bl	100450b4 <LL_RADIO_GetReceptionPhy>
100462b4:	0003      	movs	r3, r0
100462b6:	b2db      	uxtb	r3, r3
}
100462b8:	0018      	movs	r0, r3
100462ba:	46bd      	mov	sp, r7
100462bc:	b002      	add	sp, #8
100462be:	bd80      	pop	{r7, pc}

100462c0 <BLEPLAT_CNTR_SmGetTxPhy>:
{
    return (BLEPLAT_CNTR_TXRXPACK_TypeDef*)BLUE_TRANS_STRUCT_PTR_CAST(CONV_ADR(LL_RADIO_GetTxPoint(smNo)));
}

uint8_t BLEPLAT_CNTR_SmGetTxPhy(uint8_t smNo)
{
100462c0:	b580      	push	{r7, lr}
100462c2:	b082      	sub	sp, #8
100462c4:	af00      	add	r7, sp, #0
100462c6:	0002      	movs	r2, r0
100462c8:	1dfb      	adds	r3, r7, #7
100462ca:	701a      	strb	r2, [r3, #0]
    return (uint8_t)LL_RADIO_GetTransmissionPhy(smNo);
100462cc:	1dfb      	adds	r3, r7, #7
100462ce:	781b      	ldrb	r3, [r3, #0]
100462d0:	0018      	movs	r0, r3
100462d2:	f7fe fe87 	bl	10044fe4 <LL_RADIO_GetTransmissionPhy>
100462d6:	0003      	movs	r3, r0
100462d8:	b2db      	uxtb	r3, r3
}
100462da:	0018      	movs	r0, r3
100462dc:	46bd      	mov	sp, r7
100462de:	b002      	add	sp, #8
100462e0:	bd80      	pop	{r7, pc}

100462e2 <BLEPLAT_CNTR_SmGetTxPwr>:

uint8_t BLEPLAT_CNTR_SmGetTxPwr(uint8_t smNo)
{
100462e2:	b590      	push	{r4, r7, lr}
100462e4:	b085      	sub	sp, #20
100462e6:	af00      	add	r7, sp, #0
100462e8:	0002      	movs	r2, r0
100462ea:	1dfb      	adds	r3, r7, #7
100462ec:	701a      	strb	r2, [r3, #0]
    uint8_t pa_level = LL_RADIO_GetPAPower(smNo);
100462ee:	1dfb      	adds	r3, r7, #7
100462f0:	781b      	ldrb	r3, [r3, #0]
100462f2:	0018      	movs	r0, r3
100462f4:	f7ff f934 	bl	10045560 <LL_RADIO_GetPAPower>
100462f8:	0002      	movs	r2, r0
100462fa:	240f      	movs	r4, #15
100462fc:	193b      	adds	r3, r7, r4
100462fe:	701a      	strb	r2, [r3, #0]

#if defined(STM32WB09)
    if (LL_RADIO_TxHp_IsEnabled(smNo) && (pa_level == MAX_PA_LEVEL))
10046300:	1dfb      	adds	r3, r7, #7
10046302:	781b      	ldrb	r3, [r3, #0]
10046304:	0018      	movs	r0, r3
10046306:	f7ff f8eb 	bl	100454e0 <LL_RADIO_TxHp_IsEnabled>
1004630a:	1e03      	subs	r3, r0, #0
1004630c:	d006      	beq.n	1004631c <BLEPLAT_CNTR_SmGetTxPwr+0x3a>
1004630e:	193b      	adds	r3, r7, r4
10046310:	781b      	ldrb	r3, [r3, #0]
10046312:	2b1f      	cmp	r3, #31
10046314:	d102      	bne.n	1004631c <BLEPLAT_CNTR_SmGetTxPwr+0x3a>
    {
        pa_level = HP_PA_LEVEL;
10046316:	193b      	adds	r3, r7, r4
10046318:	2220      	movs	r2, #32
1004631a:	701a      	strb	r2, [r3, #0]
    }
#endif
    return pa_level;
1004631c:	230f      	movs	r3, #15
1004631e:	18fb      	adds	r3, r7, r3
10046320:	781b      	ldrb	r3, [r3, #0]
}
10046322:	0018      	movs	r0, r3
10046324:	46bd      	mov	sp, r7
10046326:	b005      	add	sp, #20
10046328:	bd90      	pop	{r4, r7, pc}
	...

1004632c <BLEPLAT_CNTR_SmInitTo0>:
{
    return (uint8_t)LL_RADIO_GetUnmappedChannel(smNo);
}

void BLEPLAT_CNTR_SmInitTo0(uint8_t smNo)
{
1004632c:	b580      	push	{r7, lr}
1004632e:	b082      	sub	sp, #8
10046330:	af00      	add	r7, sp, #0
10046332:	0002      	movs	r2, r0
10046334:	1dfb      	adds	r3, r7, #7
10046336:	701a      	strb	r2, [r3, #0]
  memset((void*)&bluedata[smNo], 0, sizeof(STATMACH_TypeDef));
10046338:	1dfb      	adds	r3, r7, #7
1004633a:	781b      	ldrb	r3, [r3, #0]
1004633c:	225c      	movs	r2, #92	@ 0x5c
1004633e:	4353      	muls	r3, r2
10046340:	4a08      	ldr	r2, [pc, #32]	@ (10046364 <BLEPLAT_CNTR_SmInitTo0+0x38>)
10046342:	4694      	mov	ip, r2
10046344:	4463      	add	r3, ip
10046346:	225c      	movs	r2, #92	@ 0x5c
10046348:	2100      	movs	r1, #0
1004634a:	0018      	movs	r0, r3
1004634c:	f025 fc20 	bl	1006bb90 <memset>
  BLEPLAT_CNTR_SmEnRadioConfig(smNo, 0x01);
10046350:	1dfb      	adds	r3, r7, #7
10046352:	781b      	ldrb	r3, [r3, #0]
10046354:	2101      	movs	r1, #1
10046356:	0018      	movs	r0, r3
10046358:	f7ff fe8c 	bl	10046074 <BLEPLAT_CNTR_SmEnRadioConfig>
}
1004635c:	46c0      	nop			@ (mov r8, r8)
1004635e:	46bd      	mov	sp, r7
10046360:	b002      	add	sp, #8
10046362:	bd80      	pop	{r7, pc}
10046364:	200000dc 	.word	0x200000dc

10046368 <BLEPLAT_CNTR_SmSetAccessAddr>:

void BLEPLAT_CNTR_SmSetAccessAddr(uint8_t smNo, uint32_t x)
{
10046368:	b580      	push	{r7, lr}
1004636a:	b082      	sub	sp, #8
1004636c:	af00      	add	r7, sp, #0
1004636e:	0002      	movs	r2, r0
10046370:	6039      	str	r1, [r7, #0]
10046372:	1dfb      	adds	r3, r7, #7
10046374:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetAccessAddress(smNo, x);
10046376:	683a      	ldr	r2, [r7, #0]
10046378:	1dfb      	adds	r3, r7, #7
1004637a:	781b      	ldrb	r3, [r3, #0]
1004637c:	0011      	movs	r1, r2
1004637e:	0018      	movs	r0, r3
10046380:	f7fe fffa 	bl	10045378 <LL_RADIO_SetAccessAddress>
}
10046384:	46c0      	nop			@ (mov r8, r8)
10046386:	46bd      	mov	sp, r7
10046388:	b002      	add	sp, #8
1004638a:	bd80      	pop	{r7, pc}

1004638c <BLEPLAT_CNTR_SmSetChannelMap>:

void BLEPLAT_CNTR_SmSetChannelMap(uint8_t smNo, uint8_t* chanMap)
{
1004638c:	b580      	push	{r7, lr}
1004638e:	b084      	sub	sp, #16
10046390:	af00      	add	r7, sp, #0
10046392:	0002      	movs	r2, r0
10046394:	6039      	str	r1, [r7, #0]
10046396:	1dfb      	adds	r3, r7, #7
10046398:	701a      	strb	r2, [r3, #0]
    uint32_t value = (uint32_t)chanMap[0] | ((uint32_t)chanMap[1] << 8U);
1004639a:	683b      	ldr	r3, [r7, #0]
1004639c:	781b      	ldrb	r3, [r3, #0]
1004639e:	001a      	movs	r2, r3
100463a0:	683b      	ldr	r3, [r7, #0]
100463a2:	3301      	adds	r3, #1
100463a4:	781b      	ldrb	r3, [r3, #0]
100463a6:	021b      	lsls	r3, r3, #8
100463a8:	4313      	orrs	r3, r2
100463aa:	60fb      	str	r3, [r7, #12]
    LL_RADIO_SetUsedChannelFlags_15_0(smNo, value);
100463ac:	68fa      	ldr	r2, [r7, #12]
100463ae:	1dfb      	adds	r3, r7, #7
100463b0:	781b      	ldrb	r3, [r3, #0]
100463b2:	0011      	movs	r1, r2
100463b4:	0018      	movs	r0, r3
100463b6:	f7ff f929 	bl	1004560c <LL_RADIO_SetUsedChannelFlags_15_0>
    value = (uint32_t)chanMap[2] | ((uint32_t)chanMap[3] << 8U) | ((uint32_t)chanMap[4] << 16U);
100463ba:	683b      	ldr	r3, [r7, #0]
100463bc:	3302      	adds	r3, #2
100463be:	781b      	ldrb	r3, [r3, #0]
100463c0:	001a      	movs	r2, r3
100463c2:	683b      	ldr	r3, [r7, #0]
100463c4:	3303      	adds	r3, #3
100463c6:	781b      	ldrb	r3, [r3, #0]
100463c8:	021b      	lsls	r3, r3, #8
100463ca:	431a      	orrs	r2, r3
100463cc:	683b      	ldr	r3, [r7, #0]
100463ce:	3304      	adds	r3, #4
100463d0:	781b      	ldrb	r3, [r3, #0]
100463d2:	041b      	lsls	r3, r3, #16
100463d4:	4313      	orrs	r3, r2
100463d6:	60fb      	str	r3, [r7, #12]
    LL_RADIO_SetUsedChannelFlags_36_16(smNo, value);
100463d8:	68fa      	ldr	r2, [r7, #12]
100463da:	1dfb      	adds	r3, r7, #7
100463dc:	781b      	ldrb	r3, [r3, #0]
100463de:	0011      	movs	r1, r2
100463e0:	0018      	movs	r0, r3
100463e2:	f7ff f94d 	bl	10045680 <LL_RADIO_SetUsedChannelFlags_36_16>
}
100463e6:	46c0      	nop			@ (mov r8, r8)
100463e8:	46bd      	mov	sp, r7
100463ea:	b004      	add	sp, #16
100463ec:	bd80      	pop	{r7, pc}

100463ee <BLEPLAT_CNTR_SmSetCrcInit>:

void BLEPLAT_CNTR_SmSetCrcInit(uint8_t smNo, uint32_t x)
{
100463ee:	b580      	push	{r7, lr}
100463f0:	b082      	sub	sp, #8
100463f2:	af00      	add	r7, sp, #0
100463f4:	0002      	movs	r2, r0
100463f6:	6039      	str	r1, [r7, #0]
100463f8:	1dfb      	adds	r3, r7, #7
100463fa:	701a      	strb	r2, [r3, #0]
  LL_RADIO_SetCRCInitializationValue(smNo, x);
100463fc:	683a      	ldr	r2, [r7, #0]
100463fe:	1dfb      	adds	r3, r7, #7
10046400:	781b      	ldrb	r3, [r3, #0]
10046402:	0011      	movs	r1, r2
10046404:	0018      	movs	r0, r3
10046406:	f7fe ffe9 	bl	100453dc <LL_RADIO_SetCRCInitializationValue>
}
1004640a:	46c0      	nop			@ (mov r8, r8)
1004640c:	46bd      	mov	sp, r7
1004640e:	b002      	add	sp, #8
10046410:	bd80      	pop	{r7, pc}

10046412 <BLEPLAT_CNTR_SmSetDataLength>:
  /* nothing to do */
#endif
}

void BLEPLAT_CNTR_SmSetDataLength(uint8_t smNo, uint8_t length)
{
10046412:	b580      	push	{r7, lr}
10046414:	b082      	sub	sp, #8
10046416:	af00      	add	r7, sp, #0
10046418:	0002      	movs	r2, r0
1004641a:	1dfb      	adds	r3, r7, #7
1004641c:	701a      	strb	r2, [r3, #0]
1004641e:	1dbb      	adds	r3, r7, #6
10046420:	1c0a      	adds	r2, r1, #0
10046422:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetMaximumReceiveLength(smNo, (uint32_t) length);
10046424:	1dbb      	adds	r3, r7, #6
10046426:	781a      	ldrb	r2, [r3, #0]
10046428:	1dfb      	adds	r3, r7, #7
1004642a:	781b      	ldrb	r3, [r3, #0]
1004642c:	0011      	movs	r1, r2
1004642e:	0018      	movs	r0, r3
10046430:	f7fe fff8 	bl	10045424 <LL_RADIO_SetMaximumReceiveLength>
}
10046434:	46c0      	nop			@ (mov r8, r8)
10046436:	46bd      	mov	sp, r7
10046438:	b002      	add	sp, #8
1004643a:	bd80      	pop	{r7, pc}

1004643c <BLEPLAT_CNTR_SmSetHopIncr>:
{
    /* nothing to do */
}

void BLEPLAT_CNTR_SmSetHopIncr(uint8_t smNo, uint8_t x)
{
1004643c:	b580      	push	{r7, lr}
1004643e:	b082      	sub	sp, #8
10046440:	af00      	add	r7, sp, #0
10046442:	0002      	movs	r2, r0
10046444:	1dfb      	adds	r3, r7, #7
10046446:	701a      	strb	r2, [r3, #0]
10046448:	1dbb      	adds	r3, r7, #6
1004644a:	1c0a      	adds	r2, r1, #0
1004644c:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetHopIncrement(smNo, (uint32_t) x);
1004644e:	1dbb      	adds	r3, r7, #6
10046450:	781a      	ldrb	r2, [r3, #0]
10046452:	1dfb      	adds	r3, r7, #7
10046454:	781b      	ldrb	r3, [r3, #0]
10046456:	0011      	movs	r1, r2
10046458:	0018      	movs	r0, r3
1004645a:	f7ff f897 	bl	1004558c <LL_RADIO_SetHopIncrement>
}
1004645e:	46c0      	nop			@ (mov r8, r8)
10046460:	46bd      	mov	sp, r7
10046462:	b002      	add	sp, #8
10046464:	bd80      	pop	{r7, pc}

10046466 <BLEPLAT_CNTR_SmSetRemapChan>:

void BLEPLAT_CNTR_SmSetRemapChan(uint8_t smNo, uint8_t chan)
{
10046466:	b580      	push	{r7, lr}
10046468:	b082      	sub	sp, #8
1004646a:	af00      	add	r7, sp, #0
1004646c:	0002      	movs	r2, r0
1004646e:	1dfb      	adds	r3, r7, #7
10046470:	701a      	strb	r2, [r3, #0]
10046472:	1dbb      	adds	r3, r7, #6
10046474:	1c0a      	adds	r2, r1, #0
10046476:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetRemapChannel(smNo, chan);
10046478:	1dbb      	adds	r3, r7, #6
1004647a:	781a      	ldrb	r2, [r3, #0]
1004647c:	1dfb      	adds	r3, r7, #7
1004647e:	781b      	ldrb	r3, [r3, #0]
10046480:	0011      	movs	r1, r2
10046482:	0018      	movs	r0, r3
10046484:	f7fe fce6 	bl	10044e54 <LL_RADIO_SetRemapChannel>
}
10046488:	46c0      	nop			@ (mov r8, r8)
1004648a:	46bd      	mov	sp, r7
1004648c:	b002      	add	sp, #8
1004648e:	bd80      	pop	{r7, pc}

10046490 <BLEPLAT_CNTR_SmSetRxCount>:

void BLEPLAT_CNTR_SmSetRxCount(uint8_t smNo, uint32_t* packetCount)
{
10046490:	b580      	push	{r7, lr}
10046492:	b084      	sub	sp, #16
10046494:	af00      	add	r7, sp, #0
10046496:	0002      	movs	r2, r0
10046498:	6039      	str	r1, [r7, #0]
1004649a:	1dfb      	adds	r3, r7, #7
1004649c:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetPacketCounterRx_23_0(smNo, (uint32_t) packetCount[0]);
1004649e:	683b      	ldr	r3, [r7, #0]
100464a0:	681a      	ldr	r2, [r3, #0]
100464a2:	1dfb      	adds	r3, r7, #7
100464a4:	781b      	ldrb	r3, [r3, #0]
100464a6:	0011      	movs	r1, r2
100464a8:	0018      	movs	r0, r3
100464aa:	f7fe feaf 	bl	1004520c <LL_RADIO_SetPacketCounterRx_23_0>
    uint32_t value = (uint32_t)(packetCount[1] << 8U) | (uint32_t)(packetCount[0] >> 24U);
100464ae:	683b      	ldr	r3, [r7, #0]
100464b0:	3304      	adds	r3, #4
100464b2:	681b      	ldr	r3, [r3, #0]
100464b4:	021a      	lsls	r2, r3, #8
100464b6:	683b      	ldr	r3, [r7, #0]
100464b8:	681b      	ldr	r3, [r3, #0]
100464ba:	0e1b      	lsrs	r3, r3, #24
100464bc:	4313      	orrs	r3, r2
100464be:	60fb      	str	r3, [r7, #12]
    LL_RADIO_SetPacketCounterRx_39_24(smNo, value);
100464c0:	68fa      	ldr	r2, [r7, #12]
100464c2:	1dfb      	adds	r3, r7, #7
100464c4:	781b      	ldrb	r3, [r3, #0]
100464c6:	0011      	movs	r1, r2
100464c8:	0018      	movs	r0, r3
100464ca:	f7fe fedb 	bl	10045284 <LL_RADIO_SetPacketCounterRx_39_24>
}
100464ce:	46c0      	nop			@ (mov r8, r8)
100464d0:	46bd      	mov	sp, r7
100464d2:	b004      	add	sp, #16
100464d4:	bd80      	pop	{r7, pc}

100464d6 <BLEPLAT_CNTR_SmSetRxCountDirectionBit>:

void BLEPLAT_CNTR_SmSetRxCountDirectionBit(uint8_t smNo)
{
100464d6:	b580      	push	{r7, lr}
100464d8:	b084      	sub	sp, #16
100464da:	af00      	add	r7, sp, #0
100464dc:	0002      	movs	r2, r0
100464de:	1dfb      	adds	r3, r7, #7
100464e0:	701a      	strb	r2, [r3, #0]
    uint32_t value = LL_RADIO_GetPacketCounterRx_39_24(smNo) | 0x8000U;
100464e2:	1dfb      	adds	r3, r7, #7
100464e4:	781b      	ldrb	r3, [r3, #0]
100464e6:	0018      	movs	r0, r3
100464e8:	f7fe fef0 	bl	100452cc <LL_RADIO_GetPacketCounterRx_39_24>
100464ec:	0002      	movs	r2, r0
100464ee:	2380      	movs	r3, #128	@ 0x80
100464f0:	021b      	lsls	r3, r3, #8
100464f2:	4313      	orrs	r3, r2
100464f4:	60fb      	str	r3, [r7, #12]
    LL_RADIO_SetPacketCounterRx_39_24(smNo, value);
100464f6:	68fa      	ldr	r2, [r7, #12]
100464f8:	1dfb      	adds	r3, r7, #7
100464fa:	781b      	ldrb	r3, [r3, #0]
100464fc:	0011      	movs	r1, r2
100464fe:	0018      	movs	r0, r3
10046500:	f7fe fec0 	bl	10045284 <LL_RADIO_SetPacketCounterRx_39_24>
}
10046504:	46c0      	nop			@ (mov r8, r8)
10046506:	46bd      	mov	sp, r7
10046508:	b004      	add	sp, #16
1004650a:	bd80      	pop	{r7, pc}

1004650c <BLEPLAT_CNTR_SmSetRxMode>:

void BLEPLAT_CNTR_SmSetRxMode(uint8_t smNo)
{
1004650c:	b580      	push	{r7, lr}
1004650e:	b082      	sub	sp, #8
10046510:	af00      	add	r7, sp, #0
10046512:	0002      	movs	r2, r0
10046514:	1dfb      	adds	r3, r7, #7
10046516:	701a      	strb	r2, [r3, #0]
    LL_RADIO_TxMode_Disable(smNo);
10046518:	1dfb      	adds	r3, r7, #7
1004651a:	781b      	ldrb	r3, [r3, #0]
1004651c:	0018      	movs	r0, r3
1004651e:	f7fe fc5f 	bl	10044de0 <LL_RADIO_TxMode_Disable>
}
10046522:	46c0      	nop			@ (mov r8, r8)
10046524:	46bd      	mov	sp, r7
10046526:	b002      	add	sp, #8
10046528:	bd80      	pop	{r7, pc}

1004652a <BLEPLAT_CNTR_SmSetRxPacketPtr>:

void BLEPLAT_CNTR_SmSetRxPacketPtr(uint8_t smNo, BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
1004652a:	b580      	push	{r7, lr}
1004652c:	b082      	sub	sp, #8
1004652e:	af00      	add	r7, sp, #0
10046530:	0002      	movs	r2, r0
10046532:	6039      	str	r1, [r7, #0]
10046534:	1dfb      	adds	r3, r7, #7
10046536:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetRcvPoint(smNo, (uint32_t) BLUE_STRUCT_PTR_CAST((TXRXPACK_TypeDef*)packetP));
10046538:	683a      	ldr	r2, [r7, #0]
1004653a:	1dfb      	adds	r3, r7, #7
1004653c:	781b      	ldrb	r3, [r3, #0]
1004653e:	0011      	movs	r1, r2
10046540:	0018      	movs	r0, r3
10046542:	f7fe fded 	bl	10045120 <LL_RADIO_SetRcvPoint>
}
10046546:	46c0      	nop			@ (mov r8, r8)
10046548:	46bd      	mov	sp, r7
1004654a:	b002      	add	sp, #8
1004654c:	bd80      	pop	{r7, pc}

1004654e <BLEPLAT_CNTR_SmSetRxPhy>:

void BLEPLAT_CNTR_SmSetRxPhy(uint8_t smNo, uint8_t rxPhy)
{
1004654e:	b580      	push	{r7, lr}
10046550:	b082      	sub	sp, #8
10046552:	af00      	add	r7, sp, #0
10046554:	0002      	movs	r2, r0
10046556:	1dfb      	adds	r3, r7, #7
10046558:	701a      	strb	r2, [r3, #0]
1004655a:	1dbb      	adds	r3, r7, #6
1004655c:	1c0a      	adds	r2, r1, #0
1004655e:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetReceptionPhy(smNo, (uint32_t) rxPhy);
10046560:	1dbb      	adds	r3, r7, #6
10046562:	781a      	ldrb	r2, [r3, #0]
10046564:	1dfb      	adds	r3, r7, #7
10046566:	781b      	ldrb	r3, [r3, #0]
10046568:	0011      	movs	r1, r2
1004656a:	0018      	movs	r0, r3
1004656c:	f7fe fd7a 	bl	10045064 <LL_RADIO_SetReceptionPhy>
}
10046570:	46c0      	nop			@ (mov r8, r8)
10046572:	46bd      	mov	sp, r7
10046574:	b002      	add	sp, #8
10046576:	bd80      	pop	{r7, pc}

10046578 <BLEPLAT_CNTR_SmSetTxCount>:

void BLEPLAT_CNTR_SmSetTxCount(uint8_t smNo, uint32_t* packetCount)
{
10046578:	b580      	push	{r7, lr}
1004657a:	b082      	sub	sp, #8
1004657c:	af00      	add	r7, sp, #0
1004657e:	0002      	movs	r2, r0
10046580:	6039      	str	r1, [r7, #0]
10046582:	1dfb      	adds	r3, r7, #7
10046584:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetPacketCounterTx_31_0(smNo, (uint32_t) packetCount[0]);
10046586:	683b      	ldr	r3, [r7, #0]
10046588:	681a      	ldr	r2, [r3, #0]
1004658a:	1dfb      	adds	r3, r7, #7
1004658c:	781b      	ldrb	r3, [r3, #0]
1004658e:	0011      	movs	r1, r2
10046590:	0018      	movs	r0, r3
10046592:	f7fe fde3 	bl	1004515c <LL_RADIO_SetPacketCounterTx_31_0>
    LL_RADIO_SetPacketCounterTx_39_32(smNo, (uint32_t) packetCount[1]);
10046596:	683b      	ldr	r3, [r7, #0]
10046598:	3304      	adds	r3, #4
1004659a:	681a      	ldr	r2, [r3, #0]
1004659c:	1dfb      	adds	r3, r7, #7
1004659e:	781b      	ldrb	r3, [r3, #0]
100465a0:	0011      	movs	r1, r2
100465a2:	0018      	movs	r0, r3
100465a4:	f7fe fdf8 	bl	10045198 <LL_RADIO_SetPacketCounterTx_39_32>
}
100465a8:	46c0      	nop			@ (mov r8, r8)
100465aa:	46bd      	mov	sp, r7
100465ac:	b002      	add	sp, #8
100465ae:	bd80      	pop	{r7, pc}

100465b0 <BLEPLAT_CNTR_SmSetTxCountDirectionBit>:

void BLEPLAT_CNTR_SmSetTxCountDirectionBit(uint8_t smNo)
{
100465b0:	b580      	push	{r7, lr}
100465b2:	b084      	sub	sp, #16
100465b4:	af00      	add	r7, sp, #0
100465b6:	0002      	movs	r2, r0
100465b8:	1dfb      	adds	r3, r7, #7
100465ba:	701a      	strb	r2, [r3, #0]
    uint32_t value =  (LL_RADIO_GetPacketCounterTx_39_32(smNo) | 0x00000080U);
100465bc:	1dfb      	adds	r3, r7, #7
100465be:	781b      	ldrb	r3, [r3, #0]
100465c0:	0018      	movs	r0, r3
100465c2:	f7fe fe0d 	bl	100451e0 <LL_RADIO_GetPacketCounterTx_39_32>
100465c6:	0003      	movs	r3, r0
100465c8:	2280      	movs	r2, #128	@ 0x80
100465ca:	4313      	orrs	r3, r2
100465cc:	60fb      	str	r3, [r7, #12]
    LL_RADIO_SetPacketCounterTx_39_32(smNo,  value);
100465ce:	68fa      	ldr	r2, [r7, #12]
100465d0:	1dfb      	adds	r3, r7, #7
100465d2:	781b      	ldrb	r3, [r3, #0]
100465d4:	0011      	movs	r1, r2
100465d6:	0018      	movs	r0, r3
100465d8:	f7fe fdde 	bl	10045198 <LL_RADIO_SetPacketCounterTx_39_32>
}
100465dc:	46c0      	nop			@ (mov r8, r8)
100465de:	46bd      	mov	sp, r7
100465e0:	b004      	add	sp, #16
100465e2:	bd80      	pop	{r7, pc}

100465e4 <BLEPLAT_CNTR_SmSetTxMode>:

void BLEPLAT_CNTR_SmSetTxMode(uint8_t smNo)
{
100465e4:	b580      	push	{r7, lr}
100465e6:	b082      	sub	sp, #8
100465e8:	af00      	add	r7, sp, #0
100465ea:	0002      	movs	r2, r0
100465ec:	1dfb      	adds	r3, r7, #7
100465ee:	701a      	strb	r2, [r3, #0]
    LL_RADIO_TxMode_Enable(smNo);
100465f0:	1dfb      	adds	r3, r7, #7
100465f2:	781b      	ldrb	r3, [r3, #0]
100465f4:	0018      	movs	r0, r3
100465f6:	f7fe fbd5 	bl	10044da4 <LL_RADIO_TxMode_Enable>
}
100465fa:	46c0      	nop			@ (mov r8, r8)
100465fc:	46bd      	mov	sp, r7
100465fe:	b002      	add	sp, #8
10046600:	bd80      	pop	{r7, pc}

10046602 <BLEPLAT_CNTR_SmSetTxPacketPtr>:

void BLEPLAT_CNTR_SmSetTxPacketPtr(uint8_t smNo, BLEPLAT_CNTR_TXRXPACK_TypeDef* packetP)
{
10046602:	b580      	push	{r7, lr}
10046604:	b082      	sub	sp, #8
10046606:	af00      	add	r7, sp, #0
10046608:	0002      	movs	r2, r0
1004660a:	6039      	str	r1, [r7, #0]
1004660c:	1dfb      	adds	r3, r7, #7
1004660e:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetTxPoint(smNo, (uint32_t) BLUE_STRUCT_PTR_CAST((TXRXPACK_TypeDef*)packetP));
10046610:	683a      	ldr	r2, [r7, #0]
10046612:	1dfb      	adds	r3, r7, #7
10046614:	781b      	ldrb	r3, [r3, #0]
10046616:	0011      	movs	r1, r2
10046618:	0018      	movs	r0, r3
1004661a:	f7fe fd63 	bl	100450e4 <LL_RADIO_SetTxPoint>
}
1004661e:	46c0      	nop			@ (mov r8, r8)
10046620:	46bd      	mov	sp, r7
10046622:	b002      	add	sp, #8
10046624:	bd80      	pop	{r7, pc}

10046626 <BLEPLAT_CNTR_SmSetTxPhy>:

void BLEPLAT_CNTR_SmSetTxPhy(uint8_t smNo, uint8_t txPhy)
{
10046626:	b580      	push	{r7, lr}
10046628:	b082      	sub	sp, #8
1004662a:	af00      	add	r7, sp, #0
1004662c:	0002      	movs	r2, r0
1004662e:	1dfb      	adds	r3, r7, #7
10046630:	701a      	strb	r2, [r3, #0]
10046632:	1dbb      	adds	r3, r7, #6
10046634:	1c0a      	adds	r2, r1, #0
10046636:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetTransmissionPhy(smNo, (uint32_t) txPhy);
10046638:	1dbb      	adds	r3, r7, #6
1004663a:	781a      	ldrb	r2, [r3, #0]
1004663c:	1dfb      	adds	r3, r7, #7
1004663e:	781b      	ldrb	r3, [r3, #0]
10046640:	0011      	movs	r1, r2
10046642:	0018      	movs	r0, r3
10046644:	f7fe fca6 	bl	10044f94 <LL_RADIO_SetTransmissionPhy>
}
10046648:	46c0      	nop			@ (mov r8, r8)
1004664a:	46bd      	mov	sp, r7
1004664c:	b002      	add	sp, #8
1004664e:	bd80      	pop	{r7, pc}

10046650 <BLEPLAT_CNTR_SmSetTxPwr>:
#endif
}

/* Consider PA Level 32 the one used to enable high power. */
void BLEPLAT_CNTR_SmSetTxPwr(uint8_t smNo, uint8_t paLevel)
{
10046650:	b580      	push	{r7, lr}
10046652:	b082      	sub	sp, #8
10046654:	af00      	add	r7, sp, #0
10046656:	0002      	movs	r2, r0
10046658:	1dfb      	adds	r3, r7, #7
1004665a:	701a      	strb	r2, [r3, #0]
1004665c:	1dbb      	adds	r3, r7, #6
1004665e:	1c0a      	adds	r2, r1, #0
10046660:	701a      	strb	r2, [r3, #0]
#if defined(STM32WB09)
  if(paLevel == HP_PA_LEVEL)
10046662:	1dbb      	adds	r3, r7, #6
10046664:	781b      	ldrb	r3, [r3, #0]
10046666:	2b20      	cmp	r3, #32
10046668:	d108      	bne.n	1004667c <BLEPLAT_CNTR_SmSetTxPwr+0x2c>
  {
    LL_RADIO_TxHp_Enable(smNo);
1004666a:	1dfb      	adds	r3, r7, #7
1004666c:	781b      	ldrb	r3, [r3, #0]
1004666e:	0018      	movs	r0, r3
10046670:	f7fe fefa 	bl	10045468 <LL_RADIO_TxHp_Enable>
    paLevel = MAX_PA_LEVEL;
10046674:	1dbb      	adds	r3, r7, #6
10046676:	221f      	movs	r2, #31
10046678:	701a      	strb	r2, [r3, #0]
1004667a:	e004      	b.n	10046686 <BLEPLAT_CNTR_SmSetTxPwr+0x36>
  }
  else
  {
    LL_RADIO_TxHp_Disable(smNo);
1004667c:	1dfb      	adds	r3, r7, #7
1004667e:	781b      	ldrb	r3, [r3, #0]
10046680:	0018      	movs	r0, r3
10046682:	f7fe ff0f 	bl	100454a4 <LL_RADIO_TxHp_Disable>
  }
#endif

  LL_RADIO_SetPAPower(smNo, (uint32_t) paLevel);
10046686:	1dbb      	adds	r3, r7, #6
10046688:	781a      	ldrb	r2, [r3, #0]
1004668a:	1dfb      	adds	r3, r7, #7
1004668c:	781b      	ldrb	r3, [r3, #0]
1004668e:	0011      	movs	r1, r2
10046690:	0018      	movs	r0, r3
10046692:	f7fe ff41 	bl	10045518 <LL_RADIO_SetPAPower>
}
10046696:	46c0      	nop			@ (mov r8, r8)
10046698:	46bd      	mov	sp, r7
1004669a:	b002      	add	sp, #8
1004669c:	bd80      	pop	{r7, pc}

1004669e <BLEPLAT_CNTR_SmSetUnmappedChan>:

void BLEPLAT_CNTR_SmSetUnmappedChan(uint8_t smNo, uint8_t chan)
{
1004669e:	b580      	push	{r7, lr}
100466a0:	b082      	sub	sp, #8
100466a2:	af00      	add	r7, sp, #0
100466a4:	0002      	movs	r2, r0
100466a6:	1dfb      	adds	r3, r7, #7
100466a8:	701a      	strb	r2, [r3, #0]
100466aa:	1dbb      	adds	r3, r7, #6
100466ac:	1c0a      	adds	r2, r1, #0
100466ae:	701a      	strb	r2, [r3, #0]
    LL_RADIO_SetUnmappedChannel(smNo, (uint32_t) chan);
100466b0:	1dbb      	adds	r3, r7, #6
100466b2:	781a      	ldrb	r2, [r3, #0]
100466b4:	1dfb      	adds	r3, r7, #7
100466b6:	781b      	ldrb	r3, [r3, #0]
100466b8:	0011      	movs	r1, r2
100466ba:	0018      	movs	r0, r3
100466bc:	f7fe fb12 	bl	10044ce4 <LL_RADIO_SetUnmappedChannel>
}
100466c0:	46c0      	nop			@ (mov r8, r8)
100466c2:	46bd      	mov	sp, r7
100466c4:	b002      	add	sp, #8
100466c6:	bd80      	pop	{r7, pc}

100466c8 <BLEPLAT_CNTR_SmToggleNesn>:

void BLEPLAT_CNTR_SmToggleNesn(uint8_t smNo)
{
100466c8:	b580      	push	{r7, lr}
100466ca:	b082      	sub	sp, #8
100466cc:	af00      	add	r7, sp, #0
100466ce:	0002      	movs	r2, r0
100466d0:	1dfb      	adds	r3, r7, #7
100466d2:	701a      	strb	r2, [r3, #0]
  LL_RADIO_ToggleNextExpectedSequenceNumber(smNo);
100466d4:	1dfb      	adds	r3, r7, #7
100466d6:	781b      	ldrb	r3, [r3, #0]
100466d8:	0018      	movs	r0, r3
100466da:	f7fe fbfb 	bl	10044ed4 <LL_RADIO_ToggleNextExpectedSequenceNumber>
}
100466de:	46c0      	nop			@ (mov r8, r8)
100466e0:	46bd      	mov	sp, r7
100466e2:	b002      	add	sp, #8
100466e4:	bd80      	pop	{r7, pc}

100466e6 <BLEPLAT_CNTR_DemodDelaySt>:
{
    return (uint32_t)(x - y);
}

uint8_t BLEPLAT_CNTR_DemodDelaySt(uint8_t RxPHY)
{
100466e6:	b580      	push	{r7, lr}
100466e8:	b082      	sub	sp, #8
100466ea:	af00      	add	r7, sp, #0
100466ec:	0002      	movs	r2, r0
100466ee:	1dfb      	adds	r3, r7, #7
100466f0:	701a      	strb	r2, [r3, #0]
    return (uint8_t)((LL_PHY_CODED == RxPHY) ? 0x9DU : 0x12U);
100466f2:	1dfb      	adds	r3, r7, #7
100466f4:	781b      	ldrb	r3, [r3, #0]
100466f6:	2b04      	cmp	r3, #4
100466f8:	d101      	bne.n	100466fe <BLEPLAT_CNTR_DemodDelaySt+0x18>
100466fa:	239d      	movs	r3, #157	@ 0x9d
100466fc:	e000      	b.n	10046700 <BLEPLAT_CNTR_DemodDelaySt+0x1a>
100466fe:	2312      	movs	r3, #18
}
10046700:	0018      	movs	r0, r3
10046702:	46bd      	mov	sp, r7
10046704:	b002      	add	sp, #8
10046706:	bd80      	pop	{r7, pc}

10046708 <Reset_Handler>:

	.section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
10046708:	4810      	ldr	r0, [pc, #64]	@ (1004674c <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
1004670a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
1004670c:	f003 f8ca 	bl	100498a4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
10046710:	2100      	movs	r1, #0
  b  LoopCopyDataInit
10046712:	e003      	b.n	1004671c <LoopCopyDataInit>

10046714 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
10046714:	4b0e      	ldr	r3, [pc, #56]	@ (10046750 <LoopForever+0x6>)
  ldr  r3, [r3, r1]
10046716:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
10046718:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
1004671a:	3104      	adds	r1, #4

1004671c <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
1004671c:	480d      	ldr	r0, [pc, #52]	@ (10046754 <LoopForever+0xa>)
  ldr  r3, =_edata
1004671e:	4b0e      	ldr	r3, [pc, #56]	@ (10046758 <LoopForever+0xe>)
  adds  r2, r0, r1
10046720:	1842      	adds	r2, r0, r1
  cmp  r2, r3
10046722:	429a      	cmp	r2, r3
  bcc  CopyDataInit
10046724:	d3f6      	bcc.n	10046714 <CopyDataInit>
  ldr  r2, =_sbss
10046726:	4a0d      	ldr	r2, [pc, #52]	@ (1004675c <LoopForever+0x12>)
  b  LoopFillZerobss
10046728:	e002      	b.n	10046730 <LoopFillZerobss>

1004672a <FillZerobss>:

/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
1004672a:	2300      	movs	r3, #0
  str  r3, [r2]
1004672c:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
1004672e:	3204      	adds	r2, #4

10046730 <LoopFillZerobss>:

LoopFillZerobss:
  ldr  r3, = _ebss
10046730:	4b0b      	ldr	r3, [pc, #44]	@ (10046760 <LoopForever+0x16>)
  cmp  r2, r3
10046732:	429a      	cmp	r2, r3
  bcc  FillZerobss
10046734:	d3f9      	bcc.n	1004672a <FillZerobss>
  ldr  r2, =_sbssblue
10046736:	4a0b      	ldr	r2, [pc, #44]	@ (10046764 <LoopForever+0x1a>)
  b  LoopFillZeroBlueRam
10046738:	e002      	b.n	10046740 <LoopFillZeroBlueRam>

1004673a <FillZerobssram>:


FillZerobssram:
  movs  r3, #0
1004673a:	2300      	movs	r3, #0
  str  r3, [r2]
1004673c:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
1004673e:	3204      	adds	r2, #4

10046740 <LoopFillZeroBlueRam>:

LoopFillZeroBlueRam:
  ldr  r3, = _ebssblue
10046740:	4b09      	ldr	r3, [pc, #36]	@ (10046768 <LoopForever+0x1e>)
  cmp  r2, r3
10046742:	429a      	cmp	r2, r3
  bcc  FillZerobssram
10046744:	d3f9      	bcc.n	1004673a <FillZerobssram>

/* Call the application's entry point.*/
  bl  main
10046746:	f7fb fb49 	bl	10041ddc <main>

1004674a <LoopForever>:

LoopForever:
    b LoopForever
1004674a:	e7fe      	b.n	1004674a <LoopForever>
   ldr   r0, =_estack
1004674c:	20010000 	.word	0x20010000
  ldr  r3, =_sidata
10046750:	1006ec1c 	.word	0x1006ec1c
  ldr  r0, =_sdata
10046754:	20000a38 	.word	0x20000a38
  ldr  r3, =_edata
10046758:	20000c4c 	.word	0x20000c4c
  ldr  r2, =_sbss
1004675c:	2000024c 	.word	0x2000024c
  ldr  r3, = _ebss
10046760:	20000a38 	.word	0x20000a38
  ldr  r2, =_sbssblue
10046764:	200000c0 	.word	0x200000c0
  ldr  r3, = _ebssblue
10046768:	2000024c 	.word	0x2000024c

1004676c <ADC_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
1004676c:	e7fe      	b.n	1004676c <ADC_IRQHandler>

1004676e <APP_DEBUG_SIGNAL_SET>:
/****************************/
/** Application debug APIs **/
/****************************/

void APP_DEBUG_SIGNAL_SET(app_debug_signal_t signal)
{
1004676e:	b580      	push	{r7, lr}
10046770:	b082      	sub	sp, #8
10046772:	af00      	add	r7, sp, #0
10046774:	0002      	movs	r2, r0
10046776:	1dfb      	adds	r3, r7, #7
10046778:	701a      	strb	r2, [r3, #0]
#if(RT_DEBUG_GPIO_MODULE == 1)
  GENERIC_DEBUG_GPIO_SET(signal, app_debug_table);
#endif /* RT_DEBUG_GPIO_MODULE */
}
1004677a:	46c0      	nop			@ (mov r8, r8)
1004677c:	46bd      	mov	sp, r7
1004677e:	b002      	add	sp, #8
10046780:	bd80      	pop	{r7, pc}

10046782 <APP_DEBUG_SIGNAL_RESET>:
void APP_DEBUG_SIGNAL_RESET(app_debug_signal_t signal)
{
10046782:	b580      	push	{r7, lr}
10046784:	b082      	sub	sp, #8
10046786:	af00      	add	r7, sp, #0
10046788:	0002      	movs	r2, r0
1004678a:	1dfb      	adds	r3, r7, #7
1004678c:	701a      	strb	r2, [r3, #0]
#if(RT_DEBUG_GPIO_MODULE == 1)
  GENERIC_DEBUG_GPIO_RESET(signal, app_debug_table);
#endif /* RT_DEBUG_GPIO_MODULE */
}
1004678e:	46c0      	nop			@ (mov r8, r8)
10046790:	46bd      	mov	sp, r7
10046792:	b002      	add	sp, #8
10046794:	bd80      	pop	{r7, pc}

10046796 <RT_DEBUG_GPIO_Init>:
/*******************************/
/** Debug GPIO Initialization **/
/*******************************/

void RT_DEBUG_GPIO_Init(void)
{
10046796:	b580      	push	{r7, lr}
10046798:	af00      	add	r7, sp, #0
      GPIO_InitStruct.Pin = general_debug_table[cpt].GPIO_pin;
      HAL_GPIO_Init(general_debug_table[cpt].GPIO_port, &GPIO_InitStruct);
    }
  }
#endif /* RT_DEBUG_GPIO_MODULE */
}
1004679a:	46c0      	nop			@ (mov r8, r8)
1004679c:	46bd      	mov	sp, r7
1004679e:	bd80      	pop	{r7, pc}

100467a0 <AES_128_HW_enc>:

/* Implementation of the AES 128 required by the crypto library. */
void AES_128_HW_enc(const uint32_t *P_pInputBuffer,
                    uint32_t *P_pOutputBuffer,
                    const uint8_t *P_pKey)
{
100467a0:	b580      	push	{r7, lr}
100467a2:	b094      	sub	sp, #80	@ 0x50
100467a4:	af00      	add	r7, sp, #0
100467a6:	60f8      	str	r0, [r7, #12]
100467a8:	60b9      	str	r1, [r7, #8]
100467aa:	607a      	str	r2, [r7, #4]
  uint32_t tmp_key_32[4], input_32[4], output_32[4];
  uint8_t *tmp_key = (uint8_t *)tmp_key_32;
100467ac:	2330      	movs	r3, #48	@ 0x30
100467ae:	18fb      	adds	r3, r7, r3
100467b0:	64bb      	str	r3, [r7, #72]	@ 0x48
  uint8_t *input = (uint8_t *)input_32;
100467b2:	2320      	movs	r3, #32
100467b4:	18fb      	adds	r3, r7, r3
100467b6:	647b      	str	r3, [r7, #68]	@ 0x44
  uint8_t *output = (uint8_t *)output_32;
100467b8:	2310      	movs	r3, #16
100467ba:	18fb      	adds	r3, r7, r3
100467bc:	643b      	str	r3, [r7, #64]	@ 0x40
  int32_t i;

  for (i = 0; i < 16; i++)
100467be:	2300      	movs	r3, #0
100467c0:	64fb      	str	r3, [r7, #76]	@ 0x4c
100467c2:	e00d      	b.n	100467e0 <AES_128_HW_enc+0x40>
  {
    tmp_key[15 - i] =  P_pKey[i];
100467c4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100467c6:	687a      	ldr	r2, [r7, #4]
100467c8:	18d2      	adds	r2, r2, r3
100467ca:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100467cc:	210f      	movs	r1, #15
100467ce:	1acb      	subs	r3, r1, r3
100467d0:	0019      	movs	r1, r3
100467d2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
100467d4:	185b      	adds	r3, r3, r1
100467d6:	7812      	ldrb	r2, [r2, #0]
100467d8:	701a      	strb	r2, [r3, #0]
  for (i = 0; i < 16; i++)
100467da:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100467dc:	3301      	adds	r3, #1
100467de:	64fb      	str	r3, [r7, #76]	@ 0x4c
100467e0:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100467e2:	2b0f      	cmp	r3, #15
100467e4:	ddee      	ble.n	100467c4 <AES_128_HW_enc+0x24>
  }

  for (i = 0; i < AES_BLOCK_SIZE; i++)
100467e6:	2300      	movs	r3, #0
100467e8:	64fb      	str	r3, [r7, #76]	@ 0x4c
100467ea:	e03d      	b.n	10046868 <AES_128_HW_enc+0xc8>
  {
    LEW32_2_BUFFER(input, i * 4, P_pInputBuffer[3 - i]);
100467ec:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100467ee:	2203      	movs	r2, #3
100467f0:	1ad3      	subs	r3, r2, r3
100467f2:	009b      	lsls	r3, r3, #2
100467f4:	68fa      	ldr	r2, [r7, #12]
100467f6:	18d3      	adds	r3, r2, r3
100467f8:	681a      	ldr	r2, [r3, #0]
100467fa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100467fc:	009b      	lsls	r3, r3, #2
100467fe:	0019      	movs	r1, r3
10046800:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10046802:	185b      	adds	r3, r3, r1
10046804:	b2d2      	uxtb	r2, r2
10046806:	701a      	strb	r2, [r3, #0]
10046808:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
1004680a:	2203      	movs	r2, #3
1004680c:	1ad3      	subs	r3, r2, r3
1004680e:	009b      	lsls	r3, r3, #2
10046810:	68fa      	ldr	r2, [r7, #12]
10046812:	18d3      	adds	r3, r2, r3
10046814:	681b      	ldr	r3, [r3, #0]
10046816:	0a19      	lsrs	r1, r3, #8
10046818:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
1004681a:	009b      	lsls	r3, r3, #2
1004681c:	3301      	adds	r3, #1
1004681e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
10046820:	18d3      	adds	r3, r2, r3
10046822:	b2ca      	uxtb	r2, r1
10046824:	701a      	strb	r2, [r3, #0]
10046826:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10046828:	2203      	movs	r2, #3
1004682a:	1ad3      	subs	r3, r2, r3
1004682c:	009b      	lsls	r3, r3, #2
1004682e:	68fa      	ldr	r2, [r7, #12]
10046830:	18d3      	adds	r3, r2, r3
10046832:	681b      	ldr	r3, [r3, #0]
10046834:	0c19      	lsrs	r1, r3, #16
10046836:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10046838:	009b      	lsls	r3, r3, #2
1004683a:	3302      	adds	r3, #2
1004683c:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1004683e:	18d3      	adds	r3, r2, r3
10046840:	b2ca      	uxtb	r2, r1
10046842:	701a      	strb	r2, [r3, #0]
10046844:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10046846:	2203      	movs	r2, #3
10046848:	1ad3      	subs	r3, r2, r3
1004684a:	009b      	lsls	r3, r3, #2
1004684c:	68fa      	ldr	r2, [r7, #12]
1004684e:	18d3      	adds	r3, r2, r3
10046850:	681b      	ldr	r3, [r3, #0]
10046852:	0e19      	lsrs	r1, r3, #24
10046854:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10046856:	009b      	lsls	r3, r3, #2
10046858:	3303      	adds	r3, #3
1004685a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
1004685c:	18d3      	adds	r3, r2, r3
1004685e:	b2ca      	uxtb	r2, r1
10046860:	701a      	strb	r2, [r3, #0]
  for (i = 0; i < AES_BLOCK_SIZE; i++)
10046862:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10046864:	3301      	adds	r3, #1
10046866:	64fb      	str	r3, [r7, #76]	@ 0x4c
10046868:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
1004686a:	2b03      	cmp	r3, #3
1004686c:	ddbe      	ble.n	100467ec <AES_128_HW_enc+0x4c>
  }

  HW_AES_Encrypt(input_32, tmp_key_32, output_32);
1004686e:	2310      	movs	r3, #16
10046870:	18fa      	adds	r2, r7, r3
10046872:	2330      	movs	r3, #48	@ 0x30
10046874:	18f9      	adds	r1, r7, r3
10046876:	2320      	movs	r3, #32
10046878:	18fb      	adds	r3, r7, r3
1004687a:	0018      	movs	r0, r3
1004687c:	f000 f894 	bl	100469a8 <HW_AES_Encrypt>

  for (i = 0; i < AES_BLOCK_SIZE; i++)
10046880:	2300      	movs	r3, #0
10046882:	64fb      	str	r3, [r7, #76]	@ 0x4c
10046884:	e028      	b.n	100468d8 <AES_128_HW_enc+0x138>
  {
    P_pOutputBuffer[3 - i] = BUFFER_2_LEW32(output, i * 4);
10046886:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10046888:	009b      	lsls	r3, r3, #2
1004688a:	3303      	adds	r3, #3
1004688c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
1004688e:	18d3      	adds	r3, r2, r3
10046890:	781b      	ldrb	r3, [r3, #0]
10046892:	061a      	lsls	r2, r3, #24
10046894:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
10046896:	009b      	lsls	r3, r3, #2
10046898:	3302      	adds	r3, #2
1004689a:	6c39      	ldr	r1, [r7, #64]	@ 0x40
1004689c:	18cb      	adds	r3, r1, r3
1004689e:	781b      	ldrb	r3, [r3, #0]
100468a0:	041b      	lsls	r3, r3, #16
100468a2:	431a      	orrs	r2, r3
100468a4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100468a6:	009b      	lsls	r3, r3, #2
100468a8:	3301      	adds	r3, #1
100468aa:	6c39      	ldr	r1, [r7, #64]	@ 0x40
100468ac:	18cb      	adds	r3, r1, r3
100468ae:	781b      	ldrb	r3, [r3, #0]
100468b0:	021b      	lsls	r3, r3, #8
100468b2:	431a      	orrs	r2, r3
100468b4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100468b6:	009b      	lsls	r3, r3, #2
100468b8:	0019      	movs	r1, r3
100468ba:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
100468bc:	185b      	adds	r3, r3, r1
100468be:	781b      	ldrb	r3, [r3, #0]
100468c0:	0018      	movs	r0, r3
100468c2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100468c4:	2103      	movs	r1, #3
100468c6:	1acb      	subs	r3, r1, r3
100468c8:	009b      	lsls	r3, r3, #2
100468ca:	68b9      	ldr	r1, [r7, #8]
100468cc:	18cb      	adds	r3, r1, r3
100468ce:	4302      	orrs	r2, r0
100468d0:	601a      	str	r2, [r3, #0]
  for (i = 0; i < AES_BLOCK_SIZE; i++)
100468d2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100468d4:	3301      	adds	r3, #1
100468d6:	64fb      	str	r3, [r7, #76]	@ 0x4c
100468d8:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
100468da:	2b03      	cmp	r3, #3
100468dc:	ddd3      	ble.n	10046886 <AES_128_HW_enc+0xe6>
  }
}
100468de:	46c0      	nop			@ (mov r8, r8)
100468e0:	46c0      	nop			@ (mov r8, r8)
100468e2:	46bd      	mov	sp, r7
100468e4:	b014      	add	sp, #80	@ 0x50
100468e6:	bd80      	pop	{r7, pc}

100468e8 <LL_APB2_GRP1_EnableClock>:
{
100468e8:	b580      	push	{r7, lr}
100468ea:	b084      	sub	sp, #16
100468ec:	af00      	add	r7, sp, #0
100468ee:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB2ENR, Periphs);
100468f0:	4b07      	ldr	r3, [pc, #28]	@ (10046910 <LL_APB2_GRP1_EnableClock+0x28>)
100468f2:	6e19      	ldr	r1, [r3, #96]	@ 0x60
100468f4:	4b06      	ldr	r3, [pc, #24]	@ (10046910 <LL_APB2_GRP1_EnableClock+0x28>)
100468f6:	687a      	ldr	r2, [r7, #4]
100468f8:	430a      	orrs	r2, r1
100468fa:	661a      	str	r2, [r3, #96]	@ 0x60
  tmpreg = READ_BIT(RCC->APB2ENR, Periphs);
100468fc:	4b04      	ldr	r3, [pc, #16]	@ (10046910 <LL_APB2_GRP1_EnableClock+0x28>)
100468fe:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
10046900:	687a      	ldr	r2, [r7, #4]
10046902:	4013      	ands	r3, r2
10046904:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
10046906:	68fb      	ldr	r3, [r7, #12]
}
10046908:	46c0      	nop			@ (mov r8, r8)
1004690a:	46bd      	mov	sp, r7
1004690c:	b004      	add	sp, #16
1004690e:	bd80      	pop	{r7, pc}
10046910:	48400000 	.word	0x48400000

10046914 <LL_APB2_GRP1_IsEnabledClock>:
{
10046914:	b580      	push	{r7, lr}
10046916:	b082      	sub	sp, #8
10046918:	af00      	add	r7, sp, #0
1004691a:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(RCC->APB2ENR, Periphs) == (Periphs)) ? 1UL : 0UL);
1004691c:	4b06      	ldr	r3, [pc, #24]	@ (10046938 <LL_APB2_GRP1_IsEnabledClock+0x24>)
1004691e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
10046920:	687a      	ldr	r2, [r7, #4]
10046922:	4013      	ands	r3, r2
10046924:	687a      	ldr	r2, [r7, #4]
10046926:	429a      	cmp	r2, r3
10046928:	d101      	bne.n	1004692e <LL_APB2_GRP1_IsEnabledClock+0x1a>
1004692a:	2301      	movs	r3, #1
1004692c:	e000      	b.n	10046930 <LL_APB2_GRP1_IsEnabledClock+0x1c>
1004692e:	2300      	movs	r3, #0
}
10046930:	0018      	movs	r0, r3
10046932:	46bd      	mov	sp, r7
10046934:	b002      	add	sp, #8
10046936:	bd80      	pop	{r7, pc}
10046938:	48400000 	.word	0x48400000

1004693c <LL_APB2_GRP1_ForceReset>:
{
1004693c:	b580      	push	{r7, lr}
1004693e:	b082      	sub	sp, #8
10046940:	af00      	add	r7, sp, #0
10046942:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB2RSTR, Periphs);
10046944:	4b04      	ldr	r3, [pc, #16]	@ (10046958 <LL_APB2_GRP1_ForceReset+0x1c>)
10046946:	6c19      	ldr	r1, [r3, #64]	@ 0x40
10046948:	4b03      	ldr	r3, [pc, #12]	@ (10046958 <LL_APB2_GRP1_ForceReset+0x1c>)
1004694a:	687a      	ldr	r2, [r7, #4]
1004694c:	430a      	orrs	r2, r1
1004694e:	641a      	str	r2, [r3, #64]	@ 0x40
}
10046950:	46c0      	nop			@ (mov r8, r8)
10046952:	46bd      	mov	sp, r7
10046954:	b002      	add	sp, #8
10046956:	bd80      	pop	{r7, pc}
10046958:	48400000 	.word	0x48400000

1004695c <LL_APB2_GRP1_ReleaseReset>:
{
1004695c:	b580      	push	{r7, lr}
1004695e:	b082      	sub	sp, #8
10046960:	af00      	add	r7, sp, #0
10046962:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(RCC->APB2RSTR, Periphs);
10046964:	4b05      	ldr	r3, [pc, #20]	@ (1004697c <LL_APB2_GRP1_ReleaseReset+0x20>)
10046966:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
10046968:	687b      	ldr	r3, [r7, #4]
1004696a:	43d9      	mvns	r1, r3
1004696c:	4b03      	ldr	r3, [pc, #12]	@ (1004697c <LL_APB2_GRP1_ReleaseReset+0x20>)
1004696e:	400a      	ands	r2, r1
10046970:	641a      	str	r2, [r3, #64]	@ 0x40
}
10046972:	46c0      	nop			@ (mov r8, r8)
10046974:	46bd      	mov	sp, r7
10046976:	b002      	add	sp, #8
10046978:	bd80      	pop	{r7, pc}
1004697a:	46c0      	nop			@ (mov r8, r8)
1004697c:	48400000 	.word	0x48400000

10046980 <HW_AES_Init>:
/** @defgroup AES_Manager_Public_Functions Public Functions
* @{
*/

HW_AES_ResultStatus HW_AES_Init(void)
{
10046980:	b580      	push	{r7, lr}
10046982:	af00      	add	r7, sp, #0
  if(!LL_APB2_GRP1_IsEnabledClock(LL_APB2_GRP1_PERIPH_MRBLE))
10046984:	2001      	movs	r0, #1
10046986:	f7ff ffc5 	bl	10046914 <LL_APB2_GRP1_IsEnabledClock>
1004698a:	1e03      	subs	r3, r0, #0
1004698c:	d108      	bne.n	100469a0 <HW_AES_Init+0x20>
  {
    /* Peripheral reset */
    LL_APB2_GRP1_ForceReset(LL_APB2_GRP1_PERIPH_MRBLE);
1004698e:	2001      	movs	r0, #1
10046990:	f7ff ffd4 	bl	1004693c <LL_APB2_GRP1_ForceReset>
    LL_APB2_GRP1_ReleaseReset(LL_APB2_GRP1_PERIPH_MRBLE);
10046994:	2001      	movs	r0, #1
10046996:	f7ff ffe1 	bl	1004695c <LL_APB2_GRP1_ReleaseReset>

    /* Enable MR_BLE's clock */
    LL_APB2_GRP1_EnableClock(LL_APB2_GRP1_PERIPH_MRBLE);
1004699a:	2001      	movs	r0, #1
1004699c:	f7ff ffa4 	bl	100468e8 <LL_APB2_GRP1_EnableClock>
  }
  return HW_AES_SUCCESS;
100469a0:	2300      	movs	r3, #0
}
100469a2:	0018      	movs	r0, r3
100469a4:	46bd      	mov	sp, r7
100469a6:	bd80      	pop	{r7, pc}

100469a8 <HW_AES_Encrypt>:
{
  return HW_AES_SUCCESS;
}

HW_AES_ResultStatus HW_AES_Encrypt(const uint32_t *plainTextData, const uint32_t *key, uint32_t *encryptedData)
{
100469a8:	b590      	push	{r4, r7, lr}
100469aa:	b087      	sub	sp, #28
100469ac:	af00      	add	r7, sp, #0
100469ae:	60f8      	str	r0, [r7, #12]
100469b0:	60b9      	str	r1, [r7, #8]
100469b2:	607a      	str	r2, [r7, #4]
  /* Counter to signal interruption by a higher priority routine. */
  static volatile uint8_t start_cnt;
  uint8_t priv_start_cnt;

  start_cnt++;
100469b4:	4b31      	ldr	r3, [pc, #196]	@ (10046a7c <HW_AES_Encrypt+0xd4>)
100469b6:	781b      	ldrb	r3, [r3, #0]
100469b8:	b2db      	uxtb	r3, r3
100469ba:	3301      	adds	r3, #1
100469bc:	b2da      	uxtb	r2, r3
100469be:	4b2f      	ldr	r3, [pc, #188]	@ (10046a7c <HW_AES_Encrypt+0xd4>)
100469c0:	701a      	strb	r2, [r3, #0]

  do
  {
    priv_start_cnt = start_cnt;
100469c2:	2417      	movs	r4, #23
100469c4:	193b      	adds	r3, r7, r4
100469c6:	4a2d      	ldr	r2, [pc, #180]	@ (10046a7c <HW_AES_Encrypt+0xd4>)
100469c8:	7812      	ldrb	r2, [r2, #0]
100469ca:	701a      	strb	r2, [r3, #0]
    /* Starting from this point, any call to HW_AES_Encrypt will change start_cnt. */

    /* Write the Key in the BLE register */
    BLUE->MANAESKEY0REG = key[0];
100469cc:	23c0      	movs	r3, #192	@ 0xc0
100469ce:	05db      	lsls	r3, r3, #23
100469d0:	68ba      	ldr	r2, [r7, #8]
100469d2:	6812      	ldr	r2, [r2, #0]
100469d4:	629a      	str	r2, [r3, #40]	@ 0x28
    BLUE->MANAESKEY1REG = key[1];
100469d6:	68bb      	ldr	r3, [r7, #8]
100469d8:	1d1a      	adds	r2, r3, #4
100469da:	23c0      	movs	r3, #192	@ 0xc0
100469dc:	05db      	lsls	r3, r3, #23
100469de:	6812      	ldr	r2, [r2, #0]
100469e0:	62da      	str	r2, [r3, #44]	@ 0x2c
    BLUE->MANAESKEY2REG = key[2];
100469e2:	68bb      	ldr	r3, [r7, #8]
100469e4:	3308      	adds	r3, #8
100469e6:	001a      	movs	r2, r3
100469e8:	23c0      	movs	r3, #192	@ 0xc0
100469ea:	05db      	lsls	r3, r3, #23
100469ec:	6812      	ldr	r2, [r2, #0]
100469ee:	631a      	str	r2, [r3, #48]	@ 0x30
    BLUE->MANAESKEY3REG = key[3];
100469f0:	68bb      	ldr	r3, [r7, #8]
100469f2:	330c      	adds	r3, #12
100469f4:	001a      	movs	r2, r3
100469f6:	23c0      	movs	r3, #192	@ 0xc0
100469f8:	05db      	lsls	r3, r3, #23
100469fa:	6812      	ldr	r2, [r2, #0]
100469fc:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Write the plain text data in the BLE register */
    BLUE->MANAESCLEARTEXT0REG = plainTextData[0];
100469fe:	23c0      	movs	r3, #192	@ 0xc0
10046a00:	05db      	lsls	r3, r3, #23
10046a02:	68fa      	ldr	r2, [r7, #12]
10046a04:	6812      	ldr	r2, [r2, #0]
10046a06:	639a      	str	r2, [r3, #56]	@ 0x38
    BLUE->MANAESCLEARTEXT1REG = plainTextData[1];
10046a08:	68fb      	ldr	r3, [r7, #12]
10046a0a:	1d1a      	adds	r2, r3, #4
10046a0c:	23c0      	movs	r3, #192	@ 0xc0
10046a0e:	05db      	lsls	r3, r3, #23
10046a10:	6812      	ldr	r2, [r2, #0]
10046a12:	63da      	str	r2, [r3, #60]	@ 0x3c
    BLUE->MANAESCLEARTEXT2REG = plainTextData[2];
10046a14:	68fb      	ldr	r3, [r7, #12]
10046a16:	3308      	adds	r3, #8
10046a18:	001a      	movs	r2, r3
10046a1a:	23c0      	movs	r3, #192	@ 0xc0
10046a1c:	05db      	lsls	r3, r3, #23
10046a1e:	6812      	ldr	r2, [r2, #0]
10046a20:	641a      	str	r2, [r3, #64]	@ 0x40
    BLUE->MANAESCLEARTEXT3REG = plainTextData[3];
10046a22:	68fb      	ldr	r3, [r7, #12]
10046a24:	330c      	adds	r3, #12
10046a26:	001a      	movs	r2, r3
10046a28:	23c0      	movs	r3, #192	@ 0xc0
10046a2a:	05db      	lsls	r3, r3, #23
10046a2c:	6812      	ldr	r2, [r2, #0]
10046a2e:	645a      	str	r2, [r3, #68]	@ 0x44

    HW_AES_Start();
10046a30:	f000 f826 	bl	10046a80 <HW_AES_Start>

    /* Read the plain text data in the BLE register */
    encryptedData[0] = BLUE->MANAESCIPHERTEXT0REG;
10046a34:	23c0      	movs	r3, #192	@ 0xc0
10046a36:	05db      	lsls	r3, r3, #23
10046a38:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
10046a3a:	687b      	ldr	r3, [r7, #4]
10046a3c:	601a      	str	r2, [r3, #0]
    encryptedData[1] = BLUE->MANAESCIPHERTEXT1REG;
10046a3e:	23c0      	movs	r3, #192	@ 0xc0
10046a40:	05da      	lsls	r2, r3, #23
10046a42:	687b      	ldr	r3, [r7, #4]
10046a44:	3304      	adds	r3, #4
10046a46:	6cd2      	ldr	r2, [r2, #76]	@ 0x4c
10046a48:	601a      	str	r2, [r3, #0]
    encryptedData[2] = BLUE->MANAESCIPHERTEXT2REG;
10046a4a:	23c0      	movs	r3, #192	@ 0xc0
10046a4c:	05da      	lsls	r2, r3, #23
10046a4e:	687b      	ldr	r3, [r7, #4]
10046a50:	3308      	adds	r3, #8
10046a52:	6d12      	ldr	r2, [r2, #80]	@ 0x50
10046a54:	601a      	str	r2, [r3, #0]
    encryptedData[3] = BLUE->MANAESCIPHERTEXT3REG;
10046a56:	23c0      	movs	r3, #192	@ 0xc0
10046a58:	05da      	lsls	r2, r3, #23
10046a5a:	687b      	ldr	r3, [r7, #4]
10046a5c:	330c      	adds	r3, #12
10046a5e:	6d52      	ldr	r2, [r2, #84]	@ 0x54
10046a60:	601a      	str	r2, [r3, #0]

  } while (priv_start_cnt != start_cnt);
10046a62:	4b06      	ldr	r3, [pc, #24]	@ (10046a7c <HW_AES_Encrypt+0xd4>)
10046a64:	781b      	ldrb	r3, [r3, #0]
10046a66:	b2db      	uxtb	r3, r3
10046a68:	193a      	adds	r2, r7, r4
10046a6a:	7812      	ldrb	r2, [r2, #0]
10046a6c:	429a      	cmp	r2, r3
10046a6e:	d1a8      	bne.n	100469c2 <HW_AES_Encrypt+0x1a>

  return HW_AES_SUCCESS;
10046a70:	2300      	movs	r3, #0
}
10046a72:	0018      	movs	r0, r3
10046a74:	46bd      	mov	sp, r7
10046a76:	b007      	add	sp, #28
10046a78:	bd90      	pop	{r4, r7, pc}
10046a7a:	46c0      	nop			@ (mov r8, r8)
10046a7c:	20000504 	.word	0x20000504

10046a80 <HW_AES_Start>:
 * @param  None
 *
 * @retval i
 */
__STATIC_INLINE uint8_t HW_AES_Start(void)
{
10046a80:	b580      	push	{r7, lr}
10046a82:	b082      	sub	sp, #8
10046a84:	af00      	add	r7, sp, #0
    volatile uint8_t i = 100U;
10046a86:	1dfb      	adds	r3, r7, #7
10046a88:	2264      	movs	r2, #100	@ 0x64
10046a8a:	701a      	strb	r2, [r3, #0]

    /* Start AES encryption */
    LL_AES_StartManualEncription(BLUE);
10046a8c:	23c0      	movs	r3, #192	@ 0xc0
10046a8e:	05db      	lsls	r3, r3, #23
10046a90:	0018      	movs	r0, r3
10046a92:	f000 f81c 	bl	10046ace <LL_AES_StartManualEncription>
    do
    {
        i--;
10046a96:	1dfb      	adds	r3, r7, #7
10046a98:	781b      	ldrb	r3, [r3, #0]
10046a9a:	b2db      	uxtb	r3, r3
10046a9c:	3b01      	subs	r3, #1
10046a9e:	b2da      	uxtb	r2, r3
10046aa0:	1dfb      	adds	r3, r7, #7
10046aa2:	701a      	strb	r2, [r3, #0]
        if( !LL_AES_IsBusy(BLUE) )
10046aa4:	23c0      	movs	r3, #192	@ 0xc0
10046aa6:	05db      	lsls	r3, r3, #23
10046aa8:	0018      	movs	r0, r3
10046aaa:	f000 f81e 	bl	10046aea <LL_AES_IsBusy>
10046aae:	1e03      	subs	r3, r0, #0
10046ab0:	d005      	beq.n	10046abe <HW_AES_Start+0x3e>
        {
            break;
        }
    } while (i != 0U);
10046ab2:	1dfb      	adds	r3, r7, #7
10046ab4:	781b      	ldrb	r3, [r3, #0]
10046ab6:	b2db      	uxtb	r3, r3
10046ab8:	2b00      	cmp	r3, #0
10046aba:	d1ec      	bne.n	10046a96 <HW_AES_Start+0x16>
10046abc:	e000      	b.n	10046ac0 <HW_AES_Start+0x40>
            break;
10046abe:	46c0      	nop			@ (mov r8, r8)

    return i;
10046ac0:	1dfb      	adds	r3, r7, #7
10046ac2:	781b      	ldrb	r3, [r3, #0]
10046ac4:	b2db      	uxtb	r3, r3
}
10046ac6:	0018      	movs	r0, r3
10046ac8:	46bd      	mov	sp, r7
10046aca:	b002      	add	sp, #8
10046acc:	bd80      	pop	{r7, pc}

10046ace <LL_AES_StartManualEncription>:
  * @rmtoll MANAESCMDREG          START         LL_AES_StartManualEncription
  * @param  BLUEx BLUE Instance
  * @retval None
  */
__STATIC_INLINE void LL_AES_StartManualEncription(BLUE_TypeDef *BLUEx)
{
10046ace:	b580      	push	{r7, lr}
10046ad0:	b082      	sub	sp, #8
10046ad2:	af00      	add	r7, sp, #0
10046ad4:	6078      	str	r0, [r7, #4]
  SET_BIT(BLUEx->MANAESCMDREG, BLUE_MANAESCMDREG_START);
10046ad6:	687b      	ldr	r3, [r7, #4]
10046ad8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
10046ada:	2201      	movs	r2, #1
10046adc:	431a      	orrs	r2, r3
10046ade:	687b      	ldr	r3, [r7, #4]
10046ae0:	659a      	str	r2, [r3, #88]	@ 0x58
}
10046ae2:	46c0      	nop			@ (mov r8, r8)
10046ae4:	46bd      	mov	sp, r7
10046ae6:	b002      	add	sp, #8
10046ae8:	bd80      	pop	{r7, pc}

10046aea <LL_AES_IsBusy>:
  * @rmtoll MANAESSTATREG          BUSY         LL_AES_IsBusy
  * @param  BLUEx BLUE Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_AES_IsBusy(BLUE_TypeDef *BLUEx)
{
10046aea:	b580      	push	{r7, lr}
10046aec:	b082      	sub	sp, #8
10046aee:	af00      	add	r7, sp, #0
10046af0:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(BLUEx->MANAESSTATREG, BLUE_MANAESSTATREG_BUSY) == (BLUE_MANAESSTATREG_BUSY)) ? 1U : 0U);
10046af2:	687b      	ldr	r3, [r7, #4]
10046af4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
10046af6:	2201      	movs	r2, #1
10046af8:	4013      	ands	r3, r2
10046afa:	2b01      	cmp	r3, #1
10046afc:	d101      	bne.n	10046b02 <LL_AES_IsBusy+0x18>
10046afe:	2301      	movs	r3, #1
10046b00:	e000      	b.n	10046b04 <LL_AES_IsBusy+0x1a>
10046b02:	2300      	movs	r3, #0
}
10046b04:	0018      	movs	r0, r3
10046b06:	46bd      	mov	sp, r7
10046b08:	b002      	add	sp, #8
10046b0a:	bd80      	pop	{r7, pc}

10046b0c <LL_PKA_EnableIT_ADDRERR>:
  * @rmtoll CR           ADDRERRIE     LL_PKA_EnableIT_ADDRERR
  * @param  PKAx PKA Instance.
  * @retval None
  */
__STATIC_INLINE void LL_PKA_EnableIT_ADDRERR(PKA_TypeDef *PKAx)
{
10046b0c:	b580      	push	{r7, lr}
10046b0e:	b082      	sub	sp, #8
10046b10:	af00      	add	r7, sp, #0
10046b12:	6078      	str	r0, [r7, #4]
  SET_BIT(PKAx->CR, PKA_CR_ADDRERRIE);
10046b14:	687b      	ldr	r3, [r7, #4]
10046b16:	681b      	ldr	r3, [r3, #0]
10046b18:	2280      	movs	r2, #128	@ 0x80
10046b1a:	0352      	lsls	r2, r2, #13
10046b1c:	431a      	orrs	r2, r3
10046b1e:	687b      	ldr	r3, [r7, #4]
10046b20:	601a      	str	r2, [r3, #0]
}
10046b22:	46c0      	nop			@ (mov r8, r8)
10046b24:	46bd      	mov	sp, r7
10046b26:	b002      	add	sp, #8
10046b28:	bd80      	pop	{r7, pc}

10046b2a <LL_PKA_EnableIT_RAMERR>:
  * @rmtoll CR           RAMERRIE      LL_PKA_EnableIT_RAMERR
  * @param  PKAx PKA Instance.
  * @retval None
  */
__STATIC_INLINE void LL_PKA_EnableIT_RAMERR(PKA_TypeDef *PKAx)
{
10046b2a:	b580      	push	{r7, lr}
10046b2c:	b082      	sub	sp, #8
10046b2e:	af00      	add	r7, sp, #0
10046b30:	6078      	str	r0, [r7, #4]
  SET_BIT(PKAx->CR, PKA_CR_RAMERRIE);
10046b32:	687b      	ldr	r3, [r7, #4]
10046b34:	681b      	ldr	r3, [r3, #0]
10046b36:	2280      	movs	r2, #128	@ 0x80
10046b38:	0312      	lsls	r2, r2, #12
10046b3a:	431a      	orrs	r2, r3
10046b3c:	687b      	ldr	r3, [r7, #4]
10046b3e:	601a      	str	r2, [r3, #0]
}
10046b40:	46c0      	nop			@ (mov r8, r8)
10046b42:	46bd      	mov	sp, r7
10046b44:	b002      	add	sp, #8
10046b46:	bd80      	pop	{r7, pc}

10046b48 <LL_PKA_EnableIT_PROCEND>:
  * @rmtoll CR           PROCENDIE     LL_PKA_EnableIT_PROCEND
  * @param  PKAx PKA Instance.
  * @retval None
  */
__STATIC_INLINE void LL_PKA_EnableIT_PROCEND(PKA_TypeDef *PKAx)
{
10046b48:	b580      	push	{r7, lr}
10046b4a:	b082      	sub	sp, #8
10046b4c:	af00      	add	r7, sp, #0
10046b4e:	6078      	str	r0, [r7, #4]
  SET_BIT(PKAx->CR, PKA_CR_PROCENDIE);
10046b50:	687b      	ldr	r3, [r7, #4]
10046b52:	681b      	ldr	r3, [r3, #0]
10046b54:	2280      	movs	r2, #128	@ 0x80
10046b56:	0292      	lsls	r2, r2, #10
10046b58:	431a      	orrs	r2, r3
10046b5a:	687b      	ldr	r3, [r7, #4]
10046b5c:	601a      	str	r2, [r3, #0]
}
10046b5e:	46c0      	nop			@ (mov r8, r8)
10046b60:	46bd      	mov	sp, r7
10046b62:	b002      	add	sp, #8
10046b64:	bd80      	pop	{r7, pc}
	...

10046b68 <HW_PKA_ReadResult>:

#endif

#if defined(STM32WB05) || defined(STM32WB09)
void HW_PKA_ReadResult( uint32_t index, int size, uint32_t* out )
{
10046b68:	b580      	push	{r7, lr}
10046b6a:	b086      	sub	sp, #24
10046b6c:	af00      	add	r7, sp, #0
10046b6e:	60f8      	str	r0, [r7, #12]
10046b70:	60b9      	str	r1, [r7, #8]
10046b72:	607a      	str	r2, [r7, #4]
  uint32_t* pka_ram = (uint32_t*)&PKA->RAM[index];
10046b74:	68fb      	ldr	r3, [r7, #12]
10046b76:	009b      	lsls	r3, r3, #2
10046b78:	4a0b      	ldr	r2, [pc, #44]	@ (10046ba8 <HW_PKA_ReadResult+0x40>)
10046b7a:	4694      	mov	ip, r2
10046b7c:	4463      	add	r3, ip
10046b7e:	617b      	str	r3, [r7, #20]
  /* Read from PKA RAM */
  for ( ; size > 0; size-- )
10046b80:	e00a      	b.n	10046b98 <HW_PKA_ReadResult+0x30>
  {
    *out++ = *pka_ram++;
10046b82:	697a      	ldr	r2, [r7, #20]
10046b84:	1d13      	adds	r3, r2, #4
10046b86:	617b      	str	r3, [r7, #20]
10046b88:	687b      	ldr	r3, [r7, #4]
10046b8a:	1d19      	adds	r1, r3, #4
10046b8c:	6079      	str	r1, [r7, #4]
10046b8e:	6812      	ldr	r2, [r2, #0]
10046b90:	601a      	str	r2, [r3, #0]
  for ( ; size > 0; size-- )
10046b92:	68bb      	ldr	r3, [r7, #8]
10046b94:	3b01      	subs	r3, #1
10046b96:	60bb      	str	r3, [r7, #8]
10046b98:	68bb      	ldr	r3, [r7, #8]
10046b9a:	2b00      	cmp	r3, #0
10046b9c:	dcf1      	bgt.n	10046b82 <HW_PKA_ReadResult+0x1a>
  }
}
10046b9e:	46c0      	nop			@ (mov r8, r8)
10046ba0:	46c0      	nop			@ (mov r8, r8)
10046ba2:	46bd      	mov	sp, r7
10046ba4:	b006      	add	sp, #24
10046ba6:	bd80      	pop	{r7, pc}
10046ba8:	48300400 	.word	0x48300400

10046bac <HW_PKA_Init>:
}

#endif /* STM32WB06 STM32WB07 */

void HW_PKA_Init(void)
{
10046bac:	b580      	push	{r7, lr}
10046bae:	af00      	add	r7, sp, #0
  PKAMGR_Init();
10046bb0:	f001 fdac 	bl	1004870c <PKAMGR_Init>
  /* Activate interrupts */
  LL_PKA_EnableIT_ADDRERR(PKA);
10046bb4:	4b07      	ldr	r3, [pc, #28]	@ (10046bd4 <HW_PKA_Init+0x28>)
10046bb6:	0018      	movs	r0, r3
10046bb8:	f7ff ffa8 	bl	10046b0c <LL_PKA_EnableIT_ADDRERR>
  LL_PKA_EnableIT_RAMERR(PKA);
10046bbc:	4b05      	ldr	r3, [pc, #20]	@ (10046bd4 <HW_PKA_Init+0x28>)
10046bbe:	0018      	movs	r0, r3
10046bc0:	f7ff ffb3 	bl	10046b2a <LL_PKA_EnableIT_RAMERR>
  LL_PKA_EnableIT_PROCEND(PKA);
10046bc4:	4b03      	ldr	r3, [pc, #12]	@ (10046bd4 <HW_PKA_Init+0x28>)
10046bc6:	0018      	movs	r0, r3
10046bc8:	f7ff ffbe 	bl	10046b48 <LL_PKA_EnableIT_PROCEND>
}
10046bcc:	46c0      	nop			@ (mov r8, r8)
10046bce:	46bd      	mov	sp, r7
10046bd0:	bd80      	pop	{r7, pc}
10046bd2:	46c0      	nop			@ (mov r8, r8)
10046bd4:	48300000 	.word	0x48300000

10046bd8 <HW_PKA_ExitWithError>:
  * @param
  * @param
  *
  */
void HW_PKA_ExitWithError(uint32_t errorCode)
{
10046bd8:	b580      	push	{r7, lr}
10046bda:	b084      	sub	sp, #16
10046bdc:	af00      	add	r7, sp, #0
10046bde:	6078      	str	r0, [r7, #4]
  internalStateMachine_Operation = 0;
10046be0:	4b14      	ldr	r3, [pc, #80]	@ (10046c34 <HW_PKA_ExitWithError+0x5c>)
10046be2:	2200      	movs	r2, #0
10046be4:	601a      	str	r2, [r3, #0]
  internalStateMachine_Step = 0;
10046be6:	4b14      	ldr	r3, [pc, #80]	@ (10046c38 <HW_PKA_ExitWithError+0x60>)
10046be8:	2200      	movs	r2, #0
10046bea:	601a      	str	r2, [r3, #0]
  PKAMGR_Unlock();
10046bec:	f001 fd9a 	bl	10048724 <PKAMGR_Unlock>
  ret[0]=errorCode;
10046bf0:	4b12      	ldr	r3, [pc, #72]	@ (10046c3c <HW_PKA_ExitWithError+0x64>)
10046bf2:	687a      	ldr	r2, [r7, #4]
10046bf4:	601a      	str	r2, [r3, #0]
  for(int i=0; i<8; i++)
10046bf6:	2300      	movs	r3, #0
10046bf8:	60fb      	str	r3, [r7, #12]
10046bfa:	e00c      	b.n	10046c16 <HW_PKA_ExitWithError+0x3e>
  {
    ret[i+16] = bufferSecretKey[i];
10046bfc:	68fb      	ldr	r3, [r7, #12]
10046bfe:	3310      	adds	r3, #16
10046c00:	001a      	movs	r2, r3
10046c02:	4b0f      	ldr	r3, [pc, #60]	@ (10046c40 <HW_PKA_ExitWithError+0x68>)
10046c04:	68f9      	ldr	r1, [r7, #12]
10046c06:	0089      	lsls	r1, r1, #2
10046c08:	58c9      	ldr	r1, [r1, r3]
10046c0a:	4b0c      	ldr	r3, [pc, #48]	@ (10046c3c <HW_PKA_ExitWithError+0x64>)
10046c0c:	0092      	lsls	r2, r2, #2
10046c0e:	50d1      	str	r1, [r2, r3]
  for(int i=0; i<8; i++)
10046c10:	68fb      	ldr	r3, [r7, #12]
10046c12:	3301      	adds	r3, #1
10046c14:	60fb      	str	r3, [r7, #12]
10046c16:	68fb      	ldr	r3, [r7, #12]
10046c18:	2b07      	cmp	r3, #7
10046c1a:	ddef      	ble.n	10046bfc <HW_PKA_ExitWithError+0x24>
  }
  HW_PKA_funcCB_LP(PKAMGR_ERROR, ret);
10046c1c:	4b09      	ldr	r3, [pc, #36]	@ (10046c44 <HW_PKA_ExitWithError+0x6c>)
10046c1e:	681b      	ldr	r3, [r3, #0]
10046c20:	4906      	ldr	r1, [pc, #24]	@ (10046c3c <HW_PKA_ExitWithError+0x64>)
10046c22:	2201      	movs	r2, #1
10046c24:	4252      	negs	r2, r2
10046c26:	0010      	movs	r0, r2
10046c28:	4798      	blx	r3
}
10046c2a:	46c0      	nop			@ (mov r8, r8)
10046c2c:	46bd      	mov	sp, r7
10046c2e:	b004      	add	sp, #16
10046c30:	bd80      	pop	{r7, pc}
10046c32:	46c0      	nop			@ (mov r8, r8)
10046c34:	20000568 	.word	0x20000568
10046c38:	2000056c 	.word	0x2000056c
10046c3c:	20000508 	.word	0x20000508
10046c40:	20000570 	.word	0x20000570
10046c44:	20000590 	.word	0x20000590

10046c48 <HW_PKA_ProcEnd_StateMachine>:
  * @param
  * @param
  *
  */
void HW_PKA_ProcEnd_StateMachine(void)
{
10046c48:	b580      	push	{r7, lr}
10046c4a:	b082      	sub	sp, #8
10046c4c:	af00      	add	r7, sp, #0
  if(internalStateMachine_Operation == HW_PKA_OPERATION_P256)
10046c4e:	4b2f      	ldr	r3, [pc, #188]	@ (10046d0c <HW_PKA_ProcEnd_StateMachine+0xc4>)
10046c50:	681b      	ldr	r3, [r3, #0]
10046c52:	2b01      	cmp	r3, #1
10046c54:	d155      	bne.n	10046d02 <HW_PKA_ProcEnd_StateMachine+0xba>
  {
    switch(internalStateMachine_Step)
10046c56:	4b2e      	ldr	r3, [pc, #184]	@ (10046d10 <HW_PKA_ProcEnd_StateMachine+0xc8>)
10046c58:	681b      	ldr	r3, [r3, #0]
10046c5a:	2b0e      	cmp	r3, #14
10046c5c:	d84d      	bhi.n	10046cfa <HW_PKA_ProcEnd_StateMachine+0xb2>
10046c5e:	009a      	lsls	r2, r3, #2
10046c60:	4b2c      	ldr	r3, [pc, #176]	@ (10046d14 <HW_PKA_ProcEnd_StateMachine+0xcc>)
10046c62:	18d3      	adds	r3, r2, r3
10046c64:	681b      	ldr	r3, [r3, #0]
10046c66:	469f      	mov	pc, r3
    {
      case HW_PKA_STEP_0:
        internalStateMachine_Step = HW_PKA_STEP_1;
10046c68:	4b29      	ldr	r3, [pc, #164]	@ (10046d10 <HW_PKA_ProcEnd_StateMachine+0xc8>)
10046c6a:	2201      	movs	r2, #1
10046c6c:	601a      	str	r2, [r3, #0]

      break;
10046c6e:	e048      	b.n	10046d02 <HW_PKA_ProcEnd_StateMachine+0xba>
      case HW_PKA_STEP_1:
        internalStateMachine_Step = HW_PKA_STEP_2;
10046c70:	4b27      	ldr	r3, [pc, #156]	@ (10046d10 <HW_PKA_ProcEnd_StateMachine+0xc8>)
10046c72:	2202      	movs	r2, #2
10046c74:	601a      	str	r2, [r3, #0]
        break;
10046c76:	e044      	b.n	10046d02 <HW_PKA_ProcEnd_StateMachine+0xba>
      case HW_PKA_STEP_2:
          internalStateMachine_Step = HW_PKA_STEP_3;
10046c78:	4b25      	ldr	r3, [pc, #148]	@ (10046d10 <HW_PKA_ProcEnd_StateMachine+0xc8>)
10046c7a:	2203      	movs	r2, #3
10046c7c:	601a      	str	r2, [r3, #0]
          break;
10046c7e:	e040      	b.n	10046d02 <HW_PKA_ProcEnd_StateMachine+0xba>
      case HW_PKA_STEP_3:
            /* Read the PKA scalar multiplication result which is the DH key */
            for(int i=0;i<8;i++)
10046c80:	2300      	movs	r3, #0
10046c82:	607b      	str	r3, [r7, #4]
10046c84:	e00a      	b.n	10046c9c <HW_PKA_ProcEnd_StateMachine+0x54>
              ret[i] = bufferSecretKey[i];
10046c86:	4b24      	ldr	r3, [pc, #144]	@ (10046d18 <HW_PKA_ProcEnd_StateMachine+0xd0>)
10046c88:	687a      	ldr	r2, [r7, #4]
10046c8a:	0092      	lsls	r2, r2, #2
10046c8c:	58d1      	ldr	r1, [r2, r3]
10046c8e:	4b23      	ldr	r3, [pc, #140]	@ (10046d1c <HW_PKA_ProcEnd_StateMachine+0xd4>)
10046c90:	687a      	ldr	r2, [r7, #4]
10046c92:	0092      	lsls	r2, r2, #2
10046c94:	50d1      	str	r1, [r2, r3]
            for(int i=0;i<8;i++)
10046c96:	687b      	ldr	r3, [r7, #4]
10046c98:	3301      	adds	r3, #1
10046c9a:	607b      	str	r3, [r7, #4]
10046c9c:	687b      	ldr	r3, [r7, #4]
10046c9e:	2b07      	cmp	r3, #7
10046ca0:	ddf1      	ble.n	10046c86 <HW_PKA_ProcEnd_StateMachine+0x3e>
            HW_PKA_P256_ReadEccScalarMul( (uint32_t *)&ret[8], (uint32_t *)&ret[16] );
10046ca2:	4a1f      	ldr	r2, [pc, #124]	@ (10046d20 <HW_PKA_ProcEnd_StateMachine+0xd8>)
10046ca4:	4b1f      	ldr	r3, [pc, #124]	@ (10046d24 <HW_PKA_ProcEnd_StateMachine+0xdc>)
10046ca6:	0011      	movs	r1, r2
10046ca8:	0018      	movs	r0, r3
10046caa:	f000 f85a 	bl	10046d62 <HW_PKA_P256_ReadEccScalarMul>
#ifdef STM32WB09
            internalStateMachine_Step = HW_PKA_STEP_END_SUCCESS;
10046cae:	4b18      	ldr	r3, [pc, #96]	@ (10046d10 <HW_PKA_ProcEnd_StateMachine+0xc8>)
10046cb0:	220e      	movs	r2, #14
10046cb2:	601a      	str	r2, [r3, #0]
            HW_PKA_ProcEnd_StateMachine();
10046cb4:	f7ff ffc8 	bl	10046c48 <HW_PKA_ProcEnd_StateMachine>
         {
           internalStateMachine_Step = HW_PKA_STEP_END_SUCCESS;
           HW_PKA_ProcEnd_StateMachine();
         }
#endif /* STM32WB05 */
          break;
10046cb8:	e023      	b.n	10046d02 <HW_PKA_ProcEnd_StateMachine+0xba>
       case HW_PKA_STEP_END_SUCCESS:
          internalStateMachine_Operation = HW_PKA_OPERATION_NONE;
10046cba:	4b14      	ldr	r3, [pc, #80]	@ (10046d0c <HW_PKA_ProcEnd_StateMachine+0xc4>)
10046cbc:	2200      	movs	r2, #0
10046cbe:	601a      	str	r2, [r3, #0]
          internalStateMachine_Step = HW_PKA_STEP_0;
10046cc0:	4b13      	ldr	r3, [pc, #76]	@ (10046d10 <HW_PKA_ProcEnd_StateMachine+0xc8>)
10046cc2:	2200      	movs	r2, #0
10046cc4:	601a      	str	r2, [r3, #0]
          PKAMGR_Unlock();
10046cc6:	f001 fd2d 	bl	10048724 <PKAMGR_Unlock>
          for(int i=0;i<8;i++)
10046cca:	2300      	movs	r3, #0
10046ccc:	603b      	str	r3, [r7, #0]
10046cce:	e00a      	b.n	10046ce6 <HW_PKA_ProcEnd_StateMachine+0x9e>
            ret[i] = bufferSecretKey[i];
10046cd0:	4b11      	ldr	r3, [pc, #68]	@ (10046d18 <HW_PKA_ProcEnd_StateMachine+0xd0>)
10046cd2:	683a      	ldr	r2, [r7, #0]
10046cd4:	0092      	lsls	r2, r2, #2
10046cd6:	58d1      	ldr	r1, [r2, r3]
10046cd8:	4b10      	ldr	r3, [pc, #64]	@ (10046d1c <HW_PKA_ProcEnd_StateMachine+0xd4>)
10046cda:	683a      	ldr	r2, [r7, #0]
10046cdc:	0092      	lsls	r2, r2, #2
10046cde:	50d1      	str	r1, [r2, r3]
          for(int i=0;i<8;i++)
10046ce0:	683b      	ldr	r3, [r7, #0]
10046ce2:	3301      	adds	r3, #1
10046ce4:	603b      	str	r3, [r7, #0]
10046ce6:	683b      	ldr	r3, [r7, #0]
10046ce8:	2b07      	cmp	r3, #7
10046cea:	ddf1      	ble.n	10046cd0 <HW_PKA_ProcEnd_StateMachine+0x88>
          HW_PKA_funcCB_LP(PKAMGR_SUCCESS, ret);
10046cec:	4b0e      	ldr	r3, [pc, #56]	@ (10046d28 <HW_PKA_ProcEnd_StateMachine+0xe0>)
10046cee:	681b      	ldr	r3, [r3, #0]
10046cf0:	4a0a      	ldr	r2, [pc, #40]	@ (10046d1c <HW_PKA_ProcEnd_StateMachine+0xd4>)
10046cf2:	0011      	movs	r1, r2
10046cf4:	2000      	movs	r0, #0
10046cf6:	4798      	blx	r3
          break;
10046cf8:	e003      	b.n	10046d02 <HW_PKA_ProcEnd_StateMachine+0xba>
       default:
          HW_PKA_ExitWithError(0xA0);
10046cfa:	20a0      	movs	r0, #160	@ 0xa0
10046cfc:	f7ff ff6c 	bl	10046bd8 <HW_PKA_ExitWithError>
    }
  }
}
10046d00:	e7ff      	b.n	10046d02 <HW_PKA_ProcEnd_StateMachine+0xba>
10046d02:	46c0      	nop			@ (mov r8, r8)
10046d04:	46bd      	mov	sp, r7
10046d06:	b002      	add	sp, #8
10046d08:	bd80      	pop	{r7, pc}
10046d0a:	46c0      	nop			@ (mov r8, r8)
10046d0c:	20000568 	.word	0x20000568
10046d10:	2000056c 	.word	0x2000056c
10046d14:	1006e64c 	.word	0x1006e64c
10046d18:	20000570 	.word	0x20000570
10046d1c:	20000508 	.word	0x20000508
10046d20:	20000548 	.word	0x20000548
10046d24:	20000528 	.word	0x20000528
10046d28:	20000590 	.word	0x20000590

10046d2c <HAL_PKA_OperationCpltCallback>:
    HW_PKA_ProcEnd_StateMachine();
  }
}

void HAL_PKA_OperationCpltCallback(PKA_HandleTypeDef *hpka)
{
10046d2c:	b580      	push	{r7, lr}
10046d2e:	b082      	sub	sp, #8
10046d30:	af00      	add	r7, sp, #0
10046d32:	6078      	str	r0, [r7, #4]
  HW_PKA_ProcEnd_StateMachine();
10046d34:	f7ff ff88 	bl	10046c48 <HW_PKA_ProcEnd_StateMachine>
  PKAMGR_IRQCallback();
10046d38:	f001 fd1e 	bl	10048778 <PKAMGR_IRQCallback>
}
10046d3c:	46c0      	nop			@ (mov r8, r8)
10046d3e:	46bd      	mov	sp, r7
10046d40:	b002      	add	sp, #8
10046d42:	bd80      	pop	{r7, pc}

10046d44 <HAL_PKA_ErrorCallback>:

void HAL_PKA_ErrorCallback(PKA_HandleTypeDef *hpka)
{
10046d44:	b580      	push	{r7, lr}
10046d46:	b082      	sub	sp, #8
10046d48:	af00      	add	r7, sp, #0
10046d4a:	6078      	str	r0, [r7, #4]
  HW_PKA_ExitWithError(hpka->ErrorCode);
10046d4c:	687b      	ldr	r3, [r7, #4]
10046d4e:	689b      	ldr	r3, [r3, #8]
10046d50:	0018      	movs	r0, r3
10046d52:	f7ff ff41 	bl	10046bd8 <HW_PKA_ExitWithError>
  PKAMGR_IRQCallback();
10046d56:	f001 fd0f 	bl	10048778 <PKAMGR_IRQCallback>
}
10046d5a:	46c0      	nop			@ (mov r8, r8)
10046d5c:	46bd      	mov	sp, r7
10046d5e:	b002      	add	sp, #8
10046d60:	bd80      	pop	{r7, pc}

10046d62 <HW_PKA_P256_ReadEccScalarMul>:
  * @param
  * @param
  *
  */
void HW_PKA_P256_ReadEccScalarMul( uint32_t* pX, uint32_t* pY )
{
10046d62:	b580      	push	{r7, lr}
10046d64:	b082      	sub	sp, #8
10046d66:	af00      	add	r7, sp, #0
10046d68:	6078      	str	r0, [r7, #4]
10046d6a:	6039      	str	r1, [r7, #0]
#ifdef STM32WB09
  /* Read the output point X */
  if( pX )
10046d6c:	687b      	ldr	r3, [r7, #4]
10046d6e:	2b00      	cmp	r3, #0
10046d70:	d005      	beq.n	10046d7e <HW_PKA_P256_ReadEccScalarMul+0x1c>
  {
    HW_PKA_ReadResult( PKA_ECC_SCALAR_MUL_OUT_RESULT_X, 8, pX );
10046d72:	687b      	ldr	r3, [r7, #4]
10046d74:	001a      	movs	r2, r3
10046d76:	2108      	movs	r1, #8
10046d78:	205e      	movs	r0, #94	@ 0x5e
10046d7a:	f7ff fef5 	bl	10046b68 <HW_PKA_ReadResult>
  }
  /* Read the output point Y as the second half of the result */
  if( pY )
10046d7e:	683b      	ldr	r3, [r7, #0]
10046d80:	2b00      	cmp	r3, #0
10046d82:	d005      	beq.n	10046d90 <HW_PKA_P256_ReadEccScalarMul+0x2e>
  {
    HW_PKA_ReadResult( PKA_ECC_SCALAR_MUL_OUT_RESULT_Y, 8, pY );
10046d84:	683b      	ldr	r3, [r7, #0]
10046d86:	001a      	movs	r2, r3
10046d88:	2108      	movs	r1, #8
10046d8a:	2074      	movs	r0, #116	@ 0x74
10046d8c:	f7ff feec 	bl	10046b68 <HW_PKA_ReadResult>
  if( pY )
  {
    HW_PKA_ReadResult( 108, 8, pY );
  }
#endif /* STM32WB05 */
}
10046d90:	46c0      	nop			@ (mov r8, r8)
10046d92:	46bd      	mov	sp, r7
10046d94:	b002      	add	sp, #8
10046d96:	bd80      	pop	{r7, pc}

10046d98 <LL_AHB1_GRP1_EnableClock>:
{
10046d98:	b580      	push	{r7, lr}
10046d9a:	b084      	sub	sp, #16
10046d9c:	af00      	add	r7, sp, #0
10046d9e:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->AHBENR, Periphs);
10046da0:	4b07      	ldr	r3, [pc, #28]	@ (10046dc0 <LL_AHB1_GRP1_EnableClock+0x28>)
10046da2:	6d19      	ldr	r1, [r3, #80]	@ 0x50
10046da4:	4b06      	ldr	r3, [pc, #24]	@ (10046dc0 <LL_AHB1_GRP1_EnableClock+0x28>)
10046da6:	687a      	ldr	r2, [r7, #4]
10046da8:	430a      	orrs	r2, r1
10046daa:	651a      	str	r2, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHBENR, Periphs);
10046dac:	4b04      	ldr	r3, [pc, #16]	@ (10046dc0 <LL_AHB1_GRP1_EnableClock+0x28>)
10046dae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
10046db0:	687a      	ldr	r2, [r7, #4]
10046db2:	4013      	ands	r3, r2
10046db4:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
10046db6:	68fb      	ldr	r3, [r7, #12]
}
10046db8:	46c0      	nop			@ (mov r8, r8)
10046dba:	46bd      	mov	sp, r7
10046dbc:	b004      	add	sp, #16
10046dbe:	bd80      	pop	{r7, pc}
10046dc0:	48400000 	.word	0x48400000

10046dc4 <LL_RNG_Enable>:
  * @rmtoll CR           RNG_DIS         LL_RNG_Enable
  * @param  RNGx RNG Instance
  * @retval None
  */
__STATIC_INLINE void LL_RNG_Enable(RNG_TypeDef *RNGx)
{
10046dc4:	b580      	push	{r7, lr}
10046dc6:	b082      	sub	sp, #8
10046dc8:	af00      	add	r7, sp, #0
10046dca:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RNGx->CR, RNG_CR_DISABLE, LL_RNG_CR_DISABLE_0);
10046dcc:	687b      	ldr	r3, [r7, #4]
10046dce:	681b      	ldr	r3, [r3, #0]
10046dd0:	2201      	movs	r2, #1
10046dd2:	4393      	bics	r3, r2
10046dd4:	001a      	movs	r2, r3
10046dd6:	687b      	ldr	r3, [r7, #4]
10046dd8:	601a      	str	r2, [r3, #0]
}
10046dda:	46c0      	nop			@ (mov r8, r8)
10046ddc:	46bd      	mov	sp, r7
10046dde:	b002      	add	sp, #8
10046de0:	bd80      	pop	{r7, pc}
	...

10046de4 <LL_RNG_SetSamplingClockEnableDivider>:
  * @param  RNGx RNG Instance
  * @param  value parameter must be a number between 0 and 65535 (form 0x0 to 0xffff)
  * @retval None
  */
__STATIC_INLINE void LL_RNG_SetSamplingClockEnableDivider(RNG_TypeDef *RNGx, uint32_t value)
{
10046de4:	b580      	push	{r7, lr}
10046de6:	b082      	sub	sp, #8
10046de8:	af00      	add	r7, sp, #0
10046dea:	6078      	str	r0, [r7, #4]
10046dec:	6039      	str	r1, [r7, #0]
  MODIFY_REG(RNGx->CR, RNG_CR_CLKDIV_15_0, value << RNG_CR_CLKDIV_15_0_Pos);
10046dee:	687b      	ldr	r3, [r7, #4]
10046df0:	681b      	ldr	r3, [r3, #0]
10046df2:	4a05      	ldr	r2, [pc, #20]	@ (10046e08 <LL_RNG_SetSamplingClockEnableDivider+0x24>)
10046df4:	401a      	ands	r2, r3
10046df6:	683b      	ldr	r3, [r7, #0]
10046df8:	021b      	lsls	r3, r3, #8
10046dfa:	431a      	orrs	r2, r3
10046dfc:	687b      	ldr	r3, [r7, #4]
10046dfe:	601a      	str	r2, [r3, #0]
}
10046e00:	46c0      	nop			@ (mov r8, r8)
10046e02:	46bd      	mov	sp, r7
10046e04:	b002      	add	sp, #8
10046e06:	bd80      	pop	{r7, pc}
10046e08:	ff0000ff 	.word	0xff0000ff

10046e0c <LL_RNG_GetSamplingClockEnableDivider>:
    @note   dividing by a factor equal to CLKDIV[15:0] + 1, values being in the range of 0 to 65535
  * @rmtoll CR          CLKDIV_15_0       LL_RNG_GetSamplingClockEnableDivider
  * @retval can be one of the following values
  */
__STATIC_INLINE uint32_t LL_RNG_GetSamplingClockEnableDivider(RNG_TypeDef *RNGx)
{
10046e0c:	b580      	push	{r7, lr}
10046e0e:	b082      	sub	sp, #8
10046e10:	af00      	add	r7, sp, #0
10046e12:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(RNGx->CR, RNG_CR_CLKDIV_15_0) >> RNG_CR_CLKDIV_15_0_Pos);
10046e14:	687b      	ldr	r3, [r7, #4]
10046e16:	681b      	ldr	r3, [r3, #0]
10046e18:	0a1b      	lsrs	r3, r3, #8
10046e1a:	041b      	lsls	r3, r3, #16
10046e1c:	0c1b      	lsrs	r3, r3, #16
}
10046e1e:	0018      	movs	r0, r3
10046e20:	46bd      	mov	sp, r7
10046e22:	b002      	add	sp, #8
10046e24:	bd80      	pop	{r7, pc}

10046e26 <LL_RNG_IsActiveFlag_DISABLED>:
  * @rmtoll SR          DISABLED            LL_RNG_IsActiveFlag_DISABLED
  * @param  RNGx RNG Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RNG_IsActiveFlag_DISABLED(RNG_TypeDef *RNGx)
{
10046e26:	b580      	push	{r7, lr}
10046e28:	b082      	sub	sp, #8
10046e2a:	af00      	add	r7, sp, #0
10046e2c:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(RNGx->SR, RNG_SR_DISABLED) == (RNG_SR_DISABLED)) ? 1U : 0U);
10046e2e:	687b      	ldr	r3, [r7, #4]
10046e30:	685b      	ldr	r3, [r3, #4]
10046e32:	2201      	movs	r2, #1
10046e34:	4013      	ands	r3, r2
10046e36:	2b01      	cmp	r3, #1
10046e38:	d101      	bne.n	10046e3e <LL_RNG_IsActiveFlag_DISABLED+0x18>
10046e3a:	2301      	movs	r3, #1
10046e3c:	e000      	b.n	10046e40 <LL_RNG_IsActiveFlag_DISABLED+0x1a>
10046e3e:	2300      	movs	r3, #0
}
10046e40:	0018      	movs	r0, r3
10046e42:	46bd      	mov	sp, r7
10046e44:	b002      	add	sp, #8
10046e46:	bd80      	pop	{r7, pc}

10046e48 <LL_RNG_IsActiveFlag_REVEAL_CLK_ERR>:
  * @rmtoll SR          REVEAL_CLK_ERR            LL_RNG_IsActiveFlag_REVEAL_CLK_ERR
  * @param  RNGx RNG Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RNG_IsActiveFlag_REVEAL_CLK_ERR(RNG_TypeDef *RNGx)
{
10046e48:	b580      	push	{r7, lr}
10046e4a:	b082      	sub	sp, #8
10046e4c:	af00      	add	r7, sp, #0
10046e4e:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(RNGx->SR, RNG_SR_REVEAL_CLK_ERR) == (RNG_SR_REVEAL_CLK_ERR)) ? 1U : 0U);
10046e50:	687b      	ldr	r3, [r7, #4]
10046e52:	685b      	ldr	r3, [r3, #4]
10046e54:	2204      	movs	r2, #4
10046e56:	4013      	ands	r3, r2
10046e58:	2b04      	cmp	r3, #4
10046e5a:	d101      	bne.n	10046e60 <LL_RNG_IsActiveFlag_REVEAL_CLK_ERR+0x18>
10046e5c:	2301      	movs	r3, #1
10046e5e:	e000      	b.n	10046e62 <LL_RNG_IsActiveFlag_REVEAL_CLK_ERR+0x1a>
10046e60:	2300      	movs	r3, #0
}
10046e62:	0018      	movs	r0, r3
10046e64:	46bd      	mov	sp, r7
10046e66:	b002      	add	sp, #8
10046e68:	bd80      	pop	{r7, pc}

10046e6a <LL_RNG_IsActiveFlag_VAL_READY>:
  * @rmtoll SR          VAL_READY            LL_RNG_IsActiveFlag_VAL_READY
  * @param  RNGx RNG Instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RNG_IsActiveFlag_VAL_READY(RNG_TypeDef *RNGx)
{
10046e6a:	b580      	push	{r7, lr}
10046e6c:	b082      	sub	sp, #8
10046e6e:	af00      	add	r7, sp, #0
10046e70:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(RNGx->SR, RNG_SR_VAL_READY) == (RNG_SR_VAL_READY)) ? 1U : 0U);
10046e72:	687b      	ldr	r3, [r7, #4]
10046e74:	685b      	ldr	r3, [r3, #4]
10046e76:	2210      	movs	r2, #16
10046e78:	4013      	ands	r3, r2
10046e7a:	2b10      	cmp	r3, #16
10046e7c:	d101      	bne.n	10046e82 <LL_RNG_IsActiveFlag_VAL_READY+0x18>
10046e7e:	2301      	movs	r3, #1
10046e80:	e000      	b.n	10046e84 <LL_RNG_IsActiveFlag_VAL_READY+0x1a>
10046e82:	2300      	movs	r3, #0
}
10046e84:	0018      	movs	r0, r3
10046e86:	46bd      	mov	sp, r7
10046e88:	b002      	add	sp, #8
10046e8a:	bd80      	pop	{r7, pc}

10046e8c <LL_RNG_GetRndVal>:
  available in FIFO by ready VAL_READY flag before starting a read otherwise a null value will be returned
  * @rmtoll VAL          RND_VAL       LL_RNG_GetRndVal
  * @retval a 32-bit Random Value
  */
__STATIC_INLINE uint32_t LL_RNG_GetRndVal(RNG_TypeDef *RNGx)
{
10046e8c:	b580      	push	{r7, lr}
10046e8e:	b082      	sub	sp, #8
10046e90:	af00      	add	r7, sp, #0
10046e92:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_BIT(RNGx->VAL, RNG_VAL_RND_VAL) >> RNG_VAL_RND_VAL_Pos);
10046e94:	687b      	ldr	r3, [r7, #4]
10046e96:	689b      	ldr	r3, [r3, #8]
}
10046e98:	0018      	movs	r0, r3
10046e9a:	46bd      	mov	sp, r7
10046e9c:	b002      	add	sp, #8
10046e9e:	bd80      	pop	{r7, pc}

10046ea0 <HW_RNG_Init>:
/** @defgroup RNG_Manager_Public_Functions Public Functions
* @{
*/

HW_RNG_ResultStatus HW_RNG_Init(void)
{
10046ea0:	b580      	push	{r7, lr}
10046ea2:	b082      	sub	sp, #8
10046ea4:	af00      	add	r7, sp, #0
#ifdef STM32WB09
  /* Peripheral clock enable */
  LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_RNG);
10046ea6:	2380      	movs	r3, #128	@ 0x80
10046ea8:	02db      	lsls	r3, r3, #11
10046eaa:	0018      	movs	r0, r3
10046eac:	f7ff ff74 	bl	10046d98 <LL_AHB1_GRP1_EnableClock>

  uint32_t SamplingClockDivider = 0;
10046eb0:	2300      	movs	r3, #0
10046eb2:	607b      	str	r3, [r7, #4]

  /* Check that the divider value is equal to the one to configure. If not, it must redo the write and checking. */
  while( LL_RNG_GetSamplingClockEnableDivider(RNG) != SamplingClockDivider)
10046eb4:	e005      	b.n	10046ec2 <HW_RNG_Init+0x22>
  {
     /* While the new divider value is being resynchronized with the TRNG core clock domain, it is not possible to write another new value. */
     LL_RNG_SetSamplingClockEnableDivider(RNG, SamplingClockDivider);
10046eb6:	687b      	ldr	r3, [r7, #4]
10046eb8:	4a12      	ldr	r2, [pc, #72]	@ (10046f04 <HW_RNG_Init+0x64>)
10046eba:	0019      	movs	r1, r3
10046ebc:	0010      	movs	r0, r2
10046ebe:	f7ff ff91 	bl	10046de4 <LL_RNG_SetSamplingClockEnableDivider>
  while( LL_RNG_GetSamplingClockEnableDivider(RNG) != SamplingClockDivider)
10046ec2:	4b10      	ldr	r3, [pc, #64]	@ (10046f04 <HW_RNG_Init+0x64>)
10046ec4:	0018      	movs	r0, r3
10046ec6:	f7ff ffa1 	bl	10046e0c <LL_RNG_GetSamplingClockEnableDivider>
10046eca:	0002      	movs	r2, r0
10046ecc:	687b      	ldr	r3, [r7, #4]
10046ece:	4293      	cmp	r3, r2
10046ed0:	d1f1      	bne.n	10046eb6 <HW_RNG_Init+0x16>
  }

  /* Initialize random numbers generation */
  LL_RNG_Enable(RNG);
10046ed2:	4b0c      	ldr	r3, [pc, #48]	@ (10046f04 <HW_RNG_Init+0x64>)
10046ed4:	0018      	movs	r0, r3
10046ed6:	f7ff ff75 	bl	10046dc4 <LL_RNG_Enable>

  /* Wait for RNG enable operation */
  while (LL_RNG_IsActiveFlag_DISABLED(RNG));
10046eda:	46c0      	nop			@ (mov r8, r8)
10046edc:	4b09      	ldr	r3, [pc, #36]	@ (10046f04 <HW_RNG_Init+0x64>)
10046ede:	0018      	movs	r0, r3
10046ee0:	f7ff ffa1 	bl	10046e26 <LL_RNG_IsActiveFlag_DISABLED>
10046ee4:	1e03      	subs	r3, r0, #0
10046ee6:	d1f9      	bne.n	10046edc <HW_RNG_Init+0x3c>

  /* Check if internal clock error occurs */
  if (LL_RNG_IsActiveFlag_REVEAL_CLK_ERR(RNG))
10046ee8:	4b06      	ldr	r3, [pc, #24]	@ (10046f04 <HW_RNG_Init+0x64>)
10046eea:	0018      	movs	r0, r3
10046eec:	f7ff ffac 	bl	10046e48 <LL_RNG_IsActiveFlag_REVEAL_CLK_ERR>
10046ef0:	1e03      	subs	r3, r0, #0
10046ef2:	d001      	beq.n	10046ef8 <HW_RNG_Init+0x58>
  {
    return HW_RNG_ERROR;
10046ef4:	2301      	movs	r3, #1
10046ef6:	e000      	b.n	10046efa <HW_RNG_Init+0x5a>
  }

  /* Values of Generated Random numbers are now available in num array. */

#endif /* STM32WB07 || STM32WB06 || STM32WB05*/
  return HW_RNG_SUCCESS;
10046ef8:	2300      	movs	r3, #0
}
10046efa:	0018      	movs	r0, r3
10046efc:	46bd      	mov	sp, r7
10046efe:	b002      	add	sp, #8
10046f00:	bd80      	pop	{r7, pc}
10046f02:	46c0      	nop			@ (mov r8, r8)
10046f04:	48600000 	.word	0x48600000

10046f08 <HW_RNG_GetRandom16>:
 * @brief Provide a 16-bit true random number
 * @param num: pointer to the random value returned
 * @return error status: 0 = No error
 */
HW_RNG_ResultStatus HW_RNG_GetRandom16(uint16_t* num)
{
10046f08:	b580      	push	{r7, lr}
10046f0a:	b082      	sub	sp, #8
10046f0c:	af00      	add	r7, sp, #0
10046f0e:	6078      	str	r0, [r7, #4]
#ifdef STM32WB09
  /* Wait for VAL_READY signal */
  while (!LL_RNG_IsActiveFlag_VAL_READY(RNG));
10046f10:	46c0      	nop			@ (mov r8, r8)
10046f12:	4b09      	ldr	r3, [pc, #36]	@ (10046f38 <HW_RNG_GetRandom16+0x30>)
10046f14:	0018      	movs	r0, r3
10046f16:	f7ff ffa8 	bl	10046e6a <LL_RNG_IsActiveFlag_VAL_READY>
10046f1a:	1e03      	subs	r3, r0, #0
10046f1c:	d0f9      	beq.n	10046f12 <HW_RNG_GetRandom16+0xa>

  *num = LL_RNG_READRANDDATA32(RNG);
10046f1e:	4b06      	ldr	r3, [pc, #24]	@ (10046f38 <HW_RNG_GetRandom16+0x30>)
10046f20:	0018      	movs	r0, r3
10046f22:	f7ff ffb3 	bl	10046e8c <LL_RNG_GetRndVal>
10046f26:	0003      	movs	r3, r0
10046f28:	b29a      	uxth	r2, r3
10046f2a:	687b      	ldr	r3, [r7, #4]
10046f2c:	801a      	strh	r2, [r3, #0]

  *num = (uint16_t)LL_RNG_ReadRandData16(RNG);

#endif /* STM32WB07 || STM32WB06 || STM32WB05*/

  return HW_RNG_SUCCESS;
10046f2e:	2300      	movs	r3, #0
}
10046f30:	0018      	movs	r0, r3
10046f32:	46bd      	mov	sp, r7
10046f34:	b002      	add	sp, #8
10046f36:	bd80      	pop	{r7, pc}
10046f38:	48600000 	.word	0x48600000

10046f3c <HW_RNG_GetRandom32>:
 * @param num: pointer to the random value returned
 *
 * @return error status: 0 = No error
 */
HW_RNG_ResultStatus HW_RNG_GetRandom32(uint32_t* num)
{
10046f3c:	b580      	push	{r7, lr}
10046f3e:	b082      	sub	sp, #8
10046f40:	af00      	add	r7, sp, #0
10046f42:	6078      	str	r0, [r7, #4]
#ifdef STM32WB09
  /* Wait for VAL_READY signal */
  while (!LL_RNG_IsActiveFlag_VAL_READY(RNG));
10046f44:	46c0      	nop			@ (mov r8, r8)
10046f46:	4b09      	ldr	r3, [pc, #36]	@ (10046f6c <HW_RNG_GetRandom32+0x30>)
10046f48:	0018      	movs	r0, r3
10046f4a:	f7ff ff8e 	bl	10046e6a <LL_RNG_IsActiveFlag_VAL_READY>
10046f4e:	1e03      	subs	r3, r0, #0
10046f50:	d0f9      	beq.n	10046f46 <HW_RNG_GetRandom32+0xa>

  *num = LL_RNG_READRANDDATA32(RNG);
10046f52:	4b06      	ldr	r3, [pc, #24]	@ (10046f6c <HW_RNG_GetRandom32+0x30>)
10046f54:	0018      	movs	r0, r3
10046f56:	f7ff ff99 	bl	10046e8c <LL_RNG_GetRndVal>
10046f5a:	0002      	movs	r2, r0
10046f5c:	687b      	ldr	r3, [r7, #4]
10046f5e:	601a      	str	r2, [r3, #0]
  while (!LL_RNG_IsActiveFlag_RNGRDY(RNG));

  num_16[1] = (uint16_t)LL_RNG_ReadRandData16(RNG);
#endif /* STM32WB07 || STM32WB06 || STM32WB05*/

  return HW_RNG_SUCCESS;
10046f60:	2300      	movs	r3, #0
}
10046f62:	0018      	movs	r0, r3
10046f64:	46bd      	mov	sp, r7
10046f66:	b002      	add	sp, #8
10046f68:	bd80      	pop	{r7, pc}
10046f6a:	46c0      	nop			@ (mov r8, r8)
10046f6c:	48600000 	.word	0x48600000

10046f70 <NVMDB_get_info>:
}

#endif

static NVMDB_status_t NVMDB_get_info(NVMDB_info *info)
{
10046f70:	b580      	push	{r7, lr}
10046f72:	b084      	sub	sp, #16
10046f74:	af00      	add	r7, sp, #0
10046f76:	6078      	str	r0, [r7, #4]
  uint32_t address = info->start_address;
10046f78:	687b      	ldr	r3, [r7, #4]
10046f7a:	681b      	ldr	r3, [r3, #0]
10046f7c:	60fb      	str	r3, [r7, #12]
  NVMDB_RecordType_ptr record_p;

  info->valid_records = 0;
10046f7e:	687b      	ldr	r3, [r7, #4]
10046f80:	2200      	movs	r2, #0
10046f82:	811a      	strh	r2, [r3, #8]
  info->invalid_records = 0;
10046f84:	687b      	ldr	r3, [r7, #4]
10046f86:	2200      	movs	r2, #0
10046f88:	815a      	strh	r2, [r3, #10]
  info->free_space = 0;
10046f8a:	687b      	ldr	r3, [r7, #4]
10046f8c:	2200      	movs	r2, #0
10046f8e:	819a      	strh	r2, [r3, #12]
  info->locked = FALSE;
10046f90:	687b      	ldr	r3, [r7, #4]
10046f92:	2200      	movs	r2, #0
10046f94:	739a      	strb	r2, [r3, #14]

  while(1)
  {

    record_p = (NVMDB_RecordType_ptr)address;
10046f96:	68fb      	ldr	r3, [r7, #12]
10046f98:	60bb      	str	r3, [r7, #8]

    if(record_p->header.valid_flag == NO_RECORD)
10046f9a:	68bb      	ldr	r3, [r7, #8]
10046f9c:	781b      	ldrb	r3, [r3, #0]
10046f9e:	2bff      	cmp	r3, #255	@ 0xff
10046fa0:	d10c      	bne.n	10046fbc <NVMDB_get_info+0x4c>
    {
      info->free_space = info->end_address - address - RECORD_HEADER_SIZE;
10046fa2:	687b      	ldr	r3, [r7, #4]
10046fa4:	685b      	ldr	r3, [r3, #4]
10046fa6:	b29a      	uxth	r2, r3
10046fa8:	68fb      	ldr	r3, [r7, #12]
10046faa:	b29b      	uxth	r3, r3
10046fac:	1ad3      	subs	r3, r2, r3
10046fae:	b29b      	uxth	r3, r3
10046fb0:	3b04      	subs	r3, #4
10046fb2:	b29a      	uxth	r2, r3
10046fb4:	687b      	ldr	r3, [r7, #4]
10046fb6:	819a      	strh	r2, [r3, #12]
      return NVMDB_STATUS_OK;
10046fb8:	2300      	movs	r3, #0
10046fba:	e028      	b.n	1004700e <NVMDB_get_info+0x9e>
    }
    else if(record_p->header.valid_flag == VALID_RECORD)
10046fbc:	68bb      	ldr	r3, [r7, #8]
10046fbe:	781b      	ldrb	r3, [r3, #0]
10046fc0:	2bfe      	cmp	r3, #254	@ 0xfe
10046fc2:	d106      	bne.n	10046fd2 <NVMDB_get_info+0x62>
    {
      info->valid_records++;
10046fc4:	687b      	ldr	r3, [r7, #4]
10046fc6:	891b      	ldrh	r3, [r3, #8]
10046fc8:	3301      	adds	r3, #1
10046fca:	b29a      	uxth	r2, r3
10046fcc:	687b      	ldr	r3, [r7, #4]
10046fce:	811a      	strh	r2, [r3, #8]
10046fd0:	e00c      	b.n	10046fec <NVMDB_get_info+0x7c>
    }
    else if(record_p->header.valid_flag == INVALID_RECORD)
10046fd2:	68bb      	ldr	r3, [r7, #8]
10046fd4:	781b      	ldrb	r3, [r3, #0]
10046fd6:	2b00      	cmp	r3, #0
10046fd8:	d106      	bne.n	10046fe8 <NVMDB_get_info+0x78>
    {
      info->invalid_records++;
10046fda:	687b      	ldr	r3, [r7, #4]
10046fdc:	895b      	ldrh	r3, [r3, #10]
10046fde:	3301      	adds	r3, #1
10046fe0:	b29a      	uxth	r2, r3
10046fe2:	687b      	ldr	r3, [r7, #4]
10046fe4:	815a      	strh	r2, [r3, #10]
10046fe6:	e001      	b.n	10046fec <NVMDB_get_info+0x7c>
    }
    else
    {
      // Wrong flag
      return NVMDB_STATUS_CORRUPTED_DB;
10046fe8:	2303      	movs	r3, #3
10046fea:	e010      	b.n	1004700e <NVMDB_get_info+0x9e>
    }

    address += ROUND4_R(record_p->header.length + RECORD_HEADER_SIZE);
10046fec:	68bb      	ldr	r3, [r7, #8]
10046fee:	885b      	ldrh	r3, [r3, #2]
10046ff0:	3303      	adds	r3, #3
10046ff2:	2203      	movs	r2, #3
10046ff4:	4313      	orrs	r3, r2
10046ff6:	001a      	movs	r2, r3
10046ff8:	68fb      	ldr	r3, [r7, #12]
10046ffa:	18d3      	adds	r3, r2, r3
10046ffc:	3301      	adds	r3, #1
10046ffe:	60fb      	str	r3, [r7, #12]

    if(address + MIN_RECORD_SIZE >= info->end_address)  // End of DB reached
10047000:	68fb      	ldr	r3, [r7, #12]
10047002:	1d5a      	adds	r2, r3, #5
10047004:	687b      	ldr	r3, [r7, #4]
10047006:	685b      	ldr	r3, [r3, #4]
10047008:	429a      	cmp	r2, r3
1004700a:	d3c4      	bcc.n	10046f96 <NVMDB_get_info+0x26>
    {
      return NVMDB_STATUS_OK;
1004700c:	2300      	movs	r3, #0
    }
  }
}
1004700e:	0018      	movs	r0, r3
10047010:	46bd      	mov	sp, r7
10047012:	b004      	add	sp, #16
10047014:	bd80      	pop	{r7, pc}

10047016 <NextRecordNoLock>:

/* Current_record_length is used to read the next record when the current record
   is no more present (because, for example, a clean operation has canceled it). */
static NVMDB_status_t NextRecordNoLock(NVMDB_HandleType *handle_p, uint8_t type, uint8_t **data_p, NVMDB_RecordSizeType *data_len, NVMDB_RecordSizeType current_record_length, uint8_t *record_type)
{
10047016:	b580      	push	{r7, lr}
10047018:	b086      	sub	sp, #24
1004701a:	af00      	add	r7, sp, #0
1004701c:	60f8      	str	r0, [r7, #12]
1004701e:	607a      	str	r2, [r7, #4]
10047020:	603b      	str	r3, [r7, #0]
10047022:	230b      	movs	r3, #11
10047024:	18fb      	adds	r3, r7, r3
10047026:	1c0a      	adds	r2, r1, #0
10047028:	701a      	strb	r2, [r3, #0]
      return NVMDB_STATUS_END_OF_DB;
    }
  }
#endif

  if(current_record_length)
1004702a:	2020      	movs	r0, #32
1004702c:	183b      	adds	r3, r7, r0
1004702e:	881b      	ldrh	r3, [r3, #0]
10047030:	2b00      	cmp	r3, #0
10047032:	d00a      	beq.n	1004704a <NextRecordNoLock+0x34>
  {
    header.length = current_record_length;
10047034:	2110      	movs	r1, #16
10047036:	187a      	adds	r2, r7, r1
10047038:	183b      	adds	r3, r7, r0
1004703a:	881b      	ldrh	r3, [r3, #0]
1004703c:	8053      	strh	r3, [r2, #2]
    header.valid_flag = VALID_RECORD;
1004703e:	187b      	adds	r3, r7, r1
10047040:	22fe      	movs	r2, #254	@ 0xfe
10047042:	701a      	strb	r2, [r3, #0]
    record_p = (NVMDB_RecordType_ptr) & header;
10047044:	187b      	adds	r3, r7, r1
10047046:	617b      	str	r3, [r7, #20]
10047048:	e002      	b.n	10047050 <NextRecordNoLock+0x3a>
  }
  else
  {
    record_p = (NVMDB_RecordType_ptr)handle_p->address;
1004704a:	68fb      	ldr	r3, [r7, #12]
1004704c:	685b      	ldr	r3, [r3, #4]
1004704e:	617b      	str	r3, [r7, #20]
  }

  if(handle_p->address >= handle_p->end_address || record_p->header.valid_flag == NO_RECORD)
10047050:	68fb      	ldr	r3, [r7, #12]
10047052:	685a      	ldr	r2, [r3, #4]
10047054:	68fb      	ldr	r3, [r7, #12]
10047056:	689b      	ldr	r3, [r3, #8]
10047058:	429a      	cmp	r2, r3
1004705a:	d203      	bcs.n	10047064 <NextRecordNoLock+0x4e>
1004705c:	697b      	ldr	r3, [r7, #20]
1004705e:	781b      	ldrb	r3, [r3, #0]
10047060:	2bff      	cmp	r3, #255	@ 0xff
10047062:	d101      	bne.n	10047068 <NextRecordNoLock+0x52>
  {
    return NVMDB_STATUS_END_OF_DB;
10047064:	2304      	movs	r3, #4
10047066:	e04b      	b.n	10047100 <NextRecordNoLock+0xea>
  while(1)
  {

    // If it is the first read, the pointer already points to first record.
    // If it is not the first read, advance the pointer to the next record (word aligned).
    if(handle_p->first_read)
10047068:	68fb      	ldr	r3, [r7, #12]
1004706a:	7b1b      	ldrb	r3, [r3, #12]
1004706c:	2b00      	cmp	r3, #0
1004706e:	d003      	beq.n	10047078 <NextRecordNoLock+0x62>
    {
      handle_p->first_read = FALSE;
10047070:	68fb      	ldr	r3, [r7, #12]
10047072:	2200      	movs	r2, #0
10047074:	731a      	strb	r2, [r3, #12]
10047076:	e019      	b.n	100470ac <NextRecordNoLock+0x96>
    }
    else
    {
      handle_p->address += ROUND4_R(record_p->header.length + RECORD_HEADER_SIZE);
10047078:	68fb      	ldr	r3, [r7, #12]
1004707a:	685b      	ldr	r3, [r3, #4]
1004707c:	697a      	ldr	r2, [r7, #20]
1004707e:	8852      	ldrh	r2, [r2, #2]
10047080:	3203      	adds	r2, #3
10047082:	2103      	movs	r1, #3
10047084:	430a      	orrs	r2, r1
10047086:	189b      	adds	r3, r3, r2
10047088:	1c5a      	adds	r2, r3, #1
1004708a:	68fb      	ldr	r3, [r7, #12]
1004708c:	605a      	str	r2, [r3, #4]
      record_p = (NVMDB_RecordType_ptr)handle_p->address;
1004708e:	68fb      	ldr	r3, [r7, #12]
10047090:	685b      	ldr	r3, [r3, #4]
10047092:	617b      	str	r3, [r7, #20]

      if(handle_p->address >= handle_p->end_address || record_p->header.valid_flag == NO_RECORD)
10047094:	68fb      	ldr	r3, [r7, #12]
10047096:	685a      	ldr	r2, [r3, #4]
10047098:	68fb      	ldr	r3, [r7, #12]
1004709a:	689b      	ldr	r3, [r3, #8]
1004709c:	429a      	cmp	r2, r3
1004709e:	d203      	bcs.n	100470a8 <NextRecordNoLock+0x92>
100470a0:	697b      	ldr	r3, [r7, #20]
100470a2:	781b      	ldrb	r3, [r3, #0]
100470a4:	2bff      	cmp	r3, #255	@ 0xff
100470a6:	d101      	bne.n	100470ac <NextRecordNoLock+0x96>
        {
          // A record to be written has been found in cache
          return NVMDB_STATUS_OK;
        }
#endif
        return NVMDB_STATUS_END_OF_DB;
100470a8:	2304      	movs	r3, #4
100470aa:	e029      	b.n	10047100 <NextRecordNoLock+0xea>
      }
    }

    if(record_p->header.valid_flag == INVALID_RECORD)
100470ac:	697b      	ldr	r3, [r7, #20]
100470ae:	781b      	ldrb	r3, [r3, #0]
100470b0:	2b00      	cmp	r3, #0
100470b2:	d023      	beq.n	100470fc <NextRecordNoLock+0xe6>
    {
      // If record is invalidated, address is updated in next cycle.
      continue;
    }

    if(record_p->header.valid_flag != VALID_RECORD)
100470b4:	697b      	ldr	r3, [r7, #20]
100470b6:	781b      	ldrb	r3, [r3, #0]
100470b8:	2bfe      	cmp	r3, #254	@ 0xfe
100470ba:	d001      	beq.n	100470c0 <NextRecordNoLock+0xaa>
    {
      return NVMDB_STATUS_CORRUPTED_DB;
100470bc:	2303      	movs	r3, #3
100470be:	e01f      	b.n	10047100 <NextRecordNoLock+0xea>
    }

    if(type == ALL_TYPES || record_p->header.record_id == type)
100470c0:	220b      	movs	r2, #11
100470c2:	18bb      	adds	r3, r7, r2
100470c4:	781b      	ldrb	r3, [r3, #0]
100470c6:	2bff      	cmp	r3, #255	@ 0xff
100470c8:	d005      	beq.n	100470d6 <NextRecordNoLock+0xc0>
100470ca:	697b      	ldr	r3, [r7, #20]
100470cc:	785b      	ldrb	r3, [r3, #1]
100470ce:	18ba      	adds	r2, r7, r2
100470d0:	7812      	ldrb	r2, [r2, #0]
100470d2:	429a      	cmp	r2, r3
100470d4:	d1c8      	bne.n	10047068 <NextRecordNoLock+0x52>
      {
        continue;
      }
#endif

      *data_p = (uint8_t *)handle_p->address + RECORD_HEADER_SIZE;
100470d6:	68fb      	ldr	r3, [r7, #12]
100470d8:	685b      	ldr	r3, [r3, #4]
100470da:	3304      	adds	r3, #4
100470dc:	001a      	movs	r2, r3
100470de:	687b      	ldr	r3, [r7, #4]
100470e0:	601a      	str	r2, [r3, #0]
      *data_len = record_p->header.length;
100470e2:	697b      	ldr	r3, [r7, #20]
100470e4:	885a      	ldrh	r2, [r3, #2]
100470e6:	683b      	ldr	r3, [r7, #0]
100470e8:	801a      	strh	r2, [r3, #0]

      if(record_type != NULL)
100470ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100470ec:	2b00      	cmp	r3, #0
100470ee:	d003      	beq.n	100470f8 <NextRecordNoLock+0xe2>
      {
        *record_type = record_p->header.record_id;
100470f0:	697b      	ldr	r3, [r7, #20]
100470f2:	785a      	ldrb	r2, [r3, #1]
100470f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100470f6:	701a      	strb	r2, [r3, #0]
      }

      //memcpy(data_p, (uint8_t*)handle_p->address + RECORD_HEADER_SIZE + offset, MIN(record_p->header.length - offset, max_size));
      //*size_p = record_p->header.length;

      return NVMDB_STATUS_OK;
100470f8:	2300      	movs	r3, #0
100470fa:	e001      	b.n	10047100 <NextRecordNoLock+0xea>
      continue;
100470fc:	46c0      	nop			@ (mov r8, r8)
    if(handle_p->first_read)
100470fe:	e7b3      	b.n	10047068 <NextRecordNoLock+0x52>
    }
  }
}
10047100:	0018      	movs	r0, r3
10047102:	46bd      	mov	sp, r7
10047104:	b006      	add	sp, #24
10047106:	bd80      	pop	{r7, pc}

10047108 <ReadNextRecordNoLock>:

static NVMDB_status_t ReadNextRecordNoLock(NVMDB_HandleType *handle_p, uint8_t record_type, NVMDB_RecordSizeType offset, uint8_t *data_p, NVMDB_RecordSizeType max_size, NVMDB_RecordSizeType *size_p, NVMDB_RecordSizeType current_record_length, uint8_t *record_type_out)
{
10047108:	b5f0      	push	{r4, r5, r6, r7, lr}
1004710a:	b08b      	sub	sp, #44	@ 0x2c
1004710c:	af02      	add	r7, sp, #8
1004710e:	60f8      	str	r0, [r7, #12]
10047110:	0008      	movs	r0, r1
10047112:	0011      	movs	r1, r2
10047114:	607b      	str	r3, [r7, #4]
10047116:	230b      	movs	r3, #11
10047118:	18fb      	adds	r3, r7, r3
1004711a:	1c02      	adds	r2, r0, #0
1004711c:	701a      	strb	r2, [r3, #0]
1004711e:	2208      	movs	r2, #8
10047120:	0010      	movs	r0, r2
10047122:	18bb      	adds	r3, r7, r2
10047124:	1c0a      	adds	r2, r1, #0
10047126:	801a      	strh	r2, [r3, #0]
  NVMDB_status_t status;

  uint8_t *data;
  NVMDB_RecordSizeType data_len;

  *size_p = 0;
10047128:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004712a:	2200      	movs	r2, #0
1004712c:	801a      	strh	r2, [r3, #0]

  status = NextRecordNoLock(handle_p, record_type, &data, &data_len, current_record_length, record_type_out);
1004712e:	261f      	movs	r6, #31
10047130:	19bc      	adds	r4, r7, r6
10047132:	2216      	movs	r2, #22
10047134:	18bd      	adds	r5, r7, r2
10047136:	2218      	movs	r2, #24
10047138:	18ba      	adds	r2, r7, r2
1004713a:	230b      	movs	r3, #11
1004713c:	18fb      	adds	r3, r7, r3
1004713e:	7819      	ldrb	r1, [r3, #0]
10047140:	68fb      	ldr	r3, [r7, #12]
10047142:	469c      	mov	ip, r3
10047144:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10047146:	9301      	str	r3, [sp, #4]
10047148:	2338      	movs	r3, #56	@ 0x38
1004714a:	181b      	adds	r3, r3, r0
1004714c:	19db      	adds	r3, r3, r7
1004714e:	881b      	ldrh	r3, [r3, #0]
10047150:	9300      	str	r3, [sp, #0]
10047152:	002b      	movs	r3, r5
10047154:	4660      	mov	r0, ip
10047156:	f7ff ff5e 	bl	10047016 <NextRecordNoLock>
1004715a:	0003      	movs	r3, r0
1004715c:	7023      	strb	r3, [r4, #0]

  if(status != NVMDB_STATUS_OK)
1004715e:	19bb      	adds	r3, r7, r6
10047160:	781b      	ldrb	r3, [r3, #0]
10047162:	2b00      	cmp	r3, #0
10047164:	d002      	beq.n	1004716c <ReadNextRecordNoLock+0x64>
  {
    return status;
10047166:	19bb      	adds	r3, r7, r6
10047168:	781b      	ldrb	r3, [r3, #0]
1004716a:	e027      	b.n	100471bc <ReadNextRecordNoLock+0xb4>
  }

  if(offset >= data_len)
1004716c:	2316      	movs	r3, #22
1004716e:	18fb      	adds	r3, r7, r3
10047170:	881b      	ldrh	r3, [r3, #0]
10047172:	2208      	movs	r2, #8
10047174:	18ba      	adds	r2, r7, r2
10047176:	8812      	ldrh	r2, [r2, #0]
10047178:	429a      	cmp	r2, r3
1004717a:	d301      	bcc.n	10047180 <ReadNextRecordNoLock+0x78>
  {
    return NVMDB_STATUS_INVALID_OFFSET;
1004717c:	2306      	movs	r3, #6
1004717e:	e01d      	b.n	100471bc <ReadNextRecordNoLock+0xb4>
  }

  memcpy(data_p, data + offset, MIN(data_len - offset, max_size));
10047180:	69ba      	ldr	r2, [r7, #24]
10047182:	2408      	movs	r4, #8
10047184:	193b      	adds	r3, r7, r4
10047186:	881b      	ldrh	r3, [r3, #0]
10047188:	18d1      	adds	r1, r2, r3
1004718a:	2330      	movs	r3, #48	@ 0x30
1004718c:	2208      	movs	r2, #8
1004718e:	189b      	adds	r3, r3, r2
10047190:	19db      	adds	r3, r3, r7
10047192:	881a      	ldrh	r2, [r3, #0]
10047194:	2316      	movs	r3, #22
10047196:	18fb      	adds	r3, r7, r3
10047198:	881b      	ldrh	r3, [r3, #0]
1004719a:	0018      	movs	r0, r3
1004719c:	193b      	adds	r3, r7, r4
1004719e:	881b      	ldrh	r3, [r3, #0]
100471a0:	1ac3      	subs	r3, r0, r3
100471a2:	429a      	cmp	r2, r3
100471a4:	dd00      	ble.n	100471a8 <ReadNextRecordNoLock+0xa0>
100471a6:	001a      	movs	r2, r3
100471a8:	687b      	ldr	r3, [r7, #4]
100471aa:	0018      	movs	r0, r3
100471ac:	f024 fd8e 	bl	1006bccc <memcpy>
  *size_p = data_len;
100471b0:	2316      	movs	r3, #22
100471b2:	18fb      	adds	r3, r7, r3
100471b4:	881a      	ldrh	r2, [r3, #0]
100471b6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
100471b8:	801a      	strh	r2, [r3, #0]

  return NVMDB_STATUS_OK;
100471ba:	2300      	movs	r3, #0
}
100471bc:	0018      	movs	r0, r3
100471be:	46bd      	mov	sp, r7
100471c0:	b009      	add	sp, #36	@ 0x24
100471c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100471c4 <write_data>:
  return TRUE;
}

/* flash_address must be word aligned. */
static void write_data(uint32_t flash_address, uint16_t data_length, const void *data)
{
100471c4:	b590      	push	{r4, r7, lr}
100471c6:	b089      	sub	sp, #36	@ 0x24
100471c8:	af00      	add	r7, sp, #0
100471ca:	60f8      	str	r0, [r7, #12]
100471cc:	607a      	str	r2, [r7, #4]
100471ce:	200a      	movs	r0, #10
100471d0:	183b      	adds	r3, r7, r0
100471d2:	1c0a      	adds	r2, r1, #0
100471d4:	801a      	strh	r2, [r3, #0]
  uint32_t word;
  uint16_t length_word;
  uint8_t rest;
  const uint8_t *data_8 = data;
100471d6:	687b      	ldr	r3, [r7, #4]
100471d8:	61bb      	str	r3, [r7, #24]

  length_word = (data_length >> 2) << 2;
100471da:	0001      	movs	r1, r0
100471dc:	187b      	adds	r3, r7, r1
100471de:	881b      	ldrh	r3, [r3, #0]
100471e0:	089b      	lsrs	r3, r3, #2
100471e2:	b29a      	uxth	r2, r3
100471e4:	2016      	movs	r0, #22
100471e6:	183b      	adds	r3, r7, r0
100471e8:	0092      	lsls	r2, r2, #2
100471ea:	801a      	strh	r2, [r3, #0]
  rest = data_length - length_word;
100471ec:	187b      	adds	r3, r7, r1
100471ee:	881b      	ldrh	r3, [r3, #0]
100471f0:	b2d9      	uxtb	r1, r3
100471f2:	183b      	adds	r3, r7, r0
100471f4:	881b      	ldrh	r3, [r3, #0]
100471f6:	b2da      	uxtb	r2, r3
100471f8:	2315      	movs	r3, #21
100471fa:	18fb      	adds	r3, r7, r3
100471fc:	1a8a      	subs	r2, r1, r2
100471fe:	701a      	strb	r2, [r3, #0]

  for(int i = 0; i < length_word; i += 4)
10047200:	2300      	movs	r3, #0
10047202:	61fb      	str	r3, [r7, #28]
10047204:	e013      	b.n	1004722e <write_data+0x6a>
  {
    memcpy(&word, data_8 + i, sizeof(word));
10047206:	69fb      	ldr	r3, [r7, #28]
10047208:	69ba      	ldr	r2, [r7, #24]
1004720a:	18d1      	adds	r1, r2, r3
1004720c:	2310      	movs	r3, #16
1004720e:	18fb      	adds	r3, r7, r3
10047210:	2204      	movs	r2, #4
10047212:	0018      	movs	r0, r3
10047214:	f024 fd5a 	bl	1006bccc <memcpy>
    NVMDB_FLASH_WRITE(flash_address + i, word);
10047218:	69fa      	ldr	r2, [r7, #28]
1004721a:	68fb      	ldr	r3, [r7, #12]
1004721c:	18d3      	adds	r3, r2, r3
1004721e:	693a      	ldr	r2, [r7, #16]
10047220:	0019      	movs	r1, r3
10047222:	2000      	movs	r0, #0
10047224:	f002 fdf2 	bl	10049e0c <HAL_FLASH_Program>
  for(int i = 0; i < length_word; i += 4)
10047228:	69fb      	ldr	r3, [r7, #28]
1004722a:	3304      	adds	r3, #4
1004722c:	61fb      	str	r3, [r7, #28]
1004722e:	2416      	movs	r4, #22
10047230:	193b      	adds	r3, r7, r4
10047232:	881b      	ldrh	r3, [r3, #0]
10047234:	69fa      	ldr	r2, [r7, #28]
10047236:	429a      	cmp	r2, r3
10047238:	dbe5      	blt.n	10047206 <write_data+0x42>
  }
  word = 0xFFFFFFFF;
1004723a:	2301      	movs	r3, #1
1004723c:	425b      	negs	r3, r3
1004723e:	613b      	str	r3, [r7, #16]
  memcpy(&word, data_8 + length_word, rest);
10047240:	193b      	adds	r3, r7, r4
10047242:	881b      	ldrh	r3, [r3, #0]
10047244:	69ba      	ldr	r2, [r7, #24]
10047246:	18d1      	adds	r1, r2, r3
10047248:	2315      	movs	r3, #21
1004724a:	18fb      	adds	r3, r7, r3
1004724c:	781a      	ldrb	r2, [r3, #0]
1004724e:	2310      	movs	r3, #16
10047250:	18fb      	adds	r3, r7, r3
10047252:	0018      	movs	r0, r3
10047254:	f024 fd3a 	bl	1006bccc <memcpy>
  NVMDB_FLASH_WRITE(flash_address + length_word, word);
10047258:	193b      	adds	r3, r7, r4
1004725a:	881a      	ldrh	r2, [r3, #0]
1004725c:	68fb      	ldr	r3, [r7, #12]
1004725e:	18d3      	adds	r3, r2, r3
10047260:	693a      	ldr	r2, [r7, #16]
10047262:	0019      	movs	r1, r3
10047264:	2000      	movs	r0, #0
10047266:	f002 fdd1 	bl	10049e0c <HAL_FLASH_Program>
}
1004726a:	46c0      	nop			@ (mov r8, r8)
1004726c:	46bd      	mov	sp, r7
1004726e:	b009      	add	sp, #36	@ 0x24
10047270:	bd90      	pop	{r4, r7, pc}

10047272 <WriteRecord>:

static NVMDB_status_t WriteRecord(uint32_t flash_address, uint8_t record_id, uint16_t data1_length, const void *data1, uint16_t data2_length, const void *data2)
{
10047272:	b5f0      	push	{r4, r5, r6, r7, lr}
10047274:	b087      	sub	sp, #28
10047276:	af00      	add	r7, sp, #0
10047278:	60f8      	str	r0, [r7, #12]
1004727a:	0008      	movs	r0, r1
1004727c:	0011      	movs	r1, r2
1004727e:	607b      	str	r3, [r7, #4]
10047280:	250b      	movs	r5, #11
10047282:	197b      	adds	r3, r7, r5
10047284:	1c02      	adds	r2, r0, #0
10047286:	701a      	strb	r2, [r3, #0]
10047288:	2408      	movs	r4, #8
1004728a:	193b      	adds	r3, r7, r4
1004728c:	1c0a      	adds	r2, r1, #0
1004728e:	801a      	strh	r2, [r3, #0]
  uint32_t word;
  NVMDB_RecordHeaderType *header_p = (NVMDB_RecordHeaderType *)&word;
10047290:	2310      	movs	r3, #16
10047292:	18fb      	adds	r3, r7, r3
10047294:	617b      	str	r3, [r7, #20]
#if NVM_CACHE
  int32_t needed_time;
#endif

  data1_length = ROUND4_R(data1_length); // Make sure data1_length is multiple of 4.
10047296:	193b      	adds	r3, r7, r4
10047298:	881b      	ldrh	r3, [r3, #0]
1004729a:	3b01      	subs	r3, #1
1004729c:	b29b      	uxth	r3, r3
1004729e:	b21b      	sxth	r3, r3
100472a0:	2203      	movs	r2, #3
100472a2:	4313      	orrs	r3, r2
100472a4:	b21b      	sxth	r3, r3
100472a6:	b29a      	uxth	r2, r3
100472a8:	193b      	adds	r3, r7, r4
100472aa:	3201      	adds	r2, #1
100472ac:	801a      	strh	r2, [r3, #0]

  header_p->valid_flag = VALID_RECORD;
100472ae:	697b      	ldr	r3, [r7, #20]
100472b0:	22fe      	movs	r2, #254	@ 0xfe
100472b2:	701a      	strb	r2, [r3, #0]
  header_p->record_id = record_id;
100472b4:	697b      	ldr	r3, [r7, #20]
100472b6:	197a      	adds	r2, r7, r5
100472b8:	7812      	ldrb	r2, [r2, #0]
100472ba:	705a      	strb	r2, [r3, #1]
  header_p->length = data1_length + data2_length;
100472bc:	193a      	adds	r2, r7, r4
100472be:	2520      	movs	r5, #32
100472c0:	2608      	movs	r6, #8
100472c2:	19ab      	adds	r3, r5, r6
100472c4:	2108      	movs	r1, #8
100472c6:	468c      	mov	ip, r1
100472c8:	44bc      	add	ip, r7
100472ca:	4463      	add	r3, ip
100472cc:	8812      	ldrh	r2, [r2, #0]
100472ce:	881b      	ldrh	r3, [r3, #0]
100472d0:	18d3      	adds	r3, r2, r3
100472d2:	b29a      	uxth	r2, r3
100472d4:	697b      	ldr	r3, [r7, #20]
100472d6:	805a      	strh	r2, [r3, #2]
  }
#endif

  DEBUG_GPIO_HIGH();

  NVMDB_FLASH_WRITE(flash_address, word);
100472d8:	693a      	ldr	r2, [r7, #16]
100472da:	68fb      	ldr	r3, [r7, #12]
100472dc:	0019      	movs	r1, r3
100472de:	2000      	movs	r0, #0
100472e0:	f002 fd94 	bl	10049e0c <HAL_FLASH_Program>

  write_data(flash_address + 4, data1_length, data1);
100472e4:	68fb      	ldr	r3, [r7, #12]
100472e6:	1d18      	adds	r0, r3, #4
100472e8:	687a      	ldr	r2, [r7, #4]
100472ea:	193b      	adds	r3, r7, r4
100472ec:	881b      	ldrh	r3, [r3, #0]
100472ee:	0019      	movs	r1, r3
100472f0:	f7ff ff68 	bl	100471c4 <write_data>
  write_data(flash_address + 4 + data1_length, data2_length, data2);
100472f4:	193b      	adds	r3, r7, r4
100472f6:	881a      	ldrh	r2, [r3, #0]
100472f8:	68fb      	ldr	r3, [r7, #12]
100472fa:	18d3      	adds	r3, r2, r3
100472fc:	1d18      	adds	r0, r3, #4
100472fe:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
10047300:	19ab      	adds	r3, r5, r6
10047302:	2108      	movs	r1, #8
10047304:	468c      	mov	ip, r1
10047306:	44bc      	add	ip, r7
10047308:	4463      	add	r3, ip
1004730a:	881b      	ldrh	r3, [r3, #0]
1004730c:	0019      	movs	r1, r3
1004730e:	f7ff ff59 	bl	100471c4 <write_data>
  DEBUG_GPIO_LOW();
#if NVM_CACHE
  ATOMIC_SECTION_END();
#endif

  return NVMDB_STATUS_OK;
10047312:	2300      	movs	r3, #0
}
10047314:	0018      	movs	r0, r3
10047316:	46bd      	mov	sp, r7
10047318:	b007      	add	sp, #28
1004731a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004731c <NVMDB_CompareCurrentRecord>:

int NVMDB_CompareCurrentRecord(NVMDB_HandleType *handle_p, NVMDB_RecordSizeType offset, const uint8_t *data_p, NVMDB_RecordSizeType size)
{
1004731c:	b580      	push	{r7, lr}
1004731e:	b086      	sub	sp, #24
10047320:	af00      	add	r7, sp, #0
10047322:	60f8      	str	r0, [r7, #12]
10047324:	0008      	movs	r0, r1
10047326:	607a      	str	r2, [r7, #4]
10047328:	0019      	movs	r1, r3
1004732a:	230a      	movs	r3, #10
1004732c:	18fb      	adds	r3, r7, r3
1004732e:	1c02      	adds	r2, r0, #0
10047330:	801a      	strh	r2, [r3, #0]
10047332:	2308      	movs	r3, #8
10047334:	18fb      	adds	r3, r7, r3
10047336:	1c0a      	adds	r2, r1, #0
10047338:	801a      	strh	r2, [r3, #0]
    }
  }

#endif

  record_p = (NVMDB_RecordType_ptr)handle_p->address;
1004733a:	68fb      	ldr	r3, [r7, #12]
1004733c:	685b      	ldr	r3, [r3, #4]
1004733e:	617b      	str	r3, [r7, #20]

  if(handle_p->address >= handle_p->end_address || record_p->header.valid_flag == NO_RECORD)
10047340:	68fb      	ldr	r3, [r7, #12]
10047342:	685a      	ldr	r2, [r3, #4]
10047344:	68fb      	ldr	r3, [r7, #12]
10047346:	689b      	ldr	r3, [r3, #8]
10047348:	429a      	cmp	r2, r3
1004734a:	d203      	bcs.n	10047354 <NVMDB_CompareCurrentRecord+0x38>
1004734c:	697b      	ldr	r3, [r7, #20]
1004734e:	781b      	ldrb	r3, [r3, #0]
10047350:	2bff      	cmp	r3, #255	@ 0xff
10047352:	d101      	bne.n	10047358 <NVMDB_CompareCurrentRecord+0x3c>
  {
    return NVMDB_STATUS_END_OF_DB;
10047354:	2304      	movs	r3, #4
10047356:	e02a      	b.n	100473ae <NVMDB_CompareCurrentRecord+0x92>
  }

  if(handle_p->first_read || record_p->header.valid_flag != VALID_RECORD)
10047358:	68fb      	ldr	r3, [r7, #12]
1004735a:	7b1b      	ldrb	r3, [r3, #12]
1004735c:	2b00      	cmp	r3, #0
1004735e:	d103      	bne.n	10047368 <NVMDB_CompareCurrentRecord+0x4c>
10047360:	697b      	ldr	r3, [r7, #20]
10047362:	781b      	ldrb	r3, [r3, #0]
10047364:	2bfe      	cmp	r3, #254	@ 0xfe
10047366:	d001      	beq.n	1004736c <NVMDB_CompareCurrentRecord+0x50>
  {
    return NVMDB_STATUS_INVALID_RECORD;
10047368:	2305      	movs	r3, #5
1004736a:	e020      	b.n	100473ae <NVMDB_CompareCurrentRecord+0x92>
      return NVMDB_STATUS_INVALID_RECORD;
    }
  }
#endif

  if(offset >= record_p->header.length)
1004736c:	697b      	ldr	r3, [r7, #20]
1004736e:	885b      	ldrh	r3, [r3, #2]
10047370:	220a      	movs	r2, #10
10047372:	18ba      	adds	r2, r7, r2
10047374:	8812      	ldrh	r2, [r2, #0]
10047376:	429a      	cmp	r2, r3
10047378:	d301      	bcc.n	1004737e <NVMDB_CompareCurrentRecord+0x62>
  {
    return NVMDB_STATUS_INVALID_OFFSET;
1004737a:	2306      	movs	r3, #6
1004737c:	e017      	b.n	100473ae <NVMDB_CompareCurrentRecord+0x92>
  }

  handle_p->first_read = FALSE;
1004737e:	68fb      	ldr	r3, [r7, #12]
10047380:	2200      	movs	r2, #0
10047382:	731a      	strb	r2, [r3, #12]

  if(memcmp(data_p, (uint8_t *)handle_p->address + RECORD_HEADER_SIZE + offset, size) == 0)
10047384:	230a      	movs	r3, #10
10047386:	18fb      	adds	r3, r7, r3
10047388:	881a      	ldrh	r2, [r3, #0]
1004738a:	68fb      	ldr	r3, [r7, #12]
1004738c:	685b      	ldr	r3, [r3, #4]
1004738e:	18d3      	adds	r3, r2, r3
10047390:	3304      	adds	r3, #4
10047392:	0019      	movs	r1, r3
10047394:	2308      	movs	r3, #8
10047396:	18fb      	adds	r3, r7, r3
10047398:	881a      	ldrh	r2, [r3, #0]
1004739a:	687b      	ldr	r3, [r7, #4]
1004739c:	0018      	movs	r0, r3
1004739e:	f024 fbe9 	bl	1006bb74 <memcmp>
100473a2:	1e03      	subs	r3, r0, #0
100473a4:	d101      	bne.n	100473aa <NVMDB_CompareCurrentRecord+0x8e>
  {
    return NVMDB_STATUS_OK;
100473a6:	2300      	movs	r3, #0
100473a8:	e001      	b.n	100473ae <NVMDB_CompareCurrentRecord+0x92>
  }
  else
  {
    return -1;
100473aa:	2301      	movs	r3, #1
100473ac:	425b      	negs	r3, r3
  }
}
100473ae:	0018      	movs	r0, r3
100473b0:	46bd      	mov	sp, r7
100473b2:	b006      	add	sp, #24
100473b4:	bd80      	pop	{r7, pc}

100473b6 <ReadCurrentRecordNoLock>:

static NVMDB_status_t ReadCurrentRecordNoLock(NVMDB_HandleType *handle_p, NVMDB_RecordSizeType offset, uint8_t *data_p, NVMDB_RecordSizeType max_size, NVMDB_RecordSizeType *size_p, NVMDB_RecordSizeType current_record_length)
{
100473b6:	b590      	push	{r4, r7, lr}
100473b8:	b087      	sub	sp, #28
100473ba:	af00      	add	r7, sp, #0
100473bc:	60f8      	str	r0, [r7, #12]
100473be:	0008      	movs	r0, r1
100473c0:	607a      	str	r2, [r7, #4]
100473c2:	0019      	movs	r1, r3
100473c4:	230a      	movs	r3, #10
100473c6:	18fb      	adds	r3, r7, r3
100473c8:	1c02      	adds	r2, r0, #0
100473ca:	801a      	strh	r2, [r3, #0]
100473cc:	2308      	movs	r3, #8
100473ce:	0018      	movs	r0, r3
100473d0:	18fb      	adds	r3, r7, r3
100473d2:	1c0a      	adds	r2, r1, #0
100473d4:	801a      	strh	r2, [r3, #0]
  NVMDB_RecordHeaderType header;
  NVMDB_RecordType_ptr record_p;

  *size_p = 0;
100473d6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
100473d8:	2200      	movs	r2, #0
100473da:	801a      	strh	r2, [r3, #0]
      return NVMDB_STATUS_INVALID_RECORD;
    }
  }
#endif

  if(current_record_length)
100473dc:	2224      	movs	r2, #36	@ 0x24
100473de:	1813      	adds	r3, r2, r0
100473e0:	19db      	adds	r3, r3, r7
100473e2:	881b      	ldrh	r3, [r3, #0]
100473e4:	2b00      	cmp	r3, #0
100473e6:	d00b      	beq.n	10047400 <ReadCurrentRecordNoLock+0x4a>
  {
    header.length = current_record_length;
100473e8:	2110      	movs	r1, #16
100473ea:	187b      	adds	r3, r7, r1
100473ec:	1812      	adds	r2, r2, r0
100473ee:	19d2      	adds	r2, r2, r7
100473f0:	8812      	ldrh	r2, [r2, #0]
100473f2:	805a      	strh	r2, [r3, #2]
    header.valid_flag = VALID_RECORD;
100473f4:	187b      	adds	r3, r7, r1
100473f6:	22fe      	movs	r2, #254	@ 0xfe
100473f8:	701a      	strb	r2, [r3, #0]
    record_p = (NVMDB_RecordType_ptr) & header;
100473fa:	187b      	adds	r3, r7, r1
100473fc:	617b      	str	r3, [r7, #20]
100473fe:	e002      	b.n	10047406 <ReadCurrentRecordNoLock+0x50>
  }
  else
  {
    record_p = (NVMDB_RecordType_ptr)handle_p->address;
10047400:	68fb      	ldr	r3, [r7, #12]
10047402:	685b      	ldr	r3, [r3, #4]
10047404:	617b      	str	r3, [r7, #20]
  }

  if(handle_p->address >= handle_p->end_address || record_p->header.valid_flag == NO_RECORD)
10047406:	68fb      	ldr	r3, [r7, #12]
10047408:	685a      	ldr	r2, [r3, #4]
1004740a:	68fb      	ldr	r3, [r7, #12]
1004740c:	689b      	ldr	r3, [r3, #8]
1004740e:	429a      	cmp	r2, r3
10047410:	d203      	bcs.n	1004741a <ReadCurrentRecordNoLock+0x64>
10047412:	697b      	ldr	r3, [r7, #20]
10047414:	781b      	ldrb	r3, [r3, #0]
10047416:	2bff      	cmp	r3, #255	@ 0xff
10047418:	d101      	bne.n	1004741e <ReadCurrentRecordNoLock+0x68>
  {
    return NVMDB_STATUS_END_OF_DB;
1004741a:	2304      	movs	r3, #4
1004741c:	e033      	b.n	10047486 <ReadCurrentRecordNoLock+0xd0>
  }

  if(handle_p->first_read || record_p->header.valid_flag != VALID_RECORD)
1004741e:	68fb      	ldr	r3, [r7, #12]
10047420:	7b1b      	ldrb	r3, [r3, #12]
10047422:	2b00      	cmp	r3, #0
10047424:	d103      	bne.n	1004742e <ReadCurrentRecordNoLock+0x78>
10047426:	697b      	ldr	r3, [r7, #20]
10047428:	781b      	ldrb	r3, [r3, #0]
1004742a:	2bfe      	cmp	r3, #254	@ 0xfe
1004742c:	d001      	beq.n	10047432 <ReadCurrentRecordNoLock+0x7c>
  {
    return NVMDB_STATUS_INVALID_RECORD;
1004742e:	2305      	movs	r3, #5
10047430:	e029      	b.n	10047486 <ReadCurrentRecordNoLock+0xd0>
      return NVMDB_STATUS_INVALID_RECORD;
    }
  }
#endif

  if(offset >= record_p->header.length)
10047432:	697b      	ldr	r3, [r7, #20]
10047434:	885b      	ldrh	r3, [r3, #2]
10047436:	220a      	movs	r2, #10
10047438:	18ba      	adds	r2, r7, r2
1004743a:	8812      	ldrh	r2, [r2, #0]
1004743c:	429a      	cmp	r2, r3
1004743e:	d301      	bcc.n	10047444 <ReadCurrentRecordNoLock+0x8e>
  {
    return NVMDB_STATUS_INVALID_OFFSET;
10047440:	2306      	movs	r3, #6
10047442:	e020      	b.n	10047486 <ReadCurrentRecordNoLock+0xd0>
  }

  handle_p->first_read = FALSE;
10047444:	68fb      	ldr	r3, [r7, #12]
10047446:	2200      	movs	r2, #0
10047448:	731a      	strb	r2, [r3, #12]

  memcpy(data_p, (uint8_t *)handle_p->address + RECORD_HEADER_SIZE + offset, MIN(record_p->header.length - offset, max_size));
1004744a:	240a      	movs	r4, #10
1004744c:	193b      	adds	r3, r7, r4
1004744e:	881a      	ldrh	r2, [r3, #0]
10047450:	68fb      	ldr	r3, [r7, #12]
10047452:	685b      	ldr	r3, [r3, #4]
10047454:	18d3      	adds	r3, r2, r3
10047456:	3304      	adds	r3, #4
10047458:	0018      	movs	r0, r3
1004745a:	2308      	movs	r3, #8
1004745c:	18fb      	adds	r3, r7, r3
1004745e:	881a      	ldrh	r2, [r3, #0]
10047460:	697b      	ldr	r3, [r7, #20]
10047462:	885b      	ldrh	r3, [r3, #2]
10047464:	0019      	movs	r1, r3
10047466:	193b      	adds	r3, r7, r4
10047468:	881b      	ldrh	r3, [r3, #0]
1004746a:	1acb      	subs	r3, r1, r3
1004746c:	429a      	cmp	r2, r3
1004746e:	dd00      	ble.n	10047472 <ReadCurrentRecordNoLock+0xbc>
10047470:	001a      	movs	r2, r3
10047472:	687b      	ldr	r3, [r7, #4]
10047474:	0001      	movs	r1, r0
10047476:	0018      	movs	r0, r3
10047478:	f024 fc28 	bl	1006bccc <memcpy>
  *size_p = record_p->header.length;
1004747c:	697b      	ldr	r3, [r7, #20]
1004747e:	885a      	ldrh	r2, [r3, #2]
10047480:	6abb      	ldr	r3, [r7, #40]	@ 0x28
10047482:	801a      	strh	r2, [r3, #0]

  return NVMDB_STATUS_OK;
10047484:	2300      	movs	r3, #0
}
10047486:	0018      	movs	r0, r3
10047488:	46bd      	mov	sp, r7
1004748a:	b007      	add	sp, #28
1004748c:	bd90      	pop	{r4, r7, pc}
	...

10047490 <InvalidateRecord>:

static NVMDB_status_t InvalidateRecord(uint32_t address)
{
10047490:	b580      	push	{r7, lr}
10047492:	b084      	sub	sp, #16
10047494:	af00      	add	r7, sp, #0
10047496:	6078      	str	r0, [r7, #4]
  uint32_t word = 0xFFFFFF00;
10047498:	4b06      	ldr	r3, [pc, #24]	@ (100474b4 <InvalidateRecord+0x24>)
1004749a:	60fb      	str	r3, [r7, #12]
    ATOMIC_SECTION_END();
    return NVMDB_STATUS_NOT_ENOUGH_TIME;
  }
#endif
  DEBUG_GPIO_HIGH();
  NVMDB_FLASH_WRITE(address, word);
1004749c:	68fa      	ldr	r2, [r7, #12]
1004749e:	687b      	ldr	r3, [r7, #4]
100474a0:	0019      	movs	r1, r3
100474a2:	2000      	movs	r0, #0
100474a4:	f002 fcb2 	bl	10049e0c <HAL_FLASH_Program>

#if NVM_CACHE
  ATOMIC_SECTION_END();
#endif

  return NVMDB_STATUS_OK;
100474a8:	2300      	movs	r3, #0
}
100474aa:	0018      	movs	r0, r3
100474ac:	46bd      	mov	sp, r7
100474ae:	b004      	add	sp, #16
100474b0:	bd80      	pop	{r7, pc}
100474b2:	46c0      	nop			@ (mov r8, r8)
100474b4:	ffffff00 	.word	0xffffff00

100474b8 <NVMDB_DeleteRecordNoCache>:

static NVMDB_status_t NVMDB_DeleteRecordNoCache(const NVMDB_HandleType *handle_p)
{
100474b8:	b5b0      	push	{r4, r5, r7, lr}
100474ba:	b084      	sub	sp, #16
100474bc:	af00      	add	r7, sp, #0
100474be:	6078      	str	r0, [r7, #4]
  NVMDB_RecordType *record_p;
  NVMDB_status_t status;

  record_p = (NVMDB_RecordType_ptr)handle_p->address;
100474c0:	687b      	ldr	r3, [r7, #4]
100474c2:	685b      	ldr	r3, [r3, #4]
100474c4:	60fb      	str	r3, [r7, #12]

  if(handle_p->address >= handle_p->end_address || record_p->header.valid_flag == NO_RECORD)
100474c6:	687b      	ldr	r3, [r7, #4]
100474c8:	685a      	ldr	r2, [r3, #4]
100474ca:	687b      	ldr	r3, [r7, #4]
100474cc:	689b      	ldr	r3, [r3, #8]
100474ce:	429a      	cmp	r2, r3
100474d0:	d203      	bcs.n	100474da <NVMDB_DeleteRecordNoCache+0x22>
100474d2:	68fb      	ldr	r3, [r7, #12]
100474d4:	781b      	ldrb	r3, [r3, #0]
100474d6:	2bff      	cmp	r3, #255	@ 0xff
100474d8:	d101      	bne.n	100474de <NVMDB_DeleteRecordNoCache+0x26>
  {
    return NVMDB_STATUS_END_OF_DB;
100474da:	2304      	movs	r3, #4
100474dc:	e041      	b.n	10047562 <NVMDB_DeleteRecordNoCache+0xaa>
  }
  if(record_p->header.valid_flag == VALID_RECORD)
100474de:	68fb      	ldr	r3, [r7, #12]
100474e0:	781b      	ldrb	r3, [r3, #0]
100474e2:	2bfe      	cmp	r3, #254	@ 0xfe
100474e4:	d13c      	bne.n	10047560 <NVMDB_DeleteRecordNoCache+0xa8>
  {

    status = InvalidateRecord((uint32_t)record_p);
100474e6:	68fb      	ldr	r3, [r7, #12]
100474e8:	250b      	movs	r5, #11
100474ea:	197c      	adds	r4, r7, r5
100474ec:	0018      	movs	r0, r3
100474ee:	f7ff ffcf 	bl	10047490 <InvalidateRecord>
100474f2:	0003      	movs	r3, r0
100474f4:	7023      	strb	r3, [r4, #0]
    if(status)
100474f6:	197b      	adds	r3, r7, r5
100474f8:	781b      	ldrb	r3, [r3, #0]
100474fa:	2b00      	cmp	r3, #0
100474fc:	d002      	beq.n	10047504 <NVMDB_DeleteRecordNoCache+0x4c>
    {
      return status;
100474fe:	197b      	adds	r3, r7, r5
10047500:	781b      	ldrb	r3, [r3, #0]
10047502:	e02e      	b.n	10047562 <NVMDB_DeleteRecordNoCache+0xaa>
    }

    DBInfo[handle_p->id].valid_records--;
10047504:	687b      	ldr	r3, [r7, #4]
10047506:	781b      	ldrb	r3, [r3, #0]
10047508:	001a      	movs	r2, r3
1004750a:	4918      	ldr	r1, [pc, #96]	@ (1004756c <NVMDB_DeleteRecordNoCache+0xb4>)
1004750c:	0013      	movs	r3, r2
1004750e:	009b      	lsls	r3, r3, #2
10047510:	189b      	adds	r3, r3, r2
10047512:	009b      	lsls	r3, r3, #2
10047514:	18cb      	adds	r3, r1, r3
10047516:	3308      	adds	r3, #8
10047518:	881b      	ldrh	r3, [r3, #0]
1004751a:	3b01      	subs	r3, #1
1004751c:	b298      	uxth	r0, r3
1004751e:	4913      	ldr	r1, [pc, #76]	@ (1004756c <NVMDB_DeleteRecordNoCache+0xb4>)
10047520:	0013      	movs	r3, r2
10047522:	009b      	lsls	r3, r3, #2
10047524:	189b      	adds	r3, r3, r2
10047526:	009b      	lsls	r3, r3, #2
10047528:	18cb      	adds	r3, r1, r3
1004752a:	3308      	adds	r3, #8
1004752c:	1c02      	adds	r2, r0, #0
1004752e:	801a      	strh	r2, [r3, #0]
    DBInfo[handle_p->id].invalid_records++;
10047530:	687b      	ldr	r3, [r7, #4]
10047532:	781b      	ldrb	r3, [r3, #0]
10047534:	001a      	movs	r2, r3
10047536:	490d      	ldr	r1, [pc, #52]	@ (1004756c <NVMDB_DeleteRecordNoCache+0xb4>)
10047538:	0013      	movs	r3, r2
1004753a:	009b      	lsls	r3, r3, #2
1004753c:	189b      	adds	r3, r3, r2
1004753e:	009b      	lsls	r3, r3, #2
10047540:	18cb      	adds	r3, r1, r3
10047542:	330a      	adds	r3, #10
10047544:	881b      	ldrh	r3, [r3, #0]
10047546:	3301      	adds	r3, #1
10047548:	b298      	uxth	r0, r3
1004754a:	4908      	ldr	r1, [pc, #32]	@ (1004756c <NVMDB_DeleteRecordNoCache+0xb4>)
1004754c:	0013      	movs	r3, r2
1004754e:	009b      	lsls	r3, r3, #2
10047550:	189b      	adds	r3, r3, r2
10047552:	009b      	lsls	r3, r3, #2
10047554:	18cb      	adds	r3, r1, r3
10047556:	330a      	adds	r3, #10
10047558:	1c02      	adds	r2, r0, #0
1004755a:	801a      	strh	r2, [r3, #0]

    return NVMDB_STATUS_OK;
1004755c:	2300      	movs	r3, #0
1004755e:	e000      	b.n	10047562 <NVMDB_DeleteRecordNoCache+0xaa>
  }
  else
  {
    return NVMDB_STATUS_INVALID_RECORD;
10047560:	2305      	movs	r3, #5
  }
}
10047562:	0018      	movs	r0, r3
10047564:	46bd      	mov	sp, r7
10047566:	b004      	add	sp, #16
10047568:	bdb0      	pop	{r4, r5, r7, pc}
1004756a:	46c0      	nop			@ (mov r8, r8)
1004756c:	20000594 	.word	0x20000594

10047570 <ErasePage>:

static void ErasePage(uint32_t address, uint8_t num_pages)
{
10047570:	b580      	push	{r7, lr}
10047572:	b088      	sub	sp, #32
10047574:	af00      	add	r7, sp, #0
10047576:	6078      	str	r0, [r7, #4]
10047578:	000a      	movs	r2, r1
1004757a:	1cfb      	adds	r3, r7, #3
1004757c:	701a      	strb	r2, [r3, #0]
  int page_num = (address - _MEMORY_FLASH_BEGIN_) / PAGE_SIZE;
1004757e:	687b      	ldr	r3, [r7, #4]
10047580:	4a0d      	ldr	r2, [pc, #52]	@ (100475b8 <ErasePage+0x48>)
10047582:	4694      	mov	ip, r2
10047584:	4463      	add	r3, ip
10047586:	0adb      	lsrs	r3, r3, #11
10047588:	61fb      	str	r3, [r7, #28]

  DEBUG_GPIO_HIGH();
  NVMDB_FLASH_ERASE_PAGE(page_num, num_pages);
1004758a:	2110      	movs	r1, #16
1004758c:	187b      	adds	r3, r7, r1
1004758e:	2200      	movs	r2, #0
10047590:	601a      	str	r2, [r3, #0]
10047592:	69fa      	ldr	r2, [r7, #28]
10047594:	187b      	adds	r3, r7, r1
10047596:	605a      	str	r2, [r3, #4]
10047598:	1cfb      	adds	r3, r7, #3
1004759a:	781a      	ldrb	r2, [r3, #0]
1004759c:	187b      	adds	r3, r7, r1
1004759e:	609a      	str	r2, [r3, #8]
100475a0:	230c      	movs	r3, #12
100475a2:	18fa      	adds	r2, r7, r3
100475a4:	187b      	adds	r3, r7, r1
100475a6:	0011      	movs	r1, r2
100475a8:	0018      	movs	r0, r3
100475aa:	f002 fd09 	bl	10049fc0 <HAL_FLASHEx_Erase>
  DEBUG_GPIO_LOW();
}
100475ae:	46c0      	nop			@ (mov r8, r8)
100475b0:	46bd      	mov	sp, r7
100475b2:	b008      	add	sp, #32
100475b4:	bd80      	pop	{r7, pc}
100475b6:	46c0      	nop			@ (mov r8, r8)
100475b8:	effc0000 	.word	0xeffc0000

100475bc <WriteBufferToFlash>:

/* Size of data must be multiple of 4. This function also erases the page if needed. */
static void WriteBufferToFlash(uint32_t address, uint32_t *data, uint32_t size)
{
100475bc:	b580      	push	{r7, lr}
100475be:	b086      	sub	sp, #24
100475c0:	af00      	add	r7, sp, #0
100475c2:	60f8      	str	r0, [r7, #12]
100475c4:	60b9      	str	r1, [r7, #8]
100475c6:	607a      	str	r2, [r7, #4]
  /* Check if we are writing the same data in entire pages.
     If size is less than a page size, we need to erase the page to clean it. */
  if((size % PAGE_SIZE) == 0 && memcmp((uint8_t *)address, data, size) == 0)
100475c8:	687b      	ldr	r3, [r7, #4]
100475ca:	055b      	lsls	r3, r3, #21
100475cc:	0d5b      	lsrs	r3, r3, #21
100475ce:	d107      	bne.n	100475e0 <WriteBufferToFlash+0x24>
100475d0:	68fb      	ldr	r3, [r7, #12]
100475d2:	687a      	ldr	r2, [r7, #4]
100475d4:	68b9      	ldr	r1, [r7, #8]
100475d6:	0018      	movs	r0, r3
100475d8:	f024 facc 	bl	1006bb74 <memcmp>
100475dc:	1e03      	subs	r3, r0, #0
100475de:	d026      	beq.n	1004762e <WriteBufferToFlash+0x72>
  {
    return;
  }

  ErasePage(address, ROUNDPAGE_R(size) / PAGE_SIZE);
100475e0:	687b      	ldr	r3, [r7, #4]
100475e2:	3b01      	subs	r3, #1
100475e4:	4a14      	ldr	r2, [pc, #80]	@ (10047638 <WriteBufferToFlash+0x7c>)
100475e6:	4313      	orrs	r3, r2
100475e8:	3301      	adds	r3, #1
100475ea:	0adb      	lsrs	r3, r3, #11
100475ec:	b2da      	uxtb	r2, r3
100475ee:	68fb      	ldr	r3, [r7, #12]
100475f0:	0011      	movs	r1, r2
100475f2:	0018      	movs	r0, r3
100475f4:	f7ff ffbc 	bl	10047570 <ErasePage>

  DEBUG_GPIO_HIGH();
  for(int i = 0; i < size; i += 4)
100475f8:	2300      	movs	r3, #0
100475fa:	617b      	str	r3, [r7, #20]
100475fc:	e012      	b.n	10047624 <WriteBufferToFlash+0x68>
  {
    NVMDB_FLASH_WRITE(address + i, data[i / 4]);
100475fe:	697a      	ldr	r2, [r7, #20]
10047600:	68fb      	ldr	r3, [r7, #12]
10047602:	18d1      	adds	r1, r2, r3
10047604:	697b      	ldr	r3, [r7, #20]
10047606:	2b00      	cmp	r3, #0
10047608:	da00      	bge.n	1004760c <WriteBufferToFlash+0x50>
1004760a:	3303      	adds	r3, #3
1004760c:	109b      	asrs	r3, r3, #2
1004760e:	009b      	lsls	r3, r3, #2
10047610:	68ba      	ldr	r2, [r7, #8]
10047612:	18d3      	adds	r3, r2, r3
10047614:	681b      	ldr	r3, [r3, #0]
10047616:	001a      	movs	r2, r3
10047618:	2000      	movs	r0, #0
1004761a:	f002 fbf7 	bl	10049e0c <HAL_FLASH_Program>
  for(int i = 0; i < size; i += 4)
1004761e:	697b      	ldr	r3, [r7, #20]
10047620:	3304      	adds	r3, #4
10047622:	617b      	str	r3, [r7, #20]
10047624:	697b      	ldr	r3, [r7, #20]
10047626:	687a      	ldr	r2, [r7, #4]
10047628:	429a      	cmp	r2, r3
1004762a:	d8e8      	bhi.n	100475fe <WriteBufferToFlash+0x42>
1004762c:	e000      	b.n	10047630 <WriteBufferToFlash+0x74>
    return;
1004762e:	46c0      	nop			@ (mov r8, r8)
  }
  DEBUG_GPIO_LOW();
}
10047630:	46bd      	mov	sp, r7
10047632:	b006      	add	sp, #24
10047634:	bd80      	pop	{r7, pc}
10047636:	46c0      	nop			@ (mov r8, r8)
10047638:	000007ff 	.word	0x000007ff

1004763c <InitReadState>:

static void InitReadState(ReadStateType *state_p)
{
1004763c:	b580      	push	{r7, lr}
1004763e:	b082      	sub	sp, #8
10047640:	af00      	add	r7, sp, #0
10047642:	6078      	str	r0, [r7, #4]
  state_p->move_to_next_record = TRUE;
10047644:	687b      	ldr	r3, [r7, #4]
10047646:	2201      	movs	r2, #1
10047648:	701a      	strb	r2, [r3, #0]
  state_p->record_offset = 0;
1004764a:	687b      	ldr	r3, [r7, #4]
1004764c:	2200      	movs	r2, #0
1004764e:	805a      	strh	r2, [r3, #2]
  state_p->record_length = 0;
10047650:	687b      	ldr	r3, [r7, #4]
10047652:	2200      	movs	r2, #0
10047654:	809a      	strh	r2, [r3, #4]
}
10047656:	46c0      	nop			@ (mov r8, r8)
10047658:	46bd      	mov	sp, r7
1004765a:	b002      	add	sp, #8
1004765c:	bd80      	pop	{r7, pc}

1004765e <LoadDBToRAM>:
/* Call InitReadState() to initialize read_state before passing it to the function to start loading data from the database.
   This function returns NVMDB_STATUS_OK if other calls must be done to the same function to continue reading the database.
   Pass the same read_state variable to the function if calling it again to continue reading from the same database. */

static NVMDB_status_t LoadDBToRAM(NVMDB_HandleType *handle_p, uint8_t *buff, uint16_t buff_size, uint16_t *num_read_bytes_p, ReadStateType *read_state)
{
1004765e:	b5f0      	push	{r4, r5, r6, r7, lr}
10047660:	b08d      	sub	sp, #52	@ 0x34
10047662:	af04      	add	r7, sp, #16
10047664:	60f8      	str	r0, [r7, #12]
10047666:	60b9      	str	r1, [r7, #8]
10047668:	603b      	str	r3, [r7, #0]
1004766a:	1dbb      	adds	r3, r7, #6
1004766c:	801a      	strh	r2, [r3, #0]
  NVMDB_status_t status;
  uint16_t free_buffer_size;
  NVMDB_RecordSizeType record_size, remaining_record_bytes;
  NVMDB_RecordHeaderType header;
  uint16_t index = 0;
1004766e:	231e      	movs	r3, #30
10047670:	18fb      	adds	r3, r7, r3
10047672:	2200      	movs	r2, #0
10047674:	801a      	strh	r2, [r3, #0]

  memset(buff, 0xFF, buff_size);
10047676:	1dbb      	adds	r3, r7, #6
10047678:	881a      	ldrh	r2, [r3, #0]
1004767a:	68bb      	ldr	r3, [r7, #8]
1004767c:	21ff      	movs	r1, #255	@ 0xff
1004767e:	0018      	movs	r0, r3
10047680:	f024 fa86 	bl	1006bb90 <memset>

  header.valid_flag = VALID_RECORD;
10047684:	2310      	movs	r3, #16
10047686:	18fb      	adds	r3, r7, r3
10047688:	22fe      	movs	r2, #254	@ 0xfe
1004768a:	701a      	strb	r2, [r3, #0]

  while(1)
  {

    free_buffer_size = buff_size - index - RECORD_HEADER_SIZE;
1004768c:	1dba      	adds	r2, r7, #6
1004768e:	251e      	movs	r5, #30
10047690:	197b      	adds	r3, r7, r5
10047692:	8812      	ldrh	r2, [r2, #0]
10047694:	881b      	ldrh	r3, [r3, #0]
10047696:	1ad3      	subs	r3, r2, r3
10047698:	b29a      	uxth	r2, r3
1004769a:	231c      	movs	r3, #28
1004769c:	18fb      	adds	r3, r7, r3
1004769e:	3a04      	subs	r2, #4
100476a0:	801a      	strh	r2, [r3, #0]

    // Read the record
    if(read_state->move_to_next_record)
100476a2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100476a4:	781b      	ldrb	r3, [r3, #0]
100476a6:	2b00      	cmp	r3, #0
100476a8:	d04e      	beq.n	10047748 <LoadDBToRAM+0xea>
    {
      /* Passing read_state->record_length to the function because we do not want
         the function to retrieve the info from the header of the current record,
         since it may not be anymore in the same position in flash. */
      status = ReadNextRecordNoLock(handle_p, ALL_TYPES, 0, buff + index + RECORD_HEADER_SIZE, free_buffer_size, &record_size, read_state->record_length, &header.record_id);
100476aa:	197b      	adds	r3, r7, r5
100476ac:	881b      	ldrh	r3, [r3, #0]
100476ae:	3304      	adds	r3, #4
100476b0:	68ba      	ldr	r2, [r7, #8]
100476b2:	18d1      	adds	r1, r2, r3
100476b4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100476b6:	889b      	ldrh	r3, [r3, #4]
100476b8:	261b      	movs	r6, #27
100476ba:	19bc      	adds	r4, r7, r6
100476bc:	68f8      	ldr	r0, [r7, #12]
100476be:	2210      	movs	r2, #16
100476c0:	18ba      	adds	r2, r7, r2
100476c2:	3201      	adds	r2, #1
100476c4:	9203      	str	r2, [sp, #12]
100476c6:	9302      	str	r3, [sp, #8]
100476c8:	2216      	movs	r2, #22
100476ca:	18bb      	adds	r3, r7, r2
100476cc:	9301      	str	r3, [sp, #4]
100476ce:	231c      	movs	r3, #28
100476d0:	18fb      	adds	r3, r7, r3
100476d2:	881b      	ldrh	r3, [r3, #0]
100476d4:	9300      	str	r3, [sp, #0]
100476d6:	000b      	movs	r3, r1
100476d8:	2200      	movs	r2, #0
100476da:	21ff      	movs	r1, #255	@ 0xff
100476dc:	f7ff fd14 	bl	10047108 <ReadNextRecordNoLock>
100476e0:	0003      	movs	r3, r0
100476e2:	7023      	strb	r3, [r4, #0]
      read_state->record_length = record_size;
100476e4:	2216      	movs	r2, #22
100476e6:	18bb      	adds	r3, r7, r2
100476e8:	881a      	ldrh	r2, [r3, #0]
100476ea:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100476ec:	809a      	strh	r2, [r3, #4]

      if(status != NVMDB_STATUS_OK)
100476ee:	19bb      	adds	r3, r7, r6
100476f0:	781b      	ldrb	r3, [r3, #0]
100476f2:	2b00      	cmp	r3, #0
100476f4:	d006      	beq.n	10047704 <LoadDBToRAM+0xa6>
      {
        *num_read_bytes_p = index;
100476f6:	683b      	ldr	r3, [r7, #0]
100476f8:	197a      	adds	r2, r7, r5
100476fa:	8812      	ldrh	r2, [r2, #0]
100476fc:	801a      	strh	r2, [r3, #0]
        return status;
100476fe:	19bb      	adds	r3, r7, r6
10047700:	781b      	ldrb	r3, [r3, #0]
10047702:	e0a1      	b.n	10047848 <LoadDBToRAM+0x1ea>
      }

      // Prepare the header and copy it to buffer
      header.length = record_size;
10047704:	2316      	movs	r3, #22
10047706:	18fb      	adds	r3, r7, r3
10047708:	881a      	ldrh	r2, [r3, #0]
1004770a:	2110      	movs	r1, #16
1004770c:	187b      	adds	r3, r7, r1
1004770e:	805a      	strh	r2, [r3, #2]
      memcpy(buff + index, &header, RECORD_HEADER_SIZE);
10047710:	251e      	movs	r5, #30
10047712:	197b      	adds	r3, r7, r5
10047714:	881b      	ldrh	r3, [r3, #0]
10047716:	68ba      	ldr	r2, [r7, #8]
10047718:	18d3      	adds	r3, r2, r3
1004771a:	000c      	movs	r4, r1
1004771c:	1879      	adds	r1, r7, r1
1004771e:	2204      	movs	r2, #4
10047720:	0018      	movs	r0, r3
10047722:	f024 fad3 	bl	1006bccc <memcpy>
      index += ROUND4_R(header.length + RECORD_HEADER_SIZE);
10047726:	193b      	adds	r3, r7, r4
10047728:	885b      	ldrh	r3, [r3, #2]
1004772a:	3303      	adds	r3, #3
1004772c:	b29b      	uxth	r3, r3
1004772e:	b21b      	sxth	r3, r3
10047730:	2203      	movs	r2, #3
10047732:	4313      	orrs	r3, r2
10047734:	b21b      	sxth	r3, r3
10047736:	b29a      	uxth	r2, r3
10047738:	197b      	adds	r3, r7, r5
1004773a:	881b      	ldrh	r3, [r3, #0]
1004773c:	18d3      	adds	r3, r2, r3
1004773e:	b29a      	uxth	r2, r3
10047740:	197b      	adds	r3, r7, r5
10047742:	3201      	adds	r2, #1
10047744:	801a      	strh	r2, [r3, #0]
10047746:	e031      	b.n	100477ac <LoadDBToRAM+0x14e>
    }
    else
    {

      status = ReadCurrentRecordNoLock(handle_p, read_state->record_offset, buff + index, free_buffer_size, &record_size, read_state->record_length); // It will not read record in cache because this operation is not allowed if there are any.
10047748:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1004774a:	8859      	ldrh	r1, [r3, #2]
1004774c:	231e      	movs	r3, #30
1004774e:	18fb      	adds	r3, r7, r3
10047750:	881b      	ldrh	r3, [r3, #0]
10047752:	68ba      	ldr	r2, [r7, #8]
10047754:	18d5      	adds	r5, r2, r3
10047756:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10047758:	889b      	ldrh	r3, [r3, #4]
1004775a:	261b      	movs	r6, #27
1004775c:	19bc      	adds	r4, r7, r6
1004775e:	221c      	movs	r2, #28
10047760:	18ba      	adds	r2, r7, r2
10047762:	8812      	ldrh	r2, [r2, #0]
10047764:	68f8      	ldr	r0, [r7, #12]
10047766:	9301      	str	r3, [sp, #4]
10047768:	2316      	movs	r3, #22
1004776a:	18fb      	adds	r3, r7, r3
1004776c:	9300      	str	r3, [sp, #0]
1004776e:	0013      	movs	r3, r2
10047770:	002a      	movs	r2, r5
10047772:	f7ff fe20 	bl	100473b6 <ReadCurrentRecordNoLock>
10047776:	0003      	movs	r3, r0
10047778:	7023      	strb	r3, [r4, #0]

      if(status != NVMDB_STATUS_OK)
1004777a:	19bb      	adds	r3, r7, r6
1004777c:	781b      	ldrb	r3, [r3, #0]
1004777e:	2b00      	cmp	r3, #0
10047780:	d002      	beq.n	10047788 <LoadDBToRAM+0x12a>
      {
        // This should not happen
        return status;
10047782:	19bb      	adds	r3, r7, r6
10047784:	781b      	ldrb	r3, [r3, #0]
10047786:	e05f      	b.n	10047848 <LoadDBToRAM+0x1ea>
      }
      index = ROUND4_R(record_size - read_state->record_offset);
10047788:	2316      	movs	r3, #22
1004778a:	18fb      	adds	r3, r7, r3
1004778c:	881a      	ldrh	r2, [r3, #0]
1004778e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10047790:	885b      	ldrh	r3, [r3, #2]
10047792:	1ad3      	subs	r3, r2, r3
10047794:	b29b      	uxth	r3, r3
10047796:	3b01      	subs	r3, #1
10047798:	b29b      	uxth	r3, r3
1004779a:	b21b      	sxth	r3, r3
1004779c:	2203      	movs	r2, #3
1004779e:	4313      	orrs	r3, r2
100477a0:	b21b      	sxth	r3, r3
100477a2:	b29a      	uxth	r2, r3
100477a4:	231e      	movs	r3, #30
100477a6:	18fb      	adds	r3, r7, r3
100477a8:	3201      	adds	r2, #1
100477aa:	801a      	strh	r2, [r3, #0]
    }

    // The number of remaining bytes for the current record that were to be read before calling last NVMDB_ReadNextRecord().
    // Rounded to the next multiple of 4 to find out if buffer can now be written inside the page or not.
    remaining_record_bytes = ROUND4_R(record_size - read_state->record_offset);
100477ac:	2316      	movs	r3, #22
100477ae:	18fb      	adds	r3, r7, r3
100477b0:	881a      	ldrh	r2, [r3, #0]
100477b2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100477b4:	885b      	ldrh	r3, [r3, #2]
100477b6:	1ad3      	subs	r3, r2, r3
100477b8:	b29b      	uxth	r3, r3
100477ba:	3b01      	subs	r3, #1
100477bc:	b29b      	uxth	r3, r3
100477be:	b21b      	sxth	r3, r3
100477c0:	2203      	movs	r2, #3
100477c2:	4313      	orrs	r3, r2
100477c4:	b21b      	sxth	r3, r3
100477c6:	b29a      	uxth	r2, r3
100477c8:	2118      	movs	r1, #24
100477ca:	187b      	adds	r3, r7, r1
100477cc:	3201      	adds	r2, #1
100477ce:	801a      	strh	r2, [r3, #0]

    if(remaining_record_bytes > free_buffer_size)
100477d0:	187a      	adds	r2, r7, r1
100477d2:	211c      	movs	r1, #28
100477d4:	187b      	adds	r3, r7, r1
100477d6:	8812      	ldrh	r2, [r2, #0]
100477d8:	881b      	ldrh	r3, [r3, #0]
100477da:	429a      	cmp	r2, r3
100477dc:	d910      	bls.n	10047800 <LoadDBToRAM+0x1a2>
    {
      // Not able to read the entire record.
      read_state->move_to_next_record = FALSE;
100477de:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100477e0:	2200      	movs	r2, #0
100477e2:	701a      	strb	r2, [r3, #0]
      read_state->record_offset += free_buffer_size;
100477e4:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100477e6:	885a      	ldrh	r2, [r3, #2]
100477e8:	187b      	adds	r3, r7, r1
100477ea:	881b      	ldrh	r3, [r3, #0]
100477ec:	18d3      	adds	r3, r2, r3
100477ee:	b29a      	uxth	r2, r3
100477f0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
100477f2:	805a      	strh	r2, [r3, #2]
      *num_read_bytes_p = buff_size;
100477f4:	683b      	ldr	r3, [r7, #0]
100477f6:	1dba      	adds	r2, r7, #6
100477f8:	8812      	ldrh	r2, [r2, #0]
100477fa:	801a      	strh	r2, [r3, #0]
      return NVMDB_STATUS_OK;
100477fc:	2300      	movs	r3, #0
100477fe:	e023      	b.n	10047848 <LoadDBToRAM+0x1ea>
    }
    else if(remaining_record_bytes == free_buffer_size)
10047800:	2318      	movs	r3, #24
10047802:	18fa      	adds	r2, r7, r3
10047804:	231c      	movs	r3, #28
10047806:	18fb      	adds	r3, r7, r3
10047808:	8812      	ldrh	r2, [r2, #0]
1004780a:	881b      	ldrh	r3, [r3, #0]
1004780c:	429a      	cmp	r2, r3
1004780e:	d10b      	bne.n	10047828 <LoadDBToRAM+0x1ca>
    {
      read_state->move_to_next_record = TRUE;
10047810:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10047812:	2201      	movs	r2, #1
10047814:	701a      	strb	r2, [r3, #0]
      read_state->record_offset = 0;
10047816:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10047818:	2200      	movs	r2, #0
1004781a:	805a      	strh	r2, [r3, #2]
      *num_read_bytes_p = buff_size;
1004781c:	683b      	ldr	r3, [r7, #0]
1004781e:	1dba      	adds	r2, r7, #6
10047820:	8812      	ldrh	r2, [r2, #0]
10047822:	801a      	strh	r2, [r3, #0]
      return NVMDB_STATUS_OK;
10047824:	2300      	movs	r3, #0
10047826:	e00f      	b.n	10047848 <LoadDBToRAM+0x1ea>
    }
    else if(remaining_record_bytes < free_buffer_size)
10047828:	2318      	movs	r3, #24
1004782a:	18fa      	adds	r2, r7, r3
1004782c:	231c      	movs	r3, #28
1004782e:	18fb      	adds	r3, r7, r3
10047830:	8812      	ldrh	r2, [r2, #0]
10047832:	881b      	ldrh	r3, [r3, #0]
10047834:	429a      	cmp	r2, r3
10047836:	d300      	bcc.n	1004783a <LoadDBToRAM+0x1dc>
10047838:	e728      	b.n	1004768c <LoadDBToRAM+0x2e>
    {
      read_state->move_to_next_record = TRUE;
1004783a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1004783c:	2201      	movs	r2, #1
1004783e:	701a      	strb	r2, [r3, #0]
      read_state->record_offset = 0;
10047840:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
10047842:	2200      	movs	r2, #0
10047844:	805a      	strh	r2, [r3, #2]
    free_buffer_size = buff_size - index - RECORD_HEADER_SIZE;
10047846:	e721      	b.n	1004768c <LoadDBToRAM+0x2e>
    }
  }
}
10047848:	0018      	movs	r0, r3
1004784a:	46bd      	mov	sp, r7
1004784c:	b009      	add	sp, #36	@ 0x24
1004784e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10047850 <CleanLargeDB>:
// No inline to avoid allocating NVM_buffer multiple times at the same time.
__NOINLINE static NVMDB_status_t CleanLargeDB(NVMDB_IdType NVMDB_id)
{
10047850:	b5f0      	push	{r4, r5, r6, r7, lr}
10047852:	4c60      	ldr	r4, [pc, #384]	@ (100479d4 <CleanLargeDB+0x184>)
10047854:	44a5      	add	sp, r4
10047856:	af02      	add	r7, sp, #8
10047858:	0002      	movs	r2, r0
1004785a:	4b5f      	ldr	r3, [pc, #380]	@ (100479d8 <CleanLargeDB+0x188>)
1004785c:	2184      	movs	r1, #132	@ 0x84
1004785e:	0109      	lsls	r1, r1, #4
10047860:	185b      	adds	r3, r3, r1
10047862:	19db      	adds	r3, r3, r7
10047864:	701a      	strb	r2, [r3, #0]
  ReadStateType previous_state;
  int32_t needed_time;
  uint8_t clean_started = FALSE;
#endif

  if(!DBInfo[NVMDB_id].invalid_records)
10047866:	4b5c      	ldr	r3, [pc, #368]	@ (100479d8 <CleanLargeDB+0x188>)
10047868:	185b      	adds	r3, r3, r1
1004786a:	19db      	adds	r3, r3, r7
1004786c:	781a      	ldrb	r2, [r3, #0]
1004786e:	495b      	ldr	r1, [pc, #364]	@ (100479dc <CleanLargeDB+0x18c>)
10047870:	0013      	movs	r3, r2
10047872:	009b      	lsls	r3, r3, #2
10047874:	189b      	adds	r3, r3, r2
10047876:	009b      	lsls	r3, r3, #2
10047878:	18cb      	adds	r3, r1, r3
1004787a:	330a      	adds	r3, #10
1004787c:	881b      	ldrh	r3, [r3, #0]
1004787e:	2b00      	cmp	r3, #0
10047880:	d101      	bne.n	10047886 <CleanLargeDB+0x36>
  {
    return NVMDB_STATUS_OK;
10047882:	2300      	movs	r3, #0
10047884:	e0a0      	b.n	100479c8 <CleanLargeDB+0x178>
  {
    return NVMDB_STATUS_CACHE_FULL;
  }
#endif

  status = NVMDB_HandleInit(NVMDB_id, &handle);
10047886:	4b56      	ldr	r3, [pc, #344]	@ (100479e0 <CleanLargeDB+0x190>)
10047888:	18fc      	adds	r4, r7, r3
1004788a:	4d56      	ldr	r5, [pc, #344]	@ (100479e4 <CleanLargeDB+0x194>)
1004788c:	197a      	adds	r2, r7, r5
1004788e:	4b52      	ldr	r3, [pc, #328]	@ (100479d8 <CleanLargeDB+0x188>)
10047890:	2184      	movs	r1, #132	@ 0x84
10047892:	0109      	lsls	r1, r1, #4
10047894:	185b      	adds	r3, r3, r1
10047896:	19db      	adds	r3, r3, r7
10047898:	781b      	ldrb	r3, [r3, #0]
1004789a:	0011      	movs	r1, r2
1004789c:	0018      	movs	r0, r3
1004789e:	f000 fcd3 	bl	10048248 <NVMDB_HandleInit>
100478a2:	0003      	movs	r3, r0
100478a4:	7023      	strb	r3, [r4, #0]
  flash_write_address = (uint32_t)handle.address;
100478a6:	197b      	adds	r3, r7, r5
100478a8:	685b      	ldr	r3, [r3, #4]
100478aa:	4a4f      	ldr	r2, [pc, #316]	@ (100479e8 <CleanLargeDB+0x198>)
100478ac:	18ba      	adds	r2, r7, r2
100478ae:	6013      	str	r3, [r2, #0]

  InitReadState(&state);
100478b0:	4b4e      	ldr	r3, [pc, #312]	@ (100479ec <CleanLargeDB+0x19c>)
100478b2:	18fb      	adds	r3, r7, r3
100478b4:	0018      	movs	r0, r3
100478b6:	f7ff fec1 	bl	1004763c <InitReadState>
#if NVM_CACHE
    previous_state = state;
    previous_handle = handle;
#endif

    status = LoadDBToRAM(&handle, NVM_buffer, sizeof(NVM_buffer), &num_read_bytes, &state);
100478ba:	4e49      	ldr	r6, [pc, #292]	@ (100479e0 <CleanLargeDB+0x190>)
100478bc:	19bc      	adds	r4, r7, r6
100478be:	4b4c      	ldr	r3, [pc, #304]	@ (100479f0 <CleanLargeDB+0x1a0>)
100478c0:	18fd      	adds	r5, r7, r3
100478c2:	2380      	movs	r3, #128	@ 0x80
100478c4:	011a      	lsls	r2, r3, #4
100478c6:	230c      	movs	r3, #12
100478c8:	18f9      	adds	r1, r7, r3
100478ca:	4b46      	ldr	r3, [pc, #280]	@ (100479e4 <CleanLargeDB+0x194>)
100478cc:	18f8      	adds	r0, r7, r3
100478ce:	4b47      	ldr	r3, [pc, #284]	@ (100479ec <CleanLargeDB+0x19c>)
100478d0:	18fb      	adds	r3, r7, r3
100478d2:	9300      	str	r3, [sp, #0]
100478d4:	002b      	movs	r3, r5
100478d6:	f7ff fec2 	bl	1004765e <LoadDBToRAM>
100478da:	0003      	movs	r3, r0
100478dc:	7023      	strb	r3, [r4, #0]
    if(status != NVMDB_STATUS_END_OF_DB && status != NVMDB_STATUS_OK) // No other error codes are expected. This should not happen.
100478de:	19bb      	adds	r3, r7, r6
100478e0:	781b      	ldrb	r3, [r3, #0]
100478e2:	2b04      	cmp	r3, #4
100478e4:	d006      	beq.n	100478f4 <CleanLargeDB+0xa4>
100478e6:	19bb      	adds	r3, r7, r6
100478e8:	781b      	ldrb	r3, [r3, #0]
100478ea:	2b00      	cmp	r3, #0
100478ec:	d002      	beq.n	100478f4 <CleanLargeDB+0xa4>
    {
      return status;
100478ee:	19bb      	adds	r3, r7, r6
100478f0:	781b      	ldrb	r3, [r3, #0]
100478f2:	e069      	b.n	100479c8 <CleanLargeDB+0x178>
    }

    if(num_read_bytes == sizeof(NVM_buffer) || status != NVMDB_STATUS_OK)
100478f4:	4b3e      	ldr	r3, [pc, #248]	@ (100479f0 <CleanLargeDB+0x1a0>)
100478f6:	18fb      	adds	r3, r7, r3
100478f8:	881a      	ldrh	r2, [r3, #0]
100478fa:	2380      	movs	r3, #128	@ 0x80
100478fc:	011b      	lsls	r3, r3, #4
100478fe:	429a      	cmp	r2, r3
10047900:	d004      	beq.n	1004790c <CleanLargeDB+0xbc>
10047902:	4b37      	ldr	r3, [pc, #220]	@ (100479e0 <CleanLargeDB+0x190>)
10047904:	18fb      	adds	r3, r7, r3
10047906:	781b      	ldrb	r3, [r3, #0]
10047908:	2b00      	cmp	r3, #0
1004790a:	d0d6      	beq.n	100478ba <CleanLargeDB+0x6a>
    {
      if(num_read_bytes == 0)
1004790c:	4a38      	ldr	r2, [pc, #224]	@ (100479f0 <CleanLargeDB+0x1a0>)
1004790e:	18bb      	adds	r3, r7, r2
10047910:	881b      	ldrh	r3, [r3, #0]
10047912:	2b00      	cmp	r3, #0
10047914:	d019      	beq.n	1004794a <CleanLargeDB+0xfa>
        }
      }
#endif

      // Write buffer to flash
      WriteBufferToFlash(flash_write_address, (uint32_t *)NVM_buffer, num_read_bytes);
10047916:	18bb      	adds	r3, r7, r2
10047918:	881b      	ldrh	r3, [r3, #0]
1004791a:	001a      	movs	r2, r3
1004791c:	230c      	movs	r3, #12
1004791e:	18f9      	adds	r1, r7, r3
10047920:	4c31      	ldr	r4, [pc, #196]	@ (100479e8 <CleanLargeDB+0x198>)
10047922:	193b      	adds	r3, r7, r4
10047924:	681b      	ldr	r3, [r3, #0]
10047926:	0018      	movs	r0, r3
10047928:	f7ff fe48 	bl	100475bc <WriteBufferToFlash>
#if NVM_CACHE
      ATOMIC_SECTION_END();

      clean_started = TRUE;
#endif
      flash_write_address += sizeof(NVM_buffer);
1004792c:	0022      	movs	r2, r4
1004792e:	18bb      	adds	r3, r7, r2
10047930:	681b      	ldr	r3, [r3, #0]
10047932:	2180      	movs	r1, #128	@ 0x80
10047934:	0109      	lsls	r1, r1, #4
10047936:	468c      	mov	ip, r1
10047938:	4463      	add	r3, ip
1004793a:	18ba      	adds	r2, r7, r2
1004793c:	6013      	str	r3, [r2, #0]
      if(status != NVMDB_STATUS_OK)
1004793e:	4b28      	ldr	r3, [pc, #160]	@ (100479e0 <CleanLargeDB+0x190>)
10047940:	18fb      	adds	r3, r7, r3
10047942:	781b      	ldrb	r3, [r3, #0]
10047944:	2b00      	cmp	r3, #0
10047946:	d102      	bne.n	1004794e <CleanLargeDB+0xfe>
  {
10047948:	e7b7      	b.n	100478ba <CleanLargeDB+0x6a>
        break;
1004794a:	46c0      	nop			@ (mov r8, r8)
1004794c:	e000      	b.n	10047950 <CleanLargeDB+0x100>
      {
        break;
1004794e:	46c0      	nop			@ (mov r8, r8)
      }
    }
  }
  // Erase remaining pages. A possible optimization could be to erase the page only if it is not already erased.
  uint8_t num_pages = (ROUNDPAGE_R(handle.end_address) - flash_write_address) / PAGE_SIZE;
10047950:	4b24      	ldr	r3, [pc, #144]	@ (100479e4 <CleanLargeDB+0x194>)
10047952:	18fb      	adds	r3, r7, r3
10047954:	689b      	ldr	r3, [r3, #8]
10047956:	3b01      	subs	r3, #1
10047958:	4a26      	ldr	r2, [pc, #152]	@ (100479f4 <CleanLargeDB+0x1a4>)
1004795a:	431a      	orrs	r2, r3
1004795c:	4922      	ldr	r1, [pc, #136]	@ (100479e8 <CleanLargeDB+0x198>)
1004795e:	187b      	adds	r3, r7, r1
10047960:	681b      	ldr	r3, [r3, #0]
10047962:	1ad3      	subs	r3, r2, r3
10047964:	3301      	adds	r3, #1
10047966:	0ada      	lsrs	r2, r3, #11
10047968:	4823      	ldr	r0, [pc, #140]	@ (100479f8 <CleanLargeDB+0x1a8>)
1004796a:	183b      	adds	r3, r7, r0
1004796c:	701a      	strb	r2, [r3, #0]
  uint8_t page_num_start = (flash_write_address - _MEMORY_FLASH_BEGIN_) / PAGE_SIZE;
1004796e:	187b      	adds	r3, r7, r1
10047970:	681b      	ldr	r3, [r3, #0]
10047972:	4a22      	ldr	r2, [pc, #136]	@ (100479fc <CleanLargeDB+0x1ac>)
10047974:	4694      	mov	ip, r2
10047976:	4463      	add	r3, ip
10047978:	0ada      	lsrs	r2, r3, #11
1004797a:	4c21      	ldr	r4, [pc, #132]	@ (10047a00 <CleanLargeDB+0x1b0>)
1004797c:	193b      	adds	r3, r7, r4
1004797e:	701a      	strb	r2, [r3, #0]
  if(EraseWithTimeCheck(&page_num_start, &num_pages) == NVMDB_STATUS_NOT_ENOUGH_TIME)
  {
    return SchedulePageEraseOperation(NVMDB_id, page_num_start, num_pages);
  }
#else
  NVMDB_FLASH_ERASE_PAGE(page_num_start, num_pages);
10047980:	2181      	movs	r1, #129	@ 0x81
10047982:	0109      	lsls	r1, r1, #4
10047984:	187b      	adds	r3, r7, r1
10047986:	2200      	movs	r2, #0
10047988:	601a      	str	r2, [r3, #0]
1004798a:	193b      	adds	r3, r7, r4
1004798c:	781a      	ldrb	r2, [r3, #0]
1004798e:	187b      	adds	r3, r7, r1
10047990:	605a      	str	r2, [r3, #4]
10047992:	183b      	adds	r3, r7, r0
10047994:	781a      	ldrb	r2, [r3, #0]
10047996:	187b      	adds	r3, r7, r1
10047998:	609a      	str	r2, [r3, #8]
1004799a:	4b1a      	ldr	r3, [pc, #104]	@ (10047a04 <CleanLargeDB+0x1b4>)
1004799c:	18fa      	adds	r2, r7, r3
1004799e:	187b      	adds	r3, r7, r1
100479a0:	0011      	movs	r1, r2
100479a2:	0018      	movs	r0, r3
100479a4:	f002 fb0c 	bl	10049fc0 <HAL_FLASHEx_Erase>
#endif

  // Update free space.
  return NVMDB_get_info(&DBInfo[NVMDB_id]);
100479a8:	4b0b      	ldr	r3, [pc, #44]	@ (100479d8 <CleanLargeDB+0x188>)
100479aa:	2284      	movs	r2, #132	@ 0x84
100479ac:	0112      	lsls	r2, r2, #4
100479ae:	189b      	adds	r3, r3, r2
100479b0:	19db      	adds	r3, r3, r7
100479b2:	781a      	ldrb	r2, [r3, #0]
100479b4:	0013      	movs	r3, r2
100479b6:	009b      	lsls	r3, r3, #2
100479b8:	189b      	adds	r3, r3, r2
100479ba:	009b      	lsls	r3, r3, #2
100479bc:	4a07      	ldr	r2, [pc, #28]	@ (100479dc <CleanLargeDB+0x18c>)
100479be:	189b      	adds	r3, r3, r2
100479c0:	0018      	movs	r0, r3
100479c2:	f7ff fad5 	bl	10046f70 <NVMDB_get_info>
100479c6:	0003      	movs	r3, r0
}
100479c8:	0018      	movs	r0, r3
100479ca:	46bd      	mov	sp, r7
100479cc:	4b0e      	ldr	r3, [pc, #56]	@ (10047a08 <CleanLargeDB+0x1b8>)
100479ce:	449d      	add	sp, r3
100479d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100479d2:	46c0      	nop			@ (mov r8, r8)
100479d4:	fffff7b4 	.word	0xfffff7b4
100479d8:	fffff7c7 	.word	0xfffff7c7
100479dc:	20000594 	.word	0x20000594
100479e0:	0000083b 	.word	0x0000083b
100479e4:	00000824 	.word	0x00000824
100479e8:	0000083c 	.word	0x0000083c
100479ec:	0000081c 	.word	0x0000081c
100479f0:	00000836 	.word	0x00000836
100479f4:	000007ff 	.word	0x000007ff
100479f8:	0000083a 	.word	0x0000083a
100479fc:	effc0000 	.word	0xeffc0000
10047a00:	00000839 	.word	0x00000839
10047a04:	0000080c 	.word	0x0000080c
10047a08:	00000844 	.word	0x00000844

10047a0c <CleanPage>:
  return NVMDB_get_info(&DBInfo[op->handle.id]);
}
#endif

__NOINLINE static NVMDB_status_t CleanPage(const NVMDB_SmallDBContainerType *smallDBContainer_p)
{
10047a0c:	b5f0      	push	{r4, r5, r6, r7, lr}
10047a0e:	4c7a      	ldr	r4, [pc, #488]	@ (10047bf8 <CleanPage+0x1ec>)
10047a10:	44a5      	add	sp, r4
10047a12:	af02      	add	r7, sp, #8
10047a14:	6078      	str	r0, [r7, #4]
  NVMDB_status_t status;
  NVMDB_status_t ret = NVMDB_STATUS_OK;
10047a16:	4b79      	ldr	r3, [pc, #484]	@ (10047bfc <CleanPage+0x1f0>)
10047a18:	18fb      	adds	r3, r7, r3
10047a1a:	2200      	movs	r2, #0
10047a1c:	701a      	strb	r2, [r3, #0]
  NVMDB_HandleType handle;
  uint32_t page_offset;
  uint16_t num_bytes;
  ReadStateType state;
  int i;
  uint8_t found = FALSE;
10047a1e:	4b78      	ldr	r3, [pc, #480]	@ (10047c00 <CleanPage+0x1f4>)
10047a20:	18fb      	adds	r3, r7, r3
10047a22:	2200      	movs	r2, #0
10047a24:	701a      	strb	r2, [r3, #0]
#if !NVMDB_STATIC_BUFF
  uint8_t NVM_buffer[PAGE_SIZE];
#endif

  /* Check if there are invalids record in the page and if there are pending operations on the databases. */
  for(i = 0; i < smallDBContainer_p->num_db; i++)
10047a26:	2300      	movs	r3, #0
10047a28:	4a76      	ldr	r2, [pc, #472]	@ (10047c04 <CleanPage+0x1f8>)
10047a2a:	18ba      	adds	r2, r7, r2
10047a2c:	6013      	str	r3, [r2, #0]
10047a2e:	e023      	b.n	10047a78 <CleanPage+0x6c>
  {
    NVMDB_id = smallDBContainer_p->dbs[i].id;
10047a30:	687b      	ldr	r3, [r7, #4]
10047a32:	6899      	ldr	r1, [r3, #8]
10047a34:	4b73      	ldr	r3, [pc, #460]	@ (10047c04 <CleanPage+0x1f8>)
10047a36:	18fb      	adds	r3, r7, r3
10047a38:	681a      	ldr	r2, [r3, #0]
10047a3a:	0013      	movs	r3, r2
10047a3c:	005b      	lsls	r3, r3, #1
10047a3e:	189b      	adds	r3, r3, r2
10047a40:	009b      	lsls	r3, r3, #2
10047a42:	18ca      	adds	r2, r1, r3
10047a44:	4970      	ldr	r1, [pc, #448]	@ (10047c08 <CleanPage+0x1fc>)
10047a46:	187b      	adds	r3, r7, r1
10047a48:	7812      	ldrb	r2, [r2, #0]
10047a4a:	701a      	strb	r2, [r3, #0]
    if(DBInfo[NVMDB_id].invalid_records)
10047a4c:	187b      	adds	r3, r7, r1
10047a4e:	781a      	ldrb	r2, [r3, #0]
10047a50:	496e      	ldr	r1, [pc, #440]	@ (10047c0c <CleanPage+0x200>)
10047a52:	0013      	movs	r3, r2
10047a54:	009b      	lsls	r3, r3, #2
10047a56:	189b      	adds	r3, r3, r2
10047a58:	009b      	lsls	r3, r3, #2
10047a5a:	18cb      	adds	r3, r1, r3
10047a5c:	330a      	adds	r3, #10
10047a5e:	881b      	ldrh	r3, [r3, #0]
10047a60:	2b00      	cmp	r3, #0
10047a62:	d003      	beq.n	10047a6c <CleanPage+0x60>
    {
      found = TRUE;
10047a64:	4b66      	ldr	r3, [pc, #408]	@ (10047c00 <CleanPage+0x1f4>)
10047a66:	18fb      	adds	r3, r7, r3
10047a68:	2201      	movs	r2, #1
10047a6a:	701a      	strb	r2, [r3, #0]
  for(i = 0; i < smallDBContainer_p->num_db; i++)
10047a6c:	4a65      	ldr	r2, [pc, #404]	@ (10047c04 <CleanPage+0x1f8>)
10047a6e:	18bb      	adds	r3, r7, r2
10047a70:	681b      	ldr	r3, [r3, #0]
10047a72:	3301      	adds	r3, #1
10047a74:	18ba      	adds	r2, r7, r2
10047a76:	6013      	str	r3, [r2, #0]
10047a78:	687b      	ldr	r3, [r7, #4]
10047a7a:	791b      	ldrb	r3, [r3, #4]
10047a7c:	001a      	movs	r2, r3
10047a7e:	4b61      	ldr	r3, [pc, #388]	@ (10047c04 <CleanPage+0x1f8>)
10047a80:	18fb      	adds	r3, r7, r3
10047a82:	681b      	ldr	r3, [r3, #0]
10047a84:	4293      	cmp	r3, r2
10047a86:	dbd3      	blt.n	10047a30 <CleanPage+0x24>
    {
      return NVMDB_STATUS_CACHE_OP_PENDING;
    }
#endif
  }
  if(!found)
10047a88:	4b5d      	ldr	r3, [pc, #372]	@ (10047c00 <CleanPage+0x1f4>)
10047a8a:	18fb      	adds	r3, r7, r3
10047a8c:	781b      	ldrb	r3, [r3, #0]
10047a8e:	2b00      	cmp	r3, #0
10047a90:	d101      	bne.n	10047a96 <CleanPage+0x8a>
  {
    /* No invalid records found. */
    return NVMDB_STATUS_OK;
10047a92:	2300      	movs	r3, #0
10047a94:	e0ab      	b.n	10047bee <CleanPage+0x1e2>
  }

  memset(NVM_buffer, 0xFF, sizeof(NVM_buffer));
10047a96:	2380      	movs	r3, #128	@ 0x80
10047a98:	011a      	lsls	r2, r3, #4
10047a9a:	2308      	movs	r3, #8
10047a9c:	18fb      	adds	r3, r7, r3
10047a9e:	21ff      	movs	r1, #255	@ 0xff
10047aa0:	0018      	movs	r0, r3
10047aa2:	f024 f875 	bl	1006bb90 <memset>

  for(i = 0; i < smallDBContainer_p->num_db; i++)
10047aa6:	2300      	movs	r3, #0
10047aa8:	4a56      	ldr	r2, [pc, #344]	@ (10047c04 <CleanPage+0x1f8>)
10047aaa:	18ba      	adds	r2, r7, r2
10047aac:	6013      	str	r3, [r2, #0]
10047aae:	e051      	b.n	10047b54 <CleanPage+0x148>
  {
    NVMDB_id = smallDBContainer_p->dbs[i].id;
10047ab0:	687b      	ldr	r3, [r7, #4]
10047ab2:	6899      	ldr	r1, [r3, #8]
10047ab4:	4853      	ldr	r0, [pc, #332]	@ (10047c04 <CleanPage+0x1f8>)
10047ab6:	183b      	adds	r3, r7, r0
10047ab8:	681a      	ldr	r2, [r3, #0]
10047aba:	0013      	movs	r3, r2
10047abc:	005b      	lsls	r3, r3, #1
10047abe:	189b      	adds	r3, r3, r2
10047ac0:	009b      	lsls	r3, r3, #2
10047ac2:	18ca      	adds	r2, r1, r3
10047ac4:	4d50      	ldr	r5, [pc, #320]	@ (10047c08 <CleanPage+0x1fc>)
10047ac6:	197b      	adds	r3, r7, r5
10047ac8:	7812      	ldrb	r2, [r2, #0]
10047aca:	701a      	strb	r2, [r3, #0]
    page_offset = smallDBContainer_p->dbs[i].offset;
10047acc:	687b      	ldr	r3, [r7, #4]
10047ace:	6899      	ldr	r1, [r3, #8]
10047ad0:	183b      	adds	r3, r7, r0
10047ad2:	681a      	ldr	r2, [r3, #0]
10047ad4:	0013      	movs	r3, r2
10047ad6:	005b      	lsls	r3, r3, #1
10047ad8:	189b      	adds	r3, r3, r2
10047ada:	009b      	lsls	r3, r3, #2
10047adc:	18cb      	adds	r3, r1, r3
10047ade:	685b      	ldr	r3, [r3, #4]
10047ae0:	2282      	movs	r2, #130	@ 0x82
10047ae2:	0112      	lsls	r2, r2, #4
10047ae4:	18ba      	adds	r2, r7, r2
10047ae6:	6013      	str	r3, [r2, #0]

    status = NVMDB_HandleInit(NVMDB_id, &handle);
10047ae8:	4e49      	ldr	r6, [pc, #292]	@ (10047c10 <CleanPage+0x204>)
10047aea:	19bc      	adds	r4, r7, r6
10047aec:	2381      	movs	r3, #129	@ 0x81
10047aee:	011b      	lsls	r3, r3, #4
10047af0:	18fa      	adds	r2, r7, r3
10047af2:	197b      	adds	r3, r7, r5
10047af4:	781b      	ldrb	r3, [r3, #0]
10047af6:	0011      	movs	r1, r2
10047af8:	0018      	movs	r0, r3
10047afa:	f000 fba5 	bl	10048248 <NVMDB_HandleInit>
10047afe:	0003      	movs	r3, r0
10047b00:	7023      	strb	r3, [r4, #0]
    if(status) // This should not happen
10047b02:	19bb      	adds	r3, r7, r6
10047b04:	781b      	ldrb	r3, [r3, #0]
10047b06:	2b00      	cmp	r3, #0
10047b08:	d001      	beq.n	10047b0e <CleanPage+0x102>
    {
      return NVMDB_STATUS_OK;
10047b0a:	2300      	movs	r3, #0
10047b0c:	e06f      	b.n	10047bee <CleanPage+0x1e2>
    }

    InitReadState(&state);
10047b0e:	4d41      	ldr	r5, [pc, #260]	@ (10047c14 <CleanPage+0x208>)
10047b10:	197b      	adds	r3, r7, r5
10047b12:	0018      	movs	r0, r3
10047b14:	f7ff fd92 	bl	1004763c <InitReadState>
    // It cannot happen that the database does not fill inside the buffer. So we call LoadDBToRAM() just once for each db.
    LoadDBToRAM(&handle, NVM_buffer + page_offset, sizeof(NVM_buffer) - page_offset, &num_bytes, &state);
10047b18:	2308      	movs	r3, #8
10047b1a:	18fa      	adds	r2, r7, r3
10047b1c:	2082      	movs	r0, #130	@ 0x82
10047b1e:	0100      	lsls	r0, r0, #4
10047b20:	183b      	adds	r3, r7, r0
10047b22:	681b      	ldr	r3, [r3, #0]
10047b24:	18d1      	adds	r1, r2, r3
10047b26:	183b      	adds	r3, r7, r0
10047b28:	681b      	ldr	r3, [r3, #0]
10047b2a:	b29b      	uxth	r3, r3
10047b2c:	2280      	movs	r2, #128	@ 0x80
10047b2e:	0112      	lsls	r2, r2, #4
10047b30:	1ad3      	subs	r3, r2, r3
10047b32:	b29a      	uxth	r2, r3
10047b34:	4b38      	ldr	r3, [pc, #224]	@ (10047c18 <CleanPage+0x20c>)
10047b36:	18fc      	adds	r4, r7, r3
10047b38:	2381      	movs	r3, #129	@ 0x81
10047b3a:	011b      	lsls	r3, r3, #4
10047b3c:	18f8      	adds	r0, r7, r3
10047b3e:	197b      	adds	r3, r7, r5
10047b40:	9300      	str	r3, [sp, #0]
10047b42:	0023      	movs	r3, r4
10047b44:	f7ff fd8b 	bl	1004765e <LoadDBToRAM>
  for(i = 0; i < smallDBContainer_p->num_db; i++)
10047b48:	4a2e      	ldr	r2, [pc, #184]	@ (10047c04 <CleanPage+0x1f8>)
10047b4a:	18bb      	adds	r3, r7, r2
10047b4c:	681b      	ldr	r3, [r3, #0]
10047b4e:	3301      	adds	r3, #1
10047b50:	18ba      	adds	r2, r7, r2
10047b52:	6013      	str	r3, [r2, #0]
10047b54:	687b      	ldr	r3, [r7, #4]
10047b56:	791b      	ldrb	r3, [r3, #4]
10047b58:	001a      	movs	r2, r3
10047b5a:	4c2a      	ldr	r4, [pc, #168]	@ (10047c04 <CleanPage+0x1f8>)
10047b5c:	193b      	adds	r3, r7, r4
10047b5e:	681b      	ldr	r3, [r3, #0]
10047b60:	4293      	cmp	r3, r2
10047b62:	dba5      	blt.n	10047ab0 <CleanPage+0xa4>
    ATOMIC_SECTION_END();
    return NVMDB_STATUS_NOT_ENOUGH_TIME;
  }
#endif

  WriteBufferToFlash(smallDBContainer_p->page_address, (uint32_t *)NVM_buffer, sizeof(NVM_buffer));
10047b64:	687b      	ldr	r3, [r7, #4]
10047b66:	681b      	ldr	r3, [r3, #0]
10047b68:	2280      	movs	r2, #128	@ 0x80
10047b6a:	0112      	lsls	r2, r2, #4
10047b6c:	2108      	movs	r1, #8
10047b6e:	1879      	adds	r1, r7, r1
10047b70:	0018      	movs	r0, r3
10047b72:	f7ff fd23 	bl	100475bc <WriteBufferToFlash>

#if NVM_CACHE
  ATOMIC_SECTION_END();
#endif

  for(i = 0; i < smallDBContainer_p->num_db; i++)
10047b76:	2300      	movs	r3, #0
10047b78:	193a      	adds	r2, r7, r4
10047b7a:	6013      	str	r3, [r2, #0]
10047b7c:	e02c      	b.n	10047bd8 <CleanPage+0x1cc>
  {
    NVMDB_id = smallDBContainer_p->dbs[i].id;
10047b7e:	687b      	ldr	r3, [r7, #4]
10047b80:	6899      	ldr	r1, [r3, #8]
10047b82:	4b20      	ldr	r3, [pc, #128]	@ (10047c04 <CleanPage+0x1f8>)
10047b84:	18fb      	adds	r3, r7, r3
10047b86:	681a      	ldr	r2, [r3, #0]
10047b88:	0013      	movs	r3, r2
10047b8a:	005b      	lsls	r3, r3, #1
10047b8c:	189b      	adds	r3, r3, r2
10047b8e:	009b      	lsls	r3, r3, #2
10047b90:	18ca      	adds	r2, r1, r3
10047b92:	491d      	ldr	r1, [pc, #116]	@ (10047c08 <CleanPage+0x1fc>)
10047b94:	187b      	adds	r3, r7, r1
10047b96:	7812      	ldrb	r2, [r2, #0]
10047b98:	701a      	strb	r2, [r3, #0]
    // Update free space.
    status = NVMDB_get_info(&DBInfo[NVMDB_id]);
10047b9a:	187b      	adds	r3, r7, r1
10047b9c:	781a      	ldrb	r2, [r3, #0]
10047b9e:	0013      	movs	r3, r2
10047ba0:	009b      	lsls	r3, r3, #2
10047ba2:	189b      	adds	r3, r3, r2
10047ba4:	009b      	lsls	r3, r3, #2
10047ba6:	4a19      	ldr	r2, [pc, #100]	@ (10047c0c <CleanPage+0x200>)
10047ba8:	189b      	adds	r3, r3, r2
10047baa:	4d19      	ldr	r5, [pc, #100]	@ (10047c10 <CleanPage+0x204>)
10047bac:	197c      	adds	r4, r7, r5
10047bae:	0018      	movs	r0, r3
10047bb0:	f7ff f9de 	bl	10046f70 <NVMDB_get_info>
10047bb4:	0003      	movs	r3, r0
10047bb6:	7023      	strb	r3, [r4, #0]
    if(status)
10047bb8:	002a      	movs	r2, r5
10047bba:	18bb      	adds	r3, r7, r2
10047bbc:	781b      	ldrb	r3, [r3, #0]
10047bbe:	2b00      	cmp	r3, #0
10047bc0:	d004      	beq.n	10047bcc <CleanPage+0x1c0>
    {
      ret = status; // Return last error if any.
10047bc2:	4b0e      	ldr	r3, [pc, #56]	@ (10047bfc <CleanPage+0x1f0>)
10047bc4:	18fb      	adds	r3, r7, r3
10047bc6:	18ba      	adds	r2, r7, r2
10047bc8:	7812      	ldrb	r2, [r2, #0]
10047bca:	701a      	strb	r2, [r3, #0]
  for(i = 0; i < smallDBContainer_p->num_db; i++)
10047bcc:	4a0d      	ldr	r2, [pc, #52]	@ (10047c04 <CleanPage+0x1f8>)
10047bce:	18bb      	adds	r3, r7, r2
10047bd0:	681b      	ldr	r3, [r3, #0]
10047bd2:	3301      	adds	r3, #1
10047bd4:	18ba      	adds	r2, r7, r2
10047bd6:	6013      	str	r3, [r2, #0]
10047bd8:	687b      	ldr	r3, [r7, #4]
10047bda:	791b      	ldrb	r3, [r3, #4]
10047bdc:	001a      	movs	r2, r3
10047bde:	4b09      	ldr	r3, [pc, #36]	@ (10047c04 <CleanPage+0x1f8>)
10047be0:	18fb      	adds	r3, r7, r3
10047be2:	681b      	ldr	r3, [r3, #0]
10047be4:	4293      	cmp	r3, r2
10047be6:	dbca      	blt.n	10047b7e <CleanPage+0x172>
    }
  }

  return ret;
10047be8:	4b04      	ldr	r3, [pc, #16]	@ (10047bfc <CleanPage+0x1f0>)
10047bea:	18fb      	adds	r3, r7, r3
10047bec:	781b      	ldrb	r3, [r3, #0]
}
10047bee:	0018      	movs	r0, r3
10047bf0:	46bd      	mov	sp, r7
10047bf2:	4b0a      	ldr	r3, [pc, #40]	@ (10047c1c <CleanPage+0x210>)
10047bf4:	449d      	add	sp, r3
10047bf6:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047bf8:	fffff7c4 	.word	0xfffff7c4
10047bfc:	0000082f 	.word	0x0000082f
10047c00:	00000827 	.word	0x00000827
10047c04:	00000828 	.word	0x00000828
10047c08:	00000826 	.word	0x00000826
10047c0c:	20000594 	.word	0x20000594
10047c10:	00000825 	.word	0x00000825
10047c14:	00000808 	.word	0x00000808
10047c18:	0000080e 	.word	0x0000080e
10047c1c:	00000834 	.word	0x00000834

10047c20 <GetDBType>:

static uint8_t GetDBType(NVMDB_IdType NVMDB_id, const NVMDB_SmallDBContainerType **smallDBContainer)
{
10047c20:	b590      	push	{r4, r7, lr}
10047c22:	b087      	sub	sp, #28
10047c24:	af00      	add	r7, sp, #0
10047c26:	0002      	movs	r2, r0
10047c28:	6039      	str	r1, [r7, #0]
10047c2a:	1dfb      	adds	r3, r7, #7
10047c2c:	701a      	strb	r2, [r3, #0]
  uint8_t id;

  /* Check if it is a large DB. */

  for(int i = 0; i < NUM_LARGE_DBS; i++)
10047c2e:	2300      	movs	r3, #0
10047c30:	617b      	str	r3, [r7, #20]
10047c32:	e016      	b.n	10047c62 <GetDBType+0x42>
  {

    id = NVM_LARGE_DB_STATIC_INFO[i].id;
10047c34:	240b      	movs	r4, #11
10047c36:	1939      	adds	r1, r7, r4
10047c38:	482e      	ldr	r0, [pc, #184]	@ (10047cf4 <GetDBType+0xd4>)
10047c3a:	697a      	ldr	r2, [r7, #20]
10047c3c:	0013      	movs	r3, r2
10047c3e:	005b      	lsls	r3, r3, #1
10047c40:	189b      	adds	r3, r3, r2
10047c42:	009b      	lsls	r3, r3, #2
10047c44:	18c3      	adds	r3, r0, r3
10047c46:	3306      	adds	r3, #6
10047c48:	781b      	ldrb	r3, [r3, #0]
10047c4a:	700b      	strb	r3, [r1, #0]

    if(id == NVMDB_id)
10047c4c:	193a      	adds	r2, r7, r4
10047c4e:	1dfb      	adds	r3, r7, #7
10047c50:	7812      	ldrb	r2, [r2, #0]
10047c52:	781b      	ldrb	r3, [r3, #0]
10047c54:	429a      	cmp	r2, r3
10047c56:	d101      	bne.n	10047c5c <GetDBType+0x3c>
    {
      return LARGE_DB;
10047c58:	2302      	movs	r3, #2
10047c5a:	e046      	b.n	10047cea <GetDBType+0xca>
  for(int i = 0; i < NUM_LARGE_DBS; i++)
10047c5c:	697b      	ldr	r3, [r7, #20]
10047c5e:	3301      	adds	r3, #1
10047c60:	617b      	str	r3, [r7, #20]
10047c62:	697b      	ldr	r3, [r7, #20]
10047c64:	2b01      	cmp	r3, #1
10047c66:	dde5      	ble.n	10047c34 <GetDBType+0x14>
    }
  }

  for(int i = 0; i < NUM_SMALL_DB_PAGES; i++)
10047c68:	2300      	movs	r3, #0
10047c6a:	613b      	str	r3, [r7, #16]
10047c6c:	e039      	b.n	10047ce2 <GetDBType+0xc2>
  {

    for(int j = 0; j < NVM_SMALL_DB_STATIC_INFO[i].num_db; j++)
10047c6e:	2300      	movs	r3, #0
10047c70:	60fb      	str	r3, [r7, #12]
10047c72:	e026      	b.n	10047cc2 <GetDBType+0xa2>
    {
      id = NVM_SMALL_DB_STATIC_INFO[i].dbs[j].id;
10047c74:	4920      	ldr	r1, [pc, #128]	@ (10047cf8 <GetDBType+0xd8>)
10047c76:	693a      	ldr	r2, [r7, #16]
10047c78:	0013      	movs	r3, r2
10047c7a:	005b      	lsls	r3, r3, #1
10047c7c:	189b      	adds	r3, r3, r2
10047c7e:	009b      	lsls	r3, r3, #2
10047c80:	18cb      	adds	r3, r1, r3
10047c82:	3308      	adds	r3, #8
10047c84:	6819      	ldr	r1, [r3, #0]
10047c86:	68fa      	ldr	r2, [r7, #12]
10047c88:	0013      	movs	r3, r2
10047c8a:	005b      	lsls	r3, r3, #1
10047c8c:	189b      	adds	r3, r3, r2
10047c8e:	009b      	lsls	r3, r3, #2
10047c90:	18ca      	adds	r2, r1, r3
10047c92:	210b      	movs	r1, #11
10047c94:	187b      	adds	r3, r7, r1
10047c96:	7812      	ldrb	r2, [r2, #0]
10047c98:	701a      	strb	r2, [r3, #0]

      if(id == NVMDB_id)
10047c9a:	187a      	adds	r2, r7, r1
10047c9c:	1dfb      	adds	r3, r7, #7
10047c9e:	7812      	ldrb	r2, [r2, #0]
10047ca0:	781b      	ldrb	r3, [r3, #0]
10047ca2:	429a      	cmp	r2, r3
10047ca4:	d10a      	bne.n	10047cbc <GetDBType+0x9c>
      {
        // DB found inside this small db container.
        *smallDBContainer = &NVM_SMALL_DB_STATIC_INFO[i];
10047ca6:	693a      	ldr	r2, [r7, #16]
10047ca8:	0013      	movs	r3, r2
10047caa:	005b      	lsls	r3, r3, #1
10047cac:	189b      	adds	r3, r3, r2
10047cae:	009b      	lsls	r3, r3, #2
10047cb0:	4a11      	ldr	r2, [pc, #68]	@ (10047cf8 <GetDBType+0xd8>)
10047cb2:	189a      	adds	r2, r3, r2
10047cb4:	683b      	ldr	r3, [r7, #0]
10047cb6:	601a      	str	r2, [r3, #0]
        return SMALL_DB;
10047cb8:	2301      	movs	r3, #1
10047cba:	e016      	b.n	10047cea <GetDBType+0xca>
    for(int j = 0; j < NVM_SMALL_DB_STATIC_INFO[i].num_db; j++)
10047cbc:	68fb      	ldr	r3, [r7, #12]
10047cbe:	3301      	adds	r3, #1
10047cc0:	60fb      	str	r3, [r7, #12]
10047cc2:	490d      	ldr	r1, [pc, #52]	@ (10047cf8 <GetDBType+0xd8>)
10047cc4:	693a      	ldr	r2, [r7, #16]
10047cc6:	0013      	movs	r3, r2
10047cc8:	005b      	lsls	r3, r3, #1
10047cca:	189b      	adds	r3, r3, r2
10047ccc:	009b      	lsls	r3, r3, #2
10047cce:	18cb      	adds	r3, r1, r3
10047cd0:	3304      	adds	r3, #4
10047cd2:	781b      	ldrb	r3, [r3, #0]
10047cd4:	001a      	movs	r2, r3
10047cd6:	68fb      	ldr	r3, [r7, #12]
10047cd8:	4293      	cmp	r3, r2
10047cda:	dbcb      	blt.n	10047c74 <GetDBType+0x54>
  for(int i = 0; i < NUM_SMALL_DB_PAGES; i++)
10047cdc:	693b      	ldr	r3, [r7, #16]
10047cde:	3301      	adds	r3, #1
10047ce0:	613b      	str	r3, [r7, #16]
10047ce2:	693b      	ldr	r3, [r7, #16]
10047ce4:	2b00      	cmp	r3, #0
10047ce6:	dbc2      	blt.n	10047c6e <GetDBType+0x4e>
      }
    }
  }

  return 0;
10047ce8:	2300      	movs	r3, #0
}
10047cea:	0018      	movs	r0, r3
10047cec:	46bd      	mov	sp, r7
10047cee:	b007      	add	sp, #28
10047cf0:	bd90      	pop	{r4, r7, pc}
10047cf2:	46c0      	nop			@ (mov r8, r8)
10047cf4:	1006e688 	.word	0x1006e688
10047cf8:	200005c0 	.word	0x200005c0

10047cfc <EraseSmallDB>:
}

#endif

__NOINLINE static NVMDB_status_t EraseSmallDB(NVMDB_IdType NVMDB_id, const NVMDB_SmallDBContainerType *smallDBContainer_p)
{
10047cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
10047cfe:	4c3d      	ldr	r4, [pc, #244]	@ (10047df4 <EraseSmallDB+0xf8>)
10047d00:	44a5      	add	sp, r4
10047d02:	af02      	add	r7, sp, #8
10047d04:	0002      	movs	r2, r0
10047d06:	6039      	str	r1, [r7, #0]
10047d08:	4b3b      	ldr	r3, [pc, #236]	@ (10047df8 <EraseSmallDB+0xfc>)
10047d0a:	2183      	movs	r1, #131	@ 0x83
10047d0c:	0109      	lsls	r1, r1, #4
10047d0e:	185b      	adds	r3, r3, r1
10047d10:	19db      	adds	r3, r3, r7
10047d12:	701a      	strb	r2, [r3, #0]
#endif
#if !NVMDB_STATIC_BUFF
  uint8_t NVM_buffer[PAGE_SIZE];
#endif

  memset(NVM_buffer, 0xFF, sizeof(NVM_buffer));
10047d14:	2380      	movs	r3, #128	@ 0x80
10047d16:	011a      	lsls	r2, r3, #4
10047d18:	2324      	movs	r3, #36	@ 0x24
10047d1a:	18fb      	adds	r3, r7, r3
10047d1c:	21ff      	movs	r1, #255	@ 0xff
10047d1e:	0018      	movs	r0, r3
10047d20:	f023 ff36 	bl	1006bb90 <memset>

  // Search other databases in the same page
  for(int i = 0; i < smallDBContainer_p->num_db; i++)
10047d24:	2300      	movs	r3, #0
10047d26:	4a35      	ldr	r2, [pc, #212]	@ (10047dfc <EraseSmallDB+0x100>)
10047d28:	18ba      	adds	r2, r7, r2
10047d2a:	6013      	str	r3, [r2, #0]
10047d2c:	e04b      	b.n	10047dc6 <EraseSmallDB+0xca>
  {
    NVMDB_HandleType handle;
    uint16_t num_read_bytes;
    ReadStateType state;
    NVMDB_IdType id = smallDBContainer_p->dbs[i].id;
10047d2e:	683b      	ldr	r3, [r7, #0]
10047d30:	6899      	ldr	r1, [r3, #8]
10047d32:	4c32      	ldr	r4, [pc, #200]	@ (10047dfc <EraseSmallDB+0x100>)
10047d34:	193b      	adds	r3, r7, r4
10047d36:	681a      	ldr	r2, [r3, #0]
10047d38:	0013      	movs	r3, r2
10047d3a:	005b      	lsls	r3, r3, #1
10047d3c:	189b      	adds	r3, r3, r2
10047d3e:	009b      	lsls	r3, r3, #2
10047d40:	18ca      	adds	r2, r1, r3
10047d42:	492f      	ldr	r1, [pc, #188]	@ (10047e00 <EraseSmallDB+0x104>)
10047d44:	187b      	adds	r3, r7, r1
10047d46:	7812      	ldrb	r2, [r2, #0]
10047d48:	701a      	strb	r2, [r3, #0]
    if(id != NVMDB_id)
10047d4a:	187a      	adds	r2, r7, r1
10047d4c:	4b2a      	ldr	r3, [pc, #168]	@ (10047df8 <EraseSmallDB+0xfc>)
10047d4e:	2083      	movs	r0, #131	@ 0x83
10047d50:	0100      	lsls	r0, r0, #4
10047d52:	181b      	adds	r3, r3, r0
10047d54:	19db      	adds	r3, r3, r7
10047d56:	7812      	ldrb	r2, [r2, #0]
10047d58:	781b      	ldrb	r3, [r3, #0]
10047d5a:	429a      	cmp	r2, r3
10047d5c:	d02d      	beq.n	10047dba <EraseSmallDB+0xbe>
    {
      // This is not the db to be erased. Save it.
      NVMDB_HandleInit(id, &handle);
10047d5e:	2514      	movs	r5, #20
10047d60:	197a      	adds	r2, r7, r5
10047d62:	187b      	adds	r3, r7, r1
10047d64:	781b      	ldrb	r3, [r3, #0]
10047d66:	0011      	movs	r1, r2
10047d68:	0018      	movs	r0, r3
10047d6a:	f000 fa6d 	bl	10048248 <NVMDB_HandleInit>
      uint32_t offset = smallDBContainer_p->dbs[i].offset;
10047d6e:	683b      	ldr	r3, [r7, #0]
10047d70:	6899      	ldr	r1, [r3, #8]
10047d72:	193b      	adds	r3, r7, r4
10047d74:	681a      	ldr	r2, [r3, #0]
10047d76:	0013      	movs	r3, r2
10047d78:	005b      	lsls	r3, r3, #1
10047d7a:	189b      	adds	r3, r3, r2
10047d7c:	009b      	lsls	r3, r3, #2
10047d7e:	18cb      	adds	r3, r1, r3
10047d80:	685b      	ldr	r3, [r3, #4]
10047d82:	4c20      	ldr	r4, [pc, #128]	@ (10047e04 <EraseSmallDB+0x108>)
10047d84:	193a      	adds	r2, r7, r4
10047d86:	6013      	str	r3, [r2, #0]
      InitReadState(&state);
10047d88:	260c      	movs	r6, #12
10047d8a:	19bb      	adds	r3, r7, r6
10047d8c:	0018      	movs	r0, r3
10047d8e:	f7ff fc55 	bl	1004763c <InitReadState>
      LoadDBToRAM(&handle, NVM_buffer + offset, sizeof(NVM_buffer) - offset, &num_read_bytes, &state);
10047d92:	2324      	movs	r3, #36	@ 0x24
10047d94:	18fa      	adds	r2, r7, r3
10047d96:	193b      	adds	r3, r7, r4
10047d98:	681b      	ldr	r3, [r3, #0]
10047d9a:	18d1      	adds	r1, r2, r3
10047d9c:	193b      	adds	r3, r7, r4
10047d9e:	681b      	ldr	r3, [r3, #0]
10047da0:	b29b      	uxth	r3, r3
10047da2:	2280      	movs	r2, #128	@ 0x80
10047da4:	0112      	lsls	r2, r2, #4
10047da6:	1ad3      	subs	r3, r2, r3
10047da8:	b29a      	uxth	r2, r3
10047daa:	2312      	movs	r3, #18
10047dac:	18fc      	adds	r4, r7, r3
10047dae:	1978      	adds	r0, r7, r5
10047db0:	19bb      	adds	r3, r7, r6
10047db2:	9300      	str	r3, [sp, #0]
10047db4:	0023      	movs	r3, r4
10047db6:	f7ff fc52 	bl	1004765e <LoadDBToRAM>
  for(int i = 0; i < smallDBContainer_p->num_db; i++)
10047dba:	4a10      	ldr	r2, [pc, #64]	@ (10047dfc <EraseSmallDB+0x100>)
10047dbc:	18bb      	adds	r3, r7, r2
10047dbe:	681b      	ldr	r3, [r3, #0]
10047dc0:	3301      	adds	r3, #1
10047dc2:	18ba      	adds	r2, r7, r2
10047dc4:	6013      	str	r3, [r2, #0]
10047dc6:	683b      	ldr	r3, [r7, #0]
10047dc8:	791b      	ldrb	r3, [r3, #4]
10047dca:	001a      	movs	r2, r3
10047dcc:	4b0b      	ldr	r3, [pc, #44]	@ (10047dfc <EraseSmallDB+0x100>)
10047dce:	18fb      	adds	r3, r7, r3
10047dd0:	681b      	ldr	r3, [r3, #0]
10047dd2:	4293      	cmp	r3, r2
10047dd4:	dbab      	blt.n	10047d2e <EraseSmallDB+0x32>
    return NVMDB_STATUS_NOT_ENOUGH_TIME;
  }
#endif

  // Write buffer to flash
  WriteBufferToFlash(smallDBContainer_p->page_address, (uint32_t *)NVM_buffer, sizeof(NVM_buffer));
10047dd6:	683b      	ldr	r3, [r7, #0]
10047dd8:	681b      	ldr	r3, [r3, #0]
10047dda:	2280      	movs	r2, #128	@ 0x80
10047ddc:	0112      	lsls	r2, r2, #4
10047dde:	2124      	movs	r1, #36	@ 0x24
10047de0:	1879      	adds	r1, r7, r1
10047de2:	0018      	movs	r0, r3
10047de4:	f7ff fbea 	bl	100475bc <WriteBufferToFlash>

#if NVM_CACHE
  ATOMIC_SECTION_END();
#endif

  return NVMDB_STATUS_OK;
10047de8:	2300      	movs	r3, #0
}
10047dea:	0018      	movs	r0, r3
10047dec:	46bd      	mov	sp, r7
10047dee:	4b06      	ldr	r3, [pc, #24]	@ (10047e08 <EraseSmallDB+0x10c>)
10047df0:	449d      	add	sp, r3
10047df2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047df4:	fffff7c4 	.word	0xfffff7c4
10047df8:	fffff7d7 	.word	0xfffff7d7
10047dfc:	0000082c 	.word	0x0000082c
10047e00:	0000082b 	.word	0x0000082b
10047e04:	00000824 	.word	0x00000824
10047e08:	00000834 	.word	0x00000834

10047e0c <NVMDB_AppendRecordNoCache>:

static NVMDB_status_t NVMDB_AppendRecordNoCache(NVMDB_HandleType *handle_p, uint8_t record_id, uint16_t data1_length, const void *data1, uint16_t data2_length, const void *data2)
{
10047e0c:	b5f0      	push	{r4, r5, r6, r7, lr}
10047e0e:	b089      	sub	sp, #36	@ 0x24
10047e10:	af02      	add	r7, sp, #8
10047e12:	60f8      	str	r0, [r7, #12]
10047e14:	0008      	movs	r0, r1
10047e16:	0011      	movs	r1, r2
10047e18:	607b      	str	r3, [r7, #4]
10047e1a:	230b      	movs	r3, #11
10047e1c:	18fb      	adds	r3, r7, r3
10047e1e:	1c02      	adds	r2, r0, #0
10047e20:	701a      	strb	r2, [r3, #0]
10047e22:	2008      	movs	r0, #8
10047e24:	183b      	adds	r3, r7, r0
10047e26:	1c0a      	adds	r2, r1, #0
10047e28:	801a      	strh	r2, [r3, #0]
  NVMDB_RecordType *record_p;
  NVMDB_RecordSizeType available_size;
  NVMDB_status_t status;

  data1_length = ROUND4_R(data1_length);
10047e2a:	0001      	movs	r1, r0
10047e2c:	187b      	adds	r3, r7, r1
10047e2e:	881b      	ldrh	r3, [r3, #0]
10047e30:	3b01      	subs	r3, #1
10047e32:	b29b      	uxth	r3, r3
10047e34:	b21b      	sxth	r3, r3
10047e36:	2203      	movs	r2, #3
10047e38:	4313      	orrs	r3, r2
10047e3a:	b21b      	sxth	r3, r3
10047e3c:	b29a      	uxth	r2, r3
10047e3e:	187b      	adds	r3, r7, r1
10047e40:	3201      	adds	r2, #1
10047e42:	801a      	strh	r2, [r3, #0]
  /* Search for first available entry. */

  while(1)
  {

    if(handle_p->address + MIN_RECORD_SIZE >= handle_p->end_address)
10047e44:	68fb      	ldr	r3, [r7, #12]
10047e46:	685b      	ldr	r3, [r3, #4]
10047e48:	1d5a      	adds	r2, r3, #5
10047e4a:	68fb      	ldr	r3, [r7, #12]
10047e4c:	689b      	ldr	r3, [r3, #8]
10047e4e:	429a      	cmp	r2, r3
10047e50:	d310      	bcc.n	10047e74 <NVMDB_AppendRecordNoCache+0x68>
    {
      /* End of DB reached. This should not happen since the free space has been checked before.
         Should we remove this code or keep it to be safer?  */
      if(DBInfo[handle_p->id].invalid_records)
10047e52:	68fb      	ldr	r3, [r7, #12]
10047e54:	781b      	ldrb	r3, [r3, #0]
10047e56:	0019      	movs	r1, r3
10047e58:	4a4a      	ldr	r2, [pc, #296]	@ (10047f84 <NVMDB_AppendRecordNoCache+0x178>)
10047e5a:	000b      	movs	r3, r1
10047e5c:	009b      	lsls	r3, r3, #2
10047e5e:	185b      	adds	r3, r3, r1
10047e60:	009b      	lsls	r3, r3, #2
10047e62:	18d3      	adds	r3, r2, r3
10047e64:	330a      	adds	r3, #10
10047e66:	881b      	ldrh	r3, [r3, #0]
10047e68:	2b00      	cmp	r3, #0
10047e6a:	d001      	beq.n	10047e70 <NVMDB_AppendRecordNoCache+0x64>
      {
        return NVMDB_STATUS_CLEAN_NEEDED;
10047e6c:	230b      	movs	r3, #11
10047e6e:	e084      	b.n	10047f7a <NVMDB_AppendRecordNoCache+0x16e>
      }
      return NVMDB_STATUS_FULL_DB;
10047e70:	2302      	movs	r3, #2
10047e72:	e082      	b.n	10047f7a <NVMDB_AppendRecordNoCache+0x16e>
    }

    record_p = (NVMDB_RecordType_ptr)handle_p->address;
10047e74:	68fb      	ldr	r3, [r7, #12]
10047e76:	685b      	ldr	r3, [r3, #4]
10047e78:	617b      	str	r3, [r7, #20]

    if(record_p->header.valid_flag == NO_RECORD)
10047e7a:	697b      	ldr	r3, [r7, #20]
10047e7c:	781b      	ldrb	r3, [r3, #0]
10047e7e:	2bff      	cmp	r3, #255	@ 0xff
10047e80:	d11c      	bne.n	10047ebc <NVMDB_AppendRecordNoCache+0xb0>
    {
      available_size = MIN(handle_p->end_address - handle_p->address, MAX_RECORD_SIZE);
10047e82:	68fb      	ldr	r3, [r7, #12]
10047e84:	689a      	ldr	r2, [r3, #8]
10047e86:	68fb      	ldr	r3, [r7, #12]
10047e88:	685b      	ldr	r3, [r3, #4]
10047e8a:	1ad3      	subs	r3, r2, r3
10047e8c:	2280      	movs	r2, #128	@ 0x80
10047e8e:	0252      	lsls	r2, r2, #9
10047e90:	4293      	cmp	r3, r2
10047e92:	d300      	bcc.n	10047e96 <NVMDB_AppendRecordNoCache+0x8a>
10047e94:	4b3c      	ldr	r3, [pc, #240]	@ (10047f88 <NVMDB_AppendRecordNoCache+0x17c>)
10047e96:	2112      	movs	r1, #18
10047e98:	187a      	adds	r2, r7, r1
10047e9a:	8013      	strh	r3, [r2, #0]
      break;
10047e9c:	46c0      	nop			@ (mov r8, r8)
    }

    handle_p->address += ROUND4_R(record_p->header.length + RECORD_HEADER_SIZE);
  }

  if(available_size < data1_length + data2_length + RECORD_HEADER_SIZE)
10047e9e:	2308      	movs	r3, #8
10047ea0:	0018      	movs	r0, r3
10047ea2:	18fb      	adds	r3, r7, r3
10047ea4:	881a      	ldrh	r2, [r3, #0]
10047ea6:	2328      	movs	r3, #40	@ 0x28
10047ea8:	181b      	adds	r3, r3, r0
10047eaa:	19db      	adds	r3, r3, r7
10047eac:	881b      	ldrh	r3, [r3, #0]
10047eae:	18d3      	adds	r3, r2, r3
10047eb0:	1cda      	adds	r2, r3, #3
10047eb2:	187b      	adds	r3, r7, r1
10047eb4:	881b      	ldrh	r3, [r3, #0]
10047eb6:	429a      	cmp	r2, r3
10047eb8:	db27      	blt.n	10047f0a <NVMDB_AppendRecordNoCache+0xfe>
10047eba:	e015      	b.n	10047ee8 <NVMDB_AppendRecordNoCache+0xdc>
    else if(record_p->header.valid_flag != VALID_RECORD && record_p->header.valid_flag != INVALID_RECORD)
10047ebc:	697b      	ldr	r3, [r7, #20]
10047ebe:	781b      	ldrb	r3, [r3, #0]
10047ec0:	2bfe      	cmp	r3, #254	@ 0xfe
10047ec2:	d005      	beq.n	10047ed0 <NVMDB_AppendRecordNoCache+0xc4>
10047ec4:	697b      	ldr	r3, [r7, #20]
10047ec6:	781b      	ldrb	r3, [r3, #0]
10047ec8:	2b00      	cmp	r3, #0
10047eca:	d001      	beq.n	10047ed0 <NVMDB_AppendRecordNoCache+0xc4>
      return NVMDB_STATUS_CORRUPTED_DB;
10047ecc:	2303      	movs	r3, #3
10047ece:	e054      	b.n	10047f7a <NVMDB_AppendRecordNoCache+0x16e>
    handle_p->address += ROUND4_R(record_p->header.length + RECORD_HEADER_SIZE);
10047ed0:	68fb      	ldr	r3, [r7, #12]
10047ed2:	685b      	ldr	r3, [r3, #4]
10047ed4:	697a      	ldr	r2, [r7, #20]
10047ed6:	8852      	ldrh	r2, [r2, #2]
10047ed8:	3203      	adds	r2, #3
10047eda:	2103      	movs	r1, #3
10047edc:	430a      	orrs	r2, r1
10047ede:	189b      	adds	r3, r3, r2
10047ee0:	1c5a      	adds	r2, r3, #1
10047ee2:	68fb      	ldr	r3, [r7, #12]
10047ee4:	605a      	str	r2, [r3, #4]
    if(handle_p->address + MIN_RECORD_SIZE >= handle_p->end_address)
10047ee6:	e7ad      	b.n	10047e44 <NVMDB_AppendRecordNoCache+0x38>
  {
    /* End of DB reached. This should not happen since the free space has been checked before.
       Should we remove this code or keep it to be safer?  */
    if(DBInfo[handle_p->id].invalid_records)
10047ee8:	68fb      	ldr	r3, [r7, #12]
10047eea:	781b      	ldrb	r3, [r3, #0]
10047eec:	0019      	movs	r1, r3
10047eee:	4a25      	ldr	r2, [pc, #148]	@ (10047f84 <NVMDB_AppendRecordNoCache+0x178>)
10047ef0:	000b      	movs	r3, r1
10047ef2:	009b      	lsls	r3, r3, #2
10047ef4:	185b      	adds	r3, r3, r1
10047ef6:	009b      	lsls	r3, r3, #2
10047ef8:	18d3      	adds	r3, r2, r3
10047efa:	330a      	adds	r3, #10
10047efc:	881b      	ldrh	r3, [r3, #0]
10047efe:	2b00      	cmp	r3, #0
10047f00:	d001      	beq.n	10047f06 <NVMDB_AppendRecordNoCache+0xfa>
    {
      return NVMDB_STATUS_CLEAN_NEEDED;
10047f02:	230b      	movs	r3, #11
10047f04:	e039      	b.n	10047f7a <NVMDB_AppendRecordNoCache+0x16e>
    }
    return NVMDB_STATUS_FULL_DB;
10047f06:	2302      	movs	r3, #2
10047f08:	e037      	b.n	10047f7a <NVMDB_AppendRecordNoCache+0x16e>
  }

  status = WriteRecord(handle_p->address, record_id, data1_length, data1, data2_length, data2);
10047f0a:	68fb      	ldr	r3, [r7, #12]
10047f0c:	6858      	ldr	r0, [r3, #4]
10047f0e:	2611      	movs	r6, #17
10047f10:	19bc      	adds	r4, r7, r6
10047f12:	687d      	ldr	r5, [r7, #4]
10047f14:	2308      	movs	r3, #8
10047f16:	001a      	movs	r2, r3
10047f18:	18fb      	adds	r3, r7, r3
10047f1a:	881b      	ldrh	r3, [r3, #0]
10047f1c:	469c      	mov	ip, r3
10047f1e:	230b      	movs	r3, #11
10047f20:	18fb      	adds	r3, r7, r3
10047f22:	7819      	ldrb	r1, [r3, #0]
10047f24:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
10047f26:	9301      	str	r3, [sp, #4]
10047f28:	2328      	movs	r3, #40	@ 0x28
10047f2a:	189b      	adds	r3, r3, r2
10047f2c:	19db      	adds	r3, r3, r7
10047f2e:	881b      	ldrh	r3, [r3, #0]
10047f30:	9300      	str	r3, [sp, #0]
10047f32:	002b      	movs	r3, r5
10047f34:	4662      	mov	r2, ip
10047f36:	f7ff f99c 	bl	10047272 <WriteRecord>
10047f3a:	0003      	movs	r3, r0
10047f3c:	7023      	strb	r3, [r4, #0]
  if(status)
10047f3e:	19bb      	adds	r3, r7, r6
10047f40:	781b      	ldrb	r3, [r3, #0]
10047f42:	2b00      	cmp	r3, #0
10047f44:	d002      	beq.n	10047f4c <NVMDB_AppendRecordNoCache+0x140>
  {
    return status;
10047f46:	19bb      	adds	r3, r7, r6
10047f48:	781b      	ldrb	r3, [r3, #0]
10047f4a:	e016      	b.n	10047f7a <NVMDB_AppendRecordNoCache+0x16e>
  }

  DBInfo[handle_p->id].valid_records++;
10047f4c:	68fb      	ldr	r3, [r7, #12]
10047f4e:	781b      	ldrb	r3, [r3, #0]
10047f50:	001a      	movs	r2, r3
10047f52:	490c      	ldr	r1, [pc, #48]	@ (10047f84 <NVMDB_AppendRecordNoCache+0x178>)
10047f54:	0013      	movs	r3, r2
10047f56:	009b      	lsls	r3, r3, #2
10047f58:	189b      	adds	r3, r3, r2
10047f5a:	009b      	lsls	r3, r3, #2
10047f5c:	18cb      	adds	r3, r1, r3
10047f5e:	3308      	adds	r3, #8
10047f60:	881b      	ldrh	r3, [r3, #0]
10047f62:	3301      	adds	r3, #1
10047f64:	b298      	uxth	r0, r3
10047f66:	4907      	ldr	r1, [pc, #28]	@ (10047f84 <NVMDB_AppendRecordNoCache+0x178>)
10047f68:	0013      	movs	r3, r2
10047f6a:	009b      	lsls	r3, r3, #2
10047f6c:	189b      	adds	r3, r3, r2
10047f6e:	009b      	lsls	r3, r3, #2
10047f70:	18cb      	adds	r3, r1, r3
10047f72:	3308      	adds	r3, #8
10047f74:	1c02      	adds	r2, r0, #0
10047f76:	801a      	strh	r2, [r3, #0]

  return NVMDB_STATUS_OK;
10047f78:	2300      	movs	r3, #0
}
10047f7a:	0018      	movs	r0, r3
10047f7c:	46bd      	mov	sp, r7
10047f7e:	b007      	add	sp, #28
10047f80:	bdf0      	pop	{r4, r5, r6, r7, pc}
10047f82:	46c0      	nop			@ (mov r8, r8)
10047f84:	20000594 	.word	0x20000594
10047f88:	0000ffff 	.word	0x0000ffff

10047f8c <NVMDB_Init>:
 *
 * @param  None
 * @retval Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_Init(void)
{
10047f8c:	b5b0      	push	{r4, r5, r7, lr}
10047f8e:	b088      	sub	sp, #32
10047f90:	af00      	add	r7, sp, #0
  uint32_t page_address, offset;
  uint16_t clean_threshold;
  uint8_t id;

  /* Parse small DBs. */
  for(int i = 0; i < NUM_SMALL_DB_PAGES; i++)
10047f92:	2300      	movs	r3, #0
10047f94:	61fb      	str	r3, [r7, #28]
10047f96:	e0cd      	b.n	10048134 <NVMDB_Init+0x1a8>
  {

    page_address = NVM_SMALL_DB_STATIC_INFO[i].page_address;
10047f98:	49a8      	ldr	r1, [pc, #672]	@ (1004823c <NVMDB_Init+0x2b0>)
10047f9a:	69fa      	ldr	r2, [r7, #28]
10047f9c:	0013      	movs	r3, r2
10047f9e:	005b      	lsls	r3, r3, #1
10047fa0:	189b      	adds	r3, r3, r2
10047fa2:	009b      	lsls	r3, r3, #2
10047fa4:	585b      	ldr	r3, [r3, r1]
10047fa6:	60fb      	str	r3, [r7, #12]

    for(int j = 0; j < NVM_SMALL_DB_STATIC_INFO[i].num_db; j++)
10047fa8:	2300      	movs	r3, #0
10047faa:	61bb      	str	r3, [r7, #24]
10047fac:	e0b1      	b.n	10048112 <NVMDB_Init+0x186>
    {
      id = NVM_SMALL_DB_STATIC_INFO[i].dbs[j].id;
10047fae:	49a3      	ldr	r1, [pc, #652]	@ (1004823c <NVMDB_Init+0x2b0>)
10047fb0:	69fa      	ldr	r2, [r7, #28]
10047fb2:	0013      	movs	r3, r2
10047fb4:	005b      	lsls	r3, r3, #1
10047fb6:	189b      	adds	r3, r3, r2
10047fb8:	009b      	lsls	r3, r3, #2
10047fba:	18cb      	adds	r3, r1, r3
10047fbc:	3308      	adds	r3, #8
10047fbe:	6819      	ldr	r1, [r3, #0]
10047fc0:	69ba      	ldr	r2, [r7, #24]
10047fc2:	0013      	movs	r3, r2
10047fc4:	005b      	lsls	r3, r3, #1
10047fc6:	189b      	adds	r3, r3, r2
10047fc8:	009b      	lsls	r3, r3, #2
10047fca:	18ca      	adds	r2, r1, r3
10047fcc:	2013      	movs	r0, #19
10047fce:	183b      	adds	r3, r7, r0
10047fd0:	7812      	ldrb	r2, [r2, #0]
10047fd2:	701a      	strb	r2, [r3, #0]
      offset = NVM_SMALL_DB_STATIC_INFO[i].dbs[j].offset;
10047fd4:	4999      	ldr	r1, [pc, #612]	@ (1004823c <NVMDB_Init+0x2b0>)
10047fd6:	69fa      	ldr	r2, [r7, #28]
10047fd8:	0013      	movs	r3, r2
10047fda:	005b      	lsls	r3, r3, #1
10047fdc:	189b      	adds	r3, r3, r2
10047fde:	009b      	lsls	r3, r3, #2
10047fe0:	18cb      	adds	r3, r1, r3
10047fe2:	3308      	adds	r3, #8
10047fe4:	6819      	ldr	r1, [r3, #0]
10047fe6:	69ba      	ldr	r2, [r7, #24]
10047fe8:	0013      	movs	r3, r2
10047fea:	005b      	lsls	r3, r3, #1
10047fec:	189b      	adds	r3, r3, r2
10047fee:	009b      	lsls	r3, r3, #2
10047ff0:	18cb      	adds	r3, r1, r3
10047ff2:	685b      	ldr	r3, [r3, #4]
10047ff4:	60bb      	str	r3, [r7, #8]
#if AUTO_CLEAN
      clean_threshold = NVM_SMALL_DB_STATIC_INFO[i].dbs[j].clean_threshold;
10047ff6:	4991      	ldr	r1, [pc, #580]	@ (1004823c <NVMDB_Init+0x2b0>)
10047ff8:	69fa      	ldr	r2, [r7, #28]
10047ffa:	0013      	movs	r3, r2
10047ffc:	005b      	lsls	r3, r3, #1
10047ffe:	189b      	adds	r3, r3, r2
10048000:	009b      	lsls	r3, r3, #2
10048002:	18cb      	adds	r3, r1, r3
10048004:	3308      	adds	r3, #8
10048006:	6819      	ldr	r1, [r3, #0]
10048008:	69ba      	ldr	r2, [r7, #24]
1004800a:	0013      	movs	r3, r2
1004800c:	005b      	lsls	r3, r3, #1
1004800e:	189b      	adds	r3, r3, r2
10048010:	009b      	lsls	r3, r3, #2
10048012:	18ca      	adds	r2, r1, r3
10048014:	1dbb      	adds	r3, r7, #6
10048016:	8912      	ldrh	r2, [r2, #8]
10048018:	801a      	strh	r2, [r3, #0]
#endif
      if(DBInfo[id].start_address || id >= NUM_DB)
1004801a:	183b      	adds	r3, r7, r0
1004801c:	781a      	ldrb	r2, [r3, #0]
1004801e:	4988      	ldr	r1, [pc, #544]	@ (10048240 <NVMDB_Init+0x2b4>)
10048020:	0013      	movs	r3, r2
10048022:	009b      	lsls	r3, r3, #2
10048024:	189b      	adds	r3, r3, r2
10048026:	009b      	lsls	r3, r3, #2
10048028:	585b      	ldr	r3, [r3, r1]
1004802a:	2b00      	cmp	r3, #0
1004802c:	d103      	bne.n	10048036 <NVMDB_Init+0xaa>
1004802e:	183b      	adds	r3, r7, r0
10048030:	781b      	ldrb	r3, [r3, #0]
10048032:	2b01      	cmp	r3, #1
10048034:	d901      	bls.n	1004803a <NVMDB_Init+0xae>
      {
        // ID already used.
        return NVMDB_STATUS_INVALID_ID;
10048036:	2301      	movs	r3, #1
10048038:	e0fc      	b.n	10048234 <NVMDB_Init+0x2a8>
      }
      DBInfo[id].start_address = page_address + offset;
1004803a:	2413      	movs	r4, #19
1004803c:	193b      	adds	r3, r7, r4
1004803e:	781a      	ldrb	r2, [r3, #0]
10048040:	68f9      	ldr	r1, [r7, #12]
10048042:	68bb      	ldr	r3, [r7, #8]
10048044:	18c8      	adds	r0, r1, r3
10048046:	497e      	ldr	r1, [pc, #504]	@ (10048240 <NVMDB_Init+0x2b4>)
10048048:	0013      	movs	r3, r2
1004804a:	009b      	lsls	r3, r3, #2
1004804c:	189b      	adds	r3, r3, r2
1004804e:	009b      	lsls	r3, r3, #2
10048050:	5058      	str	r0, [r3, r1]

      if(j == NVM_SMALL_DB_STATIC_INFO[i].num_db - 1)
10048052:	497a      	ldr	r1, [pc, #488]	@ (1004823c <NVMDB_Init+0x2b0>)
10048054:	69fa      	ldr	r2, [r7, #28]
10048056:	0013      	movs	r3, r2
10048058:	005b      	lsls	r3, r3, #1
1004805a:	189b      	adds	r3, r3, r2
1004805c:	009b      	lsls	r3, r3, #2
1004805e:	18cb      	adds	r3, r1, r3
10048060:	3304      	adds	r3, #4
10048062:	781b      	ldrb	r3, [r3, #0]
10048064:	3b01      	subs	r3, #1
10048066:	69ba      	ldr	r2, [r7, #24]
10048068:	429a      	cmp	r2, r3
1004806a:	d10e      	bne.n	1004808a <NVMDB_Init+0xfe>
      {
        // If it is the last db of the page, end address is the last address of the page
        DBInfo[id].end_address = page_address + PAGE_SIZE;
1004806c:	193b      	adds	r3, r7, r4
1004806e:	781a      	ldrb	r2, [r3, #0]
10048070:	68fb      	ldr	r3, [r7, #12]
10048072:	2180      	movs	r1, #128	@ 0x80
10048074:	0109      	lsls	r1, r1, #4
10048076:	1859      	adds	r1, r3, r1
10048078:	4871      	ldr	r0, [pc, #452]	@ (10048240 <NVMDB_Init+0x2b4>)
1004807a:	0013      	movs	r3, r2
1004807c:	009b      	lsls	r3, r3, #2
1004807e:	189b      	adds	r3, r3, r2
10048080:	009b      	lsls	r3, r3, #2
10048082:	18c3      	adds	r3, r0, r3
10048084:	3304      	adds	r3, #4
10048086:	6019      	str	r1, [r3, #0]
10048088:	e01d      	b.n	100480c6 <NVMDB_Init+0x13a>
      }
      else
      {
        // If it is not the last db of the page, end address is the start address of the next db
        DBInfo[id].end_address = page_address + NVM_SMALL_DB_STATIC_INFO[i].dbs[j + 1].offset;
1004808a:	496c      	ldr	r1, [pc, #432]	@ (1004823c <NVMDB_Init+0x2b0>)
1004808c:	69fa      	ldr	r2, [r7, #28]
1004808e:	0013      	movs	r3, r2
10048090:	005b      	lsls	r3, r3, #1
10048092:	189b      	adds	r3, r3, r2
10048094:	009b      	lsls	r3, r3, #2
10048096:	18cb      	adds	r3, r1, r3
10048098:	3308      	adds	r3, #8
1004809a:	6819      	ldr	r1, [r3, #0]
1004809c:	69bb      	ldr	r3, [r7, #24]
1004809e:	1c5a      	adds	r2, r3, #1
100480a0:	0013      	movs	r3, r2
100480a2:	005b      	lsls	r3, r3, #1
100480a4:	189b      	adds	r3, r3, r2
100480a6:	009b      	lsls	r3, r3, #2
100480a8:	18cb      	adds	r3, r1, r3
100480aa:	6859      	ldr	r1, [r3, #4]
100480ac:	2313      	movs	r3, #19
100480ae:	18fb      	adds	r3, r7, r3
100480b0:	781a      	ldrb	r2, [r3, #0]
100480b2:	68fb      	ldr	r3, [r7, #12]
100480b4:	18c9      	adds	r1, r1, r3
100480b6:	4862      	ldr	r0, [pc, #392]	@ (10048240 <NVMDB_Init+0x2b4>)
100480b8:	0013      	movs	r3, r2
100480ba:	009b      	lsls	r3, r3, #2
100480bc:	189b      	adds	r3, r3, r2
100480be:	009b      	lsls	r3, r3, #2
100480c0:	18c3      	adds	r3, r0, r3
100480c2:	3304      	adds	r3, #4
100480c4:	6019      	str	r1, [r3, #0]
      }
      DBInfo[id].clean_threshold = clean_threshold;
100480c6:	2013      	movs	r0, #19
100480c8:	183b      	adds	r3, r7, r0
100480ca:	781a      	ldrb	r2, [r3, #0]
100480cc:	495c      	ldr	r1, [pc, #368]	@ (10048240 <NVMDB_Init+0x2b4>)
100480ce:	0013      	movs	r3, r2
100480d0:	009b      	lsls	r3, r3, #2
100480d2:	189b      	adds	r3, r3, r2
100480d4:	009b      	lsls	r3, r3, #2
100480d6:	18cb      	adds	r3, r1, r3
100480d8:	3310      	adds	r3, #16
100480da:	1dba      	adds	r2, r7, #6
100480dc:	8812      	ldrh	r2, [r2, #0]
100480de:	801a      	strh	r2, [r3, #0]

      status = NVMDB_get_info(&DBInfo[id]);
100480e0:	183b      	adds	r3, r7, r0
100480e2:	781a      	ldrb	r2, [r3, #0]
100480e4:	0013      	movs	r3, r2
100480e6:	009b      	lsls	r3, r3, #2
100480e8:	189b      	adds	r3, r3, r2
100480ea:	009b      	lsls	r3, r3, #2
100480ec:	4a54      	ldr	r2, [pc, #336]	@ (10048240 <NVMDB_Init+0x2b4>)
100480ee:	189b      	adds	r3, r3, r2
100480f0:	2512      	movs	r5, #18
100480f2:	197c      	adds	r4, r7, r5
100480f4:	0018      	movs	r0, r3
100480f6:	f7fe ff3b 	bl	10046f70 <NVMDB_get_info>
100480fa:	0003      	movs	r3, r0
100480fc:	7023      	strb	r3, [r4, #0]
      if(status)
100480fe:	197b      	adds	r3, r7, r5
10048100:	781b      	ldrb	r3, [r3, #0]
10048102:	2b00      	cmp	r3, #0
10048104:	d002      	beq.n	1004810c <NVMDB_Init+0x180>
      {
        return status;
10048106:	197b      	adds	r3, r7, r5
10048108:	781b      	ldrb	r3, [r3, #0]
1004810a:	e093      	b.n	10048234 <NVMDB_Init+0x2a8>
    for(int j = 0; j < NVM_SMALL_DB_STATIC_INFO[i].num_db; j++)
1004810c:	69bb      	ldr	r3, [r7, #24]
1004810e:	3301      	adds	r3, #1
10048110:	61bb      	str	r3, [r7, #24]
10048112:	494a      	ldr	r1, [pc, #296]	@ (1004823c <NVMDB_Init+0x2b0>)
10048114:	69fa      	ldr	r2, [r7, #28]
10048116:	0013      	movs	r3, r2
10048118:	005b      	lsls	r3, r3, #1
1004811a:	189b      	adds	r3, r3, r2
1004811c:	009b      	lsls	r3, r3, #2
1004811e:	18cb      	adds	r3, r1, r3
10048120:	3304      	adds	r3, #4
10048122:	781b      	ldrb	r3, [r3, #0]
10048124:	001a      	movs	r2, r3
10048126:	69bb      	ldr	r3, [r7, #24]
10048128:	4293      	cmp	r3, r2
1004812a:	da00      	bge.n	1004812e <NVMDB_Init+0x1a2>
1004812c:	e73f      	b.n	10047fae <NVMDB_Init+0x22>
  for(int i = 0; i < NUM_SMALL_DB_PAGES; i++)
1004812e:	69fb      	ldr	r3, [r7, #28]
10048130:	3301      	adds	r3, #1
10048132:	61fb      	str	r3, [r7, #28]
10048134:	69fb      	ldr	r3, [r7, #28]
10048136:	2b00      	cmp	r3, #0
10048138:	da00      	bge.n	1004813c <NVMDB_Init+0x1b0>
1004813a:	e72d      	b.n	10047f98 <NVMDB_Init+0xc>
      }
    }
  }

  /* Parse large DBs. */
  for(int i = 0; i < NUM_LARGE_DBS; i++)
1004813c:	2300      	movs	r3, #0
1004813e:	617b      	str	r3, [r7, #20]
10048140:	e074      	b.n	1004822c <NVMDB_Init+0x2a0>
  {

    id = NVM_LARGE_DB_STATIC_INFO[i].id;
10048142:	2413      	movs	r4, #19
10048144:	1939      	adds	r1, r7, r4
10048146:	483f      	ldr	r0, [pc, #252]	@ (10048244 <NVMDB_Init+0x2b8>)
10048148:	697a      	ldr	r2, [r7, #20]
1004814a:	0013      	movs	r3, r2
1004814c:	005b      	lsls	r3, r3, #1
1004814e:	189b      	adds	r3, r3, r2
10048150:	009b      	lsls	r3, r3, #2
10048152:	18c3      	adds	r3, r0, r3
10048154:	3306      	adds	r3, #6
10048156:	781b      	ldrb	r3, [r3, #0]
10048158:	700b      	strb	r3, [r1, #0]

    if(DBInfo[id].start_address || id >= NUM_DB)
1004815a:	193b      	adds	r3, r7, r4
1004815c:	781a      	ldrb	r2, [r3, #0]
1004815e:	4938      	ldr	r1, [pc, #224]	@ (10048240 <NVMDB_Init+0x2b4>)
10048160:	0013      	movs	r3, r2
10048162:	009b      	lsls	r3, r3, #2
10048164:	189b      	adds	r3, r3, r2
10048166:	009b      	lsls	r3, r3, #2
10048168:	585b      	ldr	r3, [r3, r1]
1004816a:	2b00      	cmp	r3, #0
1004816c:	d103      	bne.n	10048176 <NVMDB_Init+0x1ea>
1004816e:	193b      	adds	r3, r7, r4
10048170:	781b      	ldrb	r3, [r3, #0]
10048172:	2b01      	cmp	r3, #1
10048174:	d901      	bls.n	1004817a <NVMDB_Init+0x1ee>
    {
      // ID already used.
      return NVMDB_STATUS_INVALID_ID;
10048176:	2301      	movs	r3, #1
10048178:	e05c      	b.n	10048234 <NVMDB_Init+0x2a8>
    }

    DBInfo[id].start_address = NVM_LARGE_DB_STATIC_INFO[i].address;
1004817a:	2413      	movs	r4, #19
1004817c:	193b      	adds	r3, r7, r4
1004817e:	781a      	ldrb	r2, [r3, #0]
10048180:	4830      	ldr	r0, [pc, #192]	@ (10048244 <NVMDB_Init+0x2b8>)
10048182:	6979      	ldr	r1, [r7, #20]
10048184:	000b      	movs	r3, r1
10048186:	005b      	lsls	r3, r3, #1
10048188:	185b      	adds	r3, r3, r1
1004818a:	009b      	lsls	r3, r3, #2
1004818c:	5818      	ldr	r0, [r3, r0]
1004818e:	492c      	ldr	r1, [pc, #176]	@ (10048240 <NVMDB_Init+0x2b4>)
10048190:	0013      	movs	r3, r2
10048192:	009b      	lsls	r3, r3, #2
10048194:	189b      	adds	r3, r3, r2
10048196:	009b      	lsls	r3, r3, #2
10048198:	5058      	str	r0, [r3, r1]
    DBInfo[id].end_address = NVM_LARGE_DB_STATIC_INFO[i].address + NVM_LARGE_DB_STATIC_INFO[i].size;
1004819a:	492a      	ldr	r1, [pc, #168]	@ (10048244 <NVMDB_Init+0x2b8>)
1004819c:	697a      	ldr	r2, [r7, #20]
1004819e:	0013      	movs	r3, r2
100481a0:	005b      	lsls	r3, r3, #1
100481a2:	189b      	adds	r3, r3, r2
100481a4:	009b      	lsls	r3, r3, #2
100481a6:	5859      	ldr	r1, [r3, r1]
100481a8:	4826      	ldr	r0, [pc, #152]	@ (10048244 <NVMDB_Init+0x2b8>)
100481aa:	697a      	ldr	r2, [r7, #20]
100481ac:	0013      	movs	r3, r2
100481ae:	005b      	lsls	r3, r3, #1
100481b0:	189b      	adds	r3, r3, r2
100481b2:	009b      	lsls	r3, r3, #2
100481b4:	18c3      	adds	r3, r0, r3
100481b6:	3304      	adds	r3, #4
100481b8:	881b      	ldrh	r3, [r3, #0]
100481ba:	0018      	movs	r0, r3
100481bc:	193b      	adds	r3, r7, r4
100481be:	781a      	ldrb	r2, [r3, #0]
100481c0:	1809      	adds	r1, r1, r0
100481c2:	481f      	ldr	r0, [pc, #124]	@ (10048240 <NVMDB_Init+0x2b4>)
100481c4:	0013      	movs	r3, r2
100481c6:	009b      	lsls	r3, r3, #2
100481c8:	189b      	adds	r3, r3, r2
100481ca:	009b      	lsls	r3, r3, #2
100481cc:	18c3      	adds	r3, r0, r3
100481ce:	3304      	adds	r3, #4
100481d0:	6019      	str	r1, [r3, #0]
#if AUTO_CLEAN
    DBInfo[id].clean_threshold = NVM_LARGE_DB_STATIC_INFO[i].clean_threshold;
100481d2:	193b      	adds	r3, r7, r4
100481d4:	781a      	ldrb	r2, [r3, #0]
100481d6:	481b      	ldr	r0, [pc, #108]	@ (10048244 <NVMDB_Init+0x2b8>)
100481d8:	6979      	ldr	r1, [r7, #20]
100481da:	000b      	movs	r3, r1
100481dc:	005b      	lsls	r3, r3, #1
100481de:	185b      	adds	r3, r3, r1
100481e0:	009b      	lsls	r3, r3, #2
100481e2:	18c3      	adds	r3, r0, r3
100481e4:	3308      	adds	r3, #8
100481e6:	8818      	ldrh	r0, [r3, #0]
100481e8:	4915      	ldr	r1, [pc, #84]	@ (10048240 <NVMDB_Init+0x2b4>)
100481ea:	0013      	movs	r3, r2
100481ec:	009b      	lsls	r3, r3, #2
100481ee:	189b      	adds	r3, r3, r2
100481f0:	009b      	lsls	r3, r3, #2
100481f2:	18cb      	adds	r3, r1, r3
100481f4:	3310      	adds	r3, #16
100481f6:	1c02      	adds	r2, r0, #0
100481f8:	801a      	strh	r2, [r3, #0]
#endif

    status = NVMDB_get_info(&DBInfo[id]);
100481fa:	193b      	adds	r3, r7, r4
100481fc:	781a      	ldrb	r2, [r3, #0]
100481fe:	0013      	movs	r3, r2
10048200:	009b      	lsls	r3, r3, #2
10048202:	189b      	adds	r3, r3, r2
10048204:	009b      	lsls	r3, r3, #2
10048206:	4a0e      	ldr	r2, [pc, #56]	@ (10048240 <NVMDB_Init+0x2b4>)
10048208:	189b      	adds	r3, r3, r2
1004820a:	2512      	movs	r5, #18
1004820c:	197c      	adds	r4, r7, r5
1004820e:	0018      	movs	r0, r3
10048210:	f7fe feae 	bl	10046f70 <NVMDB_get_info>
10048214:	0003      	movs	r3, r0
10048216:	7023      	strb	r3, [r4, #0]
    if(status)
10048218:	197b      	adds	r3, r7, r5
1004821a:	781b      	ldrb	r3, [r3, #0]
1004821c:	2b00      	cmp	r3, #0
1004821e:	d002      	beq.n	10048226 <NVMDB_Init+0x29a>
    {
      return status;
10048220:	197b      	adds	r3, r7, r5
10048222:	781b      	ldrb	r3, [r3, #0]
10048224:	e006      	b.n	10048234 <NVMDB_Init+0x2a8>
  for(int i = 0; i < NUM_LARGE_DBS; i++)
10048226:	697b      	ldr	r3, [r7, #20]
10048228:	3301      	adds	r3, #1
1004822a:	617b      	str	r3, [r7, #20]
1004822c:	697b      	ldr	r3, [r7, #20]
1004822e:	2b01      	cmp	r3, #1
10048230:	dd87      	ble.n	10048142 <NVMDB_Init+0x1b6>
    }
  }

  return NVMDB_STATUS_OK;
10048232:	2300      	movs	r3, #0
}
10048234:	0018      	movs	r0, r3
10048236:	46bd      	mov	sp, r7
10048238:	b008      	add	sp, #32
1004823a:	bdb0      	pop	{r4, r5, r7, pc}
1004823c:	200005c0 	.word	0x200005c0
10048240:	20000594 	.word	0x20000594
10048244:	1006e688 	.word	0x1006e688

10048248 <NVMDB_HandleInit>:
 *             through NVM_SMALL_DB_STATIC_INFO and NVM_LARGE_DB_STATIC_INFO variables.
 * @param[out] handle_p Pointer to the handle to be initialized.
 * @retval Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_HandleInit(NVMDB_IdType NVMDB_id, NVMDB_HandleType *handle_p)
{
10048248:	b580      	push	{r7, lr}
1004824a:	b082      	sub	sp, #8
1004824c:	af00      	add	r7, sp, #0
1004824e:	0002      	movs	r2, r0
10048250:	6039      	str	r1, [r7, #0]
10048252:	1dfb      	adds	r3, r7, #7
10048254:	701a      	strb	r2, [r3, #0]
  if(NVMDB_id >= NUM_DB)
10048256:	1dfb      	adds	r3, r7, #7
10048258:	781b      	ldrb	r3, [r3, #0]
1004825a:	2b01      	cmp	r3, #1
1004825c:	d901      	bls.n	10048262 <NVMDB_HandleInit+0x1a>
  {
    return NVMDB_STATUS_INVALID_ID;
1004825e:	2301      	movs	r3, #1
10048260:	e020      	b.n	100482a4 <NVMDB_HandleInit+0x5c>
  }

  handle_p->address = DBInfo[NVMDB_id].start_address;
10048262:	1dfb      	adds	r3, r7, #7
10048264:	781a      	ldrb	r2, [r3, #0]
10048266:	4911      	ldr	r1, [pc, #68]	@ (100482ac <NVMDB_HandleInit+0x64>)
10048268:	0013      	movs	r3, r2
1004826a:	009b      	lsls	r3, r3, #2
1004826c:	189b      	adds	r3, r3, r2
1004826e:	009b      	lsls	r3, r3, #2
10048270:	585a      	ldr	r2, [r3, r1]
10048272:	683b      	ldr	r3, [r7, #0]
10048274:	605a      	str	r2, [r3, #4]
  handle_p->end_address = DBInfo[NVMDB_id].end_address;
10048276:	1dfb      	adds	r3, r7, #7
10048278:	781a      	ldrb	r2, [r3, #0]
1004827a:	490c      	ldr	r1, [pc, #48]	@ (100482ac <NVMDB_HandleInit+0x64>)
1004827c:	0013      	movs	r3, r2
1004827e:	009b      	lsls	r3, r3, #2
10048280:	189b      	adds	r3, r3, r2
10048282:	009b      	lsls	r3, r3, #2
10048284:	18cb      	adds	r3, r1, r3
10048286:	3304      	adds	r3, #4
10048288:	681a      	ldr	r2, [r3, #0]
1004828a:	683b      	ldr	r3, [r7, #0]
1004828c:	609a      	str	r2, [r3, #8]
  handle_p->first_read = TRUE;
1004828e:	683b      	ldr	r3, [r7, #0]
10048290:	2201      	movs	r2, #1
10048292:	731a      	strb	r2, [r3, #12]
  handle_p->id = NVMDB_id;
10048294:	683b      	ldr	r3, [r7, #0]
10048296:	1dfa      	adds	r2, r7, #7
10048298:	7812      	ldrb	r2, [r2, #0]
1004829a:	701a      	strb	r2, [r3, #0]
  handle_p->cache = FALSE;
1004829c:	683b      	ldr	r3, [r7, #0]
1004829e:	2200      	movs	r2, #0
100482a0:	735a      	strb	r2, [r3, #13]

  return NVMDB_STATUS_OK;
100482a2:	2300      	movs	r3, #0
}
100482a4:	0018      	movs	r0, r3
100482a6:	46bd      	mov	sp, r7
100482a8:	b002      	add	sp, #8
100482aa:	bd80      	pop	{r7, pc}
100482ac:	20000594 	.word	0x20000594

100482b0 <NVMDB_ReadNextRecord>:
 * @param      max_size Size of the buffer pointed by data_p.
 * @param[out] size_p Size of the read record.
 * @retval     Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_ReadNextRecord(NVMDB_HandleType *handle_p, uint8_t record_type, NVMDB_RecordSizeType data_offset, uint8_t *data_p, NVMDB_RecordSizeType max_size, NVMDB_RecordSizeType *size_p)
{
100482b0:	b590      	push	{r4, r7, lr}
100482b2:	b089      	sub	sp, #36	@ 0x24
100482b4:	af04      	add	r7, sp, #16
100482b6:	60f8      	str	r0, [r7, #12]
100482b8:	0008      	movs	r0, r1
100482ba:	0011      	movs	r1, r2
100482bc:	607b      	str	r3, [r7, #4]
100482be:	230b      	movs	r3, #11
100482c0:	18fb      	adds	r3, r7, r3
100482c2:	1c02      	adds	r2, r0, #0
100482c4:	701a      	strb	r2, [r3, #0]
100482c6:	2308      	movs	r3, #8
100482c8:	18fb      	adds	r3, r7, r3
100482ca:	1c0a      	adds	r2, r1, #0
100482cc:	801a      	strh	r2, [r3, #0]
  if(DBInfo[handle_p->id].locked)
100482ce:	68fb      	ldr	r3, [r7, #12]
100482d0:	781b      	ldrb	r3, [r3, #0]
100482d2:	0019      	movs	r1, r3
100482d4:	4a12      	ldr	r2, [pc, #72]	@ (10048320 <NVMDB_ReadNextRecord+0x70>)
100482d6:	000b      	movs	r3, r1
100482d8:	009b      	lsls	r3, r3, #2
100482da:	185b      	adds	r3, r3, r1
100482dc:	009b      	lsls	r3, r3, #2
100482de:	18d3      	adds	r3, r2, r3
100482e0:	330e      	adds	r3, #14
100482e2:	781b      	ldrb	r3, [r3, #0]
100482e4:	2b00      	cmp	r3, #0
100482e6:	d001      	beq.n	100482ec <NVMDB_ReadNextRecord+0x3c>
  {
    return NVMDB_STATUS_LOCKED;
100482e8:	230a      	movs	r3, #10
100482ea:	e015      	b.n	10048318 <NVMDB_ReadNextRecord+0x68>
  }

  return ReadNextRecordNoLock(handle_p, record_type, data_offset, data_p, max_size, size_p, 0, NULL);
100482ec:	687c      	ldr	r4, [r7, #4]
100482ee:	2308      	movs	r3, #8
100482f0:	18fb      	adds	r3, r7, r3
100482f2:	881a      	ldrh	r2, [r3, #0]
100482f4:	230b      	movs	r3, #11
100482f6:	18fb      	adds	r3, r7, r3
100482f8:	7819      	ldrb	r1, [r3, #0]
100482fa:	68f8      	ldr	r0, [r7, #12]
100482fc:	2300      	movs	r3, #0
100482fe:	9303      	str	r3, [sp, #12]
10048300:	2300      	movs	r3, #0
10048302:	9302      	str	r3, [sp, #8]
10048304:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
10048306:	9301      	str	r3, [sp, #4]
10048308:	2320      	movs	r3, #32
1004830a:	18fb      	adds	r3, r7, r3
1004830c:	881b      	ldrh	r3, [r3, #0]
1004830e:	9300      	str	r3, [sp, #0]
10048310:	0023      	movs	r3, r4
10048312:	f7fe fef9 	bl	10047108 <ReadNextRecordNoLock>
10048316:	0003      	movs	r3, r0
}
10048318:	0018      	movs	r0, r3
1004831a:	46bd      	mov	sp, r7
1004831c:	b005      	add	sp, #20
1004831e:	bd90      	pop	{r4, r7, pc}
10048320:	20000594 	.word	0x20000594

10048324 <NVMDB_ReadCurrentRecord>:
 * @param      max_size Size of the buffer pointed by data_p.
 * @param[out] size_p Size of the read record.
 * @retval     Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_ReadCurrentRecord(NVMDB_HandleType *handle_p, NVMDB_RecordSizeType data_offset, uint8_t *data_p, NVMDB_RecordSizeType max_size, NVMDB_RecordSizeType *size_p)
{
10048324:	b590      	push	{r4, r7, lr}
10048326:	b087      	sub	sp, #28
10048328:	af02      	add	r7, sp, #8
1004832a:	60f8      	str	r0, [r7, #12]
1004832c:	0008      	movs	r0, r1
1004832e:	607a      	str	r2, [r7, #4]
10048330:	0019      	movs	r1, r3
10048332:	230a      	movs	r3, #10
10048334:	18fb      	adds	r3, r7, r3
10048336:	1c02      	adds	r2, r0, #0
10048338:	801a      	strh	r2, [r3, #0]
1004833a:	2308      	movs	r3, #8
1004833c:	18fb      	adds	r3, r7, r3
1004833e:	1c0a      	adds	r2, r1, #0
10048340:	801a      	strh	r2, [r3, #0]
  if(DBInfo[handle_p->id].locked)
10048342:	68fb      	ldr	r3, [r7, #12]
10048344:	781b      	ldrb	r3, [r3, #0]
10048346:	0019      	movs	r1, r3
10048348:	4a0f      	ldr	r2, [pc, #60]	@ (10048388 <NVMDB_ReadCurrentRecord+0x64>)
1004834a:	000b      	movs	r3, r1
1004834c:	009b      	lsls	r3, r3, #2
1004834e:	185b      	adds	r3, r3, r1
10048350:	009b      	lsls	r3, r3, #2
10048352:	18d3      	adds	r3, r2, r3
10048354:	330e      	adds	r3, #14
10048356:	781b      	ldrb	r3, [r3, #0]
10048358:	2b00      	cmp	r3, #0
1004835a:	d001      	beq.n	10048360 <NVMDB_ReadCurrentRecord+0x3c>
  {
    return NVMDB_STATUS_LOCKED;
1004835c:	230a      	movs	r3, #10
1004835e:	e00f      	b.n	10048380 <NVMDB_ReadCurrentRecord+0x5c>
  }

  return ReadCurrentRecordNoLock(handle_p, data_offset, data_p, max_size, size_p, 0);
10048360:	2308      	movs	r3, #8
10048362:	18fb      	adds	r3, r7, r3
10048364:	881c      	ldrh	r4, [r3, #0]
10048366:	687a      	ldr	r2, [r7, #4]
10048368:	230a      	movs	r3, #10
1004836a:	18fb      	adds	r3, r7, r3
1004836c:	8819      	ldrh	r1, [r3, #0]
1004836e:	68f8      	ldr	r0, [r7, #12]
10048370:	2300      	movs	r3, #0
10048372:	9301      	str	r3, [sp, #4]
10048374:	6a3b      	ldr	r3, [r7, #32]
10048376:	9300      	str	r3, [sp, #0]
10048378:	0023      	movs	r3, r4
1004837a:	f7ff f81c 	bl	100473b6 <ReadCurrentRecordNoLock>
1004837e:	0003      	movs	r3, r0
}
10048380:	0018      	movs	r0, r3
10048382:	46bd      	mov	sp, r7
10048384:	b005      	add	sp, #20
10048386:	bd90      	pop	{r4, r7, pc}
10048388:	20000594 	.word	0x20000594

1004838c <NVMDB_AppendRecord>:
 * @param      header_length Length of bytes in data.
 * @param[in]  data Data to be stored inside the record.
 * @retval     Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_AppendRecord(NVMDB_HandleType *handle_p, uint8_t record_type, uint16_t header_length, const void *header, uint16_t data_length, const void *data)
{
1004838c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004838e:	46c6      	mov	lr, r8
10048390:	b500      	push	{lr}
10048392:	b088      	sub	sp, #32
10048394:	af02      	add	r7, sp, #8
10048396:	60f8      	str	r0, [r7, #12]
10048398:	0008      	movs	r0, r1
1004839a:	0011      	movs	r1, r2
1004839c:	607b      	str	r3, [r7, #4]
1004839e:	230b      	movs	r3, #11
100483a0:	001c      	movs	r4, r3
100483a2:	18fb      	adds	r3, r7, r3
100483a4:	1c02      	adds	r2, r0, #0
100483a6:	701a      	strb	r2, [r3, #0]
100483a8:	2008      	movs	r0, #8
100483aa:	183b      	adds	r3, r7, r0
100483ac:	1c0a      	adds	r2, r1, #0
100483ae:	801a      	strh	r2, [r3, #0]
  }

success:

#else /* NVM_CACHE */
  status = NVMDB_AppendRecordNoCache(handle_p, record_type, header_length, header, data_length, data);
100483b0:	2617      	movs	r6, #23
100483b2:	46b0      	mov	r8, r6
100483b4:	44b8      	add	r8, r7
100483b6:	687d      	ldr	r5, [r7, #4]
100483b8:	183b      	adds	r3, r7, r0
100483ba:	881a      	ldrh	r2, [r3, #0]
100483bc:	0023      	movs	r3, r4
100483be:	18fb      	adds	r3, r7, r3
100483c0:	7819      	ldrb	r1, [r3, #0]
100483c2:	68f8      	ldr	r0, [r7, #12]
100483c4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
100483c6:	9301      	str	r3, [sp, #4]
100483c8:	2328      	movs	r3, #40	@ 0x28
100483ca:	2408      	movs	r4, #8
100483cc:	191b      	adds	r3, r3, r4
100483ce:	19db      	adds	r3, r3, r7
100483d0:	881b      	ldrh	r3, [r3, #0]
100483d2:	9300      	str	r3, [sp, #0]
100483d4:	002b      	movs	r3, r5
100483d6:	f7ff fd19 	bl	10047e0c <NVMDB_AppendRecordNoCache>
100483da:	0003      	movs	r3, r0
100483dc:	4642      	mov	r2, r8
100483de:	7013      	strb	r3, [r2, #0]

  if(status != NVMDB_STATUS_OK)
100483e0:	19bb      	adds	r3, r7, r6
100483e2:	781b      	ldrb	r3, [r3, #0]
100483e4:	2b00      	cmp	r3, #0
100483e6:	d002      	beq.n	100483ee <NVMDB_AppendRecord+0x62>
  {
    return status;
100483e8:	19bb      	adds	r3, r7, r6
100483ea:	781b      	ldrb	r3, [r3, #0]
100483ec:	e02c      	b.n	10048448 <NVMDB_AppendRecord+0xbc>
  }

#endif

  /* Take into account that the free space is reduced, even if the record is actually in cache.  */
  DBInfo[handle_p->id].free_space -= ROUND4_R(header_length + data_length) + RECORD_HEADER_SIZE;
100483ee:	68fb      	ldr	r3, [r7, #12]
100483f0:	781b      	ldrb	r3, [r3, #0]
100483f2:	0019      	movs	r1, r3
100483f4:	4a17      	ldr	r2, [pc, #92]	@ (10048454 <NVMDB_AppendRecord+0xc8>)
100483f6:	000b      	movs	r3, r1
100483f8:	009b      	lsls	r3, r3, #2
100483fa:	185b      	adds	r3, r3, r1
100483fc:	009b      	lsls	r3, r3, #2
100483fe:	18d3      	adds	r3, r2, r3
10048400:	330c      	adds	r3, #12
10048402:	881a      	ldrh	r2, [r3, #0]
10048404:	2308      	movs	r3, #8
10048406:	0018      	movs	r0, r3
10048408:	18f9      	adds	r1, r7, r3
1004840a:	2328      	movs	r3, #40	@ 0x28
1004840c:	181b      	adds	r3, r3, r0
1004840e:	19db      	adds	r3, r3, r7
10048410:	8809      	ldrh	r1, [r1, #0]
10048412:	881b      	ldrh	r3, [r3, #0]
10048414:	18cb      	adds	r3, r1, r3
10048416:	b29b      	uxth	r3, r3
10048418:	3b01      	subs	r3, #1
1004841a:	b29b      	uxth	r3, r3
1004841c:	b21b      	sxth	r3, r3
1004841e:	2103      	movs	r1, #3
10048420:	430b      	orrs	r3, r1
10048422:	b21b      	sxth	r3, r3
10048424:	b29b      	uxth	r3, r3
10048426:	1ad3      	subs	r3, r2, r3
10048428:	b29b      	uxth	r3, r3
1004842a:	68fa      	ldr	r2, [r7, #12]
1004842c:	7812      	ldrb	r2, [r2, #0]
1004842e:	0011      	movs	r1, r2
10048430:	3b05      	subs	r3, #5
10048432:	b298      	uxth	r0, r3
10048434:	4a07      	ldr	r2, [pc, #28]	@ (10048454 <NVMDB_AppendRecord+0xc8>)
10048436:	000b      	movs	r3, r1
10048438:	009b      	lsls	r3, r3, #2
1004843a:	185b      	adds	r3, r3, r1
1004843c:	009b      	lsls	r3, r3, #2
1004843e:	18d3      	adds	r3, r2, r3
10048440:	330c      	adds	r3, #12
10048442:	1c02      	adds	r2, r0, #0
10048444:	801a      	strh	r2, [r3, #0]

  return NVMDB_STATUS_OK;
10048446:	2300      	movs	r3, #0
}
10048448:	0018      	movs	r0, r3
1004844a:	46bd      	mov	sp, r7
1004844c:	b006      	add	sp, #24
1004844e:	bc80      	pop	{r7}
10048450:	46b8      	mov	r8, r7
10048452:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048454:	20000594 	.word	0x20000594

10048458 <NVMDB_DeleteRecord>:
 *
 * @param[in,out] handle_p Handle pointing to the record to be deleted.
 * @retval     Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_DeleteRecord(const NVMDB_HandleType *handle_p)
{
10048458:	b580      	push	{r7, lr}
1004845a:	b082      	sub	sp, #8
1004845c:	af00      	add	r7, sp, #0
1004845e:	6078      	str	r0, [r7, #4]
  /* No time to complete the operation immediately.  */
  return ScheduleDeleteOperation(handle_p->id, handle_p->address);

#else /* NVM_CACHE */

  return NVMDB_DeleteRecordNoCache(handle_p);
10048460:	687b      	ldr	r3, [r7, #4]
10048462:	0018      	movs	r0, r3
10048464:	f7ff f828 	bl	100474b8 <NVMDB_DeleteRecordNoCache>
10048468:	0003      	movs	r3, r0

#endif
}
1004846a:	0018      	movs	r0, r3
1004846c:	46bd      	mov	sp, r7
1004846e:	b002      	add	sp, #8
10048470:	bd80      	pop	{r7, pc}
	...

10048474 <NVMDB_Erase>:
 *
 * @param      NVMDB_id The ID of the record to be erased.
 * @retval     Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_Erase(NVMDB_IdType NVMDB_id)
{
10048474:	b5b0      	push	{r4, r5, r7, lr}
10048476:	b08c      	sub	sp, #48	@ 0x30
10048478:	af00      	add	r7, sp, #0
1004847a:	0002      	movs	r2, r0
1004847c:	1dfb      	adds	r3, r7, #7
1004847e:	701a      	strb	r2, [r3, #0]
  {
    return NVMDB_STATUS_CACHE_OP_PENDING;
  }
#endif

  type = GetDBType(NVMDB_id, &smallDBContainer_p);
10048480:	252b      	movs	r5, #43	@ 0x2b
10048482:	197c      	adds	r4, r7, r5
10048484:	2318      	movs	r3, #24
10048486:	18fa      	adds	r2, r7, r3
10048488:	1dfb      	adds	r3, r7, #7
1004848a:	781b      	ldrb	r3, [r3, #0]
1004848c:	0011      	movs	r1, r2
1004848e:	0018      	movs	r0, r3
10048490:	f7ff fbc6 	bl	10047c20 <GetDBType>
10048494:	0003      	movs	r3, r0
10048496:	7023      	strb	r3, [r4, #0]

  if(type == LARGE_DB)
10048498:	197b      	adds	r3, r7, r5
1004849a:	781b      	ldrb	r3, [r3, #0]
1004849c:	2b02      	cmp	r3, #2
1004849e:	d146      	bne.n	1004852e <NVMDB_Erase+0xba>
  {
    uint8_t page_num_start, num_pages;
    uint32_t start_address = DBInfo[NVMDB_id].start_address;
100484a0:	1dfb      	adds	r3, r7, #7
100484a2:	781a      	ldrb	r2, [r3, #0]
100484a4:	4942      	ldr	r1, [pc, #264]	@ (100485b0 <NVMDB_Erase+0x13c>)
100484a6:	0013      	movs	r3, r2
100484a8:	009b      	lsls	r3, r3, #2
100484aa:	189b      	adds	r3, r3, r2
100484ac:	009b      	lsls	r3, r3, #2
100484ae:	585b      	ldr	r3, [r3, r1]
100484b0:	627b      	str	r3, [r7, #36]	@ 0x24
    uint32_t end_address = DBInfo[NVMDB_id].end_address;
100484b2:	1dfb      	adds	r3, r7, #7
100484b4:	781a      	ldrb	r2, [r3, #0]
100484b6:	493e      	ldr	r1, [pc, #248]	@ (100485b0 <NVMDB_Erase+0x13c>)
100484b8:	0013      	movs	r3, r2
100484ba:	009b      	lsls	r3, r3, #2
100484bc:	189b      	adds	r3, r3, r2
100484be:	009b      	lsls	r3, r3, #2
100484c0:	18cb      	adds	r3, r1, r3
100484c2:	3304      	adds	r3, #4
100484c4:	681b      	ldr	r3, [r3, #0]
100484c6:	623b      	str	r3, [r7, #32]

    page_num_start = (start_address - _MEMORY_FLASH_BEGIN_) / PAGE_SIZE;
100484c8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100484ca:	4a3a      	ldr	r2, [pc, #232]	@ (100485b4 <NVMDB_Erase+0x140>)
100484cc:	4694      	mov	ip, r2
100484ce:	4463      	add	r3, ip
100484d0:	0ada      	lsrs	r2, r3, #11
100484d2:	201f      	movs	r0, #31
100484d4:	183b      	adds	r3, r7, r0
100484d6:	701a      	strb	r2, [r3, #0]
    num_pages = (ROUNDPAGE_R(end_address) - start_address) / PAGE_SIZE;
100484d8:	6a3b      	ldr	r3, [r7, #32]
100484da:	3b01      	subs	r3, #1
100484dc:	4a36      	ldr	r2, [pc, #216]	@ (100485b8 <NVMDB_Erase+0x144>)
100484de:	431a      	orrs	r2, r3
100484e0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
100484e2:	1ad3      	subs	r3, r2, r3
100484e4:	3301      	adds	r3, #1
100484e6:	0ada      	lsrs	r2, r3, #11
100484e8:	241e      	movs	r4, #30
100484ea:	193b      	adds	r3, r7, r4
100484ec:	701a      	strb	r2, [r3, #0]
      return SchedulePageEraseOperation(NVMDB_id, page_num_start, num_pages);
    }

#else

    NVMDB_FLASH_ERASE_PAGE(page_num_start, num_pages);
100484ee:	210c      	movs	r1, #12
100484f0:	187b      	adds	r3, r7, r1
100484f2:	2200      	movs	r2, #0
100484f4:	601a      	str	r2, [r3, #0]
100484f6:	183b      	adds	r3, r7, r0
100484f8:	781a      	ldrb	r2, [r3, #0]
100484fa:	187b      	adds	r3, r7, r1
100484fc:	605a      	str	r2, [r3, #4]
100484fe:	193b      	adds	r3, r7, r4
10048500:	781a      	ldrb	r2, [r3, #0]
10048502:	187b      	adds	r3, r7, r1
10048504:	609a      	str	r2, [r3, #8]
10048506:	2308      	movs	r3, #8
10048508:	18fa      	adds	r2, r7, r3
1004850a:	187b      	adds	r3, r7, r1
1004850c:	0011      	movs	r1, r2
1004850e:	0018      	movs	r0, r3
10048510:	f001 fd56 	bl	10049fc0 <HAL_FLASHEx_Erase>

#endif

    NVMDB_get_info(&DBInfo[NVMDB_id]);
10048514:	1dfb      	adds	r3, r7, #7
10048516:	781a      	ldrb	r2, [r3, #0]
10048518:	0013      	movs	r3, r2
1004851a:	009b      	lsls	r3, r3, #2
1004851c:	189b      	adds	r3, r3, r2
1004851e:	009b      	lsls	r3, r3, #2
10048520:	4a23      	ldr	r2, [pc, #140]	@ (100485b0 <NVMDB_Erase+0x13c>)
10048522:	189b      	adds	r3, r3, r2
10048524:	0018      	movs	r0, r3
10048526:	f7fe fd23 	bl	10046f70 <NVMDB_get_info>

    return NVMDB_STATUS_OK;
1004852a:	2300      	movs	r3, #0
1004852c:	e03b      	b.n	100485a6 <NVMDB_Erase+0x132>
  }

  if(type == SMALL_DB)
1004852e:	232b      	movs	r3, #43	@ 0x2b
10048530:	18fb      	adds	r3, r7, r3
10048532:	781b      	ldrb	r3, [r3, #0]
10048534:	2b01      	cmp	r3, #1
10048536:	d135      	bne.n	100485a4 <NVMDB_Erase+0x130>
  {

    status = EraseSmallDB(NVMDB_id, smallDBContainer_p);
10048538:	69ba      	ldr	r2, [r7, #24]
1004853a:	252a      	movs	r5, #42	@ 0x2a
1004853c:	197c      	adds	r4, r7, r5
1004853e:	1dfb      	adds	r3, r7, #7
10048540:	781b      	ldrb	r3, [r3, #0]
10048542:	0011      	movs	r1, r2
10048544:	0018      	movs	r0, r3
10048546:	f7ff fbd9 	bl	10047cfc <EraseSmallDB>
1004854a:	0003      	movs	r3, r0
1004854c:	7023      	strb	r3, [r4, #0]

    if(status == NVMDB_STATUS_OK)
1004854e:	197b      	adds	r3, r7, r5
10048550:	781b      	ldrb	r3, [r3, #0]
10048552:	2b00      	cmp	r3, #0
10048554:	d122      	bne.n	1004859c <NVMDB_Erase+0x128>
    {
      // Remove any operations in cache for all the DBs in the page. This means write and delete operations.
      // Cache operations for all the DBs in the same page have been executed by LoadDBToRAM().
      for(int i = 0; i < smallDBContainer_p->num_db; i++)
10048556:	2300      	movs	r3, #0
10048558:	62fb      	str	r3, [r7, #44]	@ 0x2c
1004855a:	e019      	b.n	10048590 <NVMDB_Erase+0x11c>
      {
        NVMDB_IdType id = smallDBContainer_p->dbs[i].id;
1004855c:	69bb      	ldr	r3, [r7, #24]
1004855e:	6899      	ldr	r1, [r3, #8]
10048560:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
10048562:	0013      	movs	r3, r2
10048564:	005b      	lsls	r3, r3, #1
10048566:	189b      	adds	r3, r3, r2
10048568:	009b      	lsls	r3, r3, #2
1004856a:	18ca      	adds	r2, r1, r3
1004856c:	2129      	movs	r1, #41	@ 0x29
1004856e:	187b      	adds	r3, r7, r1
10048570:	7812      	ldrb	r2, [r2, #0]
10048572:	701a      	strb	r2, [r3, #0]
#if NVM_CACHE
        RemoveCacheOp(id);
#endif
        NVMDB_get_info(&DBInfo[id]);
10048574:	187b      	adds	r3, r7, r1
10048576:	781a      	ldrb	r2, [r3, #0]
10048578:	0013      	movs	r3, r2
1004857a:	009b      	lsls	r3, r3, #2
1004857c:	189b      	adds	r3, r3, r2
1004857e:	009b      	lsls	r3, r3, #2
10048580:	4a0b      	ldr	r2, [pc, #44]	@ (100485b0 <NVMDB_Erase+0x13c>)
10048582:	189b      	adds	r3, r3, r2
10048584:	0018      	movs	r0, r3
10048586:	f7fe fcf3 	bl	10046f70 <NVMDB_get_info>
      for(int i = 0; i < smallDBContainer_p->num_db; i++)
1004858a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1004858c:	3301      	adds	r3, #1
1004858e:	62fb      	str	r3, [r7, #44]	@ 0x2c
10048590:	69bb      	ldr	r3, [r7, #24]
10048592:	791b      	ldrb	r3, [r3, #4]
10048594:	001a      	movs	r2, r3
10048596:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
10048598:	4293      	cmp	r3, r2
1004859a:	dbdf      	blt.n	1004855c <NVMDB_Erase+0xe8>
#if NVM_CACHE
      return ScheduleSmallDBEraseOperation(NVMDB_id, smallDBContainer_p);
#endif
    }

    return status;
1004859c:	232a      	movs	r3, #42	@ 0x2a
1004859e:	18fb      	adds	r3, r7, r3
100485a0:	781b      	ldrb	r3, [r3, #0]
100485a2:	e000      	b.n	100485a6 <NVMDB_Erase+0x132>
  }

  return NVMDB_STATUS_INVALID_ID;
100485a4:	2301      	movs	r3, #1
}
100485a6:	0018      	movs	r0, r3
100485a8:	46bd      	mov	sp, r7
100485aa:	b00c      	add	sp, #48	@ 0x30
100485ac:	bdb0      	pop	{r4, r5, r7, pc}
100485ae:	46c0      	nop			@ (mov r8, r8)
100485b0:	20000594 	.word	0x20000594
100485b4:	effc0000 	.word	0xeffc0000
100485b8:	000007ff 	.word	0x000007ff

100485bc <NVMDB_CleanDB>:
 *
 * @param      NVMDB_id The ID of the record to be cleaned.
 * @retval     Indicates if the function executed successfully.
 */
NVMDB_status_t NVMDB_CleanDB(NVMDB_IdType NVMDB_id)
{
100485bc:	b5b0      	push	{r4, r5, r7, lr}
100485be:	b084      	sub	sp, #16
100485c0:	af00      	add	r7, sp, #0
100485c2:	0002      	movs	r2, r0
100485c4:	1dfb      	adds	r3, r7, #7
100485c6:	701a      	strb	r2, [r3, #0]
  const NVMDB_SmallDBContainerType *smallDBContainer;
  uint8_t type;

  type = GetDBType(NVMDB_id, &smallDBContainer);
100485c8:	250f      	movs	r5, #15
100485ca:	197c      	adds	r4, r7, r5
100485cc:	2308      	movs	r3, #8
100485ce:	18fa      	adds	r2, r7, r3
100485d0:	1dfb      	adds	r3, r7, #7
100485d2:	781b      	ldrb	r3, [r3, #0]
100485d4:	0011      	movs	r1, r2
100485d6:	0018      	movs	r0, r3
100485d8:	f7ff fb22 	bl	10047c20 <GetDBType>
100485dc:	0003      	movs	r3, r0
100485de:	7023      	strb	r3, [r4, #0]
  if(type == LARGE_DB)
100485e0:	197b      	adds	r3, r7, r5
100485e2:	781b      	ldrb	r3, [r3, #0]
100485e4:	2b02      	cmp	r3, #2
100485e6:	d106      	bne.n	100485f6 <NVMDB_CleanDB+0x3a>
  {
    return CleanLargeDB(NVMDB_id);
100485e8:	1dfb      	adds	r3, r7, #7
100485ea:	781b      	ldrb	r3, [r3, #0]
100485ec:	0018      	movs	r0, r3
100485ee:	f7ff f92f 	bl	10047850 <CleanLargeDB>
100485f2:	0003      	movs	r3, r0
100485f4:	e00b      	b.n	1004860e <NVMDB_CleanDB+0x52>
  }
  if(type == SMALL_DB)
100485f6:	230f      	movs	r3, #15
100485f8:	18fb      	adds	r3, r7, r3
100485fa:	781b      	ldrb	r3, [r3, #0]
100485fc:	2b01      	cmp	r3, #1
100485fe:	d105      	bne.n	1004860c <NVMDB_CleanDB+0x50>
  {
    return CleanPage(smallDBContainer);
10048600:	68bb      	ldr	r3, [r7, #8]
10048602:	0018      	movs	r0, r3
10048604:	f7ff fa02 	bl	10047a0c <CleanPage>
10048608:	0003      	movs	r3, r0
1004860a:	e000      	b.n	1004860e <NVMDB_CleanDB+0x52>
  }

  return NVMDB_STATUS_INVALID_ID;
1004860c:	2301      	movs	r3, #1
}
1004860e:	0018      	movs	r0, r3
10048610:	46bd      	mov	sp, r7
10048612:	b004      	add	sp, #16
10048614:	bdb0      	pop	{r4, r5, r7, pc}
	...

10048618 <NVMDB_Tick>:
 *             The value NVMDB_STATUS_NOT_ENOUGH_TIME indicates that some operations
 *             cannot be performed because there is not enough time. Other values
 *             indicates unexpected conditions of the database.
 */
NVMDB_status_t NVMDB_Tick(void)
{
10048618:	b590      	push	{r4, r7, lr}
1004861a:	b083      	sub	sp, #12
1004861c:	af00      	add	r7, sp, #0
#endif

#endif /* NVM_CACHE */

#if AUTO_CLEAN
  dirty_db_id = NVMDB_CleanCheck();
1004861e:	1dfc      	adds	r4, r7, #7
10048620:	f000 f816 	bl	10048650 <NVMDB_CleanCheck>
10048624:	0003      	movs	r3, r0
10048626:	7023      	strb	r3, [r4, #0]
  if(dirty_db_id >= 0)
10048628:	1dfb      	adds	r3, r7, #7
1004862a:	781b      	ldrb	r3, [r3, #0]
1004862c:	2b7f      	cmp	r3, #127	@ 0x7f
1004862e:	d808      	bhi.n	10048642 <NVMDB_Tick+0x2a>
  {
    NVMDB_CleanDB((NVMDB_IdType)dirty_db_id);
10048630:	1dfb      	adds	r3, r7, #7
10048632:	781b      	ldrb	r3, [r3, #0]
10048634:	0018      	movs	r0, r3
10048636:	f7ff ffc1 	bl	100485bc <NVMDB_CleanDB>
    PRINTF("Handle possibly not valid anymore!\r\n");
1004863a:	4b04      	ldr	r3, [pc, #16]	@ (1004864c <NVMDB_Tick+0x34>)
1004863c:	0018      	movs	r0, r3
1004863e:	f023 f8c3 	bl	1006b7c8 <puts>
  }
#endif

  return NVMDB_STATUS_OK;
10048642:	2300      	movs	r3, #0
}
10048644:	0018      	movs	r0, r3
10048646:	46bd      	mov	sp, r7
10048648:	b003      	add	sp, #12
1004864a:	bd90      	pop	{r4, r7, pc}
1004864c:	1006e568 	.word	0x1006e568

10048650 <NVMDB_CleanCheck>:

#if AUTO_CLEAN
// Checks if it is a good time to perform a clean operation
static int8_t NVMDB_CleanCheck(void)
{
10048650:	b580      	push	{r7, lr}
10048652:	b082      	sub	sp, #8
10048654:	af00      	add	r7, sp, #0
  static int8_t db_start_index = 0;
  uint8_t i = db_start_index;
10048656:	4b2b      	ldr	r3, [pc, #172]	@ (10048704 <NVMDB_CleanCheck+0xb4>)
10048658:	2200      	movs	r2, #0
1004865a:	569a      	ldrsb	r2, [r3, r2]
1004865c:	1dfb      	adds	r3, r7, #7
1004865e:	701a      	strb	r2, [r3, #0]

  do
  {
    if(DBInfo[i].invalid_records)
10048660:	1dfb      	adds	r3, r7, #7
10048662:	781a      	ldrb	r2, [r3, #0]
10048664:	4928      	ldr	r1, [pc, #160]	@ (10048708 <NVMDB_CleanCheck+0xb8>)
10048666:	0013      	movs	r3, r2
10048668:	009b      	lsls	r3, r3, #2
1004866a:	189b      	adds	r3, r3, r2
1004866c:	009b      	lsls	r3, r3, #2
1004866e:	18cb      	adds	r3, r1, r3
10048670:	330a      	adds	r3, #10
10048672:	881b      	ldrh	r3, [r3, #0]
10048674:	2b00      	cmp	r3, #0
10048676:	d028      	beq.n	100486ca <NVMDB_CleanCheck+0x7a>
    {
      if(DBInfo[i].free_space < DBInfo[i].clean_threshold)
10048678:	1dfb      	adds	r3, r7, #7
1004867a:	781a      	ldrb	r2, [r3, #0]
1004867c:	4922      	ldr	r1, [pc, #136]	@ (10048708 <NVMDB_CleanCheck+0xb8>)
1004867e:	0013      	movs	r3, r2
10048680:	009b      	lsls	r3, r3, #2
10048682:	189b      	adds	r3, r3, r2
10048684:	009b      	lsls	r3, r3, #2
10048686:	18cb      	adds	r3, r1, r3
10048688:	330c      	adds	r3, #12
1004868a:	8819      	ldrh	r1, [r3, #0]
1004868c:	1dfb      	adds	r3, r7, #7
1004868e:	781a      	ldrb	r2, [r3, #0]
10048690:	481d      	ldr	r0, [pc, #116]	@ (10048708 <NVMDB_CleanCheck+0xb8>)
10048692:	0013      	movs	r3, r2
10048694:	009b      	lsls	r3, r3, #2
10048696:	189b      	adds	r3, r3, r2
10048698:	009b      	lsls	r3, r3, #2
1004869a:	18c3      	adds	r3, r0, r3
1004869c:	3310      	adds	r3, #16
1004869e:	881b      	ldrh	r3, [r3, #0]
100486a0:	4299      	cmp	r1, r3
100486a2:	d212      	bcs.n	100486ca <NVMDB_CleanCheck+0x7a>
      {
        // Next time do not start from this db.
        // There may be time to clean another one if this one has not been successfully cleaned.
        db_start_index = i + 1;
100486a4:	1dfb      	adds	r3, r7, #7
100486a6:	781b      	ldrb	r3, [r3, #0]
100486a8:	3301      	adds	r3, #1
100486aa:	b2db      	uxtb	r3, r3
100486ac:	b25a      	sxtb	r2, r3
100486ae:	4b15      	ldr	r3, [pc, #84]	@ (10048704 <NVMDB_CleanCheck+0xb4>)
100486b0:	701a      	strb	r2, [r3, #0]
        if(db_start_index == NUM_DB)
100486b2:	4b14      	ldr	r3, [pc, #80]	@ (10048704 <NVMDB_CleanCheck+0xb4>)
100486b4:	781b      	ldrb	r3, [r3, #0]
100486b6:	b25b      	sxtb	r3, r3
100486b8:	2b02      	cmp	r3, #2
100486ba:	d102      	bne.n	100486c2 <NVMDB_CleanCheck+0x72>
        {
          db_start_index = 0;
100486bc:	4b11      	ldr	r3, [pc, #68]	@ (10048704 <NVMDB_CleanCheck+0xb4>)
100486be:	2200      	movs	r2, #0
100486c0:	701a      	strb	r2, [r3, #0]
        }
        return i;
100486c2:	1dfb      	adds	r3, r7, #7
100486c4:	781b      	ldrb	r3, [r3, #0]
100486c6:	b25b      	sxtb	r3, r3
100486c8:	e017      	b.n	100486fa <NVMDB_CleanCheck+0xaa>
      }
    }

    i++;
100486ca:	1dfb      	adds	r3, r7, #7
100486cc:	781a      	ldrb	r2, [r3, #0]
100486ce:	1dfb      	adds	r3, r7, #7
100486d0:	3201      	adds	r2, #1
100486d2:	701a      	strb	r2, [r3, #0]
    if(i == NUM_DB)
100486d4:	1dfb      	adds	r3, r7, #7
100486d6:	781b      	ldrb	r3, [r3, #0]
100486d8:	2b02      	cmp	r3, #2
100486da:	d102      	bne.n	100486e2 <NVMDB_CleanCheck+0x92>
    {
      i = 0;
100486dc:	1dfb      	adds	r3, r7, #7
100486de:	2200      	movs	r2, #0
100486e0:	701a      	strb	r2, [r3, #0]
    }
  }
  while(i != db_start_index);
100486e2:	1dfb      	adds	r3, r7, #7
100486e4:	781b      	ldrb	r3, [r3, #0]
100486e6:	4a07      	ldr	r2, [pc, #28]	@ (10048704 <NVMDB_CleanCheck+0xb4>)
100486e8:	7812      	ldrb	r2, [r2, #0]
100486ea:	b252      	sxtb	r2, r2
100486ec:	4293      	cmp	r3, r2
100486ee:	d1b7      	bne.n	10048660 <NVMDB_CleanCheck+0x10>

  // All databases have been checked. We can start from first position next time (but not strictly needed).
  db_start_index = 0;
100486f0:	4b04      	ldr	r3, [pc, #16]	@ (10048704 <NVMDB_CleanCheck+0xb4>)
100486f2:	2200      	movs	r2, #0
100486f4:	701a      	strb	r2, [r3, #0]

  return -1; // No db to clean
100486f6:	2301      	movs	r3, #1
100486f8:	425b      	negs	r3, r3
}
100486fa:	0018      	movs	r0, r3
100486fc:	46bd      	mov	sp, r7
100486fe:	b002      	add	sp, #8
10048700:	bd80      	pop	{r7, pc}
10048702:	46c0      	nop			@ (mov r8, r8)
10048704:	200005bc 	.word	0x200005bc
10048708:	20000594 	.word	0x20000594

1004870c <PKAMGR_Init>:

/** @defgroup PKA_Manager_Public_Functions Public Functions
* @{
*/
PKAMGR_ResultStatus PKAMGR_Init(void)
{
1004870c:	b580      	push	{r7, lr}
1004870e:	af00      	add	r7, sp, #0
    internalState = PKAMGR_STATE_IDLE;
10048710:	4b03      	ldr	r3, [pc, #12]	@ (10048720 <PKAMGR_Init+0x14>)
10048712:	2201      	movs	r2, #1
10048714:	601a      	str	r2, [r3, #0]

  return PKAMGR_SUCCESS;
10048716:	2300      	movs	r3, #0
}
10048718:	0018      	movs	r0, r3
1004871a:	46bd      	mov	sp, r7
1004871c:	bd80      	pop	{r7, pc}
1004871e:	46c0      	nop			@ (mov r8, r8)
10048720:	20000a78 	.word	0x20000a78

10048724 <PKAMGR_Unlock>:

  return return_value;
}

PKAMGR_ResultStatus PKAMGR_Unlock()
{
10048724:	b580      	push	{r7, lr}
10048726:	b084      	sub	sp, #16
10048728:	af00      	add	r7, sp, #0
  PKAMGR_ResultStatus return_value = PKAMGR_SUCCESS;
1004872a:	210f      	movs	r1, #15
1004872c:	187b      	adds	r3, r7, r1
1004872e:	2200      	movs	r2, #0
10048730:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
10048732:	f3ef 8310 	mrs	r3, PRIMASK
10048736:	607b      	str	r3, [r7, #4]
  return(result);
10048738:	687b      	ldr	r3, [r7, #4]

  /* Only one consumer (Application layer or Stack) can use the PKA at the time */
  ATOMIC_SECTION_BEGIN();
1004873a:	60bb      	str	r3, [r7, #8]
  __ASM volatile ("cpsid i" : : : "memory");
1004873c:	b672      	cpsid	i
}
1004873e:	46c0      	nop			@ (mov r8, r8)
  if(internalState != PKAMGR_STATE_BUSY)
10048740:	4b0c      	ldr	r3, [pc, #48]	@ (10048774 <PKAMGR_Unlock+0x50>)
10048742:	681b      	ldr	r3, [r3, #0]
10048744:	2b03      	cmp	r3, #3
10048746:	d003      	beq.n	10048750 <PKAMGR_Unlock+0x2c>
  {
    return_value = PKAMGR_ERR_BUSY;
10048748:	187b      	adds	r3, r7, r1
1004874a:	22fe      	movs	r2, #254	@ 0xfe
1004874c:	701a      	strb	r2, [r3, #0]
1004874e:	e002      	b.n	10048756 <PKAMGR_Unlock+0x32>
  }
  else
  {
    /* Unlock mechanism to access concurrently at the PKA resource */
    internalState = PKAMGR_STATE_IDLE;
10048750:	4b08      	ldr	r3, [pc, #32]	@ (10048774 <PKAMGR_Unlock+0x50>)
10048752:	2201      	movs	r2, #1
10048754:	601a      	str	r2, [r3, #0]
10048756:	68bb      	ldr	r3, [r7, #8]
10048758:	603b      	str	r3, [r7, #0]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004875a:	683b      	ldr	r3, [r7, #0]
1004875c:	f383 8810 	msr	PRIMASK, r3
}
10048760:	46c0      	nop			@ (mov r8, r8)
  }
  ATOMIC_SECTION_END();

  return return_value;
10048762:	230f      	movs	r3, #15
10048764:	18fb      	adds	r3, r7, r3
10048766:	781b      	ldrb	r3, [r3, #0]
10048768:	b25b      	sxtb	r3, r3
}
1004876a:	0018      	movs	r0, r3
1004876c:	46bd      	mov	sp, r7
1004876e:	b004      	add	sp, #16
10048770:	bd80      	pop	{r7, pc}
10048772:	46c0      	nop			@ (mov r8, r8)
10048774:	20000a78 	.word	0x20000a78

10048778 <PKAMGR_IRQCallback>:
{
  return HW_PKA_StartP256DHkeyGeneration(privateKey, (uint32_t *)&PKAStartPoint[0], funcCB);
}

__weak void PKAMGR_IRQCallback(void)
{
10048778:	b580      	push	{r7, lr}
1004877a:	af00      	add	r7, sp, #0
}
1004877c:	46c0      	nop			@ (mov r8, r8)
1004877e:	46bd      	mov	sp, r7
10048780:	bd80      	pop	{r7, pc}
	...

10048784 <aci_gap_profile_init>:
tBleStatus aci_gap_profile_init(uint8_t Role,
                                uint8_t Privacy_Type,
                                uint16_t *Dev_Name_Char_Handle,
                                uint16_t *Appearance_Char_Handle,
                                uint16_t *Periph_Pref_Conn_Param_Char_Handle)
{
10048784:	b5f0      	push	{r4, r5, r6, r7, lr}
10048786:	b087      	sub	sp, #28
10048788:	af00      	add	r7, sp, #0
1004878a:	60ba      	str	r2, [r7, #8]
1004878c:	607b      	str	r3, [r7, #4]
1004878e:	240f      	movs	r4, #15
10048790:	193b      	adds	r3, r7, r4
10048792:	1c02      	adds	r2, r0, #0
10048794:	701a      	strb	r2, [r3, #0]
10048796:	230e      	movs	r3, #14
10048798:	18fb      	adds	r3, r7, r3
1004879a:	1c0a      	adds	r2, r1, #0
1004879c:	701a      	strb	r2, [r3, #0]
    tBleStatus ret;
    uint16_t gap_srvc_handle;

  *Dev_Name_Char_Handle = 0x0000;
1004879e:	68bb      	ldr	r3, [r7, #8]
100487a0:	2200      	movs	r2, #0
100487a2:	801a      	strh	r2, [r3, #0]
  *Appearance_Char_Handle= 0x0000;
100487a4:	687b      	ldr	r3, [r7, #4]
100487a6:	2200      	movs	r2, #0
100487a8:	801a      	strh	r2, [r3, #0]
  *Periph_Pref_Conn_Param_Char_Handle = 0x0000;
100487aa:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
100487ac:	2200      	movs	r2, #0
100487ae:	801a      	strh	r2, [r3, #0]

  if ((Role & (GAP_PERIPHERAL_ROLE | GAP_CENTRAL_ROLE)) != 0x0U)
100487b0:	193b      	adds	r3, r7, r4
100487b2:	781b      	ldrb	r3, [r3, #0]
100487b4:	2205      	movs	r2, #5
100487b6:	4013      	ands	r3, r2
100487b8:	d064      	beq.n	10048884 <aci_gap_profile_init+0x100>

      /**
      * Register GAP service.
      * Device Name and Appearance Characteristics will be also registered.
      */
      ret = aci_gatt_srv_add_service(&gap_srvc);
100487ba:	2517      	movs	r5, #23
100487bc:	197c      	adds	r4, r7, r5
100487be:	4b34      	ldr	r3, [pc, #208]	@ (10048890 <aci_gap_profile_init+0x10c>)
100487c0:	0018      	movs	r0, r3
100487c2:	f006 fd25 	bl	1004f210 <aci_gatt_srv_add_service>
100487c6:	0003      	movs	r3, r0
100487c8:	7023      	strb	r3, [r4, #0]
      if (ret != BLE_STATUS_SUCCESS)
100487ca:	197b      	adds	r3, r7, r5
100487cc:	781b      	ldrb	r3, [r3, #0]
100487ce:	2b00      	cmp	r3, #0
100487d0:	d002      	beq.n	100487d8 <aci_gap_profile_init+0x54>
      {
        return ret;
100487d2:	197b      	adds	r3, r7, r5
100487d4:	781b      	ldrb	r3, [r3, #0]
100487d6:	e056      	b.n	10048886 <aci_gap_profile_init+0x102>
      }

    *Dev_Name_Char_Handle = aci_gatt_srv_get_char_decl_handle(&gap_chrs[0U]);
100487d8:	4b2e      	ldr	r3, [pc, #184]	@ (10048894 <aci_gap_profile_init+0x110>)
100487da:	0018      	movs	r0, r3
100487dc:	f006 fd45 	bl	1004f26a <aci_gatt_srv_get_char_decl_handle>
100487e0:	0003      	movs	r3, r0
100487e2:	001a      	movs	r2, r3
100487e4:	68bb      	ldr	r3, [r7, #8]
100487e6:	801a      	strh	r2, [r3, #0]
    *Appearance_Char_Handle = aci_gatt_srv_get_char_decl_handle(&gap_chrs[1U]);
100487e8:	4b2b      	ldr	r3, [pc, #172]	@ (10048898 <aci_gap_profile_init+0x114>)
100487ea:	0018      	movs	r0, r3
100487ec:	f006 fd3d 	bl	1004f26a <aci_gatt_srv_get_char_decl_handle>
100487f0:	0003      	movs	r3, r0
100487f2:	001a      	movs	r2, r3
100487f4:	687b      	ldr	r3, [r7, #4]
100487f6:	801a      	strh	r2, [r3, #0]

      gap_srvc_handle = aci_gatt_srv_get_service_handle(&gap_srvc);
100487f8:	2614      	movs	r6, #20
100487fa:	19bc      	adds	r4, r7, r6
100487fc:	4b24      	ldr	r3, [pc, #144]	@ (10048890 <aci_gap_profile_init+0x10c>)
100487fe:	0018      	movs	r0, r3
10048800:	f006 fd13 	bl	1004f22a <aci_gatt_srv_get_service_handle>
10048804:	0003      	movs	r3, r0
10048806:	8023      	strh	r3, [r4, #0]
    if ((Role & GAP_PERIPHERAL_ROLE) != 0x0U)
10048808:	230f      	movs	r3, #15
1004880a:	18fb      	adds	r3, r7, r3
1004880c:	781b      	ldrb	r3, [r3, #0]
1004880e:	2201      	movs	r2, #1
10048810:	4013      	ands	r3, r2
10048812:	d011      	beq.n	10048838 <aci_gap_profile_init+0xb4>
      {
        /**
        * Register Peripheral Preferred Connection Parameters Characteristic.
        */
        ret = aci_gatt_srv_add_char(&gap_chrs[2U], gap_srvc_handle);
10048814:	2517      	movs	r5, #23
10048816:	197c      	adds	r4, r7, r5
10048818:	19bb      	adds	r3, r7, r6
1004881a:	881a      	ldrh	r2, [r3, #0]
1004881c:	4b1f      	ldr	r3, [pc, #124]	@ (1004889c <aci_gap_profile_init+0x118>)
1004881e:	0011      	movs	r1, r2
10048820:	0018      	movs	r0, r3
10048822:	f006 fd0f 	bl	1004f244 <aci_gatt_srv_add_char>
10048826:	0003      	movs	r3, r0
10048828:	7023      	strb	r3, [r4, #0]
        if (ret != BLE_STATUS_SUCCESS)
1004882a:	197b      	adds	r3, r7, r5
1004882c:	781b      	ldrb	r3, [r3, #0]
1004882e:	2b00      	cmp	r3, #0
10048830:	d002      	beq.n	10048838 <aci_gap_profile_init+0xb4>
        {
          return ret;
10048832:	197b      	adds	r3, r7, r5
10048834:	781b      	ldrb	r3, [r3, #0]
10048836:	e026      	b.n	10048886 <aci_gap_profile_init+0x102>
        }
      }

    *Periph_Pref_Conn_Param_Char_Handle = aci_gatt_srv_get_char_decl_handle(&gap_chrs[2U]);
10048838:	4b18      	ldr	r3, [pc, #96]	@ (1004889c <aci_gap_profile_init+0x118>)
1004883a:	0018      	movs	r0, r3
1004883c:	f006 fd15 	bl	1004f26a <aci_gatt_srv_get_char_decl_handle>
10048840:	0003      	movs	r3, r0
10048842:	001a      	movs	r2, r3
10048844:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
10048846:	801a      	strh	r2, [r3, #0]

    if (Privacy_Type == 2U)
10048848:	230e      	movs	r3, #14
1004884a:	18fb      	adds	r3, r7, r3
1004884c:	781b      	ldrb	r3, [r3, #0]
1004884e:	2b02      	cmp	r3, #2
10048850:	d112      	bne.n	10048878 <aci_gap_profile_init+0xf4>
      {
        /**
        * Register Central Address Resolution Characteristic.
        */
        ret = aci_gatt_srv_add_char(&gap_chrs[3U], gap_srvc_handle);
10048852:	2517      	movs	r5, #23
10048854:	197c      	adds	r4, r7, r5
10048856:	2314      	movs	r3, #20
10048858:	18fb      	adds	r3, r7, r3
1004885a:	881a      	ldrh	r2, [r3, #0]
1004885c:	4b10      	ldr	r3, [pc, #64]	@ (100488a0 <aci_gap_profile_init+0x11c>)
1004885e:	0011      	movs	r1, r2
10048860:	0018      	movs	r0, r3
10048862:	f006 fcef 	bl	1004f244 <aci_gatt_srv_add_char>
10048866:	0003      	movs	r3, r0
10048868:	7023      	strb	r3, [r4, #0]
        if (ret != BLE_STATUS_SUCCESS)
1004886a:	197b      	adds	r3, r7, r5
1004886c:	781b      	ldrb	r3, [r3, #0]
1004886e:	2b00      	cmp	r3, #0
10048870:	d002      	beq.n	10048878 <aci_gap_profile_init+0xf4>
        {
          return ret;
10048872:	197b      	adds	r3, r7, r5
10048874:	781b      	ldrb	r3, [r3, #0]
10048876:	e006      	b.n	10048886 <aci_gap_profile_init+0x102>
      }

      /**
      * Set default device name.
      */
      Gap_profile_set_dev_name(0U, sizeof(default_dev_name),
10048878:	4b0a      	ldr	r3, [pc, #40]	@ (100488a4 <aci_gap_profile_init+0x120>)
1004887a:	001a      	movs	r2, r3
1004887c:	2108      	movs	r1, #8
1004887e:	2000      	movs	r0, #0
10048880:	f000 f812 	bl	100488a8 <Gap_profile_set_dev_name>
                               (uint8_t *)default_dev_name);

    }

    return BLE_STATUS_SUCCESS;
10048884:	2300      	movs	r3, #0
}
10048886:	0018      	movs	r0, r3
10048888:	46bd      	mov	sp, r7
1004888a:	b007      	add	sp, #28
1004888c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004888e:	46c0      	nop			@ (mov r8, r8)
10048890:	20000b24 	.word	0x20000b24
10048894:	20000a94 	.word	0x20000a94
10048898:	20000ab8 	.word	0x20000ab8
1004889c:	20000adc 	.word	0x20000adc
100488a0:	20000b00 	.word	0x20000b00
100488a4:	1006e6a0 	.word	0x1006e6a0

100488a8 <Gap_profile_set_dev_name>:

tBleStatus Gap_profile_set_dev_name(uint16_t offset,
                                    uint16_t length,
                                    uint8_t *dev_name_p)
{
100488a8:	b590      	push	{r4, r7, lr}
100488aa:	b085      	sub	sp, #20
100488ac:	af00      	add	r7, sp, #0
100488ae:	603a      	str	r2, [r7, #0]
100488b0:	1dbb      	adds	r3, r7, #6
100488b2:	1c02      	adds	r2, r0, #0
100488b4:	801a      	strh	r2, [r3, #0]
100488b6:	1d3b      	adds	r3, r7, #4
100488b8:	1c0a      	adds	r2, r1, #0
100488ba:	801a      	strh	r2, [r3, #0]
    uint16_t handle = aci_gatt_srv_get_char_decl_handle(&gap_chrs[0U]) + 1U;
100488bc:	4b0c      	ldr	r3, [pc, #48]	@ (100488f0 <Gap_profile_set_dev_name+0x48>)
100488be:	0018      	movs	r0, r3
100488c0:	f006 fcd3 	bl	1004f26a <aci_gatt_srv_get_char_decl_handle>
100488c4:	0003      	movs	r3, r0
100488c6:	001a      	movs	r2, r3
100488c8:	200e      	movs	r0, #14
100488ca:	183b      	adds	r3, r7, r0
100488cc:	3201      	adds	r2, #1
100488ce:	801a      	strh	r2, [r3, #0]

    return Gap_profile_set_char_value(handle, offset, length, dev_name_p);
100488d0:	683c      	ldr	r4, [r7, #0]
100488d2:	1d3b      	adds	r3, r7, #4
100488d4:	881a      	ldrh	r2, [r3, #0]
100488d6:	1dbb      	adds	r3, r7, #6
100488d8:	8819      	ldrh	r1, [r3, #0]
100488da:	183b      	adds	r3, r7, r0
100488dc:	8818      	ldrh	r0, [r3, #0]
100488de:	0023      	movs	r3, r4
100488e0:	f000 f82e 	bl	10048940 <Gap_profile_set_char_value>
100488e4:	0003      	movs	r3, r0
}
100488e6:	0018      	movs	r0, r3
100488e8:	46bd      	mov	sp, r7
100488ea:	b005      	add	sp, #20
100488ec:	bd90      	pop	{r4, r7, pc}
100488ee:	46c0      	nop			@ (mov r8, r8)
100488f0:	20000a94 	.word	0x20000a94

100488f4 <Gap_profile_set_appearance>:

tBleStatus Gap_profile_set_appearance(uint16_t offset,
                                      uint16_t length,
                                      uint8_t *appearance_p)
{
100488f4:	b590      	push	{r4, r7, lr}
100488f6:	b085      	sub	sp, #20
100488f8:	af00      	add	r7, sp, #0
100488fa:	603a      	str	r2, [r7, #0]
100488fc:	1dbb      	adds	r3, r7, #6
100488fe:	1c02      	adds	r2, r0, #0
10048900:	801a      	strh	r2, [r3, #0]
10048902:	1d3b      	adds	r3, r7, #4
10048904:	1c0a      	adds	r2, r1, #0
10048906:	801a      	strh	r2, [r3, #0]
    uint16_t handle = aci_gatt_srv_get_char_decl_handle(&gap_chrs[1U]) + 1U;
10048908:	4b0c      	ldr	r3, [pc, #48]	@ (1004893c <Gap_profile_set_appearance+0x48>)
1004890a:	0018      	movs	r0, r3
1004890c:	f006 fcad 	bl	1004f26a <aci_gatt_srv_get_char_decl_handle>
10048910:	0003      	movs	r3, r0
10048912:	001a      	movs	r2, r3
10048914:	200e      	movs	r0, #14
10048916:	183b      	adds	r3, r7, r0
10048918:	3201      	adds	r2, #1
1004891a:	801a      	strh	r2, [r3, #0]

    return Gap_profile_set_char_value(handle, offset, length, appearance_p);
1004891c:	683c      	ldr	r4, [r7, #0]
1004891e:	1d3b      	adds	r3, r7, #4
10048920:	881a      	ldrh	r2, [r3, #0]
10048922:	1dbb      	adds	r3, r7, #6
10048924:	8819      	ldrh	r1, [r3, #0]
10048926:	183b      	adds	r3, r7, r0
10048928:	8818      	ldrh	r0, [r3, #0]
1004892a:	0023      	movs	r3, r4
1004892c:	f000 f808 	bl	10048940 <Gap_profile_set_char_value>
10048930:	0003      	movs	r3, r0
}
10048932:	0018      	movs	r0, r3
10048934:	46bd      	mov	sp, r7
10048936:	b005      	add	sp, #20
10048938:	bd90      	pop	{r4, r7, pc}
1004893a:	46c0      	nop			@ (mov r8, r8)
1004893c:	20000ab8 	.word	0x20000ab8

10048940 <Gap_profile_set_char_value>:

tBleStatus Gap_profile_set_char_value(uint16_t attr_h,
                                      uint16_t val_offset,
                                      uint16_t val_length,
                                      uint8_t *val_p)
{
10048940:	b5b0      	push	{r4, r5, r7, lr}
10048942:	b086      	sub	sp, #24
10048944:	af00      	add	r7, sp, #0
10048946:	0004      	movs	r4, r0
10048948:	0008      	movs	r0, r1
1004894a:	0011      	movs	r1, r2
1004894c:	607b      	str	r3, [r7, #4]
1004894e:	230e      	movs	r3, #14
10048950:	18fb      	adds	r3, r7, r3
10048952:	1c22      	adds	r2, r4, #0
10048954:	801a      	strh	r2, [r3, #0]
10048956:	230c      	movs	r3, #12
10048958:	18fb      	adds	r3, r7, r3
1004895a:	1c02      	adds	r2, r0, #0
1004895c:	801a      	strh	r2, [r3, #0]
1004895e:	230a      	movs	r3, #10
10048960:	18fb      	adds	r3, r7, r3
10048962:	1c0a      	adds	r2, r1, #0
10048964:	801a      	strh	r2, [r3, #0]
    uint16_t handle;

    /**
     * Search for GAP characteristic.
     */
    for (i = 0U; i < (sizeof(gap_chrs) / sizeof(gap_chrs[0U])); i++)
10048966:	2317      	movs	r3, #23
10048968:	18fb      	adds	r3, r7, r3
1004896a:	2200      	movs	r2, #0
1004896c:	701a      	strb	r2, [r3, #0]
1004896e:	e021      	b.n	100489b4 <Gap_profile_set_char_value+0x74>
    {
        handle = aci_gatt_srv_get_char_decl_handle(&gap_chrs[i]);
10048970:	2317      	movs	r3, #23
10048972:	18fb      	adds	r3, r7, r3
10048974:	781a      	ldrb	r2, [r3, #0]
10048976:	0013      	movs	r3, r2
10048978:	00db      	lsls	r3, r3, #3
1004897a:	189b      	adds	r3, r3, r2
1004897c:	009b      	lsls	r3, r3, #2
1004897e:	4a3c      	ldr	r2, [pc, #240]	@ (10048a70 <Gap_profile_set_char_value+0x130>)
10048980:	189b      	adds	r3, r3, r2
10048982:	2514      	movs	r5, #20
10048984:	197c      	adds	r4, r7, r5
10048986:	0018      	movs	r0, r3
10048988:	f006 fc6f 	bl	1004f26a <aci_gatt_srv_get_char_decl_handle>
1004898c:	0003      	movs	r3, r0
1004898e:	8023      	strh	r3, [r4, #0]
        if ((handle != BLE_ATT_INVALID_ATTR_HANDLE) &&
10048990:	197b      	adds	r3, r7, r5
10048992:	881b      	ldrh	r3, [r3, #0]
10048994:	2b00      	cmp	r3, #0
10048996:	d007      	beq.n	100489a8 <Gap_profile_set_char_value+0x68>
            ((handle + 1U) == attr_h))
10048998:	197b      	adds	r3, r7, r5
1004899a:	881b      	ldrh	r3, [r3, #0]
1004899c:	1c5a      	adds	r2, r3, #1
1004899e:	230e      	movs	r3, #14
100489a0:	18fb      	adds	r3, r7, r3
100489a2:	881b      	ldrh	r3, [r3, #0]
        if ((handle != BLE_ATT_INVALID_ATTR_HANDLE) &&
100489a4:	429a      	cmp	r2, r3
100489a6:	d00b      	beq.n	100489c0 <Gap_profile_set_char_value+0x80>
    for (i = 0U; i < (sizeof(gap_chrs) / sizeof(gap_chrs[0U])); i++)
100489a8:	2117      	movs	r1, #23
100489aa:	187b      	adds	r3, r7, r1
100489ac:	781a      	ldrb	r2, [r3, #0]
100489ae:	187b      	adds	r3, r7, r1
100489b0:	3201      	adds	r2, #1
100489b2:	701a      	strb	r2, [r3, #0]
100489b4:	2317      	movs	r3, #23
100489b6:	18fb      	adds	r3, r7, r3
100489b8:	781b      	ldrb	r3, [r3, #0]
100489ba:	2b03      	cmp	r3, #3
100489bc:	d9d8      	bls.n	10048970 <Gap_profile_set_char_value+0x30>
100489be:	e000      	b.n	100489c2 <Gap_profile_set_char_value+0x82>
        {
            break;
100489c0:	46c0      	nop			@ (mov r8, r8)
        }
    }

    if (i == (sizeof(gap_chrs) / sizeof(gap_chrs[0U])))
100489c2:	2317      	movs	r3, #23
100489c4:	18fb      	adds	r3, r7, r3
100489c6:	781b      	ldrb	r3, [r3, #0]
100489c8:	2b04      	cmp	r3, #4
100489ca:	d101      	bne.n	100489d0 <Gap_profile_set_char_value+0x90>
    {
        /**
         * The given attribute handle is not registered for GAP service.
         */
        return BLE_STATUS_INVALID_PARAMS;
100489cc:	2312      	movs	r3, #18
100489ce:	e04a      	b.n	10048a66 <Gap_profile_set_char_value+0x126>
    }

    if ((val_offset + val_length) > gap_chrs[i].val_buffer_p->buffer_len)
100489d0:	230c      	movs	r3, #12
100489d2:	18fb      	adds	r3, r7, r3
100489d4:	881a      	ldrh	r2, [r3, #0]
100489d6:	230a      	movs	r3, #10
100489d8:	18fb      	adds	r3, r7, r3
100489da:	881b      	ldrh	r3, [r3, #0]
100489dc:	18d1      	adds	r1, r2, r3
100489de:	2317      	movs	r3, #23
100489e0:	18fb      	adds	r3, r7, r3
100489e2:	781a      	ldrb	r2, [r3, #0]
100489e4:	4822      	ldr	r0, [pc, #136]	@ (10048a70 <Gap_profile_set_char_value+0x130>)
100489e6:	0013      	movs	r3, r2
100489e8:	00db      	lsls	r3, r3, #3
100489ea:	189b      	adds	r3, r3, r2
100489ec:	009b      	lsls	r3, r3, #2
100489ee:	18c3      	adds	r3, r0, r3
100489f0:	3320      	adds	r3, #32
100489f2:	681b      	ldr	r3, [r3, #0]
100489f4:	889b      	ldrh	r3, [r3, #4]
100489f6:	4299      	cmp	r1, r3
100489f8:	dd01      	ble.n	100489fe <Gap_profile_set_char_value+0xbe>
    {
        /**
         * Invalid value length.
         */
        return BLE_STATUS_INVALID_PARAMS;
100489fa:	2312      	movs	r3, #18
100489fc:	e033      	b.n	10048a66 <Gap_profile_set_char_value+0x126>
    }

    /**
     * Write characteristic value.
     */
    memcpy(&gap_chrs[i].val_buffer_p->buffer_p[val_offset], val_p, val_length);
100489fe:	2417      	movs	r4, #23
10048a00:	193b      	adds	r3, r7, r4
10048a02:	781a      	ldrb	r2, [r3, #0]
10048a04:	491a      	ldr	r1, [pc, #104]	@ (10048a70 <Gap_profile_set_char_value+0x130>)
10048a06:	0013      	movs	r3, r2
10048a08:	00db      	lsls	r3, r3, #3
10048a0a:	189b      	adds	r3, r3, r2
10048a0c:	009b      	lsls	r3, r3, #2
10048a0e:	18cb      	adds	r3, r1, r3
10048a10:	3320      	adds	r3, #32
10048a12:	681b      	ldr	r3, [r3, #0]
10048a14:	689a      	ldr	r2, [r3, #8]
10048a16:	230c      	movs	r3, #12
10048a18:	18fb      	adds	r3, r7, r3
10048a1a:	881b      	ldrh	r3, [r3, #0]
10048a1c:	18d0      	adds	r0, r2, r3
10048a1e:	250a      	movs	r5, #10
10048a20:	197b      	adds	r3, r7, r5
10048a22:	881a      	ldrh	r2, [r3, #0]
10048a24:	687b      	ldr	r3, [r7, #4]
10048a26:	0019      	movs	r1, r3
10048a28:	f023 f950 	bl	1006bccc <memcpy>
    if ((gap_chrs[i].val_buffer_p->op_flags & BLE_GATT_SRV_OP_VALUE_VAR_LENGTH_FLAG) != 0U)
10048a2c:	193b      	adds	r3, r7, r4
10048a2e:	781a      	ldrb	r2, [r3, #0]
10048a30:	490f      	ldr	r1, [pc, #60]	@ (10048a70 <Gap_profile_set_char_value+0x130>)
10048a32:	0013      	movs	r3, r2
10048a34:	00db      	lsls	r3, r3, #3
10048a36:	189b      	adds	r3, r3, r2
10048a38:	009b      	lsls	r3, r3, #2
10048a3a:	18cb      	adds	r3, r1, r3
10048a3c:	3320      	adds	r3, #32
10048a3e:	681b      	ldr	r3, [r3, #0]
10048a40:	781b      	ldrb	r3, [r3, #0]
10048a42:	001a      	movs	r2, r3
10048a44:	2302      	movs	r3, #2
10048a46:	4013      	ands	r3, r2
10048a48:	d00c      	beq.n	10048a64 <Gap_profile_set_char_value+0x124>
    {
        gap_chrs[i].val_buffer_p->val_len = val_length;
10048a4a:	193b      	adds	r3, r7, r4
10048a4c:	781a      	ldrb	r2, [r3, #0]
10048a4e:	4908      	ldr	r1, [pc, #32]	@ (10048a70 <Gap_profile_set_char_value+0x130>)
10048a50:	0013      	movs	r3, r2
10048a52:	00db      	lsls	r3, r3, #3
10048a54:	189b      	adds	r3, r3, r2
10048a56:	009b      	lsls	r3, r3, #2
10048a58:	18cb      	adds	r3, r1, r3
10048a5a:	3320      	adds	r3, #32
10048a5c:	681b      	ldr	r3, [r3, #0]
10048a5e:	197a      	adds	r2, r7, r5
10048a60:	8812      	ldrh	r2, [r2, #0]
10048a62:	805a      	strh	r2, [r3, #2]
    }

    return BLE_STATUS_SUCCESS;
10048a64:	2300      	movs	r3, #0
}
10048a66:	0018      	movs	r0, r3
10048a68:	46bd      	mov	sp, r7
10048a6a:	b006      	add	sp, #24
10048a6c:	bdb0      	pop	{r4, r5, r7, pc}
10048a6e:	46c0      	nop			@ (mov r8, r8)
10048a70:	20000a94 	.word	0x20000a94

10048a74 <aci_gatt_srv_profile_init>:
    .chrs = {0, NULL},
};

tBleStatus aci_gatt_srv_profile_init(uint8_t Characteristics,
                                     uint16_t *Service_Changed_Handle)
{
10048a74:	b5f0      	push	{r4, r5, r6, r7, lr}
10048a76:	b085      	sub	sp, #20
10048a78:	af00      	add	r7, sp, #0
10048a7a:	0002      	movs	r2, r0
10048a7c:	6039      	str	r1, [r7, #0]
10048a7e:	1dfb      	adds	r3, r7, #7
10048a80:	701a      	strb	r2, [r3, #0]
  tBleStatus ret;
  uint16_t gatt_srvc_handle;

  *Service_Changed_Handle = 0x0000;
10048a82:	683b      	ldr	r3, [r7, #0]
10048a84:	2200      	movs	r2, #0
10048a86:	801a      	strh	r2, [r3, #0]

  ret = aci_gatt_srv_add_service(&gatt_srvc);
10048a88:	250f      	movs	r5, #15
10048a8a:	197c      	adds	r4, r7, r5
10048a8c:	4b38      	ldr	r3, [pc, #224]	@ (10048b70 <aci_gatt_srv_profile_init+0xfc>)
10048a8e:	0018      	movs	r0, r3
10048a90:	f006 fbbe 	bl	1004f210 <aci_gatt_srv_add_service>
10048a94:	0003      	movs	r3, r0
10048a96:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
10048a98:	197b      	adds	r3, r7, r5
10048a9a:	781b      	ldrb	r3, [r3, #0]
10048a9c:	2b00      	cmp	r3, #0
10048a9e:	d002      	beq.n	10048aa6 <aci_gatt_srv_profile_init+0x32>
  {
    return ret;
10048aa0:	197b      	adds	r3, r7, r5
10048aa2:	781b      	ldrb	r3, [r3, #0]
10048aa4:	e060      	b.n	10048b68 <aci_gatt_srv_profile_init+0xf4>
  }

  gatt_srvc_handle = aci_gatt_srv_get_service_handle(&gatt_srvc);
10048aa6:	260c      	movs	r6, #12
10048aa8:	19bc      	adds	r4, r7, r6
10048aaa:	4b31      	ldr	r3, [pc, #196]	@ (10048b70 <aci_gatt_srv_profile_init+0xfc>)
10048aac:	0018      	movs	r0, r3
10048aae:	f006 fbbc 	bl	1004f22a <aci_gatt_srv_get_service_handle>
10048ab2:	0003      	movs	r3, r0
10048ab4:	8023      	strh	r3, [r4, #0]

  if(Characteristics & GATT_INIT_SERVICE_CHANGED_BIT)
10048ab6:	1dfb      	adds	r3, r7, #7
10048ab8:	781b      	ldrb	r3, [r3, #0]
10048aba:	2201      	movs	r2, #1
10048abc:	4013      	ands	r3, r2
10048abe:	d011      	beq.n	10048ae4 <aci_gatt_srv_profile_init+0x70>
  {
    ret = aci_gatt_srv_add_char((ble_gatt_chr_def_t*)&gatt_srvc_changed_chr, gatt_srvc_handle);
10048ac0:	250f      	movs	r5, #15
10048ac2:	197c      	adds	r4, r7, r5
10048ac4:	19bb      	adds	r3, r7, r6
10048ac6:	881a      	ldrh	r2, [r3, #0]
10048ac8:	4b2a      	ldr	r3, [pc, #168]	@ (10048b74 <aci_gatt_srv_profile_init+0x100>)
10048aca:	0011      	movs	r1, r2
10048acc:	0018      	movs	r0, r3
10048ace:	f006 fbb9 	bl	1004f244 <aci_gatt_srv_add_char>
10048ad2:	0003      	movs	r3, r0
10048ad4:	7023      	strb	r3, [r4, #0]
    if (ret != BLE_STATUS_SUCCESS)
10048ad6:	197b      	adds	r3, r7, r5
10048ad8:	781b      	ldrb	r3, [r3, #0]
10048ada:	2b00      	cmp	r3, #0
10048adc:	d002      	beq.n	10048ae4 <aci_gatt_srv_profile_init+0x70>
    {
      return ret;
10048ade:	197b      	adds	r3, r7, r5
10048ae0:	781b      	ldrb	r3, [r3, #0]
10048ae2:	e041      	b.n	10048b68 <aci_gatt_srv_profile_init+0xf4>
    }
  }
  *Service_Changed_Handle = aci_gatt_srv_get_char_decl_handle((ble_gatt_chr_def_t*)&gatt_srvc_changed_chr);
10048ae4:	4b23      	ldr	r3, [pc, #140]	@ (10048b74 <aci_gatt_srv_profile_init+0x100>)
10048ae6:	0018      	movs	r0, r3
10048ae8:	f006 fbbf 	bl	1004f26a <aci_gatt_srv_get_char_decl_handle>
10048aec:	0003      	movs	r3, r0
10048aee:	001a      	movs	r2, r3
10048af0:	683b      	ldr	r3, [r7, #0]
10048af2:	801a      	strh	r2, [r3, #0]

  ret = aci_gatt_srv_add_char((ble_gatt_chr_def_t*)&gatt_clt_supp_feat_chr, gatt_srvc_handle);
10048af4:	250f      	movs	r5, #15
10048af6:	197c      	adds	r4, r7, r5
10048af8:	230c      	movs	r3, #12
10048afa:	18fb      	adds	r3, r7, r3
10048afc:	881a      	ldrh	r2, [r3, #0]
10048afe:	4b1e      	ldr	r3, [pc, #120]	@ (10048b78 <aci_gatt_srv_profile_init+0x104>)
10048b00:	0011      	movs	r1, r2
10048b02:	0018      	movs	r0, r3
10048b04:	f006 fb9e 	bl	1004f244 <aci_gatt_srv_add_char>
10048b08:	0003      	movs	r3, r0
10048b0a:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
10048b0c:	197b      	adds	r3, r7, r5
10048b0e:	781b      	ldrb	r3, [r3, #0]
10048b10:	2b00      	cmp	r3, #0
10048b12:	d002      	beq.n	10048b1a <aci_gatt_srv_profile_init+0xa6>
  {
    return ret;
10048b14:	197b      	adds	r3, r7, r5
10048b16:	781b      	ldrb	r3, [r3, #0]
10048b18:	e026      	b.n	10048b68 <aci_gatt_srv_profile_init+0xf4>
  }

  ret = aci_gatt_srv_add_char((ble_gatt_chr_def_t*)&gatt_db_hash_chr, gatt_srvc_handle);
10048b1a:	250f      	movs	r5, #15
10048b1c:	197c      	adds	r4, r7, r5
10048b1e:	230c      	movs	r3, #12
10048b20:	18fb      	adds	r3, r7, r3
10048b22:	881a      	ldrh	r2, [r3, #0]
10048b24:	4b15      	ldr	r3, [pc, #84]	@ (10048b7c <aci_gatt_srv_profile_init+0x108>)
10048b26:	0011      	movs	r1, r2
10048b28:	0018      	movs	r0, r3
10048b2a:	f006 fb8b 	bl	1004f244 <aci_gatt_srv_add_char>
10048b2e:	0003      	movs	r3, r0
10048b30:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
10048b32:	197b      	adds	r3, r7, r5
10048b34:	781b      	ldrb	r3, [r3, #0]
10048b36:	2b00      	cmp	r3, #0
10048b38:	d002      	beq.n	10048b40 <aci_gatt_srv_profile_init+0xcc>
  {
    return ret;
10048b3a:	197b      	adds	r3, r7, r5
10048b3c:	781b      	ldrb	r3, [r3, #0]
10048b3e:	e013      	b.n	10048b68 <aci_gatt_srv_profile_init+0xf4>
  }

  ret = aci_gatt_srv_add_char((ble_gatt_chr_def_t*)&gatt_srv_supp_feat_chr, gatt_srvc_handle);
10048b40:	250f      	movs	r5, #15
10048b42:	197c      	adds	r4, r7, r5
10048b44:	230c      	movs	r3, #12
10048b46:	18fb      	adds	r3, r7, r3
10048b48:	881a      	ldrh	r2, [r3, #0]
10048b4a:	4b0d      	ldr	r3, [pc, #52]	@ (10048b80 <aci_gatt_srv_profile_init+0x10c>)
10048b4c:	0011      	movs	r1, r2
10048b4e:	0018      	movs	r0, r3
10048b50:	f006 fb78 	bl	1004f244 <aci_gatt_srv_add_char>
10048b54:	0003      	movs	r3, r0
10048b56:	7023      	strb	r3, [r4, #0]
  if (ret != BLE_STATUS_SUCCESS)
10048b58:	197b      	adds	r3, r7, r5
10048b5a:	781b      	ldrb	r3, [r3, #0]
10048b5c:	2b00      	cmp	r3, #0
10048b5e:	d002      	beq.n	10048b66 <aci_gatt_srv_profile_init+0xf2>
  {
    return ret;
10048b60:	197b      	adds	r3, r7, r5
10048b62:	781b      	ldrb	r3, [r3, #0]
10048b64:	e000      	b.n	10048b68 <aci_gatt_srv_profile_init+0xf4>
  }

  return   BLE_STATUS_SUCCESS;
10048b66:	2300      	movs	r3, #0
}
10048b68:	0018      	movs	r0, r3
10048b6a:	46bd      	mov	sp, r7
10048b6c:	b005      	add	sp, #20
10048b6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10048b70:	20000b68 	.word	0x20000b68
10048b74:	1006e704 	.word	0x1006e704
10048b78:	1006e728 	.word	0x1006e728
10048b7c:	1006e74c 	.word	0x1006e74c
10048b80:	1006e770 	.word	0x1006e770

10048b84 <LL_PWR_IsSMPSReady>:
  * @brief  Get the SMPS ready status.
  * @rmtoll SR2      SMPSRDY      LL_PWR_IsSMPSReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_PWR_IsSMPSReady(void)
{
10048b84:	b580      	push	{r7, lr}
10048b86:	af00      	add	r7, sp, #0
  return ((READ_BIT(PWR->SR2, PWR_SR2_SMPSRDY) == (PWR_SR2_SMPSRDY)) ? 1UL : 0UL);
10048b88:	4b05      	ldr	r3, [pc, #20]	@ (10048ba0 <LL_PWR_IsSMPSReady+0x1c>)
10048b8a:	695b      	ldr	r3, [r3, #20]
10048b8c:	2204      	movs	r2, #4
10048b8e:	4013      	ands	r3, r2
10048b90:	2b04      	cmp	r3, #4
10048b92:	d101      	bne.n	10048b98 <LL_PWR_IsSMPSReady+0x14>
10048b94:	2301      	movs	r3, #1
10048b96:	e000      	b.n	10048b9a <LL_PWR_IsSMPSReady+0x16>
10048b98:	2300      	movs	r3, #0
}
10048b9a:	0018      	movs	r0, r3
10048b9c:	46bd      	mov	sp, r7
10048b9e:	bd80      	pop	{r7, pc}
10048ba0:	48500000 	.word	0x48500000

10048ba4 <LL_PWR_GetSMPSMode>:
  * @retval SMPS Mode. This parameter can be one of the following values:
  *         @arg @ref LL_PWR_SMPS
  *         @arg @ref LL_PWR_NO_SMPS
  */
__STATIC_INLINE uint32_t LL_PWR_GetSMPSMode(void)
{
10048ba4:	b580      	push	{r7, lr}
10048ba6:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(PWR->CR5, PWR_CR5_NOSMPS));
10048ba8:	4b03      	ldr	r3, [pc, #12]	@ (10048bb8 <LL_PWR_GetSMPSMode+0x14>)
10048baa:	69da      	ldr	r2, [r3, #28]
10048bac:	2380      	movs	r3, #128	@ 0x80
10048bae:	00db      	lsls	r3, r3, #3
10048bb0:	4013      	ands	r3, r2
}
10048bb2:	0018      	movs	r0, r3
10048bb4:	46bd      	mov	sp, r7
10048bb6:	bd80      	pop	{r7, pc}
10048bb8:	48500000 	.word	0x48500000

10048bbc <LL_PWR_SetSMPSPrechargeMode>:
  *        @arg @ref LL_PWR_NO_SMPS_PRECHARGE
  *        @arg @ref LL_PWR_SMPS_PRECHARGE
  * @retval None
  */
__STATIC_INLINE void  LL_PWR_SetSMPSPrechargeMode(uint32_t mode)
{
10048bbc:	b580      	push	{r7, lr}
10048bbe:	b082      	sub	sp, #8
10048bc0:	af00      	add	r7, sp, #0
10048bc2:	6078      	str	r0, [r7, #4]
  MODIFY_REG(PWR->CR5, PWR_CR5_SMPSFBYP, mode);
10048bc4:	4b06      	ldr	r3, [pc, #24]	@ (10048be0 <LL_PWR_SetSMPSPrechargeMode+0x24>)
10048bc6:	69db      	ldr	r3, [r3, #28]
10048bc8:	4a06      	ldr	r2, [pc, #24]	@ (10048be4 <LL_PWR_SetSMPSPrechargeMode+0x28>)
10048bca:	4013      	ands	r3, r2
10048bcc:	0019      	movs	r1, r3
10048bce:	4b04      	ldr	r3, [pc, #16]	@ (10048be0 <LL_PWR_SetSMPSPrechargeMode+0x24>)
10048bd0:	687a      	ldr	r2, [r7, #4]
10048bd2:	430a      	orrs	r2, r1
10048bd4:	61da      	str	r2, [r3, #28]
}
10048bd6:	46c0      	nop			@ (mov r8, r8)
10048bd8:	46bd      	mov	sp, r7
10048bda:	b002      	add	sp, #8
10048bdc:	bd80      	pop	{r7, pc}
10048bde:	46c0      	nop			@ (mov r8, r8)
10048be0:	48500000 	.word	0x48500000
10048be4:	fffffdff 	.word	0xfffffdff

10048be8 <LL_PWR_IsEnabledSMPSPrechargeMode>:
  * @brief   Check if SMPS is configured in PRECHARGE Mode.
  * @rmtoll CR5          SMPSFBYP      LL_PWR_IsEnabledSMPSPrechargeMode
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_PWR_IsEnabledSMPSPrechargeMode(void)
{
10048be8:	b580      	push	{r7, lr}
10048bea:	af00      	add	r7, sp, #0
  return ((READ_BIT(PWR->CR5, PWR_CR5_SMPSFBYP) == (PWR_CR5_SMPSFBYP)) ? 1UL : 0UL);
10048bec:	4b07      	ldr	r3, [pc, #28]	@ (10048c0c <LL_PWR_IsEnabledSMPSPrechargeMode+0x24>)
10048bee:	69da      	ldr	r2, [r3, #28]
10048bf0:	2380      	movs	r3, #128	@ 0x80
10048bf2:	009b      	lsls	r3, r3, #2
10048bf4:	401a      	ands	r2, r3
10048bf6:	2380      	movs	r3, #128	@ 0x80
10048bf8:	009b      	lsls	r3, r3, #2
10048bfa:	429a      	cmp	r2, r3
10048bfc:	d101      	bne.n	10048c02 <LL_PWR_IsEnabledSMPSPrechargeMode+0x1a>
10048bfe:	2301      	movs	r3, #1
10048c00:	e000      	b.n	10048c04 <LL_PWR_IsEnabledSMPSPrechargeMode+0x1c>
10048c02:	2300      	movs	r3, #0
}
10048c04:	0018      	movs	r0, r3
10048c06:	46bd      	mov	sp, r7
10048c08:	bd80      	pop	{r7, pc}
10048c0a:	46c0      	nop			@ (mov r8, r8)
10048c0c:	48500000 	.word	0x48500000

10048c10 <LL_PWR_SMPS_SetOutputVoltageLevel>:
  *         @arg @ref LL_PWR_SMPS_OUTPUT_VOLTAGE_1V90
  *         @arg @ref LL_PWR_SMPS_OUTPUT_VOLTAGE_1V95
  * @retval None
  */
__STATIC_INLINE void LL_PWR_SMPS_SetOutputVoltageLevel(uint32_t OutputVoltageLevel)
{
10048c10:	b580      	push	{r7, lr}
10048c12:	b082      	sub	sp, #8
10048c14:	af00      	add	r7, sp, #0
10048c16:	6078      	str	r0, [r7, #4]
  MODIFY_REG(PWR->CR5, PWR_CR5_SMPSLVL, OutputVoltageLevel);
10048c18:	4b06      	ldr	r3, [pc, #24]	@ (10048c34 <LL_PWR_SMPS_SetOutputVoltageLevel+0x24>)
10048c1a:	69db      	ldr	r3, [r3, #28]
10048c1c:	220f      	movs	r2, #15
10048c1e:	4393      	bics	r3, r2
10048c20:	0019      	movs	r1, r3
10048c22:	4b04      	ldr	r3, [pc, #16]	@ (10048c34 <LL_PWR_SMPS_SetOutputVoltageLevel+0x24>)
10048c24:	687a      	ldr	r2, [r7, #4]
10048c26:	430a      	orrs	r2, r1
10048c28:	61da      	str	r2, [r3, #28]
}
10048c2a:	46c0      	nop			@ (mov r8, r8)
10048c2c:	46bd      	mov	sp, r7
10048c2e:	b002      	add	sp, #8
10048c30:	bd80      	pop	{r7, pc}
10048c32:	46c0      	nop			@ (mov r8, r8)
10048c34:	48500000 	.word	0x48500000

10048c38 <RADIO_DBmToPALevel>:
uint8_t high_power = FALSE;
uint8_t tone_started = FALSE;
uint8_t pa_level = DEFAULT_TX_PA_LEVEL;

uint8_t RADIO_DBmToPALevel(int8_t TX_dBm)
{
10048c38:	b580      	push	{r7, lr}
10048c3a:	b086      	sub	sp, #24
10048c3c:	af00      	add	r7, sp, #0
10048c3e:	0002      	movs	r2, r0
10048c40:	1dfb      	adds	r3, r7, #7
10048c42:	701a      	strb	r2, [r3, #0]
  uint8_t i;
  const int8_t *pa_level_table = high_power ? high_power_pa_level_table : normal_pa_level_table;
10048c44:	4b2b      	ldr	r3, [pc, #172]	@ (10048cf4 <RADIO_DBmToPALevel+0xbc>)
10048c46:	781b      	ldrb	r3, [r3, #0]
10048c48:	2b00      	cmp	r3, #0
10048c4a:	d001      	beq.n	10048c50 <RADIO_DBmToPALevel+0x18>
10048c4c:	4b2a      	ldr	r3, [pc, #168]	@ (10048cf8 <RADIO_DBmToPALevel+0xc0>)
10048c4e:	e000      	b.n	10048c52 <RADIO_DBmToPALevel+0x1a>
10048c50:	4b2a      	ldr	r3, [pc, #168]	@ (10048cfc <RADIO_DBmToPALevel+0xc4>)
10048c52:	613b      	str	r3, [r7, #16]
  const uint8_t tx_power_levels = high_power ? HP_TX_POWER_LEVELS : TX_POWER_LEVELS;
10048c54:	4b27      	ldr	r3, [pc, #156]	@ (10048cf4 <RADIO_DBmToPALevel+0xbc>)
10048c56:	781b      	ldrb	r3, [r3, #0]
10048c58:	2b00      	cmp	r3, #0
10048c5a:	d001      	beq.n	10048c60 <RADIO_DBmToPALevel+0x28>
10048c5c:	2221      	movs	r2, #33	@ 0x21
10048c5e:	e000      	b.n	10048c62 <RADIO_DBmToPALevel+0x2a>
10048c60:	2220      	movs	r2, #32
10048c62:	230f      	movs	r3, #15
10048c64:	18fb      	adds	r3, r7, r3
10048c66:	701a      	strb	r2, [r3, #0]

  for(i = 0; i < tx_power_levels; i++)
10048c68:	2317      	movs	r3, #23
10048c6a:	18fb      	adds	r3, r7, r3
10048c6c:	2200      	movs	r2, #0
10048c6e:	701a      	strb	r2, [r3, #0]
10048c70:	e010      	b.n	10048c94 <RADIO_DBmToPALevel+0x5c>
  {
    if(pa_level_table[i] >= TX_dBm)
10048c72:	2117      	movs	r1, #23
10048c74:	187b      	adds	r3, r7, r1
10048c76:	781b      	ldrb	r3, [r3, #0]
10048c78:	693a      	ldr	r2, [r7, #16]
10048c7a:	18d3      	adds	r3, r2, r3
10048c7c:	781b      	ldrb	r3, [r3, #0]
10048c7e:	b25b      	sxtb	r3, r3
10048c80:	1dfa      	adds	r2, r7, #7
10048c82:	7812      	ldrb	r2, [r2, #0]
10048c84:	b252      	sxtb	r2, r2
10048c86:	429a      	cmp	r2, r3
10048c88:	dd0d      	ble.n	10048ca6 <RADIO_DBmToPALevel+0x6e>
  for(i = 0; i < tx_power_levels; i++)
10048c8a:	187b      	adds	r3, r7, r1
10048c8c:	781a      	ldrb	r2, [r3, #0]
10048c8e:	187b      	adds	r3, r7, r1
10048c90:	3201      	adds	r2, #1
10048c92:	701a      	strb	r2, [r3, #0]
10048c94:	2317      	movs	r3, #23
10048c96:	18fa      	adds	r2, r7, r3
10048c98:	230f      	movs	r3, #15
10048c9a:	18fb      	adds	r3, r7, r3
10048c9c:	7812      	ldrb	r2, [r2, #0]
10048c9e:	781b      	ldrb	r3, [r3, #0]
10048ca0:	429a      	cmp	r2, r3
10048ca2:	d3e6      	bcc.n	10048c72 <RADIO_DBmToPALevel+0x3a>
10048ca4:	e000      	b.n	10048ca8 <RADIO_DBmToPALevel+0x70>
      break;
10048ca6:	46c0      	nop			@ (mov r8, r8)
  }
  if (((pa_level_table[i] > TX_dBm) && (i > LOWEST_TX_POWER_LEVEL_INDEX)) ||
10048ca8:	2117      	movs	r1, #23
10048caa:	187b      	adds	r3, r7, r1
10048cac:	781b      	ldrb	r3, [r3, #0]
10048cae:	693a      	ldr	r2, [r7, #16]
10048cb0:	18d3      	adds	r3, r2, r3
10048cb2:	781b      	ldrb	r3, [r3, #0]
10048cb4:	b25b      	sxtb	r3, r3
10048cb6:	1dfa      	adds	r2, r7, #7
10048cb8:	7812      	ldrb	r2, [r2, #0]
10048cba:	b252      	sxtb	r2, r2
10048cbc:	429a      	cmp	r2, r3
10048cbe:	da03      	bge.n	10048cc8 <RADIO_DBmToPALevel+0x90>
10048cc0:	187b      	adds	r3, r7, r1
10048cc2:	781b      	ldrb	r3, [r3, #0]
10048cc4:	2b01      	cmp	r3, #1
10048cc6:	d807      	bhi.n	10048cd8 <RADIO_DBmToPALevel+0xa0>
10048cc8:	2317      	movs	r3, #23
10048cca:	18fa      	adds	r2, r7, r3
10048ccc:	230f      	movs	r3, #15
10048cce:	18fb      	adds	r3, r7, r3
10048cd0:	7812      	ldrb	r2, [r2, #0]
10048cd2:	781b      	ldrb	r3, [r3, #0]
10048cd4:	429a      	cmp	r2, r3
10048cd6:	d105      	bne.n	10048ce4 <RADIO_DBmToPALevel+0xac>
      (i == tx_power_levels))
  {
    i--;
10048cd8:	2117      	movs	r1, #23
10048cda:	187b      	adds	r3, r7, r1
10048cdc:	781a      	ldrb	r2, [r3, #0]
10048cde:	187b      	adds	r3, r7, r1
10048ce0:	3a01      	subs	r2, #1
10048ce2:	701a      	strb	r2, [r3, #0]
  }

  return i;
10048ce4:	2317      	movs	r3, #23
10048ce6:	18fb      	adds	r3, r7, r3
10048ce8:	781b      	ldrb	r3, [r3, #0]
}
10048cea:	0018      	movs	r0, r3
10048cec:	46bd      	mov	sp, r7
10048cee:	b006      	add	sp, #24
10048cf0:	bd80      	pop	{r7, pc}
10048cf2:	46c0      	nop			@ (mov r8, r8)
10048cf4:	20000607 	.word	0x20000607
10048cf8:	1006e7b4 	.word	0x1006e7b4
10048cfc:	1006e794 	.word	0x1006e794

10048d00 <RADIO_PALevelToDBm>:

  return i;
}

int8_t RADIO_PALevelToDBm(uint8_t PA_Level)
{
10048d00:	b580      	push	{r7, lr}
10048d02:	b084      	sub	sp, #16
10048d04:	af00      	add	r7, sp, #0
10048d06:	0002      	movs	r2, r0
10048d08:	1dfb      	adds	r3, r7, #7
10048d0a:	701a      	strb	r2, [r3, #0]
  const int8_t *pa_level_table = high_power ? high_power_pa_level_table : normal_pa_level_table;
10048d0c:	4b13      	ldr	r3, [pc, #76]	@ (10048d5c <RADIO_PALevelToDBm+0x5c>)
10048d0e:	781b      	ldrb	r3, [r3, #0]
10048d10:	2b00      	cmp	r3, #0
10048d12:	d001      	beq.n	10048d18 <RADIO_PALevelToDBm+0x18>
10048d14:	4b12      	ldr	r3, [pc, #72]	@ (10048d60 <RADIO_PALevelToDBm+0x60>)
10048d16:	e000      	b.n	10048d1a <RADIO_PALevelToDBm+0x1a>
10048d18:	4b12      	ldr	r3, [pc, #72]	@ (10048d64 <RADIO_PALevelToDBm+0x64>)
10048d1a:	60fb      	str	r3, [r7, #12]
  const uint8_t tx_power_levels = high_power ? HP_TX_POWER_LEVELS : TX_POWER_LEVELS;
10048d1c:	4b0f      	ldr	r3, [pc, #60]	@ (10048d5c <RADIO_PALevelToDBm+0x5c>)
10048d1e:	781b      	ldrb	r3, [r3, #0]
10048d20:	2b00      	cmp	r3, #0
10048d22:	d001      	beq.n	10048d28 <RADIO_PALevelToDBm+0x28>
10048d24:	2221      	movs	r2, #33	@ 0x21
10048d26:	e000      	b.n	10048d2a <RADIO_PALevelToDBm+0x2a>
10048d28:	2220      	movs	r2, #32
10048d2a:	210b      	movs	r1, #11
10048d2c:	187b      	adds	r3, r7, r1
10048d2e:	701a      	strb	r2, [r3, #0]

  if(PA_Level < LOWEST_TX_POWER_LEVEL_INDEX || PA_Level >= tx_power_levels)
10048d30:	1dfb      	adds	r3, r7, #7
10048d32:	781b      	ldrb	r3, [r3, #0]
10048d34:	2b00      	cmp	r3, #0
10048d36:	d005      	beq.n	10048d44 <RADIO_PALevelToDBm+0x44>
10048d38:	1dfa      	adds	r2, r7, #7
10048d3a:	187b      	adds	r3, r7, r1
10048d3c:	7812      	ldrb	r2, [r2, #0]
10048d3e:	781b      	ldrb	r3, [r3, #0]
10048d40:	429a      	cmp	r2, r3
10048d42:	d301      	bcc.n	10048d48 <RADIO_PALevelToDBm+0x48>
  {
    return 127;
10048d44:	237f      	movs	r3, #127	@ 0x7f
10048d46:	e005      	b.n	10048d54 <RADIO_PALevelToDBm+0x54>
  }

  return pa_level_table[PA_Level];
10048d48:	1dfb      	adds	r3, r7, #7
10048d4a:	781b      	ldrb	r3, [r3, #0]
10048d4c:	68fa      	ldr	r2, [r7, #12]
10048d4e:	18d3      	adds	r3, r2, r3
10048d50:	781b      	ldrb	r3, [r3, #0]
10048d52:	b25b      	sxtb	r3, r3
}
10048d54:	0018      	movs	r0, r3
10048d56:	46bd      	mov	sp, r7
10048d58:	b004      	add	sp, #16
10048d5a:	bd80      	pop	{r7, pc}
10048d5c:	20000607 	.word	0x20000607
10048d60:	1006e7b4 	.word	0x1006e7b4
10048d64:	1006e794 	.word	0x1006e794

10048d68 <RADIO_GetMaxPALevel>:

uint8_t RADIO_GetMaxPALevel(void)
{
10048d68:	b580      	push	{r7, lr}
10048d6a:	af00      	add	r7, sp, #0
  return HP_TX_POWER_LEVELS - 1;
10048d6c:	2320      	movs	r3, #32
}
10048d6e:	0018      	movs	r0, r3
10048d70:	46bd      	mov	sp, r7
10048d72:	bd80      	pop	{r7, pc}

10048d74 <RADIO_GetDefaultPALevel>:

uint8_t RADIO_GetDefaultPALevel(void)
{
10048d74:	b580      	push	{r7, lr}
10048d76:	af00      	add	r7, sp, #0
  return DEFAULT_TX_PA_LEVEL;
10048d78:	231f      	movs	r3, #31
}
10048d7a:	0018      	movs	r0, r3
10048d7c:	46bd      	mov	sp, r7
10048d7e:	bd80      	pop	{r7, pc}

10048d80 <RADIO_SetHighPower>:
        *Max_Tx_Power = MAX_TX_POWER_LOW;
    }
}

void RADIO_SetHighPower(FunctionalState state)
{
10048d80:	b580      	push	{r7, lr}
10048d82:	b082      	sub	sp, #8
10048d84:	af00      	add	r7, sp, #0
10048d86:	0002      	movs	r2, r0
10048d88:	1dfb      	adds	r3, r7, #7
10048d8a:	701a      	strb	r2, [r3, #0]
  if(state != DISABLE)
10048d8c:	1dfb      	adds	r3, r7, #7
10048d8e:	781b      	ldrb	r3, [r3, #0]
10048d90:	2b00      	cmp	r3, #0
10048d92:	d007      	beq.n	10048da4 <RADIO_SetHighPower+0x24>
  {
    if(high_power == FALSE)
10048d94:	4b1d      	ldr	r3, [pc, #116]	@ (10048e0c <RADIO_SetHighPower+0x8c>)
10048d96:	781b      	ldrb	r3, [r3, #0]
10048d98:	2b00      	cmp	r3, #0
10048d9a:	d10a      	bne.n	10048db2 <RADIO_SetHighPower+0x32>
    {
      high_power = TRUE;
10048d9c:	4b1b      	ldr	r3, [pc, #108]	@ (10048e0c <RADIO_SetHighPower+0x8c>)
10048d9e:	2201      	movs	r2, #1
10048da0:	701a      	strb	r2, [r3, #0]
10048da2:	e006      	b.n	10048db2 <RADIO_SetHighPower+0x32>
#endif
    }
  }
  else
  {
    if(high_power == TRUE)
10048da4:	4b19      	ldr	r3, [pc, #100]	@ (10048e0c <RADIO_SetHighPower+0x8c>)
10048da6:	781b      	ldrb	r3, [r3, #0]
10048da8:	2b01      	cmp	r3, #1
10048daa:	d102      	bne.n	10048db2 <RADIO_SetHighPower+0x32>
    {
      high_power = FALSE;
10048dac:	4b17      	ldr	r3, [pc, #92]	@ (10048e0c <RADIO_SetHighPower+0x8c>)
10048dae:	2200      	movs	r2, #0
10048db0:	701a      	strb	r2, [r3, #0]
      LL_SYSCFG_BLERXTX_ClearInterrupt(LL_SYSCFG_BLE_TX_EVENT);
#endif
    }
  }

  if (LL_PWR_IsEnabledSMPSPrechargeMode() || (LL_PWR_GetSMPSMode() == LL_PWR_NO_SMPS))
10048db2:	f7ff ff19 	bl	10048be8 <LL_PWR_IsEnabledSMPSPrechargeMode>
10048db6:	1e03      	subs	r3, r0, #0
10048db8:	d124      	bne.n	10048e04 <RADIO_SetHighPower+0x84>
10048dba:	f7ff fef3 	bl	10048ba4 <LL_PWR_GetSMPSMode>
10048dbe:	0002      	movs	r2, r0
10048dc0:	2380      	movs	r3, #128	@ 0x80
10048dc2:	00db      	lsls	r3, r3, #3
10048dc4:	429a      	cmp	r2, r3
10048dc6:	d01d      	beq.n	10048e04 <RADIO_SetHighPower+0x84>
    return;

  /* Bypass SMPS */
  LL_PWR_SetSMPSPrechargeMode(LL_PWR_SMPS_PRECHARGE);
10048dc8:	2380      	movs	r3, #128	@ 0x80
10048dca:	009b      	lsls	r3, r3, #2
10048dcc:	0018      	movs	r0, r3
10048dce:	f7ff fef5 	bl	10048bbc <LL_PWR_SetSMPSPrechargeMode>
  while(LL_PWR_IsSMPSReady());
10048dd2:	46c0      	nop			@ (mov r8, r8)
10048dd4:	f7ff fed6 	bl	10048b84 <LL_PWR_IsSMPSReady>
10048dd8:	1e03      	subs	r3, r0, #0
10048dda:	d1fb      	bne.n	10048dd4 <RADIO_SetHighPower+0x54>
  /* Change level */
  if(state != DISABLE)
10048ddc:	1dfb      	adds	r3, r7, #7
10048dde:	781b      	ldrb	r3, [r3, #0]
10048de0:	2b00      	cmp	r3, #0
10048de2:	d003      	beq.n	10048dec <RADIO_SetHighPower+0x6c>
  {
    LL_PWR_SMPS_SetOutputVoltageLevel(PWR_SMPS_OUTPUT_VOLTAGE_1V90);
10048de4:	200e      	movs	r0, #14
10048de6:	f7ff ff13 	bl	10048c10 <LL_PWR_SMPS_SetOutputVoltageLevel>
10048dea:	e002      	b.n	10048df2 <RADIO_SetHighPower+0x72>
  }
  else
  {
    LL_PWR_SMPS_SetOutputVoltageLevel(PWR_SMPS_OUTPUT_VOLTAGE_1V40);
10048dec:	2004      	movs	r0, #4
10048dee:	f7ff ff0f 	bl	10048c10 <LL_PWR_SMPS_SetOutputVoltageLevel>
  }
  /* Disable bypass*/
  LL_PWR_SetSMPSPrechargeMode(LL_PWR_NO_SMPS_PRECHARGE);
10048df2:	2000      	movs	r0, #0
10048df4:	f7ff fee2 	bl	10048bbc <LL_PWR_SetSMPSPrechargeMode>
  while(!LL_PWR_IsSMPSReady());
10048df8:	46c0      	nop			@ (mov r8, r8)
10048dfa:	f7ff fec3 	bl	10048b84 <LL_PWR_IsSMPSReady>
10048dfe:	1e03      	subs	r3, r0, #0
10048e00:	d0fb      	beq.n	10048dfa <RADIO_SetHighPower+0x7a>
10048e02:	e000      	b.n	10048e06 <RADIO_SetHighPower+0x86>
    return;
10048e04:	46c0      	nop			@ (mov r8, r8)
}
10048e06:	46bd      	mov	sp, r7
10048e08:	b002      	add	sp, #8
10048e0a:	bd80      	pop	{r7, pc}
10048e0c:	20000607 	.word	0x20000607

10048e10 <HAL_RADIO_TxRxSeqCallback>:

void HAL_RADIO_TxRxSeqCallback(void)
{
10048e10:	b580      	push	{r7, lr}
10048e12:	af00      	add	r7, sp, #0
      MODIFY_REG_FIELD(RRM->LDO_ANA_ENG, RRM_LDO_ANA_ENG_RFD_LDO_TRANSFO_BYPASS, 0);
    }
    LL_SYSCFG_BLERXTX_ClearInterrupt(LL_SYSCFG_BLE_TX_EVENT);
  }
#endif
}
10048e14:	46c0      	nop			@ (mov r8, r8)
10048e16:	46bd      	mov	sp, r7
10048e18:	bd80      	pop	{r7, pc}

10048e1a <LL_SYSCFG_GetDeviceRevision>:
  * @brief  Get the device cut revision (metal fix) information.
  * @rmtoll DIE_ID REVISION   LL_SYSCFG_GetDeviceRevision
  * @retval Device ID
  */
__STATIC_INLINE uint32_t LL_SYSCFG_GetDeviceRevision(void)
{
10048e1a:	b580      	push	{r7, lr}
10048e1c:	af00      	add	r7, sp, #0
  return (uint32_t)((READ_REG(SYSCFG->DIE_ID) & SYSCFG_DIE_ID_REVISION) >> SYSCFG_DIE_ID_REVISION_Pos);
10048e1e:	2380      	movs	r3, #128	@ 0x80
10048e20:	05db      	lsls	r3, r3, #23
10048e22:	681b      	ldr	r3, [r3, #0]
10048e24:	220f      	movs	r2, #15
10048e26:	4013      	ands	r3, r2
}
10048e28:	0018      	movs	r0, r3
10048e2a:	46bd      	mov	sp, r7
10048e2c:	bd80      	pop	{r7, pc}

10048e2e <LL_SYSCFG_GetDeviceVersion>:
  * @brief  Get the device cut version information.
  * @rmtoll DIE_ID VERSION   LL_SYSCFG_GetDeviceVersion
  * @retval Device ID
  */
__STATIC_INLINE uint32_t LL_SYSCFG_GetDeviceVersion(void)
{
10048e2e:	b580      	push	{r7, lr}
10048e30:	af00      	add	r7, sp, #0
  return (uint32_t)((READ_REG(SYSCFG->DIE_ID) & SYSCFG_DIE_ID_VERSION) >> SYSCFG_DIE_ID_VERSION_Pos);
10048e32:	2380      	movs	r3, #128	@ 0x80
10048e34:	05db      	lsls	r3, r3, #23
10048e36:	681b      	ldr	r3, [r3, #0]
10048e38:	091b      	lsrs	r3, r3, #4
10048e3a:	220f      	movs	r2, #15
10048e3c:	4013      	ands	r3, r2
}
10048e3e:	0018      	movs	r0, r3
10048e40:	46bd      	mov	sp, r7
10048e42:	bd80      	pop	{r7, pc}

10048e44 <LL_SYSCFG_GetDeviceJTAG_ID>:
  * @brief  Get the JTAG_ID device information.
  * @rmtoll JTAG_ID    LL_SYSCFG_GetDeviceJTAG_ID
  * @retval Device ID
  */
__STATIC_INLINE uint32_t LL_SYSCFG_GetDeviceJTAG_ID(void)
{
10048e44:	b580      	push	{r7, lr}
10048e46:	af00      	add	r7, sp, #0
  return (uint32_t)READ_REG(SYSCFG->JTAG_ID);
10048e48:	2380      	movs	r3, #128	@ 0x80
10048e4a:	05db      	lsls	r3, r3, #23
10048e4c:	685b      	ldr	r3, [r3, #4]
}
10048e4e:	0018      	movs	r0, r3
10048e50:	46bd      	mov	sp, r7
10048e52:	bd80      	pop	{r7, pc}

10048e54 <LL_GetFlashSize>:
    * @note   This bitfield indicates the words number of the device Flash memory expressed.
    *         As an example, 0x7FFF corresponds to 128 Kbytes.
    * @retval FLASH_SIZE[15:0]: Flash memory size
    */
__STATIC_INLINE uint32_t LL_GetFlashSize(void)
{
10048e54:	b580      	push	{r7, lr}
10048e56:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_REG(*((uint32_t *)FLASHSIZE_BASE_ADDRESS)) & 0x0000FFFFUL);
10048e58:	4b03      	ldr	r3, [pc, #12]	@ (10048e68 <LL_GetFlashSize+0x14>)
10048e5a:	681b      	ldr	r3, [r3, #0]
10048e5c:	041b      	lsls	r3, r3, #16
10048e5e:	0c1b      	lsrs	r3, r3, #16
}
10048e60:	0018      	movs	r0, r3
10048e62:	46bd      	mov	sp, r7
10048e64:	bd80      	pop	{r7, pc}
10048e66:	46c0      	nop			@ (mov r8, r8)
10048e68:	40001014 	.word	0x40001014

10048e6c <LL_GetRAMSize>:
    * @arg LL_UTILS_RAMSIZE_32K
    * @arg LL_UTILS_RAMSIZE_48K
    * @arg LL_UTILS_RAMSIZE_64K
    */
  __STATIC_INLINE uint32_t LL_GetRAMSize(void)
  {
10048e6c:	b580      	push	{r7, lr}
10048e6e:	b082      	sub	sp, #8
10048e70:	af00      	add	r7, sp, #0
    __IOM uint32_t tmpreg;
#if defined(FLASH_FLASH_SIZE_RAM_SIZE)
    tmpreg = (READ_REG(*((uint32_t *)RAMSIZE_BASE_ADDRESS)) & FLASH_FLASH_SIZE_RAM_SIZE) >> FLASH_FLASH_SIZE_RAM_SIZE_Pos;
10048e72:	4b08      	ldr	r3, [pc, #32]	@ (10048e94 <LL_GetRAMSize+0x28>)
10048e74:	681b      	ldr	r3, [r3, #0]
10048e76:	0c5b      	lsrs	r3, r3, #17
10048e78:	2203      	movs	r2, #3
10048e7a:	4013      	ands	r3, r2
10048e7c:	607b      	str	r3, [r7, #4]

    if (tmpreg == 0) {
10048e7e:	687b      	ldr	r3, [r7, #4]
10048e80:	2b00      	cmp	r3, #0
10048e82:	d101      	bne.n	10048e88 <LL_GetRAMSize+0x1c>
      tmpreg = LL_UTILS_RAMSIZE_32K;
10048e84:	2301      	movs	r3, #1
10048e86:	607b      	str	r3, [r7, #4]
    }
#else
    tmpreg = LL_UTILS_RAMSIZE_24K;
#endif
    
    return tmpreg;
10048e88:	687b      	ldr	r3, [r7, #4]
  }
10048e8a:	0018      	movs	r0, r3
10048e8c:	46bd      	mov	sp, r7
10048e8e:	b002      	add	sp, #8
10048e90:	bd80      	pop	{r7, pc}
10048e92:	46c0      	nop			@ (mov r8, r8)
10048e94:	40001014 	.word	0x40001014

10048e98 <GetPartInfo>:
/* Private variables ---------------------------------------------------------*/

/*---------------------------------------------------------------------------*/

void GetPartInfo(PartInfoType *partInfo)
{
10048e98:	b580      	push	{r7, lr}
10048e9a:	b084      	sub	sp, #16
10048e9c:	af00      	add	r7, sp, #0
10048e9e:	6078      	str	r0, [r7, #4]
  uint32_t jtag_id;

  partInfo->die_id = DIE_SW_ID_UNKOWN;
10048ea0:	687b      	ldr	r3, [r7, #4]
10048ea2:	22ff      	movs	r2, #255	@ 0xff
10048ea4:	701a      	strb	r2, [r3, #0]

  jtag_id = LL_SYSCFG_GetDeviceJTAG_ID();
10048ea6:	f7ff ffcd 	bl	10048e44 <LL_SYSCFG_GetDeviceJTAG_ID>
10048eaa:	0003      	movs	r3, r0
10048eac:	60fb      	str	r3, [r7, #12]

#if defined(STM32WB09)
  if(jtag_id == JTAG_ID_CODE_STM32WB09XX)
10048eae:	68fb      	ldr	r3, [r7, #12]
10048eb0:	4a18      	ldr	r2, [pc, #96]	@ (10048f14 <GetPartInfo+0x7c>)
10048eb2:	4293      	cmp	r3, r2
10048eb4:	d102      	bne.n	10048ebc <GetPartInfo+0x24>
  {
    partInfo->die_id = DIE_SW_ID_STM32WB09XX;
10048eb6:	687b      	ldr	r3, [r7, #4]
10048eb8:	2206      	movs	r2, #6
10048eba:	701a      	strb	r2, [r3, #0]
  {
    partInfo->die_id = DIE_SW_ID_STM32WB05XX;
  }
#endif

  partInfo->die_major     =  LL_SYSCFG_GetDeviceVersion();
10048ebc:	f7ff ffb7 	bl	10048e2e <LL_SYSCFG_GetDeviceVersion>
10048ec0:	0003      	movs	r3, r0
10048ec2:	b2da      	uxtb	r2, r3
10048ec4:	687b      	ldr	r3, [r7, #4]
10048ec6:	705a      	strb	r2, [r3, #1]
  partInfo->die_cut       =  LL_SYSCFG_GetDeviceRevision();
10048ec8:	f7ff ffa7 	bl	10048e1a <LL_SYSCFG_GetDeviceRevision>
10048ecc:	0003      	movs	r3, r0
10048ece:	b2da      	uxtb	r2, r3
10048ed0:	687b      	ldr	r3, [r7, #4]
10048ed2:	709a      	strb	r2, [r3, #2]
  partInfo->jtag_id_code  =  LL_SYSCFG_GetDeviceJTAG_ID(); // Duplicated
10048ed4:	f7ff ffb6 	bl	10048e44 <LL_SYSCFG_GetDeviceJTAG_ID>
10048ed8:	0002      	movs	r2, r0
10048eda:	687b      	ldr	r3, [r7, #4]
10048edc:	605a      	str	r2, [r3, #4]
  partInfo->flash_size    =  (LL_GetFlashSize() + 1) * 4;
10048ede:	f7ff ffb9 	bl	10048e54 <LL_GetFlashSize>
10048ee2:	0003      	movs	r3, r0
10048ee4:	3301      	adds	r3, #1
10048ee6:	009a      	lsls	r2, r3, #2
10048ee8:	687b      	ldr	r3, [r7, #4]
10048eea:	609a      	str	r2, [r3, #8]

  if (LL_GetRAMSize() != LL_UTILS_RAMSIZE_24K)
10048eec:	f7ff ffbe 	bl	10048e6c <LL_GetRAMSize>
10048ef0:	1e03      	subs	r3, r0, #0
10048ef2:	d007      	beq.n	10048f04 <GetPartInfo+0x6c>
  {
    partInfo->ram_size    =  (LL_GetRAMSize() + 1) * 16 * 1024;
10048ef4:	f7ff ffba 	bl	10048e6c <LL_GetRAMSize>
10048ef8:	0003      	movs	r3, r0
10048efa:	3301      	adds	r3, #1
10048efc:	039a      	lsls	r2, r3, #14
10048efe:	687b      	ldr	r3, [r7, #4]
10048f00:	60da      	str	r2, [r3, #12]
  else
  {
    partInfo->ram_size    =  24*1024;
  }

}
10048f02:	e003      	b.n	10048f0c <GetPartInfo+0x74>
    partInfo->ram_size    =  24*1024;
10048f04:	687b      	ldr	r3, [r7, #4]
10048f06:	22c0      	movs	r2, #192	@ 0xc0
10048f08:	01d2      	lsls	r2, r2, #7
10048f0a:	60da      	str	r2, [r3, #12]
}
10048f0c:	46c0      	nop			@ (mov r8, r8)
10048f0e:	46bd      	mov	sp, r7
10048f10:	b004      	add	sp, #16
10048f12:	bd80      	pop	{r7, pc}
10048f14:	02032041 	.word	0x02032041

10048f18 <GetDemodCI>:
  }
  NVIC_SystemReset();
}

uint8_t GetDemodCI(void)
{
10048f18:	b580      	push	{r7, lr}
10048f1a:	b082      	sub	sp, #8
10048f1c:	af00      	add	r7, sp, #0
    /* Read the CI from the demodulator register */
    uint8_t demod_ci = (RRM->DEMOD_DIG_OUT) & 0x03U;
10048f1e:	4a0c      	ldr	r2, [pc, #48]	@ (10048f50 <GetDemodCI+0x38>)
10048f20:	23ac      	movs	r3, #172	@ 0xac
10048f22:	009b      	lsls	r3, r3, #2
10048f24:	58d3      	ldr	r3, [r2, r3]
10048f26:	b2da      	uxtb	r2, r3
10048f28:	1dfb      	adds	r3, r7, #7
10048f2a:	2103      	movs	r1, #3
10048f2c:	400a      	ands	r2, r1
10048f2e:	701a      	strb	r2, [r3, #0]

    /* Remap to the standard compliant values */
    uint8_t std_ci = (demod_ci == 0x02U ? 0x01U : 0x00U);
10048f30:	1dfb      	adds	r3, r7, #7
10048f32:	781b      	ldrb	r3, [r3, #0]
10048f34:	2b02      	cmp	r3, #2
10048f36:	d101      	bne.n	10048f3c <GetDemodCI+0x24>
10048f38:	2201      	movs	r2, #1
10048f3a:	e000      	b.n	10048f3e <GetDemodCI+0x26>
10048f3c:	2200      	movs	r2, #0
10048f3e:	1dbb      	adds	r3, r7, #6
10048f40:	701a      	strb	r2, [r3, #0]

    return std_ci;
10048f42:	1dbb      	adds	r3, r7, #6
10048f44:	781b      	ldrb	r3, [r3, #0]
}
10048f46:	0018      	movs	r0, r3
10048f48:	46bd      	mov	sp, r7
10048f4a:	b002      	add	sp, #8
10048f4c:	bd80      	pop	{r7, pc}
10048f4e:	46c0      	nop			@ (mov r8, r8)
10048f50:	60001400 	.word	0x60001400

10048f54 <LST_init_head>:

/******************************************************************************
 * Function Definitions
 ******************************************************************************/
void LST_init_head (tListNode * listHead)
{
10048f54:	b580      	push	{r7, lr}
10048f56:	b082      	sub	sp, #8
10048f58:	af00      	add	r7, sp, #0
10048f5a:	6078      	str	r0, [r7, #4]
  listHead->next = listHead;
10048f5c:	687b      	ldr	r3, [r7, #4]
10048f5e:	1d3a      	adds	r2, r7, #4
10048f60:	7810      	ldrb	r0, [r2, #0]
10048f62:	781a      	ldrb	r2, [r3, #0]
10048f64:	2100      	movs	r1, #0
10048f66:	400a      	ands	r2, r1
10048f68:	1c11      	adds	r1, r2, #0
10048f6a:	1c02      	adds	r2, r0, #0
10048f6c:	430a      	orrs	r2, r1
10048f6e:	701a      	strb	r2, [r3, #0]
10048f70:	1d7a      	adds	r2, r7, #5
10048f72:	7810      	ldrb	r0, [r2, #0]
10048f74:	785a      	ldrb	r2, [r3, #1]
10048f76:	2100      	movs	r1, #0
10048f78:	400a      	ands	r2, r1
10048f7a:	1c11      	adds	r1, r2, #0
10048f7c:	1c02      	adds	r2, r0, #0
10048f7e:	430a      	orrs	r2, r1
10048f80:	705a      	strb	r2, [r3, #1]
10048f82:	1dba      	adds	r2, r7, #6
10048f84:	7810      	ldrb	r0, [r2, #0]
10048f86:	789a      	ldrb	r2, [r3, #2]
10048f88:	2100      	movs	r1, #0
10048f8a:	400a      	ands	r2, r1
10048f8c:	1c11      	adds	r1, r2, #0
10048f8e:	1c02      	adds	r2, r0, #0
10048f90:	430a      	orrs	r2, r1
10048f92:	709a      	strb	r2, [r3, #2]
10048f94:	1dfa      	adds	r2, r7, #7
10048f96:	7810      	ldrb	r0, [r2, #0]
10048f98:	78da      	ldrb	r2, [r3, #3]
10048f9a:	2100      	movs	r1, #0
10048f9c:	400a      	ands	r2, r1
10048f9e:	1c11      	adds	r1, r2, #0
10048fa0:	1c02      	adds	r2, r0, #0
10048fa2:	430a      	orrs	r2, r1
10048fa4:	70da      	strb	r2, [r3, #3]
  listHead->prev = listHead;
10048fa6:	687b      	ldr	r3, [r7, #4]
10048fa8:	1d3a      	adds	r2, r7, #4
10048faa:	7810      	ldrb	r0, [r2, #0]
10048fac:	791a      	ldrb	r2, [r3, #4]
10048fae:	2100      	movs	r1, #0
10048fb0:	400a      	ands	r2, r1
10048fb2:	1c11      	adds	r1, r2, #0
10048fb4:	1c02      	adds	r2, r0, #0
10048fb6:	430a      	orrs	r2, r1
10048fb8:	711a      	strb	r2, [r3, #4]
10048fba:	1d7a      	adds	r2, r7, #5
10048fbc:	7810      	ldrb	r0, [r2, #0]
10048fbe:	795a      	ldrb	r2, [r3, #5]
10048fc0:	2100      	movs	r1, #0
10048fc2:	400a      	ands	r2, r1
10048fc4:	1c11      	adds	r1, r2, #0
10048fc6:	1c02      	adds	r2, r0, #0
10048fc8:	430a      	orrs	r2, r1
10048fca:	715a      	strb	r2, [r3, #5]
10048fcc:	1dba      	adds	r2, r7, #6
10048fce:	7810      	ldrb	r0, [r2, #0]
10048fd0:	799a      	ldrb	r2, [r3, #6]
10048fd2:	2100      	movs	r1, #0
10048fd4:	400a      	ands	r2, r1
10048fd6:	1c11      	adds	r1, r2, #0
10048fd8:	1c02      	adds	r2, r0, #0
10048fda:	430a      	orrs	r2, r1
10048fdc:	719a      	strb	r2, [r3, #6]
10048fde:	1dfa      	adds	r2, r7, #7
10048fe0:	7810      	ldrb	r0, [r2, #0]
10048fe2:	79da      	ldrb	r2, [r3, #7]
10048fe4:	2100      	movs	r1, #0
10048fe6:	400a      	ands	r2, r1
10048fe8:	1c11      	adds	r1, r2, #0
10048fea:	1c02      	adds	r2, r0, #0
10048fec:	430a      	orrs	r2, r1
10048fee:	71da      	strb	r2, [r3, #7]
}
10048ff0:	46c0      	nop			@ (mov r8, r8)
10048ff2:	46bd      	mov	sp, r7
10048ff4:	b002      	add	sp, #8
10048ff6:	bd80      	pop	{r7, pc}

10048ff8 <LST_insert_tail>:

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}

void LST_insert_tail (tListNode * listHead, tListNode * node)
{
10048ff8:	b590      	push	{r4, r7, lr}
10048ffa:	b087      	sub	sp, #28
10048ffc:	af00      	add	r7, sp, #0
10048ffe:	6078      	str	r0, [r7, #4]
10049000:	6039      	str	r1, [r7, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
10049002:	f3ef 8310 	mrs	r3, PRIMASK
10049006:	60fb      	str	r3, [r7, #12]
  return(result);
10049008:	68fb      	ldr	r3, [r7, #12]
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
1004900a:	617b      	str	r3, [r7, #20]
  __ASM volatile ("cpsid i" : : : "memory");
1004900c:	b672      	cpsid	i
}
1004900e:	46c0      	nop			@ (mov r8, r8)
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  node->next = listHead;
10049010:	683b      	ldr	r3, [r7, #0]
10049012:	1d3a      	adds	r2, r7, #4
10049014:	7810      	ldrb	r0, [r2, #0]
10049016:	781a      	ldrb	r2, [r3, #0]
10049018:	2100      	movs	r1, #0
1004901a:	400a      	ands	r2, r1
1004901c:	1c11      	adds	r1, r2, #0
1004901e:	1c02      	adds	r2, r0, #0
10049020:	430a      	orrs	r2, r1
10049022:	701a      	strb	r2, [r3, #0]
10049024:	1d7a      	adds	r2, r7, #5
10049026:	7810      	ldrb	r0, [r2, #0]
10049028:	785a      	ldrb	r2, [r3, #1]
1004902a:	2100      	movs	r1, #0
1004902c:	400a      	ands	r2, r1
1004902e:	1c11      	adds	r1, r2, #0
10049030:	1c02      	adds	r2, r0, #0
10049032:	430a      	orrs	r2, r1
10049034:	705a      	strb	r2, [r3, #1]
10049036:	1dba      	adds	r2, r7, #6
10049038:	7810      	ldrb	r0, [r2, #0]
1004903a:	789a      	ldrb	r2, [r3, #2]
1004903c:	2100      	movs	r1, #0
1004903e:	400a      	ands	r2, r1
10049040:	1c11      	adds	r1, r2, #0
10049042:	1c02      	adds	r2, r0, #0
10049044:	430a      	orrs	r2, r1
10049046:	709a      	strb	r2, [r3, #2]
10049048:	1dfa      	adds	r2, r7, #7
1004904a:	7810      	ldrb	r0, [r2, #0]
1004904c:	78da      	ldrb	r2, [r3, #3]
1004904e:	2100      	movs	r1, #0
10049050:	400a      	ands	r2, r1
10049052:	1c11      	adds	r1, r2, #0
10049054:	1c02      	adds	r2, r0, #0
10049056:	430a      	orrs	r2, r1
10049058:	70da      	strb	r2, [r3, #3]
  node->prev = listHead->prev;
1004905a:	687b      	ldr	r3, [r7, #4]
1004905c:	791a      	ldrb	r2, [r3, #4]
1004905e:	7959      	ldrb	r1, [r3, #5]
10049060:	0209      	lsls	r1, r1, #8
10049062:	430a      	orrs	r2, r1
10049064:	7999      	ldrb	r1, [r3, #6]
10049066:	0409      	lsls	r1, r1, #16
10049068:	430a      	orrs	r2, r1
1004906a:	79db      	ldrb	r3, [r3, #7]
1004906c:	061b      	lsls	r3, r3, #24
1004906e:	4313      	orrs	r3, r2
10049070:	001a      	movs	r2, r3
10049072:	683b      	ldr	r3, [r7, #0]
10049074:	21ff      	movs	r1, #255	@ 0xff
10049076:	4011      	ands	r1, r2
10049078:	000c      	movs	r4, r1
1004907a:	7919      	ldrb	r1, [r3, #4]
1004907c:	2000      	movs	r0, #0
1004907e:	4001      	ands	r1, r0
10049080:	1c08      	adds	r0, r1, #0
10049082:	1c21      	adds	r1, r4, #0
10049084:	4301      	orrs	r1, r0
10049086:	7119      	strb	r1, [r3, #4]
10049088:	0a11      	lsrs	r1, r2, #8
1004908a:	20ff      	movs	r0, #255	@ 0xff
1004908c:	4001      	ands	r1, r0
1004908e:	000c      	movs	r4, r1
10049090:	7959      	ldrb	r1, [r3, #5]
10049092:	2000      	movs	r0, #0
10049094:	4001      	ands	r1, r0
10049096:	1c08      	adds	r0, r1, #0
10049098:	1c21      	adds	r1, r4, #0
1004909a:	4301      	orrs	r1, r0
1004909c:	7159      	strb	r1, [r3, #5]
1004909e:	0c11      	lsrs	r1, r2, #16
100490a0:	20ff      	movs	r0, #255	@ 0xff
100490a2:	4001      	ands	r1, r0
100490a4:	000c      	movs	r4, r1
100490a6:	7999      	ldrb	r1, [r3, #6]
100490a8:	2000      	movs	r0, #0
100490aa:	4001      	ands	r1, r0
100490ac:	1c08      	adds	r0, r1, #0
100490ae:	1c21      	adds	r1, r4, #0
100490b0:	4301      	orrs	r1, r0
100490b2:	7199      	strb	r1, [r3, #6]
100490b4:	0e10      	lsrs	r0, r2, #24
100490b6:	79da      	ldrb	r2, [r3, #7]
100490b8:	2100      	movs	r1, #0
100490ba:	400a      	ands	r2, r1
100490bc:	1c11      	adds	r1, r2, #0
100490be:	1c02      	adds	r2, r0, #0
100490c0:	430a      	orrs	r2, r1
100490c2:	71da      	strb	r2, [r3, #7]
  listHead->prev = node;
100490c4:	687b      	ldr	r3, [r7, #4]
100490c6:	003a      	movs	r2, r7
100490c8:	7810      	ldrb	r0, [r2, #0]
100490ca:	791a      	ldrb	r2, [r3, #4]
100490cc:	2100      	movs	r1, #0
100490ce:	400a      	ands	r2, r1
100490d0:	1c11      	adds	r1, r2, #0
100490d2:	1c02      	adds	r2, r0, #0
100490d4:	430a      	orrs	r2, r1
100490d6:	711a      	strb	r2, [r3, #4]
100490d8:	1c7a      	adds	r2, r7, #1
100490da:	7810      	ldrb	r0, [r2, #0]
100490dc:	795a      	ldrb	r2, [r3, #5]
100490de:	2100      	movs	r1, #0
100490e0:	400a      	ands	r2, r1
100490e2:	1c11      	adds	r1, r2, #0
100490e4:	1c02      	adds	r2, r0, #0
100490e6:	430a      	orrs	r2, r1
100490e8:	715a      	strb	r2, [r3, #5]
100490ea:	1cba      	adds	r2, r7, #2
100490ec:	7810      	ldrb	r0, [r2, #0]
100490ee:	799a      	ldrb	r2, [r3, #6]
100490f0:	2100      	movs	r1, #0
100490f2:	400a      	ands	r2, r1
100490f4:	1c11      	adds	r1, r2, #0
100490f6:	1c02      	adds	r2, r0, #0
100490f8:	430a      	orrs	r2, r1
100490fa:	719a      	strb	r2, [r3, #6]
100490fc:	1cfa      	adds	r2, r7, #3
100490fe:	7810      	ldrb	r0, [r2, #0]
10049100:	79da      	ldrb	r2, [r3, #7]
10049102:	2100      	movs	r1, #0
10049104:	400a      	ands	r2, r1
10049106:	1c11      	adds	r1, r2, #0
10049108:	1c02      	adds	r2, r0, #0
1004910a:	430a      	orrs	r2, r1
1004910c:	71da      	strb	r2, [r3, #7]
  (node->prev)->next = node;
1004910e:	683b      	ldr	r3, [r7, #0]
10049110:	791a      	ldrb	r2, [r3, #4]
10049112:	7959      	ldrb	r1, [r3, #5]
10049114:	0209      	lsls	r1, r1, #8
10049116:	430a      	orrs	r2, r1
10049118:	7999      	ldrb	r1, [r3, #6]
1004911a:	0409      	lsls	r1, r1, #16
1004911c:	430a      	orrs	r2, r1
1004911e:	79db      	ldrb	r3, [r3, #7]
10049120:	061b      	lsls	r3, r3, #24
10049122:	4313      	orrs	r3, r2
10049124:	003a      	movs	r2, r7
10049126:	7810      	ldrb	r0, [r2, #0]
10049128:	781a      	ldrb	r2, [r3, #0]
1004912a:	2100      	movs	r1, #0
1004912c:	400a      	ands	r2, r1
1004912e:	1c11      	adds	r1, r2, #0
10049130:	1c02      	adds	r2, r0, #0
10049132:	430a      	orrs	r2, r1
10049134:	701a      	strb	r2, [r3, #0]
10049136:	1c7a      	adds	r2, r7, #1
10049138:	7810      	ldrb	r0, [r2, #0]
1004913a:	785a      	ldrb	r2, [r3, #1]
1004913c:	2100      	movs	r1, #0
1004913e:	400a      	ands	r2, r1
10049140:	1c11      	adds	r1, r2, #0
10049142:	1c02      	adds	r2, r0, #0
10049144:	430a      	orrs	r2, r1
10049146:	705a      	strb	r2, [r3, #1]
10049148:	1cba      	adds	r2, r7, #2
1004914a:	7810      	ldrb	r0, [r2, #0]
1004914c:	789a      	ldrb	r2, [r3, #2]
1004914e:	2100      	movs	r1, #0
10049150:	400a      	ands	r2, r1
10049152:	1c11      	adds	r1, r2, #0
10049154:	1c02      	adds	r2, r0, #0
10049156:	430a      	orrs	r2, r1
10049158:	709a      	strb	r2, [r3, #2]
1004915a:	1cfa      	adds	r2, r7, #3
1004915c:	7810      	ldrb	r0, [r2, #0]
1004915e:	78da      	ldrb	r2, [r3, #3]
10049160:	2100      	movs	r1, #0
10049162:	400a      	ands	r2, r1
10049164:	1c11      	adds	r1, r2, #0
10049166:	1c02      	adds	r2, r0, #0
10049168:	430a      	orrs	r2, r1
1004916a:	70da      	strb	r2, [r3, #3]
1004916c:	697b      	ldr	r3, [r7, #20]
1004916e:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
10049170:	693b      	ldr	r3, [r7, #16]
10049172:	f383 8810 	msr	PRIMASK, r3
}
10049176:	46c0      	nop			@ (mov r8, r8)

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
10049178:	46c0      	nop			@ (mov r8, r8)
1004917a:	46bd      	mov	sp, r7
1004917c:	b007      	add	sp, #28
1004917e:	bd90      	pop	{r4, r7, pc}

10049180 <LST_remove_node>:

void LST_remove_node (tListNode * node)
{
10049180:	b590      	push	{r4, r7, lr}
10049182:	b087      	sub	sp, #28
10049184:	af00      	add	r7, sp, #0
10049186:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
10049188:	f3ef 8310 	mrs	r3, PRIMASK
1004918c:	60fb      	str	r3, [r7, #12]
  return(result);
1004918e:	68fb      	ldr	r3, [r7, #12]
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
10049190:	617b      	str	r3, [r7, #20]
  __ASM volatile ("cpsid i" : : : "memory");
10049192:	b672      	cpsid	i
}
10049194:	46c0      	nop			@ (mov r8, r8)
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  (node->prev)->next = node->next;
10049196:	687b      	ldr	r3, [r7, #4]
10049198:	791a      	ldrb	r2, [r3, #4]
1004919a:	7959      	ldrb	r1, [r3, #5]
1004919c:	0209      	lsls	r1, r1, #8
1004919e:	430a      	orrs	r2, r1
100491a0:	7999      	ldrb	r1, [r3, #6]
100491a2:	0409      	lsls	r1, r1, #16
100491a4:	430a      	orrs	r2, r1
100491a6:	79db      	ldrb	r3, [r3, #7]
100491a8:	061b      	lsls	r3, r3, #24
100491aa:	4313      	orrs	r3, r2
100491ac:	687a      	ldr	r2, [r7, #4]
100491ae:	7811      	ldrb	r1, [r2, #0]
100491b0:	7850      	ldrb	r0, [r2, #1]
100491b2:	0200      	lsls	r0, r0, #8
100491b4:	4301      	orrs	r1, r0
100491b6:	7890      	ldrb	r0, [r2, #2]
100491b8:	0400      	lsls	r0, r0, #16
100491ba:	4301      	orrs	r1, r0
100491bc:	78d2      	ldrb	r2, [r2, #3]
100491be:	0612      	lsls	r2, r2, #24
100491c0:	430a      	orrs	r2, r1
100491c2:	21ff      	movs	r1, #255	@ 0xff
100491c4:	4011      	ands	r1, r2
100491c6:	000c      	movs	r4, r1
100491c8:	7819      	ldrb	r1, [r3, #0]
100491ca:	2000      	movs	r0, #0
100491cc:	4001      	ands	r1, r0
100491ce:	1c08      	adds	r0, r1, #0
100491d0:	1c21      	adds	r1, r4, #0
100491d2:	4301      	orrs	r1, r0
100491d4:	7019      	strb	r1, [r3, #0]
100491d6:	0a11      	lsrs	r1, r2, #8
100491d8:	20ff      	movs	r0, #255	@ 0xff
100491da:	4001      	ands	r1, r0
100491dc:	000c      	movs	r4, r1
100491de:	7859      	ldrb	r1, [r3, #1]
100491e0:	2000      	movs	r0, #0
100491e2:	4001      	ands	r1, r0
100491e4:	1c08      	adds	r0, r1, #0
100491e6:	1c21      	adds	r1, r4, #0
100491e8:	4301      	orrs	r1, r0
100491ea:	7059      	strb	r1, [r3, #1]
100491ec:	0c11      	lsrs	r1, r2, #16
100491ee:	20ff      	movs	r0, #255	@ 0xff
100491f0:	4001      	ands	r1, r0
100491f2:	000c      	movs	r4, r1
100491f4:	7899      	ldrb	r1, [r3, #2]
100491f6:	2000      	movs	r0, #0
100491f8:	4001      	ands	r1, r0
100491fa:	1c08      	adds	r0, r1, #0
100491fc:	1c21      	adds	r1, r4, #0
100491fe:	4301      	orrs	r1, r0
10049200:	7099      	strb	r1, [r3, #2]
10049202:	0e10      	lsrs	r0, r2, #24
10049204:	78da      	ldrb	r2, [r3, #3]
10049206:	2100      	movs	r1, #0
10049208:	400a      	ands	r2, r1
1004920a:	1c11      	adds	r1, r2, #0
1004920c:	1c02      	adds	r2, r0, #0
1004920e:	430a      	orrs	r2, r1
10049210:	70da      	strb	r2, [r3, #3]
  (node->next)->prev = node->prev;
10049212:	687b      	ldr	r3, [r7, #4]
10049214:	781a      	ldrb	r2, [r3, #0]
10049216:	7859      	ldrb	r1, [r3, #1]
10049218:	0209      	lsls	r1, r1, #8
1004921a:	430a      	orrs	r2, r1
1004921c:	7899      	ldrb	r1, [r3, #2]
1004921e:	0409      	lsls	r1, r1, #16
10049220:	430a      	orrs	r2, r1
10049222:	78db      	ldrb	r3, [r3, #3]
10049224:	061b      	lsls	r3, r3, #24
10049226:	4313      	orrs	r3, r2
10049228:	687a      	ldr	r2, [r7, #4]
1004922a:	7911      	ldrb	r1, [r2, #4]
1004922c:	7950      	ldrb	r0, [r2, #5]
1004922e:	0200      	lsls	r0, r0, #8
10049230:	4301      	orrs	r1, r0
10049232:	7990      	ldrb	r0, [r2, #6]
10049234:	0400      	lsls	r0, r0, #16
10049236:	4301      	orrs	r1, r0
10049238:	79d2      	ldrb	r2, [r2, #7]
1004923a:	0612      	lsls	r2, r2, #24
1004923c:	430a      	orrs	r2, r1
1004923e:	21ff      	movs	r1, #255	@ 0xff
10049240:	4011      	ands	r1, r2
10049242:	000c      	movs	r4, r1
10049244:	7919      	ldrb	r1, [r3, #4]
10049246:	2000      	movs	r0, #0
10049248:	4001      	ands	r1, r0
1004924a:	1c08      	adds	r0, r1, #0
1004924c:	1c21      	adds	r1, r4, #0
1004924e:	4301      	orrs	r1, r0
10049250:	7119      	strb	r1, [r3, #4]
10049252:	0a11      	lsrs	r1, r2, #8
10049254:	20ff      	movs	r0, #255	@ 0xff
10049256:	4001      	ands	r1, r0
10049258:	000c      	movs	r4, r1
1004925a:	7959      	ldrb	r1, [r3, #5]
1004925c:	2000      	movs	r0, #0
1004925e:	4001      	ands	r1, r0
10049260:	1c08      	adds	r0, r1, #0
10049262:	1c21      	adds	r1, r4, #0
10049264:	4301      	orrs	r1, r0
10049266:	7159      	strb	r1, [r3, #5]
10049268:	0c11      	lsrs	r1, r2, #16
1004926a:	20ff      	movs	r0, #255	@ 0xff
1004926c:	4001      	ands	r1, r0
1004926e:	000c      	movs	r4, r1
10049270:	7999      	ldrb	r1, [r3, #6]
10049272:	2000      	movs	r0, #0
10049274:	4001      	ands	r1, r0
10049276:	1c08      	adds	r0, r1, #0
10049278:	1c21      	adds	r1, r4, #0
1004927a:	4301      	orrs	r1, r0
1004927c:	7199      	strb	r1, [r3, #6]
1004927e:	0e10      	lsrs	r0, r2, #24
10049280:	79da      	ldrb	r2, [r3, #7]
10049282:	2100      	movs	r1, #0
10049284:	400a      	ands	r2, r1
10049286:	1c11      	adds	r1, r2, #0
10049288:	1c02      	adds	r2, r0, #0
1004928a:	430a      	orrs	r2, r1
1004928c:	71da      	strb	r2, [r3, #7]
1004928e:	697b      	ldr	r3, [r7, #20]
10049290:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
10049292:	693b      	ldr	r3, [r7, #16]
10049294:	f383 8810 	msr	PRIMASK, r3
}
10049298:	46c0      	nop			@ (mov r8, r8)

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
1004929a:	46c0      	nop			@ (mov r8, r8)
1004929c:	46bd      	mov	sp, r7
1004929e:	b007      	add	sp, #28
100492a0:	bd90      	pop	{r4, r7, pc}

100492a2 <LST_get_next_node>:

  return (size);
}

void LST_get_next_node (tListNode * ref_node, tListNode ** node)
{
100492a2:	b580      	push	{r7, lr}
100492a4:	b086      	sub	sp, #24
100492a6:	af00      	add	r7, sp, #0
100492a8:	6078      	str	r0, [r7, #4]
100492aa:	6039      	str	r1, [r7, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
100492ac:	f3ef 8310 	mrs	r3, PRIMASK
100492b0:	60fb      	str	r3, [r7, #12]
  return(result);
100492b2:	68fb      	ldr	r3, [r7, #12]
  uint32_t primask_bit;

  primask_bit = __get_PRIMASK();  /**< backup PRIMASK bit */
100492b4:	617b      	str	r3, [r7, #20]
  __ASM volatile ("cpsid i" : : : "memory");
100492b6:	b672      	cpsid	i
}
100492b8:	46c0      	nop			@ (mov r8, r8)
  __disable_irq();                  /**< Disable all interrupts by setting PRIMASK bit on Cortex*/

  *node = ref_node->next;
100492ba:	687b      	ldr	r3, [r7, #4]
100492bc:	781a      	ldrb	r2, [r3, #0]
100492be:	7859      	ldrb	r1, [r3, #1]
100492c0:	0209      	lsls	r1, r1, #8
100492c2:	430a      	orrs	r2, r1
100492c4:	7899      	ldrb	r1, [r3, #2]
100492c6:	0409      	lsls	r1, r1, #16
100492c8:	430a      	orrs	r2, r1
100492ca:	78db      	ldrb	r3, [r3, #3]
100492cc:	061b      	lsls	r3, r3, #24
100492ce:	4313      	orrs	r3, r2
100492d0:	001a      	movs	r2, r3
100492d2:	683b      	ldr	r3, [r7, #0]
100492d4:	601a      	str	r2, [r3, #0]
100492d6:	697b      	ldr	r3, [r7, #20]
100492d8:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
100492da:	693b      	ldr	r3, [r7, #16]
100492dc:	f383 8810 	msr	PRIMASK, r3
}
100492e0:	46c0      	nop			@ (mov r8, r8)

  __set_PRIMASK(primask_bit);     /**< Restore PRIMASK bit*/
}
100492e2:	46c0      	nop			@ (mov r8, r8)
100492e4:	46bd      	mov	sp, r7
100492e6:	b006      	add	sp, #24
100492e8:	bd80      	pop	{r7, pc}
	...

100492ec <LL_PWR_IsEnabledPUPDCfg>:
{
100492ec:	b580      	push	{r7, lr}
100492ee:	af00      	add	r7, sp, #0
  return ((READ_BIT(PWR->CR1, PWR_CR1_APC) == (PWR_CR1_APC)) ? 1UL : 0UL);
100492f0:	4b05      	ldr	r3, [pc, #20]	@ (10049308 <LL_PWR_IsEnabledPUPDCfg+0x1c>)
100492f2:	681b      	ldr	r3, [r3, #0]
100492f4:	2210      	movs	r2, #16
100492f6:	4013      	ands	r3, r2
100492f8:	2b10      	cmp	r3, #16
100492fa:	d101      	bne.n	10049300 <LL_PWR_IsEnabledPUPDCfg+0x14>
100492fc:	2301      	movs	r3, #1
100492fe:	e000      	b.n	10049302 <LL_PWR_IsEnabledPUPDCfg+0x16>
10049300:	2300      	movs	r3, #0
}
10049302:	0018      	movs	r0, r3
10049304:	46bd      	mov	sp, r7
10049306:	bd80      	pop	{r7, pc}
10049308:	48500000 	.word	0x48500000

1004930c <LL_PWR_EnableGPIOPullUp>:
  *         @arg @ref LL_PWR_GPIO_BIT_14
  *         @arg @ref LL_PWR_GPIO_BIT_15
  * @retval None
  */
__STATIC_INLINE void LL_PWR_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
{
1004930c:	b580      	push	{r7, lr}
1004930e:	b082      	sub	sp, #8
10049310:	af00      	add	r7, sp, #0
10049312:	6078      	str	r0, [r7, #4]
10049314:	6039      	str	r1, [r7, #0]
  CLEAR_BIT(*((__IO uint32_t *)(GPIO + 4UL)), GPIONumber);
10049316:	687b      	ldr	r3, [r7, #4]
10049318:	3304      	adds	r3, #4
1004931a:	681a      	ldr	r2, [r3, #0]
1004931c:	683b      	ldr	r3, [r7, #0]
1004931e:	43d9      	mvns	r1, r3
10049320:	687b      	ldr	r3, [r7, #4]
10049322:	3304      	adds	r3, #4
10049324:	400a      	ands	r2, r1
10049326:	601a      	str	r2, [r3, #0]
  SET_BIT(*((__IO uint32_t *)GPIO), GPIONumber);
10049328:	687b      	ldr	r3, [r7, #4]
1004932a:	6819      	ldr	r1, [r3, #0]
1004932c:	687b      	ldr	r3, [r7, #4]
1004932e:	683a      	ldr	r2, [r7, #0]
10049330:	430a      	orrs	r2, r1
10049332:	601a      	str	r2, [r3, #0]
}
10049334:	46c0      	nop			@ (mov r8, r8)
10049336:	46bd      	mov	sp, r7
10049338:	b002      	add	sp, #8
1004933a:	bd80      	pop	{r7, pc}

1004933c <LL_AHB1_GRP1_EnableClock>:
{
1004933c:	b580      	push	{r7, lr}
1004933e:	b084      	sub	sp, #16
10049340:	af00      	add	r7, sp, #0
10049342:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->AHBENR, Periphs);
10049344:	4b07      	ldr	r3, [pc, #28]	@ (10049364 <LL_AHB1_GRP1_EnableClock+0x28>)
10049346:	6d19      	ldr	r1, [r3, #80]	@ 0x50
10049348:	4b06      	ldr	r3, [pc, #24]	@ (10049364 <LL_AHB1_GRP1_EnableClock+0x28>)
1004934a:	687a      	ldr	r2, [r7, #4]
1004934c:	430a      	orrs	r2, r1
1004934e:	651a      	str	r2, [r3, #80]	@ 0x50
  tmpreg = READ_BIT(RCC->AHBENR, Periphs);
10049350:	4b04      	ldr	r3, [pc, #16]	@ (10049364 <LL_AHB1_GRP1_EnableClock+0x28>)
10049352:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
10049354:	687a      	ldr	r2, [r7, #4]
10049356:	4013      	ands	r3, r2
10049358:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
1004935a:	68fb      	ldr	r3, [r7, #12]
}
1004935c:	46c0      	nop			@ (mov r8, r8)
1004935e:	46bd      	mov	sp, r7
10049360:	b004      	add	sp, #16
10049362:	bd80      	pop	{r7, pc}
10049364:	48400000 	.word	0x48400000

10049368 <LL_APB0_GRP1_EnableClock>:
{
10049368:	b580      	push	{r7, lr}
1004936a:	b084      	sub	sp, #16
1004936c:	af00      	add	r7, sp, #0
1004936e:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB0ENR, Periphs);
10049370:	4b07      	ldr	r3, [pc, #28]	@ (10049390 <LL_APB0_GRP1_EnableClock+0x28>)
10049372:	6d59      	ldr	r1, [r3, #84]	@ 0x54
10049374:	4b06      	ldr	r3, [pc, #24]	@ (10049390 <LL_APB0_GRP1_EnableClock+0x28>)
10049376:	687a      	ldr	r2, [r7, #4]
10049378:	430a      	orrs	r2, r1
1004937a:	655a      	str	r2, [r3, #84]	@ 0x54
  tmpreg = READ_BIT(RCC->APB0ENR, Periphs);
1004937c:	4b04      	ldr	r3, [pc, #16]	@ (10049390 <LL_APB0_GRP1_EnableClock+0x28>)
1004937e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
10049380:	687a      	ldr	r2, [r7, #4]
10049382:	4013      	ands	r3, r2
10049384:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
10049386:	68fb      	ldr	r3, [r7, #12]
}
10049388:	46c0      	nop			@ (mov r8, r8)
1004938a:	46bd      	mov	sp, r7
1004938c:	b004      	add	sp, #16
1004938e:	bd80      	pop	{r7, pc}
10049390:	48400000 	.word	0x48400000

10049394 <LL_APB1_GRP1_EnableClock>:
{
10049394:	b580      	push	{r7, lr}
10049396:	b084      	sub	sp, #16
10049398:	af00      	add	r7, sp, #0
1004939a:	6078      	str	r0, [r7, #4]
  SET_BIT(RCC->APB1ENR, Periphs);
1004939c:	4b07      	ldr	r3, [pc, #28]	@ (100493bc <LL_APB1_GRP1_EnableClock+0x28>)
1004939e:	6d99      	ldr	r1, [r3, #88]	@ 0x58
100493a0:	4b06      	ldr	r3, [pc, #24]	@ (100493bc <LL_APB1_GRP1_EnableClock+0x28>)
100493a2:	687a      	ldr	r2, [r7, #4]
100493a4:	430a      	orrs	r2, r1
100493a6:	659a      	str	r2, [r3, #88]	@ 0x58
  tmpreg = READ_BIT(RCC->APB1ENR, Periphs);
100493a8:	4b04      	ldr	r3, [pc, #16]	@ (100493bc <LL_APB1_GRP1_EnableClock+0x28>)
100493aa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
100493ac:	687a      	ldr	r2, [r7, #4]
100493ae:	4013      	ands	r3, r2
100493b0:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
100493b2:	68fb      	ldr	r3, [r7, #12]
}
100493b4:	46c0      	nop			@ (mov r8, r8)
100493b6:	46bd      	mov	sp, r7
100493b8:	b004      	add	sp, #16
100493ba:	bd80      	pop	{r7, pc}
100493bc:	48400000 	.word	0x48400000

100493c0 <BSP_LED_Init>:
  *     @arg  LD2
  *     @arg  LD3
  * @retval BSP error code.
  */
int32_t BSP_LED_Init(Led_TypeDef Led)
{
100493c0:	b590      	push	{r4, r7, lr}
100493c2:	b089      	sub	sp, #36	@ 0x24
100493c4:	af00      	add	r7, sp, #0
100493c6:	0002      	movs	r2, r0
100493c8:	1dfb      	adds	r3, r7, #7
100493ca:	701a      	strb	r2, [r3, #0]
  GPIO_InitTypeDef GPIO_Init;

  /* Enable the GPIO_LED Clock */
  if (Led == LD1)
100493cc:	1dfb      	adds	r3, r7, #7
100493ce:	781b      	ldrb	r3, [r3, #0]
100493d0:	2b00      	cmp	r3, #0
100493d2:	d103      	bne.n	100493dc <BSP_LED_Init+0x1c>
  {
    LD1_GPIO_CLK_ENABLE();
100493d4:	2008      	movs	r0, #8
100493d6:	f7ff ffb1 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
100493da:	e00a      	b.n	100493f2 <BSP_LED_Init+0x32>
  }
  else if (Led == LD2)
100493dc:	1dfb      	adds	r3, r7, #7
100493de:	781b      	ldrb	r3, [r3, #0]
100493e0:	2b01      	cmp	r3, #1
100493e2:	d103      	bne.n	100493ec <BSP_LED_Init+0x2c>
  {
    LD2_GPIO_CLK_ENABLE();
100493e4:	2008      	movs	r0, #8
100493e6:	f7ff ffa9 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
100493ea:	e002      	b.n	100493f2 <BSP_LED_Init+0x32>
  }
  else /* Led = LD3 */
  {
    LD3_GPIO_CLK_ENABLE();
100493ec:	2008      	movs	r0, #8
100493ee:	f7ff ffa5 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
  }

  /* configure the GPIO_LED pin */
  GPIO_Init.Pin   = LED_PIN[Led];
100493f2:	1dfb      	adds	r3, r7, #7
100493f4:	781a      	ldrb	r2, [r3, #0]
100493f6:	4b28      	ldr	r3, [pc, #160]	@ (10049498 <BSP_LED_Init+0xd8>)
100493f8:	0052      	lsls	r2, r2, #1
100493fa:	5ad3      	ldrh	r3, [r2, r3]
100493fc:	001a      	movs	r2, r3
100493fe:	240c      	movs	r4, #12
10049400:	193b      	adds	r3, r7, r4
10049402:	601a      	str	r2, [r3, #0]
  GPIO_Init.Mode  = GPIO_MODE_OUTPUT_PP;
10049404:	193b      	adds	r3, r7, r4
10049406:	2201      	movs	r2, #1
10049408:	605a      	str	r2, [r3, #4]
  GPIO_Init.Pull  = GPIO_PULLUP;
1004940a:	193b      	adds	r3, r7, r4
1004940c:	2201      	movs	r2, #1
1004940e:	609a      	str	r2, [r3, #8]
  GPIO_Init.Speed = GPIO_SPEED_FREQ_HIGH;
10049410:	193b      	adds	r3, r7, r4
10049412:	2202      	movs	r2, #2
10049414:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(LED_PORT[Led], &GPIO_Init);
10049416:	1dfb      	adds	r3, r7, #7
10049418:	781a      	ldrb	r2, [r3, #0]
1004941a:	4b20      	ldr	r3, [pc, #128]	@ (1004949c <BSP_LED_Init+0xdc>)
1004941c:	0092      	lsls	r2, r2, #2
1004941e:	58d3      	ldr	r3, [r2, r3]
10049420:	193a      	adds	r2, r7, r4
10049422:	0011      	movs	r1, r2
10049424:	0018      	movs	r0, r3
10049426:	f000 fe4b 	bl	1004a0c0 <HAL_GPIO_Init>

  if( LL_PWR_IsEnabledPUPDCfg() != 0)
1004942a:	f7ff ff5f 	bl	100492ec <LL_PWR_IsEnabledPUPDCfg>
1004942e:	1e03      	subs	r3, r0, #0
10049430:	d01f      	beq.n	10049472 <BSP_LED_Init+0xb2>
  {
    if (LED_PORT[Led] == GPIOA)
10049432:	1dfb      	adds	r3, r7, #7
10049434:	781a      	ldrb	r2, [r3, #0]
10049436:	4b19      	ldr	r3, [pc, #100]	@ (1004949c <BSP_LED_Init+0xdc>)
10049438:	0092      	lsls	r2, r2, #2
1004943a:	58d2      	ldr	r2, [r2, r3]
1004943c:	2390      	movs	r3, #144	@ 0x90
1004943e:	05db      	lsls	r3, r3, #23
10049440:	429a      	cmp	r2, r3
10049442:	d106      	bne.n	10049452 <BSP_LED_Init+0x92>
    {
      LL_PWR_EnableGPIOPullUp( LL_PWR_GPIO_A, GPIO_Init.Pin);
10049444:	193b      	adds	r3, r7, r4
10049446:	681b      	ldr	r3, [r3, #0]
10049448:	4a15      	ldr	r2, [pc, #84]	@ (100494a0 <BSP_LED_Init+0xe0>)
1004944a:	0019      	movs	r1, r3
1004944c:	0010      	movs	r0, r2
1004944e:	f7ff ff5d 	bl	1004930c <LL_PWR_EnableGPIOPullUp>
    }
     if (LED_PORT[Led] == GPIOB)
10049452:	1dfb      	adds	r3, r7, #7
10049454:	781a      	ldrb	r2, [r3, #0]
10049456:	4b11      	ldr	r3, [pc, #68]	@ (1004949c <BSP_LED_Init+0xdc>)
10049458:	0092      	lsls	r2, r2, #2
1004945a:	58d3      	ldr	r3, [r2, r3]
1004945c:	4a11      	ldr	r2, [pc, #68]	@ (100494a4 <BSP_LED_Init+0xe4>)
1004945e:	4293      	cmp	r3, r2
10049460:	d107      	bne.n	10049472 <BSP_LED_Init+0xb2>
    {
      LL_PWR_EnableGPIOPullUp( LL_PWR_GPIO_B, GPIO_Init.Pin);
10049462:	230c      	movs	r3, #12
10049464:	18fb      	adds	r3, r7, r3
10049466:	681b      	ldr	r3, [r3, #0]
10049468:	4a0f      	ldr	r2, [pc, #60]	@ (100494a8 <BSP_LED_Init+0xe8>)
1004946a:	0019      	movs	r1, r3
1004946c:	0010      	movs	r0, r2
1004946e:	f7ff ff4d 	bl	1004930c <LL_PWR_EnableGPIOPullUp>
    }
  }

  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_SET);
10049472:	1dfb      	adds	r3, r7, #7
10049474:	781a      	ldrb	r2, [r3, #0]
10049476:	4b09      	ldr	r3, [pc, #36]	@ (1004949c <BSP_LED_Init+0xdc>)
10049478:	0092      	lsls	r2, r2, #2
1004947a:	58d0      	ldr	r0, [r2, r3]
1004947c:	1dfb      	adds	r3, r7, #7
1004947e:	781a      	ldrb	r2, [r3, #0]
10049480:	4b05      	ldr	r3, [pc, #20]	@ (10049498 <BSP_LED_Init+0xd8>)
10049482:	0052      	lsls	r2, r2, #1
10049484:	5ad3      	ldrh	r3, [r2, r3]
10049486:	2201      	movs	r2, #1
10049488:	0019      	movs	r1, r3
1004948a:	f000 ffdf 	bl	1004a44c <HAL_GPIO_WritePin>

  return BSP_ERROR_NONE;
1004948e:	2300      	movs	r3, #0
}
10049490:	0018      	movs	r0, r3
10049492:	46bd      	mov	sp, r7
10049494:	b009      	add	sp, #36	@ 0x24
10049496:	bd90      	pop	{r4, r7, pc}
10049498:	20000b90 	.word	0x20000b90
1004949c:	20000b98 	.word	0x20000b98
100494a0:	48500020 	.word	0x48500020
100494a4:	48100000 	.word	0x48100000
100494a8:	48500028 	.word	0x48500028

100494ac <BSP_LED_On>:
  *     @arg  LD2
  *     @arg  LD3
  * @retval BSP error code.
  */
int32_t BSP_LED_On(Led_TypeDef Led)
{
100494ac:	b580      	push	{r7, lr}
100494ae:	b082      	sub	sp, #8
100494b0:	af00      	add	r7, sp, #0
100494b2:	0002      	movs	r2, r0
100494b4:	1dfb      	adds	r3, r7, #7
100494b6:	701a      	strb	r2, [r3, #0]
  HAL_GPIO_WritePin(LED_PORT[Led], LED_PIN[Led], GPIO_PIN_RESET);
100494b8:	1dfb      	adds	r3, r7, #7
100494ba:	781a      	ldrb	r2, [r3, #0]
100494bc:	4b08      	ldr	r3, [pc, #32]	@ (100494e0 <BSP_LED_On+0x34>)
100494be:	0092      	lsls	r2, r2, #2
100494c0:	58d0      	ldr	r0, [r2, r3]
100494c2:	1dfb      	adds	r3, r7, #7
100494c4:	781a      	ldrb	r2, [r3, #0]
100494c6:	4b07      	ldr	r3, [pc, #28]	@ (100494e4 <BSP_LED_On+0x38>)
100494c8:	0052      	lsls	r2, r2, #1
100494ca:	5ad3      	ldrh	r3, [r2, r3]
100494cc:	2200      	movs	r2, #0
100494ce:	0019      	movs	r1, r3
100494d0:	f000 ffbc 	bl	1004a44c <HAL_GPIO_WritePin>

  return BSP_ERROR_NONE;
100494d4:	2300      	movs	r3, #0
}
100494d6:	0018      	movs	r0, r3
100494d8:	46bd      	mov	sp, r7
100494da:	b002      	add	sp, #8
100494dc:	bd80      	pop	{r7, pc}
100494de:	46c0      	nop			@ (mov r8, r8)
100494e0:	20000b98 	.word	0x20000b98
100494e4:	20000b90 	.word	0x20000b90

100494e8 <BSP_PB_Init>:
  *     @arg BUTTON_MODE_EXTI: Button will be connected to EXTI line with interrupt
  *                            generation capability
  * @retval BSP error code.
  */
int32_t BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef ButtonMode)
{
100494e8:	b580      	push	{r7, lr}
100494ea:	b088      	sub	sp, #32
100494ec:	af00      	add	r7, sp, #0
100494ee:	0002      	movs	r2, r0
100494f0:	1dfb      	adds	r3, r7, #7
100494f2:	701a      	strb	r2, [r3, #0]
100494f4:	1dbb      	adds	r3, r7, #6
100494f6:	1c0a      	adds	r2, r1, #0
100494f8:	701a      	strb	r2, [r3, #0]
  int32_t               status = BSP_ERROR_NONE;
100494fa:	2300      	movs	r3, #0
100494fc:	61fb      	str	r3, [r7, #28]
  GPIO_InitTypeDef      GPIO_Init;

  /* Enable the BUTTON clock */
  if (Button == B1)
100494fe:	1dfb      	adds	r3, r7, #7
10049500:	781b      	ldrb	r3, [r3, #0]
10049502:	2b00      	cmp	r3, #0
10049504:	d103      	bne.n	1004950e <BSP_PB_Init+0x26>
  {
    B1_GPIO_CLK_ENABLE();
10049506:	2004      	movs	r0, #4
10049508:	f7ff ff18 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
1004950c:	e00a      	b.n	10049524 <BSP_PB_Init+0x3c>
  }
  else if (Button == B2)
1004950e:	1dfb      	adds	r3, r7, #7
10049510:	781b      	ldrb	r3, [r3, #0]
10049512:	2b01      	cmp	r3, #1
10049514:	d103      	bne.n	1004951e <BSP_PB_Init+0x36>
  {
    B2_GPIO_CLK_ENABLE();
10049516:	2008      	movs	r0, #8
10049518:	f7ff ff10 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
1004951c:	e002      	b.n	10049524 <BSP_PB_Init+0x3c>
  }
  else /* B3 */
  {
    B3_GPIO_CLK_ENABLE();
1004951e:	2008      	movs	r0, #8
10049520:	f7ff ff0c 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
  }

  GPIO_Init.Pin   = BUTTON_PIN[Button];
10049524:	1dfb      	adds	r3, r7, #7
10049526:	781a      	ldrb	r2, [r3, #0]
10049528:	4b37      	ldr	r3, [pc, #220]	@ (10049608 <BSP_PB_Init+0x120>)
1004952a:	0052      	lsls	r2, r2, #1
1004952c:	5ad3      	ldrh	r3, [r2, r3]
1004952e:	001a      	movs	r2, r3
10049530:	2108      	movs	r1, #8
10049532:	187b      	adds	r3, r7, r1
10049534:	601a      	str	r2, [r3, #0]
  GPIO_Init.Pull  = GPIO_PULLUP;
10049536:	187b      	adds	r3, r7, r1
10049538:	2201      	movs	r2, #1
1004953a:	609a      	str	r2, [r3, #8]
  GPIO_Init.Speed = GPIO_SPEED_FREQ_HIGH;
1004953c:	187b      	adds	r3, r7, r1
1004953e:	2202      	movs	r2, #2
10049540:	60da      	str	r2, [r3, #12]

  if (ButtonMode == BUTTON_MODE_GPIO)
10049542:	1dbb      	adds	r3, r7, #6
10049544:	781b      	ldrb	r3, [r3, #0]
10049546:	2b00      	cmp	r3, #0
10049548:	d10c      	bne.n	10049564 <BSP_PB_Init+0x7c>
  {
    /* Configure Button pin as input */
    GPIO_Init.Mode = GPIO_MODE_INPUT;
1004954a:	187b      	adds	r3, r7, r1
1004954c:	2200      	movs	r2, #0
1004954e:	605a      	str	r2, [r3, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_Init);
10049550:	1dfb      	adds	r3, r7, #7
10049552:	781a      	ldrb	r2, [r3, #0]
10049554:	4b2d      	ldr	r3, [pc, #180]	@ (1004960c <BSP_PB_Init+0x124>)
10049556:	0092      	lsls	r2, r2, #2
10049558:	58d3      	ldr	r3, [r2, r3]
1004955a:	187a      	adds	r2, r7, r1
1004955c:	0011      	movs	r1, r2
1004955e:	0018      	movs	r0, r3
10049560:	f000 fdae 	bl	1004a0c0 <HAL_GPIO_Init>
  }

  if (ButtonMode == BUTTON_MODE_EXTI)
10049564:	1dbb      	adds	r3, r7, #6
10049566:	781b      	ldrb	r3, [r3, #0]
10049568:	2b01      	cmp	r3, #1
1004956a:	d123      	bne.n	100495b4 <BSP_PB_Init+0xcc>
  {
    __HAL_RCC_SYSCFG_CLK_ENABLE();
1004956c:	2380      	movs	r3, #128	@ 0x80
1004956e:	005b      	lsls	r3, r3, #1
10049570:	0018      	movs	r0, r3
10049572:	f7ff fef9 	bl	10049368 <LL_APB0_GRP1_EnableClock>

    /* Configure Button pin as input with External interrupt */
    GPIO_Init.Mode = GPIO_MODE_IT_FALLING;
10049576:	2108      	movs	r1, #8
10049578:	187b      	adds	r3, r7, r1
1004957a:	2280      	movs	r2, #128	@ 0x80
1004957c:	0252      	lsls	r2, r2, #9
1004957e:	605a      	str	r2, [r3, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &GPIO_Init);
10049580:	1dfb      	adds	r3, r7, #7
10049582:	781a      	ldrb	r2, [r3, #0]
10049584:	4b21      	ldr	r3, [pc, #132]	@ (1004960c <BSP_PB_Init+0x124>)
10049586:	0092      	lsls	r2, r2, #2
10049588:	58d3      	ldr	r3, [r2, r3]
1004958a:	187a      	adds	r2, r7, r1
1004958c:	0011      	movs	r1, r2
1004958e:	0018      	movs	r0, r3
10049590:	f000 fd96 	bl	1004a0c0 <HAL_GPIO_Init>

    /* Enable and set Button EXTI Interrupt to the lowest priority */
    HAL_NVIC_SetPriority(BUTTON_IRQn[Button], NVIC_LOW_PRIORITY, 0);
10049594:	1dfb      	adds	r3, r7, #7
10049596:	781b      	ldrb	r3, [r3, #0]
10049598:	4a1d      	ldr	r2, [pc, #116]	@ (10049610 <BSP_PB_Init+0x128>)
1004959a:	56d3      	ldrsb	r3, [r2, r3]
1004959c:	2200      	movs	r2, #0
1004959e:	2103      	movs	r1, #3
100495a0:	0018      	movs	r0, r3
100495a2:	f000 fbfd 	bl	10049da0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(BUTTON_IRQn[Button]);
100495a6:	1dfb      	adds	r3, r7, #7
100495a8:	781b      	ldrb	r3, [r3, #0]
100495aa:	4a19      	ldr	r2, [pc, #100]	@ (10049610 <BSP_PB_Init+0x128>)
100495ac:	56d3      	ldrsb	r3, [r2, r3]
100495ae:	0018      	movs	r0, r3
100495b0:	f000 fc0b 	bl	10049dca <HAL_NVIC_EnableIRQ>

  }
  if( LL_PWR_IsEnabledPUPDCfg() != 0)
100495b4:	f7ff fe9a 	bl	100492ec <LL_PWR_IsEnabledPUPDCfg>
100495b8:	1e03      	subs	r3, r0, #0
100495ba:	d020      	beq.n	100495fe <BSP_PB_Init+0x116>
  {
    if (BUTTON_PORT[Button] == GPIOA)
100495bc:	1dfb      	adds	r3, r7, #7
100495be:	781a      	ldrb	r2, [r3, #0]
100495c0:	4b12      	ldr	r3, [pc, #72]	@ (1004960c <BSP_PB_Init+0x124>)
100495c2:	0092      	lsls	r2, r2, #2
100495c4:	58d2      	ldr	r2, [r2, r3]
100495c6:	2390      	movs	r3, #144	@ 0x90
100495c8:	05db      	lsls	r3, r3, #23
100495ca:	429a      	cmp	r2, r3
100495cc:	d107      	bne.n	100495de <BSP_PB_Init+0xf6>
    {
      LL_PWR_EnableGPIOPullUp( LL_PWR_GPIO_A, GPIO_Init.Pin);
100495ce:	2308      	movs	r3, #8
100495d0:	18fb      	adds	r3, r7, r3
100495d2:	681b      	ldr	r3, [r3, #0]
100495d4:	4a0f      	ldr	r2, [pc, #60]	@ (10049614 <BSP_PB_Init+0x12c>)
100495d6:	0019      	movs	r1, r3
100495d8:	0010      	movs	r0, r2
100495da:	f7ff fe97 	bl	1004930c <LL_PWR_EnableGPIOPullUp>
    }
     if (BUTTON_PORT[Button] == GPIOB)
100495de:	1dfb      	adds	r3, r7, #7
100495e0:	781a      	ldrb	r2, [r3, #0]
100495e2:	4b0a      	ldr	r3, [pc, #40]	@ (1004960c <BSP_PB_Init+0x124>)
100495e4:	0092      	lsls	r2, r2, #2
100495e6:	58d3      	ldr	r3, [r2, r3]
100495e8:	4a0b      	ldr	r2, [pc, #44]	@ (10049618 <BSP_PB_Init+0x130>)
100495ea:	4293      	cmp	r3, r2
100495ec:	d107      	bne.n	100495fe <BSP_PB_Init+0x116>
    {
      LL_PWR_EnableGPIOPullUp( LL_PWR_GPIO_B, GPIO_Init.Pin);
100495ee:	2308      	movs	r3, #8
100495f0:	18fb      	adds	r3, r7, r3
100495f2:	681b      	ldr	r3, [r3, #0]
100495f4:	4a09      	ldr	r2, [pc, #36]	@ (1004961c <BSP_PB_Init+0x134>)
100495f6:	0019      	movs	r1, r3
100495f8:	0010      	movs	r0, r2
100495fa:	f7ff fe87 	bl	1004930c <LL_PWR_EnableGPIOPullUp>
    }
  }
  return status;
100495fe:	69fb      	ldr	r3, [r7, #28]
}
10049600:	0018      	movs	r0, r3
10049602:	46bd      	mov	sp, r7
10049604:	b008      	add	sp, #32
10049606:	bd80      	pop	{r7, pc}
10049608:	20000ba4 	.word	0x20000ba4
1004960c:	20000bac 	.word	0x20000bac
10049610:	20000bb8 	.word	0x20000bb8
10049614:	48500020 	.word	0x48500020
10049618:	48100000 	.word	0x48100000
1004961c:	48500028 	.word	0x48500028

10049620 <BSP_PB_GetState>:
  *     @arg B2
  *     @arg B3
  * @retval 0 means released, 1 means pressed.
  */
int32_t BSP_PB_GetState(Button_TypeDef Button)
{
10049620:	b580      	push	{r7, lr}
10049622:	b084      	sub	sp, #16
10049624:	af00      	add	r7, sp, #0
10049626:	0002      	movs	r2, r0
10049628:	1dfb      	adds	r3, r7, #7
1004962a:	701a      	strb	r2, [r3, #0]
  int32_t status;

  status = (HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]) == GPIO_PIN_RESET) ? 1 : 0;
1004962c:	1dfb      	adds	r3, r7, #7
1004962e:	781a      	ldrb	r2, [r3, #0]
10049630:	4b0a      	ldr	r3, [pc, #40]	@ (1004965c <BSP_PB_GetState+0x3c>)
10049632:	0092      	lsls	r2, r2, #2
10049634:	58d0      	ldr	r0, [r2, r3]
10049636:	1dfb      	adds	r3, r7, #7
10049638:	781a      	ldrb	r2, [r3, #0]
1004963a:	4b09      	ldr	r3, [pc, #36]	@ (10049660 <BSP_PB_GetState+0x40>)
1004963c:	0052      	lsls	r2, r2, #1
1004963e:	5ad3      	ldrh	r3, [r2, r3]
10049640:	0019      	movs	r1, r3
10049642:	f000 fee6 	bl	1004a412 <HAL_GPIO_ReadPin>
10049646:	0003      	movs	r3, r0
10049648:	425a      	negs	r2, r3
1004964a:	4153      	adcs	r3, r2
1004964c:	b2db      	uxtb	r3, r3
1004964e:	60fb      	str	r3, [r7, #12]

  return status;
10049650:	68fb      	ldr	r3, [r7, #12]
}
10049652:	0018      	movs	r0, r3
10049654:	46bd      	mov	sp, r7
10049656:	b004      	add	sp, #16
10049658:	bd80      	pop	{r7, pc}
1004965a:	46c0      	nop			@ (mov r8, r8)
1004965c:	20000bac 	.word	0x20000bac
10049660:	20000ba4 	.word	0x20000ba4

10049664 <BSP_COM_Init>:
  * @param  COM_Init Pointer to a COM_InitTypeDef structure that contains the
  *                  configuration information for the specified COM peripheral.
  * @retval BSP error code.
  */
int32_t BSP_COM_Init(COM_TypeDef COM, COM_InitTypeDef *COM_Init)
{
10049664:	b580      	push	{r7, lr}
10049666:	b084      	sub	sp, #16
10049668:	af00      	add	r7, sp, #0
1004966a:	0002      	movs	r2, r0
1004966c:	6039      	str	r1, [r7, #0]
1004966e:	1dfb      	adds	r3, r7, #7
10049670:	701a      	strb	r2, [r3, #0]
  int32_t status = BSP_ERROR_NONE;
10049672:	2300      	movs	r3, #0
10049674:	60fb      	str	r3, [r7, #12]

  if (COM_Init == NULL)
10049676:	683b      	ldr	r3, [r7, #0]
10049678:	2b00      	cmp	r3, #0
1004967a:	d103      	bne.n	10049684 <BSP_COM_Init+0x20>
  {
    status = BSP_ERROR_WRONG_PARAM;
1004967c:	2302      	movs	r3, #2
1004967e:	425b      	negs	r3, r3
10049680:	60fb      	str	r3, [r7, #12]
10049682:	e026      	b.n	100496d2 <BSP_COM_Init+0x6e>
  }
  else
  {
    /* Initialize COM instance */
    hcom_uart[COM].Instance = COM_UART[COM];
10049684:	1dfb      	adds	r3, r7, #7
10049686:	7819      	ldrb	r1, [r3, #0]
10049688:	1dfb      	adds	r3, r7, #7
1004968a:	781a      	ldrb	r2, [r3, #0]
1004968c:	4b13      	ldr	r3, [pc, #76]	@ (100496dc <BSP_COM_Init+0x78>)
1004968e:	0089      	lsls	r1, r1, #2
10049690:	58c9      	ldr	r1, [r1, r3]
10049692:	4b13      	ldr	r3, [pc, #76]	@ (100496e0 <BSP_COM_Init+0x7c>)
10049694:	2094      	movs	r0, #148	@ 0x94
10049696:	4342      	muls	r2, r0
10049698:	50d1      	str	r1, [r2, r3]

#if (USE_HAL_UART_REGISTER_CALLBACKS == 0)
    UART_MspInit(&hcom_uart[COM]);
1004969a:	1dfb      	adds	r3, r7, #7
1004969c:	781b      	ldrb	r3, [r3, #0]
1004969e:	2294      	movs	r2, #148	@ 0x94
100496a0:	435a      	muls	r2, r3
100496a2:	4b0f      	ldr	r3, [pc, #60]	@ (100496e0 <BSP_COM_Init+0x7c>)
100496a4:	18d3      	adds	r3, r2, r3
100496a6:	0018      	movs	r0, r3
100496a8:	f000 f836 	bl	10049718 <UART_MspInit>
        status = BSP_ERROR_MSP_FAILURE;
      }
    }
#endif

    if (status == BSP_ERROR_NONE)
100496ac:	68fb      	ldr	r3, [r7, #12]
100496ae:	2b00      	cmp	r3, #0
100496b0:	d10f      	bne.n	100496d2 <BSP_COM_Init+0x6e>
    {
      if (MX_USART1_Init(&hcom_uart[COM], COM_Init) != HAL_OK)
100496b2:	1dfb      	adds	r3, r7, #7
100496b4:	781b      	ldrb	r3, [r3, #0]
100496b6:	2294      	movs	r2, #148	@ 0x94
100496b8:	435a      	muls	r2, r3
100496ba:	4b09      	ldr	r3, [pc, #36]	@ (100496e0 <BSP_COM_Init+0x7c>)
100496bc:	18d3      	adds	r3, r2, r3
100496be:	683a      	ldr	r2, [r7, #0]
100496c0:	0011      	movs	r1, r2
100496c2:	0018      	movs	r0, r3
100496c4:	f7f8 fa70 	bl	10041ba8 <MX_USART1_Init>
100496c8:	1e03      	subs	r3, r0, #0
100496ca:	d002      	beq.n	100496d2 <BSP_COM_Init+0x6e>
      {
        status = BSP_ERROR_PERIPH_FAILURE;
100496cc:	2304      	movs	r3, #4
100496ce:	425b      	negs	r3, r3
100496d0:	60fb      	str	r3, [r7, #12]
      }
    }
  }

  return status;
100496d2:	68fb      	ldr	r3, [r7, #12]
}
100496d4:	0018      	movs	r0, r3
100496d6:	46bd      	mov	sp, r7
100496d8:	b004      	add	sp, #16
100496da:	bd80      	pop	{r7, pc}
100496dc:	20000bbc 	.word	0x20000bbc
100496e0:	20000608 	.word	0x20000608

100496e4 <__io_putchar>:
  return 1;
}

#elif defined(__GNUC__)
int __io_putchar(int ch)
{
100496e4:	b580      	push	{r7, lr}
100496e6:	b082      	sub	sp, #8
100496e8:	af00      	add	r7, sp, #0
100496ea:	6078      	str	r0, [r7, #4]
  (void) HAL_UART_Transmit(&hcom_uart[COM_ActiveLogPort], (uint8_t *) &ch, 1, COM_POLL_TIMEOUT);
100496ec:	4b08      	ldr	r3, [pc, #32]	@ (10049710 <__io_putchar+0x2c>)
100496ee:	781b      	ldrb	r3, [r3, #0]
100496f0:	001a      	movs	r2, r3
100496f2:	2394      	movs	r3, #148	@ 0x94
100496f4:	435a      	muls	r2, r3
100496f6:	4b07      	ldr	r3, [pc, #28]	@ (10049714 <__io_putchar+0x30>)
100496f8:	18d0      	adds	r0, r2, r3
100496fa:	23fa      	movs	r3, #250	@ 0xfa
100496fc:	009b      	lsls	r3, r3, #2
100496fe:	1d39      	adds	r1, r7, #4
10049700:	2201      	movs	r2, #1
10049702:	f003 ff05 	bl	1004d510 <HAL_UART_Transmit>
  return ch;
10049706:	687b      	ldr	r3, [r7, #4]
}
10049708:	0018      	movs	r0, r3
1004970a:	46bd      	mov	sp, r7
1004970c:	b002      	add	sp, #8
1004970e:	bd80      	pop	{r7, pc}
10049710:	2000069c 	.word	0x2000069c
10049714:	20000608 	.word	0x20000608

10049718 <UART_MspInit>:
  * @brief  Initialize UART MSP.
  * @param  huart UART handle.
  * @retval None.
  */
static void UART_MspInit(UART_HandleTypeDef *huart)
{
10049718:	b590      	push	{r4, r7, lr}
1004971a:	b089      	sub	sp, #36	@ 0x24
1004971c:	af00      	add	r7, sp, #0
1004971e:	6078      	str	r0, [r7, #4]

  /* Prevent unused argument(s) compilation warning */
  UNUSED(huart);

  /* Enable COM and GPIO clocks */
  COM1_TX_GPIO_CLK_ENABLE();
10049720:	2004      	movs	r0, #4
10049722:	f7ff fe0b 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
  COM1_RX_GPIO_CLK_ENABLE();
10049726:	2008      	movs	r0, #8
10049728:	f7ff fe08 	bl	1004933c <LL_AHB1_GRP1_EnableClock>
  COM1_CLK_ENABLE();
1004972c:	2380      	movs	r3, #128	@ 0x80
1004972e:	00db      	lsls	r3, r3, #3
10049730:	0018      	movs	r0, r3
10049732:	f7ff fe2f 	bl	10049394 <LL_APB1_GRP1_EnableClock>

  /* Configure COM Tx as alternate function */
  GPIO_Init.Pin       = COM1_TX_PIN;
10049736:	240c      	movs	r4, #12
10049738:	193b      	adds	r3, r7, r4
1004973a:	2202      	movs	r2, #2
1004973c:	601a      	str	r2, [r3, #0]
  GPIO_Init.Mode      = GPIO_MODE_AF_PP;
1004973e:	193b      	adds	r3, r7, r4
10049740:	2202      	movs	r2, #2
10049742:	605a      	str	r2, [r3, #4]
  GPIO_Init.Speed     = GPIO_SPEED_FREQ_HIGH;
10049744:	193b      	adds	r3, r7, r4
10049746:	2202      	movs	r2, #2
10049748:	60da      	str	r2, [r3, #12]
  GPIO_Init.Pull      = GPIO_PULLUP;
1004974a:	193b      	adds	r3, r7, r4
1004974c:	2201      	movs	r2, #1
1004974e:	609a      	str	r2, [r3, #8]
  GPIO_Init.Alternate = COM1_TX_AF;
10049750:	193b      	adds	r3, r7, r4
10049752:	2202      	movs	r2, #2
10049754:	611a      	str	r2, [r3, #16]
  HAL_GPIO_Init(COM1_TX_GPIO_PORT, &GPIO_Init);
10049756:	193a      	adds	r2, r7, r4
10049758:	2390      	movs	r3, #144	@ 0x90
1004975a:	05db      	lsls	r3, r3, #23
1004975c:	0011      	movs	r1, r2
1004975e:	0018      	movs	r0, r3
10049760:	f000 fcae 	bl	1004a0c0 <HAL_GPIO_Init>
  if( LL_PWR_IsEnabledPUPDCfg() != 0)
10049764:	f7ff fdc2 	bl	100492ec <LL_PWR_IsEnabledPUPDCfg>
10049768:	1e03      	subs	r3, r0, #0
1004976a:	d006      	beq.n	1004977a <UART_MspInit+0x62>
  {
    LL_PWR_EnableGPIOPullUp( LL_PWR_GPIO_A, GPIO_Init.Pin);
1004976c:	193b      	adds	r3, r7, r4
1004976e:	681b      	ldr	r3, [r3, #0]
10049770:	4a0a      	ldr	r2, [pc, #40]	@ (1004979c <UART_MspInit+0x84>)
10049772:	0019      	movs	r1, r3
10049774:	0010      	movs	r0, r2
10049776:	f7ff fdc9 	bl	1004930c <LL_PWR_EnableGPIOPullUp>
  }
  /* Configure COM Rx as alternate function */
  GPIO_Init.Pin       = COM1_RX_PIN;
1004977a:	210c      	movs	r1, #12
1004977c:	187b      	adds	r3, r7, r1
1004977e:	2201      	movs	r2, #1
10049780:	601a      	str	r2, [r3, #0]
  GPIO_Init.Alternate = COM1_RX_AF;
10049782:	187b      	adds	r3, r7, r1
10049784:	2200      	movs	r2, #0
10049786:	611a      	str	r2, [r3, #16]
  HAL_GPIO_Init(COM1_RX_GPIO_PORT, &GPIO_Init);
10049788:	187b      	adds	r3, r7, r1
1004978a:	4a05      	ldr	r2, [pc, #20]	@ (100497a0 <UART_MspInit+0x88>)
1004978c:	0019      	movs	r1, r3
1004978e:	0010      	movs	r0, r2
10049790:	f000 fc96 	bl	1004a0c0 <HAL_GPIO_Init>
}
10049794:	46c0      	nop			@ (mov r8, r8)
10049796:	46bd      	mov	sp, r7
10049798:	b009      	add	sp, #36	@ 0x24
1004979a:	bd90      	pop	{r4, r7, pc}
1004979c:	48500020 	.word	0x48500020
100497a0:	48100000 	.word	0x48100000

100497a4 <__NVIC_SetPriority>:
{
100497a4:	b590      	push	{r4, r7, lr}
100497a6:	b083      	sub	sp, #12
100497a8:	af00      	add	r7, sp, #0
100497aa:	0002      	movs	r2, r0
100497ac:	6039      	str	r1, [r7, #0]
100497ae:	1dfb      	adds	r3, r7, #7
100497b0:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
100497b2:	1dfb      	adds	r3, r7, #7
100497b4:	781b      	ldrb	r3, [r3, #0]
100497b6:	2b7f      	cmp	r3, #127	@ 0x7f
100497b8:	d828      	bhi.n	1004980c <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
100497ba:	4a2f      	ldr	r2, [pc, #188]	@ (10049878 <__NVIC_SetPriority+0xd4>)
100497bc:	1dfb      	adds	r3, r7, #7
100497be:	781b      	ldrb	r3, [r3, #0]
100497c0:	b25b      	sxtb	r3, r3
100497c2:	089b      	lsrs	r3, r3, #2
100497c4:	33c0      	adds	r3, #192	@ 0xc0
100497c6:	009b      	lsls	r3, r3, #2
100497c8:	589b      	ldr	r3, [r3, r2]
100497ca:	1dfa      	adds	r2, r7, #7
100497cc:	7812      	ldrb	r2, [r2, #0]
100497ce:	0011      	movs	r1, r2
100497d0:	2203      	movs	r2, #3
100497d2:	400a      	ands	r2, r1
100497d4:	00d2      	lsls	r2, r2, #3
100497d6:	21ff      	movs	r1, #255	@ 0xff
100497d8:	4091      	lsls	r1, r2
100497da:	000a      	movs	r2, r1
100497dc:	43d2      	mvns	r2, r2
100497de:	401a      	ands	r2, r3
100497e0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
100497e2:	683b      	ldr	r3, [r7, #0]
100497e4:	019b      	lsls	r3, r3, #6
100497e6:	22ff      	movs	r2, #255	@ 0xff
100497e8:	401a      	ands	r2, r3
100497ea:	1dfb      	adds	r3, r7, #7
100497ec:	781b      	ldrb	r3, [r3, #0]
100497ee:	0018      	movs	r0, r3
100497f0:	2303      	movs	r3, #3
100497f2:	4003      	ands	r3, r0
100497f4:	00db      	lsls	r3, r3, #3
100497f6:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
100497f8:	481f      	ldr	r0, [pc, #124]	@ (10049878 <__NVIC_SetPriority+0xd4>)
100497fa:	1dfb      	adds	r3, r7, #7
100497fc:	781b      	ldrb	r3, [r3, #0]
100497fe:	b25b      	sxtb	r3, r3
10049800:	089b      	lsrs	r3, r3, #2
10049802:	430a      	orrs	r2, r1
10049804:	33c0      	adds	r3, #192	@ 0xc0
10049806:	009b      	lsls	r3, r3, #2
10049808:	501a      	str	r2, [r3, r0]
}
1004980a:	e031      	b.n	10049870 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
1004980c:	4a1b      	ldr	r2, [pc, #108]	@ (1004987c <__NVIC_SetPriority+0xd8>)
1004980e:	1dfb      	adds	r3, r7, #7
10049810:	781b      	ldrb	r3, [r3, #0]
10049812:	0019      	movs	r1, r3
10049814:	230f      	movs	r3, #15
10049816:	400b      	ands	r3, r1
10049818:	3b08      	subs	r3, #8
1004981a:	089b      	lsrs	r3, r3, #2
1004981c:	3306      	adds	r3, #6
1004981e:	009b      	lsls	r3, r3, #2
10049820:	18d3      	adds	r3, r2, r3
10049822:	3304      	adds	r3, #4
10049824:	681b      	ldr	r3, [r3, #0]
10049826:	1dfa      	adds	r2, r7, #7
10049828:	7812      	ldrb	r2, [r2, #0]
1004982a:	0011      	movs	r1, r2
1004982c:	2203      	movs	r2, #3
1004982e:	400a      	ands	r2, r1
10049830:	00d2      	lsls	r2, r2, #3
10049832:	21ff      	movs	r1, #255	@ 0xff
10049834:	4091      	lsls	r1, r2
10049836:	000a      	movs	r2, r1
10049838:	43d2      	mvns	r2, r2
1004983a:	401a      	ands	r2, r3
1004983c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
1004983e:	683b      	ldr	r3, [r7, #0]
10049840:	019b      	lsls	r3, r3, #6
10049842:	22ff      	movs	r2, #255	@ 0xff
10049844:	401a      	ands	r2, r3
10049846:	1dfb      	adds	r3, r7, #7
10049848:	781b      	ldrb	r3, [r3, #0]
1004984a:	0018      	movs	r0, r3
1004984c:	2303      	movs	r3, #3
1004984e:	4003      	ands	r3, r0
10049850:	00db      	lsls	r3, r3, #3
10049852:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10049854:	4809      	ldr	r0, [pc, #36]	@ (1004987c <__NVIC_SetPriority+0xd8>)
10049856:	1dfb      	adds	r3, r7, #7
10049858:	781b      	ldrb	r3, [r3, #0]
1004985a:	001c      	movs	r4, r3
1004985c:	230f      	movs	r3, #15
1004985e:	4023      	ands	r3, r4
10049860:	3b08      	subs	r3, #8
10049862:	089b      	lsrs	r3, r3, #2
10049864:	430a      	orrs	r2, r1
10049866:	3306      	adds	r3, #6
10049868:	009b      	lsls	r3, r3, #2
1004986a:	18c3      	adds	r3, r0, r3
1004986c:	3304      	adds	r3, #4
1004986e:	601a      	str	r2, [r3, #0]
}
10049870:	46c0      	nop			@ (mov r8, r8)
10049872:	46bd      	mov	sp, r7
10049874:	b003      	add	sp, #12
10049876:	bd90      	pop	{r4, r7, pc}
10049878:	e000e100 	.word	0xe000e100
1004987c:	e000ed00 	.word	0xe000ed00

10049880 <__NVIC_SystemReset>:
{
10049880:	b580      	push	{r7, lr}
10049882:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
10049884:	f3bf 8f4f 	dsb	sy
}
10049888:	46c0      	nop			@ (mov r8, r8)
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1004988a:	4b04      	ldr	r3, [pc, #16]	@ (1004989c <__NVIC_SystemReset+0x1c>)
1004988c:	4a04      	ldr	r2, [pc, #16]	@ (100498a0 <__NVIC_SystemReset+0x20>)
1004988e:	60da      	str	r2, [r3, #12]
  __ASM volatile ("dsb 0xF":::"memory");
10049890:	f3bf 8f4f 	dsb	sy
}
10049894:	46c0      	nop			@ (mov r8, r8)
    __NOP();
10049896:	46c0      	nop			@ (mov r8, r8)
10049898:	e7fd      	b.n	10049896 <__NVIC_SystemReset+0x16>
1004989a:	46c0      	nop			@ (mov r8, r8)
1004989c:	e000ed00 	.word	0xe000ed00
100498a0:	05fa0004 	.word	0x05fa0004

100498a4 <SystemInit>:
  * @param  None
  * @retval None
  */

void SystemInit(void)
{
100498a4:	b590      	push	{r4, r7, lr}
100498a6:	b087      	sub	sp, #28
100498a8:	af00      	add	r7, sp, #0
  uint32_t lsiBw;
#endif
  uint8_t i;
  
  /* If the reset reason is a wakeup from power save restore the context */
  if ((RCC->CSR == 0) && ((PWR->SR1 != 0)||(PWR->SR3 != 0))) {
100498aa:	4a64      	ldr	r2, [pc, #400]	@ (10049a3c <SystemInit+0x198>)
100498ac:	2394      	movs	r3, #148	@ 0x94
100498ae:	58d3      	ldr	r3, [r2, r3]
100498b0:	2b00      	cmp	r3, #0
100498b2:	d10e      	bne.n	100498d2 <SystemInit+0x2e>
100498b4:	4b62      	ldr	r3, [pc, #392]	@ (10049a40 <SystemInit+0x19c>)
100498b6:	691b      	ldr	r3, [r3, #16]
100498b8:	2b00      	cmp	r3, #0
100498ba:	d103      	bne.n	100498c4 <SystemInit+0x20>
100498bc:	4b60      	ldr	r3, [pc, #384]	@ (10049a40 <SystemInit+0x19c>)
100498be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
100498c0:	2b00      	cmp	r3, #0
100498c2:	d006      	beq.n	100498d2 <SystemInit+0x2e>
    RAM_VR.WakeupFromSleepFlag = 1; /* A wakeup from power save occurred */
100498c4:	4b5f      	ldr	r3, [pc, #380]	@ (10049a44 <SystemInit+0x1a0>)
100498c6:	2201      	movs	r2, #1
100498c8:	609a      	str	r2, [r3, #8]
    CPUcontextRestore();            /* Restore the context */
100498ca:	f7f6 fc8d 	bl	100401e8 <CPUcontextRestore>
    /* if the context restore worked properly, we should never return here */
    while(1) { 
      NVIC_SystemReset(); 
100498ce:	f7ff ffd7 	bl	10049880 <__NVIC_SystemReset>

  /* Configure the Vector Table location */
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation */
#else
  SCB->VTOR = (uint32_t) (__vector_table);
100498d2:	4b5d      	ldr	r3, [pc, #372]	@ (10049a48 <SystemInit+0x1a4>)
100498d4:	4a5d      	ldr	r2, [pc, #372]	@ (10049a4c <SystemInit+0x1a8>)
100498d6:	609a      	str	r2, [r3, #8]
#endif /* USER_VECT_TAB_ADDRESS */

  /* Store in RAM the AppBase information */
  RAM_VR.AppBase = (uint32_t) SCB->VTOR;
100498d8:	4b5b      	ldr	r3, [pc, #364]	@ (10049a48 <SystemInit+0x1a4>)
100498da:	689a      	ldr	r2, [r3, #8]
100498dc:	4b59      	ldr	r3, [pc, #356]	@ (10049a44 <SystemInit+0x1a0>)
100498de:	611a      	str	r2, [r3, #16]

  /* Enable all the RAM banks in retention during power save */
#if defined(PWR_CR2_RAMRET1)
  SET_BIT(PWR->CR2, PWR_CR2_RAMRET1);
100498e0:	4b57      	ldr	r3, [pc, #348]	@ (10049a40 <SystemInit+0x19c>)
100498e2:	685a      	ldr	r2, [r3, #4]
100498e4:	4b56      	ldr	r3, [pc, #344]	@ (10049a40 <SystemInit+0x19c>)
100498e6:	2120      	movs	r1, #32
100498e8:	430a      	orrs	r2, r1
100498ea:	605a      	str	r2, [r3, #4]
#endif /* PWR_CR2_RAMRET1 */
  
#if defined(PWR_CR2_RAMRET2)
  SET_BIT(PWR->CR2, PWR_CR2_RAMRET2);
100498ec:	4b54      	ldr	r3, [pc, #336]	@ (10049a40 <SystemInit+0x19c>)
100498ee:	685a      	ldr	r2, [r3, #4]
100498f0:	4b53      	ldr	r3, [pc, #332]	@ (10049a40 <SystemInit+0x19c>)
100498f2:	2140      	movs	r1, #64	@ 0x40
100498f4:	430a      	orrs	r2, r1
100498f6:	605a      	str	r2, [r3, #4]
#endif /* PWR_CR2_RAMRET2 */
  
#if defined(PWR_CR2_RAMRET3)
  SET_BIT(PWR->CR2, PWR_CR2_RAMRET3);
100498f8:	4b51      	ldr	r3, [pc, #324]	@ (10049a40 <SystemInit+0x19c>)
100498fa:	685a      	ldr	r2, [r3, #4]
100498fc:	4b50      	ldr	r3, [pc, #320]	@ (10049a40 <SystemInit+0x19c>)
100498fe:	2180      	movs	r1, #128	@ 0x80
10049900:	430a      	orrs	r2, r1
10049902:	605a      	str	r2, [r3, #4]
#endif /* PWR_CR2_RAMRET3 */

  /* Disable the GPIO retention in power save configuration */
#if defined(PWR_CR2_GPIORET)
  CLEAR_BIT(PWR->CR2, PWR_CR2_GPIORET);
10049904:	4b4e      	ldr	r3, [pc, #312]	@ (10049a40 <SystemInit+0x19c>)
10049906:	685a      	ldr	r2, [r3, #4]
10049908:	4b4d      	ldr	r3, [pc, #308]	@ (10049a40 <SystemInit+0x19c>)
1004990a:	4951      	ldr	r1, [pc, #324]	@ (10049a50 <SystemInit+0x1ac>)
1004990c:	400a      	ands	r2, r1
1004990e:	605a      	str	r2, [r3, #4]
#endif /* PWR_CR2_GPIORET */
   
  /* SMPS setup */
  if ((CFG_HW_SMPS == SMPS_ON) || (CFG_HW_SMPS == SMPS_BYPAPSS))
  {
    while(READ_BIT(PWR->SR2, PWR_SR2_SMPSRDY) != PWR_SR2_SMPSRDY); // Wait until SMPS is ready
10049910:	46c0      	nop			@ (mov r8, r8)
10049912:	4b4b      	ldr	r3, [pc, #300]	@ (10049a40 <SystemInit+0x19c>)
10049914:	695b      	ldr	r3, [r3, #20]
10049916:	2204      	movs	r2, #4
10049918:	4013      	ands	r3, r2
1004991a:	2b04      	cmp	r3, #4
1004991c:	d1f9      	bne.n	10049912 <SystemInit+0x6e>
    MODIFY_REG(PWR->CR5, PWR_CR5_SMPSBOMSEL, (CFG_HW_SMPS_BOM<<PWR_CR5_SMPSBOMSEL_Pos)); // Configure the SMPS BOM
1004991e:	4b48      	ldr	r3, [pc, #288]	@ (10049a40 <SystemInit+0x19c>)
10049920:	69db      	ldr	r3, [r3, #28]
10049922:	2230      	movs	r2, #48	@ 0x30
10049924:	4393      	bics	r3, r2
10049926:	001a      	movs	r2, r3
10049928:	4b45      	ldr	r3, [pc, #276]	@ (10049a40 <SystemInit+0x19c>)
1004992a:	2120      	movs	r1, #32
1004992c:	430a      	orrs	r2, r1
1004992e:	61da      	str	r2, [r3, #28]
  }
  if ((CFG_HW_SMPS == SMPS_ON) || (CFG_HW_SMPS == SMPS_OFF))
  {
    MODIFY_REG(PWR->CR5, PWR_CR5_NOSMPS, (CFG_HW_SMPS<<PWR_CR5_NOSMPS_Pos)); // SMPS ON/OFF Configuration
10049930:	4b43      	ldr	r3, [pc, #268]	@ (10049a40 <SystemInit+0x19c>)
10049932:	69da      	ldr	r2, [r3, #28]
10049934:	4b42      	ldr	r3, [pc, #264]	@ (10049a40 <SystemInit+0x19c>)
10049936:	4947      	ldr	r1, [pc, #284]	@ (10049a54 <SystemInit+0x1b0>)
10049938:	400a      	ands	r2, r1
1004993a:	61da      	str	r2, [r3, #28]
  }
  else
  {
    MODIFY_REG(PWR->CR5, PWR_CR5_SMPSFBYP, (1<<PWR_CR5_SMPSFBYP_Pos)); // SMPS BYPASS Configuration
  }
  MODIFY_REG(PWR->CR5, PWR_CR5_SMPSLPOPEN, (CFG_HW_SMPS_LOW_POWER<<PWR_CR5_SMPSLPOPEN_Pos)); // SMPS configuration during power save
1004993c:	4b40      	ldr	r3, [pc, #256]	@ (10049a40 <SystemInit+0x19c>)
1004993e:	69da      	ldr	r2, [r3, #28]
10049940:	4b3f      	ldr	r3, [pc, #252]	@ (10049a40 <SystemInit+0x19c>)
10049942:	2180      	movs	r1, #128	@ 0x80
10049944:	0049      	lsls	r1, r1, #1
10049946:	430a      	orrs	r2, r1
10049948:	61da      	str	r2, [r3, #28]
  
  /* If Trimming values from engineering in flash locations are not present load default values */
  if (*(volatile uint32_t*)VALIDITY_LOCATION != VALIDITY_TAG)
1004994a:	4b43      	ldr	r3, [pc, #268]	@ (10049a58 <SystemInit+0x1b4>)
1004994c:	681b      	ldr	r3, [r3, #0]
1004994e:	4a43      	ldr	r2, [pc, #268]	@ (10049a5c <SystemInit+0x1b8>)
10049950:	4293      	cmp	r3, r2
10049952:	d055      	beq.n	10049a00 <SystemInit+0x15c>

    /* Set Low Speed Internal oscillator LPMU trimming value. */
    MODIFY_REG(PWR->ENGTRIM, PWR_ENGTRIM_TRIM_LSI_LPMU, ((lsiLpmu << PWR_ENGTRIM_TRIM_LSI_LPMU_Pos) & PWR_ENGTRIM_TRIM_LSI_LPMU));
    SET_BIT(PWR->ENGTRIM, PWR_ENGTRIM_TRIMLSILPMUEN);
#else
    hsiCalib       = 0x1F;
10049954:	231f      	movs	r3, #31
10049956:	613b      	str	r3, [r7, #16]
    lsiBw          = 8;
10049958:	2308      	movs	r3, #8
1004995a:	60fb      	str	r3, [r7, #12]
    mainRegulator  = 0x0A;
1004995c:	230a      	movs	r3, #10
1004995e:	60bb      	str	r3, [r7, #8]
    smpsOutVoltage = 0x03;
10049960:	2303      	movs	r3, #3
10049962:	607b      	str	r3, [r7, #4]

    /* Low speed internal RC trimming value set by software */
    MODIFY_REG(RCC->CSSWCR, RCC_CSSWCR_LSISWBW, lsiBw << RCC_CSSWCR_LSISWBW_Pos);
10049964:	4b35      	ldr	r3, [pc, #212]	@ (10049a3c <SystemInit+0x198>)
10049966:	68db      	ldr	r3, [r3, #12]
10049968:	221e      	movs	r2, #30
1004996a:	4393      	bics	r3, r2
1004996c:	0019      	movs	r1, r3
1004996e:	68fb      	ldr	r3, [r7, #12]
10049970:	005a      	lsls	r2, r3, #1
10049972:	4b32      	ldr	r3, [pc, #200]	@ (10049a3c <SystemInit+0x198>)
10049974:	430a      	orrs	r2, r1
10049976:	60da      	str	r2, [r3, #12]
    SET_BIT(RCC->CSSWCR, RCC_CSSWCR_LSISWTRIMEN);
10049978:	4b30      	ldr	r3, [pc, #192]	@ (10049a3c <SystemInit+0x198>)
1004997a:	68da      	ldr	r2, [r3, #12]
1004997c:	4b2f      	ldr	r3, [pc, #188]	@ (10049a3c <SystemInit+0x198>)
1004997e:	2101      	movs	r1, #1
10049980:	430a      	orrs	r2, r1
10049982:	60da      	str	r2, [r3, #12]
#endif
    
    /* Set HSI Calibration Trimming value */
    MODIFY_REG(RCC->CSSWCR, RCC_CSSWCR_HSITRIMSW, hsiCalib << RCC_CSSWCR_HSITRIMSW_Pos);
10049984:	4b2d      	ldr	r3, [pc, #180]	@ (10049a3c <SystemInit+0x198>)
10049986:	68db      	ldr	r3, [r3, #12]
10049988:	4a35      	ldr	r2, [pc, #212]	@ (10049a60 <SystemInit+0x1bc>)
1004998a:	4013      	ands	r3, r2
1004998c:	0019      	movs	r1, r3
1004998e:	693b      	ldr	r3, [r7, #16]
10049990:	061a      	lsls	r2, r3, #24
10049992:	4b2a      	ldr	r3, [pc, #168]	@ (10049a3c <SystemInit+0x198>)
10049994:	430a      	orrs	r2, r1
10049996:	60da      	str	r2, [r3, #12]
    SET_BIT(RCC->CSSWCR, RCC_CSSWCR_HSISWTRIMEN);
10049998:	4b28      	ldr	r3, [pc, #160]	@ (10049a3c <SystemInit+0x198>)
1004999a:	68da      	ldr	r2, [r3, #12]
1004999c:	4b27      	ldr	r3, [pc, #156]	@ (10049a3c <SystemInit+0x198>)
1004999e:	2180      	movs	r1, #128	@ 0x80
100499a0:	0409      	lsls	r1, r1, #16
100499a2:	430a      	orrs	r2, r1
100499a4:	60da      	str	r2, [r3, #12]
              
    /* Set Main Regulator voltage Trimming value */ 
    MODIFY_REG(PWR->ENGTRIM, PWR_ENGTRIM_TRIM_MR, ((mainRegulator << PWR_ENGTRIM_TRIM_MR_Pos) & PWR_ENGTRIM_TRIM_MR));
100499a6:	4a26      	ldr	r2, [pc, #152]	@ (10049a40 <SystemInit+0x19c>)
100499a8:	2394      	movs	r3, #148	@ 0x94
100499aa:	58d3      	ldr	r3, [r2, r3]
100499ac:	4a2d      	ldr	r2, [pc, #180]	@ (10049a64 <SystemInit+0x1c0>)
100499ae:	401a      	ands	r2, r3
100499b0:	68bb      	ldr	r3, [r7, #8]
100499b2:	0199      	lsls	r1, r3, #6
100499b4:	23f0      	movs	r3, #240	@ 0xf0
100499b6:	009b      	lsls	r3, r3, #2
100499b8:	400b      	ands	r3, r1
100499ba:	4921      	ldr	r1, [pc, #132]	@ (10049a40 <SystemInit+0x19c>)
100499bc:	4313      	orrs	r3, r2
100499be:	2294      	movs	r2, #148	@ 0x94
100499c0:	508b      	str	r3, [r1, r2]
    SET_BIT(PWR->ENGTRIM, PWR_ENGTRIM_TRIMMREN);
100499c2:	4a1f      	ldr	r2, [pc, #124]	@ (10049a40 <SystemInit+0x19c>)
100499c4:	2394      	movs	r3, #148	@ 0x94
100499c6:	58d3      	ldr	r3, [r2, r3]
100499c8:	491d      	ldr	r1, [pc, #116]	@ (10049a40 <SystemInit+0x19c>)
100499ca:	2220      	movs	r2, #32
100499cc:	4313      	orrs	r3, r2
100499ce:	2294      	movs	r2, #148	@ 0x94
100499d0:	508b      	str	r3, [r1, r2]

    /* Set SMPS output voltage Trimming value */
    MODIFY_REG(PWR->ENGTRIM, PWR_ENGTRIM_SMPS_TRIM, ((smpsOutVoltage << PWR_ENGTRIM_SMPS_TRIM_Pos) & PWR_ENGTRIM_SMPS_TRIM));
100499d2:	4a1b      	ldr	r2, [pc, #108]	@ (10049a40 <SystemInit+0x19c>)
100499d4:	2394      	movs	r3, #148	@ 0x94
100499d6:	58d3      	ldr	r3, [r2, r3]
100499d8:	4a23      	ldr	r2, [pc, #140]	@ (10049a68 <SystemInit+0x1c4>)
100499da:	401a      	ands	r2, r3
100499dc:	687b      	ldr	r3, [r7, #4]
100499de:	02d9      	lsls	r1, r3, #11
100499e0:	23e0      	movs	r3, #224	@ 0xe0
100499e2:	019b      	lsls	r3, r3, #6
100499e4:	400b      	ands	r3, r1
100499e6:	4916      	ldr	r1, [pc, #88]	@ (10049a40 <SystemInit+0x19c>)
100499e8:	4313      	orrs	r3, r2
100499ea:	2294      	movs	r2, #148	@ 0x94
100499ec:	508b      	str	r3, [r1, r2]
    SET_BIT(PWR->ENGTRIM, PWR_ENGTRIM_SMPSTRIMEN);    
100499ee:	4a14      	ldr	r2, [pc, #80]	@ (10049a40 <SystemInit+0x19c>)
100499f0:	2394      	movs	r3, #148	@ 0x94
100499f2:	58d3      	ldr	r3, [r2, r3]
100499f4:	4912      	ldr	r1, [pc, #72]	@ (10049a40 <SystemInit+0x19c>)
100499f6:	2280      	movs	r2, #128	@ 0x80
100499f8:	00d2      	lsls	r2, r2, #3
100499fa:	4313      	orrs	r3, r2
100499fc:	2294      	movs	r2, #148	@ 0x94
100499fe:	508b      	str	r3, [r1, r2]
  }

  /* Set all the interrupt with low priprity */
  for (i=0; i<32; i++)
10049a00:	2317      	movs	r3, #23
10049a02:	18fb      	adds	r3, r7, r3
10049a04:	2200      	movs	r2, #0
10049a06:	701a      	strb	r2, [r3, #0]
10049a08:	e00d      	b.n	10049a26 <SystemInit+0x182>
  {
    NVIC_SetPriority((IRQn_Type)i, IRQ_LOW_PRIORITY);
10049a0a:	2417      	movs	r4, #23
10049a0c:	193b      	adds	r3, r7, r4
10049a0e:	781b      	ldrb	r3, [r3, #0]
10049a10:	b25b      	sxtb	r3, r3
10049a12:	2103      	movs	r1, #3
10049a14:	0018      	movs	r0, r3
10049a16:	f7ff fec5 	bl	100497a4 <__NVIC_SetPriority>
  for (i=0; i<32; i++)
10049a1a:	0021      	movs	r1, r4
10049a1c:	187b      	adds	r3, r7, r1
10049a1e:	781a      	ldrb	r2, [r3, #0]
10049a20:	187b      	adds	r3, r7, r1
10049a22:	3201      	adds	r2, #1
10049a24:	701a      	strb	r2, [r3, #0]
10049a26:	2317      	movs	r3, #23
10049a28:	18fb      	adds	r3, r7, r3
10049a2a:	781b      	ldrb	r3, [r3, #0]
10049a2c:	2b1f      	cmp	r3, #31
10049a2e:	d9ec      	bls.n	10049a0a <SystemInit+0x166>
  __ASM volatile ("cpsie i" : : : "memory");
10049a30:	b662      	cpsie	i
}
10049a32:	46c0      	nop			@ (mov r8, r8)
  }
  
  /* Enable all the irqs */
  __enable_irq();
}
10049a34:	46c0      	nop			@ (mov r8, r8)
10049a36:	46bd      	mov	sp, r7
10049a38:	b007      	add	sp, #28
10049a3a:	bd90      	pop	{r4, r7, pc}
10049a3c:	48400000 	.word	0x48400000
10049a40:	48500000 	.word	0x48500000
10049a44:	20000004 	.word	0x20000004
10049a48:	e000ed00 	.word	0xe000ed00
10049a4c:	10040000 	.word	0x10040000
10049a50:	fffffeff 	.word	0xfffffeff
10049a54:	fffffbff 	.word	0xfffffbff
10049a58:	10001ef8 	.word	0x10001ef8
10049a5c:	fcbceccc 	.word	0xfcbceccc
10049a60:	c0ffffff 	.word	0xc0ffffff
10049a64:	fffffc3f 	.word	0xfffffc3f
10049a68:	ffffc7ff 	.word	0xffffc7ff

10049a6c <SystemCoreClockUpdate>:
  *
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
10049a6c:	b580      	push	{r7, lr}
10049a6e:	b082      	sub	sp, #8
10049a70:	af00      	add	r7, sp, #0
  uint8_t directHSE_enabled;
  uint8_t divPrescaler;

  /* Get SYSCLK source HSE or HSI+PLL64MHz */
  directHSE_enabled = (RCC->CFGR & RCC_CFGR_HSESEL) >> RCC_CFGR_HSESEL_Pos;
10049a72:	4b13      	ldr	r3, [pc, #76]	@ (10049ac0 <SystemCoreClockUpdate+0x54>)
10049a74:	689b      	ldr	r3, [r3, #8]
10049a76:	085b      	lsrs	r3, r3, #1
10049a78:	b2da      	uxtb	r2, r3
10049a7a:	1dfb      	adds	r3, r7, #7
10049a7c:	2101      	movs	r1, #1
10049a7e:	400a      	ands	r2, r1
10049a80:	701a      	strb	r2, [r3, #0]
#if defined(STM32WB06) || defined(STM32WB07)
  /* Get the clock divider */
    divPrescaler = (RCC->CFGR & RCC_CFGR_CLKSYSDIV) >> RCC_CFGR_CLKSYSDIV_Pos;
#else
  /* Get the clock divider */
  divPrescaler = (RCC->CFGR & RCC_CFGR_CLKSYSDIV_STATUS) >> RCC_CFGR_CLKSYSDIV_STATUS_Pos;
10049a82:	4b0f      	ldr	r3, [pc, #60]	@ (10049ac0 <SystemCoreClockUpdate+0x54>)
10049a84:	689b      	ldr	r3, [r3, #8]
10049a86:	0a1b      	lsrs	r3, r3, #8
10049a88:	b2da      	uxtb	r2, r3
10049a8a:	1dbb      	adds	r3, r7, #6
10049a8c:	2107      	movs	r1, #7
10049a8e:	400a      	ands	r2, r1
10049a90:	701a      	strb	r2, [r3, #0]
#endif

  if (directHSE_enabled)
10049a92:	1dfb      	adds	r3, r7, #7
10049a94:	781b      	ldrb	r3, [r3, #0]
10049a96:	2b00      	cmp	r3, #0
10049a98:	d007      	beq.n	10049aaa <SystemCoreClockUpdate+0x3e>
  {
    SystemCoreClock = HSE_VALUE >> (divPrescaler - 1U);
10049a9a:	1dbb      	adds	r3, r7, #6
10049a9c:	781b      	ldrb	r3, [r3, #0]
10049a9e:	3b01      	subs	r3, #1
10049aa0:	4a08      	ldr	r2, [pc, #32]	@ (10049ac4 <SystemCoreClockUpdate+0x58>)
10049aa2:	40da      	lsrs	r2, r3
10049aa4:	4b08      	ldr	r3, [pc, #32]	@ (10049ac8 <SystemCoreClockUpdate+0x5c>)
10049aa6:	601a      	str	r2, [r3, #0]
  }
  else
  {
    SystemCoreClock = HSI_VALUE >> divPrescaler;
  }  
}
10049aa8:	e005      	b.n	10049ab6 <SystemCoreClockUpdate+0x4a>
    SystemCoreClock = HSI_VALUE >> divPrescaler;
10049aaa:	1dbb      	adds	r3, r7, #6
10049aac:	781b      	ldrb	r3, [r3, #0]
10049aae:	4a07      	ldr	r2, [pc, #28]	@ (10049acc <SystemCoreClockUpdate+0x60>)
10049ab0:	40da      	lsrs	r2, r3
10049ab2:	4b05      	ldr	r3, [pc, #20]	@ (10049ac8 <SystemCoreClockUpdate+0x5c>)
10049ab4:	601a      	str	r2, [r3, #0]
}
10049ab6:	46c0      	nop			@ (mov r8, r8)
10049ab8:	46bd      	mov	sp, r7
10049aba:	b002      	add	sp, #8
10049abc:	bd80      	pop	{r7, pc}
10049abe:	46c0      	nop			@ (mov r8, r8)
10049ac0:	48400000 	.word	0x48400000
10049ac4:	01e84800 	.word	0x01e84800
10049ac8:	20000bc0 	.word	0x20000bc0
10049acc:	03d09000 	.word	0x03d09000

10049ad0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
10049ad0:	b580      	push	{r7, lr}
10049ad2:	b082      	sub	sp, #8
10049ad4:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
10049ad6:	1dfb      	adds	r3, r7, #7
10049ad8:	2200      	movs	r2, #0
10049ada:	701a      	strb	r2, [r3, #0]

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
10049adc:	2003      	movs	r0, #3
10049ade:	f000 f80f 	bl	10049b00 <HAL_InitTick>
10049ae2:	1e03      	subs	r3, r0, #0
10049ae4:	d003      	beq.n	10049aee <HAL_Init+0x1e>
  {
    status = HAL_ERROR;
10049ae6:	1dfb      	adds	r3, r7, #7
10049ae8:	2201      	movs	r2, #1
10049aea:	701a      	strb	r2, [r3, #0]
10049aec:	e001      	b.n	10049af2 <HAL_Init+0x22>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
10049aee:	f7f8 fad1 	bl	10042094 <HAL_MspInit>
  }

  /* Return function status */
  return status;
10049af2:	1dfb      	adds	r3, r7, #7
10049af4:	781b      	ldrb	r3, [r3, #0]
}
10049af6:	0018      	movs	r0, r3
10049af8:	46bd      	mov	sp, r7
10049afa:	b002      	add	sp, #8
10049afc:	bd80      	pop	{r7, pc}
	...

10049b00 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
10049b00:	b590      	push	{r4, r7, lr}
10049b02:	b085      	sub	sp, #20
10049b04:	af00      	add	r7, sp, #0
10049b06:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef  status = HAL_OK;
10049b08:	230f      	movs	r3, #15
10049b0a:	18fb      	adds	r3, r7, r3
10049b0c:	2200      	movs	r2, #0
10049b0e:	701a      	strb	r2, [r3, #0]

  if (uwTickFreq != 0U)
10049b10:	4b1d      	ldr	r3, [pc, #116]	@ (10049b88 <HAL_InitTick+0x88>)
10049b12:	781b      	ldrb	r3, [r3, #0]
10049b14:	2b00      	cmp	r3, #0
10049b16:	d02c      	beq.n	10049b72 <HAL_InitTick+0x72>
  {
    /*Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(HAL_RCC_GetSysClockFreq() / (1000U / uwTickFreq)) == 0U)
10049b18:	f003 fae2 	bl	1004d0e0 <HAL_RCC_GetSysClockFreq>
10049b1c:	0004      	movs	r4, r0
10049b1e:	4b1a      	ldr	r3, [pc, #104]	@ (10049b88 <HAL_InitTick+0x88>)
10049b20:	781b      	ldrb	r3, [r3, #0]
10049b22:	0019      	movs	r1, r3
10049b24:	23fa      	movs	r3, #250	@ 0xfa
10049b26:	0098      	lsls	r0, r3, #2
10049b28:	f7f6 fb8a 	bl	10040240 <__udivsi3>
10049b2c:	0003      	movs	r3, r0
10049b2e:	0019      	movs	r1, r3
10049b30:	0020      	movs	r0, r4
10049b32:	f7f6 fb85 	bl	10040240 <__udivsi3>
10049b36:	0003      	movs	r3, r0
10049b38:	0018      	movs	r0, r3
10049b3a:	f000 f95a 	bl	10049df2 <HAL_SYSTICK_Config>
10049b3e:	1e03      	subs	r3, r0, #0
10049b40:	d112      	bne.n	10049b68 <HAL_InitTick+0x68>
    {
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
10049b42:	687b      	ldr	r3, [r7, #4]
10049b44:	2b03      	cmp	r3, #3
10049b46:	d80a      	bhi.n	10049b5e <HAL_InitTick+0x5e>
      {
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0);
10049b48:	6879      	ldr	r1, [r7, #4]
10049b4a:	2301      	movs	r3, #1
10049b4c:	425b      	negs	r3, r3
10049b4e:	2200      	movs	r2, #0
10049b50:	0018      	movs	r0, r3
10049b52:	f000 f925 	bl	10049da0 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
10049b56:	4b0d      	ldr	r3, [pc, #52]	@ (10049b8c <HAL_InitTick+0x8c>)
10049b58:	687a      	ldr	r2, [r7, #4]
10049b5a:	601a      	str	r2, [r3, #0]
10049b5c:	e00d      	b.n	10049b7a <HAL_InitTick+0x7a>
      }
      else
      {
        status = HAL_ERROR;
10049b5e:	230f      	movs	r3, #15
10049b60:	18fb      	adds	r3, r7, r3
10049b62:	2201      	movs	r2, #1
10049b64:	701a      	strb	r2, [r3, #0]
10049b66:	e008      	b.n	10049b7a <HAL_InitTick+0x7a>
      }
    }
    else
    {
      status = HAL_ERROR;
10049b68:	230f      	movs	r3, #15
10049b6a:	18fb      	adds	r3, r7, r3
10049b6c:	2201      	movs	r2, #1
10049b6e:	701a      	strb	r2, [r3, #0]
10049b70:	e003      	b.n	10049b7a <HAL_InitTick+0x7a>
    }
  }
  else
  {
    status = HAL_ERROR;
10049b72:	230f      	movs	r3, #15
10049b74:	18fb      	adds	r3, r7, r3
10049b76:	2201      	movs	r2, #1
10049b78:	701a      	strb	r2, [r3, #0]
  }

  /* Return function status */
  return status;
10049b7a:	230f      	movs	r3, #15
10049b7c:	18fb      	adds	r3, r7, r3
10049b7e:	781b      	ldrb	r3, [r3, #0]
}
10049b80:	0018      	movs	r0, r3
10049b82:	46bd      	mov	sp, r7
10049b84:	b005      	add	sp, #20
10049b86:	bd90      	pop	{r4, r7, pc}
10049b88:	20000bc8 	.word	0x20000bc8
10049b8c:	20000bc4 	.word	0x20000bc4

10049b90 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
10049b90:	b580      	push	{r7, lr}
10049b92:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
10049b94:	4b05      	ldr	r3, [pc, #20]	@ (10049bac <HAL_IncTick+0x1c>)
10049b96:	781b      	ldrb	r3, [r3, #0]
10049b98:	001a      	movs	r2, r3
10049b9a:	4b05      	ldr	r3, [pc, #20]	@ (10049bb0 <HAL_IncTick+0x20>)
10049b9c:	681b      	ldr	r3, [r3, #0]
10049b9e:	18d2      	adds	r2, r2, r3
10049ba0:	4b03      	ldr	r3, [pc, #12]	@ (10049bb0 <HAL_IncTick+0x20>)
10049ba2:	601a      	str	r2, [r3, #0]
}
10049ba4:	46c0      	nop			@ (mov r8, r8)
10049ba6:	46bd      	mov	sp, r7
10049ba8:	bd80      	pop	{r7, pc}
10049baa:	46c0      	nop			@ (mov r8, r8)
10049bac:	20000bc8 	.word	0x20000bc8
10049bb0:	200006a0 	.word	0x200006a0

10049bb4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
10049bb4:	b580      	push	{r7, lr}
10049bb6:	af00      	add	r7, sp, #0
  return uwTick;
10049bb8:	4b02      	ldr	r3, [pc, #8]	@ (10049bc4 <HAL_GetTick+0x10>)
10049bba:	681b      	ldr	r3, [r3, #0]
}
10049bbc:	0018      	movs	r0, r3
10049bbe:	46bd      	mov	sp, r7
10049bc0:	bd80      	pop	{r7, pc}
10049bc2:	46c0      	nop			@ (mov r8, r8)
10049bc4:	200006a0 	.word	0x200006a0

10049bc8 <HAL_GetTickPrio>:
/**
  * @brief This function returns a tick priority.
  * @retval tick priority
  */
uint32_t HAL_GetTickPrio(void)
{
10049bc8:	b580      	push	{r7, lr}
10049bca:	af00      	add	r7, sp, #0
  return uwTickPrio;
10049bcc:	4b02      	ldr	r3, [pc, #8]	@ (10049bd8 <HAL_GetTickPrio+0x10>)
10049bce:	681b      	ldr	r3, [r3, #0]
}
10049bd0:	0018      	movs	r0, r3
10049bd2:	46bd      	mov	sp, r7
10049bd4:	bd80      	pop	{r7, pc}
10049bd6:	46c0      	nop			@ (mov r8, r8)
10049bd8:	20000bc4 	.word	0x20000bc4

10049bdc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
10049bdc:	b580      	push	{r7, lr}
10049bde:	b084      	sub	sp, #16
10049be0:	af00      	add	r7, sp, #0
10049be2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
10049be4:	f7ff ffe6 	bl	10049bb4 <HAL_GetTick>
10049be8:	0003      	movs	r3, r0
10049bea:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
10049bec:	687b      	ldr	r3, [r7, #4]
10049bee:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
10049bf0:	68fb      	ldr	r3, [r7, #12]
10049bf2:	3301      	adds	r3, #1
10049bf4:	d005      	beq.n	10049c02 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
10049bf6:	4b0a      	ldr	r3, [pc, #40]	@ (10049c20 <HAL_Delay+0x44>)
10049bf8:	781b      	ldrb	r3, [r3, #0]
10049bfa:	001a      	movs	r2, r3
10049bfc:	68fb      	ldr	r3, [r7, #12]
10049bfe:	189b      	adds	r3, r3, r2
10049c00:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
10049c02:	46c0      	nop			@ (mov r8, r8)
10049c04:	f7ff ffd6 	bl	10049bb4 <HAL_GetTick>
10049c08:	0002      	movs	r2, r0
10049c0a:	68bb      	ldr	r3, [r7, #8]
10049c0c:	1ad3      	subs	r3, r2, r3
10049c0e:	68fa      	ldr	r2, [r7, #12]
10049c10:	429a      	cmp	r2, r3
10049c12:	d8f7      	bhi.n	10049c04 <HAL_Delay+0x28>
  {
  }
}
10049c14:	46c0      	nop			@ (mov r8, r8)
10049c16:	46c0      	nop			@ (mov r8, r8)
10049c18:	46bd      	mov	sp, r7
10049c1a:	b004      	add	sp, #16
10049c1c:	bd80      	pop	{r7, pc}
10049c1e:	46c0      	nop			@ (mov r8, r8)
10049c20:	20000bc8 	.word	0x20000bc8

10049c24 <__NVIC_EnableIRQ>:
{
10049c24:	b580      	push	{r7, lr}
10049c26:	b082      	sub	sp, #8
10049c28:	af00      	add	r7, sp, #0
10049c2a:	0002      	movs	r2, r0
10049c2c:	1dfb      	adds	r3, r7, #7
10049c2e:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
10049c30:	1dfb      	adds	r3, r7, #7
10049c32:	781b      	ldrb	r3, [r3, #0]
10049c34:	2b7f      	cmp	r3, #127	@ 0x7f
10049c36:	d809      	bhi.n	10049c4c <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
10049c38:	1dfb      	adds	r3, r7, #7
10049c3a:	781b      	ldrb	r3, [r3, #0]
10049c3c:	001a      	movs	r2, r3
10049c3e:	231f      	movs	r3, #31
10049c40:	401a      	ands	r2, r3
10049c42:	4b04      	ldr	r3, [pc, #16]	@ (10049c54 <__NVIC_EnableIRQ+0x30>)
10049c44:	2101      	movs	r1, #1
10049c46:	4091      	lsls	r1, r2
10049c48:	000a      	movs	r2, r1
10049c4a:	601a      	str	r2, [r3, #0]
}
10049c4c:	46c0      	nop			@ (mov r8, r8)
10049c4e:	46bd      	mov	sp, r7
10049c50:	b002      	add	sp, #8
10049c52:	bd80      	pop	{r7, pc}
10049c54:	e000e100 	.word	0xe000e100

10049c58 <__NVIC_SetPriority>:
{
10049c58:	b590      	push	{r4, r7, lr}
10049c5a:	b083      	sub	sp, #12
10049c5c:	af00      	add	r7, sp, #0
10049c5e:	0002      	movs	r2, r0
10049c60:	6039      	str	r1, [r7, #0]
10049c62:	1dfb      	adds	r3, r7, #7
10049c64:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
10049c66:	1dfb      	adds	r3, r7, #7
10049c68:	781b      	ldrb	r3, [r3, #0]
10049c6a:	2b7f      	cmp	r3, #127	@ 0x7f
10049c6c:	d828      	bhi.n	10049cc0 <__NVIC_SetPriority+0x68>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10049c6e:	4a2f      	ldr	r2, [pc, #188]	@ (10049d2c <__NVIC_SetPriority+0xd4>)
10049c70:	1dfb      	adds	r3, r7, #7
10049c72:	781b      	ldrb	r3, [r3, #0]
10049c74:	b25b      	sxtb	r3, r3
10049c76:	089b      	lsrs	r3, r3, #2
10049c78:	33c0      	adds	r3, #192	@ 0xc0
10049c7a:	009b      	lsls	r3, r3, #2
10049c7c:	589b      	ldr	r3, [r3, r2]
10049c7e:	1dfa      	adds	r2, r7, #7
10049c80:	7812      	ldrb	r2, [r2, #0]
10049c82:	0011      	movs	r1, r2
10049c84:	2203      	movs	r2, #3
10049c86:	400a      	ands	r2, r1
10049c88:	00d2      	lsls	r2, r2, #3
10049c8a:	21ff      	movs	r1, #255	@ 0xff
10049c8c:	4091      	lsls	r1, r2
10049c8e:	000a      	movs	r2, r1
10049c90:	43d2      	mvns	r2, r2
10049c92:	401a      	ands	r2, r3
10049c94:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
10049c96:	683b      	ldr	r3, [r7, #0]
10049c98:	019b      	lsls	r3, r3, #6
10049c9a:	22ff      	movs	r2, #255	@ 0xff
10049c9c:	401a      	ands	r2, r3
10049c9e:	1dfb      	adds	r3, r7, #7
10049ca0:	781b      	ldrb	r3, [r3, #0]
10049ca2:	0018      	movs	r0, r3
10049ca4:	2303      	movs	r3, #3
10049ca6:	4003      	ands	r3, r0
10049ca8:	00db      	lsls	r3, r3, #3
10049caa:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10049cac:	481f      	ldr	r0, [pc, #124]	@ (10049d2c <__NVIC_SetPriority+0xd4>)
10049cae:	1dfb      	adds	r3, r7, #7
10049cb0:	781b      	ldrb	r3, [r3, #0]
10049cb2:	b25b      	sxtb	r3, r3
10049cb4:	089b      	lsrs	r3, r3, #2
10049cb6:	430a      	orrs	r2, r1
10049cb8:	33c0      	adds	r3, #192	@ 0xc0
10049cba:	009b      	lsls	r3, r3, #2
10049cbc:	501a      	str	r2, [r3, r0]
}
10049cbe:	e031      	b.n	10049d24 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10049cc0:	4a1b      	ldr	r2, [pc, #108]	@ (10049d30 <__NVIC_SetPriority+0xd8>)
10049cc2:	1dfb      	adds	r3, r7, #7
10049cc4:	781b      	ldrb	r3, [r3, #0]
10049cc6:	0019      	movs	r1, r3
10049cc8:	230f      	movs	r3, #15
10049cca:	400b      	ands	r3, r1
10049ccc:	3b08      	subs	r3, #8
10049cce:	089b      	lsrs	r3, r3, #2
10049cd0:	3306      	adds	r3, #6
10049cd2:	009b      	lsls	r3, r3, #2
10049cd4:	18d3      	adds	r3, r2, r3
10049cd6:	3304      	adds	r3, #4
10049cd8:	681b      	ldr	r3, [r3, #0]
10049cda:	1dfa      	adds	r2, r7, #7
10049cdc:	7812      	ldrb	r2, [r2, #0]
10049cde:	0011      	movs	r1, r2
10049ce0:	2203      	movs	r2, #3
10049ce2:	400a      	ands	r2, r1
10049ce4:	00d2      	lsls	r2, r2, #3
10049ce6:	21ff      	movs	r1, #255	@ 0xff
10049ce8:	4091      	lsls	r1, r2
10049cea:	000a      	movs	r2, r1
10049cec:	43d2      	mvns	r2, r2
10049cee:	401a      	ands	r2, r3
10049cf0:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
10049cf2:	683b      	ldr	r3, [r7, #0]
10049cf4:	019b      	lsls	r3, r3, #6
10049cf6:	22ff      	movs	r2, #255	@ 0xff
10049cf8:	401a      	ands	r2, r3
10049cfa:	1dfb      	adds	r3, r7, #7
10049cfc:	781b      	ldrb	r3, [r3, #0]
10049cfe:	0018      	movs	r0, r3
10049d00:	2303      	movs	r3, #3
10049d02:	4003      	ands	r3, r0
10049d04:	00db      	lsls	r3, r3, #3
10049d06:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
10049d08:	4809      	ldr	r0, [pc, #36]	@ (10049d30 <__NVIC_SetPriority+0xd8>)
10049d0a:	1dfb      	adds	r3, r7, #7
10049d0c:	781b      	ldrb	r3, [r3, #0]
10049d0e:	001c      	movs	r4, r3
10049d10:	230f      	movs	r3, #15
10049d12:	4023      	ands	r3, r4
10049d14:	3b08      	subs	r3, #8
10049d16:	089b      	lsrs	r3, r3, #2
10049d18:	430a      	orrs	r2, r1
10049d1a:	3306      	adds	r3, #6
10049d1c:	009b      	lsls	r3, r3, #2
10049d1e:	18c3      	adds	r3, r0, r3
10049d20:	3304      	adds	r3, #4
10049d22:	601a      	str	r2, [r3, #0]
}
10049d24:	46c0      	nop			@ (mov r8, r8)
10049d26:	46bd      	mov	sp, r7
10049d28:	b003      	add	sp, #12
10049d2a:	bd90      	pop	{r4, r7, pc}
10049d2c:	e000e100 	.word	0xe000e100
10049d30:	e000ed00 	.word	0xe000ed00

10049d34 <__NVIC_SystemReset>:
{
10049d34:	b580      	push	{r7, lr}
10049d36:	af00      	add	r7, sp, #0
  __ASM volatile ("dsb 0xF":::"memory");
10049d38:	f3bf 8f4f 	dsb	sy
}
10049d3c:	46c0      	nop			@ (mov r8, r8)
  SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
10049d3e:	4b04      	ldr	r3, [pc, #16]	@ (10049d50 <__NVIC_SystemReset+0x1c>)
10049d40:	4a04      	ldr	r2, [pc, #16]	@ (10049d54 <__NVIC_SystemReset+0x20>)
10049d42:	60da      	str	r2, [r3, #12]
  __ASM volatile ("dsb 0xF":::"memory");
10049d44:	f3bf 8f4f 	dsb	sy
}
10049d48:	46c0      	nop			@ (mov r8, r8)
    __NOP();
10049d4a:	46c0      	nop			@ (mov r8, r8)
10049d4c:	e7fd      	b.n	10049d4a <__NVIC_SystemReset+0x16>
10049d4e:	46c0      	nop			@ (mov r8, r8)
10049d50:	e000ed00 	.word	0xe000ed00
10049d54:	05fa0004 	.word	0x05fa0004

10049d58 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
10049d58:	b580      	push	{r7, lr}
10049d5a:	b082      	sub	sp, #8
10049d5c:	af00      	add	r7, sp, #0
10049d5e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
10049d60:	687b      	ldr	r3, [r7, #4]
10049d62:	1e5a      	subs	r2, r3, #1
10049d64:	2380      	movs	r3, #128	@ 0x80
10049d66:	045b      	lsls	r3, r3, #17
10049d68:	429a      	cmp	r2, r3
10049d6a:	d301      	bcc.n	10049d70 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
10049d6c:	2301      	movs	r3, #1
10049d6e:	e010      	b.n	10049d92 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
10049d70:	4b0a      	ldr	r3, [pc, #40]	@ (10049d9c <SysTick_Config+0x44>)
10049d72:	687a      	ldr	r2, [r7, #4]
10049d74:	3a01      	subs	r2, #1
10049d76:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
10049d78:	2301      	movs	r3, #1
10049d7a:	425b      	negs	r3, r3
10049d7c:	2103      	movs	r1, #3
10049d7e:	0018      	movs	r0, r3
10049d80:	f7ff ff6a 	bl	10049c58 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
10049d84:	4b05      	ldr	r3, [pc, #20]	@ (10049d9c <SysTick_Config+0x44>)
10049d86:	2200      	movs	r2, #0
10049d88:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
10049d8a:	4b04      	ldr	r3, [pc, #16]	@ (10049d9c <SysTick_Config+0x44>)
10049d8c:	2207      	movs	r2, #7
10049d8e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
10049d90:	2300      	movs	r3, #0
}
10049d92:	0018      	movs	r0, r3
10049d94:	46bd      	mov	sp, r7
10049d96:	b002      	add	sp, #8
10049d98:	bd80      	pop	{r7, pc}
10049d9a:	46c0      	nop			@ (mov r8, r8)
10049d9c:	e000e010 	.word	0xe000e010

10049da0 <HAL_NVIC_SetPriority>:
  *         with stm32wb0x devices, this parameter is a dummy value and it is ignored, because
  *         no subpriority supported in Cortex M0+ based products.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
10049da0:	b580      	push	{r7, lr}
10049da2:	b084      	sub	sp, #16
10049da4:	af00      	add	r7, sp, #0
10049da6:	60b9      	str	r1, [r7, #8]
10049da8:	607a      	str	r2, [r7, #4]
10049daa:	210f      	movs	r1, #15
10049dac:	187b      	adds	r3, r7, r1
10049dae:	1c02      	adds	r2, r0, #0
10049db0:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn, PreemptPriority);
10049db2:	68ba      	ldr	r2, [r7, #8]
10049db4:	187b      	adds	r3, r7, r1
10049db6:	781b      	ldrb	r3, [r3, #0]
10049db8:	b25b      	sxtb	r3, r3
10049dba:	0011      	movs	r1, r2
10049dbc:	0018      	movs	r0, r3
10049dbe:	f7ff ff4b 	bl	10049c58 <__NVIC_SetPriority>
}
10049dc2:	46c0      	nop			@ (mov r8, r8)
10049dc4:	46bd      	mov	sp, r7
10049dc6:	b004      	add	sp, #16
10049dc8:	bd80      	pop	{r7, pc}

10049dca <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file)
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
10049dca:	b580      	push	{r7, lr}
10049dcc:	b082      	sub	sp, #8
10049dce:	af00      	add	r7, sp, #0
10049dd0:	0002      	movs	r2, r0
10049dd2:	1dfb      	adds	r3, r7, #7
10049dd4:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
10049dd6:	1dfb      	adds	r3, r7, #7
10049dd8:	781b      	ldrb	r3, [r3, #0]
10049dda:	b25b      	sxtb	r3, r3
10049ddc:	0018      	movs	r0, r3
10049dde:	f7ff ff21 	bl	10049c24 <__NVIC_EnableIRQ>
}
10049de2:	46c0      	nop			@ (mov r8, r8)
10049de4:	46bd      	mov	sp, r7
10049de6:	b002      	add	sp, #8
10049de8:	bd80      	pop	{r7, pc}

10049dea <HAL_NVIC_SystemReset>:
/**
  * @brief  Initiate a system reset request to reset the MCU.
  * @retval None
  */
void HAL_NVIC_SystemReset(void)
{
10049dea:	b580      	push	{r7, lr}
10049dec:	af00      	add	r7, sp, #0
  /* System Reset */
  NVIC_SystemReset();
10049dee:	f7ff ffa1 	bl	10049d34 <__NVIC_SystemReset>

10049df2 <HAL_SYSTICK_Config>:
  * @param TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
10049df2:	b580      	push	{r7, lr}
10049df4:	b082      	sub	sp, #8
10049df6:	af00      	add	r7, sp, #0
10049df8:	6078      	str	r0, [r7, #4]
  return SysTick_Config(TicksNumb);
10049dfa:	687b      	ldr	r3, [r7, #4]
10049dfc:	0018      	movs	r0, r3
10049dfe:	f7ff ffab 	bl	10049d58 <SysTick_Config>
10049e02:	0003      	movs	r3, r0
}
10049e04:	0018      	movs	r0, r3
10049e06:	46bd      	mov	sp, r7
10049e08:	b002      	add	sp, #8
10049e0a:	bd80      	pop	{r7, pc}

10049e0c <HAL_FLASH_Program>:
  *                are stored the data for the burst program.
  *
  * @retval HAL_StatusTypeDef HAL Status
  */
HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint32_t Data)
{
10049e0c:	b5b0      	push	{r4, r5, r7, lr}
10049e0e:	b086      	sub	sp, #24
10049e10:	af00      	add	r7, sp, #0
10049e12:	60f8      	str	r0, [r7, #12]
10049e14:	60b9      	str	r1, [r7, #8]
10049e16:	607a      	str	r2, [r7, #4]
  assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
  assert_param(IS_ADDR_ALIGNED_32BITS(Address));
  assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));

  /* Process Locked */
  __HAL_LOCK(&pFlash);
10049e18:	4b1d      	ldr	r3, [pc, #116]	@ (10049e90 <HAL_FLASH_Program+0x84>)
10049e1a:	781b      	ldrb	r3, [r3, #0]
10049e1c:	2b01      	cmp	r3, #1
10049e1e:	d101      	bne.n	10049e24 <HAL_FLASH_Program+0x18>
10049e20:	2302      	movs	r3, #2
10049e22:	e031      	b.n	10049e88 <HAL_FLASH_Program+0x7c>
10049e24:	4b1a      	ldr	r3, [pc, #104]	@ (10049e90 <HAL_FLASH_Program+0x84>)
10049e26:	2201      	movs	r2, #1
10049e28:	701a      	strb	r2, [r3, #0]

  /* Reset error code */
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
10049e2a:	4b19      	ldr	r3, [pc, #100]	@ (10049e90 <HAL_FLASH_Program+0x84>)
10049e2c:	2200      	movs	r2, #0
10049e2e:	605a      	str	r2, [r3, #4]

  /* Verify that next operation can be proceed */
  status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
10049e30:	2517      	movs	r5, #23
10049e32:	197c      	adds	r4, r7, r5
10049e34:	23fa      	movs	r3, #250	@ 0xfa
10049e36:	009b      	lsls	r3, r3, #2
10049e38:	0018      	movs	r0, r3
10049e3a:	f000 f82b 	bl	10049e94 <FLASH_WaitForLastOperation>
10049e3e:	0003      	movs	r3, r0
10049e40:	7023      	strb	r3, [r4, #0]

  if (status == HAL_OK)
10049e42:	197b      	adds	r3, r7, r5
10049e44:	781b      	ldrb	r3, [r3, #0]
10049e46:	2b00      	cmp	r3, #0
10049e48:	d118      	bne.n	10049e7c <HAL_FLASH_Program+0x70>
  {
    if (TypeProgram == FLASH_TYPEPROGRAM_WORD)
10049e4a:	68fb      	ldr	r3, [r7, #12]
10049e4c:	2b00      	cmp	r3, #0
10049e4e:	d106      	bne.n	10049e5e <HAL_FLASH_Program+0x52>
    {
      /* Check the parameters */
      assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));

      /* Program a word (32-bit) at a specified address */
      FLASH_Program_Word(Address, Data);
10049e50:	687a      	ldr	r2, [r7, #4]
10049e52:	68bb      	ldr	r3, [r7, #8]
10049e54:	0011      	movs	r1, r2
10049e56:	0018      	movs	r0, r3
10049e58:	f000 f856 	bl	10049f08 <FLASH_Program_Word>
10049e5c:	e005      	b.n	10049e6a <HAL_FLASH_Program+0x5e>
    {
      /* Check the parameters */
      assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));

      /* Program 4 word starting from a specified address */
      FLASH_Program_Burst(Address, Data);
10049e5e:	687a      	ldr	r2, [r7, #4]
10049e60:	68bb      	ldr	r3, [r7, #8]
10049e62:	0011      	movs	r1, r2
10049e64:	0018      	movs	r0, r3
10049e66:	f000 f871 	bl	10049f4c <FLASH_Program_Burst>
    }

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
10049e6a:	2317      	movs	r3, #23
10049e6c:	18fc      	adds	r4, r7, r3
10049e6e:	23fa      	movs	r3, #250	@ 0xfa
10049e70:	009b      	lsls	r3, r3, #2
10049e72:	0018      	movs	r0, r3
10049e74:	f000 f80e 	bl	10049e94 <FLASH_WaitForLastOperation>
10049e78:	0003      	movs	r3, r0
10049e7a:	7023      	strb	r3, [r4, #0]

  }

  /* Process Unlocked */
  __HAL_UNLOCK(&pFlash);
10049e7c:	4b04      	ldr	r3, [pc, #16]	@ (10049e90 <HAL_FLASH_Program+0x84>)
10049e7e:	2200      	movs	r2, #0
10049e80:	701a      	strb	r2, [r3, #0]

  /* return status */
  return status;
10049e82:	2317      	movs	r3, #23
10049e84:	18fb      	adds	r3, r7, r3
10049e86:	781b      	ldrb	r3, [r3, #0]
}
10049e88:	0018      	movs	r0, r3
10049e8a:	46bd      	mov	sp, r7
10049e8c:	b006      	add	sp, #24
10049e8e:	bdb0      	pop	{r4, r5, r7, pc}
10049e90:	200006a4 	.word	0x200006a4

10049e94 <FLASH_WaitForLastOperation>:
  * @brief  Wait for a FLASH operation to complete.
  * @param  Timeout Maximum flash operation timeout
  * @retval HAL_StatusTypeDef HAL Status
  */
HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
{
10049e94:	b580      	push	{r7, lr}
10049e96:	b084      	sub	sp, #16
10049e98:	af00      	add	r7, sp, #0
10049e9a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
10049e9c:	f7ff fe8a 	bl	10049bb4 <HAL_GetTick>
10049ea0:	0003      	movs	r3, r0
10049ea2:	60fb      	str	r3, [r7, #12]

  /* Wait for the FLASH operation to complete by polling on CMDDONE flag to be set.
     If the FLASH operation fails, an error flag will be set */
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_CMDDONE) != SET)
10049ea4:	e00c      	b.n	10049ec0 <FLASH_WaitForLastOperation+0x2c>
  {
    if (Timeout != HAL_MAX_DELAY)
10049ea6:	687b      	ldr	r3, [r7, #4]
10049ea8:	3301      	adds	r3, #1
10049eaa:	d009      	beq.n	10049ec0 <FLASH_WaitForLastOperation+0x2c>
    {
      if ((HAL_GetTick() - tickstart) >= Timeout)
10049eac:	f7ff fe82 	bl	10049bb4 <HAL_GetTick>
10049eb0:	0002      	movs	r2, r0
10049eb2:	68fb      	ldr	r3, [r7, #12]
10049eb4:	1ad3      	subs	r3, r2, r3
10049eb6:	687a      	ldr	r2, [r7, #4]
10049eb8:	429a      	cmp	r2, r3
10049eba:	d801      	bhi.n	10049ec0 <FLASH_WaitForLastOperation+0x2c>
      {
        return HAL_TIMEOUT;
10049ebc:	2303      	movs	r3, #3
10049ebe:	e01b      	b.n	10049ef8 <FLASH_WaitForLastOperation+0x64>
  while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_CMDDONE) != SET)
10049ec0:	4b0f      	ldr	r3, [pc, #60]	@ (10049f00 <FLASH_WaitForLastOperation+0x6c>)
10049ec2:	691b      	ldr	r3, [r3, #16]
10049ec4:	2201      	movs	r2, #1
10049ec6:	4013      	ands	r3, r2
10049ec8:	2b01      	cmp	r3, #1
10049eca:	d1ec      	bne.n	10049ea6 <FLASH_WaitForLastOperation+0x12>
      }
    }
  }

  /* Check flash errors */
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_ALL_ERRORS))
10049ecc:	4b0c      	ldr	r3, [pc, #48]	@ (10049f00 <FLASH_WaitForLastOperation+0x6c>)
10049ece:	691b      	ldr	r3, [r3, #16]
10049ed0:	220c      	movs	r2, #12
10049ed2:	4013      	ands	r3, r2
10049ed4:	2b0c      	cmp	r3, #12
10049ed6:	d10e      	bne.n	10049ef6 <FLASH_WaitForLastOperation+0x62>
  {
    /* Save the error code */
    pFlash.ErrorCode |= FLASH->IRQSTAT;
10049ed8:	4b09      	ldr	r3, [pc, #36]	@ (10049f00 <FLASH_WaitForLastOperation+0x6c>)
10049eda:	689a      	ldr	r2, [r3, #8]
10049edc:	4b09      	ldr	r3, [pc, #36]	@ (10049f04 <FLASH_WaitForLastOperation+0x70>)
10049ede:	685b      	ldr	r3, [r3, #4]
10049ee0:	431a      	orrs	r2, r3
10049ee2:	4b08      	ldr	r3, [pc, #32]	@ (10049f04 <FLASH_WaitForLastOperation+0x70>)
10049ee4:	605a      	str	r2, [r3, #4]

    /* Clear error flags */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_ALL_ERRORS);
10049ee6:	4b06      	ldr	r3, [pc, #24]	@ (10049f00 <FLASH_WaitForLastOperation+0x6c>)
10049ee8:	691a      	ldr	r2, [r3, #16]
10049eea:	4b05      	ldr	r3, [pc, #20]	@ (10049f00 <FLASH_WaitForLastOperation+0x6c>)
10049eec:	210c      	movs	r1, #12
10049eee:	430a      	orrs	r2, r1
10049ef0:	611a      	str	r2, [r3, #16]

    return HAL_ERROR;
10049ef2:	2301      	movs	r3, #1
10049ef4:	e000      	b.n	10049ef8 <FLASH_WaitForLastOperation+0x64>
  }

  return HAL_OK;
10049ef6:	2300      	movs	r3, #0
}
10049ef8:	0018      	movs	r0, r3
10049efa:	46bd      	mov	sp, r7
10049efc:	b004      	add	sp, #16
10049efe:	bd80      	pop	{r7, pc}
10049f00:	40001000 	.word	0x40001000
10049f04:	200006a4 	.word	0x200006a4

10049f08 <FLASH_Program_Word>:
  * @param  Address Specifies the address to be programmed.
  * @param  Data Specifies the data to be programmed.
  * @retval None
  */
static void FLASH_Program_Word(uint32_t Address, uint32_t Data)
{
10049f08:	b580      	push	{r7, lr}
10049f0a:	b082      	sub	sp, #8
10049f0c:	af00      	add	r7, sp, #0
10049f0e:	6078      	str	r0, [r7, #4]
10049f10:	6039      	str	r1, [r7, #0]
  /* Clear All Flags */
  __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_CMDDONE | FLASH_FLAG_CMDSTART | FLASH_FLAG_CMDERR | FLASH_FLAG_ILLCMD);
10049f12:	4b0c      	ldr	r3, [pc, #48]	@ (10049f44 <FLASH_Program_Word+0x3c>)
10049f14:	691a      	ldr	r2, [r3, #16]
10049f16:	4b0b      	ldr	r3, [pc, #44]	@ (10049f44 <FLASH_Program_Word+0x3c>)
10049f18:	210f      	movs	r1, #15
10049f1a:	430a      	orrs	r2, r1
10049f1c:	611a      	str	r2, [r3, #16]

  /* Load the word address */

  FLASH->ADDRESS = (((Address - FLASH_START_ADDR) >> 2) & FLASH_SIZE_MASK);
10049f1e:	687b      	ldr	r3, [r7, #4]
10049f20:	4a09      	ldr	r2, [pc, #36]	@ (10049f48 <FLASH_Program_Word+0x40>)
10049f22:	4694      	mov	ip, r2
10049f24:	4463      	add	r3, ip
10049f26:	089a      	lsrs	r2, r3, #2
10049f28:	4b06      	ldr	r3, [pc, #24]	@ (10049f44 <FLASH_Program_Word+0x3c>)
10049f2a:	03d2      	lsls	r2, r2, #15
10049f2c:	0bd2      	lsrs	r2, r2, #15
10049f2e:	619a      	str	r2, [r3, #24]

  /* Load the data to program */
  FLASH->DATA0 = Data;
10049f30:	4b04      	ldr	r3, [pc, #16]	@ (10049f44 <FLASH_Program_Word+0x3c>)
10049f32:	683a      	ldr	r2, [r7, #0]
10049f34:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Load the WRITE command */
  FLASH->COMMAND = FLASH_CMD_WRITE;
10049f36:	4b03      	ldr	r3, [pc, #12]	@ (10049f44 <FLASH_Program_Word+0x3c>)
10049f38:	2233      	movs	r2, #51	@ 0x33
10049f3a:	601a      	str	r2, [r3, #0]
}
10049f3c:	46c0      	nop			@ (mov r8, r8)
10049f3e:	46bd      	mov	sp, r7
10049f40:	b002      	add	sp, #8
10049f42:	bd80      	pop	{r7, pc}
10049f44:	40001000 	.word	0x40001000
10049f48:	effc0000 	.word	0xeffc0000

10049f4c <FLASH_Program_Burst>:
  * @param  Address Specifies the address to be programmed.
  * @param  DataAddress Specifies the address where the data are stored.
  * @retval None
  */
static void FLASH_Program_Burst(uint32_t Address, uint32_t DataAddress)
{
10049f4c:	b580      	push	{r7, lr}
10049f4e:	b084      	sub	sp, #16
10049f50:	af00      	add	r7, sp, #0
10049f52:	6078      	str	r0, [r7, #4]
10049f54:	6039      	str	r1, [r7, #0]
  uint32_t *src_addr  = (uint32_t *)DataAddress;
10049f56:	683b      	ldr	r3, [r7, #0]
10049f58:	60fb      	str	r3, [r7, #12]

  /* Clear All Flags */
  __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_CMDDONE | FLASH_FLAG_CMDSTART | FLASH_FLAG_CMDERR | FLASH_FLAG_ILLCMD);
10049f5a:	4b17      	ldr	r3, [pc, #92]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049f5c:	691a      	ldr	r2, [r3, #16]
10049f5e:	4b16      	ldr	r3, [pc, #88]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049f60:	210f      	movs	r1, #15
10049f62:	430a      	orrs	r2, r1
10049f64:	611a      	str	r2, [r3, #16]

  /* Load the word address */
  FLASH->ADDRESS = (((Address - FLASH_START_ADDR) >> 2) & FLASH_SIZE_MASK);
10049f66:	687b      	ldr	r3, [r7, #4]
10049f68:	4a14      	ldr	r2, [pc, #80]	@ (10049fbc <FLASH_Program_Burst+0x70>)
10049f6a:	4694      	mov	ip, r2
10049f6c:	4463      	add	r3, ip
10049f6e:	089a      	lsrs	r2, r3, #2
10049f70:	4b11      	ldr	r3, [pc, #68]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049f72:	03d2      	lsls	r2, r2, #15
10049f74:	0bd2      	lsrs	r2, r2, #15
10049f76:	619a      	str	r2, [r3, #24]
  FLASH->DATA0 = *src_addr;
10049f78:	4a0f      	ldr	r2, [pc, #60]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049f7a:	68fb      	ldr	r3, [r7, #12]
10049f7c:	681b      	ldr	r3, [r3, #0]
10049f7e:	6413      	str	r3, [r2, #64]	@ 0x40
  src_addr = src_addr + 1;
10049f80:	68fb      	ldr	r3, [r7, #12]
10049f82:	3304      	adds	r3, #4
10049f84:	60fb      	str	r3, [r7, #12]
  FLASH->DATA1 = *src_addr;
10049f86:	4a0c      	ldr	r2, [pc, #48]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049f88:	68fb      	ldr	r3, [r7, #12]
10049f8a:	681b      	ldr	r3, [r3, #0]
10049f8c:	6453      	str	r3, [r2, #68]	@ 0x44
  src_addr = src_addr + 1;
10049f8e:	68fb      	ldr	r3, [r7, #12]
10049f90:	3304      	adds	r3, #4
10049f92:	60fb      	str	r3, [r7, #12]
  FLASH->DATA2 = *src_addr;
10049f94:	4a08      	ldr	r2, [pc, #32]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049f96:	68fb      	ldr	r3, [r7, #12]
10049f98:	681b      	ldr	r3, [r3, #0]
10049f9a:	6493      	str	r3, [r2, #72]	@ 0x48
  src_addr = src_addr + 1;
10049f9c:	68fb      	ldr	r3, [r7, #12]
10049f9e:	3304      	adds	r3, #4
10049fa0:	60fb      	str	r3, [r7, #12]
  FLASH->DATA3 = *src_addr;
10049fa2:	4a05      	ldr	r2, [pc, #20]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049fa4:	68fb      	ldr	r3, [r7, #12]
10049fa6:	681b      	ldr	r3, [r3, #0]
10049fa8:	64d3      	str	r3, [r2, #76]	@ 0x4c

  /* Load the BURST WRITE command */
  FLASH->COMMAND = FLASH_CMD_BURSTWRITE;
10049faa:	4b03      	ldr	r3, [pc, #12]	@ (10049fb8 <FLASH_Program_Burst+0x6c>)
10049fac:	22cc      	movs	r2, #204	@ 0xcc
10049fae:	601a      	str	r2, [r3, #0]
}
10049fb0:	46c0      	nop			@ (mov r8, r8)
10049fb2:	46bd      	mov	sp, r7
10049fb4:	b004      	add	sp, #16
10049fb6:	bd80      	pop	{r7, pc}
10049fb8:	40001000 	.word	0x40001000
10049fbc:	effc0000 	.word	0xeffc0000

10049fc0 <HAL_FLASHEx_Erase>:
  *         information on faulty page in case of error (0xFFFFFFFF means that all
  *         the pages have been correctly erased)
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *PageError)
{
10049fc0:	b5b0      	push	{r4, r5, r7, lr}
10049fc2:	b084      	sub	sp, #16
10049fc4:	af00      	add	r7, sp, #0
10049fc6:	6078      	str	r0, [r7, #4]
10049fc8:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_FLASH_TYPE_ERASE(pEraseInit->TypeErase));

  /* Process Locked */
  __HAL_LOCK(&pFlash);
10049fca:	4b27      	ldr	r3, [pc, #156]	@ (1004a068 <HAL_FLASHEx_Erase+0xa8>)
10049fcc:	781b      	ldrb	r3, [r3, #0]
10049fce:	2b01      	cmp	r3, #1
10049fd0:	d101      	bne.n	10049fd6 <HAL_FLASHEx_Erase+0x16>
10049fd2:	2302      	movs	r3, #2
10049fd4:	e043      	b.n	1004a05e <HAL_FLASHEx_Erase+0x9e>
10049fd6:	4b24      	ldr	r3, [pc, #144]	@ (1004a068 <HAL_FLASHEx_Erase+0xa8>)
10049fd8:	2201      	movs	r2, #1
10049fda:	701a      	strb	r2, [r3, #0]

  /* Reset error code */
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
10049fdc:	4b22      	ldr	r3, [pc, #136]	@ (1004a068 <HAL_FLASHEx_Erase+0xa8>)
10049fde:	2200      	movs	r2, #0
10049fe0:	605a      	str	r2, [r3, #4]

  /* Verify that next operation can be proceed */
  if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
10049fe2:	687b      	ldr	r3, [r7, #4]
10049fe4:	681b      	ldr	r3, [r3, #0]
10049fe6:	2bff      	cmp	r3, #255	@ 0xff
10049fe8:	d10b      	bne.n	1004a002 <HAL_FLASHEx_Erase+0x42>
  {
    /* Mass erase to be done */
    FLASH_MassErase();
10049fea:	f000 f83f 	bl	1004a06c <FLASH_MassErase>

    /* Wait for last operation to be completed */
    status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
10049fee:	230f      	movs	r3, #15
10049ff0:	18fc      	adds	r4, r7, r3
10049ff2:	23fa      	movs	r3, #250	@ 0xfa
10049ff4:	009b      	lsls	r3, r3, #2
10049ff6:	0018      	movs	r0, r3
10049ff8:	f7ff ff4c 	bl	10049e94 <FLASH_WaitForLastOperation>
10049ffc:	0003      	movs	r3, r0
10049ffe:	7023      	strb	r3, [r4, #0]
1004a000:	e027      	b.n	1004a052 <HAL_FLASHEx_Erase+0x92>
  }
  else
  {
    /*Initialization of PageError variable*/
    *PageError = 0xFFFFFFFFU;
1004a002:	683b      	ldr	r3, [r7, #0]
1004a004:	2201      	movs	r2, #1
1004a006:	4252      	negs	r2, r2
1004a008:	601a      	str	r2, [r3, #0]

    for (index = pEraseInit->Page; index < (pEraseInit->Page + pEraseInit->NbPages); index++)
1004a00a:	687b      	ldr	r3, [r7, #4]
1004a00c:	685b      	ldr	r3, [r3, #4]
1004a00e:	60bb      	str	r3, [r7, #8]
1004a010:	e017      	b.n	1004a042 <HAL_FLASHEx_Erase+0x82>
    {
      /* Start erase page */
      FLASH_PageErase(index);
1004a012:	68bb      	ldr	r3, [r7, #8]
1004a014:	0018      	movs	r0, r3
1004a016:	f000 f839 	bl	1004a08c <FLASH_PageErase>

      /* Wait for last operation to be completed */
      status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1004a01a:	250f      	movs	r5, #15
1004a01c:	197c      	adds	r4, r7, r5
1004a01e:	23fa      	movs	r3, #250	@ 0xfa
1004a020:	009b      	lsls	r3, r3, #2
1004a022:	0018      	movs	r0, r3
1004a024:	f7ff ff36 	bl	10049e94 <FLASH_WaitForLastOperation>
1004a028:	0003      	movs	r3, r0
1004a02a:	7023      	strb	r3, [r4, #0]

      if (status != HAL_OK)
1004a02c:	197b      	adds	r3, r7, r5
1004a02e:	781b      	ldrb	r3, [r3, #0]
1004a030:	2b00      	cmp	r3, #0
1004a032:	d003      	beq.n	1004a03c <HAL_FLASHEx_Erase+0x7c>
      {
        /* In case of error, stop erase procedure and return the faulty address */
        *PageError = index;
1004a034:	683b      	ldr	r3, [r7, #0]
1004a036:	68ba      	ldr	r2, [r7, #8]
1004a038:	601a      	str	r2, [r3, #0]
        break;
1004a03a:	e00a      	b.n	1004a052 <HAL_FLASHEx_Erase+0x92>
    for (index = pEraseInit->Page; index < (pEraseInit->Page + pEraseInit->NbPages); index++)
1004a03c:	68bb      	ldr	r3, [r7, #8]
1004a03e:	3301      	adds	r3, #1
1004a040:	60bb      	str	r3, [r7, #8]
1004a042:	687b      	ldr	r3, [r7, #4]
1004a044:	685a      	ldr	r2, [r3, #4]
1004a046:	687b      	ldr	r3, [r7, #4]
1004a048:	689b      	ldr	r3, [r3, #8]
1004a04a:	18d3      	adds	r3, r2, r3
1004a04c:	68ba      	ldr	r2, [r7, #8]
1004a04e:	429a      	cmp	r2, r3
1004a050:	d3df      	bcc.n	1004a012 <HAL_FLASHEx_Erase+0x52>
      }
    }
  }

  /* Process Unlocked */
  __HAL_UNLOCK(&pFlash);
1004a052:	4b05      	ldr	r3, [pc, #20]	@ (1004a068 <HAL_FLASHEx_Erase+0xa8>)
1004a054:	2200      	movs	r2, #0
1004a056:	701a      	strb	r2, [r3, #0]

  return status;
1004a058:	230f      	movs	r3, #15
1004a05a:	18fb      	adds	r3, r7, r3
1004a05c:	781b      	ldrb	r3, [r3, #0]
}
1004a05e:	0018      	movs	r0, r3
1004a060:	46bd      	mov	sp, r7
1004a062:	b004      	add	sp, #16
1004a064:	bdb0      	pop	{r4, r5, r7, pc}
1004a066:	46c0      	nop			@ (mov r8, r8)
1004a068:	200006a4 	.word	0x200006a4

1004a06c <FLASH_MassErase>:
/**
  * @brief  Mass erase of FLASH memory.
  * @retval None
  */
static void FLASH_MassErase(void)
{
1004a06c:	b580      	push	{r7, lr}
1004a06e:	af00      	add	r7, sp, #0
  /* Clear All Flags */
  __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_CMDDONE | FLASH_FLAG_CMDSTART | FLASH_FLAG_CMDERR | FLASH_FLAG_ILLCMD);
1004a070:	4b05      	ldr	r3, [pc, #20]	@ (1004a088 <FLASH_MassErase+0x1c>)
1004a072:	691a      	ldr	r2, [r3, #16]
1004a074:	4b04      	ldr	r3, [pc, #16]	@ (1004a088 <FLASH_MassErase+0x1c>)
1004a076:	210f      	movs	r1, #15
1004a078:	430a      	orrs	r2, r1
1004a07a:	611a      	str	r2, [r3, #16]

  /* MASSERASE command */
  FLASH->COMMAND = FLASH_CMD_MASSERASE;
1004a07c:	4b02      	ldr	r3, [pc, #8]	@ (1004a088 <FLASH_MassErase+0x1c>)
1004a07e:	2222      	movs	r2, #34	@ 0x22
1004a080:	601a      	str	r2, [r3, #0]
}
1004a082:	46c0      	nop			@ (mov r8, r8)
1004a084:	46bd      	mov	sp, r7
1004a086:	bd80      	pop	{r7, pc}
1004a088:	40001000 	.word	0x40001000

1004a08c <FLASH_PageErase>:
  * @param  Page FLASH page to erase
  *         This parameter must be a value between 0 and (max number of pages in Flash - 1)
  * @retval None
  */
void FLASH_PageErase(uint32_t Page)
{
1004a08c:	b580      	push	{r7, lr}
1004a08e:	b082      	sub	sp, #8
1004a090:	af00      	add	r7, sp, #0
1004a092:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_FLASH_PAGE(Page));

  /* Clear All Flags */
  __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_CMDDONE | FLASH_FLAG_CMDSTART | FLASH_FLAG_CMDERR | FLASH_FLAG_ILLCMD);
1004a094:	4b09      	ldr	r3, [pc, #36]	@ (1004a0bc <FLASH_PageErase+0x30>)
1004a096:	691a      	ldr	r2, [r3, #16]
1004a098:	4b08      	ldr	r3, [pc, #32]	@ (1004a0bc <FLASH_PageErase+0x30>)
1004a09a:	210f      	movs	r1, #15
1004a09c:	430a      	orrs	r2, r1
1004a09e:	611a      	str	r2, [r3, #16]

  FLASH->ADDRESS = (((Page * FLASH_PAGE_SIZE) >> 2) & FLASH_SIZE_MASK);
1004a0a0:	687b      	ldr	r3, [r7, #4]
1004a0a2:	02db      	lsls	r3, r3, #11
1004a0a4:	089a      	lsrs	r2, r3, #2
1004a0a6:	4b05      	ldr	r3, [pc, #20]	@ (1004a0bc <FLASH_PageErase+0x30>)
1004a0a8:	03d2      	lsls	r2, r2, #15
1004a0aa:	0bd2      	lsrs	r2, r2, #15
1004a0ac:	619a      	str	r2, [r3, #24]

  /* Write the ERASE command */
  FLASH->COMMAND = FLASH_CMD_ERASE_PAGES;
1004a0ae:	4b03      	ldr	r3, [pc, #12]	@ (1004a0bc <FLASH_PageErase+0x30>)
1004a0b0:	2211      	movs	r2, #17
1004a0b2:	601a      	str	r2, [r3, #0]
}
1004a0b4:	46c0      	nop			@ (mov r8, r8)
1004a0b6:	46bd      	mov	sp, r7
1004a0b8:	b002      	add	sp, #8
1004a0ba:	bd80      	pop	{r7, pc}
1004a0bc:	40001000 	.word	0x40001000

1004a0c0 <HAL_GPIO_Init>:
  * @param GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
1004a0c0:	b580      	push	{r7, lr}
1004a0c2:	b086      	sub	sp, #24
1004a0c4:	af00      	add	r7, sp, #0
1004a0c6:	6078      	str	r0, [r7, #4]
1004a0c8:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
1004a0ca:	2300      	movs	r3, #0
1004a0cc:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
1004a0ce:	e194      	b.n	1004a3fa <HAL_GPIO_Init+0x33a>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
1004a0d0:	683b      	ldr	r3, [r7, #0]
1004a0d2:	681b      	ldr	r3, [r3, #0]
1004a0d4:	2101      	movs	r1, #1
1004a0d6:	697a      	ldr	r2, [r7, #20]
1004a0d8:	4091      	lsls	r1, r2
1004a0da:	000a      	movs	r2, r1
1004a0dc:	4013      	ands	r3, r2
1004a0de:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
1004a0e0:	68fb      	ldr	r3, [r7, #12]
1004a0e2:	2b00      	cmp	r3, #0
1004a0e4:	d100      	bne.n	1004a0e8 <HAL_GPIO_Init+0x28>
1004a0e6:	e185      	b.n	1004a3f4 <HAL_GPIO_Init+0x334>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
1004a0e8:	683b      	ldr	r3, [r7, #0]
1004a0ea:	685b      	ldr	r3, [r3, #4]
1004a0ec:	2203      	movs	r2, #3
1004a0ee:	4013      	ands	r3, r2
1004a0f0:	2b01      	cmp	r3, #1
1004a0f2:	d005      	beq.n	1004a100 <HAL_GPIO_Init+0x40>
1004a0f4:	683b      	ldr	r3, [r7, #0]
1004a0f6:	685b      	ldr	r3, [r3, #4]
1004a0f8:	2203      	movs	r2, #3
1004a0fa:	4013      	ands	r3, r2
1004a0fc:	2b02      	cmp	r3, #2
1004a0fe:	d130      	bne.n	1004a162 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
1004a100:	687b      	ldr	r3, [r7, #4]
1004a102:	689b      	ldr	r3, [r3, #8]
1004a104:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
1004a106:	697b      	ldr	r3, [r7, #20]
1004a108:	005b      	lsls	r3, r3, #1
1004a10a:	2203      	movs	r2, #3
1004a10c:	409a      	lsls	r2, r3
1004a10e:	0013      	movs	r3, r2
1004a110:	43da      	mvns	r2, r3
1004a112:	693b      	ldr	r3, [r7, #16]
1004a114:	4013      	ands	r3, r2
1004a116:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
1004a118:	683b      	ldr	r3, [r7, #0]
1004a11a:	68da      	ldr	r2, [r3, #12]
1004a11c:	697b      	ldr	r3, [r7, #20]
1004a11e:	005b      	lsls	r3, r3, #1
1004a120:	409a      	lsls	r2, r3
1004a122:	0013      	movs	r3, r2
1004a124:	693a      	ldr	r2, [r7, #16]
1004a126:	4313      	orrs	r3, r2
1004a128:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
1004a12a:	687b      	ldr	r3, [r7, #4]
1004a12c:	693a      	ldr	r2, [r7, #16]
1004a12e:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
1004a130:	687b      	ldr	r3, [r7, #4]
1004a132:	685b      	ldr	r3, [r3, #4]
1004a134:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
1004a136:	2201      	movs	r2, #1
1004a138:	697b      	ldr	r3, [r7, #20]
1004a13a:	409a      	lsls	r2, r3
1004a13c:	0013      	movs	r3, r2
1004a13e:	43da      	mvns	r2, r3
1004a140:	693b      	ldr	r3, [r7, #16]
1004a142:	4013      	ands	r3, r2
1004a144:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
1004a146:	683b      	ldr	r3, [r7, #0]
1004a148:	685b      	ldr	r3, [r3, #4]
1004a14a:	091b      	lsrs	r3, r3, #4
1004a14c:	2201      	movs	r2, #1
1004a14e:	401a      	ands	r2, r3
1004a150:	697b      	ldr	r3, [r7, #20]
1004a152:	409a      	lsls	r2, r3
1004a154:	0013      	movs	r3, r2
1004a156:	693a      	ldr	r2, [r7, #16]
1004a158:	4313      	orrs	r3, r2
1004a15a:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
1004a15c:	687b      	ldr	r3, [r7, #4]
1004a15e:	693a      	ldr	r2, [r7, #16]
1004a160:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
1004a162:	683b      	ldr	r3, [r7, #0]
1004a164:	685b      	ldr	r3, [r3, #4]
1004a166:	2203      	movs	r2, #3
1004a168:	4013      	ands	r3, r2
1004a16a:	2b03      	cmp	r3, #3
1004a16c:	d017      	beq.n	1004a19e <HAL_GPIO_Init+0xde>
      {
        temp = GPIOx->PUPDR;
1004a16e:	687b      	ldr	r3, [r7, #4]
1004a170:	68db      	ldr	r3, [r3, #12]
1004a172:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
1004a174:	697b      	ldr	r3, [r7, #20]
1004a176:	005b      	lsls	r3, r3, #1
1004a178:	2203      	movs	r2, #3
1004a17a:	409a      	lsls	r2, r3
1004a17c:	0013      	movs	r3, r2
1004a17e:	43da      	mvns	r2, r3
1004a180:	693b      	ldr	r3, [r7, #16]
1004a182:	4013      	ands	r3, r2
1004a184:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
1004a186:	683b      	ldr	r3, [r7, #0]
1004a188:	689a      	ldr	r2, [r3, #8]
1004a18a:	697b      	ldr	r3, [r7, #20]
1004a18c:	005b      	lsls	r3, r3, #1
1004a18e:	409a      	lsls	r2, r3
1004a190:	0013      	movs	r3, r2
1004a192:	693a      	ldr	r2, [r7, #16]
1004a194:	4313      	orrs	r3, r2
1004a196:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
1004a198:	687b      	ldr	r3, [r7, #4]
1004a19a:	693a      	ldr	r2, [r7, #16]
1004a19c:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
1004a19e:	683b      	ldr	r3, [r7, #0]
1004a1a0:	685b      	ldr	r3, [r3, #4]
1004a1a2:	2203      	movs	r2, #3
1004a1a4:	4013      	ands	r3, r2
1004a1a6:	2b02      	cmp	r3, #2
1004a1a8:	d123      	bne.n	1004a1f2 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
1004a1aa:	697b      	ldr	r3, [r7, #20]
1004a1ac:	08da      	lsrs	r2, r3, #3
1004a1ae:	687b      	ldr	r3, [r7, #4]
1004a1b0:	3208      	adds	r2, #8
1004a1b2:	0092      	lsls	r2, r2, #2
1004a1b4:	58d3      	ldr	r3, [r2, r3]
1004a1b6:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
1004a1b8:	697b      	ldr	r3, [r7, #20]
1004a1ba:	2207      	movs	r2, #7
1004a1bc:	4013      	ands	r3, r2
1004a1be:	009b      	lsls	r3, r3, #2
1004a1c0:	220f      	movs	r2, #15
1004a1c2:	409a      	lsls	r2, r3
1004a1c4:	0013      	movs	r3, r2
1004a1c6:	43da      	mvns	r2, r3
1004a1c8:	693b      	ldr	r3, [r7, #16]
1004a1ca:	4013      	ands	r3, r2
1004a1cc:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
1004a1ce:	683b      	ldr	r3, [r7, #0]
1004a1d0:	691a      	ldr	r2, [r3, #16]
1004a1d2:	697b      	ldr	r3, [r7, #20]
1004a1d4:	2107      	movs	r1, #7
1004a1d6:	400b      	ands	r3, r1
1004a1d8:	009b      	lsls	r3, r3, #2
1004a1da:	409a      	lsls	r2, r3
1004a1dc:	0013      	movs	r3, r2
1004a1de:	693a      	ldr	r2, [r7, #16]
1004a1e0:	4313      	orrs	r3, r2
1004a1e2:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
1004a1e4:	697b      	ldr	r3, [r7, #20]
1004a1e6:	08da      	lsrs	r2, r3, #3
1004a1e8:	687b      	ldr	r3, [r7, #4]
1004a1ea:	3208      	adds	r2, #8
1004a1ec:	0092      	lsls	r2, r2, #2
1004a1ee:	6939      	ldr	r1, [r7, #16]
1004a1f0:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
1004a1f2:	687b      	ldr	r3, [r7, #4]
1004a1f4:	681b      	ldr	r3, [r3, #0]
1004a1f6:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
1004a1f8:	697b      	ldr	r3, [r7, #20]
1004a1fa:	005b      	lsls	r3, r3, #1
1004a1fc:	2203      	movs	r2, #3
1004a1fe:	409a      	lsls	r2, r3
1004a200:	0013      	movs	r3, r2
1004a202:	43da      	mvns	r2, r3
1004a204:	693b      	ldr	r3, [r7, #16]
1004a206:	4013      	ands	r3, r2
1004a208:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
1004a20a:	683b      	ldr	r3, [r7, #0]
1004a20c:	685b      	ldr	r3, [r3, #4]
1004a20e:	2203      	movs	r2, #3
1004a210:	401a      	ands	r2, r3
1004a212:	697b      	ldr	r3, [r7, #20]
1004a214:	005b      	lsls	r3, r3, #1
1004a216:	409a      	lsls	r2, r3
1004a218:	0013      	movs	r3, r2
1004a21a:	693a      	ldr	r2, [r7, #16]
1004a21c:	4313      	orrs	r3, r2
1004a21e:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
1004a220:	687b      	ldr	r3, [r7, #4]
1004a222:	693a      	ldr	r2, [r7, #16]
1004a224:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
1004a226:	683b      	ldr	r3, [r7, #0]
1004a228:	685a      	ldr	r2, [r3, #4]
1004a22a:	23c0      	movs	r3, #192	@ 0xc0
1004a22c:	029b      	lsls	r3, r3, #10
1004a22e:	4013      	ands	r3, r2
1004a230:	d100      	bne.n	1004a234 <HAL_GPIO_Init+0x174>
1004a232:	e0df      	b.n	1004a3f4 <HAL_GPIO_Init+0x334>
      {

        /* Edge/Level line configuration */
        if ((GPIO_Init->Mode & DETECTION_TYPE) != 0x00u)
1004a234:	683b      	ldr	r3, [r7, #0]
1004a236:	685a      	ldr	r2, [r3, #4]
1004a238:	2380      	movs	r3, #128	@ 0x80
1004a23a:	02db      	lsls	r3, r3, #11
1004a23c:	4013      	ands	r3, r2
1004a23e:	d031      	beq.n	1004a2a4 <HAL_GPIO_Init+0x1e4>
        {
          temp = SYSCFG->IO_DTR;
1004a240:	2380      	movs	r3, #128	@ 0x80
1004a242:	05db      	lsls	r3, r3, #23
1004a244:	68db      	ldr	r3, [r3, #12]
1004a246:	613b      	str	r3, [r7, #16]
          if (GPIOx == GPIOA)
1004a248:	687a      	ldr	r2, [r7, #4]
1004a24a:	2390      	movs	r3, #144	@ 0x90
1004a24c:	05db      	lsls	r3, r3, #23
1004a24e:	429a      	cmp	r2, r3
1004a250:	d111      	bne.n	1004a276 <HAL_GPIO_Init+0x1b6>
          {
            temp &= ~(1 << position);
1004a252:	2201      	movs	r2, #1
1004a254:	697b      	ldr	r3, [r7, #20]
1004a256:	409a      	lsls	r2, r3
1004a258:	0013      	movs	r3, r2
1004a25a:	43db      	mvns	r3, r3
1004a25c:	001a      	movs	r2, r3
1004a25e:	693b      	ldr	r3, [r7, #16]
1004a260:	4013      	ands	r3, r2
1004a262:	613b      	str	r3, [r7, #16]
            temp |= (1 << position);
1004a264:	2201      	movs	r2, #1
1004a266:	697b      	ldr	r3, [r7, #20]
1004a268:	409a      	lsls	r2, r3
1004a26a:	0013      	movs	r3, r2
1004a26c:	001a      	movs	r2, r3
1004a26e:	693b      	ldr	r3, [r7, #16]
1004a270:	4313      	orrs	r3, r2
1004a272:	613b      	str	r3, [r7, #16]
1004a274:	e012      	b.n	1004a29c <HAL_GPIO_Init+0x1dc>
          }
          else
          {
            temp &= ~((1 << position) << 16);
1004a276:	2201      	movs	r2, #1
1004a278:	697b      	ldr	r3, [r7, #20]
1004a27a:	409a      	lsls	r2, r3
1004a27c:	0013      	movs	r3, r2
1004a27e:	041b      	lsls	r3, r3, #16
1004a280:	43db      	mvns	r3, r3
1004a282:	001a      	movs	r2, r3
1004a284:	693b      	ldr	r3, [r7, #16]
1004a286:	4013      	ands	r3, r2
1004a288:	613b      	str	r3, [r7, #16]
            temp |= ((1 << position) << 16);
1004a28a:	2201      	movs	r2, #1
1004a28c:	697b      	ldr	r3, [r7, #20]
1004a28e:	409a      	lsls	r2, r3
1004a290:	0013      	movs	r3, r2
1004a292:	041b      	lsls	r3, r3, #16
1004a294:	001a      	movs	r2, r3
1004a296:	693b      	ldr	r3, [r7, #16]
1004a298:	4313      	orrs	r3, r2
1004a29a:	613b      	str	r3, [r7, #16]
          }
          SYSCFG->IO_DTR = temp;
1004a29c:	2380      	movs	r3, #128	@ 0x80
1004a29e:	05db      	lsls	r3, r3, #23
1004a2a0:	693a      	ldr	r2, [r7, #16]
1004a2a2:	60da      	str	r2, [r3, #12]
        }

		/* Edge selection configuration */
		if ((GPIO_Init->Mode & EDGE_SELECTION) != 0x00u)
1004a2a4:	683b      	ldr	r3, [r7, #0]
1004a2a6:	685a      	ldr	r2, [r3, #4]
1004a2a8:	2380      	movs	r3, #128	@ 0x80
1004a2aa:	035b      	lsls	r3, r3, #13
1004a2ac:	4013      	ands	r3, r2
1004a2ae:	d031      	beq.n	1004a314 <HAL_GPIO_Init+0x254>
        {
          temp = SYSCFG->IO_IBER;
1004a2b0:	2380      	movs	r3, #128	@ 0x80
1004a2b2:	05db      	lsls	r3, r3, #23
1004a2b4:	691b      	ldr	r3, [r3, #16]
1004a2b6:	613b      	str	r3, [r7, #16]

          if (GPIOx == GPIOA)
1004a2b8:	687a      	ldr	r2, [r7, #4]
1004a2ba:	2390      	movs	r3, #144	@ 0x90
1004a2bc:	05db      	lsls	r3, r3, #23
1004a2be:	429a      	cmp	r2, r3
1004a2c0:	d111      	bne.n	1004a2e6 <HAL_GPIO_Init+0x226>
          {
            temp &= ~(1 << position);
1004a2c2:	2201      	movs	r2, #1
1004a2c4:	697b      	ldr	r3, [r7, #20]
1004a2c6:	409a      	lsls	r2, r3
1004a2c8:	0013      	movs	r3, r2
1004a2ca:	43db      	mvns	r3, r3
1004a2cc:	001a      	movs	r2, r3
1004a2ce:	693b      	ldr	r3, [r7, #16]
1004a2d0:	4013      	ands	r3, r2
1004a2d2:	613b      	str	r3, [r7, #16]
            temp |= (1 << position);
1004a2d4:	2201      	movs	r2, #1
1004a2d6:	697b      	ldr	r3, [r7, #20]
1004a2d8:	409a      	lsls	r2, r3
1004a2da:	0013      	movs	r3, r2
1004a2dc:	001a      	movs	r2, r3
1004a2de:	693b      	ldr	r3, [r7, #16]
1004a2e0:	4313      	orrs	r3, r2
1004a2e2:	613b      	str	r3, [r7, #16]
1004a2e4:	e012      	b.n	1004a30c <HAL_GPIO_Init+0x24c>
          }
          else
          {
            temp &= ~((1 << position) << 16);
1004a2e6:	2201      	movs	r2, #1
1004a2e8:	697b      	ldr	r3, [r7, #20]
1004a2ea:	409a      	lsls	r2, r3
1004a2ec:	0013      	movs	r3, r2
1004a2ee:	041b      	lsls	r3, r3, #16
1004a2f0:	43db      	mvns	r3, r3
1004a2f2:	001a      	movs	r2, r3
1004a2f4:	693b      	ldr	r3, [r7, #16]
1004a2f6:	4013      	ands	r3, r2
1004a2f8:	613b      	str	r3, [r7, #16]
            temp |= ((1 << position) << 16);
1004a2fa:	2201      	movs	r2, #1
1004a2fc:	697b      	ldr	r3, [r7, #20]
1004a2fe:	409a      	lsls	r2, r3
1004a300:	0013      	movs	r3, r2
1004a302:	041b      	lsls	r3, r3, #16
1004a304:	001a      	movs	r2, r3
1004a306:	693b      	ldr	r3, [r7, #16]
1004a308:	4313      	orrs	r3, r2
1004a30a:	613b      	str	r3, [r7, #16]
          }
          SYSCFG->IO_IBER= temp;
1004a30c:	2380      	movs	r3, #128	@ 0x80
1004a30e:	05db      	lsls	r3, r3, #23
1004a310:	693a      	ldr	r2, [r7, #16]
1004a312:	611a      	str	r2, [r3, #16]
        }

        /* Trigger mode configuration */
		if ((GPIO_Init->Mode & TRIGGER_MODE) != 0x00u)
1004a314:	683b      	ldr	r3, [r7, #0]
1004a316:	685a      	ldr	r2, [r3, #4]
1004a318:	2380      	movs	r3, #128	@ 0x80
1004a31a:	03db      	lsls	r3, r3, #15
1004a31c:	4013      	ands	r3, r2
1004a31e:	d031      	beq.n	1004a384 <HAL_GPIO_Init+0x2c4>
        {
          temp = SYSCFG->IO_IEVR;
1004a320:	2380      	movs	r3, #128	@ 0x80
1004a322:	05db      	lsls	r3, r3, #23
1004a324:	695b      	ldr	r3, [r3, #20]
1004a326:	613b      	str	r3, [r7, #16]

          if (GPIOx == GPIOA)
1004a328:	687a      	ldr	r2, [r7, #4]
1004a32a:	2390      	movs	r3, #144	@ 0x90
1004a32c:	05db      	lsls	r3, r3, #23
1004a32e:	429a      	cmp	r2, r3
1004a330:	d111      	bne.n	1004a356 <HAL_GPIO_Init+0x296>
          {
            temp &= ~(1 << position);
1004a332:	2201      	movs	r2, #1
1004a334:	697b      	ldr	r3, [r7, #20]
1004a336:	409a      	lsls	r2, r3
1004a338:	0013      	movs	r3, r2
1004a33a:	43db      	mvns	r3, r3
1004a33c:	001a      	movs	r2, r3
1004a33e:	693b      	ldr	r3, [r7, #16]
1004a340:	4013      	ands	r3, r2
1004a342:	613b      	str	r3, [r7, #16]
            temp |= (1 << position);
1004a344:	2201      	movs	r2, #1
1004a346:	697b      	ldr	r3, [r7, #20]
1004a348:	409a      	lsls	r2, r3
1004a34a:	0013      	movs	r3, r2
1004a34c:	001a      	movs	r2, r3
1004a34e:	693b      	ldr	r3, [r7, #16]
1004a350:	4313      	orrs	r3, r2
1004a352:	613b      	str	r3, [r7, #16]
1004a354:	e012      	b.n	1004a37c <HAL_GPIO_Init+0x2bc>
          }
          else
          {
            temp &= ~((1 << position) << 16);
1004a356:	2201      	movs	r2, #1
1004a358:	697b      	ldr	r3, [r7, #20]
1004a35a:	409a      	lsls	r2, r3
1004a35c:	0013      	movs	r3, r2
1004a35e:	041b      	lsls	r3, r3, #16
1004a360:	43db      	mvns	r3, r3
1004a362:	001a      	movs	r2, r3
1004a364:	693b      	ldr	r3, [r7, #16]
1004a366:	4013      	ands	r3, r2
1004a368:	613b      	str	r3, [r7, #16]
            temp |= ((1 << position) << 16);
1004a36a:	2201      	movs	r2, #1
1004a36c:	697b      	ldr	r3, [r7, #20]
1004a36e:	409a      	lsls	r2, r3
1004a370:	0013      	movs	r3, r2
1004a372:	041b      	lsls	r3, r3, #16
1004a374:	001a      	movs	r2, r3
1004a376:	693b      	ldr	r3, [r7, #16]
1004a378:	4313      	orrs	r3, r2
1004a37a:	613b      	str	r3, [r7, #16]
          }
          SYSCFG->IO_IEVR= temp;
1004a37c:	2380      	movs	r3, #128	@ 0x80
1004a37e:	05db      	lsls	r3, r3, #23
1004a380:	693a      	ldr	r2, [r7, #16]
1004a382:	615a      	str	r2, [r3, #20]
        }

        /* Enable the specified EXTI interrupt line */
        if ((GPIO_Init->Mode & EXTI_IT) == EXTI_IT)
1004a384:	683b      	ldr	r3, [r7, #0]
1004a386:	685a      	ldr	r2, [r3, #4]
1004a388:	2380      	movs	r3, #128	@ 0x80
1004a38a:	025b      	lsls	r3, r3, #9
1004a38c:	4013      	ands	r3, r2
1004a38e:	d031      	beq.n	1004a3f4 <HAL_GPIO_Init+0x334>
        {
          temp = SYSCFG->IO_IER;
1004a390:	2380      	movs	r3, #128	@ 0x80
1004a392:	05db      	lsls	r3, r3, #23
1004a394:	699b      	ldr	r3, [r3, #24]
1004a396:	613b      	str	r3, [r7, #16]

          if (GPIOx == GPIOA)
1004a398:	687a      	ldr	r2, [r7, #4]
1004a39a:	2390      	movs	r3, #144	@ 0x90
1004a39c:	05db      	lsls	r3, r3, #23
1004a39e:	429a      	cmp	r2, r3
1004a3a0:	d111      	bne.n	1004a3c6 <HAL_GPIO_Init+0x306>
          {
            temp &= ~(1 << position);
1004a3a2:	2201      	movs	r2, #1
1004a3a4:	697b      	ldr	r3, [r7, #20]
1004a3a6:	409a      	lsls	r2, r3
1004a3a8:	0013      	movs	r3, r2
1004a3aa:	43db      	mvns	r3, r3
1004a3ac:	001a      	movs	r2, r3
1004a3ae:	693b      	ldr	r3, [r7, #16]
1004a3b0:	4013      	ands	r3, r2
1004a3b2:	613b      	str	r3, [r7, #16]
            temp |= (1 << position);
1004a3b4:	2201      	movs	r2, #1
1004a3b6:	697b      	ldr	r3, [r7, #20]
1004a3b8:	409a      	lsls	r2, r3
1004a3ba:	0013      	movs	r3, r2
1004a3bc:	001a      	movs	r2, r3
1004a3be:	693b      	ldr	r3, [r7, #16]
1004a3c0:	4313      	orrs	r3, r2
1004a3c2:	613b      	str	r3, [r7, #16]
1004a3c4:	e012      	b.n	1004a3ec <HAL_GPIO_Init+0x32c>
          }
          else
          {
            temp &= ~((1 << position) << 16);
1004a3c6:	2201      	movs	r2, #1
1004a3c8:	697b      	ldr	r3, [r7, #20]
1004a3ca:	409a      	lsls	r2, r3
1004a3cc:	0013      	movs	r3, r2
1004a3ce:	041b      	lsls	r3, r3, #16
1004a3d0:	43db      	mvns	r3, r3
1004a3d2:	001a      	movs	r2, r3
1004a3d4:	693b      	ldr	r3, [r7, #16]
1004a3d6:	4013      	ands	r3, r2
1004a3d8:	613b      	str	r3, [r7, #16]
            temp |= ((1 << position) << 16);
1004a3da:	2201      	movs	r2, #1
1004a3dc:	697b      	ldr	r3, [r7, #20]
1004a3de:	409a      	lsls	r2, r3
1004a3e0:	0013      	movs	r3, r2
1004a3e2:	041b      	lsls	r3, r3, #16
1004a3e4:	001a      	movs	r2, r3
1004a3e6:	693b      	ldr	r3, [r7, #16]
1004a3e8:	4313      	orrs	r3, r2
1004a3ea:	613b      	str	r3, [r7, #16]
          }
          SYSCFG->IO_IER= temp;
1004a3ec:	2380      	movs	r3, #128	@ 0x80
1004a3ee:	05db      	lsls	r3, r3, #23
1004a3f0:	693a      	ldr	r2, [r7, #16]
1004a3f2:	619a      	str	r2, [r3, #24]
        }
      }
    }

    position++;
1004a3f4:	697b      	ldr	r3, [r7, #20]
1004a3f6:	3301      	adds	r3, #1
1004a3f8:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
1004a3fa:	683b      	ldr	r3, [r7, #0]
1004a3fc:	681a      	ldr	r2, [r3, #0]
1004a3fe:	697b      	ldr	r3, [r7, #20]
1004a400:	40da      	lsrs	r2, r3
1004a402:	1e13      	subs	r3, r2, #0
1004a404:	d000      	beq.n	1004a408 <HAL_GPIO_Init+0x348>
1004a406:	e663      	b.n	1004a0d0 <HAL_GPIO_Init+0x10>
  }
}
1004a408:	46c0      	nop			@ (mov r8, r8)
1004a40a:	46c0      	nop			@ (mov r8, r8)
1004a40c:	46bd      	mov	sp, r7
1004a40e:	b006      	add	sp, #24
1004a410:	bd80      	pop	{r7, pc}

1004a412 <HAL_GPIO_ReadPin>:
  * @param GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
1004a412:	b580      	push	{r7, lr}
1004a414:	b084      	sub	sp, #16
1004a416:	af00      	add	r7, sp, #0
1004a418:	6078      	str	r0, [r7, #4]
1004a41a:	000a      	movs	r2, r1
1004a41c:	1cbb      	adds	r3, r7, #2
1004a41e:	801a      	strh	r2, [r3, #0]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00u)
1004a420:	687b      	ldr	r3, [r7, #4]
1004a422:	691b      	ldr	r3, [r3, #16]
1004a424:	1cba      	adds	r2, r7, #2
1004a426:	8812      	ldrh	r2, [r2, #0]
1004a428:	4013      	ands	r3, r2
1004a42a:	d004      	beq.n	1004a436 <HAL_GPIO_ReadPin+0x24>
  {
    bitstatus = GPIO_PIN_SET;
1004a42c:	230f      	movs	r3, #15
1004a42e:	18fb      	adds	r3, r7, r3
1004a430:	2201      	movs	r2, #1
1004a432:	701a      	strb	r2, [r3, #0]
1004a434:	e003      	b.n	1004a43e <HAL_GPIO_ReadPin+0x2c>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
1004a436:	230f      	movs	r3, #15
1004a438:	18fb      	adds	r3, r7, r3
1004a43a:	2200      	movs	r2, #0
1004a43c:	701a      	strb	r2, [r3, #0]
  }
  return bitstatus;
1004a43e:	230f      	movs	r3, #15
1004a440:	18fb      	adds	r3, r7, r3
1004a442:	781b      	ldrb	r3, [r3, #0]
}
1004a444:	0018      	movs	r0, r3
1004a446:	46bd      	mov	sp, r7
1004a448:	b004      	add	sp, #16
1004a44a:	bd80      	pop	{r7, pc}

1004a44c <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
1004a44c:	b580      	push	{r7, lr}
1004a44e:	b082      	sub	sp, #8
1004a450:	af00      	add	r7, sp, #0
1004a452:	6078      	str	r0, [r7, #4]
1004a454:	0008      	movs	r0, r1
1004a456:	0011      	movs	r1, r2
1004a458:	1cbb      	adds	r3, r7, #2
1004a45a:	1c02      	adds	r2, r0, #0
1004a45c:	801a      	strh	r2, [r3, #0]
1004a45e:	1c7b      	adds	r3, r7, #1
1004a460:	1c0a      	adds	r2, r1, #0
1004a462:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
1004a464:	1c7b      	adds	r3, r7, #1
1004a466:	781b      	ldrb	r3, [r3, #0]
1004a468:	2b00      	cmp	r3, #0
1004a46a:	d004      	beq.n	1004a476 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
1004a46c:	1cbb      	adds	r3, r7, #2
1004a46e:	881a      	ldrh	r2, [r3, #0]
1004a470:	687b      	ldr	r3, [r7, #4]
1004a472:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
1004a474:	e003      	b.n	1004a47e <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
1004a476:	1cbb      	adds	r3, r7, #2
1004a478:	881a      	ldrh	r2, [r3, #0]
1004a47a:	687b      	ldr	r3, [r7, #4]
1004a47c:	629a      	str	r2, [r3, #40]	@ 0x28
}
1004a47e:	46c0      	nop			@ (mov r8, r8)
1004a480:	46bd      	mov	sp, r7
1004a482:	b002      	add	sp, #8
1004a484:	bd80      	pop	{r7, pc}

1004a486 <HAL_PKA_Init>:
  *         parameters in the PKA_InitTypeDef and initialize the associated handle.
  * @param  hpka PKA handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PKA_Init(PKA_HandleTypeDef *hpka)
{
1004a486:	b580      	push	{r7, lr}
1004a488:	b084      	sub	sp, #16
1004a48a:	af00      	add	r7, sp, #0
1004a48c:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef err = HAL_OK;
1004a48e:	230f      	movs	r3, #15
1004a490:	18fb      	adds	r3, r7, r3
1004a492:	2200      	movs	r2, #0
1004a494:	701a      	strb	r2, [r3, #0]
#if defined (STM32WB05)|| defined(STM32WB09)
  uint32_t tickstart;
#endif /* STM32WB05 || STM32WB09 */
  /* Check the PKA handle allocation */
  if (hpka != NULL)
1004a496:	687b      	ldr	r3, [r7, #4]
1004a498:	2b00      	cmp	r3, #0
1004a49a:	d045      	beq.n	1004a528 <HAL_PKA_Init+0xa2>
  {
    /* Check the parameters */
    assert_param(IS_PKA_ALL_INSTANCE(hpka->Instance));

    if (hpka->State == HAL_PKA_STATE_RESET)
1004a49c:	687b      	ldr	r3, [r7, #4]
1004a49e:	791b      	ldrb	r3, [r3, #4]
1004a4a0:	b2db      	uxtb	r3, r3
1004a4a2:	2b00      	cmp	r3, #0
1004a4a4:	d103      	bne.n	1004a4ae <HAL_PKA_Init+0x28>

      /* Init the low level hardware */
      hpka->MspInitCallback(hpka);
#else
      /* Init the low level hardware */
      HAL_PKA_MspInit(hpka);
1004a4a6:	687b      	ldr	r3, [r7, #4]
1004a4a8:	0018      	movs	r0, r3
1004a4aa:	f7f7 fdfb 	bl	100420a4 <HAL_PKA_MspInit>
#endif /* USE_HAL_PKA_REGISTER_CALLBACKS */
    }
#if defined (STM32WB05)|| defined(STM32WB09)
    /* Get current tick */
    tickstart = HAL_GetTick();
1004a4ae:	f7ff fb81 	bl	10049bb4 <HAL_GetTick>
1004a4b2:	0003      	movs	r3, r0
1004a4b4:	60bb      	str	r3, [r7, #8]
#endif /* STM32WB05 || STM32WB09 */
    /* Set the state to busy */
    hpka->State = HAL_PKA_STATE_BUSY;
1004a4b6:	687b      	ldr	r3, [r7, #4]
1004a4b8:	2202      	movs	r2, #2
1004a4ba:	711a      	strb	r2, [r3, #4]
    SET_BIT(hpka->Instance->CSR, PKA_CSR_SFT_RST);
    CLEAR_BIT(hpka->Instance->CSR, PKA_CSR_SFT_RST);
#endif /* STM32WB06 || STM32WB07 */
#if defined (STM32WB05)|| defined(STM32WB09)

    while ((hpka->Instance->CR & PKA_CR_EN) != PKA_CR_EN)
1004a4bc:	e011      	b.n	1004a4e2 <HAL_PKA_Init+0x5c>
    {
      hpka->Instance->CR = PKA_CR_EN;
1004a4be:	687b      	ldr	r3, [r7, #4]
1004a4c0:	681b      	ldr	r3, [r3, #0]
1004a4c2:	2201      	movs	r2, #1
1004a4c4:	601a      	str	r2, [r3, #0]

      /* Check the Timeout */
      if ((HAL_GetTick() - tickstart) > PKA_RAM_ERASE_TIMEOUT)
1004a4c6:	f7ff fb75 	bl	10049bb4 <HAL_GetTick>
1004a4ca:	0002      	movs	r2, r0
1004a4cc:	68bb      	ldr	r3, [r7, #8]
1004a4ce:	1ad2      	subs	r2, r2, r3
1004a4d0:	23fa      	movs	r3, #250	@ 0xfa
1004a4d2:	009b      	lsls	r3, r3, #2
1004a4d4:	429a      	cmp	r2, r3
1004a4d6:	d904      	bls.n	1004a4e2 <HAL_PKA_Init+0x5c>
      {
        /* Set timeout status */
        err = HAL_TIMEOUT;
1004a4d8:	230f      	movs	r3, #15
1004a4da:	18fb      	adds	r3, r7, r3
1004a4dc:	2203      	movs	r2, #3
1004a4de:	701a      	strb	r2, [r3, #0]
        break;
1004a4e0:	e006      	b.n	1004a4f0 <HAL_PKA_Init+0x6a>
    while ((hpka->Instance->CR & PKA_CR_EN) != PKA_CR_EN)
1004a4e2:	687b      	ldr	r3, [r7, #4]
1004a4e4:	681b      	ldr	r3, [r3, #0]
1004a4e6:	681b      	ldr	r3, [r3, #0]
1004a4e8:	2201      	movs	r2, #1
1004a4ea:	4013      	ands	r3, r2
1004a4ec:	2b01      	cmp	r3, #1
1004a4ee:	d1e6      	bne.n	1004a4be <HAL_PKA_Init+0x38>
      }
    }
    if (err == HAL_OK)
1004a4f0:	230f      	movs	r3, #15
1004a4f2:	18fb      	adds	r3, r7, r3
1004a4f4:	781b      	ldrb	r3, [r3, #0]
1004a4f6:	2b00      	cmp	r3, #0
1004a4f8:	d10f      	bne.n	1004a51a <HAL_PKA_Init+0x94>
    {
      /* Reset any pending flag */
      SET_BIT(hpka->Instance->CLRFR, PKA_CLRFR_PROCENDFC | PKA_CLRFR_RAMERRFC | PKA_CLRFR_ADDRERRFC);
1004a4fa:	687b      	ldr	r3, [r7, #4]
1004a4fc:	681b      	ldr	r3, [r3, #0]
1004a4fe:	689a      	ldr	r2, [r3, #8]
1004a500:	687b      	ldr	r3, [r7, #4]
1004a502:	681b      	ldr	r3, [r3, #0]
1004a504:	21d0      	movs	r1, #208	@ 0xd0
1004a506:	0349      	lsls	r1, r1, #13
1004a508:	430a      	orrs	r2, r1
1004a50a:	609a      	str	r2, [r3, #8]

      /* Initialize the error code */
      hpka->ErrorCode = HAL_PKA_ERROR_NONE;
1004a50c:	687b      	ldr	r3, [r7, #4]
1004a50e:	2200      	movs	r2, #0
1004a510:	609a      	str	r2, [r3, #8]

      /* Set the state to ready */
      hpka->State = HAL_PKA_STATE_READY;
1004a512:	687b      	ldr	r3, [r7, #4]
1004a514:	2201      	movs	r2, #1
1004a516:	711a      	strb	r2, [r3, #4]
1004a518:	e00a      	b.n	1004a530 <HAL_PKA_Init+0xaa>
    }
    else
    {
      /* Set the error code to timeout error */
      hpka->ErrorCode = HAL_PKA_ERROR_TIMEOUT;
1004a51a:	687b      	ldr	r3, [r7, #4]
1004a51c:	2204      	movs	r2, #4
1004a51e:	609a      	str	r2, [r3, #8]

      /* Set the state to error */
      hpka->State = HAL_PKA_STATE_ERROR;
1004a520:	687b      	ldr	r3, [r7, #4]
1004a522:	2203      	movs	r2, #3
1004a524:	711a      	strb	r2, [r3, #4]
1004a526:	e003      	b.n	1004a530 <HAL_PKA_Init+0xaa>
#endif /* STM32WB06 || STM32WB07 */

  }
  else
  {
    err = HAL_ERROR;
1004a528:	230f      	movs	r3, #15
1004a52a:	18fb      	adds	r3, r7, r3
1004a52c:	2201      	movs	r2, #1
1004a52e:	701a      	strb	r2, [r3, #0]
  }

  return err;
1004a530:	230f      	movs	r3, #15
1004a532:	18fb      	adds	r3, r7, r3
1004a534:	781b      	ldrb	r3, [r3, #0]
}
1004a536:	0018      	movs	r0, r3
1004a538:	46bd      	mov	sp, r7
1004a53a:	b004      	add	sp, #16
1004a53c:	bd80      	pop	{r7, pc}
	...

1004a540 <HAL_PKA_IRQHandler>:
  * @brief  This function handles PKA event interrupt request.
  * @param  hpka PKA handle
  * @retval None
  */
void HAL_PKA_IRQHandler(PKA_HandleTypeDef *hpka)
{
1004a540:	b580      	push	{r7, lr}
1004a542:	b086      	sub	sp, #24
1004a544:	af00      	add	r7, sp, #0
1004a546:	6078      	str	r0, [r7, #4]
#if defined (STM32WB06) || defined(STM32WB07)
  uint32_t itsource = READ_REG(hpka->Instance->IEN);
  uint32_t flag  =    READ_REG(hpka->Instance->ISR);
#endif /* STM32WB06 || STM32WB07 */
#if defined (STM32WB05)|| defined(STM32WB09)
  uint32_t mode = PKA_GetMode(hpka);
1004a548:	687b      	ldr	r3, [r7, #4]
1004a54a:	0018      	movs	r0, r3
1004a54c:	f000 f86a 	bl	1004a624 <PKA_GetMode>
1004a550:	0003      	movs	r3, r0
1004a552:	617b      	str	r3, [r7, #20]
  uint32_t itsource = READ_REG(hpka->Instance->CR);
1004a554:	687b      	ldr	r3, [r7, #4]
1004a556:	681b      	ldr	r3, [r3, #0]
1004a558:	681b      	ldr	r3, [r3, #0]
1004a55a:	613b      	str	r3, [r7, #16]
  uint32_t flag  =   READ_REG(hpka->Instance->SR);
1004a55c:	687b      	ldr	r3, [r7, #4]
1004a55e:	681b      	ldr	r3, [r3, #0]
1004a560:	685b      	ldr	r3, [r3, #4]
1004a562:	60fb      	str	r3, [r7, #12]
#endif /* STM32WB05 || STM32WB09 */

  /* Address error interrupt occurred */
  if (((itsource & PKA_IT_ADDRERR) == PKA_IT_ADDRERR) && ((flag & PKA_FLAG_ADDRERR) == PKA_FLAG_ADDRERR))
1004a564:	693a      	ldr	r2, [r7, #16]
1004a566:	2380      	movs	r3, #128	@ 0x80
1004a568:	035b      	lsls	r3, r3, #13
1004a56a:	4013      	ands	r3, r2
1004a56c:	d00f      	beq.n	1004a58e <HAL_PKA_IRQHandler+0x4e>
1004a56e:	68fa      	ldr	r2, [r7, #12]
1004a570:	2380      	movs	r3, #128	@ 0x80
1004a572:	035b      	lsls	r3, r3, #13
1004a574:	4013      	ands	r3, r2
1004a576:	d00a      	beq.n	1004a58e <HAL_PKA_IRQHandler+0x4e>
  {
    hpka->ErrorCode |= HAL_PKA_ERROR_ADDRERR;
1004a578:	687b      	ldr	r3, [r7, #4]
1004a57a:	689b      	ldr	r3, [r3, #8]
1004a57c:	2201      	movs	r2, #1
1004a57e:	431a      	orrs	r2, r3
1004a580:	687b      	ldr	r3, [r7, #4]
1004a582:	609a      	str	r2, [r3, #8]

    /* Clear ADDRERR flag */
    __HAL_PKA_CLEAR_FLAG(hpka, PKA_FLAG_ADDRERR);
1004a584:	687b      	ldr	r3, [r7, #4]
1004a586:	681b      	ldr	r3, [r3, #0]
1004a588:	2280      	movs	r2, #128	@ 0x80
1004a58a:	0352      	lsls	r2, r2, #13
1004a58c:	609a      	str	r2, [r3, #8]
  }

  /* RAM access error interrupt occurred */
  if (((itsource & PKA_IT_RAMERR) == PKA_IT_RAMERR) && ((flag & PKA_FLAG_RAMERR) == PKA_FLAG_RAMERR))
1004a58e:	693a      	ldr	r2, [r7, #16]
1004a590:	2380      	movs	r3, #128	@ 0x80
1004a592:	031b      	lsls	r3, r3, #12
1004a594:	4013      	ands	r3, r2
1004a596:	d00f      	beq.n	1004a5b8 <HAL_PKA_IRQHandler+0x78>
1004a598:	68fa      	ldr	r2, [r7, #12]
1004a59a:	2380      	movs	r3, #128	@ 0x80
1004a59c:	031b      	lsls	r3, r3, #12
1004a59e:	4013      	ands	r3, r2
1004a5a0:	d00a      	beq.n	1004a5b8 <HAL_PKA_IRQHandler+0x78>
  {
    hpka->ErrorCode |= HAL_PKA_ERROR_RAMERR;
1004a5a2:	687b      	ldr	r3, [r7, #4]
1004a5a4:	689b      	ldr	r3, [r3, #8]
1004a5a6:	2202      	movs	r2, #2
1004a5a8:	431a      	orrs	r2, r3
1004a5aa:	687b      	ldr	r3, [r7, #4]
1004a5ac:	609a      	str	r2, [r3, #8]

    /* Clear RAMERR flag */
    __HAL_PKA_CLEAR_FLAG(hpka, PKA_FLAG_RAMERR);
1004a5ae:	687b      	ldr	r3, [r7, #4]
1004a5b0:	681b      	ldr	r3, [r3, #0]
1004a5b2:	2280      	movs	r2, #128	@ 0x80
1004a5b4:	0312      	lsls	r2, r2, #12
1004a5b6:	609a      	str	r2, [r3, #8]
    }
  }
#endif /* STM32WB05 */
#if defined (STM32WB09)
  /* Check the operation success in case of ECDSA signature */
  if (mode == PKA_MODE_ECDSA_SIGNATURE)
1004a5b8:	697b      	ldr	r3, [r7, #20]
1004a5ba:	2b24      	cmp	r3, #36	@ 0x24
1004a5bc:	d10d      	bne.n	1004a5da <HAL_PKA_IRQHandler+0x9a>
  {
    /* If error output result is different from 0xD60D, ecdsa sign operation need to be repeated */
    if (hpka->Instance->RAM[PKA_ECDSA_SIGN_OUT_ERROR] != 0xD60DUL)
1004a5be:	687b      	ldr	r3, [r7, #4]
1004a5c0:	681a      	ldr	r2, [r3, #0]
1004a5c2:	23f8      	movs	r3, #248	@ 0xf8
1004a5c4:	011b      	lsls	r3, r3, #4
1004a5c6:	58d3      	ldr	r3, [r2, r3]
1004a5c8:	4a15      	ldr	r2, [pc, #84]	@ (1004a620 <HAL_PKA_IRQHandler+0xe0>)
1004a5ca:	4293      	cmp	r3, r2
1004a5cc:	d005      	beq.n	1004a5da <HAL_PKA_IRQHandler+0x9a>
    {
      hpka->ErrorCode |= HAL_PKA_ERROR_OPERATION;
1004a5ce:	687b      	ldr	r3, [r7, #4]
1004a5d0:	689b      	ldr	r3, [r3, #8]
1004a5d2:	2208      	movs	r2, #8
1004a5d4:	431a      	orrs	r2, r3
1004a5d6:	687b      	ldr	r3, [r7, #4]
1004a5d8:	609a      	str	r2, [r3, #8]
    }
  }
#endif /* STM32WB09 */

  /* Trigger the error callback if an error is present */
  if (hpka->ErrorCode != HAL_PKA_ERROR_NONE)
1004a5da:	687b      	ldr	r3, [r7, #4]
1004a5dc:	689b      	ldr	r3, [r3, #8]
1004a5de:	2b00      	cmp	r3, #0
1004a5e0:	d003      	beq.n	1004a5ea <HAL_PKA_IRQHandler+0xaa>
  {
#if (USE_HAL_PKA_REGISTER_CALLBACKS == 1)
    hpka->ErrorCallback(hpka);
#else
    HAL_PKA_ErrorCallback(hpka);
1004a5e2:	687b      	ldr	r3, [r7, #4]
1004a5e4:	0018      	movs	r0, r3
1004a5e6:	f7fc fbad 	bl	10046d44 <HAL_PKA_ErrorCallback>
#endif /* USE_HAL_PKA_REGISTER_CALLBACKS */
  }

  /* End Of Operation interrupt occurred */
  if (((itsource & PKA_IT_PROCEND) == PKA_IT_PROCEND) && ((flag & PKA_FLAG_PROCEND) == PKA_FLAG_PROCEND))
1004a5ea:	693a      	ldr	r2, [r7, #16]
1004a5ec:	2380      	movs	r3, #128	@ 0x80
1004a5ee:	029b      	lsls	r3, r3, #10
1004a5f0:	4013      	ands	r3, r2
1004a5f2:	d010      	beq.n	1004a616 <HAL_PKA_IRQHandler+0xd6>
1004a5f4:	68fa      	ldr	r2, [r7, #12]
1004a5f6:	2380      	movs	r3, #128	@ 0x80
1004a5f8:	029b      	lsls	r3, r3, #10
1004a5fa:	4013      	ands	r3, r2
1004a5fc:	d00b      	beq.n	1004a616 <HAL_PKA_IRQHandler+0xd6>
  {
    /* Clear PROCEND flag */
    __HAL_PKA_CLEAR_FLAG(hpka, PKA_FLAG_PROCEND);
1004a5fe:	687b      	ldr	r3, [r7, #4]
1004a600:	681b      	ldr	r3, [r3, #0]
1004a602:	2280      	movs	r2, #128	@ 0x80
1004a604:	0292      	lsls	r2, r2, #10
1004a606:	609a      	str	r2, [r3, #8]

    /* Set the state to ready */
    hpka->State = HAL_PKA_STATE_READY;
1004a608:	687b      	ldr	r3, [r7, #4]
1004a60a:	2201      	movs	r2, #1
1004a60c:	711a      	strb	r2, [r3, #4]

#if (USE_HAL_PKA_REGISTER_CALLBACKS == 1)
    hpka->OperationCpltCallback(hpka);
#else
    HAL_PKA_OperationCpltCallback(hpka);
1004a60e:	687b      	ldr	r3, [r7, #4]
1004a610:	0018      	movs	r0, r3
1004a612:	f7fc fb8b 	bl	10046d2c <HAL_PKA_OperationCpltCallback>
#endif /* USE_HAL_PKA_REGISTER_CALLBACKS */
  }
}
1004a616:	46c0      	nop			@ (mov r8, r8)
1004a618:	46bd      	mov	sp, r7
1004a61a:	b006      	add	sp, #24
1004a61c:	bd80      	pop	{r7, pc}
1004a61e:	46c0      	nop			@ (mov r8, r8)
1004a620:	0000d60d 	.word	0x0000d60d

1004a624 <PKA_GetMode>:
  * @brief  Get PKA operating mode.
  * @param  hpka PKA handle
  * @retval Return the current mode
  */
uint32_t PKA_GetMode(const PKA_HandleTypeDef *hpka)
{
1004a624:	b580      	push	{r7, lr}
1004a626:	b082      	sub	sp, #8
1004a628:	af00      	add	r7, sp, #0
1004a62a:	6078      	str	r0, [r7, #4]
  /* return the shifted PKA_CR_MODE value */
  return (uint32_t)(READ_BIT(hpka->Instance->CR, PKA_CR_MODE) >> PKA_CR_MODE_Pos);
1004a62c:	687b      	ldr	r3, [r7, #4]
1004a62e:	681b      	ldr	r3, [r3, #0]
1004a630:	681b      	ldr	r3, [r3, #0]
1004a632:	0a1b      	lsrs	r3, r3, #8
1004a634:	223f      	movs	r2, #63	@ 0x3f
1004a636:	4013      	ands	r3, r2
}
1004a638:	0018      	movs	r0, r3
1004a63a:	46bd      	mov	sp, r7
1004a63c:	b002      	add	sp, #8
1004a63e:	bd80      	pop	{r7, pc}

1004a640 <HAL_PWREx_EnableGPIOPullUp>:
  *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 or the logical OR
  *         of several of them to setseveral bits for a given port in a single API call.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
{
1004a640:	b580      	push	{r7, lr}
1004a642:	b084      	sub	sp, #16
1004a644:	af00      	add	r7, sp, #0
1004a646:	6078      	str	r0, [r7, #4]
1004a648:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
1004a64a:	230f      	movs	r3, #15
1004a64c:	18fb      	adds	r3, r7, r3
1004a64e:	2200      	movs	r2, #0
1004a650:	701a      	strb	r2, [r3, #0]

  assert_param(IS_PWR_GPIO(GPIO));
  assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));

  switch (GPIO)
1004a652:	687b      	ldr	r3, [r7, #4]
1004a654:	2b00      	cmp	r3, #0
1004a656:	d003      	beq.n	1004a660 <HAL_PWREx_EnableGPIOPullUp+0x20>
1004a658:	687b      	ldr	r3, [r7, #4]
1004a65a:	2b01      	cmp	r3, #1
1004a65c:	d00e      	beq.n	1004a67c <HAL_PWREx_EnableGPIOPullUp+0x3c>
1004a65e:	e01b      	b.n	1004a698 <HAL_PWREx_EnableGPIOPullUp+0x58>
  {
    case PWR_GPIO_A:
      SET_BIT(PWR->PUCRA, GPIONumber);
1004a660:	4b13      	ldr	r3, [pc, #76]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a662:	6a19      	ldr	r1, [r3, #32]
1004a664:	4b12      	ldr	r3, [pc, #72]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a666:	683a      	ldr	r2, [r7, #0]
1004a668:	430a      	orrs	r2, r1
1004a66a:	621a      	str	r2, [r3, #32]
      CLEAR_BIT(PWR->PDCRA, GPIONumber);
1004a66c:	4b10      	ldr	r3, [pc, #64]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a66e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
1004a670:	683b      	ldr	r3, [r7, #0]
1004a672:	43d9      	mvns	r1, r3
1004a674:	4b0e      	ldr	r3, [pc, #56]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a676:	400a      	ands	r2, r1
1004a678:	625a      	str	r2, [r3, #36]	@ 0x24
      break;
1004a67a:	e012      	b.n	1004a6a2 <HAL_PWREx_EnableGPIOPullUp+0x62>
    case PWR_GPIO_B:
      SET_BIT(PWR->PUCRB, GPIONumber);
1004a67c:	4b0c      	ldr	r3, [pc, #48]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a67e:	6a99      	ldr	r1, [r3, #40]	@ 0x28
1004a680:	4b0b      	ldr	r3, [pc, #44]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a682:	683a      	ldr	r2, [r7, #0]
1004a684:	430a      	orrs	r2, r1
1004a686:	629a      	str	r2, [r3, #40]	@ 0x28
      CLEAR_BIT(PWR->PDCRB, GPIONumber);
1004a688:	4b09      	ldr	r3, [pc, #36]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a68a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
1004a68c:	683b      	ldr	r3, [r7, #0]
1004a68e:	43d9      	mvns	r1, r3
1004a690:	4b07      	ldr	r3, [pc, #28]	@ (1004a6b0 <HAL_PWREx_EnableGPIOPullUp+0x70>)
1004a692:	400a      	ands	r2, r1
1004a694:	62da      	str	r2, [r3, #44]	@ 0x2c
      break;
1004a696:	e004      	b.n	1004a6a2 <HAL_PWREx_EnableGPIOPullUp+0x62>
    default:
      status = HAL_ERROR;
1004a698:	230f      	movs	r3, #15
1004a69a:	18fb      	adds	r3, r7, r3
1004a69c:	2201      	movs	r2, #1
1004a69e:	701a      	strb	r2, [r3, #0]
      break;
1004a6a0:	46c0      	nop			@ (mov r8, r8)
  }

  return status;
1004a6a2:	230f      	movs	r3, #15
1004a6a4:	18fb      	adds	r3, r7, r3
1004a6a6:	781b      	ldrb	r3, [r3, #0]
}
1004a6a8:	0018      	movs	r0, r3
1004a6aa:	46bd      	mov	sp, r7
1004a6ac:	b004      	add	sp, #16
1004a6ae:	bd80      	pop	{r7, pc}
1004a6b0:	48500000 	.word	0x48500000

1004a6b4 <HAL_PWREx_EnableGPIOPullDown>:
  *         or the logical OR of several of them to set
  *         several bits for a given port in a single API call.
  * @retval HAL Status
  */
HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
{
1004a6b4:	b580      	push	{r7, lr}
1004a6b6:	b084      	sub	sp, #16
1004a6b8:	af00      	add	r7, sp, #0
1004a6ba:	6078      	str	r0, [r7, #4]
1004a6bc:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
1004a6be:	230f      	movs	r3, #15
1004a6c0:	18fb      	adds	r3, r7, r3
1004a6c2:	2200      	movs	r2, #0
1004a6c4:	701a      	strb	r2, [r3, #0]

  assert_param(IS_PWR_GPIO(GPIO));
  assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));

  switch (GPIO)
1004a6c6:	687b      	ldr	r3, [r7, #4]
1004a6c8:	2b00      	cmp	r3, #0
1004a6ca:	d003      	beq.n	1004a6d4 <HAL_PWREx_EnableGPIOPullDown+0x20>
1004a6cc:	687b      	ldr	r3, [r7, #4]
1004a6ce:	2b01      	cmp	r3, #1
1004a6d0:	d00e      	beq.n	1004a6f0 <HAL_PWREx_EnableGPIOPullDown+0x3c>
1004a6d2:	e01b      	b.n	1004a70c <HAL_PWREx_EnableGPIOPullDown+0x58>
  {
    case PWR_GPIO_A:
      SET_BIT(PWR->PDCRA, GPIONumber);
1004a6d4:	4b13      	ldr	r3, [pc, #76]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a6d6:	6a59      	ldr	r1, [r3, #36]	@ 0x24
1004a6d8:	4b12      	ldr	r3, [pc, #72]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a6da:	683a      	ldr	r2, [r7, #0]
1004a6dc:	430a      	orrs	r2, r1
1004a6de:	625a      	str	r2, [r3, #36]	@ 0x24
      CLEAR_BIT(PWR->PUCRA, GPIONumber);
1004a6e0:	4b10      	ldr	r3, [pc, #64]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a6e2:	6a1a      	ldr	r2, [r3, #32]
1004a6e4:	683b      	ldr	r3, [r7, #0]
1004a6e6:	43d9      	mvns	r1, r3
1004a6e8:	4b0e      	ldr	r3, [pc, #56]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a6ea:	400a      	ands	r2, r1
1004a6ec:	621a      	str	r2, [r3, #32]
      break;
1004a6ee:	e012      	b.n	1004a716 <HAL_PWREx_EnableGPIOPullDown+0x62>
    case PWR_GPIO_B:
      SET_BIT(PWR->PDCRB, GPIONumber);
1004a6f0:	4b0c      	ldr	r3, [pc, #48]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a6f2:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
1004a6f4:	4b0b      	ldr	r3, [pc, #44]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a6f6:	683a      	ldr	r2, [r7, #0]
1004a6f8:	430a      	orrs	r2, r1
1004a6fa:	62da      	str	r2, [r3, #44]	@ 0x2c
      CLEAR_BIT(PWR->PUCRB, GPIONumber);
1004a6fc:	4b09      	ldr	r3, [pc, #36]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a6fe:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
1004a700:	683b      	ldr	r3, [r7, #0]
1004a702:	43d9      	mvns	r1, r3
1004a704:	4b07      	ldr	r3, [pc, #28]	@ (1004a724 <HAL_PWREx_EnableGPIOPullDown+0x70>)
1004a706:	400a      	ands	r2, r1
1004a708:	629a      	str	r2, [r3, #40]	@ 0x28
      break;
1004a70a:	e004      	b.n	1004a716 <HAL_PWREx_EnableGPIOPullDown+0x62>
    default:
      status = HAL_ERROR;
1004a70c:	230f      	movs	r3, #15
1004a70e:	18fb      	adds	r3, r7, r3
1004a710:	2201      	movs	r2, #1
1004a712:	701a      	strb	r2, [r3, #0]
      break;
1004a714:	46c0      	nop			@ (mov r8, r8)
  }

  return status;
1004a716:	230f      	movs	r3, #15
1004a718:	18fb      	adds	r3, r7, r3
1004a71a:	781b      	ldrb	r3, [r3, #0]
}
1004a71c:	0018      	movs	r0, r3
1004a71e:	46bd      	mov	sp, r7
1004a720:	b004      	add	sp, #16
1004a722:	bd80      	pop	{r7, pc}
1004a724:	48500000 	.word	0x48500000

1004a728 <LL_RADIO_SetRadioConfigurationAddressPointer>:
{
1004a728:	b580      	push	{r7, lr}
1004a72a:	b082      	sub	sp, #8
1004a72c:	af00      	add	r7, sp, #0
1004a72e:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD0, GLOBAL_WORD0_RADIOCONFIGPTR, value);
1004a730:	4b04      	ldr	r3, [pc, #16]	@ (1004a744 <LL_RADIO_SetRadioConfigurationAddressPointer+0x1c>)
1004a732:	681b      	ldr	r3, [r3, #0]
1004a734:	4b03      	ldr	r3, [pc, #12]	@ (1004a744 <LL_RADIO_SetRadioConfigurationAddressPointer+0x1c>)
1004a736:	687a      	ldr	r2, [r7, #4]
1004a738:	601a      	str	r2, [r3, #0]
}
1004a73a:	46c0      	nop			@ (mov r8, r8)
1004a73c:	46bd      	mov	sp, r7
1004a73e:	b002      	add	sp, #8
1004a740:	bd80      	pop	{r7, pc}
1004a742:	46c0      	nop			@ (mov r8, r8)
1004a744:	200000c0 	.word	0x200000c0

1004a748 <LL_RADIO_SetWakeupInitDelay>:
{
1004a748:	b580      	push	{r7, lr}
1004a74a:	b082      	sub	sp, #8
1004a74c:	af00      	add	r7, sp, #0
1004a74e:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD1, GLOBAL_WORD1_WAKEUPINITDELAY, value);
1004a750:	4b07      	ldr	r3, [pc, #28]	@ (1004a770 <LL_RADIO_SetWakeupInitDelay+0x28>)
1004a752:	685b      	ldr	r3, [r3, #4]
1004a754:	4a07      	ldr	r2, [pc, #28]	@ (1004a774 <LL_RADIO_SetWakeupInitDelay+0x2c>)
1004a756:	4013      	ands	r3, r2
1004a758:	0019      	movs	r1, r3
1004a75a:	687b      	ldr	r3, [r7, #4]
1004a75c:	021b      	lsls	r3, r3, #8
1004a75e:	041b      	lsls	r3, r3, #16
1004a760:	0c1a      	lsrs	r2, r3, #16
1004a762:	4b03      	ldr	r3, [pc, #12]	@ (1004a770 <LL_RADIO_SetWakeupInitDelay+0x28>)
1004a764:	430a      	orrs	r2, r1
1004a766:	605a      	str	r2, [r3, #4]
}
1004a768:	46c0      	nop			@ (mov r8, r8)
1004a76a:	46bd      	mov	sp, r7
1004a76c:	b002      	add	sp, #8
1004a76e:	bd80      	pop	{r7, pc}
1004a770:	200000c0 	.word	0x200000c0
1004a774:	ffff00ff 	.word	0xffff00ff

1004a778 <LL_RADIO_SetTimer12InitDelayCal>:
{
1004a778:	b580      	push	{r7, lr}
1004a77a:	b082      	sub	sp, #8
1004a77c:	af00      	add	r7, sp, #0
1004a77e:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD1, GLOBAL_WORD1_TIMER12INITDELAYCAL, value);
1004a780:	4b08      	ldr	r3, [pc, #32]	@ (1004a7a4 <LL_RADIO_SetTimer12InitDelayCal+0x2c>)
1004a782:	685b      	ldr	r3, [r3, #4]
1004a784:	4a08      	ldr	r2, [pc, #32]	@ (1004a7a8 <LL_RADIO_SetTimer12InitDelayCal+0x30>)
1004a786:	4013      	ands	r3, r2
1004a788:	0019      	movs	r1, r3
1004a78a:	687b      	ldr	r3, [r7, #4]
1004a78c:	041a      	lsls	r2, r3, #16
1004a78e:	23ff      	movs	r3, #255	@ 0xff
1004a790:	041b      	lsls	r3, r3, #16
1004a792:	401a      	ands	r2, r3
1004a794:	4b03      	ldr	r3, [pc, #12]	@ (1004a7a4 <LL_RADIO_SetTimer12InitDelayCal+0x2c>)
1004a796:	430a      	orrs	r2, r1
1004a798:	605a      	str	r2, [r3, #4]
}
1004a79a:	46c0      	nop			@ (mov r8, r8)
1004a79c:	46bd      	mov	sp, r7
1004a79e:	b002      	add	sp, #8
1004a7a0:	bd80      	pop	{r7, pc}
1004a7a2:	46c0      	nop			@ (mov r8, r8)
1004a7a4:	200000c0 	.word	0x200000c0
1004a7a8:	ff00ffff 	.word	0xff00ffff

1004a7ac <LL_RADIO_SetTimer12InitDelayNoCal>:
{
1004a7ac:	b580      	push	{r7, lr}
1004a7ae:	b082      	sub	sp, #8
1004a7b0:	af00      	add	r7, sp, #0
1004a7b2:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD1, GLOBAL_WORD1_TIMER2INITDELAYNOCAL, value);
1004a7b4:	4b06      	ldr	r3, [pc, #24]	@ (1004a7d0 <LL_RADIO_SetTimer12InitDelayNoCal+0x24>)
1004a7b6:	685b      	ldr	r3, [r3, #4]
1004a7b8:	021b      	lsls	r3, r3, #8
1004a7ba:	0a19      	lsrs	r1, r3, #8
1004a7bc:	687b      	ldr	r3, [r7, #4]
1004a7be:	061a      	lsls	r2, r3, #24
1004a7c0:	4b03      	ldr	r3, [pc, #12]	@ (1004a7d0 <LL_RADIO_SetTimer12InitDelayNoCal+0x24>)
1004a7c2:	430a      	orrs	r2, r1
1004a7c4:	605a      	str	r2, [r3, #4]
}
1004a7c6:	46c0      	nop			@ (mov r8, r8)
1004a7c8:	46bd      	mov	sp, r7
1004a7ca:	b002      	add	sp, #8
1004a7cc:	bd80      	pop	{r7, pc}
1004a7ce:	46c0      	nop			@ (mov r8, r8)
1004a7d0:	200000c0 	.word	0x200000c0

1004a7d4 <LL_RADIO_SetTransmitCalDelayChk>:
{
1004a7d4:	b580      	push	{r7, lr}
1004a7d6:	b082      	sub	sp, #8
1004a7d8:	af00      	add	r7, sp, #0
1004a7da:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD2, GLOBAL_WORD2_TRANSMITCALDELAYCHK, value);
1004a7dc:	4b07      	ldr	r3, [pc, #28]	@ (1004a7fc <LL_RADIO_SetTransmitCalDelayChk+0x28>)
1004a7de:	689b      	ldr	r3, [r3, #8]
1004a7e0:	22ff      	movs	r2, #255	@ 0xff
1004a7e2:	4393      	bics	r3, r2
1004a7e4:	0019      	movs	r1, r3
1004a7e6:	687b      	ldr	r3, [r7, #4]
1004a7e8:	22ff      	movs	r2, #255	@ 0xff
1004a7ea:	401a      	ands	r2, r3
1004a7ec:	4b03      	ldr	r3, [pc, #12]	@ (1004a7fc <LL_RADIO_SetTransmitCalDelayChk+0x28>)
1004a7ee:	430a      	orrs	r2, r1
1004a7f0:	609a      	str	r2, [r3, #8]
}
1004a7f2:	46c0      	nop			@ (mov r8, r8)
1004a7f4:	46bd      	mov	sp, r7
1004a7f6:	b002      	add	sp, #8
1004a7f8:	bd80      	pop	{r7, pc}
1004a7fa:	46c0      	nop			@ (mov r8, r8)
1004a7fc:	200000c0 	.word	0x200000c0

1004a800 <LL_RADIO_SetTransmitNoCalDelayChk>:
{
1004a800:	b580      	push	{r7, lr}
1004a802:	b082      	sub	sp, #8
1004a804:	af00      	add	r7, sp, #0
1004a806:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD2, GLOBAL_WORD2_TRANSMITNOCALDELAYCHK, value);
1004a808:	4b07      	ldr	r3, [pc, #28]	@ (1004a828 <LL_RADIO_SetTransmitNoCalDelayChk+0x28>)
1004a80a:	689b      	ldr	r3, [r3, #8]
1004a80c:	4a07      	ldr	r2, [pc, #28]	@ (1004a82c <LL_RADIO_SetTransmitNoCalDelayChk+0x2c>)
1004a80e:	4013      	ands	r3, r2
1004a810:	0019      	movs	r1, r3
1004a812:	687b      	ldr	r3, [r7, #4]
1004a814:	021b      	lsls	r3, r3, #8
1004a816:	041b      	lsls	r3, r3, #16
1004a818:	0c1a      	lsrs	r2, r3, #16
1004a81a:	4b03      	ldr	r3, [pc, #12]	@ (1004a828 <LL_RADIO_SetTransmitNoCalDelayChk+0x28>)
1004a81c:	430a      	orrs	r2, r1
1004a81e:	609a      	str	r2, [r3, #8]
}
1004a820:	46c0      	nop			@ (mov r8, r8)
1004a822:	46bd      	mov	sp, r7
1004a824:	b002      	add	sp, #8
1004a826:	bd80      	pop	{r7, pc}
1004a828:	200000c0 	.word	0x200000c0
1004a82c:	ffff00ff 	.word	0xffff00ff

1004a830 <LL_RADIO_SetReceivedCalDelayChk>:
{
1004a830:	b580      	push	{r7, lr}
1004a832:	b082      	sub	sp, #8
1004a834:	af00      	add	r7, sp, #0
1004a836:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD2, GLOBAL_WORD2_RECEIVECALDELAYCHK, value);
1004a838:	4b08      	ldr	r3, [pc, #32]	@ (1004a85c <LL_RADIO_SetReceivedCalDelayChk+0x2c>)
1004a83a:	689b      	ldr	r3, [r3, #8]
1004a83c:	4a08      	ldr	r2, [pc, #32]	@ (1004a860 <LL_RADIO_SetReceivedCalDelayChk+0x30>)
1004a83e:	4013      	ands	r3, r2
1004a840:	0019      	movs	r1, r3
1004a842:	687b      	ldr	r3, [r7, #4]
1004a844:	041a      	lsls	r2, r3, #16
1004a846:	23ff      	movs	r3, #255	@ 0xff
1004a848:	041b      	lsls	r3, r3, #16
1004a84a:	401a      	ands	r2, r3
1004a84c:	4b03      	ldr	r3, [pc, #12]	@ (1004a85c <LL_RADIO_SetReceivedCalDelayChk+0x2c>)
1004a84e:	430a      	orrs	r2, r1
1004a850:	609a      	str	r2, [r3, #8]
}
1004a852:	46c0      	nop			@ (mov r8, r8)
1004a854:	46bd      	mov	sp, r7
1004a856:	b002      	add	sp, #8
1004a858:	bd80      	pop	{r7, pc}
1004a85a:	46c0      	nop			@ (mov r8, r8)
1004a85c:	200000c0 	.word	0x200000c0
1004a860:	ff00ffff 	.word	0xff00ffff

1004a864 <LL_RADIO_SetReceivedNoCalDelayChk>:
{
1004a864:	b580      	push	{r7, lr}
1004a866:	b082      	sub	sp, #8
1004a868:	af00      	add	r7, sp, #0
1004a86a:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD2, GLOBAL_WORD2_RECEIVENOCALDELAYCHK, value);
1004a86c:	4b06      	ldr	r3, [pc, #24]	@ (1004a888 <LL_RADIO_SetReceivedNoCalDelayChk+0x24>)
1004a86e:	689b      	ldr	r3, [r3, #8]
1004a870:	021b      	lsls	r3, r3, #8
1004a872:	0a19      	lsrs	r1, r3, #8
1004a874:	687b      	ldr	r3, [r7, #4]
1004a876:	061a      	lsls	r2, r3, #24
1004a878:	4b03      	ldr	r3, [pc, #12]	@ (1004a888 <LL_RADIO_SetReceivedNoCalDelayChk+0x24>)
1004a87a:	430a      	orrs	r2, r1
1004a87c:	609a      	str	r2, [r3, #8]
}
1004a87e:	46c0      	nop			@ (mov r8, r8)
1004a880:	46bd      	mov	sp, r7
1004a882:	b002      	add	sp, #8
1004a884:	bd80      	pop	{r7, pc}
1004a886:	46c0      	nop			@ (mov r8, r8)
1004a888:	200000c0 	.word	0x200000c0

1004a88c <LL_RADIO_SetConfigurationEndDuration>:
{
1004a88c:	b580      	push	{r7, lr}
1004a88e:	b082      	sub	sp, #8
1004a890:	af00      	add	r7, sp, #0
1004a892:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD3, GLOBAL_WORD3_CONFIGENDDURATION, value);
1004a894:	4b07      	ldr	r3, [pc, #28]	@ (1004a8b4 <LL_RADIO_SetConfigurationEndDuration+0x28>)
1004a896:	68db      	ldr	r3, [r3, #12]
1004a898:	22ff      	movs	r2, #255	@ 0xff
1004a89a:	4393      	bics	r3, r2
1004a89c:	0019      	movs	r1, r3
1004a89e:	687b      	ldr	r3, [r7, #4]
1004a8a0:	22ff      	movs	r2, #255	@ 0xff
1004a8a2:	401a      	ands	r2, r3
1004a8a4:	4b03      	ldr	r3, [pc, #12]	@ (1004a8b4 <LL_RADIO_SetConfigurationEndDuration+0x28>)
1004a8a6:	430a      	orrs	r2, r1
1004a8a8:	60da      	str	r2, [r3, #12]
}
1004a8aa:	46c0      	nop			@ (mov r8, r8)
1004a8ac:	46bd      	mov	sp, r7
1004a8ae:	b002      	add	sp, #8
1004a8b0:	bd80      	pop	{r7, pc}
1004a8b2:	46c0      	nop			@ (mov r8, r8)
1004a8b4:	200000c0 	.word	0x200000c0

1004a8b8 <LL_RADIO_SetTxDataReadyCheck>:
{
1004a8b8:	b580      	push	{r7, lr}
1004a8ba:	b082      	sub	sp, #8
1004a8bc:	af00      	add	r7, sp, #0
1004a8be:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD3, GLOBAL_WORD3_TXDATAREADYCHECK, value);
1004a8c0:	4b07      	ldr	r3, [pc, #28]	@ (1004a8e0 <LL_RADIO_SetTxDataReadyCheck+0x28>)
1004a8c2:	68db      	ldr	r3, [r3, #12]
1004a8c4:	4a07      	ldr	r2, [pc, #28]	@ (1004a8e4 <LL_RADIO_SetTxDataReadyCheck+0x2c>)
1004a8c6:	4013      	ands	r3, r2
1004a8c8:	0019      	movs	r1, r3
1004a8ca:	687b      	ldr	r3, [r7, #4]
1004a8cc:	021b      	lsls	r3, r3, #8
1004a8ce:	041b      	lsls	r3, r3, #16
1004a8d0:	0c1a      	lsrs	r2, r3, #16
1004a8d2:	4b03      	ldr	r3, [pc, #12]	@ (1004a8e0 <LL_RADIO_SetTxDataReadyCheck+0x28>)
1004a8d4:	430a      	orrs	r2, r1
1004a8d6:	60da      	str	r2, [r3, #12]
}
1004a8d8:	46c0      	nop			@ (mov r8, r8)
1004a8da:	46bd      	mov	sp, r7
1004a8dc:	b002      	add	sp, #8
1004a8de:	bd80      	pop	{r7, pc}
1004a8e0:	200000c0 	.word	0x200000c0
1004a8e4:	ffff00ff 	.word	0xffff00ff

1004a8e8 <LL_RADIO_SetTxDelayStart>:
{
1004a8e8:	b580      	push	{r7, lr}
1004a8ea:	b082      	sub	sp, #8
1004a8ec:	af00      	add	r7, sp, #0
1004a8ee:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD3, GLOBAL_WORD3_TXDELAYSTART, value);
1004a8f0:	4b08      	ldr	r3, [pc, #32]	@ (1004a914 <LL_RADIO_SetTxDelayStart+0x2c>)
1004a8f2:	68db      	ldr	r3, [r3, #12]
1004a8f4:	4a08      	ldr	r2, [pc, #32]	@ (1004a918 <LL_RADIO_SetTxDelayStart+0x30>)
1004a8f6:	4013      	ands	r3, r2
1004a8f8:	0019      	movs	r1, r3
1004a8fa:	687b      	ldr	r3, [r7, #4]
1004a8fc:	041a      	lsls	r2, r3, #16
1004a8fe:	23ff      	movs	r3, #255	@ 0xff
1004a900:	041b      	lsls	r3, r3, #16
1004a902:	401a      	ands	r2, r3
1004a904:	4b03      	ldr	r3, [pc, #12]	@ (1004a914 <LL_RADIO_SetTxDelayStart+0x2c>)
1004a906:	430a      	orrs	r2, r1
1004a908:	60da      	str	r2, [r3, #12]
}
1004a90a:	46c0      	nop			@ (mov r8, r8)
1004a90c:	46bd      	mov	sp, r7
1004a90e:	b002      	add	sp, #8
1004a910:	bd80      	pop	{r7, pc}
1004a912:	46c0      	nop			@ (mov r8, r8)
1004a914:	200000c0 	.word	0x200000c0
1004a918:	ff00ffff 	.word	0xff00ffff

1004a91c <LL_RADIO_SetTxDelayEnd>:
{
1004a91c:	b580      	push	{r7, lr}
1004a91e:	b082      	sub	sp, #8
1004a920:	af00      	add	r7, sp, #0
1004a922:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD3, GLOBAL_WORD3_TXDELAYEND, value);
1004a924:	4b08      	ldr	r3, [pc, #32]	@ (1004a948 <LL_RADIO_SetTxDelayEnd+0x2c>)
1004a926:	68db      	ldr	r3, [r3, #12]
1004a928:	4a08      	ldr	r2, [pc, #32]	@ (1004a94c <LL_RADIO_SetTxDelayEnd+0x30>)
1004a92a:	4013      	ands	r3, r2
1004a92c:	0019      	movs	r1, r3
1004a92e:	687b      	ldr	r3, [r7, #4]
1004a930:	061a      	lsls	r2, r3, #24
1004a932:	23fc      	movs	r3, #252	@ 0xfc
1004a934:	059b      	lsls	r3, r3, #22
1004a936:	401a      	ands	r2, r3
1004a938:	4b03      	ldr	r3, [pc, #12]	@ (1004a948 <LL_RADIO_SetTxDelayEnd+0x2c>)
1004a93a:	430a      	orrs	r2, r1
1004a93c:	60da      	str	r2, [r3, #12]
}
1004a93e:	46c0      	nop			@ (mov r8, r8)
1004a940:	46bd      	mov	sp, r7
1004a942:	b002      	add	sp, #8
1004a944:	bd80      	pop	{r7, pc}
1004a946:	46c0      	nop			@ (mov r8, r8)
1004a948:	200000c0 	.word	0x200000c0
1004a94c:	c0ffffff 	.word	0xc0ffffff

1004a950 <LL_RADIO_SetTransmissionReadyTimeout>:
{
1004a950:	b580      	push	{r7, lr}
1004a952:	b082      	sub	sp, #8
1004a954:	af00      	add	r7, sp, #0
1004a956:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD4, GLOBAL_WORD4_TXREADYTIMEOUT, value);
1004a958:	4b07      	ldr	r3, [pc, #28]	@ (1004a978 <LL_RADIO_SetTransmissionReadyTimeout+0x28>)
1004a95a:	691b      	ldr	r3, [r3, #16]
1004a95c:	22ff      	movs	r2, #255	@ 0xff
1004a95e:	4393      	bics	r3, r2
1004a960:	0019      	movs	r1, r3
1004a962:	687b      	ldr	r3, [r7, #4]
1004a964:	22ff      	movs	r2, #255	@ 0xff
1004a966:	401a      	ands	r2, r3
1004a968:	4b03      	ldr	r3, [pc, #12]	@ (1004a978 <LL_RADIO_SetTransmissionReadyTimeout+0x28>)
1004a96a:	430a      	orrs	r2, r1
1004a96c:	611a      	str	r2, [r3, #16]
}
1004a96e:	46c0      	nop			@ (mov r8, r8)
1004a970:	46bd      	mov	sp, r7
1004a972:	b002      	add	sp, #8
1004a974:	bd80      	pop	{r7, pc}
1004a976:	46c0      	nop			@ (mov r8, r8)
1004a978:	200000c0 	.word	0x200000c0

1004a97c <LL_RADIO_ChkFlagAutoclearEnable_Enable>:
{
1004a97c:	b580      	push	{r7, lr}
1004a97e:	af00      	add	r7, sp, #0
  SET_BIT(BLUEGLOBWORD->WORD5, GLOBAL_WORD5_CHKFLAGAUTOCLEARENA);
1004a980:	4b04      	ldr	r3, [pc, #16]	@ (1004a994 <LL_RADIO_ChkFlagAutoclearEnable_Enable+0x18>)
1004a982:	695a      	ldr	r2, [r3, #20]
1004a984:	4b03      	ldr	r3, [pc, #12]	@ (1004a994 <LL_RADIO_ChkFlagAutoclearEnable_Enable+0x18>)
1004a986:	2104      	movs	r1, #4
1004a988:	430a      	orrs	r2, r1
1004a98a:	615a      	str	r2, [r3, #20]
}
1004a98c:	46c0      	nop			@ (mov r8, r8)
1004a98e:	46bd      	mov	sp, r7
1004a990:	bd80      	pop	{r7, pc}
1004a992:	46c0      	nop			@ (mov r8, r8)
1004a994:	200000c0 	.word	0x200000c0

1004a998 <LL_RADIO_NoActiveLErrorInterrupt_Enable>:
{
1004a998:	b580      	push	{r7, lr}
1004a99a:	af00      	add	r7, sp, #0
  SET_BIT(BLUEGLOBWORD->WORD5, GLOBAL_WORD5_INTNOACTIVELERROR);
1004a99c:	4b04      	ldr	r3, [pc, #16]	@ (1004a9b0 <LL_RADIO_NoActiveLErrorInterrupt_Enable+0x18>)
1004a99e:	695a      	ldr	r2, [r3, #20]
1004a9a0:	4b03      	ldr	r3, [pc, #12]	@ (1004a9b0 <LL_RADIO_NoActiveLErrorInterrupt_Enable+0x18>)
1004a9a2:	2180      	movs	r1, #128	@ 0x80
1004a9a4:	0409      	lsls	r1, r1, #16
1004a9a6:	430a      	orrs	r2, r1
1004a9a8:	615a      	str	r2, [r3, #20]
}
1004a9aa:	46c0      	nop			@ (mov r8, r8)
1004a9ac:	46bd      	mov	sp, r7
1004a9ae:	bd80      	pop	{r7, pc}
1004a9b0:	200000c0 	.word	0x200000c0

1004a9b4 <LL_RADIO_TxRxSkipInterrupt_Enable>:
{
1004a9b4:	b580      	push	{r7, lr}
1004a9b6:	af00      	add	r7, sp, #0
  SET_BIT(BLUEGLOBWORD->WORD5, GLOBAL_WORD5_INTTXRXSKIP);
1004a9b8:	4b04      	ldr	r3, [pc, #16]	@ (1004a9cc <LL_RADIO_TxRxSkipInterrupt_Enable+0x18>)
1004a9ba:	695a      	ldr	r2, [r3, #20]
1004a9bc:	4b03      	ldr	r3, [pc, #12]	@ (1004a9cc <LL_RADIO_TxRxSkipInterrupt_Enable+0x18>)
1004a9be:	2180      	movs	r1, #128	@ 0x80
1004a9c0:	0589      	lsls	r1, r1, #22
1004a9c2:	430a      	orrs	r2, r1
1004a9c4:	615a      	str	r2, [r3, #20]
}
1004a9c6:	46c0      	nop			@ (mov r8, r8)
1004a9c8:	46bd      	mov	sp, r7
1004a9ca:	bd80      	pop	{r7, pc}
1004a9cc:	200000c0 	.word	0x200000c0

1004a9d0 <LL_RADIO_Active2ErrorInterrupt_Enable>:
{
1004a9d0:	b580      	push	{r7, lr}
1004a9d2:	af00      	add	r7, sp, #0
  SET_BIT(BLUEGLOBWORD->WORD5, GLOBAL_WORD5_INTACTIVE2ERR);
1004a9d4:	4b04      	ldr	r3, [pc, #16]	@ (1004a9e8 <LL_RADIO_Active2ErrorInterrupt_Enable+0x18>)
1004a9d6:	695a      	ldr	r2, [r3, #20]
1004a9d8:	4b03      	ldr	r3, [pc, #12]	@ (1004a9e8 <LL_RADIO_Active2ErrorInterrupt_Enable+0x18>)
1004a9da:	2180      	movs	r1, #128	@ 0x80
1004a9dc:	05c9      	lsls	r1, r1, #23
1004a9de:	430a      	orrs	r2, r1
1004a9e0:	615a      	str	r2, [r3, #20]
}
1004a9e2:	46c0      	nop			@ (mov r8, r8)
1004a9e4:	46bd      	mov	sp, r7
1004a9e6:	bd80      	pop	{r7, pc}
1004a9e8:	200000c0 	.word	0x200000c0

1004a9ec <LL_RADIO_SetDefaultAntennaID>:
{
1004a9ec:	b580      	push	{r7, lr}
1004a9ee:	b082      	sub	sp, #8
1004a9f0:	af00      	add	r7, sp, #0
1004a9f2:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEGLOBWORD->WORD6, GLOBAL_WORD6_DEFAULTANTENNAID, value);
1004a9f4:	4b07      	ldr	r3, [pc, #28]	@ (1004aa14 <LL_RADIO_SetDefaultAntennaID+0x28>)
1004a9f6:	699b      	ldr	r3, [r3, #24]
1004a9f8:	227f      	movs	r2, #127	@ 0x7f
1004a9fa:	4393      	bics	r3, r2
1004a9fc:	0019      	movs	r1, r3
1004a9fe:	687b      	ldr	r3, [r7, #4]
1004aa00:	227f      	movs	r2, #127	@ 0x7f
1004aa02:	401a      	ands	r2, r3
1004aa04:	4b03      	ldr	r3, [pc, #12]	@ (1004aa14 <LL_RADIO_SetDefaultAntennaID+0x28>)
1004aa06:	430a      	orrs	r2, r1
1004aa08:	619a      	str	r2, [r3, #24]
}
1004aa0a:	46c0      	nop			@ (mov r8, r8)
1004aa0c:	46bd      	mov	sp, r7
1004aa0e:	b002      	add	sp, #8
1004aa10:	bd80      	pop	{r7, pc}
1004aa12:	46c0      	nop			@ (mov r8, r8)
1004aa14:	200000c0 	.word	0x200000c0

1004aa18 <LL_RADIO_TIMER_DisableTimer1>:
{
1004aa18:	b580      	push	{r7, lr}
1004aa1a:	b082      	sub	sp, #8
1004aa1c:	af00      	add	r7, sp, #0
1004aa1e:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEx->TIMEOUTDESTREG, BLUE_TIMEOUTDESTREG_DESTINATION, 0);
1004aa20:	687b      	ldr	r3, [r7, #4]
1004aa22:	68db      	ldr	r3, [r3, #12]
1004aa24:	2203      	movs	r2, #3
1004aa26:	4393      	bics	r3, r2
1004aa28:	001a      	movs	r2, r3
1004aa2a:	687b      	ldr	r3, [r7, #4]
1004aa2c:	60da      	str	r2, [r3, #12]
}
1004aa2e:	46c0      	nop			@ (mov r8, r8)
1004aa30:	46bd      	mov	sp, r7
1004aa32:	b002      	add	sp, #8
1004aa34:	bd80      	pop	{r7, pc}

1004aa36 <LL_RADIO_TIMER_DisableTimer2>:
{
1004aa36:	b580      	push	{r7, lr}
1004aa38:	b082      	sub	sp, #8
1004aa3a:	af00      	add	r7, sp, #0
1004aa3c:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEx->TIMEOUTDESTREG, BLUE_TIMEOUTDESTREG_DESTINATION, 0);
1004aa3e:	687b      	ldr	r3, [r7, #4]
1004aa40:	68db      	ldr	r3, [r3, #12]
1004aa42:	2203      	movs	r2, #3
1004aa44:	4393      	bics	r3, r2
1004aa46:	001a      	movs	r2, r3
1004aa48:	687b      	ldr	r3, [r7, #4]
1004aa4a:	60da      	str	r2, [r3, #12]
}
1004aa4c:	46c0      	nop			@ (mov r8, r8)
1004aa4e:	46bd      	mov	sp, r7
1004aa50:	b002      	add	sp, #8
1004aa52:	bd80      	pop	{r7, pc}

1004aa54 <LL_RADIO_TIMER_DisableBLEWakeupTimer>:
{
1004aa54:	b580      	push	{r7, lr}
1004aa56:	b082      	sub	sp, #8
1004aa58:	af00      	add	r7, sp, #0
1004aa5a:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(WAKEUPx->BLUE_SLEEP_REQUEST_MODE, WAKEUP_BLUE_SLEEP_REQUEST_MODE_BLE_WAKEUP_EN);
1004aa5c:	687b      	ldr	r3, [r7, #4]
1004aa5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004aa60:	4a03      	ldr	r2, [pc, #12]	@ (1004aa70 <LL_RADIO_TIMER_DisableBLEWakeupTimer+0x1c>)
1004aa62:	401a      	ands	r2, r3
1004aa64:	687b      	ldr	r3, [r7, #4]
1004aa66:	629a      	str	r2, [r3, #40]	@ 0x28
}
1004aa68:	46c0      	nop			@ (mov r8, r8)
1004aa6a:	46bd      	mov	sp, r7
1004aa6c:	b002      	add	sp, #8
1004aa6e:	bd80      	pop	{r7, pc}
1004aa70:	bfffffff 	.word	0xbfffffff

1004aa74 <HAL_RADIO_Init>:
/**
  * @brief  Initializes the radio.
  * @retval None
  */
void HAL_RADIO_Init(RADIO_HandleTypeDef *hradio)
{
1004aa74:	b590      	push	{r4, r7, lr}
1004aa76:	b08d      	sub	sp, #52	@ 0x34
1004aa78:	af00      	add	r7, sp, #0
1004aa7a:	6078      	str	r0, [r7, #4]
  uint32_t mr_ble_iptat;
  uint32_t mr_ble_vbg;
  uint32_t mr_ble_rxadc_delay_i;
  uint32_t mr_ble_rxadc_delay_q;
  uint8_t mr_ble_rxadc_delay_flag;
  uint8_t *hot_table_radio_config = (uint8_t *)&hot_table_radio_config_u32[4];
1004aa7c:	4b14      	ldr	r3, [pc, #80]	@ (1004aad0 <HAL_RADIO_Init+0x5c>)
1004aa7e:	617b      	str	r3, [r7, #20]
  uint8_t index;

  /* Retrieve Trimming values from engineering flash locations */
  if (*(volatile uint32_t *)VALIDITY_LOCATION == VALIDITY_TAG)
1004aa80:	4b14      	ldr	r3, [pc, #80]	@ (1004aad4 <HAL_RADIO_Init+0x60>)
1004aa82:	681b      	ldr	r3, [r3, #0]
1004aa84:	4a14      	ldr	r2, [pc, #80]	@ (1004aad8 <HAL_RADIO_Init+0x64>)
1004aa86:	4293      	cmp	r3, r2
1004aa88:	d12a      	bne.n	1004aae0 <HAL_RADIO_Init+0x6c>
  {
    mr_ble_ibias            = ((*(volatile uint32_t *)MR_TRIMMING_LOCATION) & MR_BLE_IBIAS_TRIM_Msk) >> MR_BLE_IBIAS_TRIM_Pos;
1004aa8a:	4b14      	ldr	r3, [pc, #80]	@ (1004aadc <HAL_RADIO_Init+0x68>)
1004aa8c:	681b      	ldr	r3, [r3, #0]
1004aa8e:	0a1b      	lsrs	r3, r3, #8
1004aa90:	220f      	movs	r2, #15
1004aa92:	4013      	ands	r3, r2
1004aa94:	62fb      	str	r3, [r7, #44]	@ 0x2c
    mr_ble_iptat            = ((*(volatile uint32_t *)MR_TRIMMING_LOCATION) & MR_BLE_IPTAT_TRIM_Msk) >> MR_BLE_IPTAT_TRIM_Pos;
1004aa96:	4b11      	ldr	r3, [pc, #68]	@ (1004aadc <HAL_RADIO_Init+0x68>)
1004aa98:	681b      	ldr	r3, [r3, #0]
1004aa9a:	0b1b      	lsrs	r3, r3, #12
1004aa9c:	220f      	movs	r2, #15
1004aa9e:	4013      	ands	r3, r2
1004aaa0:	62bb      	str	r3, [r7, #40]	@ 0x28
    mr_ble_vbg              = ((*(volatile uint32_t *)MR_TRIMMING_LOCATION) & MR_BLE_VBG_TRIM_Msk) >> MR_BLE_VBG_TRIM_Pos;
1004aaa2:	4b0e      	ldr	r3, [pc, #56]	@ (1004aadc <HAL_RADIO_Init+0x68>)
1004aaa4:	681b      	ldr	r3, [r3, #0]
1004aaa6:	0c1b      	lsrs	r3, r3, #16
1004aaa8:	220f      	movs	r2, #15
1004aaaa:	4013      	ands	r3, r2
1004aaac:	627b      	str	r3, [r7, #36]	@ 0x24
    mr_ble_rxadc_delay_i    = ((*(volatile uint32_t *)MR_TRIMMING_LOCATION) & MR_BLE_RXADC_DELAY_I_TRIM_Msk) >> MR_BLE_RXADC_DELAY_I_TRIM_Pos;
1004aaae:	4b0b      	ldr	r3, [pc, #44]	@ (1004aadc <HAL_RADIO_Init+0x68>)
1004aab0:	681b      	ldr	r3, [r3, #0]
1004aab2:	0d1b      	lsrs	r3, r3, #20
1004aab4:	2207      	movs	r2, #7
1004aab6:	4013      	ands	r3, r2
1004aab8:	623b      	str	r3, [r7, #32]
    mr_ble_rxadc_delay_q    = ((*(volatile uint32_t *)MR_TRIMMING_LOCATION) & MR_BLE_RXADC_DELAY_Q_TRIM_Msk) >> MR_BLE_RXADC_DELAY_Q_TRIM_Pos;
1004aaba:	4b08      	ldr	r3, [pc, #32]	@ (1004aadc <HAL_RADIO_Init+0x68>)
1004aabc:	681b      	ldr	r3, [r3, #0]
1004aabe:	0e1b      	lsrs	r3, r3, #24
1004aac0:	2207      	movs	r2, #7
1004aac2:	4013      	ands	r3, r2
1004aac4:	61fb      	str	r3, [r7, #28]
    mr_ble_rxadc_delay_flag = TRUE;
1004aac6:	231b      	movs	r3, #27
1004aac8:	18fb      	adds	r3, r7, r3
1004aaca:	2201      	movs	r2, #1
1004aacc:	701a      	strb	r2, [r3, #0]
1004aace:	e018      	b.n	1004ab02 <HAL_RADIO_Init+0x8e>
1004aad0:	200006cc 	.word	0x200006cc
1004aad4:	10001ef8 	.word	0x10001ef8
1004aad8:	fcbceccc 	.word	0xfcbceccc
1004aadc:	10001ee8 	.word	0x10001ee8
  }
  else
  {
    mr_ble_ibias = 0x08;
1004aae0:	2308      	movs	r3, #8
1004aae2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    mr_ble_iptat = 0x07;
1004aae4:	2307      	movs	r3, #7
1004aae6:	62bb      	str	r3, [r7, #40]	@ 0x28
    mr_ble_vbg   = 0x08;
1004aae8:	2308      	movs	r3, #8
1004aaea:	627b      	str	r3, [r7, #36]	@ 0x24
    mr_ble_rxadc_delay_flag = FALSE;
1004aaec:	211b      	movs	r1, #27
1004aaee:	187b      	adds	r3, r7, r1
1004aaf0:	2200      	movs	r2, #0
1004aaf2:	701a      	strb	r2, [r3, #0]
#if defined(STM32WB05) || defined(STM32WB09)
    mr_ble_rxadc_delay_i    = 3;
1004aaf4:	2303      	movs	r3, #3
1004aaf6:	623b      	str	r3, [r7, #32]
    mr_ble_rxadc_delay_q    = 3;
1004aaf8:	2303      	movs	r3, #3
1004aafa:	61fb      	str	r3, [r7, #28]
    mr_ble_rxadc_delay_flag = TRUE;
1004aafc:	187b      	adds	r3, r7, r1
1004aafe:	2201      	movs	r2, #1
1004ab00:	701a      	strb	r2, [r3, #0]
#endif /* STM32WB05 or STM32WB09 */
  }

  BLUEGLOB->BYTE4 = BLUE_IDLE_0;
1004ab02:	4bfc      	ldr	r3, [pc, #1008]	@ (1004aef4 <HAL_RADIO_Init+0x480>)
1004ab04:	2200      	movs	r2, #0
1004ab06:	711a      	strb	r2, [r3, #4]
  if (hradio != NULL)
1004ab08:	687b      	ldr	r3, [r7, #4]
1004ab0a:	2b00      	cmp	r3, #0
1004ab0c:	d003      	beq.n	1004ab16 <HAL_RADIO_Init+0xa2>
  {
    HAL_RADIO_MspInit(hradio);
1004ab0e:	687b      	ldr	r3, [r7, #4]
1004ab10:	0018      	movs	r0, r3
1004ab12:	f7f7 fae3 	bl	100420dc <HAL_RADIO_MspInit>
  }
  LL_RADIO_TIMER_DisableTimer1(BLUE);
1004ab16:	23c0      	movs	r3, #192	@ 0xc0
1004ab18:	05db      	lsls	r3, r3, #23
1004ab1a:	0018      	movs	r0, r3
1004ab1c:	f7ff ff7c 	bl	1004aa18 <LL_RADIO_TIMER_DisableTimer1>
  LL_RADIO_TIMER_DisableTimer2(BLUE);
1004ab20:	23c0      	movs	r3, #192	@ 0xc0
1004ab22:	05db      	lsls	r3, r3, #23
1004ab24:	0018      	movs	r0, r3
1004ab26:	f7ff ff86 	bl	1004aa36 <LL_RADIO_TIMER_DisableTimer2>
  LL_RADIO_TIMER_DisableBLEWakeupTimer(WAKEUP);
1004ab2a:	4bf3      	ldr	r3, [pc, #972]	@ (1004aef8 <HAL_RADIO_Init+0x484>)
1004ab2c:	0018      	movs	r0, r3
1004ab2e:	f7ff ff91 	bl	1004aa54 <LL_RADIO_TIMER_DisableBLEWakeupTimer>

  /* Write Radio Trimming values in the registers: Cbias' VBG, Cbias' IPTAT, Cbias' IBIAS, RxAnaUsr Delay Trim I & Q */
  MODIFY_REG_FIELD(RRM->CBIAS1_ANA_ENG, RRM_CBIAS1_ANA_ENG_RFD_CBIAS_VBG_TRIM, mr_ble_vbg);
1004ab32:	4af2      	ldr	r2, [pc, #968]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ab34:	239e      	movs	r3, #158	@ 0x9e
1004ab36:	009b      	lsls	r3, r3, #2
1004ab38:	58d3      	ldr	r3, [r2, r3]
1004ab3a:	220f      	movs	r2, #15
1004ab3c:	4393      	bics	r3, r2
1004ab3e:	001a      	movs	r2, r3
1004ab40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004ab42:	210f      	movs	r1, #15
1004ab44:	400b      	ands	r3, r1
1004ab46:	49ed      	ldr	r1, [pc, #948]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ab48:	431a      	orrs	r2, r3
1004ab4a:	239e      	movs	r3, #158	@ 0x9e
1004ab4c:	009b      	lsls	r3, r3, #2
1004ab4e:	50ca      	str	r2, [r1, r3]
  MODIFY_REG_FIELD(RRM->CBIAS0_ANA_ENG, RRM_CBIAS0_ANA_ENG_RFD_CBIAS_IPTAT_TRIM, mr_ble_iptat);
1004ab50:	4aea      	ldr	r2, [pc, #936]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ab52:	239d      	movs	r3, #157	@ 0x9d
1004ab54:	009b      	lsls	r3, r3, #2
1004ab56:	58d3      	ldr	r3, [r2, r3]
1004ab58:	22f0      	movs	r2, #240	@ 0xf0
1004ab5a:	4393      	bics	r3, r2
1004ab5c:	001a      	movs	r2, r3
1004ab5e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
1004ab60:	011b      	lsls	r3, r3, #4
1004ab62:	21ff      	movs	r1, #255	@ 0xff
1004ab64:	400b      	ands	r3, r1
1004ab66:	49e5      	ldr	r1, [pc, #916]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ab68:	431a      	orrs	r2, r3
1004ab6a:	239d      	movs	r3, #157	@ 0x9d
1004ab6c:	009b      	lsls	r3, r3, #2
1004ab6e:	50ca      	str	r2, [r1, r3]
  MODIFY_REG_FIELD(RRM->CBIAS0_ANA_ENG, RRM_CBIAS0_ANA_ENG_RFD_CBIAS_IBIAS_TRIM, mr_ble_ibias);
1004ab70:	4ae2      	ldr	r2, [pc, #904]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ab72:	239d      	movs	r3, #157	@ 0x9d
1004ab74:	009b      	lsls	r3, r3, #2
1004ab76:	58d3      	ldr	r3, [r2, r3]
1004ab78:	220f      	movs	r2, #15
1004ab7a:	4393      	bics	r3, r2
1004ab7c:	001a      	movs	r2, r3
1004ab7e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1004ab80:	210f      	movs	r1, #15
1004ab82:	400b      	ands	r3, r1
1004ab84:	49dd      	ldr	r1, [pc, #884]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ab86:	431a      	orrs	r2, r3
1004ab88:	239d      	movs	r3, #157	@ 0x9d
1004ab8a:	009b      	lsls	r3, r3, #2
1004ab8c:	50ca      	str	r2, [r1, r3]
  if (mr_ble_rxadc_delay_flag)
1004ab8e:	231b      	movs	r3, #27
1004ab90:	18fb      	adds	r3, r7, r3
1004ab92:	781b      	ldrb	r3, [r3, #0]
1004ab94:	2b00      	cmp	r3, #0
1004ab96:	d01e      	beq.n	1004abd6 <HAL_RADIO_Init+0x162>
  {
    MODIFY_REG_FIELD(RRM->RXADC_ANA_USR, RRM_RXADC_ANA_USR_RFD_RXADC_DELAYTRIM_I, mr_ble_rxadc_delay_i);
1004ab98:	4ad8      	ldr	r2, [pc, #864]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ab9a:	2392      	movs	r3, #146	@ 0x92
1004ab9c:	009b      	lsls	r3, r3, #2
1004ab9e:	58d3      	ldr	r3, [r2, r3]
1004aba0:	2207      	movs	r2, #7
1004aba2:	4393      	bics	r3, r2
1004aba4:	001a      	movs	r2, r3
1004aba6:	6a3b      	ldr	r3, [r7, #32]
1004aba8:	2107      	movs	r1, #7
1004abaa:	400b      	ands	r3, r1
1004abac:	49d3      	ldr	r1, [pc, #844]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004abae:	431a      	orrs	r2, r3
1004abb0:	2392      	movs	r3, #146	@ 0x92
1004abb2:	009b      	lsls	r3, r3, #2
1004abb4:	50ca      	str	r2, [r1, r3]
    MODIFY_REG_FIELD(RRM->RXADC_ANA_USR, RRM_RXADC_ANA_USR_RFD_RXADC_DELAYTRIM_Q, mr_ble_rxadc_delay_q);
1004abb6:	4ad1      	ldr	r2, [pc, #836]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004abb8:	2392      	movs	r3, #146	@ 0x92
1004abba:	009b      	lsls	r3, r3, #2
1004abbc:	58d3      	ldr	r3, [r2, r3]
1004abbe:	2238      	movs	r2, #56	@ 0x38
1004abc0:	4393      	bics	r3, r2
1004abc2:	001a      	movs	r2, r3
1004abc4:	69fb      	ldr	r3, [r7, #28]
1004abc6:	00db      	lsls	r3, r3, #3
1004abc8:	2138      	movs	r1, #56	@ 0x38
1004abca:	400b      	ands	r3, r1
1004abcc:	49cb      	ldr	r1, [pc, #812]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004abce:	431a      	orrs	r2, r3
1004abd0:	2392      	movs	r3, #146	@ 0x92
1004abd2:	009b      	lsls	r3, r3, #2
1004abd4:	50ca      	str	r2, [r1, r3]
  }

  /* Radio AFC configuration */
  MODIFY_REG(RRM->AFC1_DIG_ENG, RRM_AFC1_DIG_ENG_AFC_DELAY_AFTER | RRM_AFC1_DIG_ENG_AFC_DELAY_BEFORE,
1004abd6:	4ac9      	ldr	r2, [pc, #804]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004abd8:	23a4      	movs	r3, #164	@ 0xa4
1004abda:	005b      	lsls	r3, r3, #1
1004abdc:	58d3      	ldr	r3, [r2, r3]
1004abde:	22ff      	movs	r2, #255	@ 0xff
1004abe0:	4393      	bics	r3, r2
1004abe2:	49c6      	ldr	r1, [pc, #792]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004abe4:	2255      	movs	r2, #85	@ 0x55
1004abe6:	431a      	orrs	r2, r3
1004abe8:	23a4      	movs	r3, #164	@ 0xa4
1004abea:	005b      	lsls	r3, r3, #1
1004abec:	50ca      	str	r2, [r1, r3]
             ((AFC_DELAY_BEFORE << RRM_AFC1_DIG_ENG_AFC_DELAY_BEFORE_Pos) & RRM_AFC1_DIG_ENG_AFC_DELAY_BEFORE_Msk) |
             ((AFC_DELAY_AFTER << RRM_AFC1_DIG_ENG_AFC_DELAY_AFTER_Pos) & RRM_AFC1_DIG_ENG_AFC_DELAY_AFTER_Msk));
  MODIFY_REG(RRM->CR0_DIG_ENG, RRM_CR0_DIG_ENG_CR_GAIN_BEFORE | RRM_CR0_DIG_ENG_CR_GAIN_AFTER,
1004abee:	4ac3      	ldr	r2, [pc, #780]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004abf0:	23aa      	movs	r3, #170	@ 0xaa
1004abf2:	005b      	lsls	r3, r3, #1
1004abf4:	58d3      	ldr	r3, [r2, r3]
1004abf6:	22ff      	movs	r2, #255	@ 0xff
1004abf8:	4393      	bics	r3, r2
1004abfa:	49c0      	ldr	r1, [pc, #768]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004abfc:	2266      	movs	r2, #102	@ 0x66
1004abfe:	431a      	orrs	r2, r3
1004ac00:	23aa      	movs	r3, #170	@ 0xaa
1004ac02:	005b      	lsls	r3, r3, #1
1004ac04:	50ca      	str	r2, [r1, r3]
             ((CR_GAIN_BEFORE << RRM_CR0_DIG_ENG_CR_GAIN_BEFORE_Pos) & RRM_CR0_DIG_ENG_CR_GAIN_BEFORE_Msk) |
             ((CR_GAIN_AFTER << RRM_CR0_DIG_ENG_CR_GAIN_AFTER_Pos) & RRM_CR0_DIG_ENG_CR_GAIN_AFTER_Msk));
  MODIFY_REG(RRM->CR0_LR, RRM_CR0_LR_CR_LR_GAIN_BEFORE | RRM_CR0_LR_CR_LR_GAIN_AFTER,
1004ac06:	4abd      	ldr	r2, [pc, #756]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac08:	23b4      	movs	r3, #180	@ 0xb4
1004ac0a:	005b      	lsls	r3, r3, #1
1004ac0c:	58d3      	ldr	r3, [r2, r3]
1004ac0e:	22ff      	movs	r2, #255	@ 0xff
1004ac10:	4393      	bics	r3, r2
1004ac12:	49ba      	ldr	r1, [pc, #744]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac14:	2255      	movs	r2, #85	@ 0x55
1004ac16:	431a      	orrs	r2, r3
1004ac18:	23b4      	movs	r3, #180	@ 0xb4
1004ac1a:	005b      	lsls	r3, r3, #1
1004ac1c:	50ca      	str	r2, [r1, r3]
             ((CR_LR_GAIN_BEFORE << RRM_CR0_LR_CR_LR_GAIN_BEFORE_Pos) & RRM_CR0_LR_CR_LR_GAIN_BEFORE_Msk) |
             ((CR_LR_GAIN_AFTER << RRM_CR0_LR_CR_LR_GAIN_AFTER_Pos) & RRM_CR0_LR_CR_LR_GAIN_AFTER_Msk));

  /* Radio RSSI Threshold configuration */
  MODIFY_REG_FIELD(RRM->LR_RSSI_THR_DIG_ENG, RRM_LR_RSSI_THR_DIG_ENG_LR_RSSI_THR, LR_RSSI_THR);
1004ac1e:	4ab7      	ldr	r2, [pc, #732]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac20:	23c4      	movs	r3, #196	@ 0xc4
1004ac22:	005b      	lsls	r3, r3, #1
1004ac24:	58d3      	ldr	r3, [r2, r3]
1004ac26:	22ff      	movs	r2, #255	@ 0xff
1004ac28:	4393      	bics	r3, r2
1004ac2a:	49b4      	ldr	r1, [pc, #720]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac2c:	221d      	movs	r2, #29
1004ac2e:	431a      	orrs	r2, r3
1004ac30:	23c4      	movs	r3, #196	@ 0xc4
1004ac32:	005b      	lsls	r3, r3, #1
1004ac34:	50ca      	str	r2, [r1, r3]
  MODIFY_REG_FIELD(RRM->LR_PD_THR_DIG_ENG, RRM_LR_PD_THR_DIG_ENG_LR_PD_THR, LR_PD_THR);
1004ac36:	4ab1      	ldr	r2, [pc, #708]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac38:	23c2      	movs	r3, #194	@ 0xc2
1004ac3a:	005b      	lsls	r3, r3, #1
1004ac3c:	58d3      	ldr	r3, [r2, r3]
1004ac3e:	22ff      	movs	r2, #255	@ 0xff
1004ac40:	4393      	bics	r3, r2
1004ac42:	49ae      	ldr	r1, [pc, #696]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac44:	2259      	movs	r2, #89	@ 0x59
1004ac46:	431a      	orrs	r2, r3
1004ac48:	23c2      	movs	r3, #194	@ 0xc2
1004ac4a:	005b      	lsls	r3, r3, #1
1004ac4c:	50ca      	str	r2, [r1, r3]
  MODIFY_REG_FIELD(RRM->LR_AAC_THR_DIG_ENG, RRM_LR_AAC_THR_DIG_ENG_LR_AAC_THR, LR_AAC_THR);
1004ac4e:	4aab      	ldr	r2, [pc, #684]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac50:	23c6      	movs	r3, #198	@ 0xc6
1004ac52:	005b      	lsls	r3, r3, #1
1004ac54:	58d3      	ldr	r3, [r2, r3]
1004ac56:	22ff      	movs	r2, #255	@ 0xff
1004ac58:	4393      	bics	r3, r2
1004ac5a:	49a8      	ldr	r1, [pc, #672]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac5c:	2232      	movs	r2, #50	@ 0x32
1004ac5e:	431a      	orrs	r2, r3
1004ac60:	23c6      	movs	r3, #198	@ 0xc6
1004ac62:	005b      	lsls	r3, r3, #1
1004ac64:	50ca      	str	r2, [r1, r3]

  /* Enable Viterbi */
  SET_BIT(RRM->VIT_CONF_DIG_ENG, RRM_VIT_CONF_DIG_ENG_VIT_CONF_0);
1004ac66:	4aa5      	ldr	r2, [pc, #660]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac68:	23b6      	movs	r3, #182	@ 0xb6
1004ac6a:	005b      	lsls	r3, r3, #1
1004ac6c:	58d3      	ldr	r3, [r2, r3]
1004ac6e:	49a3      	ldr	r1, [pc, #652]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac70:	2201      	movs	r2, #1
1004ac72:	431a      	orrs	r2, r3
1004ac74:	23b6      	movs	r3, #182	@ 0xb6
1004ac76:	005b      	lsls	r3, r3, #1
1004ac78:	50ca      	str	r2, [r1, r3]

#if defined(STM32WB05) || defined(STM32WB09)
  MODIFY_REG_FIELD(RRM->ANTSW_DIG0_USR, RRM_ANTSW0_DIG_USR_RX_TIME_TO_SAMPLE, RX_TIME_TO_SAMPLE);
1004ac7a:	4aa0      	ldr	r2, [pc, #640]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac7c:	23d0      	movs	r3, #208	@ 0xd0
1004ac7e:	009b      	lsls	r3, r3, #2
1004ac80:	58d3      	ldr	r3, [r2, r3]
1004ac82:	227f      	movs	r2, #127	@ 0x7f
1004ac84:	4393      	bics	r3, r2
1004ac86:	499d      	ldr	r1, [pc, #628]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac88:	221f      	movs	r2, #31
1004ac8a:	431a      	orrs	r2, r3
1004ac8c:	23d0      	movs	r3, #208	@ 0xd0
1004ac8e:	009b      	lsls	r3, r3, #2
1004ac90:	50ca      	str	r2, [r1, r3]
  MODIFY_REG_FIELD(RRM->ANTSW_DIG1_USR, RRM_ANTSW1_DIG_USR_RX_TIME_TO_SWITCH, RX_TIME_TO_SWITCH);
1004ac92:	4a9a      	ldr	r2, [pc, #616]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ac94:	23d1      	movs	r3, #209	@ 0xd1
1004ac96:	009b      	lsls	r3, r3, #2
1004ac98:	58d3      	ldr	r3, [r2, r3]
1004ac9a:	223f      	movs	r2, #63	@ 0x3f
1004ac9c:	4393      	bics	r3, r2
1004ac9e:	4997      	ldr	r1, [pc, #604]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004aca0:	2209      	movs	r2, #9
1004aca2:	431a      	orrs	r2, r3
1004aca4:	23d1      	movs	r3, #209	@ 0xd1
1004aca6:	009b      	lsls	r3, r3, #2
1004aca8:	50ca      	str	r2, [r1, r3]
#endif /* STM32WB05 or STM32WB09 */

  /*Set InitDelay*/
  LL_RADIO_SetWakeupInitDelay(INITDELAY_WAKEUP);
1004acaa:	2040      	movs	r0, #64	@ 0x40
1004acac:	f7ff fd4c 	bl	1004a748 <LL_RADIO_SetWakeupInitDelay>
  LL_RADIO_SetTimer12InitDelayCal(INITDELAY_TIMER12_CAL);
1004acb0:	203f      	movs	r0, #63	@ 0x3f
1004acb2:	f7ff fd61 	bl	1004a778 <LL_RADIO_SetTimer12InitDelayCal>
  LL_RADIO_SetTimer12InitDelayNoCal(INITDELAY_TIMER2_NOCAL);
1004acb6:	2009      	movs	r0, #9
1004acb8:	f7ff fd78 	bl	1004a7ac <LL_RADIO_SetTimer12InitDelayNoCal>

  /*Set Init_radio_delay*/
  LL_RADIO_SetReceivedCalDelayChk(DELAYCHK_RECEIVE_CAL);
1004acbc:	205a      	movs	r0, #90	@ 0x5a
1004acbe:	f7ff fdb7 	bl	1004a830 <LL_RADIO_SetReceivedCalDelayChk>
  LL_RADIO_SetReceivedNoCalDelayChk(DELAYCHK_RECEIVE_NOCAL);
1004acc2:	2032      	movs	r0, #50	@ 0x32
1004acc4:	f7ff fdce 	bl	1004a864 <LL_RADIO_SetReceivedNoCalDelayChk>
  LL_RADIO_SetTransmitCalDelayChk(DELAYCHK_TRANSMIT_CAL);
1004acc8:	205a      	movs	r0, #90	@ 0x5a
1004acca:	f7ff fd83 	bl	1004a7d4 <LL_RADIO_SetTransmitCalDelayChk>
  LL_RADIO_SetTransmitNoCalDelayChk(DELAYCHK_TRANSMIT_NOCAL);
1004acce:	2032      	movs	r0, #50	@ 0x32
1004acd0:	f7ff fd96 	bl	1004a800 <LL_RADIO_SetTransmitNoCalDelayChk>

  /* Initial and final TX delays: control the on-air start time of the TX packet
  *  and the length of the packet "tail" after last bit is transmitted
  */
  LL_RADIO_SetTxDelayStart(TXDELAY_START);
1004acd4:	2010      	movs	r0, #16
1004acd6:	f7ff fe07 	bl	1004a8e8 <LL_RADIO_SetTxDelayStart>
  LL_RADIO_SetTxDelayEnd(TXDELAY_END);
1004acda:	2010      	movs	r0, #16
1004acdc:	f7ff fe1e 	bl	1004a91c <LL_RADIO_SetTxDelayEnd>

  /* Timeout for TX ready signal from the radio FSM after the 2nd init phase
  *  has expired
  */
  LL_RADIO_SetTransmissionReadyTimeout(TXREADY_TIMEOUT);
1004ace0:	2004      	movs	r0, #4
1004ace2:	f7ff fe35 	bl	1004a950 <LL_RADIO_SetTransmissionReadyTimeout>

  /* Timing for the various programming phases of the radio, modem and memory
  *  pointers.
  */
  LL_RADIO_SetConfigurationEndDuration(CONFIG_END_DURATION);
1004ace6:	2014      	movs	r0, #20
1004ace8:	f7ff fdd0 	bl	1004a88c <LL_RADIO_SetConfigurationEndDuration>
  LL_RADIO_SetTxDataReadyCheck(CHECK_TXDATAREADY);
1004acec:	2005      	movs	r0, #5
1004acee:	f7ff fde3 	bl	1004a8b8 <LL_RADIO_SetTxDataReadyCheck>

  LL_RADIO_ChkFlagAutoclearEnable_Enable();
1004acf2:	f7ff fe43 	bl	1004a97c <LL_RADIO_ChkFlagAutoclearEnable_Enable>
  LL_RADIO_NoActiveLErrorInterrupt_Enable();
1004acf6:	f7ff fe4f 	bl	1004a998 <LL_RADIO_NoActiveLErrorInterrupt_Enable>
  LL_RADIO_TxRxSkipInterrupt_Enable();
1004acfa:	f7ff fe5b 	bl	1004a9b4 <LL_RADIO_TxRxSkipInterrupt_Enable>

#if defined(GLOBAL_WORD6_DEFAULTANTENNAID_Msk)
  LL_RADIO_SetDefaultAntennaID(0);
1004acfe:	2000      	movs	r0, #0
1004ad00:	f7ff fe74 	bl	1004a9ec <LL_RADIO_SetDefaultAntennaID>
  /* The commands in the hot table start at word 4
  * The words 0 to 2 are used to point to the command list
  * for the various trigger events, word 3 is a null command
  * (see function BLEPLAT_CNTR_SetRadioConfigData)
  */
  index = 0;
1004ad04:	2013      	movs	r0, #19
1004ad06:	183b      	adds	r3, r7, r0
1004ad08:	2200      	movs	r2, #0
1004ad0a:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004ad0c:	183b      	adds	r3, r7, r0
1004ad0e:	781b      	ldrb	r3, [r3, #0]
1004ad10:	183a      	adds	r2, r7, r0
1004ad12:	1c59      	adds	r1, r3, #1
1004ad14:	7011      	strb	r1, [r2, #0]
1004ad16:	001a      	movs	r2, r3
1004ad18:	697b      	ldr	r3, [r7, #20]
1004ad1a:	189b      	adds	r3, r3, r2
1004ad1c:	2201      	movs	r2, #1
1004ad1e:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_CBIAS1_ANA_ENG;
1004ad20:	183b      	adds	r3, r7, r0
1004ad22:	781b      	ldrb	r3, [r3, #0]
1004ad24:	183a      	adds	r2, r7, r0
1004ad26:	1c59      	adds	r1, r3, #1
1004ad28:	7011      	strb	r1, [r2, #0]
1004ad2a:	001a      	movs	r2, r3
1004ad2c:	697b      	ldr	r3, [r7, #20]
1004ad2e:	189b      	adds	r3, r3, r2
1004ad30:	225e      	movs	r2, #94	@ 0x5e
1004ad32:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->CBIAS1_ANA_ENG;
1004ad34:	4a71      	ldr	r2, [pc, #452]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ad36:	239e      	movs	r3, #158	@ 0x9e
1004ad38:	009b      	lsls	r3, r3, #2
1004ad3a:	58d1      	ldr	r1, [r2, r3]
1004ad3c:	183b      	adds	r3, r7, r0
1004ad3e:	781b      	ldrb	r3, [r3, #0]
1004ad40:	0004      	movs	r4, r0
1004ad42:	183a      	adds	r2, r7, r0
1004ad44:	1c58      	adds	r0, r3, #1
1004ad46:	7010      	strb	r0, [r2, #0]
1004ad48:	001a      	movs	r2, r3
1004ad4a:	697b      	ldr	r3, [r7, #20]
1004ad4c:	189b      	adds	r3, r3, r2
1004ad4e:	b2ca      	uxtb	r2, r1
1004ad50:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004ad52:	0020      	movs	r0, r4
1004ad54:	183b      	adds	r3, r7, r0
1004ad56:	781b      	ldrb	r3, [r3, #0]
1004ad58:	183a      	adds	r2, r7, r0
1004ad5a:	1c59      	adds	r1, r3, #1
1004ad5c:	7011      	strb	r1, [r2, #0]
1004ad5e:	001a      	movs	r2, r3
1004ad60:	697b      	ldr	r3, [r7, #20]
1004ad62:	189b      	adds	r3, r3, r2
1004ad64:	2201      	movs	r2, #1
1004ad66:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_CBIAS0_ANA_ENG;
1004ad68:	183b      	adds	r3, r7, r0
1004ad6a:	781b      	ldrb	r3, [r3, #0]
1004ad6c:	183a      	adds	r2, r7, r0
1004ad6e:	1c59      	adds	r1, r3, #1
1004ad70:	7011      	strb	r1, [r2, #0]
1004ad72:	001a      	movs	r2, r3
1004ad74:	697b      	ldr	r3, [r7, #20]
1004ad76:	189b      	adds	r3, r3, r2
1004ad78:	225d      	movs	r2, #93	@ 0x5d
1004ad7a:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->CBIAS0_ANA_ENG;
1004ad7c:	4a5f      	ldr	r2, [pc, #380]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ad7e:	239d      	movs	r3, #157	@ 0x9d
1004ad80:	009b      	lsls	r3, r3, #2
1004ad82:	58d1      	ldr	r1, [r2, r3]
1004ad84:	183b      	adds	r3, r7, r0
1004ad86:	781b      	ldrb	r3, [r3, #0]
1004ad88:	0004      	movs	r4, r0
1004ad8a:	183a      	adds	r2, r7, r0
1004ad8c:	1c58      	adds	r0, r3, #1
1004ad8e:	7010      	strb	r0, [r2, #0]
1004ad90:	001a      	movs	r2, r3
1004ad92:	697b      	ldr	r3, [r7, #20]
1004ad94:	189b      	adds	r3, r3, r2
1004ad96:	b2ca      	uxtb	r2, r1
1004ad98:	701a      	strb	r2, [r3, #0]

  hot_table_radio_config[index++] = 0x01;
1004ad9a:	0020      	movs	r0, r4
1004ad9c:	183b      	adds	r3, r7, r0
1004ad9e:	781b      	ldrb	r3, [r3, #0]
1004ada0:	183a      	adds	r2, r7, r0
1004ada2:	1c59      	adds	r1, r3, #1
1004ada4:	7011      	strb	r1, [r2, #0]
1004ada6:	001a      	movs	r2, r3
1004ada8:	697b      	ldr	r3, [r7, #20]
1004adaa:	189b      	adds	r3, r3, r2
1004adac:	2201      	movs	r2, #1
1004adae:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_RXADC_ANA_USR;
1004adb0:	183b      	adds	r3, r7, r0
1004adb2:	781b      	ldrb	r3, [r3, #0]
1004adb4:	183a      	adds	r2, r7, r0
1004adb6:	1c59      	adds	r1, r3, #1
1004adb8:	7011      	strb	r1, [r2, #0]
1004adba:	001a      	movs	r2, r3
1004adbc:	697b      	ldr	r3, [r7, #20]
1004adbe:	189b      	adds	r3, r3, r2
1004adc0:	2252      	movs	r2, #82	@ 0x52
1004adc2:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->RXADC_ANA_USR;
1004adc4:	4a4d      	ldr	r2, [pc, #308]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004adc6:	2392      	movs	r3, #146	@ 0x92
1004adc8:	009b      	lsls	r3, r3, #2
1004adca:	58d1      	ldr	r1, [r2, r3]
1004adcc:	183b      	adds	r3, r7, r0
1004adce:	781b      	ldrb	r3, [r3, #0]
1004add0:	0004      	movs	r4, r0
1004add2:	183a      	adds	r2, r7, r0
1004add4:	1c58      	adds	r0, r3, #1
1004add6:	7010      	strb	r0, [r2, #0]
1004add8:	001a      	movs	r2, r3
1004adda:	697b      	ldr	r3, [r7, #20]
1004addc:	189b      	adds	r3, r3, r2
1004adde:	b2ca      	uxtb	r2, r1
1004ade0:	701a      	strb	r2, [r3, #0]

  hot_table_radio_config[index++] = 0x01;
1004ade2:	0020      	movs	r0, r4
1004ade4:	183b      	adds	r3, r7, r0
1004ade6:	781b      	ldrb	r3, [r3, #0]
1004ade8:	183a      	adds	r2, r7, r0
1004adea:	1c59      	adds	r1, r3, #1
1004adec:	7011      	strb	r1, [r2, #0]
1004adee:	001a      	movs	r2, r3
1004adf0:	697b      	ldr	r3, [r7, #20]
1004adf2:	189b      	adds	r3, r3, r2
1004adf4:	2201      	movs	r2, #1
1004adf6:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_AFC1_DIG_ENG;
1004adf8:	183b      	adds	r3, r7, r0
1004adfa:	781b      	ldrb	r3, [r3, #0]
1004adfc:	183a      	adds	r2, r7, r0
1004adfe:	1c59      	adds	r1, r3, #1
1004ae00:	7011      	strb	r1, [r2, #0]
1004ae02:	001a      	movs	r2, r3
1004ae04:	697b      	ldr	r3, [r7, #20]
1004ae06:	189b      	adds	r3, r3, r2
1004ae08:	2212      	movs	r2, #18
1004ae0a:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->AFC1_DIG_ENG;
1004ae0c:	4a3b      	ldr	r2, [pc, #236]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ae0e:	23a4      	movs	r3, #164	@ 0xa4
1004ae10:	005b      	lsls	r3, r3, #1
1004ae12:	58d1      	ldr	r1, [r2, r3]
1004ae14:	183b      	adds	r3, r7, r0
1004ae16:	781b      	ldrb	r3, [r3, #0]
1004ae18:	0004      	movs	r4, r0
1004ae1a:	183a      	adds	r2, r7, r0
1004ae1c:	1c58      	adds	r0, r3, #1
1004ae1e:	7010      	strb	r0, [r2, #0]
1004ae20:	001a      	movs	r2, r3
1004ae22:	697b      	ldr	r3, [r7, #20]
1004ae24:	189b      	adds	r3, r3, r2
1004ae26:	b2ca      	uxtb	r2, r1
1004ae28:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004ae2a:	0020      	movs	r0, r4
1004ae2c:	183b      	adds	r3, r7, r0
1004ae2e:	781b      	ldrb	r3, [r3, #0]
1004ae30:	183a      	adds	r2, r7, r0
1004ae32:	1c59      	adds	r1, r3, #1
1004ae34:	7011      	strb	r1, [r2, #0]
1004ae36:	001a      	movs	r2, r3
1004ae38:	697b      	ldr	r3, [r7, #20]
1004ae3a:	189b      	adds	r3, r3, r2
1004ae3c:	2201      	movs	r2, #1
1004ae3e:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_CR0_DIG_ENG;
1004ae40:	183b      	adds	r3, r7, r0
1004ae42:	781b      	ldrb	r3, [r3, #0]
1004ae44:	183a      	adds	r2, r7, r0
1004ae46:	1c59      	adds	r1, r3, #1
1004ae48:	7011      	strb	r1, [r2, #0]
1004ae4a:	001a      	movs	r2, r3
1004ae4c:	697b      	ldr	r3, [r7, #20]
1004ae4e:	189b      	adds	r3, r3, r2
1004ae50:	2215      	movs	r2, #21
1004ae52:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->CR0_DIG_ENG;
1004ae54:	4a29      	ldr	r2, [pc, #164]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ae56:	23aa      	movs	r3, #170	@ 0xaa
1004ae58:	005b      	lsls	r3, r3, #1
1004ae5a:	58d1      	ldr	r1, [r2, r3]
1004ae5c:	183b      	adds	r3, r7, r0
1004ae5e:	781b      	ldrb	r3, [r3, #0]
1004ae60:	0004      	movs	r4, r0
1004ae62:	183a      	adds	r2, r7, r0
1004ae64:	1c58      	adds	r0, r3, #1
1004ae66:	7010      	strb	r0, [r2, #0]
1004ae68:	001a      	movs	r2, r3
1004ae6a:	697b      	ldr	r3, [r7, #20]
1004ae6c:	189b      	adds	r3, r3, r2
1004ae6e:	b2ca      	uxtb	r2, r1
1004ae70:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004ae72:	0020      	movs	r0, r4
1004ae74:	183b      	adds	r3, r7, r0
1004ae76:	781b      	ldrb	r3, [r3, #0]
1004ae78:	183a      	adds	r2, r7, r0
1004ae7a:	1c59      	adds	r1, r3, #1
1004ae7c:	7011      	strb	r1, [r2, #0]
1004ae7e:	001a      	movs	r2, r3
1004ae80:	697b      	ldr	r3, [r7, #20]
1004ae82:	189b      	adds	r3, r3, r2
1004ae84:	2201      	movs	r2, #1
1004ae86:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_CR0_LR;
1004ae88:	183b      	adds	r3, r7, r0
1004ae8a:	781b      	ldrb	r3, [r3, #0]
1004ae8c:	183a      	adds	r2, r7, r0
1004ae8e:	1c59      	adds	r1, r3, #1
1004ae90:	7011      	strb	r1, [r2, #0]
1004ae92:	001a      	movs	r2, r3
1004ae94:	697b      	ldr	r3, [r7, #20]
1004ae96:	189b      	adds	r3, r3, r2
1004ae98:	221a      	movs	r2, #26
1004ae9a:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->CR0_LR;
1004ae9c:	4a17      	ldr	r2, [pc, #92]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004ae9e:	23b4      	movs	r3, #180	@ 0xb4
1004aea0:	005b      	lsls	r3, r3, #1
1004aea2:	58d1      	ldr	r1, [r2, r3]
1004aea4:	183b      	adds	r3, r7, r0
1004aea6:	781b      	ldrb	r3, [r3, #0]
1004aea8:	0004      	movs	r4, r0
1004aeaa:	183a      	adds	r2, r7, r0
1004aeac:	1c58      	adds	r0, r3, #1
1004aeae:	7010      	strb	r0, [r2, #0]
1004aeb0:	001a      	movs	r2, r3
1004aeb2:	697b      	ldr	r3, [r7, #20]
1004aeb4:	189b      	adds	r3, r3, r2
1004aeb6:	b2ca      	uxtb	r2, r1
1004aeb8:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004aeba:	0020      	movs	r0, r4
1004aebc:	183b      	adds	r3, r7, r0
1004aebe:	781b      	ldrb	r3, [r3, #0]
1004aec0:	183a      	adds	r2, r7, r0
1004aec2:	1c59      	adds	r1, r3, #1
1004aec4:	7011      	strb	r1, [r2, #0]
1004aec6:	001a      	movs	r2, r3
1004aec8:	697b      	ldr	r3, [r7, #20]
1004aeca:	189b      	adds	r3, r3, r2
1004aecc:	2201      	movs	r2, #1
1004aece:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_LR_RSSI_THR_DIG_ENG;
1004aed0:	183b      	adds	r3, r7, r0
1004aed2:	781b      	ldrb	r3, [r3, #0]
1004aed4:	183a      	adds	r2, r7, r0
1004aed6:	1c59      	adds	r1, r3, #1
1004aed8:	7011      	strb	r1, [r2, #0]
1004aeda:	001a      	movs	r2, r3
1004aedc:	697b      	ldr	r3, [r7, #20]
1004aede:	189b      	adds	r3, r3, r2
1004aee0:	2222      	movs	r2, #34	@ 0x22
1004aee2:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->LR_RSSI_THR_DIG_ENG;
1004aee4:	4a05      	ldr	r2, [pc, #20]	@ (1004aefc <HAL_RADIO_Init+0x488>)
1004aee6:	23c4      	movs	r3, #196	@ 0xc4
1004aee8:	005b      	lsls	r3, r3, #1
1004aeea:	58d1      	ldr	r1, [r2, r3]
1004aeec:	183b      	adds	r3, r7, r0
1004aeee:	781b      	ldrb	r3, [r3, #0]
1004aef0:	0004      	movs	r4, r0
1004aef2:	e005      	b.n	1004af00 <HAL_RADIO_Init+0x48c>
1004aef4:	200000c0 	.word	0x200000c0
1004aef8:	60001800 	.word	0x60001800
1004aefc:	60001400 	.word	0x60001400
1004af00:	183a      	adds	r2, r7, r0
1004af02:	1c58      	adds	r0, r3, #1
1004af04:	7010      	strb	r0, [r2, #0]
1004af06:	001a      	movs	r2, r3
1004af08:	697b      	ldr	r3, [r7, #20]
1004af0a:	189b      	adds	r3, r3, r2
1004af0c:	b2ca      	uxtb	r2, r1
1004af0e:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004af10:	0020      	movs	r0, r4
1004af12:	183b      	adds	r3, r7, r0
1004af14:	781b      	ldrb	r3, [r3, #0]
1004af16:	183a      	adds	r2, r7, r0
1004af18:	1c59      	adds	r1, r3, #1
1004af1a:	7011      	strb	r1, [r2, #0]
1004af1c:	001a      	movs	r2, r3
1004af1e:	697b      	ldr	r3, [r7, #20]
1004af20:	189b      	adds	r3, r3, r2
1004af22:	2201      	movs	r2, #1
1004af24:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_LR_PD_THR_DIG_ENG;
1004af26:	183b      	adds	r3, r7, r0
1004af28:	781b      	ldrb	r3, [r3, #0]
1004af2a:	183a      	adds	r2, r7, r0
1004af2c:	1c59      	adds	r1, r3, #1
1004af2e:	7011      	strb	r1, [r2, #0]
1004af30:	001a      	movs	r2, r3
1004af32:	697b      	ldr	r3, [r7, #20]
1004af34:	189b      	adds	r3, r3, r2
1004af36:	2221      	movs	r2, #33	@ 0x21
1004af38:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->LR_PD_THR_DIG_ENG;
1004af3a:	4a6d      	ldr	r2, [pc, #436]	@ (1004b0f0 <HAL_RADIO_Init+0x67c>)
1004af3c:	23c2      	movs	r3, #194	@ 0xc2
1004af3e:	005b      	lsls	r3, r3, #1
1004af40:	58d1      	ldr	r1, [r2, r3]
1004af42:	183b      	adds	r3, r7, r0
1004af44:	781b      	ldrb	r3, [r3, #0]
1004af46:	0004      	movs	r4, r0
1004af48:	183a      	adds	r2, r7, r0
1004af4a:	1c58      	adds	r0, r3, #1
1004af4c:	7010      	strb	r0, [r2, #0]
1004af4e:	001a      	movs	r2, r3
1004af50:	697b      	ldr	r3, [r7, #20]
1004af52:	189b      	adds	r3, r3, r2
1004af54:	b2ca      	uxtb	r2, r1
1004af56:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004af58:	0020      	movs	r0, r4
1004af5a:	183b      	adds	r3, r7, r0
1004af5c:	781b      	ldrb	r3, [r3, #0]
1004af5e:	183a      	adds	r2, r7, r0
1004af60:	1c59      	adds	r1, r3, #1
1004af62:	7011      	strb	r1, [r2, #0]
1004af64:	001a      	movs	r2, r3
1004af66:	697b      	ldr	r3, [r7, #20]
1004af68:	189b      	adds	r3, r3, r2
1004af6a:	2201      	movs	r2, #1
1004af6c:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_LR_AAC_THR_DIG_ENG;
1004af6e:	183b      	adds	r3, r7, r0
1004af70:	781b      	ldrb	r3, [r3, #0]
1004af72:	183a      	adds	r2, r7, r0
1004af74:	1c59      	adds	r1, r3, #1
1004af76:	7011      	strb	r1, [r2, #0]
1004af78:	001a      	movs	r2, r3
1004af7a:	697b      	ldr	r3, [r7, #20]
1004af7c:	189b      	adds	r3, r3, r2
1004af7e:	2223      	movs	r2, #35	@ 0x23
1004af80:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->LR_AAC_THR_DIG_ENG;
1004af82:	4a5b      	ldr	r2, [pc, #364]	@ (1004b0f0 <HAL_RADIO_Init+0x67c>)
1004af84:	23c6      	movs	r3, #198	@ 0xc6
1004af86:	005b      	lsls	r3, r3, #1
1004af88:	58d1      	ldr	r1, [r2, r3]
1004af8a:	183b      	adds	r3, r7, r0
1004af8c:	781b      	ldrb	r3, [r3, #0]
1004af8e:	0004      	movs	r4, r0
1004af90:	183a      	adds	r2, r7, r0
1004af92:	1c58      	adds	r0, r3, #1
1004af94:	7010      	strb	r0, [r2, #0]
1004af96:	001a      	movs	r2, r3
1004af98:	697b      	ldr	r3, [r7, #20]
1004af9a:	189b      	adds	r3, r3, r2
1004af9c:	b2ca      	uxtb	r2, r1
1004af9e:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004afa0:	0020      	movs	r0, r4
1004afa2:	183b      	adds	r3, r7, r0
1004afa4:	781b      	ldrb	r3, [r3, #0]
1004afa6:	183a      	adds	r2, r7, r0
1004afa8:	1c59      	adds	r1, r3, #1
1004afaa:	7011      	strb	r1, [r2, #0]
1004afac:	001a      	movs	r2, r3
1004afae:	697b      	ldr	r3, [r7, #20]
1004afb0:	189b      	adds	r3, r3, r2
1004afb2:	2201      	movs	r2, #1
1004afb4:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_VIT_CONF_DIG_ENG;
1004afb6:	183b      	adds	r3, r7, r0
1004afb8:	781b      	ldrb	r3, [r3, #0]
1004afba:	183a      	adds	r2, r7, r0
1004afbc:	1c59      	adds	r1, r3, #1
1004afbe:	7011      	strb	r1, [r2, #0]
1004afc0:	001a      	movs	r2, r3
1004afc2:	697b      	ldr	r3, [r7, #20]
1004afc4:	189b      	adds	r3, r3, r2
1004afc6:	221b      	movs	r2, #27
1004afc8:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->VIT_CONF_DIG_ENG;
1004afca:	4a49      	ldr	r2, [pc, #292]	@ (1004b0f0 <HAL_RADIO_Init+0x67c>)
1004afcc:	23b6      	movs	r3, #182	@ 0xb6
1004afce:	005b      	lsls	r3, r3, #1
1004afd0:	58d1      	ldr	r1, [r2, r3]
1004afd2:	183b      	adds	r3, r7, r0
1004afd4:	781b      	ldrb	r3, [r3, #0]
1004afd6:	0004      	movs	r4, r0
1004afd8:	183a      	adds	r2, r7, r0
1004afda:	1c58      	adds	r0, r3, #1
1004afdc:	7010      	strb	r0, [r2, #0]
1004afde:	001a      	movs	r2, r3
1004afe0:	697b      	ldr	r3, [r7, #20]
1004afe2:	189b      	adds	r3, r3, r2
1004afe4:	b2ca      	uxtb	r2, r1
1004afe6:	701a      	strb	r2, [r3, #0]
#if defined(STM32WB05) || defined(STM32WB09)
  hot_table_radio_config[index++] = 0x01;
1004afe8:	0020      	movs	r0, r4
1004afea:	183b      	adds	r3, r7, r0
1004afec:	781b      	ldrb	r3, [r3, #0]
1004afee:	183a      	adds	r2, r7, r0
1004aff0:	1c59      	adds	r1, r3, #1
1004aff2:	7011      	strb	r1, [r2, #0]
1004aff4:	001a      	movs	r2, r3
1004aff6:	697b      	ldr	r3, [r7, #20]
1004aff8:	189b      	adds	r3, r3, r2
1004affa:	2201      	movs	r2, #1
1004affc:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_ANTSW_DIG0_USR;
1004affe:	183b      	adds	r3, r7, r0
1004b000:	781b      	ldrb	r3, [r3, #0]
1004b002:	183a      	adds	r2, r7, r0
1004b004:	1c59      	adds	r1, r3, #1
1004b006:	7011      	strb	r1, [r2, #0]
1004b008:	001a      	movs	r2, r3
1004b00a:	697b      	ldr	r3, [r7, #20]
1004b00c:	189b      	adds	r3, r3, r2
1004b00e:	2290      	movs	r2, #144	@ 0x90
1004b010:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->ANTSW_DIG0_USR;
1004b012:	4a37      	ldr	r2, [pc, #220]	@ (1004b0f0 <HAL_RADIO_Init+0x67c>)
1004b014:	23d0      	movs	r3, #208	@ 0xd0
1004b016:	009b      	lsls	r3, r3, #2
1004b018:	58d1      	ldr	r1, [r2, r3]
1004b01a:	183b      	adds	r3, r7, r0
1004b01c:	781b      	ldrb	r3, [r3, #0]
1004b01e:	0004      	movs	r4, r0
1004b020:	183a      	adds	r2, r7, r0
1004b022:	1c58      	adds	r0, r3, #1
1004b024:	7010      	strb	r0, [r2, #0]
1004b026:	001a      	movs	r2, r3
1004b028:	697b      	ldr	r3, [r7, #20]
1004b02a:	189b      	adds	r3, r3, r2
1004b02c:	b2ca      	uxtb	r2, r1
1004b02e:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = 0x01;
1004b030:	0020      	movs	r0, r4
1004b032:	183b      	adds	r3, r7, r0
1004b034:	781b      	ldrb	r3, [r3, #0]
1004b036:	183a      	adds	r2, r7, r0
1004b038:	1c59      	adds	r1, r3, #1
1004b03a:	7011      	strb	r1, [r2, #0]
1004b03c:	001a      	movs	r2, r3
1004b03e:	697b      	ldr	r3, [r7, #20]
1004b040:	189b      	adds	r3, r3, r2
1004b042:	2201      	movs	r2, #1
1004b044:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM_ANTSW_DIG1_USR;
1004b046:	183b      	adds	r3, r7, r0
1004b048:	781b      	ldrb	r3, [r3, #0]
1004b04a:	183a      	adds	r2, r7, r0
1004b04c:	1c59      	adds	r1, r3, #1
1004b04e:	7011      	strb	r1, [r2, #0]
1004b050:	001a      	movs	r2, r3
1004b052:	697b      	ldr	r3, [r7, #20]
1004b054:	189b      	adds	r3, r3, r2
1004b056:	2291      	movs	r2, #145	@ 0x91
1004b058:	701a      	strb	r2, [r3, #0]
  hot_table_radio_config[index++] = RRM->ANTSW_DIG1_USR;
1004b05a:	4a25      	ldr	r2, [pc, #148]	@ (1004b0f0 <HAL_RADIO_Init+0x67c>)
1004b05c:	23d1      	movs	r3, #209	@ 0xd1
1004b05e:	009b      	lsls	r3, r3, #2
1004b060:	58d1      	ldr	r1, [r2, r3]
1004b062:	183b      	adds	r3, r7, r0
1004b064:	781b      	ldrb	r3, [r3, #0]
1004b066:	0004      	movs	r4, r0
1004b068:	183a      	adds	r2, r7, r0
1004b06a:	1c58      	adds	r0, r3, #1
1004b06c:	7010      	strb	r0, [r2, #0]
1004b06e:	001a      	movs	r2, r3
1004b070:	697b      	ldr	r3, [r7, #20]
1004b072:	189b      	adds	r3, r3, r2
1004b074:	b2ca      	uxtb	r2, r1
1004b076:	701a      	strb	r2, [r3, #0]
#endif
  hot_table_radio_config[index++] = 0x00;
1004b078:	193b      	adds	r3, r7, r4
1004b07a:	781b      	ldrb	r3, [r3, #0]
1004b07c:	193a      	adds	r2, r7, r4
1004b07e:	1c59      	adds	r1, r3, #1
1004b080:	7011      	strb	r1, [r2, #0]
1004b082:	001a      	movs	r2, r3
1004b084:	697b      	ldr	r3, [r7, #20]
1004b086:	189b      	adds	r3, r3, r2
1004b088:	2200      	movs	r2, #0
1004b08a:	701a      	strb	r2, [r3, #0]

  hot_table_radio_config_u32[0] = (uint32_t)(&hot_table_radio_config_u32[4]); /* Point to Port 0 command list 1 executed when Wakeup timer triggers */
1004b08c:	4a19      	ldr	r2, [pc, #100]	@ (1004b0f4 <HAL_RADIO_Init+0x680>)
1004b08e:	4b1a      	ldr	r3, [pc, #104]	@ (1004b0f8 <HAL_RADIO_Init+0x684>)
1004b090:	601a      	str	r2, [r3, #0]
  hot_table_radio_config_u32[1] = (uint32_t)(&hot_table_radio_config_u32[4]); /* Point to Port 0 command list 2 executed when Timer1 triggers       */
1004b092:	4a18      	ldr	r2, [pc, #96]	@ (1004b0f4 <HAL_RADIO_Init+0x680>)
1004b094:	4b18      	ldr	r3, [pc, #96]	@ (1004b0f8 <HAL_RADIO_Init+0x684>)
1004b096:	605a      	str	r2, [r3, #4]
  hot_table_radio_config_u32[2] = (uint32_t)(&hot_table_radio_config_u32[3]); /* Point to Port 0 command list 3 executed when Timer2 triggers       */
1004b098:	4a18      	ldr	r2, [pc, #96]	@ (1004b0fc <HAL_RADIO_Init+0x688>)
1004b09a:	4b17      	ldr	r3, [pc, #92]	@ (1004b0f8 <HAL_RADIO_Init+0x684>)
1004b09c:	609a      	str	r2, [r3, #8]
  hot_table_radio_config_u32[3] = 0x00000000;                /* Null command */
1004b09e:	4b16      	ldr	r3, [pc, #88]	@ (1004b0f8 <HAL_RADIO_Init+0x684>)
1004b0a0:	2200      	movs	r2, #0
1004b0a2:	60da      	str	r2, [r3, #12]

  LL_RADIO_SetRadioConfigurationAddressPointer(hot_table_radio_config_u32[0]);
1004b0a4:	4b14      	ldr	r3, [pc, #80]	@ (1004b0f8 <HAL_RADIO_Init+0x684>)
1004b0a6:	681b      	ldr	r3, [r3, #0]
1004b0a8:	0018      	movs	r0, r3
1004b0aa:	f7ff fb3d 	bl	1004a728 <LL_RADIO_SetRadioConfigurationAddressPointer>
  /* Reload radio config pointer */
  RRM->UDRA_CTRL0 = RRM_UDRA_CTRL0_RELOAD_RDCFGPTR;
1004b0ae:	4b10      	ldr	r3, [pc, #64]	@ (1004b0f0 <HAL_RADIO_Init+0x67c>)
1004b0b0:	2201      	movs	r2, #1
1004b0b2:	611a      	str	r2, [r3, #16]
  LL_RADIO_Active2ErrorInterrupt_Enable();
1004b0b4:	f7ff fc8c 	bl	1004a9d0 <LL_RADIO_Active2ErrorInterrupt_Enable>
  globalParameters.back2backTime = BACK_TO_BACK_TIME;
  globalParameters.tone_start_stop_flag = 0;
#endif

  /*Clear all interrupts of the BLUE Controller*/
  uint32_t int_val_tmp = BLUE->INTERRUPT1REG;
1004b0b8:	23c0      	movs	r3, #192	@ 0xc0
1004b0ba:	05db      	lsls	r3, r3, #23
1004b0bc:	685b      	ldr	r3, [r3, #4]
1004b0be:	60fb      	str	r3, [r7, #12]
  BLUE->INTERRUPT1REG = int_val_tmp;
1004b0c0:	23c0      	movs	r3, #192	@ 0xc0
1004b0c2:	05db      	lsls	r3, r3, #23
1004b0c4:	68fa      	ldr	r2, [r7, #12]
1004b0c6:	605a      	str	r2, [r3, #4]

  /*BLE wake up IRQ Status clearing and enable*/
  WAKEUP->WAKEUP_BLE_IRQ_STATUS |= 1;
1004b0c8:	4b0d      	ldr	r3, [pc, #52]	@ (1004b100 <HAL_RADIO_Init+0x68c>)
1004b0ca:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
1004b0cc:	4b0c      	ldr	r3, [pc, #48]	@ (1004b100 <HAL_RADIO_Init+0x68c>)
1004b0ce:	2101      	movs	r1, #1
1004b0d0:	430a      	orrs	r2, r1
1004b0d2:	645a      	str	r2, [r3, #68]	@ 0x44
  WAKEUP->WAKEUP_BLE_IRQ_ENABLE |= 1;
1004b0d4:	4b0a      	ldr	r3, [pc, #40]	@ (1004b100 <HAL_RADIO_Init+0x68c>)
1004b0d6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
1004b0d8:	4b09      	ldr	r3, [pc, #36]	@ (1004b100 <HAL_RADIO_Init+0x68c>)
1004b0da:	2101      	movs	r1, #1
1004b0dc:	430a      	orrs	r2, r1
1004b0de:	641a      	str	r2, [r3, #64]	@ 0x40
  /* If the device is configured with
     System clock = 64 MHz and BLE clock = 16 MHz
     a register read is necessary to end fine
     the clear interrupt register operation,
     due the AHB down converter latency */
  int_val_tmp = BLUE->INTERRUPT1REG;
1004b0e0:	23c0      	movs	r3, #192	@ 0xc0
1004b0e2:	05db      	lsls	r3, r3, #23
1004b0e4:	685b      	ldr	r3, [r3, #4]
1004b0e6:	60fb      	str	r3, [r7, #12]

  return;
1004b0e8:	46c0      	nop			@ (mov r8, r8)
}
1004b0ea:	46bd      	mov	sp, r7
1004b0ec:	b00d      	add	sp, #52	@ 0x34
1004b0ee:	bd90      	pop	{r4, r7, pc}
1004b0f0:	60001400 	.word	0x60001400
1004b0f4:	200006cc 	.word	0x200006cc
1004b0f8:	200006bc 	.word	0x200006bc
1004b0fc:	200006c8 	.word	0x200006c8
1004b100:	60001800 	.word	0x60001800

1004b104 <HAL_RADIO_ReadRSSI>:
/**
  * @brief  Read RSSI
  * @retval int8_t: RSSI in dBm
  */
int8_t HAL_RADIO_ReadRSSI(void)
{
1004b104:	b580      	push	{r7, lr}
1004b106:	b086      	sub	sp, #24
1004b108:	af00      	add	r7, sp, #0
  int32_t rssi_dbm;
  uint32_t rssi0 = RRM->RSSI0_DIG_OUT;
1004b10a:	4a24      	ldr	r2, [pc, #144]	@ (1004b19c <HAL_RADIO_ReadRSSI+0x98>)
1004b10c:	23a9      	movs	r3, #169	@ 0xa9
1004b10e:	009b      	lsls	r3, r3, #2
1004b110:	58d3      	ldr	r3, [r2, r3]
1004b112:	60fb      	str	r3, [r7, #12]
  uint32_t rssi1 = RRM->RSSI1_DIG_OUT;
1004b114:	4a21      	ldr	r2, [pc, #132]	@ (1004b19c <HAL_RADIO_ReadRSSI+0x98>)
1004b116:	23aa      	movs	r3, #170	@ 0xaa
1004b118:	009b      	lsls	r3, r3, #2
1004b11a:	58d3      	ldr	r3, [r2, r3]
1004b11c:	60bb      	str	r3, [r7, #8]

  uint32_t rssi_int16 = ((rssi1 & 0xFF) << 8) | (rssi0 & 0xFF);
1004b11e:	68bb      	ldr	r3, [r7, #8]
1004b120:	021b      	lsls	r3, r3, #8
1004b122:	041b      	lsls	r3, r3, #16
1004b124:	0c1a      	lsrs	r2, r3, #16
1004b126:	68fb      	ldr	r3, [r7, #12]
1004b128:	21ff      	movs	r1, #255	@ 0xff
1004b12a:	400b      	ands	r3, r1
1004b12c:	4313      	orrs	r3, r2
1004b12e:	613b      	str	r3, [r7, #16]
  uint32_t reg_agc = RRM->AGC_DIG_OUT;
1004b130:	4a1a      	ldr	r2, [pc, #104]	@ (1004b19c <HAL_RADIO_ReadRSSI+0x98>)
1004b132:	23ab      	movs	r3, #171	@ 0xab
1004b134:	009b      	lsls	r3, r3, #2
1004b136:	58d3      	ldr	r3, [r2, r3]
1004b138:	607b      	str	r3, [r7, #4]

  if ((rssi_int16 == 0U) || (reg_agc > 0xbU))
1004b13a:	693b      	ldr	r3, [r7, #16]
1004b13c:	2b00      	cmp	r3, #0
1004b13e:	d002      	beq.n	1004b146 <HAL_RADIO_ReadRSSI+0x42>
1004b140:	687b      	ldr	r3, [r7, #4]
1004b142:	2b0b      	cmp	r3, #11
1004b144:	d902      	bls.n	1004b14c <HAL_RADIO_ReadRSSI+0x48>
  {
    rssi_dbm = 127 ;
1004b146:	237f      	movs	r3, #127	@ 0x7f
1004b148:	617b      	str	r3, [r7, #20]
1004b14a:	e020      	b.n	1004b18e <HAL_RADIO_ReadRSSI+0x8a>
  }
  else
  {
    rssi_dbm = (int32_t)reg_agc * 6 - RSSI_OFFSET;//127 ;
1004b14c:	687a      	ldr	r2, [r7, #4]
1004b14e:	0013      	movs	r3, r2
1004b150:	005b      	lsls	r3, r3, #1
1004b152:	189b      	adds	r3, r3, r2
1004b154:	005b      	lsls	r3, r3, #1
1004b156:	3b77      	subs	r3, #119	@ 0x77
1004b158:	617b      	str	r3, [r7, #20]
    while (rssi_int16 > 30U)
1004b15a:	e005      	b.n	1004b168 <HAL_RADIO_ReadRSSI+0x64>
    {
      rssi_dbm = rssi_dbm + 6 ;
1004b15c:	697b      	ldr	r3, [r7, #20]
1004b15e:	3306      	adds	r3, #6
1004b160:	617b      	str	r3, [r7, #20]
      rssi_int16 = (rssi_int16 >> 1) ;
1004b162:	693b      	ldr	r3, [r7, #16]
1004b164:	085b      	lsrs	r3, r3, #1
1004b166:	613b      	str	r3, [r7, #16]
    while (rssi_int16 > 30U)
1004b168:	693b      	ldr	r3, [r7, #16]
1004b16a:	2b1e      	cmp	r3, #30
1004b16c:	d8f6      	bhi.n	1004b15c <HAL_RADIO_ReadRSSI+0x58>
    }
    rssi_dbm = rssi_dbm + (int32_t)(uint32_t)((417U * rssi_int16 + 18080U) >> 10);
1004b16e:	693a      	ldr	r2, [r7, #16]
1004b170:	0013      	movs	r3, r2
1004b172:	005b      	lsls	r3, r3, #1
1004b174:	189b      	adds	r3, r3, r2
1004b176:	009b      	lsls	r3, r3, #2
1004b178:	189b      	adds	r3, r3, r2
1004b17a:	015b      	lsls	r3, r3, #5
1004b17c:	189b      	adds	r3, r3, r2
1004b17e:	4a08      	ldr	r2, [pc, #32]	@ (1004b1a0 <HAL_RADIO_ReadRSSI+0x9c>)
1004b180:	4694      	mov	ip, r2
1004b182:	4463      	add	r3, ip
1004b184:	0a9b      	lsrs	r3, r3, #10
1004b186:	001a      	movs	r2, r3
1004b188:	697b      	ldr	r3, [r7, #20]
1004b18a:	189b      	adds	r3, r3, r2
1004b18c:	617b      	str	r3, [r7, #20]
  }
  return (int8_t)rssi_dbm;
1004b18e:	697b      	ldr	r3, [r7, #20]
1004b190:	b25b      	sxtb	r3, r3
}
1004b192:	0018      	movs	r0, r3
1004b194:	46bd      	mov	sp, r7
1004b196:	b006      	add	sp, #24
1004b198:	bd80      	pop	{r7, pc}
1004b19a:	46c0      	nop			@ (mov r8, r8)
1004b19c:	60001400 	.word	0x60001400
1004b1a0:	000046a0 	.word	0x000046a0

1004b1a4 <HAL_RADIO_TXRX_IRQHandler>:
__weak void HAL_RADIO_TxRxSeqCallback(void)
{
}

void HAL_RADIO_TXRX_IRQHandler(void)
{
1004b1a4:	b580      	push	{r7, lr}
1004b1a6:	b082      	sub	sp, #8
1004b1a8:	af00      	add	r7, sp, #0
  uint32_t blue_status = BLUE->STATUSREG;
1004b1aa:	23c0      	movs	r3, #192	@ 0xc0
1004b1ac:	05db      	lsls	r3, r3, #23
1004b1ae:	69db      	ldr	r3, [r3, #28]
1004b1b0:	607b      	str	r3, [r7, #4]
  uint32_t blue_interrupt = BLUE->INTERRUPT1REG;
1004b1b2:	23c0      	movs	r3, #192	@ 0xc0
1004b1b4:	05db      	lsls	r3, r3, #23
1004b1b6:	685b      	ldr	r3, [r3, #4]
1004b1b8:	603b      	str	r3, [r7, #0]

  /** clear all pending interrupts */
  BLUE->INTERRUPT1REG = blue_interrupt;
1004b1ba:	23c0      	movs	r3, #192	@ 0xc0
1004b1bc:	05db      	lsls	r3, r3, #23
1004b1be:	683a      	ldr	r2, [r7, #0]
1004b1c0:	605a      	str	r2, [r3, #4]

  HAL_RADIO_TIMER_EndOfRadioActivityIsr();
1004b1c2:	f000 fcbd 	bl	1004bb40 <HAL_RADIO_TIMER_EndOfRadioActivityIsr>

#if (USE_RADIO_PROPRIETARY_DRIVER == 1)
  HAL_RADIO_ActionPacketIsr(blue_status | blue_interrupt);
#endif

  HAL_RADIO_TxRxCallback(blue_status | blue_interrupt);
1004b1c6:	687a      	ldr	r2, [r7, #4]
1004b1c8:	683b      	ldr	r3, [r7, #0]
1004b1ca:	4313      	orrs	r3, r2
1004b1cc:	0018      	movs	r0, r3
1004b1ce:	f7f7 fb72 	bl	100428b6 <HAL_RADIO_TxRxCallback>

  HAL_RADIO_TIMER_RadioTimerIsr();
1004b1d2:	f000 fcaf 	bl	1004bb34 <HAL_RADIO_TIMER_RadioTimerIsr>
  /* If the device is configured with
     System clock = 64 MHz and BLE clock = 16 MHz
     a register read is necessary to end fine
     the clear interrupt register operation,
     due the AHB down converter latency */
  blue_interrupt = BLUE->INTERRUPT1REG;
1004b1d6:	23c0      	movs	r3, #192	@ 0xc0
1004b1d8:	05db      	lsls	r3, r3, #23
1004b1da:	685b      	ldr	r3, [r3, #4]
1004b1dc:	603b      	str	r3, [r7, #0]
}
1004b1de:	46c0      	nop			@ (mov r8, r8)
1004b1e0:	46bd      	mov	sp, r7
1004b1e2:	b002      	add	sp, #8
1004b1e4:	bd80      	pop	{r7, pc}

1004b1e6 <HAL_RADIO_TXRX_SEQ_IRQHandler>:


void HAL_RADIO_TXRX_SEQ_IRQHandler(void)
{
1004b1e6:	b580      	push	{r7, lr}
1004b1e8:	af00      	add	r7, sp, #0
  HAL_RADIO_TxRxSeqCallback();
1004b1ea:	f7fd fe11 	bl	10048e10 <HAL_RADIO_TxRxSeqCallback>
}
1004b1ee:	46c0      	nop			@ (mov r8, r8)
1004b1f0:	46bd      	mov	sp, r7
1004b1f2:	bd80      	pop	{r7, pc}

1004b1f4 <__NVIC_EnableIRQ>:
{
1004b1f4:	b580      	push	{r7, lr}
1004b1f6:	b082      	sub	sp, #8
1004b1f8:	af00      	add	r7, sp, #0
1004b1fa:	0002      	movs	r2, r0
1004b1fc:	1dfb      	adds	r3, r7, #7
1004b1fe:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
1004b200:	1dfb      	adds	r3, r7, #7
1004b202:	781b      	ldrb	r3, [r3, #0]
1004b204:	2b7f      	cmp	r3, #127	@ 0x7f
1004b206:	d809      	bhi.n	1004b21c <__NVIC_EnableIRQ+0x28>
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1004b208:	1dfb      	adds	r3, r7, #7
1004b20a:	781b      	ldrb	r3, [r3, #0]
1004b20c:	001a      	movs	r2, r3
1004b20e:	231f      	movs	r3, #31
1004b210:	401a      	ands	r2, r3
1004b212:	4b04      	ldr	r3, [pc, #16]	@ (1004b224 <__NVIC_EnableIRQ+0x30>)
1004b214:	2101      	movs	r1, #1
1004b216:	4091      	lsls	r1, r2
1004b218:	000a      	movs	r2, r1
1004b21a:	601a      	str	r2, [r3, #0]
}
1004b21c:	46c0      	nop			@ (mov r8, r8)
1004b21e:	46bd      	mov	sp, r7
1004b220:	b002      	add	sp, #8
1004b222:	bd80      	pop	{r7, pc}
1004b224:	e000e100 	.word	0xe000e100

1004b228 <LL_RADIO_TIMER_EnableTimer1>:
{
1004b228:	b580      	push	{r7, lr}
1004b22a:	b082      	sub	sp, #8
1004b22c:	af00      	add	r7, sp, #0
1004b22e:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEx->TIMEOUTDESTREG, BLUE_TIMEOUTDESTREG_DESTINATION, LL_RADIO_TIMER_1);
1004b230:	687b      	ldr	r3, [r7, #4]
1004b232:	68db      	ldr	r3, [r3, #12]
1004b234:	2203      	movs	r2, #3
1004b236:	4393      	bics	r3, r2
1004b238:	2202      	movs	r2, #2
1004b23a:	431a      	orrs	r2, r3
1004b23c:	687b      	ldr	r3, [r7, #4]
1004b23e:	60da      	str	r2, [r3, #12]
}
1004b240:	46c0      	nop			@ (mov r8, r8)
1004b242:	46bd      	mov	sp, r7
1004b244:	b002      	add	sp, #8
1004b246:	bd80      	pop	{r7, pc}

1004b248 <LL_RADIO_TIMER_DisableTimer1>:
{
1004b248:	b580      	push	{r7, lr}
1004b24a:	b082      	sub	sp, #8
1004b24c:	af00      	add	r7, sp, #0
1004b24e:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEx->TIMEOUTDESTREG, BLUE_TIMEOUTDESTREG_DESTINATION, 0);
1004b250:	687b      	ldr	r3, [r7, #4]
1004b252:	68db      	ldr	r3, [r3, #12]
1004b254:	2203      	movs	r2, #3
1004b256:	4393      	bics	r3, r2
1004b258:	001a      	movs	r2, r3
1004b25a:	687b      	ldr	r3, [r7, #4]
1004b25c:	60da      	str	r2, [r3, #12]
}
1004b25e:	46c0      	nop			@ (mov r8, r8)
1004b260:	46bd      	mov	sp, r7
1004b262:	b002      	add	sp, #8
1004b264:	bd80      	pop	{r7, pc}

1004b266 <LL_RADIO_TIMER_DisableTimer2>:
{
1004b266:	b580      	push	{r7, lr}
1004b268:	b082      	sub	sp, #8
1004b26a:	af00      	add	r7, sp, #0
1004b26c:	6078      	str	r0, [r7, #4]
  MODIFY_REG_FIELD(BLUEx->TIMEOUTDESTREG, BLUE_TIMEOUTDESTREG_DESTINATION, 0);
1004b26e:	687b      	ldr	r3, [r7, #4]
1004b270:	68db      	ldr	r3, [r3, #12]
1004b272:	2203      	movs	r2, #3
1004b274:	4393      	bics	r3, r2
1004b276:	001a      	movs	r2, r3
1004b278:	687b      	ldr	r3, [r7, #4]
1004b27a:	60da      	str	r2, [r3, #12]
}
1004b27c:	46c0      	nop			@ (mov r8, r8)
1004b27e:	46bd      	mov	sp, r7
1004b280:	b002      	add	sp, #8
1004b282:	bd80      	pop	{r7, pc}

1004b284 <LL_RADIO_TIMER_SetTimeout>:
{
1004b284:	b580      	push	{r7, lr}
1004b286:	b082      	sub	sp, #8
1004b288:	af00      	add	r7, sp, #0
1004b28a:	6078      	str	r0, [r7, #4]
1004b28c:	6039      	str	r1, [r7, #0]
  WRITE_REG(BLUEx->TIMEOUTREG, timeout);
1004b28e:	687b      	ldr	r3, [r7, #4]
1004b290:	683a      	ldr	r2, [r7, #0]
1004b292:	611a      	str	r2, [r3, #16]
}
1004b294:	46c0      	nop			@ (mov r8, r8)
1004b296:	46bd      	mov	sp, r7
1004b298:	b002      	add	sp, #8
1004b29a:	bd80      	pop	{r7, pc}

1004b29c <LL_RADIO_TIMER_EnableBLEWakeupTimer>:
{
1004b29c:	b580      	push	{r7, lr}
1004b29e:	b082      	sub	sp, #8
1004b2a0:	af00      	add	r7, sp, #0
1004b2a2:	6078      	str	r0, [r7, #4]
  SET_BIT(WAKEUPx->BLUE_SLEEP_REQUEST_MODE, WAKEUP_BLUE_SLEEP_REQUEST_MODE_BLE_WAKEUP_EN);
1004b2a4:	687b      	ldr	r3, [r7, #4]
1004b2a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004b2a8:	2280      	movs	r2, #128	@ 0x80
1004b2aa:	05d2      	lsls	r2, r2, #23
1004b2ac:	431a      	orrs	r2, r3
1004b2ae:	687b      	ldr	r3, [r7, #4]
1004b2b0:	629a      	str	r2, [r3, #40]	@ 0x28
}
1004b2b2:	46c0      	nop			@ (mov r8, r8)
1004b2b4:	46bd      	mov	sp, r7
1004b2b6:	b002      	add	sp, #8
1004b2b8:	bd80      	pop	{r7, pc}
	...

1004b2bc <LL_RADIO_TIMER_DisableBLEWakeupTimer>:
{
1004b2bc:	b580      	push	{r7, lr}
1004b2be:	b082      	sub	sp, #8
1004b2c0:	af00      	add	r7, sp, #0
1004b2c2:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(WAKEUPx->BLUE_SLEEP_REQUEST_MODE, WAKEUP_BLUE_SLEEP_REQUEST_MODE_BLE_WAKEUP_EN);
1004b2c4:	687b      	ldr	r3, [r7, #4]
1004b2c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004b2c8:	4a03      	ldr	r2, [pc, #12]	@ (1004b2d8 <LL_RADIO_TIMER_DisableBLEWakeupTimer+0x1c>)
1004b2ca:	401a      	ands	r2, r3
1004b2cc:	687b      	ldr	r3, [r7, #4]
1004b2ce:	629a      	str	r2, [r3, #40]	@ 0x28
}
1004b2d0:	46c0      	nop			@ (mov r8, r8)
1004b2d2:	46bd      	mov	sp, r7
1004b2d4:	b002      	add	sp, #8
1004b2d6:	bd80      	pop	{r7, pc}
1004b2d8:	bfffffff 	.word	0xbfffffff

1004b2dc <LL_RADIO_TIMER_EnableCPUWakeupTimer>:
{
1004b2dc:	b580      	push	{r7, lr}
1004b2de:	b082      	sub	sp, #8
1004b2e0:	af00      	add	r7, sp, #0
1004b2e2:	6078      	str	r0, [r7, #4]
  SET_BIT(WAKEUPx->CM0_SLEEP_REQUEST_MODE, WAKEUP_CM0_SLEEP_REQUEST_MODE_CPU_WAKEUP_EN);
1004b2e4:	687b      	ldr	r3, [r7, #4]
1004b2e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
1004b2e8:	2280      	movs	r2, #128	@ 0x80
1004b2ea:	05d2      	lsls	r2, r2, #23
1004b2ec:	431a      	orrs	r2, r3
1004b2ee:	687b      	ldr	r3, [r7, #4]
1004b2f0:	631a      	str	r2, [r3, #48]	@ 0x30
}
1004b2f2:	46c0      	nop			@ (mov r8, r8)
1004b2f4:	46bd      	mov	sp, r7
1004b2f6:	b002      	add	sp, #8
1004b2f8:	bd80      	pop	{r7, pc}
	...

1004b2fc <LL_RADIO_TIMER_DisableCPUWakeupTimer>:
{
1004b2fc:	b580      	push	{r7, lr}
1004b2fe:	b082      	sub	sp, #8
1004b300:	af00      	add	r7, sp, #0
1004b302:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(WAKEUPx->CM0_SLEEP_REQUEST_MODE, WAKEUP_CM0_SLEEP_REQUEST_MODE_CPU_WAKEUP_EN);
1004b304:	687b      	ldr	r3, [r7, #4]
1004b306:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
1004b308:	4a03      	ldr	r2, [pc, #12]	@ (1004b318 <LL_RADIO_TIMER_DisableCPUWakeupTimer+0x1c>)
1004b30a:	401a      	ands	r2, r3
1004b30c:	687b      	ldr	r3, [r7, #4]
1004b30e:	631a      	str	r2, [r3, #48]	@ 0x30
}
1004b310:	46c0      	nop			@ (mov r8, r8)
1004b312:	46bd      	mov	sp, r7
1004b314:	b002      	add	sp, #8
1004b316:	bd80      	pop	{r7, pc}
1004b318:	bfffffff 	.word	0xbfffffff

1004b31c <LL_RADIO_TIMER_SetWakeupOffset>:
{
1004b31c:	b580      	push	{r7, lr}
1004b31e:	b082      	sub	sp, #8
1004b320:	af00      	add	r7, sp, #0
1004b322:	6078      	str	r0, [r7, #4]
1004b324:	000a      	movs	r2, r1
1004b326:	1cfb      	adds	r3, r7, #3
1004b328:	701a      	strb	r2, [r3, #0]
  WRITE_REG(WAKEUPx->WAKEUP_OFFSET[0], (Time & 0xFF));
1004b32a:	1cfb      	adds	r3, r7, #3
1004b32c:	781a      	ldrb	r2, [r3, #0]
1004b32e:	687b      	ldr	r3, [r7, #4]
1004b330:	609a      	str	r2, [r3, #8]
}
1004b332:	46c0      	nop			@ (mov r8, r8)
1004b334:	46bd      	mov	sp, r7
1004b336:	b002      	add	sp, #8
1004b338:	bd80      	pop	{r7, pc}

1004b33a <LL_RADIO_TIMER_SetBLEWakeupTime>:
{
1004b33a:	b580      	push	{r7, lr}
1004b33c:	b082      	sub	sp, #8
1004b33e:	af00      	add	r7, sp, #0
1004b340:	6078      	str	r0, [r7, #4]
1004b342:	6039      	str	r1, [r7, #0]
  WRITE_REG(WAKEUPx->BLUE_WAKEUP_TIME, Time);
1004b344:	687b      	ldr	r3, [r7, #4]
1004b346:	683a      	ldr	r2, [r7, #0]
1004b348:	625a      	str	r2, [r3, #36]	@ 0x24
}
1004b34a:	46c0      	nop			@ (mov r8, r8)
1004b34c:	46bd      	mov	sp, r7
1004b34e:	b002      	add	sp, #8
1004b350:	bd80      	pop	{r7, pc}

1004b352 <LL_RADIO_TIMER_SetCPUWakeupTime>:
{
1004b352:	b580      	push	{r7, lr}
1004b354:	b082      	sub	sp, #8
1004b356:	af00      	add	r7, sp, #0
1004b358:	6078      	str	r0, [r7, #4]
1004b35a:	6039      	str	r1, [r7, #0]
  WRITE_REG(WAKEUPx->CM0_WAKEUP_TIME, Time);
1004b35c:	687b      	ldr	r3, [r7, #4]
1004b35e:	683a      	ldr	r2, [r7, #0]
1004b360:	62da      	str	r2, [r3, #44]	@ 0x2c
}
1004b362:	46c0      	nop			@ (mov r8, r8)
1004b364:	46bd      	mov	sp, r7
1004b366:	b002      	add	sp, #8
1004b368:	bd80      	pop	{r7, pc}

1004b36a <LL_RADIO_TIMER_GetAbsoluteTime>:
{
1004b36a:	b580      	push	{r7, lr}
1004b36c:	b082      	sub	sp, #8
1004b36e:	af00      	add	r7, sp, #0
1004b370:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_REG(WAKEUPx->ABSOLUTE_TIME));
1004b372:	687b      	ldr	r3, [r7, #4]
1004b374:	691b      	ldr	r3, [r3, #16]
}
1004b376:	0018      	movs	r0, r3
1004b378:	46bd      	mov	sp, r7
1004b37a:	b002      	add	sp, #8
1004b37c:	bd80      	pop	{r7, pc}

1004b37e <LL_RADIO_TIMER_EnableWakeupTimerLowPowerMode>:
  * @rmtoll BLUE_SLEEP_REQUEST_MODE    SLEEP_EN   LL_RADIO_TIMER_EnableWakeupTimerLowPowerMode
  * @param  WAKEUPx Radio Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TIMER_EnableWakeupTimerLowPowerMode(WAKEUP_TypeDef *WAKEUPx)
{
1004b37e:	b580      	push	{r7, lr}
1004b380:	b082      	sub	sp, #8
1004b382:	af00      	add	r7, sp, #0
1004b384:	6078      	str	r0, [r7, #4]
  SET_BIT(WAKEUPx->BLUE_SLEEP_REQUEST_MODE, WAKEUP_BLUE_SLEEP_REQUEST_MODE_SLEEP_EN);
1004b386:	687b      	ldr	r3, [r7, #4]
1004b388:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004b38a:	2280      	movs	r2, #128	@ 0x80
1004b38c:	0592      	lsls	r2, r2, #22
1004b38e:	431a      	orrs	r2, r3
1004b390:	687b      	ldr	r3, [r7, #4]
1004b392:	629a      	str	r2, [r3, #40]	@ 0x28
}
1004b394:	46c0      	nop			@ (mov r8, r8)
1004b396:	46bd      	mov	sp, r7
1004b398:	b002      	add	sp, #8
1004b39a:	bd80      	pop	{r7, pc}

1004b39c <LL_RADIO_TIMER_SetSleepRequestMode>:
  * @param  WAKEUPx Radio Timer instance
  * @param  mode Sleep mode value in range 0-7
  * @retval None.
  */
__STATIC_INLINE void LL_RADIO_TIMER_SetSleepRequestMode(WAKEUP_TypeDef *WAKEUPx, uint8_t mode)
{
1004b39c:	b580      	push	{r7, lr}
1004b39e:	b082      	sub	sp, #8
1004b3a0:	af00      	add	r7, sp, #0
1004b3a2:	6078      	str	r0, [r7, #4]
1004b3a4:	000a      	movs	r2, r1
1004b3a6:	1cfb      	adds	r3, r7, #3
1004b3a8:	701a      	strb	r2, [r3, #0]
#if defined(STM32WB09)
  return;
1004b3aa:	46c0      	nop			@ (mov r8, r8)
#else
  MODIFY_REG_FIELD(WAKEUP->BLUE_SLEEP_REQUEST_MODE, WAKEUP_BLUE_SLEEP_REQUEST_MODE_SLEEP_REQ_MODE, (mode & 0x7));
#endif
}
1004b3ac:	46bd      	mov	sp, r7
1004b3ae:	b002      	add	sp, #8
1004b3b0:	bd80      	pop	{r7, pc}

1004b3b2 <LL_RADIO_TIMER_EnableCPUWakeupIT>:
  * @rmtoll WAKEUP_CM0_IRQ_ENABLE    WAKEUP_IT   LL_RADIO_TIMER_EnableCPUWakeupIT
  * @param  WAKEUPx Radio Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TIMER_EnableCPUWakeupIT(WAKEUP_TypeDef *WAKEUPx)
{
1004b3b2:	b580      	push	{r7, lr}
1004b3b4:	b082      	sub	sp, #8
1004b3b6:	af00      	add	r7, sp, #0
1004b3b8:	6078      	str	r0, [r7, #4]
  SET_BIT(WAKEUPx->WAKEUP_CM0_IRQ_ENABLE, WAKEUP_WAKEUP_CM0_IRQ_ENABLE_WAKEUP_IT);
1004b3ba:	687b      	ldr	r3, [r7, #4]
1004b3bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
1004b3be:	2201      	movs	r2, #1
1004b3c0:	431a      	orrs	r2, r3
1004b3c2:	687b      	ldr	r3, [r7, #4]
1004b3c4:	649a      	str	r2, [r3, #72]	@ 0x48
}
1004b3c6:	46c0      	nop			@ (mov r8, r8)
1004b3c8:	46bd      	mov	sp, r7
1004b3ca:	b002      	add	sp, #8
1004b3cc:	bd80      	pop	{r7, pc}

1004b3ce <LL_RADIO_TIMER_ClearFlag_CPUWakeup>:
  * @rmtoll WAKEUP_CM0_IRQ_STATUS   WAKEUP_IT   LL_RADIO_TIMER_ClearFlag_CPUWakeup
  * @param  WAKEUPx Radio Timer instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TIMER_ClearFlag_CPUWakeup(WAKEUP_TypeDef *WAKEUPx)
{
1004b3ce:	b580      	push	{r7, lr}
1004b3d0:	b082      	sub	sp, #8
1004b3d2:	af00      	add	r7, sp, #0
1004b3d4:	6078      	str	r0, [r7, #4]
  SET_BIT(WAKEUPx->WAKEUP_CM0_IRQ_STATUS, WAKEUP_WAKEUP_CM0_IRQ_STATUS_WAKEUP_IT);
1004b3d6:	687b      	ldr	r3, [r7, #4]
1004b3d8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
1004b3da:	2201      	movs	r2, #1
1004b3dc:	431a      	orrs	r2, r3
1004b3de:	687b      	ldr	r3, [r7, #4]
1004b3e0:	64da      	str	r2, [r3, #76]	@ 0x4c
}
1004b3e2:	46c0      	nop			@ (mov r8, r8)
1004b3e4:	46bd      	mov	sp, r7
1004b3e6:	b002      	add	sp, #8
1004b3e8:	bd80      	pop	{r7, pc}

1004b3ea <LL_RADIO_TIMER_IsActiveFlag_CPUWakeup>:
  * @rmtoll WAKEUP_CM0_IRQ_STATUS   WAKEUP_IT   LL_RADIO_TIMER_IsActiveFlag_CPUWakeup
  * @param  WAKEUPx Radio Timer instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RADIO_TIMER_IsActiveFlag_CPUWakeup(WAKEUP_TypeDef *WAKEUPx)
{
1004b3ea:	b580      	push	{r7, lr}
1004b3ec:	b082      	sub	sp, #8
1004b3ee:	af00      	add	r7, sp, #0
1004b3f0:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(WAKEUPx->WAKEUP_CM0_IRQ_STATUS, WAKEUP_WAKEUP_CM0_IRQ_STATUS_WAKEUP_IT) == (WAKEUP_WAKEUP_CM0_IRQ_STATUS_WAKEUP_IT)) ? 1UL : 0UL);
1004b3f2:	687b      	ldr	r3, [r7, #4]
1004b3f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
1004b3f6:	2201      	movs	r2, #1
1004b3f8:	4013      	ands	r3, r2
1004b3fa:	2b01      	cmp	r3, #1
1004b3fc:	d101      	bne.n	1004b402 <LL_RADIO_TIMER_IsActiveFlag_CPUWakeup+0x18>
1004b3fe:	2301      	movs	r3, #1
1004b400:	e000      	b.n	1004b404 <LL_RADIO_TIMER_IsActiveFlag_CPUWakeup+0x1a>
1004b402:	2300      	movs	r3, #0
}
1004b404:	0018      	movs	r0, r3
1004b406:	46bd      	mov	sp, r7
1004b408:	b002      	add	sp, #8
1004b40a:	bd80      	pop	{r7, pc}

1004b40c <LL_RADIO_TIMER_SetLSIWindowCalibrationLength>:
  * @param RADIO_CTRLx: Radio Control instance
  * @param  Count Slow clock is measured in a window of SLOW_COUNT+1 slow clock cycles
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TIMER_SetLSIWindowCalibrationLength(RADIO_CTRL_TypeDef *RADIO_CTRLx, uint32_t Count)
{
1004b40c:	b580      	push	{r7, lr}
1004b40e:	b082      	sub	sp, #8
1004b410:	af00      	add	r7, sp, #0
1004b412:	6078      	str	r0, [r7, #4]
1004b414:	6039      	str	r1, [r7, #0]
  WRITE_REG(RADIO_CTRLx->CLK32COUNT_REG, Count);
1004b416:	687b      	ldr	r3, [r7, #4]
1004b418:	683a      	ldr	r2, [r7, #0]
1004b41a:	605a      	str	r2, [r3, #4]
}
1004b41c:	46c0      	nop			@ (mov r8, r8)
1004b41e:	46bd      	mov	sp, r7
1004b420:	b002      	add	sp, #8
1004b422:	bd80      	pop	{r7, pc}

1004b424 <LL_RADIO_TIMER_StartLSICalibration>:
  * @brief  Start the LSI calibration procedure.
  * @param RADIO_CTRLx: Radio Control instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TIMER_StartLSICalibration(RADIO_CTRL_TypeDef *RADIO_CTRLx)
{
1004b424:	b580      	push	{r7, lr}
1004b426:	b082      	sub	sp, #8
1004b428:	af00      	add	r7, sp, #0
1004b42a:	6078      	str	r0, [r7, #4]
  WRITE_REG(RADIO_CTRLx->CLK32PERIOD_REG, 0);
1004b42c:	687b      	ldr	r3, [r7, #4]
1004b42e:	2200      	movs	r2, #0
1004b430:	609a      	str	r2, [r3, #8]
}
1004b432:	46c0      	nop			@ (mov r8, r8)
1004b434:	46bd      	mov	sp, r7
1004b436:	b002      	add	sp, #8
1004b438:	bd80      	pop	{r7, pc}

1004b43a <LL_RADIO_TIMER_GetLSIPeriod>:
  * @brief  Get the LSI clock Period calibrated.
  * @param RADIO_CTRLx: Radio Control instance
  * @retval The LSI clock period calibrated
  */
__STATIC_INLINE uint32_t LL_RADIO_TIMER_GetLSIPeriod(RADIO_CTRL_TypeDef *RADIO_CTRLx)
{
1004b43a:	b580      	push	{r7, lr}
1004b43c:	b082      	sub	sp, #8
1004b43e:	af00      	add	r7, sp, #0
1004b440:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_REG(RADIO_CTRLx->CLK32PERIOD_REG));
1004b442:	687b      	ldr	r3, [r7, #4]
1004b444:	689b      	ldr	r3, [r3, #8]
}
1004b446:	0018      	movs	r0, r3
1004b448:	46bd      	mov	sp, r7
1004b44a:	b002      	add	sp, #8
1004b44c:	bd80      	pop	{r7, pc}

1004b44e <LL_RADIO_TIMER_GetLSIFrequency>:
  * @brief  Get the LSI clock Frequency calibrated.
  * @param RADIO_CTRLx: Radio Control instance
  * @retval The LSI clock frequency calibrated
  */
__STATIC_INLINE uint32_t LL_RADIO_TIMER_GetLSIFrequency(RADIO_CTRL_TypeDef *RADIO_CTRLx)
{
1004b44e:	b580      	push	{r7, lr}
1004b450:	b082      	sub	sp, #8
1004b452:	af00      	add	r7, sp, #0
1004b454:	6078      	str	r0, [r7, #4]
  return (uint32_t)(READ_REG(RADIO_CTRLx->CLK32FREQUENCY_REG));
1004b456:	687b      	ldr	r3, [r7, #4]
1004b458:	68db      	ldr	r3, [r3, #12]
}
1004b45a:	0018      	movs	r0, r3
1004b45c:	46bd      	mov	sp, r7
1004b45e:	b002      	add	sp, #8
1004b460:	bd80      	pop	{r7, pc}

1004b462 <LL_RADIO_TIMER_ClearFlag_LSICalibrationEnded>:
  * @brief  Clear the LSI calibration ended flag.
  * @param RADIO_CTRLx: Radio Control instance
  * @retval None
  */
__STATIC_INLINE void LL_RADIO_TIMER_ClearFlag_LSICalibrationEnded(RADIO_CTRL_TypeDef *RADIO_CTRLx)
{
1004b462:	b580      	push	{r7, lr}
1004b464:	b082      	sub	sp, #8
1004b466:	af00      	add	r7, sp, #0
1004b468:	6078      	str	r0, [r7, #4]
  SET_BIT(RADIO_CTRLx->RADIO_CONTROL_IRQ_STATUS, RADIO_CTRL_RADIO_CONTROL_IRQ_STATUS_SLOW_CLK_IRQ);
1004b46a:	687b      	ldr	r3, [r7, #4]
1004b46c:	691b      	ldr	r3, [r3, #16]
1004b46e:	2201      	movs	r2, #1
1004b470:	431a      	orrs	r2, r3
1004b472:	687b      	ldr	r3, [r7, #4]
1004b474:	611a      	str	r2, [r3, #16]
}
1004b476:	46c0      	nop			@ (mov r8, r8)
1004b478:	46bd      	mov	sp, r7
1004b47a:	b002      	add	sp, #8
1004b47c:	bd80      	pop	{r7, pc}

1004b47e <LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded>:
  * @brief  Check if the LSI calibration ended flag is set or not.
  * @param RADIO_CTRLx: Radio Control instance
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded(RADIO_CTRL_TypeDef *RADIO_CTRLx)
{
1004b47e:	b580      	push	{r7, lr}
1004b480:	b082      	sub	sp, #8
1004b482:	af00      	add	r7, sp, #0
1004b484:	6078      	str	r0, [r7, #4]
  return ((READ_BIT(RADIO_CTRLx->RADIO_CONTROL_IRQ_STATUS, RADIO_CTRL_RADIO_CONTROL_IRQ_STATUS_SLOW_CLK_IRQ) == (RADIO_CTRL_RADIO_CONTROL_IRQ_STATUS_SLOW_CLK_IRQ)) ? 1UL : 0UL);
1004b486:	687b      	ldr	r3, [r7, #4]
1004b488:	691b      	ldr	r3, [r3, #16]
1004b48a:	2201      	movs	r2, #1
1004b48c:	4013      	ands	r3, r2
1004b48e:	2b01      	cmp	r3, #1
1004b490:	d101      	bne.n	1004b496 <LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded+0x18>
1004b492:	2301      	movs	r3, #1
1004b494:	e000      	b.n	1004b498 <LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded+0x1a>
1004b496:	2300      	movs	r3, #0
}
1004b498:	0018      	movs	r0, r3
1004b49a:	46bd      	mov	sp, r7
1004b49c:	b002      	add	sp, #8
1004b49e:	bd80      	pop	{r7, pc}

1004b4a0 <HAL_RADIO_TIMER_Init>:
  *         section of the application.
  * @param RADIO_TIMER_InitStruct Radio Timer Initialization parameters
  * @retval None
  */
void HAL_RADIO_TIMER_Init(RADIO_TIMER_InitTypeDef *RADIO_TIMER_InitStruct)
{
1004b4a0:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b4a2:	b083      	sub	sp, #12
1004b4a4:	af00      	add	r7, sp, #0
1004b4a6:	6078      	str	r0, [r7, #4]
  /* Interrupt Configuration */
  LL_RADIO_TIMER_ClearFlag_CPUWakeup(WAKEUP);
1004b4a8:	4b70      	ldr	r3, [pc, #448]	@ (1004b66c <HAL_RADIO_TIMER_Init+0x1cc>)
1004b4aa:	0018      	movs	r0, r3
1004b4ac:	f7ff ff8f 	bl	1004b3ce <LL_RADIO_TIMER_ClearFlag_CPUWakeup>
  LL_RADIO_TIMER_EnableCPUWakeupIT(WAKEUP);
1004b4b0:	4b6e      	ldr	r3, [pc, #440]	@ (1004b66c <HAL_RADIO_TIMER_Init+0x1cc>)
1004b4b2:	0018      	movs	r0, r3
1004b4b4:	f7ff ff7d 	bl	1004b3b2 <LL_RADIO_TIMER_EnableCPUWakeupIT>
  NVIC_EnableIRQ(RADIO_TIMER_CPU_WKUP_IRQn);
1004b4b8:	2017      	movs	r0, #23
1004b4ba:	f7ff fe9b 	bl	1004b1f4 <__NVIC_EnableIRQ>
  NVIC_EnableIRQ(RADIO_TIMER_ERROR_IRQn);
1004b4be:	2014      	movs	r0, #20
1004b4c0:	f7ff fe98 	bl	1004b1f4 <__NVIC_EnableIRQ>
  NVIC_EnableIRQ(RADIO_TIMER_TXRX_WKUP_IRQn);
  RADIO_TIMER_Context.hostMargin = MAX(HOST_MARGIN, RADIO_TIMER_InitStruct->XTAL_StartupTime);
#endif

  /* Calibration Setting */
  RADIO_TIMER_Context.calibrationSettings.periodicCalibration = (RADIO_TIMER_InitStruct->periodicCalibrationInterval != 0);
1004b4c4:	687b      	ldr	r3, [r7, #4]
1004b4c6:	685b      	ldr	r3, [r3, #4]
1004b4c8:	1e5a      	subs	r2, r3, #1
1004b4ca:	4193      	sbcs	r3, r2
1004b4cc:	b2db      	uxtb	r3, r3
1004b4ce:	001a      	movs	r2, r3
1004b4d0:	4b67      	ldr	r3, [pc, #412]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b4d2:	701a      	strb	r2, [r3, #0]
  if (RADIO_TIMER_Context.calibrationSettings.periodicCalibration || RADIO_TIMER_InitStruct->enableInitialCalibration)
1004b4d4:	4b66      	ldr	r3, [pc, #408]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b4d6:	781b      	ldrb	r3, [r3, #0]
1004b4d8:	2b00      	cmp	r3, #0
1004b4da:	d103      	bne.n	1004b4e4 <HAL_RADIO_TIMER_Init+0x44>
1004b4dc:	687b      	ldr	r3, [r7, #4]
1004b4de:	789b      	ldrb	r3, [r3, #2]
1004b4e0:	2b00      	cmp	r3, #0
1004b4e2:	d002      	beq.n	1004b4ea <HAL_RADIO_TIMER_Init+0x4a>
  {
    _calibrationProcedure();
1004b4e4:	f000 fc04 	bl	1004bcf0 <_calibrationProcedure>
1004b4e8:	e010      	b.n	1004b50c <HAL_RADIO_TIMER_Init+0x6c>
  }
  else
  {
    /* Assume fix frequency at 32.768 kHz */
    RADIO_TIMER_Context.calibrationData.last_period1 = 0x00190000;
1004b4ea:	4b61      	ldr	r3, [pc, #388]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b4ec:	22c8      	movs	r2, #200	@ 0xc8
1004b4ee:	0352      	lsls	r2, r2, #13
1004b4f0:	621a      	str	r2, [r3, #32]
    RADIO_TIMER_Context.calibrationData.period1 = 0x00190000 ;
1004b4f2:	4b5f      	ldr	r3, [pc, #380]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b4f4:	22c8      	movs	r2, #200	@ 0xc8
1004b4f6:	0352      	lsls	r2, r2, #13
1004b4f8:	61da      	str	r2, [r3, #28]
    RADIO_TIMER_Context.calibrationData.freq1 = 0x0028F5C2 ;
1004b4fa:	4b5d      	ldr	r3, [pc, #372]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b4fc:	4a5d      	ldr	r2, [pc, #372]	@ (1004b674 <HAL_RADIO_TIMER_Init+0x1d4>)
1004b4fe:	619a      	str	r2, [r3, #24]
    RADIO_TIMER_Context.calibrationData.period = 23437;
1004b500:	4b5b      	ldr	r3, [pc, #364]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b502:	4a5d      	ldr	r2, [pc, #372]	@ (1004b678 <HAL_RADIO_TIMER_Init+0x1d8>)
1004b504:	611a      	str	r2, [r3, #16]
    RADIO_TIMER_Context.calibrationData.freq = 23456748;
1004b506:	4b5a      	ldr	r3, [pc, #360]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b508:	4a5c      	ldr	r2, [pc, #368]	@ (1004b67c <HAL_RADIO_TIMER_Init+0x1dc>)
1004b50a:	615a      	str	r2, [r3, #20]
  }
  if (RADIO_TIMER_InitStruct->periodicCalibrationInterval == 0)
1004b50c:	687b      	ldr	r3, [r7, #4]
1004b50e:	685b      	ldr	r3, [r3, #4]
1004b510:	2b00      	cmp	r3, #0
1004b512:	d108      	bne.n	1004b526 <HAL_RADIO_TIMER_Init+0x86>
  {
    RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval = HAL_RADIO_TIMER_MachineTimeToSysTime(0x50000000);
1004b514:	23a0      	movs	r3, #160	@ 0xa0
1004b516:	05db      	lsls	r3, r3, #23
1004b518:	0018      	movs	r0, r3
1004b51a:	f000 fb1d 	bl	1004bb58 <HAL_RADIO_TIMER_MachineTimeToSysTime>
1004b51e:	0002      	movs	r2, r0
1004b520:	4b53      	ldr	r3, [pc, #332]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b522:	605a      	str	r2, [r3, #4]
1004b524:	e01d      	b.n	1004b562 <HAL_RADIO_TIMER_Init+0xc2>
  }
  else
  {
    RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval = (TIMER_SYSTICK_PER_10MS * RADIO_TIMER_InitStruct->periodicCalibrationInterval) / 10;
1004b526:	687b      	ldr	r3, [r7, #4]
1004b528:	685b      	ldr	r3, [r3, #4]
1004b52a:	031b      	lsls	r3, r3, #12
1004b52c:	210a      	movs	r1, #10
1004b52e:	0018      	movs	r0, r3
1004b530:	f7f4 fe86 	bl	10040240 <__udivsi3>
1004b534:	0003      	movs	r3, r0
1004b536:	001a      	movs	r2, r3
1004b538:	4b4d      	ldr	r3, [pc, #308]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b53a:	605a      	str	r2, [r3, #4]
    RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval = MIN(RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval,
1004b53c:	4b4c      	ldr	r3, [pc, #304]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b53e:	685e      	ldr	r6, [r3, #4]
1004b540:	4b4f      	ldr	r3, [pc, #316]	@ (1004b680 <HAL_RADIO_TIMER_Init+0x1e0>)
1004b542:	0018      	movs	r0, r3
1004b544:	f000 fb08 	bl	1004bb58 <HAL_RADIO_TIMER_MachineTimeToSysTime>
1004b548:	0003      	movs	r3, r0
1004b54a:	429e      	cmp	r6, r3
1004b54c:	d202      	bcs.n	1004b554 <HAL_RADIO_TIMER_Init+0xb4>
1004b54e:	4b48      	ldr	r3, [pc, #288]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b550:	685a      	ldr	r2, [r3, #4]
1004b552:	e004      	b.n	1004b55e <HAL_RADIO_TIMER_Init+0xbe>
1004b554:	4b4a      	ldr	r3, [pc, #296]	@ (1004b680 <HAL_RADIO_TIMER_Init+0x1e0>)
1004b556:	0018      	movs	r0, r3
1004b558:	f000 fafe 	bl	1004bb58 <HAL_RADIO_TIMER_MachineTimeToSysTime>
1004b55c:	0002      	movs	r2, r0
1004b55e:	4b44      	ldr	r3, [pc, #272]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b560:	605a      	str	r2, [r3, #4]
                                                                              HAL_RADIO_TIMER_MachineTimeToSysTime(TIMER_MAX_VALUE - TIMER_WRAPPING_MARGIN));
  }
  RADIO_TIMER_Context.calibrationSettings.calibration_in_progress = FALSE;
1004b562:	4b43      	ldr	r3, [pc, #268]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b564:	2200      	movs	r2, #0
1004b566:	721a      	strb	r2, [r3, #8]

  /* XTAL startup time configuration */
  RADIO_TIMER_Context.hs_startup_time = RADIO_TIMER_InitStruct->XTAL_StartupTime;
1004b568:	687b      	ldr	r3, [r7, #4]
1004b56a:	881b      	ldrh	r3, [r3, #0]
1004b56c:	001a      	movs	r2, r3
1004b56e:	4b40      	ldr	r3, [pc, #256]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b570:	669a      	str	r2, [r3, #104]	@ 0x68
  _update_xtal_startup_time(RADIO_TIMER_Context.hs_startup_time, RADIO_TIMER_Context.calibrationData.freq1);
1004b572:	4b3f      	ldr	r3, [pc, #252]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b574:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
1004b576:	b29a      	uxth	r2, r3
1004b578:	4b3d      	ldr	r3, [pc, #244]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b57a:	699b      	ldr	r3, [r3, #24]
1004b57c:	0019      	movs	r1, r3
1004b57e:	0010      	movs	r0, r2
1004b580:	f000 fd2a 	bl	1004bfd8 <_update_xtal_startup_time>

  /* Init Radio Timer Context */
  RADIO_TIMER_Context.last_setup_time = 0;
1004b584:	4b3a      	ldr	r3, [pc, #232]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b586:	2284      	movs	r2, #132	@ 0x84
1004b588:	2100      	movs	r1, #0
1004b58a:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.cumulative_time = 0;
1004b58c:	4938      	ldr	r1, [pc, #224]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b58e:	2200      	movs	r2, #0
1004b590:	2300      	movs	r3, #0
1004b592:	670a      	str	r2, [r1, #112]	@ 0x70
1004b594:	674b      	str	r3, [r1, #116]	@ 0x74
  RADIO_TIMER_Context.last_machine_time = LL_RADIO_TIMER_GetAbsoluteTime(WAKEUP);
1004b596:	4b35      	ldr	r3, [pc, #212]	@ (1004b66c <HAL_RADIO_TIMER_Init+0x1cc>)
1004b598:	0018      	movs	r0, r3
1004b59a:	f7ff fee6 	bl	1004b36a <LL_RADIO_TIMER_GetAbsoluteTime>
1004b59e:	0002      	movs	r2, r0
1004b5a0:	4b33      	ldr	r3, [pc, #204]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5a2:	2180      	movs	r1, #128	@ 0x80
1004b5a4:	505a      	str	r2, [r3, r1]
  RADIO_TIMER_Context.last_system_time = 0;
1004b5a6:	4932      	ldr	r1, [pc, #200]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5a8:	2200      	movs	r2, #0
1004b5aa:	2300      	movs	r3, #0
1004b5ac:	678a      	str	r2, [r1, #120]	@ 0x78
1004b5ae:	67cb      	str	r3, [r1, #124]	@ 0x7c
  RADIO_TIMER_Context.calibrationData.last_calibration_time = 0;
1004b5b0:	492f      	ldr	r1, [pc, #188]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5b2:	2200      	movs	r2, #0
1004b5b4:	2300      	movs	r3, #0
1004b5b6:	628a      	str	r2, [r1, #40]	@ 0x28
1004b5b8:	62cb      	str	r3, [r1, #44]	@ 0x2c
  RADIO_TIMER_Context.calibrationData.calibration_data_available = 0;
1004b5ba:	4b2d      	ldr	r3, [pc, #180]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5bc:	2234      	movs	r2, #52	@ 0x34
1004b5be:	2100      	movs	r1, #0
1004b5c0:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.calibrationData.calibration_machine_interval = blue_unit_conversion(RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval,
1004b5c2:	4b2b      	ldr	r3, [pc, #172]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5c4:	6858      	ldr	r0, [r3, #4]
                                                                     RADIO_TIMER_Context.calibrationData.freq1, MULT64_THR_FREQ);
1004b5c6:	4b2a      	ldr	r3, [pc, #168]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5c8:	699b      	ldr	r3, [r3, #24]
  RADIO_TIMER_Context.calibrationData.calibration_machine_interval = blue_unit_conversion(RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval,
1004b5ca:	0019      	movs	r1, r3
1004b5cc:	4b2d      	ldr	r3, [pc, #180]	@ (1004b684 <HAL_RADIO_TIMER_Init+0x1e4>)
1004b5ce:	001a      	movs	r2, r3
1004b5d0:	f7f4 fd76 	bl	100400c0 <blue_unit_conversion>
1004b5d4:	0002      	movs	r2, r0
1004b5d6:	4b26      	ldr	r3, [pc, #152]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5d8:	631a      	str	r2, [r3, #48]	@ 0x30
  RADIO_TIMER_Context.wakeup_calibration = RADIO_TIMER_Context.calibrationSettings.periodicCalibration;
1004b5da:	4b25      	ldr	r3, [pc, #148]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5dc:	7819      	ldrb	r1, [r3, #0]
1004b5de:	4b24      	ldr	r3, [pc, #144]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5e0:	2294      	movs	r2, #148	@ 0x94
1004b5e2:	5499      	strb	r1, [r3, r2]

  /* Init the Virtual Timer queue */
  RADIO_TIMER_Context.rootNode = NULL;
1004b5e4:	4b22      	ldr	r3, [pc, #136]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5e6:	228c      	movs	r2, #140	@ 0x8c
1004b5e8:	2100      	movs	r1, #0
1004b5ea:	5099      	str	r1, [r3, r2]
  RADIO_TIMER_Context.enableTimeBase = TRUE;
1004b5ec:	4b20      	ldr	r3, [pc, #128]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5ee:	2290      	movs	r2, #144	@ 0x90
1004b5f0:	2101      	movs	r1, #1
1004b5f2:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.stop_notimer_action = FALSE;
1004b5f4:	4b1e      	ldr	r3, [pc, #120]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5f6:	2293      	movs	r2, #147	@ 0x93
1004b5f8:	2100      	movs	r1, #0
1004b5fa:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.expired_count = 0;
1004b5fc:	4b1c      	ldr	r3, [pc, #112]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b5fe:	2291      	movs	r2, #145	@ 0x91
1004b600:	2100      	movs	r1, #0
1004b602:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.served_count = 0;
1004b604:	4b1a      	ldr	r3, [pc, #104]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b606:	2292      	movs	r2, #146	@ 0x92
1004b608:	2100      	movs	r1, #0
1004b60a:	5499      	strb	r1, [r3, r2]

  /* Init Radio Timer queue */
  RADIO_TIMER_Context.radioTimer.active = FALSE;
1004b60c:	4b18      	ldr	r3, [pc, #96]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b60e:	2261      	movs	r2, #97	@ 0x61
1004b610:	2100      	movs	r1, #0
1004b612:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.pending = FALSE;
1004b614:	4b16      	ldr	r3, [pc, #88]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b616:	2262      	movs	r2, #98	@ 0x62
1004b618:	2100      	movs	r1, #0
1004b61a:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.intTxRx_to_be_served = FALSE;
1004b61c:	4b14      	ldr	r3, [pc, #80]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b61e:	2263      	movs	r2, #99	@ 0x63
1004b620:	2100      	movs	r1, #0
1004b622:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.expiryTime = 0;
1004b624:	4912      	ldr	r1, [pc, #72]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b626:	2200      	movs	r2, #0
1004b628:	2300      	movs	r3, #0
1004b62a:	658a      	str	r2, [r1, #88]	@ 0x58
1004b62c:	65cb      	str	r3, [r1, #92]	@ 0x5c

  /* Configure the Calibration callback and schedule the next calibration */
  RADIO_TIMER_Context.calibrationTimer.callback = _calibration_callback;
1004b62e:	4b10      	ldr	r3, [pc, #64]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b630:	4a15      	ldr	r2, [pc, #84]	@ (1004b688 <HAL_RADIO_TIMER_Init+0x1e8>)
1004b632:	649a      	str	r2, [r3, #72]	@ 0x48
  RADIO_TIMER_Context.calibrationTimer.userData = NULL;
1004b634:	4b0e      	ldr	r3, [pc, #56]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b636:	2200      	movs	r2, #0
1004b638:	655a      	str	r2, [r3, #84]	@ 0x54
  _start_timer(&RADIO_TIMER_Context.calibrationTimer,
               HAL_RADIO_TIMER_GetCurrentSysTime() + RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval);
1004b63a:	f000 faa3 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004b63e:	0002      	movs	r2, r0
1004b640:	000b      	movs	r3, r1
1004b642:	490b      	ldr	r1, [pc, #44]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b644:	6849      	ldr	r1, [r1, #4]
1004b646:	000c      	movs	r4, r1
1004b648:	2100      	movs	r1, #0
1004b64a:	000d      	movs	r5, r1
  _start_timer(&RADIO_TIMER_Context.calibrationTimer,
1004b64c:	1912      	adds	r2, r2, r4
1004b64e:	416b      	adcs	r3, r5
1004b650:	490e      	ldr	r1, [pc, #56]	@ (1004b68c <HAL_RADIO_TIMER_Init+0x1ec>)
1004b652:	0008      	movs	r0, r1
1004b654:	f000 fd02 	bl	1004c05c <_start_timer>

  /* Tx & Rx delay configuration */
  _configureTxRxDelay(&RADIO_TIMER_Context, TRUE);
1004b658:	4b05      	ldr	r3, [pc, #20]	@ (1004b670 <HAL_RADIO_TIMER_Init+0x1d0>)
1004b65a:	2101      	movs	r1, #1
1004b65c:	0018      	movs	r0, r3
1004b65e:	f000 fbf7 	bl	1004be50 <_configureTxRxDelay>
}
1004b662:	46c0      	nop			@ (mov r8, r8)
1004b664:	46bd      	mov	sp, r7
1004b666:	b003      	add	sp, #12
1004b668:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b66a:	46c0      	nop			@ (mov r8, r8)
1004b66c:	60001800 	.word	0x60001800
1004b670:	200006f8 	.word	0x200006f8
1004b674:	0028f5c2 	.word	0x0028f5c2
1004b678:	00005b8d 	.word	0x00005b8d
1004b67c:	0165ebec 	.word	0x0165ebec
1004b680:	ffffefff 	.word	0xffffefff
1004b684:	00000326 	.word	0x00000326
1004b688:	1004c035 	.word	0x1004c035
1004b68c:	20000738 	.word	0x20000738

1004b690 <HAL_RADIO_TIMER_Tick>:
  * Check expired timers and execute user callback.
  * It must be placed inside the infinite loop.
  * @retval None
  */
void HAL_RADIO_TIMER_Tick(void)
{
1004b690:	b5b0      	push	{r4, r5, r7, lr}
1004b692:	b090      	sub	sp, #64	@ 0x40
1004b694:	af00      	add	r7, sp, #0
  uint8_t expired = 0;
1004b696:	230f      	movs	r3, #15
1004b698:	18fb      	adds	r3, r7, r3
1004b69a:	2200      	movs	r2, #0
1004b69c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004b69e:	f3ef 8310 	mrs	r3, PRIMASK
1004b6a2:	627b      	str	r3, [r7, #36]	@ 0x24
  return(result);
1004b6a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24

  ATOMIC_SECTION_BEGIN();
1004b6a6:	63bb      	str	r3, [r7, #56]	@ 0x38
  __ASM volatile ("cpsid i" : : : "memory");
1004b6a8:	b672      	cpsid	i
}
1004b6aa:	46c0      	nop			@ (mov r8, r8)
  if (RADIO_TIMER_Context.radioTimer.active)
1004b6ac:	4b9c      	ldr	r3, [pc, #624]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b6ae:	2261      	movs	r2, #97	@ 0x61
1004b6b0:	5c9b      	ldrb	r3, [r3, r2]
1004b6b2:	2b00      	cmp	r3, #0
1004b6b4:	d00f      	beq.n	1004b6d6 <HAL_RADIO_TIMER_Tick+0x46>
  {
    if (RADIO_TIMER_Context.radioTimer.expiryTime < HAL_RADIO_TIMER_GetCurrentSysTime())
1004b6b6:	4b9a      	ldr	r3, [pc, #616]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b6b8:	6d9c      	ldr	r4, [r3, #88]	@ 0x58
1004b6ba:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
1004b6bc:	f000 fa62 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004b6c0:	0002      	movs	r2, r0
1004b6c2:	000b      	movs	r3, r1
1004b6c4:	42ab      	cmp	r3, r5
1004b6c6:	d802      	bhi.n	1004b6ce <HAL_RADIO_TIMER_Tick+0x3e>
1004b6c8:	d105      	bne.n	1004b6d6 <HAL_RADIO_TIMER_Tick+0x46>
1004b6ca:	42a2      	cmp	r2, r4
1004b6cc:	d903      	bls.n	1004b6d6 <HAL_RADIO_TIMER_Tick+0x46>
    {
      RADIO_TIMER_Context.radioTimer.active = FALSE;
1004b6ce:	4b94      	ldr	r3, [pc, #592]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b6d0:	2261      	movs	r2, #97	@ 0x61
1004b6d2:	2100      	movs	r1, #0
1004b6d4:	5499      	strb	r1, [r3, r2]
1004b6d6:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1004b6d8:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004b6da:	6a3b      	ldr	r3, [r7, #32]
1004b6dc:	f383 8810 	msr	PRIMASK, r3
}
1004b6e0:	46c0      	nop			@ (mov r8, r8)
    }
  }
  ATOMIC_SECTION_END();

  /* Check for expired timers */
  while (DIFF8(RADIO_TIMER_Context.expired_count, RADIO_TIMER_Context.served_count))
1004b6e2:	e06e      	b.n	1004b7c2 <HAL_RADIO_TIMER_Tick+0x132>
  {
    VTIMER_HandleType *expiredList, *curr;
    uint8_t to_be_served = DIFF8(RADIO_TIMER_Context.expired_count, RADIO_TIMER_Context.served_count);
1004b6e4:	4b8e      	ldr	r3, [pc, #568]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b6e6:	2291      	movs	r2, #145	@ 0x91
1004b6e8:	5c99      	ldrb	r1, [r3, r2]
1004b6ea:	4b8d      	ldr	r3, [pc, #564]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b6ec:	2292      	movs	r2, #146	@ 0x92
1004b6ee:	5c9a      	ldrb	r2, [r3, r2]
1004b6f0:	232b      	movs	r3, #43	@ 0x2b
1004b6f2:	2008      	movs	r0, #8
1004b6f4:	181b      	adds	r3, r3, r0
1004b6f6:	19db      	adds	r3, r3, r7
1004b6f8:	1a8a      	subs	r2, r1, r2
1004b6fa:	701a      	strb	r2, [r3, #0]

    RADIO_TIMER_Context.rootNode = _check_callbacks(RADIO_TIMER_Context.rootNode, &expiredList);
1004b6fc:	4b88      	ldr	r3, [pc, #544]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b6fe:	228c      	movs	r2, #140	@ 0x8c
1004b700:	589b      	ldr	r3, [r3, r2]
1004b702:	183a      	adds	r2, r7, r0
1004b704:	0011      	movs	r1, r2
1004b706:	0018      	movs	r0, r3
1004b708:	f000 fe7e 	bl	1004c408 <_check_callbacks>
1004b70c:	0002      	movs	r2, r0
1004b70e:	4b84      	ldr	r3, [pc, #528]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b710:	218c      	movs	r1, #140	@ 0x8c
1004b712:	505a      	str	r2, [r3, r1]

    /* Call all the user callbacks */
    curr = expiredList;
1004b714:	68bb      	ldr	r3, [r7, #8]
1004b716:	63fb      	str	r3, [r7, #60]	@ 0x3c
    while (curr != NULL)
1004b718:	e010      	b.n	1004b73c <HAL_RADIO_TIMER_Tick+0xac>
    {
      /* Save next pointer, in case callback start the timer again */
      VTIMER_HandleType *next = curr->next;
1004b71a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004b71c:	691b      	ldr	r3, [r3, #16]
1004b71e:	62bb      	str	r3, [r7, #40]	@ 0x28
      curr->active = FALSE;
1004b720:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004b722:	2200      	movs	r2, #0
1004b724:	731a      	strb	r2, [r3, #12]
      if (curr->callback)
1004b726:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004b728:	689b      	ldr	r3, [r3, #8]
1004b72a:	2b00      	cmp	r3, #0
1004b72c:	d004      	beq.n	1004b738 <HAL_RADIO_TIMER_Tick+0xa8>
      {
        curr->callback(curr); /* we are sure a callback is set?*/
1004b72e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004b730:	689b      	ldr	r3, [r3, #8]
1004b732:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1004b734:	0010      	movs	r0, r2
1004b736:	4798      	blx	r3
      }
      curr = next;
1004b738:	6abb      	ldr	r3, [r7, #40]	@ 0x28
1004b73a:	63fb      	str	r3, [r7, #60]	@ 0x3c
    while (curr != NULL)
1004b73c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004b73e:	2b00      	cmp	r3, #0
1004b740:	d1eb      	bne.n	1004b71a <HAL_RADIO_TIMER_Tick+0x8a>
    }

    RADIO_TIMER_Context.rootNode = _update_user_timeout(RADIO_TIMER_Context.rootNode, &expired);
1004b742:	4b77      	ldr	r3, [pc, #476]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b744:	228c      	movs	r2, #140	@ 0x8c
1004b746:	589b      	ldr	r3, [r3, r2]
1004b748:	240f      	movs	r4, #15
1004b74a:	193a      	adds	r2, r7, r4
1004b74c:	0011      	movs	r1, r2
1004b74e:	0018      	movs	r0, r3
1004b750:	f000 fd4a 	bl	1004c1e8 <_update_user_timeout>
1004b754:	0002      	movs	r2, r0
1004b756:	4b72      	ldr	r3, [pc, #456]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b758:	218c      	movs	r1, #140	@ 0x8c
1004b75a:	505a      	str	r2, [r3, r1]
    if (expired == 1)
1004b75c:	193b      	adds	r3, r7, r4
1004b75e:	781b      	ldrb	r3, [r3, #0]
1004b760:	2b01      	cmp	r3, #1
1004b762:	d121      	bne.n	1004b7a8 <HAL_RADIO_TIMER_Tick+0x118>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004b764:	f3ef 8310 	mrs	r3, PRIMASK
1004b768:	61fb      	str	r3, [r7, #28]
  return(result);
1004b76a:	69fb      	ldr	r3, [r7, #28]
    {
      /* A new root timer is already expired, mimic timer expire */
      INCREMENT_EXPIRE_COUNT;
1004b76c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  __ASM volatile ("cpsid i" : : : "memory");
1004b76e:	b672      	cpsid	i
}
1004b770:	46c0      	nop			@ (mov r8, r8)
1004b772:	4b6b      	ldr	r3, [pc, #428]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b774:	2291      	movs	r2, #145	@ 0x91
1004b776:	5c9b      	ldrb	r3, [r3, r2]
1004b778:	3301      	adds	r3, #1
1004b77a:	4a69      	ldr	r2, [pc, #420]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b77c:	2192      	movs	r1, #146	@ 0x92
1004b77e:	5c52      	ldrb	r2, [r2, r1]
1004b780:	4293      	cmp	r3, r2
1004b782:	d103      	bne.n	1004b78c <HAL_RADIO_TIMER_Tick+0xfc>
1004b784:	4b66      	ldr	r3, [pc, #408]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b786:	2291      	movs	r2, #145	@ 0x91
1004b788:	5c9b      	ldrb	r3, [r3, r2]
1004b78a:	e004      	b.n	1004b796 <HAL_RADIO_TIMER_Tick+0x106>
1004b78c:	4b64      	ldr	r3, [pc, #400]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b78e:	2291      	movs	r2, #145	@ 0x91
1004b790:	5c9b      	ldrb	r3, [r3, r2]
1004b792:	3301      	adds	r3, #1
1004b794:	b2db      	uxtb	r3, r3
1004b796:	4a62      	ldr	r2, [pc, #392]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b798:	2191      	movs	r1, #145	@ 0x91
1004b79a:	5453      	strb	r3, [r2, r1]
1004b79c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1004b79e:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004b7a0:	69bb      	ldr	r3, [r7, #24]
1004b7a2:	f383 8810 	msr	PRIMASK, r3
}
1004b7a6:	46c0      	nop			@ (mov r8, r8)
    }
    RADIO_TIMER_Context.served_count += to_be_served;
1004b7a8:	4b5d      	ldr	r3, [pc, #372]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7aa:	2292      	movs	r2, #146	@ 0x92
1004b7ac:	5c9a      	ldrb	r2, [r3, r2]
1004b7ae:	232b      	movs	r3, #43	@ 0x2b
1004b7b0:	2108      	movs	r1, #8
1004b7b2:	185b      	adds	r3, r3, r1
1004b7b4:	19db      	adds	r3, r3, r7
1004b7b6:	781b      	ldrb	r3, [r3, #0]
1004b7b8:	18d3      	adds	r3, r2, r3
1004b7ba:	b2d9      	uxtb	r1, r3
1004b7bc:	4b58      	ldr	r3, [pc, #352]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7be:	2292      	movs	r2, #146	@ 0x92
1004b7c0:	5499      	strb	r1, [r3, r2]
  while (DIFF8(RADIO_TIMER_Context.expired_count, RADIO_TIMER_Context.served_count))
1004b7c2:	4b57      	ldr	r3, [pc, #348]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7c4:	2291      	movs	r2, #145	@ 0x91
1004b7c6:	5c9a      	ldrb	r2, [r3, r2]
1004b7c8:	4b55      	ldr	r3, [pc, #340]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7ca:	2192      	movs	r1, #146	@ 0x92
1004b7cc:	5c5b      	ldrb	r3, [r3, r1]
1004b7ce:	429a      	cmp	r2, r3
1004b7d0:	d30a      	bcc.n	1004b7e8 <HAL_RADIO_TIMER_Tick+0x158>
1004b7d2:	4b53      	ldr	r3, [pc, #332]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7d4:	2291      	movs	r2, #145	@ 0x91
1004b7d6:	5c9a      	ldrb	r2, [r3, r2]
1004b7d8:	4b51      	ldr	r3, [pc, #324]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7da:	2192      	movs	r1, #146	@ 0x92
1004b7dc:	5c5b      	ldrb	r3, [r3, r1]
1004b7de:	1ad3      	subs	r3, r2, r3
1004b7e0:	1e5a      	subs	r2, r3, #1
1004b7e2:	4193      	sbcs	r3, r2
1004b7e4:	b2db      	uxtb	r3, r3
1004b7e6:	e00c      	b.n	1004b802 <HAL_RADIO_TIMER_Tick+0x172>
1004b7e8:	4b4d      	ldr	r3, [pc, #308]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7ea:	2291      	movs	r2, #145	@ 0x91
1004b7ec:	5c9b      	ldrb	r3, [r3, r2]
1004b7ee:	0019      	movs	r1, r3
1004b7f0:	4b4b      	ldr	r3, [pc, #300]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b7f2:	2292      	movs	r2, #146	@ 0x92
1004b7f4:	5c9b      	ldrb	r3, [r3, r2]
1004b7f6:	1acb      	subs	r3, r1, r3
1004b7f8:	3301      	adds	r3, #1
1004b7fa:	33ff      	adds	r3, #255	@ 0xff
1004b7fc:	1e5a      	subs	r2, r3, #1
1004b7fe:	4193      	sbcs	r3, r2
1004b800:	b2db      	uxtb	r3, r3
1004b802:	2b00      	cmp	r3, #0
1004b804:	d000      	beq.n	1004b808 <HAL_RADIO_TIMER_Tick+0x178>
1004b806:	e76d      	b.n	1004b6e4 <HAL_RADIO_TIMER_Tick+0x54>
  }

  /* Check for periodic calibration */
  if (RADIO_TIMER_Context.calibrationSettings.calibration_in_progress)
1004b808:	4b45      	ldr	r3, [pc, #276]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b80a:	7a1b      	ldrb	r3, [r3, #8]
1004b80c:	2b00      	cmp	r3, #0
1004b80e:	d06a      	beq.n	1004b8e6 <HAL_RADIO_TIMER_Tick+0x256>
  {
    if (LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded(RADIO_CTRL))
1004b810:	4b44      	ldr	r3, [pc, #272]	@ (1004b924 <HAL_RADIO_TIMER_Tick+0x294>)
1004b812:	0018      	movs	r0, r3
1004b814:	f7ff fe33 	bl	1004b47e <LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded>
1004b818:	1e03      	subs	r3, r0, #0
1004b81a:	d100      	bne.n	1004b81e <HAL_RADIO_TIMER_Tick+0x18e>
1004b81c:	e07b      	b.n	1004b916 <HAL_RADIO_TIMER_Tick+0x286>
    {
      /* Calibration is completed */
      RADIO_TIMER_Context.calibrationSettings.calibration_in_progress = FALSE;
1004b81e:	4b40      	ldr	r3, [pc, #256]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b820:	2200      	movs	r2, #0
1004b822:	721a      	strb	r2, [r3, #8]
      if ((RADIO_TIMER_Context.wakeup_calibration == FALSE) && RADIO_TIMER_Context.stop_notimer_action)
1004b824:	4b3e      	ldr	r3, [pc, #248]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b826:	2294      	movs	r2, #148	@ 0x94
1004b828:	5c9b      	ldrb	r3, [r3, r2]
1004b82a:	2b00      	cmp	r3, #0
1004b82c:	d109      	bne.n	1004b842 <HAL_RADIO_TIMER_Tick+0x1b2>
1004b82e:	4b3c      	ldr	r3, [pc, #240]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b830:	2293      	movs	r2, #147	@ 0x93
1004b832:	5c9b      	ldrb	r3, [r3, r2]
1004b834:	2b00      	cmp	r3, #0
1004b836:	d004      	beq.n	1004b842 <HAL_RADIO_TIMER_Tick+0x1b2>
      {
        RADIO_TIMER_Context.stop_notimer_action = FALSE;
1004b838:	4b39      	ldr	r3, [pc, #228]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b83a:	2293      	movs	r2, #147	@ 0x93
1004b83c:	2100      	movs	r1, #0
1004b83e:	5499      	strb	r1, [r3, r2]
1004b840:	e034      	b.n	1004b8ac <HAL_RADIO_TIMER_Tick+0x21c>
      }
      else
      {
        /* Collect calibration data */
        _updateCalibrationData();
1004b842:	f000 fe2b 	bl	1004c49c <_updateCalibrationData>
        RADIO_TIMER_Context.rootNode = _update_user_timeout(RADIO_TIMER_Context.rootNode, &expired);
1004b846:	4b36      	ldr	r3, [pc, #216]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b848:	228c      	movs	r2, #140	@ 0x8c
1004b84a:	589b      	ldr	r3, [r3, r2]
1004b84c:	240f      	movs	r4, #15
1004b84e:	193a      	adds	r2, r7, r4
1004b850:	0011      	movs	r1, r2
1004b852:	0018      	movs	r0, r3
1004b854:	f000 fcc8 	bl	1004c1e8 <_update_user_timeout>
1004b858:	0002      	movs	r2, r0
1004b85a:	4b31      	ldr	r3, [pc, #196]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b85c:	218c      	movs	r1, #140	@ 0x8c
1004b85e:	505a      	str	r2, [r3, r1]
        if (expired == 1)
1004b860:	193b      	adds	r3, r7, r4
1004b862:	781b      	ldrb	r3, [r3, #0]
1004b864:	2b01      	cmp	r3, #1
1004b866:	d121      	bne.n	1004b8ac <HAL_RADIO_TIMER_Tick+0x21c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004b868:	f3ef 8310 	mrs	r3, PRIMASK
1004b86c:	617b      	str	r3, [r7, #20]
  return(result);
1004b86e:	697b      	ldr	r3, [r7, #20]
        {
          /* A new root timer is already expired, mimic timer expire */
          INCREMENT_EXPIRE_COUNT;
1004b870:	637b      	str	r3, [r7, #52]	@ 0x34
  __ASM volatile ("cpsid i" : : : "memory");
1004b872:	b672      	cpsid	i
}
1004b874:	46c0      	nop			@ (mov r8, r8)
1004b876:	4b2a      	ldr	r3, [pc, #168]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b878:	2291      	movs	r2, #145	@ 0x91
1004b87a:	5c9b      	ldrb	r3, [r3, r2]
1004b87c:	3301      	adds	r3, #1
1004b87e:	4a28      	ldr	r2, [pc, #160]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b880:	2192      	movs	r1, #146	@ 0x92
1004b882:	5c52      	ldrb	r2, [r2, r1]
1004b884:	4293      	cmp	r3, r2
1004b886:	d103      	bne.n	1004b890 <HAL_RADIO_TIMER_Tick+0x200>
1004b888:	4b25      	ldr	r3, [pc, #148]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b88a:	2291      	movs	r2, #145	@ 0x91
1004b88c:	5c9b      	ldrb	r3, [r3, r2]
1004b88e:	e004      	b.n	1004b89a <HAL_RADIO_TIMER_Tick+0x20a>
1004b890:	4b23      	ldr	r3, [pc, #140]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b892:	2291      	movs	r2, #145	@ 0x91
1004b894:	5c9b      	ldrb	r3, [r3, r2]
1004b896:	3301      	adds	r3, #1
1004b898:	b2db      	uxtb	r3, r3
1004b89a:	4a21      	ldr	r2, [pc, #132]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b89c:	2191      	movs	r1, #145	@ 0x91
1004b89e:	5453      	strb	r3, [r2, r1]
1004b8a0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004b8a2:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004b8a4:	693b      	ldr	r3, [r7, #16]
1004b8a6:	f383 8810 	msr	PRIMASK, r3
}
1004b8aa:	46c0      	nop			@ (mov r8, r8)
          /* A new root timer is already expired, mimic timer expire */
          INCREMENT_EXPIRE_COUNT;
        }
      }
#else
      _check_radio_activity(&RADIO_TIMER_Context.radioTimer, &expired);
1004b8ac:	230f      	movs	r3, #15
1004b8ae:	18fa      	adds	r2, r7, r3
1004b8b0:	4b1d      	ldr	r3, [pc, #116]	@ (1004b928 <HAL_RADIO_TIMER_Tick+0x298>)
1004b8b2:	0011      	movs	r1, r2
1004b8b4:	0018      	movs	r0, r3
1004b8b6:	f000 fe85 	bl	1004c5c4 <_check_radio_activity>
#endif

      HAL_RADIO_TIMER_StopVirtualTimer(&RADIO_TIMER_Context.calibrationTimer);
1004b8ba:	4b1c      	ldr	r3, [pc, #112]	@ (1004b92c <HAL_RADIO_TIMER_Tick+0x29c>)
1004b8bc:	0018      	movs	r0, r3
1004b8be:	f000 f98d 	bl	1004bbdc <HAL_RADIO_TIMER_StopVirtualTimer>
      /* Schedule next calibration event */
      _start_timer(&RADIO_TIMER_Context.calibrationTimer,
                   HAL_RADIO_TIMER_GetCurrentSysTime() + RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval);
1004b8c2:	f000 f95f 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004b8c6:	0002      	movs	r2, r0
1004b8c8:	000b      	movs	r3, r1
1004b8ca:	4915      	ldr	r1, [pc, #84]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b8cc:	6849      	ldr	r1, [r1, #4]
1004b8ce:	6039      	str	r1, [r7, #0]
1004b8d0:	2100      	movs	r1, #0
1004b8d2:	6079      	str	r1, [r7, #4]
      _start_timer(&RADIO_TIMER_Context.calibrationTimer,
1004b8d4:	6838      	ldr	r0, [r7, #0]
1004b8d6:	6879      	ldr	r1, [r7, #4]
1004b8d8:	1812      	adds	r2, r2, r0
1004b8da:	414b      	adcs	r3, r1
1004b8dc:	4913      	ldr	r1, [pc, #76]	@ (1004b92c <HAL_RADIO_TIMER_Tick+0x29c>)
1004b8de:	0008      	movs	r0, r1
1004b8e0:	f000 fbbc 	bl	1004c05c <_start_timer>
      {
        _calibration_callback(&RADIO_TIMER_Context.calibrationTimer);
      }
    }
  }
}
1004b8e4:	e017      	b.n	1004b916 <HAL_RADIO_TIMER_Tick+0x286>
    if (RADIO_TIMER_Context.calibrationSettings.periodicCalibration)
1004b8e6:	4b0e      	ldr	r3, [pc, #56]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b8e8:	781b      	ldrb	r3, [r3, #0]
1004b8ea:	2b00      	cmp	r3, #0
1004b8ec:	d013      	beq.n	1004b916 <HAL_RADIO_TIMER_Tick+0x286>
      if (HAL_RADIO_TIMER_GetCurrentSysTime() > (RADIO_TIMER_Context.calibrationData.last_calibration_time +
1004b8ee:	f000 f949 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004b8f2:	4b0b      	ldr	r3, [pc, #44]	@ (1004b920 <HAL_RADIO_TIMER_Tick+0x290>)
1004b8f4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
1004b8f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
1004b8f8:	24fa      	movs	r4, #250	@ 0xfa
1004b8fa:	0364      	lsls	r4, r4, #13
1004b8fc:	2500      	movs	r5, #0
1004b8fe:	1912      	adds	r2, r2, r4
1004b900:	416b      	adcs	r3, r5
1004b902:	4299      	cmp	r1, r3
1004b904:	d803      	bhi.n	1004b90e <HAL_RADIO_TIMER_Tick+0x27e>
1004b906:	d106      	bne.n	1004b916 <HAL_RADIO_TIMER_Tick+0x286>
1004b908:	4290      	cmp	r0, r2
1004b90a:	d800      	bhi.n	1004b90e <HAL_RADIO_TIMER_Tick+0x27e>
}
1004b90c:	e003      	b.n	1004b916 <HAL_RADIO_TIMER_Tick+0x286>
        _calibration_callback(&RADIO_TIMER_Context.calibrationTimer);
1004b90e:	4b07      	ldr	r3, [pc, #28]	@ (1004b92c <HAL_RADIO_TIMER_Tick+0x29c>)
1004b910:	0018      	movs	r0, r3
1004b912:	f000 fb8f 	bl	1004c034 <_calibration_callback>
}
1004b916:	46c0      	nop			@ (mov r8, r8)
1004b918:	46bd      	mov	sp, r7
1004b91a:	b010      	add	sp, #64	@ 0x40
1004b91c:	bdb0      	pop	{r4, r5, r7, pc}
1004b91e:	46c0      	nop			@ (mov r8, r8)
1004b920:	200006f8 	.word	0x200006f8
1004b924:	60001000 	.word	0x60001000
1004b928:	20000750 	.word	0x20000750
1004b92c:	20000738 	.word	0x20000738

1004b930 <HAL_RADIO_TIMER_GetAnchorPoint>:
  * @brief Get the last anchorPoint in system time unit.
  * @param current_system_time: Current System Time
  * @return TimerCapture register in system time unit.
  */
uint64_t HAL_RADIO_TIMER_GetAnchorPoint(uint64_t *current_system_time)
{
1004b930:	b580      	push	{r7, lr}
1004b932:	b082      	sub	sp, #8
1004b934:	af00      	add	r7, sp, #0
1004b936:	6078      	str	r0, [r7, #4]
  return TIMER_GetPastSysTime(BLUE->TIMERCAPTUREREG, current_system_time);
1004b938:	23c0      	movs	r3, #192	@ 0xc0
1004b93a:	05db      	lsls	r3, r3, #23
1004b93c:	695b      	ldr	r3, [r3, #20]
1004b93e:	687a      	ldr	r2, [r7, #4]
1004b940:	0011      	movs	r1, r2
1004b942:	0018      	movs	r0, r3
1004b944:	f000 ffb0 	bl	1004c8a8 <TIMER_GetPastSysTime>
1004b948:	0002      	movs	r2, r0
1004b94a:	000b      	movs	r3, r1
}
1004b94c:	0010      	movs	r0, r2
1004b94e:	0019      	movs	r1, r3
1004b950:	46bd      	mov	sp, r7
1004b952:	b002      	add	sp, #8
1004b954:	bd80      	pop	{r7, pc}
	...

1004b958 <HAL_RADIO_TIMER_SetRadioTimerValue>:
  * @param  cal_req: Specify if PLL calibration is requested (1) or not (0).
  * @retval 0 if radio activity has been scheduled successfully.
  * @retval 1 if radio activity has been rejected (it is too close or in the past).
  */
uint32_t HAL_RADIO_TIMER_SetRadioTimerValue(uint32_t time, uint8_t event_type, uint8_t cal_req)
{
1004b958:	b5f0      	push	{r4, r5, r6, r7, lr}
1004b95a:	b085      	sub	sp, #20
1004b95c:	af00      	add	r7, sp, #0
1004b95e:	6078      	str	r0, [r7, #4]
1004b960:	0008      	movs	r0, r1
1004b962:	0011      	movs	r1, r2
1004b964:	1cfb      	adds	r3, r7, #3
1004b966:	1c02      	adds	r2, r0, #0
1004b968:	701a      	strb	r2, [r3, #0]
1004b96a:	1cbb      	adds	r3, r7, #2
1004b96c:	1c0a      	adds	r2, r1, #0
1004b96e:	701a      	strb	r2, [r3, #0]
  uint8_t retVal = 0;
1004b970:	260f      	movs	r6, #15
1004b972:	19bb      	adds	r3, r7, r6
1004b974:	2200      	movs	r2, #0
1004b976:	701a      	strb	r2, [r3, #0]
#if defined (STM32WB06) || defined (STM32WB07)
  uint64_t current_time;
#endif

  RADIO_TIMER_Context.radioTimer.event_type = event_type;
1004b978:	1cfb      	adds	r3, r7, #3
1004b97a:	781b      	ldrb	r3, [r3, #0]
1004b97c:	1e5a      	subs	r2, r3, #1
1004b97e:	4193      	sbcs	r3, r2
1004b980:	b2d9      	uxtb	r1, r3
1004b982:	4b1b      	ldr	r3, [pc, #108]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b984:	2264      	movs	r2, #100	@ 0x64
1004b986:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.cal_req = cal_req;
1004b988:	1cbb      	adds	r3, r7, #2
1004b98a:	781b      	ldrb	r3, [r3, #0]
1004b98c:	1e5a      	subs	r2, r3, #1
1004b98e:	4193      	sbcs	r3, r2
1004b990:	b2d9      	uxtb	r1, r3
1004b992:	4b17      	ldr	r3, [pc, #92]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b994:	2260      	movs	r2, #96	@ 0x60
1004b996:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.expiryTime = RADIO_TIMER_Context.calibrationData.last_calibration_time + (uint32_t)(time - (uint32_t)RADIO_TIMER_Context.calibrationData.last_calibration_time);
1004b998:	4b15      	ldr	r3, [pc, #84]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b99a:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
1004b99c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
1004b99e:	4914      	ldr	r1, [pc, #80]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b9a0:	6a88      	ldr	r0, [r1, #40]	@ 0x28
1004b9a2:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
1004b9a4:	6879      	ldr	r1, [r7, #4]
1004b9a6:	1a09      	subs	r1, r1, r0
1004b9a8:	000c      	movs	r4, r1
1004b9aa:	2100      	movs	r1, #0
1004b9ac:	000d      	movs	r5, r1
1004b9ae:	1912      	adds	r2, r2, r4
1004b9b0:	416b      	adcs	r3, r5
1004b9b2:	490f      	ldr	r1, [pc, #60]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b9b4:	658a      	str	r2, [r1, #88]	@ 0x58
1004b9b6:	65cb      	str	r3, [r1, #92]	@ 0x5c
  RADIO_TIMER_Context.radioTimer.active = FALSE;
1004b9b8:	4b0d      	ldr	r3, [pc, #52]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b9ba:	2261      	movs	r2, #97	@ 0x61
1004b9bc:	2100      	movs	r1, #0
1004b9be:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.intTxRx_to_be_served = FALSE;
1004b9c0:	4b0b      	ldr	r3, [pc, #44]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b9c2:	2263      	movs	r2, #99	@ 0x63
1004b9c4:	2100      	movs	r1, #0
1004b9c6:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.pending = TRUE;
1004b9c8:	4b09      	ldr	r3, [pc, #36]	@ (1004b9f0 <HAL_RADIO_TIMER_SetRadioTimerValue+0x98>)
1004b9ca:	2262      	movs	r2, #98	@ 0x62
1004b9cc:	2101      	movs	r1, #1
1004b9ce:	5499      	strb	r1, [r3, r2]
      This call is not needed if radio errors are not enabled by the BLE stack. */
      _set_controller_as_host();
    }
  }
#else
  _check_radio_activity(&RADIO_TIMER_Context.radioTimer, &retVal);
1004b9d0:	19ba      	adds	r2, r7, r6
1004b9d2:	4b08      	ldr	r3, [pc, #32]	@ (1004b9f4 <HAL_RADIO_TIMER_SetRadioTimerValue+0x9c>)
1004b9d4:	0011      	movs	r1, r2
1004b9d6:	0018      	movs	r0, r3
1004b9d8:	f000 fdf4 	bl	1004c5c4 <_check_radio_activity>
#endif

  _virtualTimeBaseEnable(ENABLE);
1004b9dc:	2001      	movs	r0, #1
1004b9de:	f000 fcbb 	bl	1004c358 <_virtualTimeBaseEnable>

  return retVal;
1004b9e2:	19bb      	adds	r3, r7, r6
1004b9e4:	781b      	ldrb	r3, [r3, #0]
}
1004b9e6:	0018      	movs	r0, r3
1004b9e8:	46bd      	mov	sp, r7
1004b9ea:	b005      	add	sp, #20
1004b9ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004b9ee:	46c0      	nop			@ (mov r8, r8)
1004b9f0:	200006f8 	.word	0x200006f8
1004b9f4:	20000750 	.word	0x20000750

1004b9f8 <HAL_RADIO_TIMER_ClearRadioTimerValue>:
  * @retval 0 if the radio activity has been cleared successfully.
  * @retval 1 if it is too late to clear the last radio activity.
  * @retval 2 if it might not be possible to clear the last radio activity.
  */
uint32_t HAL_RADIO_TIMER_ClearRadioTimerValue(void)
{
1004b9f8:	b5b0      	push	{r4, r5, r7, lr}
1004b9fa:	b088      	sub	sp, #32
1004b9fc:	af00      	add	r7, sp, #0
  int64_t time_diff;
  uint8_t retVal;

  /* Disable Radio Timer1/2 and BLE Wakeup Timer */
  LL_RADIO_TIMER_DisableTimer1(BLUE);
1004b9fe:	23c0      	movs	r3, #192	@ 0xc0
1004ba00:	05db      	lsls	r3, r3, #23
1004ba02:	0018      	movs	r0, r3
1004ba04:	f7ff fc20 	bl	1004b248 <LL_RADIO_TIMER_DisableTimer1>
  LL_RADIO_TIMER_DisableTimer2(BLUE);
1004ba08:	23c0      	movs	r3, #192	@ 0xc0
1004ba0a:	05db      	lsls	r3, r3, #23
1004ba0c:	0018      	movs	r0, r3
1004ba0e:	f7ff fc2a 	bl	1004b266 <LL_RADIO_TIMER_DisableTimer2>
  LL_RADIO_TIMER_DisableBLEWakeupTimer(WAKEUP);
1004ba12:	4b31      	ldr	r3, [pc, #196]	@ (1004bad8 <HAL_RADIO_TIMER_ClearRadioTimerValue+0xe0>)
1004ba14:	0018      	movs	r0, r3
1004ba16:	f7ff fc51 	bl	1004b2bc <LL_RADIO_TIMER_DisableBLEWakeupTimer>
  RADIO_TIMER_Context.radioTimer.active = FALSE;
1004ba1a:	4b30      	ldr	r3, [pc, #192]	@ (1004badc <HAL_RADIO_TIMER_ClearRadioTimerValue+0xe4>)
1004ba1c:	2261      	movs	r2, #97	@ 0x61
1004ba1e:	2100      	movs	r1, #0
1004ba20:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.pending = FALSE;
1004ba22:	4b2e      	ldr	r3, [pc, #184]	@ (1004badc <HAL_RADIO_TIMER_ClearRadioTimerValue+0xe4>)
1004ba24:	2262      	movs	r2, #98	@ 0x62
1004ba26:	2100      	movs	r1, #0
1004ba28:	5499      	strb	r1, [r3, r2]
  RADIO_TIMER_Context.radioTimer.intTxRx_to_be_served = FALSE;
1004ba2a:	4b2c      	ldr	r3, [pc, #176]	@ (1004badc <HAL_RADIO_TIMER_ClearRadioTimerValue+0xe4>)
1004ba2c:	2263      	movs	r2, #99	@ 0x63
1004ba2e:	2100      	movs	r1, #0
1004ba30:	5499      	strb	r1, [r3, r2]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004ba32:	f3ef 8310 	mrs	r3, PRIMASK
1004ba36:	60bb      	str	r3, [r7, #8]
  return(result);
1004ba38:	68bb      	ldr	r3, [r7, #8]

  /*The rfSetup is different if Timer1 or Wakeup timer is programmed*/
  ATOMIC_SECTION_BEGIN();
1004ba3a:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("cpsid i" : : : "memory");
1004ba3c:	b672      	cpsid	i
}
1004ba3e:	46c0      	nop			@ (mov r8, r8)
  time_diff = RADIO_TIMER_Context.radioTimer.expiryTime \
1004ba40:	4b26      	ldr	r3, [pc, #152]	@ (1004badc <HAL_RADIO_TIMER_ClearRadioTimerValue+0xe4>)
1004ba42:	6d9c      	ldr	r4, [r3, #88]	@ 0x58
1004ba44:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
              - HAL_RADIO_TIMER_GetCurrentSysTime() \
1004ba46:	f000 f89d 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004ba4a:	0002      	movs	r2, r0
1004ba4c:	000b      	movs	r3, r1
1004ba4e:	1aa4      	subs	r4, r4, r2
1004ba50:	419d      	sbcs	r5, r3
1004ba52:	0022      	movs	r2, r4
1004ba54:	002b      	movs	r3, r5
              - RADIO_TIMER_Context.last_setup_time;
1004ba56:	4921      	ldr	r1, [pc, #132]	@ (1004badc <HAL_RADIO_TIMER_ClearRadioTimerValue+0xe4>)
1004ba58:	2084      	movs	r0, #132	@ 0x84
1004ba5a:	5c09      	ldrb	r1, [r1, r0]
1004ba5c:	6039      	str	r1, [r7, #0]
1004ba5e:	2100      	movs	r1, #0
1004ba60:	6079      	str	r1, [r7, #4]
1004ba62:	6838      	ldr	r0, [r7, #0]
1004ba64:	6879      	ldr	r1, [r7, #4]
1004ba66:	1a12      	subs	r2, r2, r0
1004ba68:	418b      	sbcs	r3, r1
  time_diff = RADIO_TIMER_Context.radioTimer.expiryTime \
1004ba6a:	613a      	str	r2, [r7, #16]
1004ba6c:	617b      	str	r3, [r7, #20]
1004ba6e:	69bb      	ldr	r3, [r7, #24]
1004ba70:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004ba72:	68fb      	ldr	r3, [r7, #12]
1004ba74:	f383 8810 	msr	PRIMASK, r3
}
1004ba78:	46c0      	nop			@ (mov r8, r8)
  {
    _check_host_activity();
  }
#endif

  if (time_diff <= 0)
1004ba7a:	697b      	ldr	r3, [r7, #20]
1004ba7c:	2b00      	cmp	r3, #0
1004ba7e:	dc0c      	bgt.n	1004ba9a <HAL_RADIO_TIMER_ClearRadioTimerValue+0xa2>
1004ba80:	697b      	ldr	r3, [r7, #20]
1004ba82:	2b00      	cmp	r3, #0
1004ba84:	d102      	bne.n	1004ba8c <HAL_RADIO_TIMER_ClearRadioTimerValue+0x94>
1004ba86:	693b      	ldr	r3, [r7, #16]
1004ba88:	2b00      	cmp	r3, #0
1004ba8a:	d106      	bne.n	1004ba9a <HAL_RADIO_TIMER_ClearRadioTimerValue+0xa2>
  {
    retVal = HAL_RADIO_TIMER_LATE;
1004ba8c:	2317      	movs	r3, #23
1004ba8e:	2208      	movs	r2, #8
1004ba90:	189b      	adds	r3, r3, r2
1004ba92:	19db      	adds	r3, r3, r7
1004ba94:	2201      	movs	r2, #1
1004ba96:	701a      	strb	r2, [r3, #0]
1004ba98:	e015      	b.n	1004bac6 <HAL_RADIO_TIMER_ClearRadioTimerValue+0xce>
  }
  else if (time_diff < CLEAR_MIN_THR)
1004ba9a:	697b      	ldr	r3, [r7, #20]
1004ba9c:	2b00      	cmp	r3, #0
1004ba9e:	dc0c      	bgt.n	1004baba <HAL_RADIO_TIMER_ClearRadioTimerValue+0xc2>
1004baa0:	697b      	ldr	r3, [r7, #20]
1004baa2:	2b00      	cmp	r3, #0
1004baa4:	d102      	bne.n	1004baac <HAL_RADIO_TIMER_ClearRadioTimerValue+0xb4>
1004baa6:	693b      	ldr	r3, [r7, #16]
1004baa8:	2b0e      	cmp	r3, #14
1004baaa:	d806      	bhi.n	1004baba <HAL_RADIO_TIMER_ClearRadioTimerValue+0xc2>
  {
    retVal = HAL_RADIO_TIMER_CRITICAL;
1004baac:	2317      	movs	r3, #23
1004baae:	2208      	movs	r2, #8
1004bab0:	189b      	adds	r3, r3, r2
1004bab2:	19db      	adds	r3, r3, r7
1004bab4:	2202      	movs	r2, #2
1004bab6:	701a      	strb	r2, [r3, #0]
1004bab8:	e005      	b.n	1004bac6 <HAL_RADIO_TIMER_ClearRadioTimerValue+0xce>
  }
  else
  {
    retVal = HAL_RADIO_TIMER_SUCCESS;
1004baba:	2317      	movs	r3, #23
1004babc:	2208      	movs	r2, #8
1004babe:	189b      	adds	r3, r3, r2
1004bac0:	19db      	adds	r3, r3, r7
1004bac2:	2200      	movs	r2, #0
1004bac4:	701a      	strb	r2, [r3, #0]
  }

  return retVal;
1004bac6:	2317      	movs	r3, #23
1004bac8:	2208      	movs	r2, #8
1004baca:	189b      	adds	r3, r3, r2
1004bacc:	19db      	adds	r3, r3, r7
1004bace:	781b      	ldrb	r3, [r3, #0]
}
1004bad0:	0018      	movs	r0, r3
1004bad2:	46bd      	mov	sp, r7
1004bad4:	b008      	add	sp, #32
1004bad6:	bdb0      	pop	{r4, r5, r7, pc}
1004bad8:	60001800 	.word	0x60001800
1004badc:	200006f8 	.word	0x200006f8

1004bae0 <HAL_RADIO_TIMER_SetRadioCloseTimeout>:
  *        The current time is sampled and increased by two.
  *        It means that the timer is going to trigger in a timer interval that goes
  *        from one to two machine time units.
  */
void HAL_RADIO_TIMER_SetRadioCloseTimeout(void)
{
1004bae0:	b580      	push	{r7, lr}
1004bae2:	b084      	sub	sp, #16
1004bae4:	af00      	add	r7, sp, #0
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004bae6:	f3ef 8310 	mrs	r3, PRIMASK
1004baea:	603b      	str	r3, [r7, #0]
  return(result);
1004baec:	683b      	ldr	r3, [r7, #0]
  uint32_t current_time;

  ATOMIC_SECTION_BEGIN();
1004baee:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("cpsid i" : : : "memory");
1004baf0:	b672      	cpsid	i
}
1004baf2:	46c0      	nop			@ (mov r8, r8)
  current_time = LL_RADIO_TIMER_GetAbsoluteTime(WAKEUP);
1004baf4:	4b0e      	ldr	r3, [pc, #56]	@ (1004bb30 <HAL_RADIO_TIMER_SetRadioCloseTimeout+0x50>)
1004baf6:	0018      	movs	r0, r3
1004baf8:	f7ff fc37 	bl	1004b36a <LL_RADIO_TIMER_GetAbsoluteTime>
1004bafc:	0003      	movs	r3, r0
1004bafe:	60bb      	str	r3, [r7, #8]
  LL_RADIO_TIMER_SetTimeout(BLUE, ((current_time + 2) & TIMER_MAX_VALUE));
1004bb00:	68bb      	ldr	r3, [r7, #8]
1004bb02:	1c9a      	adds	r2, r3, #2
1004bb04:	23c0      	movs	r3, #192	@ 0xc0
1004bb06:	05db      	lsls	r3, r3, #23
1004bb08:	0011      	movs	r1, r2
1004bb0a:	0018      	movs	r0, r3
1004bb0c:	f7ff fbba 	bl	1004b284 <LL_RADIO_TIMER_SetTimeout>
  LL_RADIO_TIMER_EnableTimer1(BLUE);
1004bb10:	23c0      	movs	r3, #192	@ 0xc0
1004bb12:	05db      	lsls	r3, r3, #23
1004bb14:	0018      	movs	r0, r3
1004bb16:	f7ff fb87 	bl	1004b228 <LL_RADIO_TIMER_EnableTimer1>
1004bb1a:	68fb      	ldr	r3, [r7, #12]
1004bb1c:	607b      	str	r3, [r7, #4]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004bb1e:	687b      	ldr	r3, [r7, #4]
1004bb20:	f383 8810 	msr	PRIMASK, r3
}
1004bb24:	46c0      	nop			@ (mov r8, r8)
  ATOMIC_SECTION_END();
}
1004bb26:	46c0      	nop			@ (mov r8, r8)
1004bb28:	46bd      	mov	sp, r7
1004bb2a:	b004      	add	sp, #16
1004bb2c:	bd80      	pop	{r7, pc}
1004bb2e:	46c0      	nop			@ (mov r8, r8)
1004bb30:	60001800 	.word	0x60001800

1004bb34 <HAL_RADIO_TIMER_RadioTimerIsr>:
/**
  * @brief  Radio activity finished.
  * @retval None
  */
void HAL_RADIO_TIMER_RadioTimerIsr(void)
{
1004bb34:	b580      	push	{r7, lr}
1004bb36:	af00      	add	r7, sp, #0
  if (!(LL_RADIO_TIMER_IsEnabledTimer1(BLUE) || LL_RADIO_TIMER_IsEnabledTimer2(BLUE)))
  {
    _check_host_activity();
  }
#endif
}
1004bb38:	46c0      	nop			@ (mov r8, r8)
1004bb3a:	46bd      	mov	sp, r7
1004bb3c:	bd80      	pop	{r7, pc}
	...

1004bb40 <HAL_RADIO_TIMER_EndOfRadioActivityIsr>:
/**
  * @brief  Timer State machine semaphore to signal the radio activity finished.
  * @retval None
  */
void HAL_RADIO_TIMER_EndOfRadioActivityIsr(void)
{
1004bb40:	b580      	push	{r7, lr}
1004bb42:	af00      	add	r7, sp, #0
  RADIO_TIMER_Context.radioTimer.intTxRx_to_be_served = FALSE;
1004bb44:	4b03      	ldr	r3, [pc, #12]	@ (1004bb54 <HAL_RADIO_TIMER_EndOfRadioActivityIsr+0x14>)
1004bb46:	2263      	movs	r2, #99	@ 0x63
1004bb48:	2100      	movs	r1, #0
1004bb4a:	5499      	strb	r1, [r3, r2]
}
1004bb4c:	46c0      	nop			@ (mov r8, r8)
1004bb4e:	46bd      	mov	sp, r7
1004bb50:	bd80      	pop	{r7, pc}
1004bb52:	46c0      	nop			@ (mov r8, r8)
1004bb54:	200006f8 	.word	0x200006f8

1004bb58 <HAL_RADIO_TIMER_MachineTimeToSysTime>:
  *          storing the system time. It should be called only in
  *          user context and not in interrupt context.
  * @return  STU value
  */
uint32_t HAL_RADIO_TIMER_MachineTimeToSysTime(uint32_t time)
{
1004bb58:	b580      	push	{r7, lr}
1004bb5a:	b082      	sub	sp, #8
1004bb5c:	af00      	add	r7, sp, #0
1004bb5e:	6078      	str	r0, [r7, #4]
  return blue_unit_conversion(time, RADIO_TIMER_Context.calibrationData.period1, MULT64_THR_PERIOD);
1004bb60:	4b06      	ldr	r3, [pc, #24]	@ (1004bb7c <HAL_RADIO_TIMER_MachineTimeToSysTime+0x24>)
1004bb62:	69db      	ldr	r3, [r3, #28]
1004bb64:	0019      	movs	r1, r3
1004bb66:	4a06      	ldr	r2, [pc, #24]	@ (1004bb80 <HAL_RADIO_TIMER_MachineTimeToSysTime+0x28>)
1004bb68:	687b      	ldr	r3, [r7, #4]
1004bb6a:	0018      	movs	r0, r3
1004bb6c:	f7f4 faa8 	bl	100400c0 <blue_unit_conversion>
1004bb70:	0003      	movs	r3, r0
}
1004bb72:	0018      	movs	r0, r3
1004bb74:	46bd      	mov	sp, r7
1004bb76:	b002      	add	sp, #8
1004bb78:	bd80      	pop	{r7, pc}
1004bb7a:	46c0      	nop			@ (mov r8, r8)
1004bb7c:	200006f8 	.word	0x200006f8
1004bb80:	00000635 	.word	0x00000635

1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>:
  *         The returned value can be used as absolute time parameter where needed in the other
  *         HAL_RADIO_TIMER* APIs
  * @return absolute current time expressed in system time units.
  */
uint64_t HAL_RADIO_TIMER_GetCurrentSysTime(void)
{
1004bb84:	b580      	push	{r7, lr}
1004bb86:	b082      	sub	sp, #8
1004bb88:	af00      	add	r7, sp, #0
  uint32_t current_machine_time;
  return _get_system_time_and_machine(&RADIO_TIMER_Context, &current_machine_time);
1004bb8a:	1d3a      	adds	r2, r7, #4
1004bb8c:	4b05      	ldr	r3, [pc, #20]	@ (1004bba4 <HAL_RADIO_TIMER_GetCurrentSysTime+0x20>)
1004bb8e:	0011      	movs	r1, r2
1004bb90:	0018      	movs	r0, r3
1004bb92:	f000 fac1 	bl	1004c118 <_get_system_time_and_machine>
1004bb96:	0002      	movs	r2, r0
1004bb98:	000b      	movs	r3, r1
}
1004bb9a:	0010      	movs	r0, r2
1004bb9c:	0019      	movs	r1, r3
1004bb9e:	46bd      	mov	sp, r7
1004bba0:	b002      	add	sp, #8
1004bba2:	bd80      	pop	{r7, pc}
1004bba4:	200006f8 	.word	0x200006f8

1004bba8 <HAL_RADIO_TIMER_StartVirtualTimerSysTime>:
  * @param time: Absolute time expressed in STU.
  * @retval 0 if the timerHandle is valid.
  * @retval 1 if the timerHandle is not valid. It is already started.
  */
uint32_t HAL_RADIO_TIMER_StartVirtualTimerSysTime(VTIMER_HandleType *timerHandle, uint64_t time)
{
1004bba8:	b590      	push	{r4, r7, lr}
1004bbaa:	b087      	sub	sp, #28
1004bbac:	af00      	add	r7, sp, #0
1004bbae:	60f8      	str	r0, [r7, #12]
1004bbb0:	603a      	str	r2, [r7, #0]
1004bbb2:	607b      	str	r3, [r7, #4]
  uint8_t retVal;
  retVal = _start_timer(timerHandle, time);
1004bbb4:	683a      	ldr	r2, [r7, #0]
1004bbb6:	687b      	ldr	r3, [r7, #4]
1004bbb8:	68f9      	ldr	r1, [r7, #12]
1004bbba:	0008      	movs	r0, r1
1004bbbc:	f000 fa4e 	bl	1004c05c <_start_timer>
1004bbc0:	0002      	movs	r2, r0
1004bbc2:	2417      	movs	r4, #23
1004bbc4:	193b      	adds	r3, r7, r4
1004bbc6:	701a      	strb	r2, [r3, #0]
  _virtualTimeBaseEnable(ENABLE);
1004bbc8:	2001      	movs	r0, #1
1004bbca:	f000 fbc5 	bl	1004c358 <_virtualTimeBaseEnable>

  return retVal;
1004bbce:	193b      	adds	r3, r7, r4
1004bbd0:	781b      	ldrb	r3, [r3, #0]
}
1004bbd2:	0018      	movs	r0, r3
1004bbd4:	46bd      	mov	sp, r7
1004bbd6:	b007      	add	sp, #28
1004bbd8:	bd90      	pop	{r4, r7, pc}
	...

1004bbdc <HAL_RADIO_TIMER_StopVirtualTimer>:
  * @brief  Stops the one-shot virtual timer specified if found
  * @param  timerHandle: The virtual timer
  * @retval None
  */
void HAL_RADIO_TIMER_StopVirtualTimer(VTIMER_HandleType *timerHandle)
{
1004bbdc:	b590      	push	{r4, r7, lr}
1004bbde:	b089      	sub	sp, #36	@ 0x24
1004bbe0:	af00      	add	r7, sp, #0
1004bbe2:	6078      	str	r0, [r7, #4]
  VTIMER_HandleType *rootNode = _remove_timer_in_queue(RADIO_TIMER_Context.rootNode, timerHandle);
1004bbe4:	4b28      	ldr	r3, [pc, #160]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bbe6:	228c      	movs	r2, #140	@ 0x8c
1004bbe8:	589b      	ldr	r3, [r3, r2]
1004bbea:	687a      	ldr	r2, [r7, #4]
1004bbec:	0011      	movs	r1, r2
1004bbee:	0018      	movs	r0, r3
1004bbf0:	f000 fbde 	bl	1004c3b0 <_remove_timer_in_queue>
1004bbf4:	0003      	movs	r3, r0
1004bbf6:	61fb      	str	r3, [r7, #28]
  uint8_t expired = 0;
1004bbf8:	210f      	movs	r1, #15
1004bbfa:	187b      	adds	r3, r7, r1
1004bbfc:	2200      	movs	r2, #0
1004bbfe:	701a      	strb	r2, [r3, #0]
  timerHandle->active = FALSE;
1004bc00:	687b      	ldr	r3, [r7, #4]
1004bc02:	2200      	movs	r2, #0
1004bc04:	731a      	strb	r2, [r3, #12]
  if (RADIO_TIMER_Context.rootNode != rootNode)
1004bc06:	4b20      	ldr	r3, [pc, #128]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc08:	228c      	movs	r2, #140	@ 0x8c
1004bc0a:	589b      	ldr	r3, [r3, r2]
1004bc0c:	69fa      	ldr	r2, [r7, #28]
1004bc0e:	429a      	cmp	r2, r3
1004bc10:	d031      	beq.n	1004bc76 <HAL_RADIO_TIMER_StopVirtualTimer+0x9a>
  {
    RADIO_TIMER_Context.rootNode = _update_user_timeout(rootNode, &expired);
1004bc12:	000c      	movs	r4, r1
1004bc14:	187a      	adds	r2, r7, r1
1004bc16:	69fb      	ldr	r3, [r7, #28]
1004bc18:	0011      	movs	r1, r2
1004bc1a:	0018      	movs	r0, r3
1004bc1c:	f000 fae4 	bl	1004c1e8 <_update_user_timeout>
1004bc20:	0002      	movs	r2, r0
1004bc22:	4b19      	ldr	r3, [pc, #100]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc24:	218c      	movs	r1, #140	@ 0x8c
1004bc26:	505a      	str	r2, [r3, r1]
    if (expired)
1004bc28:	193b      	adds	r3, r7, r4
1004bc2a:	781b      	ldrb	r3, [r3, #0]
1004bc2c:	2b00      	cmp	r3, #0
1004bc2e:	d026      	beq.n	1004bc7e <HAL_RADIO_TIMER_StopVirtualTimer+0xa2>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004bc30:	f3ef 8310 	mrs	r3, PRIMASK
1004bc34:	617b      	str	r3, [r7, #20]
  return(result);
1004bc36:	697b      	ldr	r3, [r7, #20]
    {
      /* A new root timer is already expired, mimic timer expire */
      INCREMENT_EXPIRE_COUNT;
1004bc38:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("cpsid i" : : : "memory");
1004bc3a:	b672      	cpsid	i
}
1004bc3c:	46c0      	nop			@ (mov r8, r8)
1004bc3e:	4b12      	ldr	r3, [pc, #72]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc40:	2291      	movs	r2, #145	@ 0x91
1004bc42:	5c9b      	ldrb	r3, [r3, r2]
1004bc44:	3301      	adds	r3, #1
1004bc46:	4a10      	ldr	r2, [pc, #64]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc48:	2192      	movs	r1, #146	@ 0x92
1004bc4a:	5c52      	ldrb	r2, [r2, r1]
1004bc4c:	4293      	cmp	r3, r2
1004bc4e:	d103      	bne.n	1004bc58 <HAL_RADIO_TIMER_StopVirtualTimer+0x7c>
1004bc50:	4b0d      	ldr	r3, [pc, #52]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc52:	2291      	movs	r2, #145	@ 0x91
1004bc54:	5c9b      	ldrb	r3, [r3, r2]
1004bc56:	e004      	b.n	1004bc62 <HAL_RADIO_TIMER_StopVirtualTimer+0x86>
1004bc58:	4b0b      	ldr	r3, [pc, #44]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc5a:	2291      	movs	r2, #145	@ 0x91
1004bc5c:	5c9b      	ldrb	r3, [r3, r2]
1004bc5e:	3301      	adds	r3, #1
1004bc60:	b2db      	uxtb	r3, r3
1004bc62:	4a09      	ldr	r2, [pc, #36]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc64:	2191      	movs	r1, #145	@ 0x91
1004bc66:	5453      	strb	r3, [r2, r1]
1004bc68:	69bb      	ldr	r3, [r7, #24]
1004bc6a:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004bc6c:	693b      	ldr	r3, [r7, #16]
1004bc6e:	f383 8810 	msr	PRIMASK, r3
}
1004bc72:	46c0      	nop			@ (mov r8, r8)
  }
  else
  {
    RADIO_TIMER_Context.rootNode = rootNode;
  }
}
1004bc74:	e003      	b.n	1004bc7e <HAL_RADIO_TIMER_StopVirtualTimer+0xa2>
    RADIO_TIMER_Context.rootNode = rootNode;
1004bc76:	4b04      	ldr	r3, [pc, #16]	@ (1004bc88 <HAL_RADIO_TIMER_StopVirtualTimer+0xac>)
1004bc78:	218c      	movs	r1, #140	@ 0x8c
1004bc7a:	69fa      	ldr	r2, [r7, #28]
1004bc7c:	505a      	str	r2, [r3, r1]
}
1004bc7e:	46c0      	nop			@ (mov r8, r8)
1004bc80:	46bd      	mov	sp, r7
1004bc82:	b009      	add	sp, #36	@ 0x24
1004bc84:	bd90      	pop	{r4, r7, pc}
1004bc86:	46c0      	nop			@ (mov r8, r8)
1004bc88:	200006f8 	.word	0x200006f8

1004bc8c <HAL_RADIO_TIMER_TimeoutCallback>:
/**
  * @brief  Virtual timer Timeout Callback. It signals that a host timeout occurred.
  * @retval None
  */
void HAL_RADIO_TIMER_TimeoutCallback(void)
{
1004bc8c:	b580      	push	{r7, lr}
1004bc8e:	b082      	sub	sp, #8
1004bc90:	af00      	add	r7, sp, #0
  volatile uint32_t status = 0;
1004bc92:	2300      	movs	r3, #0
1004bc94:	607b      	str	r3, [r7, #4]
  UNUSED(status);
1004bc96:	687b      	ldr	r3, [r7, #4]
#if defined (STM32WB06) || defined (STM32WB07)
  RADIO_TIMER_Context.hostIsRadioPending = 0;
#endif

  /* Disable host timer */
  LL_RADIO_TIMER_DisableCPUWakeupTimer(WAKEUP);
1004bc98:	4b13      	ldr	r3, [pc, #76]	@ (1004bce8 <HAL_RADIO_TIMER_TimeoutCallback+0x5c>)
1004bc9a:	0018      	movs	r0, r3
1004bc9c:	f7ff fb2e 	bl	1004b2fc <LL_RADIO_TIMER_DisableCPUWakeupTimer>
  INCREMENT_EXPIRE_COUNT_ISR;
1004bca0:	4b12      	ldr	r3, [pc, #72]	@ (1004bcec <HAL_RADIO_TIMER_TimeoutCallback+0x60>)
1004bca2:	2291      	movs	r2, #145	@ 0x91
1004bca4:	5c9b      	ldrb	r3, [r3, r2]
1004bca6:	3301      	adds	r3, #1
1004bca8:	4a10      	ldr	r2, [pc, #64]	@ (1004bcec <HAL_RADIO_TIMER_TimeoutCallback+0x60>)
1004bcaa:	2192      	movs	r1, #146	@ 0x92
1004bcac:	5c52      	ldrb	r2, [r2, r1]
1004bcae:	4293      	cmp	r3, r2
1004bcb0:	d103      	bne.n	1004bcba <HAL_RADIO_TIMER_TimeoutCallback+0x2e>
1004bcb2:	4b0e      	ldr	r3, [pc, #56]	@ (1004bcec <HAL_RADIO_TIMER_TimeoutCallback+0x60>)
1004bcb4:	2291      	movs	r2, #145	@ 0x91
1004bcb6:	5c9b      	ldrb	r3, [r3, r2]
1004bcb8:	e004      	b.n	1004bcc4 <HAL_RADIO_TIMER_TimeoutCallback+0x38>
1004bcba:	4b0c      	ldr	r3, [pc, #48]	@ (1004bcec <HAL_RADIO_TIMER_TimeoutCallback+0x60>)
1004bcbc:	2291      	movs	r2, #145	@ 0x91
1004bcbe:	5c9b      	ldrb	r3, [r3, r2]
1004bcc0:	3301      	adds	r3, #1
1004bcc2:	b2db      	uxtb	r3, r3
1004bcc4:	4a09      	ldr	r2, [pc, #36]	@ (1004bcec <HAL_RADIO_TIMER_TimeoutCallback+0x60>)
1004bcc6:	2191      	movs	r1, #145	@ 0x91
1004bcc8:	5453      	strb	r3, [r2, r1]
  /* Clear the interrupt */
  LL_RADIO_TIMER_ClearFlag_CPUWakeup(WAKEUP);
1004bcca:	4b07      	ldr	r3, [pc, #28]	@ (1004bce8 <HAL_RADIO_TIMER_TimeoutCallback+0x5c>)
1004bccc:	0018      	movs	r0, r3
1004bcce:	f7ff fb7e 	bl	1004b3ce <LL_RADIO_TIMER_ClearFlag_CPUWakeup>
  status = LL_RADIO_TIMER_IsActiveFlag_CPUWakeup(WAKEUP);
1004bcd2:	4b05      	ldr	r3, [pc, #20]	@ (1004bce8 <HAL_RADIO_TIMER_TimeoutCallback+0x5c>)
1004bcd4:	0018      	movs	r0, r3
1004bcd6:	f7ff fb88 	bl	1004b3ea <LL_RADIO_TIMER_IsActiveFlag_CPUWakeup>
1004bcda:	0003      	movs	r3, r0
1004bcdc:	607b      	str	r3, [r7, #4]
}
1004bcde:	46c0      	nop			@ (mov r8, r8)
1004bce0:	46bd      	mov	sp, r7
1004bce2:	b002      	add	sp, #8
1004bce4:	bd80      	pop	{r7, pc}
1004bce6:	46c0      	nop			@ (mov r8, r8)
1004bce8:	60001800 	.word	0x60001800
1004bcec:	200006f8 	.word	0x200006f8

1004bcf0 <_calibrationProcedure>:
/** @defgroup RADIO_TIMER_Private_Functions  RADIO TIMER Private Functions
  * @{
  */

static void _calibrationProcedure(void)
{
1004bcf0:	b580      	push	{r7, lr}
1004bcf2:	af00      	add	r7, sp, #0
  /* Make sure any pending calibration is over */
  while (LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded(RADIO_CTRL) == 0);
1004bcf4:	46c0      	nop			@ (mov r8, r8)
1004bcf6:	4b0b      	ldr	r3, [pc, #44]	@ (1004bd24 <_calibrationProcedure+0x34>)
1004bcf8:	0018      	movs	r0, r3
1004bcfa:	f7ff fbc0 	bl	1004b47e <LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded>
1004bcfe:	1e03      	subs	r3, r0, #0
1004bd00:	d0f9      	beq.n	1004bcf6 <_calibrationProcedure+0x6>

  /* Set SLOW_COUNT to 23, that is calibrate over 24 clock periods, this number
  cannot be changed without changing all the integer maths function in the
  file  */
  LL_RADIO_TIMER_SetLSIWindowCalibrationLength(RADIO_CTRL, 23);
1004bd02:	4b08      	ldr	r3, [pc, #32]	@ (1004bd24 <_calibrationProcedure+0x34>)
1004bd04:	2117      	movs	r1, #23
1004bd06:	0018      	movs	r0, r3
1004bd08:	f7ff fb80 	bl	1004b40c <LL_RADIO_TIMER_SetLSIWindowCalibrationLength>

  /* Start a calibration and take the correct freq */
  _timer_calibrate(&RADIO_TIMER_Context.calibrationData);
1004bd0c:	4b06      	ldr	r3, [pc, #24]	@ (1004bd28 <_calibrationProcedure+0x38>)
1004bd0e:	0018      	movs	r0, r3
1004bd10:	f000 f81e 	bl	1004bd50 <_timer_calibrate>
  /* For first time set last to current */
  RADIO_TIMER_Context.calibrationData.last_period1 = RADIO_TIMER_Context.calibrationData.period1;
1004bd14:	4b05      	ldr	r3, [pc, #20]	@ (1004bd2c <_calibrationProcedure+0x3c>)
1004bd16:	69da      	ldr	r2, [r3, #28]
1004bd18:	4b04      	ldr	r3, [pc, #16]	@ (1004bd2c <_calibrationProcedure+0x3c>)
1004bd1a:	621a      	str	r2, [r3, #32]

}
1004bd1c:	46c0      	nop			@ (mov r8, r8)
1004bd1e:	46bd      	mov	sp, r7
1004bd20:	bd80      	pop	{r7, pc}
1004bd22:	46c0      	nop			@ (mov r8, r8)
1004bd24:	60001000 	.word	0x60001000
1004bd28:	20000708 	.word	0x20000708
1004bd2c:	200006f8 	.word	0x200006f8

1004bd30 <_timer_start_calibration>:

static void _timer_start_calibration(void)
{
1004bd30:	b580      	push	{r7, lr}
1004bd32:	af00      	add	r7, sp, #0
  /* Clear any pending interrupt */
  LL_RADIO_TIMER_ClearFlag_LSICalibrationEnded(RADIO_CTRL);
1004bd34:	4b05      	ldr	r3, [pc, #20]	@ (1004bd4c <_timer_start_calibration+0x1c>)
1004bd36:	0018      	movs	r0, r3
1004bd38:	f7ff fb93 	bl	1004b462 <LL_RADIO_TIMER_ClearFlag_LSICalibrationEnded>
  /* Start calibration */
  LL_RADIO_TIMER_StartLSICalibration(RADIO_CTRL);
1004bd3c:	4b03      	ldr	r3, [pc, #12]	@ (1004bd4c <_timer_start_calibration+0x1c>)
1004bd3e:	0018      	movs	r0, r3
1004bd40:	f7ff fb70 	bl	1004b424 <LL_RADIO_TIMER_StartLSICalibration>
}
1004bd44:	46c0      	nop			@ (mov r8, r8)
1004bd46:	46bd      	mov	sp, r7
1004bd48:	bd80      	pop	{r7, pc}
1004bd4a:	46c0      	nop			@ (mov r8, r8)
1004bd4c:	60001000 	.word	0x60001000

1004bd50 <_timer_calibrate>:

static void _timer_calibrate(CalibrationDataTypeDef *calibrationData)
{
1004bd50:	b580      	push	{r7, lr}
1004bd52:	b082      	sub	sp, #8
1004bd54:	af00      	add	r7, sp, #0
1004bd56:	6078      	str	r0, [r7, #4]
  _timer_start_calibration();
1004bd58:	f7ff ffea 	bl	1004bd30 <_timer_start_calibration>
  while (LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded(RADIO_CTRL) == 0);
1004bd5c:	46c0      	nop			@ (mov r8, r8)
1004bd5e:	4b07      	ldr	r3, [pc, #28]	@ (1004bd7c <_timer_calibrate+0x2c>)
1004bd60:	0018      	movs	r0, r3
1004bd62:	f7ff fb8c 	bl	1004b47e <LL_RADIO_TIMER_IsActiveFlag_LSICalibrationEnded>
1004bd66:	1e03      	subs	r3, r0, #0
1004bd68:	d0f9      	beq.n	1004bd5e <_timer_calibrate+0xe>
  _get_calibration_data(calibrationData);
1004bd6a:	687b      	ldr	r3, [r7, #4]
1004bd6c:	0018      	movs	r0, r3
1004bd6e:	f000 f807 	bl	1004bd80 <_get_calibration_data>
}
1004bd72:	46c0      	nop			@ (mov r8, r8)
1004bd74:	46bd      	mov	sp, r7
1004bd76:	b002      	add	sp, #8
1004bd78:	bd80      	pop	{r7, pc}
1004bd7a:	46c0      	nop			@ (mov r8, r8)
1004bd7c:	60001000 	.word	0x60001000

1004bd80 <_get_calibration_data>:

static void _get_calibration_data(CalibrationDataTypeDef *calibrationData)
{
1004bd80:	b580      	push	{r7, lr}
1004bd82:	b08a      	sub	sp, #40	@ 0x28
1004bd84:	af00      	add	r7, sp, #0
1004bd86:	6078      	str	r0, [r7, #4]
  int32_t b2;
  int32_t mult;
  int32_t a1;
  int32_t a2;

  period =  LL_RADIO_TIMER_GetLSIPeriod(RADIO_CTRL);
1004bd88:	4b2e      	ldr	r3, [pc, #184]	@ (1004be44 <_get_calibration_data+0xc4>)
1004bd8a:	0018      	movs	r0, r3
1004bd8c:	f7ff fb55 	bl	1004b43a <LL_RADIO_TIMER_GetLSIPeriod>
1004bd90:	0003      	movs	r3, r0
1004bd92:	627b      	str	r3, [r7, #36]	@ 0x24
  while (period != LL_RADIO_TIMER_GetLSIPeriod(RADIO_CTRL) || period == 0)
1004bd94:	e005      	b.n	1004bda2 <_get_calibration_data+0x22>
  {
    period = LL_RADIO_TIMER_GetLSIPeriod(RADIO_CTRL);
1004bd96:	4b2b      	ldr	r3, [pc, #172]	@ (1004be44 <_get_calibration_data+0xc4>)
1004bd98:	0018      	movs	r0, r3
1004bd9a:	f7ff fb4e 	bl	1004b43a <LL_RADIO_TIMER_GetLSIPeriod>
1004bd9e:	0003      	movs	r3, r0
1004bda0:	627b      	str	r3, [r7, #36]	@ 0x24
  while (period != LL_RADIO_TIMER_GetLSIPeriod(RADIO_CTRL) || period == 0)
1004bda2:	4b28      	ldr	r3, [pc, #160]	@ (1004be44 <_get_calibration_data+0xc4>)
1004bda4:	0018      	movs	r0, r3
1004bda6:	f7ff fb48 	bl	1004b43a <LL_RADIO_TIMER_GetLSIPeriod>
1004bdaa:	0002      	movs	r2, r0
1004bdac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004bdae:	429a      	cmp	r2, r3
1004bdb0:	d1f1      	bne.n	1004bd96 <_get_calibration_data+0x16>
1004bdb2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004bdb4:	2b00      	cmp	r3, #0
1004bdb6:	d0ee      	beq.n	1004bd96 <_get_calibration_data+0x16>
  }

  mul1 = 0x8BCF6 ;
1004bdb8:	4b23      	ldr	r3, [pc, #140]	@ (1004be48 <_get_calibration_data+0xc8>)
1004bdba:	61fb      	str	r3, [r7, #28]
  b1 = period >> 8 ;
1004bdbc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004bdbe:	121b      	asrs	r3, r3, #8
1004bdc0:	61bb      	str	r3, [r7, #24]
  b2 = period & 0xff ;
1004bdc2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004bdc4:	22ff      	movs	r2, #255	@ 0xff
1004bdc6:	4013      	ands	r3, r2
1004bdc8:	617b      	str	r3, [r7, #20]
  calibrationData->period1 = ((mul1 * b1) + ((b2 * mul1) >> 8) + 16) >> 5;
1004bdca:	69fb      	ldr	r3, [r7, #28]
1004bdcc:	69ba      	ldr	r2, [r7, #24]
1004bdce:	435a      	muls	r2, r3
1004bdd0:	697b      	ldr	r3, [r7, #20]
1004bdd2:	69f9      	ldr	r1, [r7, #28]
1004bdd4:	434b      	muls	r3, r1
1004bdd6:	121b      	asrs	r3, r3, #8
1004bdd8:	18d3      	adds	r3, r2, r3
1004bdda:	3310      	adds	r3, #16
1004bddc:	115a      	asrs	r2, r3, #5
1004bdde:	687b      	ldr	r3, [r7, #4]
1004bde0:	60da      	str	r2, [r3, #12]
  calibrationData->period = period;
1004bde2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1004bde4:	687b      	ldr	r3, [r7, #4]
1004bde6:	601a      	str	r2, [r3, #0]

  mult = 0x753 ;
1004bde8:	4b18      	ldr	r3, [pc, #96]	@ (1004be4c <_get_calibration_data+0xcc>)
1004bdea:	613b      	str	r3, [r7, #16]
  freq = LL_RADIO_TIMER_GetLSIFrequency(RADIO_CTRL);
1004bdec:	4b15      	ldr	r3, [pc, #84]	@ (1004be44 <_get_calibration_data+0xc4>)
1004bdee:	0018      	movs	r0, r3
1004bdf0:	f7ff fb2d 	bl	1004b44e <LL_RADIO_TIMER_GetLSIFrequency>
1004bdf4:	0003      	movs	r3, r0
1004bdf6:	623b      	str	r3, [r7, #32]

  while (freq != LL_RADIO_TIMER_GetLSIFrequency(RADIO_CTRL) || freq == 0)
1004bdf8:	e005      	b.n	1004be06 <_get_calibration_data+0x86>
  {
    freq = LL_RADIO_TIMER_GetLSIFrequency(RADIO_CTRL);
1004bdfa:	4b12      	ldr	r3, [pc, #72]	@ (1004be44 <_get_calibration_data+0xc4>)
1004bdfc:	0018      	movs	r0, r3
1004bdfe:	f7ff fb26 	bl	1004b44e <LL_RADIO_TIMER_GetLSIFrequency>
1004be02:	0003      	movs	r3, r0
1004be04:	623b      	str	r3, [r7, #32]
  while (freq != LL_RADIO_TIMER_GetLSIFrequency(RADIO_CTRL) || freq == 0)
1004be06:	4b0f      	ldr	r3, [pc, #60]	@ (1004be44 <_get_calibration_data+0xc4>)
1004be08:	0018      	movs	r0, r3
1004be0a:	f7ff fb20 	bl	1004b44e <LL_RADIO_TIMER_GetLSIFrequency>
1004be0e:	0002      	movs	r2, r0
1004be10:	6a3b      	ldr	r3, [r7, #32]
1004be12:	429a      	cmp	r2, r3
1004be14:	d1f1      	bne.n	1004bdfa <_get_calibration_data+0x7a>
1004be16:	6a3b      	ldr	r3, [r7, #32]
1004be18:	2b00      	cmp	r3, #0
1004be1a:	d0ee      	beq.n	1004bdfa <_get_calibration_data+0x7a>
  }
  a1 = freq >> 6 ;
1004be1c:	6a3b      	ldr	r3, [r7, #32]
1004be1e:	119b      	asrs	r3, r3, #6
1004be20:	60fb      	str	r3, [r7, #12]
  a2 = a1 * mult ;
1004be22:	68fb      	ldr	r3, [r7, #12]
1004be24:	693a      	ldr	r2, [r7, #16]
1004be26:	4353      	muls	r3, r2
1004be28:	60bb      	str	r3, [r7, #8]
  calibrationData->freq1 = (a2 + 128) >> 8 ;
1004be2a:	68bb      	ldr	r3, [r7, #8]
1004be2c:	3380      	adds	r3, #128	@ 0x80
1004be2e:	121a      	asrs	r2, r3, #8
1004be30:	687b      	ldr	r3, [r7, #4]
1004be32:	609a      	str	r2, [r3, #8]
  calibrationData->freq = freq;
1004be34:	6a3a      	ldr	r2, [r7, #32]
1004be36:	687b      	ldr	r3, [r7, #4]
1004be38:	605a      	str	r2, [r3, #4]
}
1004be3a:	46c0      	nop			@ (mov r8, r8)
1004be3c:	46bd      	mov	sp, r7
1004be3e:	b00a      	add	sp, #40	@ 0x28
1004be40:	bd80      	pop	{r7, pc}
1004be42:	46c0      	nop			@ (mov r8, r8)
1004be44:	60001000 	.word	0x60001000
1004be48:	0008bcf6 	.word	0x0008bcf6
1004be4c:	00000753 	.word	0x00000753

1004be50 <_configureTxRxDelay>:

static void _configureTxRxDelay(RADIO_TIMER_ContextTypeDef *context, uint8_t calculate_st)
{
1004be50:	b590      	push	{r4, r7, lr}
1004be52:	b085      	sub	sp, #20
1004be54:	af00      	add	r7, sp, #0
1004be56:	6078      	str	r0, [r7, #4]
1004be58:	000a      	movs	r2, r1
1004be5a:	1cfb      	adds	r3, r7, #3
1004be5c:	701a      	strb	r2, [r3, #0]
  uint8_t tx_delay_start;

  tx_delay_start = (BLUEGLOB->TXDELAYSTART * 125 / 1000) + 1;
1004be5e:	4b38      	ldr	r3, [pc, #224]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004be60:	7b9b      	ldrb	r3, [r3, #14]
1004be62:	b2db      	uxtb	r3, r3
1004be64:	2b00      	cmp	r3, #0
1004be66:	da00      	bge.n	1004be6a <_configureTxRxDelay+0x1a>
1004be68:	3307      	adds	r3, #7
1004be6a:	10db      	asrs	r3, r3, #3
1004be6c:	b2da      	uxtb	r2, r3
1004be6e:	240f      	movs	r4, #15
1004be70:	193b      	adds	r3, r7, r4
1004be72:	3201      	adds	r2, #1
1004be74:	701a      	strb	r2, [r3, #0]

  BLUEGLOB->WAKEUPINITDELAY =  blue_unit_conversion(WAKEUP_INIT_DELAY, context->calibrationData.freq1, MULT64_THR_FREQ);
1004be76:	687b      	ldr	r3, [r7, #4]
1004be78:	699b      	ldr	r3, [r3, #24]
1004be7a:	0019      	movs	r1, r3
1004be7c:	4b31      	ldr	r3, [pc, #196]	@ (1004bf44 <_configureTxRxDelay+0xf4>)
1004be7e:	001a      	movs	r2, r3
1004be80:	201b      	movs	r0, #27
1004be82:	f7f4 f91d 	bl	100400c0 <blue_unit_conversion>
1004be86:	0002      	movs	r2, r0
1004be88:	4b2d      	ldr	r3, [pc, #180]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004be8a:	b2d2      	uxtb	r2, r2
1004be8c:	715a      	strb	r2, [r3, #5]
  context->TxRxDelay.tim12_delay_mt = _us_to_machinetime(BLUEGLOB->TIMER12INITDELAYCAL);
1004be8e:	4b2c      	ldr	r3, [pc, #176]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004be90:	799b      	ldrb	r3, [r3, #6]
1004be92:	b2db      	uxtb	r3, r3
1004be94:	0018      	movs	r0, r3
1004be96:	f000 f86d 	bl	1004bf74 <_us_to_machinetime>
1004be9a:	0003      	movs	r3, r0
1004be9c:	b2d9      	uxtb	r1, r3
1004be9e:	687b      	ldr	r3, [r7, #4]
1004bea0:	223d      	movs	r2, #61	@ 0x3d
1004bea2:	5499      	strb	r1, [r3, r2]
  context->TxRxDelay.tx_cal_delay = _us_to_machinetime(BLUEGLOB->TRANSMITCALDELAYCHK + tx_delay_start);
1004bea4:	4b26      	ldr	r3, [pc, #152]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004bea6:	7a1b      	ldrb	r3, [r3, #8]
1004bea8:	b2db      	uxtb	r3, r3
1004beaa:	001a      	movs	r2, r3
1004beac:	193b      	adds	r3, r7, r4
1004beae:	781b      	ldrb	r3, [r3, #0]
1004beb0:	18d3      	adds	r3, r2, r3
1004beb2:	0018      	movs	r0, r3
1004beb4:	f000 f85e 	bl	1004bf74 <_us_to_machinetime>
1004beb8:	0003      	movs	r3, r0
1004beba:	b2d9      	uxtb	r1, r3
1004bebc:	687b      	ldr	r3, [r7, #4]
1004bebe:	2238      	movs	r2, #56	@ 0x38
1004bec0:	5499      	strb	r1, [r3, r2]
  context->TxRxDelay.tx_no_cal_delay = _us_to_machinetime(BLUEGLOB->TRANSMITNOCALDELAYCHK + tx_delay_start);
1004bec2:	4b1f      	ldr	r3, [pc, #124]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004bec4:	7a5b      	ldrb	r3, [r3, #9]
1004bec6:	b2db      	uxtb	r3, r3
1004bec8:	001a      	movs	r2, r3
1004beca:	193b      	adds	r3, r7, r4
1004becc:	781b      	ldrb	r3, [r3, #0]
1004bece:	18d3      	adds	r3, r2, r3
1004bed0:	0018      	movs	r0, r3
1004bed2:	f000 f84f 	bl	1004bf74 <_us_to_machinetime>
1004bed6:	0003      	movs	r3, r0
1004bed8:	b2d9      	uxtb	r1, r3
1004beda:	687b      	ldr	r3, [r7, #4]
1004bedc:	2239      	movs	r2, #57	@ 0x39
1004bede:	5499      	strb	r1, [r3, r2]
  context->TxRxDelay.rx_cal_delay = _us_to_machinetime(BLUEGLOB->RECEIVECALDELAYCHK);
1004bee0:	4b17      	ldr	r3, [pc, #92]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004bee2:	7a9b      	ldrb	r3, [r3, #10]
1004bee4:	b2db      	uxtb	r3, r3
1004bee6:	0018      	movs	r0, r3
1004bee8:	f000 f844 	bl	1004bf74 <_us_to_machinetime>
1004beec:	0003      	movs	r3, r0
1004beee:	b2d9      	uxtb	r1, r3
1004bef0:	687b      	ldr	r3, [r7, #4]
1004bef2:	223a      	movs	r2, #58	@ 0x3a
1004bef4:	5499      	strb	r1, [r3, r2]
  context->TxRxDelay.rx_no_cal_delay = _us_to_machinetime(BLUEGLOB->RECEIVENOCALDELAYCHK);
1004bef6:	4b12      	ldr	r3, [pc, #72]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004bef8:	7adb      	ldrb	r3, [r3, #11]
1004befa:	b2db      	uxtb	r3, r3
1004befc:	0018      	movs	r0, r3
1004befe:	f000 f839 	bl	1004bf74 <_us_to_machinetime>
1004bf02:	0003      	movs	r3, r0
1004bf04:	b2d9      	uxtb	r1, r3
1004bf06:	687b      	ldr	r3, [r7, #4]
1004bf08:	223b      	movs	r2, #59	@ 0x3b
1004bf0a:	5499      	strb	r1, [r3, r2]

  if (calculate_st)
1004bf0c:	1cfb      	adds	r3, r7, #3
1004bf0e:	781b      	ldrb	r3, [r3, #0]
1004bf10:	2b00      	cmp	r3, #0
1004bf12:	d010      	beq.n	1004bf36 <_configureTxRxDelay+0xe6>
  {
    context->TxRxDelay.tx_cal_delay_st    = _us_to_systime(BLUEGLOB->TRANSMITCALDELAYCHK + tx_delay_start) + WAKEUP_INIT_DELAY;
1004bf14:	4b0a      	ldr	r3, [pc, #40]	@ (1004bf40 <_configureTxRxDelay+0xf0>)
1004bf16:	7a1b      	ldrb	r3, [r3, #8]
1004bf18:	b2db      	uxtb	r3, r3
1004bf1a:	001a      	movs	r2, r3
1004bf1c:	193b      	adds	r3, r7, r4
1004bf1e:	781b      	ldrb	r3, [r3, #0]
1004bf20:	18d3      	adds	r3, r2, r3
1004bf22:	0018      	movs	r0, r3
1004bf24:	f000 f810 	bl	1004bf48 <_us_to_systime>
1004bf28:	0003      	movs	r3, r0
1004bf2a:	b2db      	uxtb	r3, r3
1004bf2c:	331b      	adds	r3, #27
1004bf2e:	b2d9      	uxtb	r1, r3
1004bf30:	687b      	ldr	r3, [r7, #4]
1004bf32:	223c      	movs	r2, #60	@ 0x3c
1004bf34:	5499      	strb	r1, [r3, r2]
  }

}
1004bf36:	46c0      	nop			@ (mov r8, r8)
1004bf38:	46bd      	mov	sp, r7
1004bf3a:	b005      	add	sp, #20
1004bf3c:	bd90      	pop	{r4, r7, pc}
1004bf3e:	46c0      	nop			@ (mov r8, r8)
1004bf40:	200000c0 	.word	0x200000c0
1004bf44:	00000326 	.word	0x00000326

1004bf48 <_us_to_systime>:

static uint32_t _us_to_systime(uint32_t time)
{
1004bf48:	b580      	push	{r7, lr}
1004bf4a:	b084      	sub	sp, #16
1004bf4c:	af00      	add	r7, sp, #0
1004bf4e:	6078      	str	r0, [r7, #4]
  uint32_t t1, t2;
  t1 = time * 0x68;
1004bf50:	687b      	ldr	r3, [r7, #4]
1004bf52:	2268      	movs	r2, #104	@ 0x68
1004bf54:	4353      	muls	r3, r2
1004bf56:	60fb      	str	r3, [r7, #12]
  t2 = time * 0xDB;
1004bf58:	687b      	ldr	r3, [r7, #4]
1004bf5a:	22db      	movs	r2, #219	@ 0xdb
1004bf5c:	4353      	muls	r3, r2
1004bf5e:	60bb      	str	r3, [r7, #8]
  return (t1 >> 8) + (t2 >> 16);
1004bf60:	68fb      	ldr	r3, [r7, #12]
1004bf62:	0a1a      	lsrs	r2, r3, #8
1004bf64:	68bb      	ldr	r3, [r7, #8]
1004bf66:	0c1b      	lsrs	r3, r3, #16
1004bf68:	18d3      	adds	r3, r2, r3
}
1004bf6a:	0018      	movs	r0, r3
1004bf6c:	46bd      	mov	sp, r7
1004bf6e:	b004      	add	sp, #16
1004bf70:	bd80      	pop	{r7, pc}
	...

1004bf74 <_us_to_machinetime>:

static uint32_t _us_to_machinetime(uint32_t time)
{
1004bf74:	b5b0      	push	{r4, r5, r7, lr}
1004bf76:	b088      	sub	sp, #32
1004bf78:	af00      	add	r7, sp, #0
1004bf7a:	60f8      	str	r0, [r7, #12]
  uint64_t tmp = (uint64_t)RADIO_TIMER_Context.calibrationData.freq * (uint64_t)time * (uint64_t)3U;
1004bf7c:	4915      	ldr	r1, [pc, #84]	@ (1004bfd4 <_us_to_machinetime+0x60>)
1004bf7e:	6949      	ldr	r1, [r1, #20]
1004bf80:	6039      	str	r1, [r7, #0]
1004bf82:	2100      	movs	r1, #0
1004bf84:	6079      	str	r1, [r7, #4]
1004bf86:	68f9      	ldr	r1, [r7, #12]
1004bf88:	000a      	movs	r2, r1
1004bf8a:	2100      	movs	r1, #0
1004bf8c:	000b      	movs	r3, r1
1004bf8e:	6838      	ldr	r0, [r7, #0]
1004bf90:	6879      	ldr	r1, [r7, #4]
1004bf92:	f7f4 fb53 	bl	1004063c <__aeabi_lmul>
1004bf96:	0002      	movs	r2, r0
1004bf98:	000b      	movs	r3, r1
1004bf9a:	0010      	movs	r0, r2
1004bf9c:	0019      	movs	r1, r3
1004bf9e:	0002      	movs	r2, r0
1004bfa0:	000b      	movs	r3, r1
1004bfa2:	1892      	adds	r2, r2, r2
1004bfa4:	415b      	adcs	r3, r3
1004bfa6:	1812      	adds	r2, r2, r0
1004bfa8:	414b      	adcs	r3, r1
1004bfaa:	61ba      	str	r2, [r7, #24]
1004bfac:	61fb      	str	r3, [r7, #28]
  uint32_t time_mt = ((tmp + (1 << 26)) >> 27) & TIMER_MAX_VALUE;
1004bfae:	69ba      	ldr	r2, [r7, #24]
1004bfb0:	69fb      	ldr	r3, [r7, #28]
1004bfb2:	2080      	movs	r0, #128	@ 0x80
1004bfb4:	04c0      	lsls	r0, r0, #19
1004bfb6:	2100      	movs	r1, #0
1004bfb8:	1812      	adds	r2, r2, r0
1004bfba:	414b      	adcs	r3, r1
1004bfbc:	0159      	lsls	r1, r3, #5
1004bfbe:	0ed4      	lsrs	r4, r2, #27
1004bfc0:	430c      	orrs	r4, r1
1004bfc2:	0edd      	lsrs	r5, r3, #27
1004bfc4:	0023      	movs	r3, r4
1004bfc6:	617b      	str	r3, [r7, #20]

  return time_mt;
1004bfc8:	697b      	ldr	r3, [r7, #20]
}
1004bfca:	0018      	movs	r0, r3
1004bfcc:	46bd      	mov	sp, r7
1004bfce:	b008      	add	sp, #32
1004bfd0:	bdb0      	pop	{r4, r5, r7, pc}
1004bfd2:	46c0      	nop			@ (mov r8, r8)
1004bfd4:	200006f8 	.word	0x200006f8

1004bfd8 <_update_xtal_startup_time>:

static void _update_xtal_startup_time(uint16_t hs_startup_time, int32_t freq1)
{
1004bfd8:	b580      	push	{r7, lr}
1004bfda:	b084      	sub	sp, #16
1004bfdc:	af00      	add	r7, sp, #0
1004bfde:	0002      	movs	r2, r0
1004bfe0:	6039      	str	r1, [r7, #0]
1004bfe2:	1dbb      	adds	r3, r7, #6
1004bfe4:	801a      	strh	r2, [r3, #0]
  int32_t time1;

  time1 = blue_unit_conversion(hs_startup_time, freq1, MULT64_THR_FREQ);
1004bfe6:	1dbb      	adds	r3, r7, #6
1004bfe8:	881b      	ldrh	r3, [r3, #0]
1004bfea:	6839      	ldr	r1, [r7, #0]
1004bfec:	4a0e      	ldr	r2, [pc, #56]	@ (1004c028 <_update_xtal_startup_time+0x50>)
1004bfee:	0018      	movs	r0, r3
1004bff0:	f7f4 f866 	bl	100400c0 <blue_unit_conversion>
1004bff4:	0003      	movs	r3, r0
1004bff6:	60fb      	str	r3, [r7, #12]
  if (time1 >= 4096)
1004bff8:	68fa      	ldr	r2, [r7, #12]
1004bffa:	2380      	movs	r3, #128	@ 0x80
1004bffc:	015b      	lsls	r3, r3, #5
1004bffe:	429a      	cmp	r2, r3
1004c000:	db01      	blt.n	1004c006 <_update_xtal_startup_time+0x2e>
  {
    time1 = 4095;
1004c002:	4b0a      	ldr	r3, [pc, #40]	@ (1004c02c <_update_xtal_startup_time+0x54>)
1004c004:	60fb      	str	r3, [r7, #12]
  }
  if (time1 < 16)
1004c006:	68fb      	ldr	r3, [r7, #12]
1004c008:	2b0f      	cmp	r3, #15
1004c00a:	dc01      	bgt.n	1004c010 <_update_xtal_startup_time+0x38>
  {
    time1 = 16;
1004c00c:	2310      	movs	r3, #16
1004c00e:	60fb      	str	r3, [r7, #12]
  }
  LL_RADIO_TIMER_SetWakeupOffset(WAKEUP, (time1 >> 4));
1004c010:	68fb      	ldr	r3, [r7, #12]
1004c012:	111b      	asrs	r3, r3, #4
1004c014:	b2db      	uxtb	r3, r3
1004c016:	4a06      	ldr	r2, [pc, #24]	@ (1004c030 <_update_xtal_startup_time+0x58>)
1004c018:	0019      	movs	r1, r3
1004c01a:	0010      	movs	r0, r2
1004c01c:	f7ff f97e 	bl	1004b31c <LL_RADIO_TIMER_SetWakeupOffset>
}
1004c020:	46c0      	nop			@ (mov r8, r8)
1004c022:	46bd      	mov	sp, r7
1004c024:	b004      	add	sp, #16
1004c026:	bd80      	pop	{r7, pc}
1004c028:	00000326 	.word	0x00000326
1004c02c:	00000fff 	.word	0x00000fff
1004c030:	60001800 	.word	0x60001800

1004c034 <_calibration_callback>:

static void _calibration_callback(void *handle)
{
1004c034:	b580      	push	{r7, lr}
1004c036:	b082      	sub	sp, #8
1004c038:	af00      	add	r7, sp, #0
1004c03a:	6078      	str	r0, [r7, #4]
  if (RADIO_TIMER_Context.calibrationSettings.periodicCalibration)
1004c03c:	4b06      	ldr	r3, [pc, #24]	@ (1004c058 <_calibration_callback+0x24>)
1004c03e:	781b      	ldrb	r3, [r3, #0]
1004c040:	2b00      	cmp	r3, #0
1004c042:	d001      	beq.n	1004c048 <_calibration_callback+0x14>
  {
    _timer_start_calibration();
1004c044:	f7ff fe74 	bl	1004bd30 <_timer_start_calibration>
  }
  RADIO_TIMER_Context.calibrationSettings.calibration_in_progress = TRUE;
1004c048:	4b03      	ldr	r3, [pc, #12]	@ (1004c058 <_calibration_callback+0x24>)
1004c04a:	2201      	movs	r2, #1
1004c04c:	721a      	strb	r2, [r3, #8]
}
1004c04e:	46c0      	nop			@ (mov r8, r8)
1004c050:	46bd      	mov	sp, r7
1004c052:	b002      	add	sp, #8
1004c054:	bd80      	pop	{r7, pc}
1004c056:	46c0      	nop			@ (mov r8, r8)
1004c058:	200006f8 	.word	0x200006f8

1004c05c <_start_timer>:

static int32_t _start_timer(VTIMER_HandleType *timerHandle, uint64_t time)
{
1004c05c:	b590      	push	{r4, r7, lr}
1004c05e:	b089      	sub	sp, #36	@ 0x24
1004c060:	af00      	add	r7, sp, #0
1004c062:	60f8      	str	r0, [r7, #12]
1004c064:	603a      	str	r2, [r7, #0]
1004c066:	607b      	str	r3, [r7, #4]
  uint8_t expired = 0;
1004c068:	2313      	movs	r3, #19
1004c06a:	18fb      	adds	r3, r7, r3
1004c06c:	2200      	movs	r2, #0
1004c06e:	701a      	strb	r2, [r3, #0]

  /* The timer is already started*/
  if (timerHandle->active)
1004c070:	68fb      	ldr	r3, [r7, #12]
1004c072:	7b1b      	ldrb	r3, [r3, #12]
1004c074:	2b00      	cmp	r3, #0
1004c076:	d001      	beq.n	1004c07c <_start_timer+0x20>
  {
    return 1;
1004c078:	2301      	movs	r3, #1
1004c07a:	e047      	b.n	1004c10c <_start_timer+0xb0>
  }
  timerHandle->expiryTime = time;
1004c07c:	68f9      	ldr	r1, [r7, #12]
1004c07e:	683a      	ldr	r2, [r7, #0]
1004c080:	687b      	ldr	r3, [r7, #4]
1004c082:	600a      	str	r2, [r1, #0]
1004c084:	604b      	str	r3, [r1, #4]
  timerHandle->active = TRUE;
1004c086:	68fb      	ldr	r3, [r7, #12]
1004c088:	2201      	movs	r2, #1
1004c08a:	731a      	strb	r2, [r3, #12]
  if (_insert_timer_in_queue(RADIO_TIMER_Context.rootNode, timerHandle) == timerHandle)
1004c08c:	4b21      	ldr	r3, [pc, #132]	@ (1004c114 <_start_timer+0xb8>)
1004c08e:	228c      	movs	r2, #140	@ 0x8c
1004c090:	589b      	ldr	r3, [r3, r2]
1004c092:	68fa      	ldr	r2, [r7, #12]
1004c094:	0011      	movs	r1, r2
1004c096:	0018      	movs	r0, r3
1004c098:	f000 f92e 	bl	1004c2f8 <_insert_timer_in_queue>
1004c09c:	0002      	movs	r2, r0
1004c09e:	68fb      	ldr	r3, [r7, #12]
1004c0a0:	4293      	cmp	r3, r2
1004c0a2:	d130      	bne.n	1004c106 <_start_timer+0xaa>
  {
    RADIO_TIMER_Context.rootNode = _update_user_timeout(timerHandle, &expired);
1004c0a4:	2413      	movs	r4, #19
1004c0a6:	193a      	adds	r2, r7, r4
1004c0a8:	68fb      	ldr	r3, [r7, #12]
1004c0aa:	0011      	movs	r1, r2
1004c0ac:	0018      	movs	r0, r3
1004c0ae:	f000 f89b 	bl	1004c1e8 <_update_user_timeout>
1004c0b2:	0002      	movs	r2, r0
1004c0b4:	4b17      	ldr	r3, [pc, #92]	@ (1004c114 <_start_timer+0xb8>)
1004c0b6:	218c      	movs	r1, #140	@ 0x8c
1004c0b8:	505a      	str	r2, [r3, r1]
    if (expired)
1004c0ba:	193b      	adds	r3, r7, r4
1004c0bc:	781b      	ldrb	r3, [r3, #0]
1004c0be:	2b00      	cmp	r3, #0
1004c0c0:	d021      	beq.n	1004c106 <_start_timer+0xaa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004c0c2:	f3ef 8310 	mrs	r3, PRIMASK
1004c0c6:	61bb      	str	r3, [r7, #24]
  return(result);
1004c0c8:	69bb      	ldr	r3, [r7, #24]
    {
      /* A new root timer is already expired, mimic timer expire that is normally signaled
       through the interrupt handler that increase the number of expired timers*/
      INCREMENT_EXPIRE_COUNT;
1004c0ca:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("cpsid i" : : : "memory");
1004c0cc:	b672      	cpsid	i
}
1004c0ce:	46c0      	nop			@ (mov r8, r8)
1004c0d0:	4b10      	ldr	r3, [pc, #64]	@ (1004c114 <_start_timer+0xb8>)
1004c0d2:	2291      	movs	r2, #145	@ 0x91
1004c0d4:	5c9b      	ldrb	r3, [r3, r2]
1004c0d6:	3301      	adds	r3, #1
1004c0d8:	4a0e      	ldr	r2, [pc, #56]	@ (1004c114 <_start_timer+0xb8>)
1004c0da:	2192      	movs	r1, #146	@ 0x92
1004c0dc:	5c52      	ldrb	r2, [r2, r1]
1004c0de:	4293      	cmp	r3, r2
1004c0e0:	d103      	bne.n	1004c0ea <_start_timer+0x8e>
1004c0e2:	4b0c      	ldr	r3, [pc, #48]	@ (1004c114 <_start_timer+0xb8>)
1004c0e4:	2291      	movs	r2, #145	@ 0x91
1004c0e6:	5c9b      	ldrb	r3, [r3, r2]
1004c0e8:	e004      	b.n	1004c0f4 <_start_timer+0x98>
1004c0ea:	4b0a      	ldr	r3, [pc, #40]	@ (1004c114 <_start_timer+0xb8>)
1004c0ec:	2291      	movs	r2, #145	@ 0x91
1004c0ee:	5c9b      	ldrb	r3, [r3, r2]
1004c0f0:	3301      	adds	r3, #1
1004c0f2:	b2db      	uxtb	r3, r3
1004c0f4:	4a07      	ldr	r2, [pc, #28]	@ (1004c114 <_start_timer+0xb8>)
1004c0f6:	2191      	movs	r1, #145	@ 0x91
1004c0f8:	5453      	strb	r3, [r2, r1]
1004c0fa:	69fb      	ldr	r3, [r7, #28]
1004c0fc:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004c0fe:	697b      	ldr	r3, [r7, #20]
1004c100:	f383 8810 	msr	PRIMASK, r3
}
1004c104:	46c0      	nop			@ (mov r8, r8)
    }
  }
  return expired;
1004c106:	2313      	movs	r3, #19
1004c108:	18fb      	adds	r3, r7, r3
1004c10a:	781b      	ldrb	r3, [r3, #0]
}
1004c10c:	0018      	movs	r0, r3
1004c10e:	46bd      	mov	sp, r7
1004c110:	b009      	add	sp, #36	@ 0x24
1004c112:	bd90      	pop	{r4, r7, pc}
1004c114:	200006f8 	.word	0x200006f8

1004c118 <_get_system_time_and_machine>:

static uint64_t _get_system_time_and_machine(RADIO_TIMER_ContextTypeDef *context, uint32_t *current_machine_time)
{
1004c118:	b5b0      	push	{r4, r5, r7, lr}
1004c11a:	b08a      	sub	sp, #40	@ 0x28
1004c11c:	af00      	add	r7, sp, #0
1004c11e:	60f8      	str	r0, [r7, #12]
1004c120:	60b9      	str	r1, [r7, #8]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004c122:	f3ef 8310 	mrs	r3, PRIMASK
1004c126:	617b      	str	r3, [r7, #20]
  return(result);
1004c128:	697b      	ldr	r3, [r7, #20]
  uint32_t difftime;
  uint64_t new_time;

  ATOMIC_SECTION_BEGIN();
1004c12a:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("cpsid i" : : : "memory");
1004c12c:	b672      	cpsid	i
}
1004c12e:	46c0      	nop			@ (mov r8, r8)
  new_time = context->cumulative_time;
1004c130:	68fb      	ldr	r3, [r7, #12]
1004c132:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
1004c134:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
1004c136:	623a      	str	r2, [r7, #32]
1004c138:	627b      	str	r3, [r7, #36]	@ 0x24
  *current_machine_time =  LL_RADIO_TIMER_GetAbsoluteTime(WAKEUP);
1004c13a:	4b29      	ldr	r3, [pc, #164]	@ (1004c1e0 <_get_system_time_and_machine+0xc8>)
1004c13c:	0018      	movs	r0, r3
1004c13e:	f7ff f914 	bl	1004b36a <LL_RADIO_TIMER_GetAbsoluteTime>
1004c142:	0002      	movs	r2, r0
1004c144:	68bb      	ldr	r3, [r7, #8]
1004c146:	601a      	str	r2, [r3, #0]
  difftime = TIME_ABSDIFF(*current_machine_time, context->last_machine_time);
1004c148:	68bb      	ldr	r3, [r7, #8]
1004c14a:	681a      	ldr	r2, [r3, #0]
1004c14c:	68fb      	ldr	r3, [r7, #12]
1004c14e:	2180      	movs	r1, #128	@ 0x80
1004c150:	585b      	ldr	r3, [r3, r1]
1004c152:	1ad3      	subs	r3, r2, r3
1004c154:	61bb      	str	r3, [r7, #24]
  new_time += blue_unit_conversion(difftime, context->calibrationData.period1, MULT64_THR_PERIOD);
1004c156:	68fb      	ldr	r3, [r7, #12]
1004c158:	69db      	ldr	r3, [r3, #28]
1004c15a:	0019      	movs	r1, r3
1004c15c:	4a21      	ldr	r2, [pc, #132]	@ (1004c1e4 <_get_system_time_and_machine+0xcc>)
1004c15e:	69bb      	ldr	r3, [r7, #24]
1004c160:	0018      	movs	r0, r3
1004c162:	f7f3 ffad 	bl	100400c0 <blue_unit_conversion>
1004c166:	0003      	movs	r3, r0
1004c168:	603b      	str	r3, [r7, #0]
1004c16a:	2300      	movs	r3, #0
1004c16c:	607b      	str	r3, [r7, #4]
1004c16e:	6a3a      	ldr	r2, [r7, #32]
1004c170:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c172:	6838      	ldr	r0, [r7, #0]
1004c174:	6879      	ldr	r1, [r7, #4]
1004c176:	1812      	adds	r2, r2, r0
1004c178:	414b      	adcs	r3, r1
1004c17a:	623a      	str	r2, [r7, #32]
1004c17c:	627b      	str	r3, [r7, #36]	@ 0x24
  if (new_time < context->last_system_time)
1004c17e:	68fb      	ldr	r3, [r7, #12]
1004c180:	6f9a      	ldr	r2, [r3, #120]	@ 0x78
1004c182:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
1004c184:	6a79      	ldr	r1, [r7, #36]	@ 0x24
1004c186:	4299      	cmp	r1, r3
1004c188:	d305      	bcc.n	1004c196 <_get_system_time_and_machine+0x7e>
1004c18a:	6a79      	ldr	r1, [r7, #36]	@ 0x24
1004c18c:	4299      	cmp	r1, r3
1004c18e:	d115      	bne.n	1004c1bc <_get_system_time_and_machine+0xa4>
1004c190:	6a39      	ldr	r1, [r7, #32]
1004c192:	4291      	cmp	r1, r2
1004c194:	d212      	bcs.n	1004c1bc <_get_system_time_and_machine+0xa4>
  {
    new_time += blue_unit_conversion(TIMER_MAX_VALUE, context->calibrationData.period1, MULT64_THR_PERIOD);
1004c196:	68fb      	ldr	r3, [r7, #12]
1004c198:	69db      	ldr	r3, [r3, #28]
1004c19a:	0019      	movs	r1, r3
1004c19c:	4a11      	ldr	r2, [pc, #68]	@ (1004c1e4 <_get_system_time_and_machine+0xcc>)
1004c19e:	2301      	movs	r3, #1
1004c1a0:	425b      	negs	r3, r3
1004c1a2:	0018      	movs	r0, r3
1004c1a4:	f7f3 ff8c 	bl	100400c0 <blue_unit_conversion>
1004c1a8:	0003      	movs	r3, r0
1004c1aa:	001c      	movs	r4, r3
1004c1ac:	2300      	movs	r3, #0
1004c1ae:	001d      	movs	r5, r3
1004c1b0:	6a3a      	ldr	r2, [r7, #32]
1004c1b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c1b4:	1912      	adds	r2, r2, r4
1004c1b6:	416b      	adcs	r3, r5
1004c1b8:	623a      	str	r2, [r7, #32]
1004c1ba:	627b      	str	r3, [r7, #36]	@ 0x24
  }
  context->last_system_time = new_time;
1004c1bc:	68f9      	ldr	r1, [r7, #12]
1004c1be:	6a3a      	ldr	r2, [r7, #32]
1004c1c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c1c2:	678a      	str	r2, [r1, #120]	@ 0x78
1004c1c4:	67cb      	str	r3, [r1, #124]	@ 0x7c
1004c1c6:	69fb      	ldr	r3, [r7, #28]
1004c1c8:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004c1ca:	693b      	ldr	r3, [r7, #16]
1004c1cc:	f383 8810 	msr	PRIMASK, r3
}
1004c1d0:	46c0      	nop			@ (mov r8, r8)
  ATOMIC_SECTION_END();

  return new_time;
1004c1d2:	6a3a      	ldr	r2, [r7, #32]
1004c1d4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
1004c1d6:	0010      	movs	r0, r2
1004c1d8:	0019      	movs	r1, r3
1004c1da:	46bd      	mov	sp, r7
1004c1dc:	b00a      	add	sp, #40	@ 0x28
1004c1de:	bdb0      	pop	{r4, r5, r7, pc}
1004c1e0:	60001800 	.word	0x60001800
1004c1e4:	00000635 	.word	0x00000635

1004c1e8 <_update_user_timeout>:

/* Set timeout and skip non active timers */
static VTIMER_HandleType *_update_user_timeout(VTIMER_HandleType *rootNode, uint8_t *expired)
{
1004c1e8:	b5b0      	push	{r4, r5, r7, lr}
1004c1ea:	b08a      	sub	sp, #40	@ 0x28
1004c1ec:	af00      	add	r7, sp, #0
1004c1ee:	6078      	str	r0, [r7, #4]
1004c1f0:	6039      	str	r1, [r7, #0]
  VTIMER_HandleType *curr = rootNode;
1004c1f2:	687b      	ldr	r3, [r7, #4]
1004c1f4:	627b      	str	r3, [r7, #36]	@ 0x24
  VTIMER_HandleType *rootOrig = rootNode;
1004c1f6:	687b      	ldr	r3, [r7, #4]
1004c1f8:	623b      	str	r3, [r7, #32]
  int64_t delay;
  *expired = 0;
1004c1fa:	683b      	ldr	r3, [r7, #0]
1004c1fc:	2200      	movs	r2, #0
1004c1fe:	701a      	strb	r2, [r3, #0]
  while (curr != NULL)
1004c200:	e033      	b.n	1004c26a <_update_user_timeout+0x82>
  {
    if (curr->active)
1004c202:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c204:	7b1b      	ldrb	r3, [r3, #12]
1004c206:	2b00      	cmp	r3, #0
1004c208:	d02c      	beq.n	1004c264 <_update_user_timeout+0x7c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004c20a:	f3ef 8310 	mrs	r3, PRIMASK
1004c20e:	60fb      	str	r3, [r7, #12]
  return(result);
1004c210:	68fb      	ldr	r3, [r7, #12]
    {
      ATOMIC_SECTION_BEGIN();
1004c212:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("cpsid i" : : : "memory");
1004c214:	b672      	cpsid	i
}
1004c216:	46c0      	nop			@ (mov r8, r8)
#if defined (STM32WB06) || defined (STM32WB07)
      uint8_t dummy;
      bool share = FALSE;
      _check_radio_activity(&RADIO_TIMER_Context.radioTimer, &dummy);
#endif
      delay = curr->expiryTime - HAL_RADIO_TIMER_GetCurrentSysTime();
1004c218:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c21a:	681c      	ldr	r4, [r3, #0]
1004c21c:	685d      	ldr	r5, [r3, #4]
1004c21e:	f7ff fcb1 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004c222:	0002      	movs	r2, r0
1004c224:	000b      	movs	r3, r1
1004c226:	1aa4      	subs	r4, r4, r2
1004c228:	419d      	sbcs	r5, r3
1004c22a:	0022      	movs	r2, r4
1004c22c:	002b      	movs	r3, r5
1004c22e:	613a      	str	r2, [r7, #16]
1004c230:	617b      	str	r3, [r7, #20]
      if (delay > 0)
1004c232:	697b      	ldr	r3, [r7, #20]
1004c234:	2b00      	cmp	r3, #0
1004c236:	dc05      	bgt.n	1004c244 <_update_user_timeout+0x5c>
1004c238:	697b      	ldr	r3, [r7, #20]
1004c23a:	2b00      	cmp	r3, #0
1004c23c:	d108      	bne.n	1004c250 <_update_user_timeout+0x68>
1004c23e:	693b      	ldr	r3, [r7, #16]
1004c240:	2b00      	cmp	r3, #0
1004c242:	d005      	beq.n	1004c250 <_update_user_timeout+0x68>
        {
          RADIO_TIMER_Context.radioTimer.pending |= RADIO_TIMER_Context.radioTimer.active;
          RADIO_TIMER_Context.radioTimer.active = FALSE;
        }
#else
        VTIMER_SetWakeupTime(delay, TRUE);
1004c244:	693b      	ldr	r3, [r7, #16]
1004c246:	2101      	movs	r1, #1
1004c248:	0018      	movs	r0, r3
1004c24a:	f000 f81d 	bl	1004c288 <VTIMER_SetWakeupTime>
1004c24e:	e002      	b.n	1004c256 <_update_user_timeout+0x6e>
#endif
      }
      else
      {
        *expired = 1;
1004c250:	683b      	ldr	r3, [r7, #0]
1004c252:	2201      	movs	r2, #1
1004c254:	701a      	strb	r2, [r3, #0]
1004c256:	69fb      	ldr	r3, [r7, #28]
1004c258:	60bb      	str	r3, [r7, #8]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004c25a:	68bb      	ldr	r3, [r7, #8]
1004c25c:	f383 8810 	msr	PRIMASK, r3
}
1004c260:	46c0      	nop			@ (mov r8, r8)
      }
      ATOMIC_SECTION_END();
      break;
1004c262:	e005      	b.n	1004c270 <_update_user_timeout+0x88>
    }
    curr = curr->next;
1004c264:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c266:	691b      	ldr	r3, [r3, #16]
1004c268:	627b      	str	r3, [r7, #36]	@ 0x24
  while (curr != NULL)
1004c26a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c26c:	2b00      	cmp	r3, #0
1004c26e:	d1c8      	bne.n	1004c202 <_update_user_timeout+0x1a>
  }
  if (*expired)
1004c270:	683b      	ldr	r3, [r7, #0]
1004c272:	781b      	ldrb	r3, [r3, #0]
1004c274:	2b00      	cmp	r3, #0
1004c276:	d001      	beq.n	1004c27c <_update_user_timeout+0x94>
  {
    return rootOrig;
1004c278:	6a3b      	ldr	r3, [r7, #32]
1004c27a:	e000      	b.n	1004c27e <_update_user_timeout+0x96>
  }

  return curr;
1004c27c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
}
1004c27e:	0018      	movs	r0, r3
1004c280:	46bd      	mov	sp, r7
1004c282:	b00a      	add	sp, #40	@ 0x28
1004c284:	bdb0      	pop	{r4, r5, r7, pc}
	...

1004c288 <VTIMER_SetWakeupTime>:

#if defined (STM32WB05) || defined (STM32WB09)
static uint32_t VTIMER_SetWakeupTime(uint32_t delay, bool allow_sleep)
{
1004c288:	b580      	push	{r7, lr}
1004c28a:	b084      	sub	sp, #16
1004c28c:	af00      	add	r7, sp, #0
1004c28e:	6078      	str	r0, [r7, #4]
1004c290:	000a      	movs	r2, r1
1004c292:	1cfb      	adds	r3, r7, #3
1004c294:	701a      	strb	r2, [r3, #0]
  uint32_t current_time;
  delay = blue_unit_conversion(delay, RADIO_TIMER_Context.calibrationData.freq1, MULT64_THR_FREQ) ;
1004c296:	4b15      	ldr	r3, [pc, #84]	@ (1004c2ec <VTIMER_SetWakeupTime+0x64>)
1004c298:	699b      	ldr	r3, [r3, #24]
1004c29a:	0019      	movs	r1, r3
1004c29c:	4a14      	ldr	r2, [pc, #80]	@ (1004c2f0 <VTIMER_SetWakeupTime+0x68>)
1004c29e:	687b      	ldr	r3, [r7, #4]
1004c2a0:	0018      	movs	r0, r3
1004c2a2:	f7f3 ff0d 	bl	100400c0 <blue_unit_conversion>
1004c2a6:	0003      	movs	r3, r0
1004c2a8:	607b      	str	r3, [r7, #4]
  /* If the delay is too small round to minimum 2 tick */
  delay = MAX(32, delay);
1004c2aa:	687b      	ldr	r3, [r7, #4]
1004c2ac:	2b20      	cmp	r3, #32
1004c2ae:	d200      	bcs.n	1004c2b2 <VTIMER_SetWakeupTime+0x2a>
1004c2b0:	2320      	movs	r3, #32
1004c2b2:	607b      	str	r3, [r7, #4]
  current_time = LL_RADIO_TIMER_GetAbsoluteTime(WAKEUP);
1004c2b4:	4b0f      	ldr	r3, [pc, #60]	@ (1004c2f4 <VTIMER_SetWakeupTime+0x6c>)
1004c2b6:	0018      	movs	r0, r3
1004c2b8:	f7ff f857 	bl	1004b36a <LL_RADIO_TIMER_GetAbsoluteTime>
1004c2bc:	0003      	movs	r3, r0
1004c2be:	60fb      	str	r3, [r7, #12]
  /* 4 least significant bits are not taken into account. Then let's round the value */
  LL_RADIO_TIMER_SetCPUWakeupTime(WAKEUP, ((current_time + (delay + 8)) & TIMER_MAX_VALUE));
1004c2c0:	687a      	ldr	r2, [r7, #4]
1004c2c2:	68fb      	ldr	r3, [r7, #12]
1004c2c4:	18d3      	adds	r3, r2, r3
1004c2c6:	3308      	adds	r3, #8
1004c2c8:	4a0a      	ldr	r2, [pc, #40]	@ (1004c2f4 <VTIMER_SetWakeupTime+0x6c>)
1004c2ca:	0019      	movs	r1, r3
1004c2cc:	0010      	movs	r0, r2
1004c2ce:	f7ff f840 	bl	1004b352 <LL_RADIO_TIMER_SetCPUWakeupTime>
  LL_RADIO_TIMER_EnableWakeupTimerLowPowerMode(WAKEUP);
1004c2d2:	4b08      	ldr	r3, [pc, #32]	@ (1004c2f4 <VTIMER_SetWakeupTime+0x6c>)
1004c2d4:	0018      	movs	r0, r3
1004c2d6:	f7ff f852 	bl	1004b37e <LL_RADIO_TIMER_EnableWakeupTimerLowPowerMode>
  LL_RADIO_TIMER_EnableCPUWakeupTimer(WAKEUP);
1004c2da:	4b06      	ldr	r3, [pc, #24]	@ (1004c2f4 <VTIMER_SetWakeupTime+0x6c>)
1004c2dc:	0018      	movs	r0, r3
1004c2de:	f7fe fffd 	bl	1004b2dc <LL_RADIO_TIMER_EnableCPUWakeupTimer>

  return current_time;
1004c2e2:	68fb      	ldr	r3, [r7, #12]
}
1004c2e4:	0018      	movs	r0, r3
1004c2e6:	46bd      	mov	sp, r7
1004c2e8:	b004      	add	sp, #16
1004c2ea:	bd80      	pop	{r7, pc}
1004c2ec:	200006f8 	.word	0x200006f8
1004c2f0:	00000326 	.word	0x00000326
1004c2f4:	60001800 	.word	0x60001800

1004c2f8 <_insert_timer_in_queue>:
#endif

static VTIMER_HandleType *_insert_timer_in_queue(VTIMER_HandleType *rootNode, VTIMER_HandleType *handle)
{
1004c2f8:	b580      	push	{r7, lr}
1004c2fa:	b086      	sub	sp, #24
1004c2fc:	af00      	add	r7, sp, #0
1004c2fe:	6078      	str	r0, [r7, #4]
1004c300:	6039      	str	r1, [r7, #0]
  VTIMER_HandleType *current = rootNode;
1004c302:	687b      	ldr	r3, [r7, #4]
1004c304:	617b      	str	r3, [r7, #20]
  VTIMER_HandleType *prev = NULL;
1004c306:	2300      	movs	r3, #0
1004c308:	613b      	str	r3, [r7, #16]
  VTIMER_HandleType *returnValue = rootNode;
1004c30a:	687b      	ldr	r3, [r7, #4]
1004c30c:	60fb      	str	r3, [r7, #12]

  while ((current != NULL) && (current->expiryTime < handle->expiryTime))
1004c30e:	e004      	b.n	1004c31a <_insert_timer_in_queue+0x22>
  {
    prev = current;
1004c310:	697b      	ldr	r3, [r7, #20]
1004c312:	613b      	str	r3, [r7, #16]
    current = current->next;
1004c314:	697b      	ldr	r3, [r7, #20]
1004c316:	691b      	ldr	r3, [r3, #16]
1004c318:	617b      	str	r3, [r7, #20]
  while ((current != NULL) && (current->expiryTime < handle->expiryTime))
1004c31a:	697b      	ldr	r3, [r7, #20]
1004c31c:	2b00      	cmp	r3, #0
1004c31e:	d00a      	beq.n	1004c336 <_insert_timer_in_queue+0x3e>
1004c320:	697b      	ldr	r3, [r7, #20]
1004c322:	681a      	ldr	r2, [r3, #0]
1004c324:	685b      	ldr	r3, [r3, #4]
1004c326:	6839      	ldr	r1, [r7, #0]
1004c328:	6808      	ldr	r0, [r1, #0]
1004c32a:	6849      	ldr	r1, [r1, #4]
1004c32c:	4299      	cmp	r1, r3
1004c32e:	d8ef      	bhi.n	1004c310 <_insert_timer_in_queue+0x18>
1004c330:	d101      	bne.n	1004c336 <_insert_timer_in_queue+0x3e>
1004c332:	4290      	cmp	r0, r2
1004c334:	d8ec      	bhi.n	1004c310 <_insert_timer_in_queue+0x18>
  }

  handle->next = current;
1004c336:	683b      	ldr	r3, [r7, #0]
1004c338:	697a      	ldr	r2, [r7, #20]
1004c33a:	611a      	str	r2, [r3, #16]

  if (prev == NULL)
1004c33c:	693b      	ldr	r3, [r7, #16]
1004c33e:	2b00      	cmp	r3, #0
1004c340:	d102      	bne.n	1004c348 <_insert_timer_in_queue+0x50>
  {
    /* We are the new root */
    returnValue = handle;
1004c342:	683b      	ldr	r3, [r7, #0]
1004c344:	60fb      	str	r3, [r7, #12]
1004c346:	e002      	b.n	1004c34e <_insert_timer_in_queue+0x56>
  }
  else
  {
    prev->next = handle;
1004c348:	693b      	ldr	r3, [r7, #16]
1004c34a:	683a      	ldr	r2, [r7, #0]
1004c34c:	611a      	str	r2, [r3, #16]
  }

  return returnValue;
1004c34e:	68fb      	ldr	r3, [r7, #12]
}
1004c350:	0018      	movs	r0, r3
1004c352:	46bd      	mov	sp, r7
1004c354:	b006      	add	sp, #24
1004c356:	bd80      	pop	{r7, pc}

1004c358 <_virtualTimeBaseEnable>:

static void _virtualTimeBaseEnable(FunctionalState state)
{
1004c358:	b580      	push	{r7, lr}
1004c35a:	b082      	sub	sp, #8
1004c35c:	af00      	add	r7, sp, #0
1004c35e:	0002      	movs	r2, r0
1004c360:	1dfb      	adds	r3, r7, #7
1004c362:	701a      	strb	r2, [r3, #0]
  if (state != DISABLE)
1004c364:	1dfb      	adds	r3, r7, #7
1004c366:	781b      	ldrb	r3, [r3, #0]
1004c368:	2b00      	cmp	r3, #0
1004c36a:	d010      	beq.n	1004c38e <_virtualTimeBaseEnable+0x36>
  {
    if (RADIO_TIMER_Context.enableTimeBase == FALSE)
1004c36c:	4b0e      	ldr	r3, [pc, #56]	@ (1004c3a8 <_virtualTimeBaseEnable+0x50>)
1004c36e:	2290      	movs	r2, #144	@ 0x90
1004c370:	5c9b      	ldrb	r3, [r3, r2]
1004c372:	2201      	movs	r2, #1
1004c374:	4053      	eors	r3, r2
1004c376:	b2db      	uxtb	r3, r3
1004c378:	2b00      	cmp	r3, #0
1004c37a:	d010      	beq.n	1004c39e <_virtualTimeBaseEnable+0x46>
    {
      _calibration_callback(&RADIO_TIMER_Context.calibrationTimer);
1004c37c:	4b0b      	ldr	r3, [pc, #44]	@ (1004c3ac <_virtualTimeBaseEnable+0x54>)
1004c37e:	0018      	movs	r0, r3
1004c380:	f7ff fe58 	bl	1004c034 <_calibration_callback>
      RADIO_TIMER_Context.enableTimeBase = TRUE;
1004c384:	4b08      	ldr	r3, [pc, #32]	@ (1004c3a8 <_virtualTimeBaseEnable+0x50>)
1004c386:	2290      	movs	r2, #144	@ 0x90
1004c388:	2101      	movs	r1, #1
1004c38a:	5499      	strb	r1, [r3, r2]
  else
  {
    HAL_RADIO_TIMER_StopVirtualTimer(&RADIO_TIMER_Context.calibrationTimer);
    RADIO_TIMER_Context.enableTimeBase = FALSE;
  }
}
1004c38c:	e007      	b.n	1004c39e <_virtualTimeBaseEnable+0x46>
    HAL_RADIO_TIMER_StopVirtualTimer(&RADIO_TIMER_Context.calibrationTimer);
1004c38e:	4b07      	ldr	r3, [pc, #28]	@ (1004c3ac <_virtualTimeBaseEnable+0x54>)
1004c390:	0018      	movs	r0, r3
1004c392:	f7ff fc23 	bl	1004bbdc <HAL_RADIO_TIMER_StopVirtualTimer>
    RADIO_TIMER_Context.enableTimeBase = FALSE;
1004c396:	4b04      	ldr	r3, [pc, #16]	@ (1004c3a8 <_virtualTimeBaseEnable+0x50>)
1004c398:	2290      	movs	r2, #144	@ 0x90
1004c39a:	2100      	movs	r1, #0
1004c39c:	5499      	strb	r1, [r3, r2]
}
1004c39e:	46c0      	nop			@ (mov r8, r8)
1004c3a0:	46bd      	mov	sp, r7
1004c3a2:	b002      	add	sp, #8
1004c3a4:	bd80      	pop	{r7, pc}
1004c3a6:	46c0      	nop			@ (mov r8, r8)
1004c3a8:	200006f8 	.word	0x200006f8
1004c3ac:	20000738 	.word	0x20000738

1004c3b0 <_remove_timer_in_queue>:

static VTIMER_HandleType *_remove_timer_in_queue(VTIMER_HandleType *rootNode, VTIMER_HandleType *handle)
{
1004c3b0:	b580      	push	{r7, lr}
1004c3b2:	b086      	sub	sp, #24
1004c3b4:	af00      	add	r7, sp, #0
1004c3b6:	6078      	str	r0, [r7, #4]
1004c3b8:	6039      	str	r1, [r7, #0]
  VTIMER_HandleType *current = rootNode;
1004c3ba:	687b      	ldr	r3, [r7, #4]
1004c3bc:	617b      	str	r3, [r7, #20]
  VTIMER_HandleType *prev = NULL;
1004c3be:	2300      	movs	r3, #0
1004c3c0:	613b      	str	r3, [r7, #16]
  VTIMER_HandleType *returnValue = rootNode;
1004c3c2:	687b      	ldr	r3, [r7, #4]
1004c3c4:	60fb      	str	r3, [r7, #12]

  while ((current != NULL) && (current != handle))
1004c3c6:	e004      	b.n	1004c3d2 <_remove_timer_in_queue+0x22>
  {
    prev = current;
1004c3c8:	697b      	ldr	r3, [r7, #20]
1004c3ca:	613b      	str	r3, [r7, #16]
    current = current->next;
1004c3cc:	697b      	ldr	r3, [r7, #20]
1004c3ce:	691b      	ldr	r3, [r3, #16]
1004c3d0:	617b      	str	r3, [r7, #20]
  while ((current != NULL) && (current != handle))
1004c3d2:	697b      	ldr	r3, [r7, #20]
1004c3d4:	2b00      	cmp	r3, #0
1004c3d6:	d003      	beq.n	1004c3e0 <_remove_timer_in_queue+0x30>
1004c3d8:	697a      	ldr	r2, [r7, #20]
1004c3da:	683b      	ldr	r3, [r7, #0]
1004c3dc:	429a      	cmp	r2, r3
1004c3de:	d1f3      	bne.n	1004c3c8 <_remove_timer_in_queue+0x18>
  }

  if (current == NULL)
1004c3e0:	697b      	ldr	r3, [r7, #20]
1004c3e2:	2b00      	cmp	r3, #0
1004c3e4:	d00b      	beq.n	1004c3fe <_remove_timer_in_queue+0x4e>
  {
    /* Not found */
  }
  else if (current == rootNode)
1004c3e6:	697a      	ldr	r2, [r7, #20]
1004c3e8:	687b      	ldr	r3, [r7, #4]
1004c3ea:	429a      	cmp	r2, r3
1004c3ec:	d103      	bne.n	1004c3f6 <_remove_timer_in_queue+0x46>
  {
    /* New root node */
    returnValue = current->next;
1004c3ee:	697b      	ldr	r3, [r7, #20]
1004c3f0:	691b      	ldr	r3, [r3, #16]
1004c3f2:	60fb      	str	r3, [r7, #12]
1004c3f4:	e003      	b.n	1004c3fe <_remove_timer_in_queue+0x4e>
  }
  else
  {
    prev->next = current->next;
1004c3f6:	697b      	ldr	r3, [r7, #20]
1004c3f8:	691a      	ldr	r2, [r3, #16]
1004c3fa:	693b      	ldr	r3, [r7, #16]
1004c3fc:	611a      	str	r2, [r3, #16]
  }

  return returnValue;
1004c3fe:	68fb      	ldr	r3, [r7, #12]
}
1004c400:	0018      	movs	r0, r3
1004c402:	46bd      	mov	sp, r7
1004c404:	b006      	add	sp, #24
1004c406:	bd80      	pop	{r7, pc}

1004c408 <_check_callbacks>:

/* Check the number of expired timer from rootNode (ordered list of timers) and return the list of expired timers */
static VTIMER_HandleType *_check_callbacks(VTIMER_HandleType *rootNode, VTIMER_HandleType **expiredList)
{
1004c408:	b5b0      	push	{r4, r5, r7, lr}
1004c40a:	b088      	sub	sp, #32
1004c40c:	af00      	add	r7, sp, #0
1004c40e:	6078      	str	r0, [r7, #4]
1004c410:	6039      	str	r1, [r7, #0]

  VTIMER_HandleType *curr = rootNode;
1004c412:	687b      	ldr	r3, [r7, #4]
1004c414:	61fb      	str	r3, [r7, #28]
  VTIMER_HandleType *prev = NULL;
1004c416:	2300      	movs	r3, #0
1004c418:	61bb      	str	r3, [r7, #24]
  VTIMER_HandleType *returnValue = rootNode;
1004c41a:	687b      	ldr	r3, [r7, #4]
1004c41c:	617b      	str	r3, [r7, #20]
  *expiredList = rootNode;
1004c41e:	683b      	ldr	r3, [r7, #0]
1004c420:	687a      	ldr	r2, [r7, #4]
1004c422:	601a      	str	r2, [r3, #0]

  int64_t delay;
  uint32_t expiredCount = 0;
1004c424:	2300      	movs	r3, #0
1004c426:	613b      	str	r3, [r7, #16]

  while (curr != NULL)
1004c428:	e021      	b.n	1004c46e <_check_callbacks+0x66>
  {

    if (curr->active)
1004c42a:	69fb      	ldr	r3, [r7, #28]
1004c42c:	7b1b      	ldrb	r3, [r3, #12]
1004c42e:	2b00      	cmp	r3, #0
1004c430:	d015      	beq.n	1004c45e <_check_callbacks+0x56>
    {
      delay = curr->expiryTime - HAL_RADIO_TIMER_GetCurrentSysTime();
1004c432:	69fb      	ldr	r3, [r7, #28]
1004c434:	681c      	ldr	r4, [r3, #0]
1004c436:	685d      	ldr	r5, [r3, #4]
1004c438:	f7ff fba4 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004c43c:	0002      	movs	r2, r0
1004c43e:	000b      	movs	r3, r1
1004c440:	1aa4      	subs	r4, r4, r2
1004c442:	419d      	sbcs	r5, r3
1004c444:	0022      	movs	r2, r4
1004c446:	002b      	movs	r3, r5
1004c448:	60ba      	str	r2, [r7, #8]
1004c44a:	60fb      	str	r3, [r7, #12]

      if (delay > 5)   /*TBR*/
1004c44c:	68fb      	ldr	r3, [r7, #12]
1004c44e:	2b00      	cmp	r3, #0
1004c450:	dc11      	bgt.n	1004c476 <_check_callbacks+0x6e>
1004c452:	68fb      	ldr	r3, [r7, #12]
1004c454:	2b00      	cmp	r3, #0
1004c456:	d102      	bne.n	1004c45e <_check_callbacks+0x56>
1004c458:	68bb      	ldr	r3, [r7, #8]
1004c45a:	2b05      	cmp	r3, #5
1004c45c:	d80b      	bhi.n	1004c476 <_check_callbacks+0x6e>
        /* End of expired timers list*/
        break;
      }
    }

    prev = curr;
1004c45e:	69fb      	ldr	r3, [r7, #28]
1004c460:	61bb      	str	r3, [r7, #24]
    curr = curr->next;
1004c462:	69fb      	ldr	r3, [r7, #28]
1004c464:	691b      	ldr	r3, [r3, #16]
1004c466:	61fb      	str	r3, [r7, #28]
    expiredCount++;
1004c468:	693b      	ldr	r3, [r7, #16]
1004c46a:	3301      	adds	r3, #1
1004c46c:	613b      	str	r3, [r7, #16]
  while (curr != NULL)
1004c46e:	69fb      	ldr	r3, [r7, #28]
1004c470:	2b00      	cmp	r3, #0
1004c472:	d1da      	bne.n	1004c42a <_check_callbacks+0x22>
1004c474:	e000      	b.n	1004c478 <_check_callbacks+0x70>
        break;
1004c476:	46c0      	nop			@ (mov r8, r8)
  }

  if (expiredCount)
1004c478:	693b      	ldr	r3, [r7, #16]
1004c47a:	2b00      	cmp	r3, #0
1004c47c:	d005      	beq.n	1004c48a <_check_callbacks+0x82>
  {
    /* Some timers expired */
    prev->next = NULL;
1004c47e:	69bb      	ldr	r3, [r7, #24]
1004c480:	2200      	movs	r2, #0
1004c482:	611a      	str	r2, [r3, #16]
    returnValue = curr;
1004c484:	69fb      	ldr	r3, [r7, #28]
1004c486:	617b      	str	r3, [r7, #20]
1004c488:	e002      	b.n	1004c490 <_check_callbacks+0x88>
  }
  else
  {
    /* No timer expired */
    *expiredList = NULL;
1004c48a:	683b      	ldr	r3, [r7, #0]
1004c48c:	2200      	movs	r2, #0
1004c48e:	601a      	str	r2, [r3, #0]
  }

  return returnValue;
1004c490:	697b      	ldr	r3, [r7, #20]
}
1004c492:	0018      	movs	r0, r3
1004c494:	46bd      	mov	sp, r7
1004c496:	b008      	add	sp, #32
1004c498:	bdb0      	pop	{r4, r5, r7, pc}
	...

1004c49c <_updateCalibrationData>:

static void _updateCalibrationData(void)
{
1004c49c:	b580      	push	{r7, lr}
1004c49e:	b084      	sub	sp, #16
1004c4a0:	af00      	add	r7, sp, #0
  if (RADIO_TIMER_Context.calibrationSettings.periodicCalibration)
1004c4a2:	4b17      	ldr	r3, [pc, #92]	@ (1004c500 <_updateCalibrationData+0x64>)
1004c4a4:	781b      	ldrb	r3, [r3, #0]
1004c4a6:	2b00      	cmp	r3, #0
1004c4a8:	d015      	beq.n	1004c4d6 <_updateCalibrationData+0x3a>
  {
    _get_calibration_data(&RADIO_TIMER_Context.calibrationData);
1004c4aa:	4b16      	ldr	r3, [pc, #88]	@ (1004c504 <_updateCalibrationData+0x68>)
1004c4ac:	0018      	movs	r0, r3
1004c4ae:	f7ff fc67 	bl	1004bd80 <_get_calibration_data>
    _update_xtal_startup_time(RADIO_TIMER_Context.hs_startup_time, RADIO_TIMER_Context.calibrationData.freq1);
1004c4b2:	4b13      	ldr	r3, [pc, #76]	@ (1004c500 <_updateCalibrationData+0x64>)
1004c4b4:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
1004c4b6:	b29a      	uxth	r2, r3
1004c4b8:	4b11      	ldr	r3, [pc, #68]	@ (1004c500 <_updateCalibrationData+0x64>)
1004c4ba:	699b      	ldr	r3, [r3, #24]
1004c4bc:	0019      	movs	r1, r3
1004c4be:	0010      	movs	r0, r2
1004c4c0:	f7ff fd8a 	bl	1004bfd8 <_update_xtal_startup_time>
    _configureTxRxDelay(&RADIO_TIMER_Context, FALSE);
1004c4c4:	4b0e      	ldr	r3, [pc, #56]	@ (1004c500 <_updateCalibrationData+0x64>)
1004c4c6:	2100      	movs	r1, #0
1004c4c8:	0018      	movs	r0, r3
1004c4ca:	f7ff fcc1 	bl	1004be50 <_configureTxRxDelay>
    RADIO_TIMER_Context.calibrationData.calibration_data_available = 1;
1004c4ce:	4b0c      	ldr	r3, [pc, #48]	@ (1004c500 <_updateCalibrationData+0x64>)
1004c4d0:	2234      	movs	r2, #52	@ 0x34
1004c4d2:	2101      	movs	r1, #1
1004c4d4:	5499      	strb	r1, [r3, r2]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004c4d6:	f3ef 8310 	mrs	r3, PRIMASK
1004c4da:	607b      	str	r3, [r7, #4]
  return(result);
1004c4dc:	687b      	ldr	r3, [r7, #4]
  }
  ATOMIC_SECTION_BEGIN();
1004c4de:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("cpsid i" : : : "memory");
1004c4e0:	b672      	cpsid	i
}
1004c4e2:	46c0      	nop			@ (mov r8, r8)
  _update_system_time(&RADIO_TIMER_Context);
1004c4e4:	4b06      	ldr	r3, [pc, #24]	@ (1004c500 <_updateCalibrationData+0x64>)
1004c4e6:	0018      	movs	r0, r3
1004c4e8:	f000 f80e 	bl	1004c508 <_update_system_time>
1004c4ec:	68fb      	ldr	r3, [r7, #12]
1004c4ee:	60bb      	str	r3, [r7, #8]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004c4f0:	68bb      	ldr	r3, [r7, #8]
1004c4f2:	f383 8810 	msr	PRIMASK, r3
}
1004c4f6:	46c0      	nop			@ (mov r8, r8)
  ATOMIC_SECTION_END();
}
1004c4f8:	46c0      	nop			@ (mov r8, r8)
1004c4fa:	46bd      	mov	sp, r7
1004c4fc:	b004      	add	sp, #16
1004c4fe:	bd80      	pop	{r7, pc}
1004c500:	200006f8 	.word	0x200006f8
1004c504:	20000708 	.word	0x20000708

1004c508 <_update_system_time>:

/* This function update the system time after a calibration.
 * If the user calls too often this function, you could have rounding issues in the integer maths.
 */
static void _update_system_time(RADIO_TIMER_ContextTypeDef *context)
{
1004c508:	b5b0      	push	{r4, r5, r7, lr}
1004c50a:	b088      	sub	sp, #32
1004c50c:	af00      	add	r7, sp, #0
1004c50e:	6178      	str	r0, [r7, #20]
  uint32_t current_machine_time;
  uint32_t period;

  current_machine_time = LL_RADIO_TIMER_GetAbsoluteTime(WAKEUP);
1004c510:	4b2a      	ldr	r3, [pc, #168]	@ (1004c5bc <_update_system_time+0xb4>)
1004c512:	0018      	movs	r0, r3
1004c514:	f7fe ff29 	bl	1004b36a <LL_RADIO_TIMER_GetAbsoluteTime>
1004c518:	0003      	movs	r3, r0
1004c51a:	61fb      	str	r3, [r7, #28]
  period = context->calibrationData.last_period1;
1004c51c:	697b      	ldr	r3, [r7, #20]
1004c51e:	6a1b      	ldr	r3, [r3, #32]
1004c520:	61bb      	str	r3, [r7, #24]
  context->cumulative_time = context->calibrationData.last_calibration_time + \
1004c522:	697b      	ldr	r3, [r7, #20]
1004c524:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
1004c526:	6add      	ldr	r5, [r3, #44]	@ 0x2c
                             blue_unit_conversion(TIME_ABSDIFF(current_machine_time,
1004c528:	697b      	ldr	r3, [r7, #20]
1004c52a:	2280      	movs	r2, #128	@ 0x80
1004c52c:	589b      	ldr	r3, [r3, r2]
1004c52e:	69fa      	ldr	r2, [r7, #28]
1004c530:	1ad3      	subs	r3, r2, r3
1004c532:	4a23      	ldr	r2, [pc, #140]	@ (1004c5c0 <_update_system_time+0xb8>)
1004c534:	69b9      	ldr	r1, [r7, #24]
1004c536:	0018      	movs	r0, r3
1004c538:	f7f3 fdc2 	bl	100400c0 <blue_unit_conversion>
1004c53c:	0003      	movs	r3, r0
1004c53e:	60bb      	str	r3, [r7, #8]
1004c540:	2300      	movs	r3, #0
1004c542:	60fb      	str	r3, [r7, #12]
  context->cumulative_time = context->calibrationData.last_calibration_time + \
1004c544:	68ba      	ldr	r2, [r7, #8]
1004c546:	68fb      	ldr	r3, [r7, #12]
1004c548:	1912      	adds	r2, r2, r4
1004c54a:	416b      	adcs	r3, r5
1004c54c:	6979      	ldr	r1, [r7, #20]
1004c54e:	670a      	str	r2, [r1, #112]	@ 0x70
1004c550:	674b      	str	r3, [r1, #116]	@ 0x74
                                                               context->last_machine_time),
                                                  period, MULT64_THR_PERIOD);

  if ((context->calibrationSettings.periodicCalibration == 0)
1004c552:	697b      	ldr	r3, [r7, #20]
1004c554:	781b      	ldrb	r3, [r3, #0]
1004c556:	2b00      	cmp	r3, #0
1004c558:	d11d      	bne.n	1004c596 <_update_system_time+0x8e>
      && (TIME_ABSDIFF(current_machine_time,
1004c55a:	697b      	ldr	r3, [r7, #20]
1004c55c:	2280      	movs	r2, #128	@ 0x80
1004c55e:	589b      	ldr	r3, [r3, r2]
1004c560:	69fa      	ldr	r2, [r7, #28]
1004c562:	1ad2      	subs	r2, r2, r3
                       context->last_machine_time) < context->calibrationData.calibration_machine_interval))
1004c564:	697b      	ldr	r3, [r7, #20]
1004c566:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
      && (TIME_ABSDIFF(current_machine_time,
1004c568:	429a      	cmp	r2, r3
1004c56a:	d214      	bcs.n	1004c596 <_update_system_time+0x8e>
  {
    context->cumulative_time += blue_unit_conversion(TIMER_MAX_VALUE, period, MULT64_THR_PERIOD);
1004c56c:	4a14      	ldr	r2, [pc, #80]	@ (1004c5c0 <_update_system_time+0xb8>)
1004c56e:	69b9      	ldr	r1, [r7, #24]
1004c570:	2301      	movs	r3, #1
1004c572:	425b      	negs	r3, r3
1004c574:	0018      	movs	r0, r3
1004c576:	f7f3 fda3 	bl	100400c0 <blue_unit_conversion>
1004c57a:	0001      	movs	r1, r0
1004c57c:	697b      	ldr	r3, [r7, #20]
1004c57e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
1004c580:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
1004c582:	6039      	str	r1, [r7, #0]
1004c584:	2100      	movs	r1, #0
1004c586:	6079      	str	r1, [r7, #4]
1004c588:	6838      	ldr	r0, [r7, #0]
1004c58a:	6879      	ldr	r1, [r7, #4]
1004c58c:	1812      	adds	r2, r2, r0
1004c58e:	414b      	adcs	r3, r1
1004c590:	6979      	ldr	r1, [r7, #20]
1004c592:	670a      	str	r2, [r1, #112]	@ 0x70
1004c594:	674b      	str	r3, [r1, #116]	@ 0x74
  }
  context->last_machine_time = current_machine_time;
1004c596:	697b      	ldr	r3, [r7, #20]
1004c598:	2180      	movs	r1, #128	@ 0x80
1004c59a:	69fa      	ldr	r2, [r7, #28]
1004c59c:	505a      	str	r2, [r3, r1]
  context->calibrationData.last_calibration_time = context->cumulative_time;
1004c59e:	697b      	ldr	r3, [r7, #20]
1004c5a0:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
1004c5a2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
1004c5a4:	6979      	ldr	r1, [r7, #20]
1004c5a6:	628a      	str	r2, [r1, #40]	@ 0x28
1004c5a8:	62cb      	str	r3, [r1, #44]	@ 0x2c
  context->calibrationData.last_period1 = context->calibrationData.period1;
1004c5aa:	697b      	ldr	r3, [r7, #20]
1004c5ac:	69da      	ldr	r2, [r3, #28]
1004c5ae:	697b      	ldr	r3, [r7, #20]
1004c5b0:	621a      	str	r2, [r3, #32]
}
1004c5b2:	46c0      	nop			@ (mov r8, r8)
1004c5b4:	46bd      	mov	sp, r7
1004c5b6:	b008      	add	sp, #32
1004c5b8:	bdb0      	pop	{r4, r5, r7, pc}
1004c5ba:	46c0      	nop			@ (mov r8, r8)
1004c5bc:	60001800 	.word	0x60001800
1004c5c0:	00000635 	.word	0x00000635

1004c5c4 <_check_radio_activity>:
   3) The radio event is after the next calibration event. Then the timer will be programmed with the latest values.
   The check on the next calibration event is made even though the calibration is disabled (max cal. interval)
   in order to avoid counter wrapping with timeouts far in the future.
*/
static void _check_radio_activity(RADIO_TIMER_RadioHandleTypeDef *timerHandle, uint8_t *expired)
{
1004c5c4:	b5b0      	push	{r4, r5, r7, lr}
1004c5c6:	b08a      	sub	sp, #40	@ 0x28
1004c5c8:	af00      	add	r7, sp, #0
1004c5ca:	6078      	str	r0, [r7, #4]
1004c5cc:	6039      	str	r1, [r7, #0]
  uint64_t nextCalibrationEvent, currentTime;
  *expired = 0;
1004c5ce:	683b      	ldr	r3, [r7, #0]
1004c5d0:	2200      	movs	r2, #0
1004c5d2:	701a      	strb	r2, [r3, #0]
  if (timerHandle->pending)
1004c5d4:	687b      	ldr	r3, [r7, #4]
1004c5d6:	7a9b      	ldrb	r3, [r3, #10]
1004c5d8:	2b00      	cmp	r3, #0
1004c5da:	d100      	bne.n	1004c5de <_check_radio_activity+0x1a>
1004c5dc:	e070      	b.n	1004c6c0 <_check_radio_activity+0xfc>
  {
    
    nextCalibrationEvent = RADIO_TIMER_Context.calibrationData.last_calibration_time + \
1004c5de:	4b3a      	ldr	r3, [pc, #232]	@ (1004c6c8 <_check_radio_activity+0x104>)
1004c5e0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
1004c5e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
                           RADIO_TIMER_Context.calibrationSettings.periodicCalibrationInterval;
1004c5e4:	4938      	ldr	r1, [pc, #224]	@ (1004c6c8 <_check_radio_activity+0x104>)
1004c5e6:	6849      	ldr	r1, [r1, #4]
1004c5e8:	000c      	movs	r4, r1
1004c5ea:	2100      	movs	r1, #0
1004c5ec:	000d      	movs	r5, r1
    nextCalibrationEvent = RADIO_TIMER_Context.calibrationData.last_calibration_time + \
1004c5ee:	1912      	adds	r2, r2, r4
1004c5f0:	416b      	adcs	r3, r5
1004c5f2:	623a      	str	r2, [r7, #32]
1004c5f4:	627b      	str	r3, [r7, #36]	@ 0x24
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004c5f6:	f3ef 8310 	mrs	r3, PRIMASK
1004c5fa:	60fb      	str	r3, [r7, #12]
  return(result);
1004c5fc:	68fb      	ldr	r3, [r7, #12]

    ATOMIC_SECTION_BEGIN();
1004c5fe:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("cpsid i" : : : "memory");
1004c600:	b672      	cpsid	i
}
1004c602:	46c0      	nop			@ (mov r8, r8)
    currentTime = HAL_RADIO_TIMER_GetCurrentSysTime();
1004c604:	f7ff fabe 	bl	1004bb84 <HAL_RADIO_TIMER_GetCurrentSysTime>
1004c608:	0002      	movs	r2, r0
1004c60a:	000b      	movs	r3, r1
1004c60c:	613a      	str	r2, [r7, #16]
1004c60e:	617b      	str	r3, [r7, #20]
    if ((timerHandle->expiryTime < (nextCalibrationEvent + RADIO_ACTIVITY_MARGIN)) || \
1004c610:	687b      	ldr	r3, [r7, #4]
1004c612:	681a      	ldr	r2, [r3, #0]
1004c614:	685b      	ldr	r3, [r3, #4]
1004c616:	6a38      	ldr	r0, [r7, #32]
1004c618:	6a79      	ldr	r1, [r7, #36]	@ 0x24
1004c61a:	24c8      	movs	r4, #200	@ 0xc8
1004c61c:	02a4      	lsls	r4, r4, #10
1004c61e:	2500      	movs	r5, #0
1004c620:	1900      	adds	r0, r0, r4
1004c622:	4169      	adcs	r1, r5
1004c624:	4299      	cmp	r1, r3
1004c626:	d812      	bhi.n	1004c64e <_check_radio_activity+0x8a>
1004c628:	d101      	bne.n	1004c62e <_check_radio_activity+0x6a>
1004c62a:	4290      	cmp	r0, r2
1004c62c:	d80f      	bhi.n	1004c64e <_check_radio_activity+0x8a>
        (currentTime > (nextCalibrationEvent + CALIB_SAFE_THR)))
1004c62e:	6a3a      	ldr	r2, [r7, #32]
1004c630:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c632:	20b9      	movs	r0, #185	@ 0xb9
1004c634:	0040      	lsls	r0, r0, #1
1004c636:	2100      	movs	r1, #0
1004c638:	1812      	adds	r2, r2, r0
1004c63a:	414b      	adcs	r3, r1
    if ((timerHandle->expiryTime < (nextCalibrationEvent + RADIO_ACTIVITY_MARGIN)) || \
1004c63c:	6979      	ldr	r1, [r7, #20]
1004c63e:	4299      	cmp	r1, r3
1004c640:	d805      	bhi.n	1004c64e <_check_radio_activity+0x8a>
1004c642:	6979      	ldr	r1, [r7, #20]
1004c644:	4299      	cmp	r1, r3
1004c646:	d135      	bne.n	1004c6b4 <_check_radio_activity+0xf0>
1004c648:	6939      	ldr	r1, [r7, #16]
1004c64a:	4291      	cmp	r1, r2
1004c64c:	d932      	bls.n	1004c6b4 <_check_radio_activity+0xf0>
    {
      if (timerHandle->expiryTime - TIMER1_INIT_DELAY > (currentTime + TIMER1_MARGIN))
1004c64e:	687b      	ldr	r3, [r7, #4]
1004c650:	681a      	ldr	r2, [r3, #0]
1004c652:	685b      	ldr	r3, [r3, #4]
1004c654:	204c      	movs	r0, #76	@ 0x4c
1004c656:	4240      	negs	r0, r0
1004c658:	17c1      	asrs	r1, r0, #31
1004c65a:	1880      	adds	r0, r0, r2
1004c65c:	4159      	adcs	r1, r3
1004c65e:	693a      	ldr	r2, [r7, #16]
1004c660:	697b      	ldr	r3, [r7, #20]
1004c662:	240a      	movs	r4, #10
1004c664:	2500      	movs	r5, #0
1004c666:	1912      	adds	r2, r2, r4
1004c668:	416b      	adcs	r3, r5
1004c66a:	4299      	cmp	r1, r3
1004c66c:	d802      	bhi.n	1004c674 <_check_radio_activity+0xb0>
1004c66e:	d11a      	bne.n	1004c6a6 <_check_radio_activity+0xe2>
1004c670:	4290      	cmp	r0, r2
1004c672:	d918      	bls.n	1004c6a6 <_check_radio_activity+0xe2>
      {
        *expired = TIMER_SetRadioTimerValue(timerHandle->expiryTime, timerHandle->event_type, timerHandle->cal_req);
1004c674:	687b      	ldr	r3, [r7, #4]
1004c676:	681a      	ldr	r2, [r3, #0]
1004c678:	685b      	ldr	r3, [r3, #4]
1004c67a:	0010      	movs	r0, r2
1004c67c:	687b      	ldr	r3, [r7, #4]
1004c67e:	7b19      	ldrb	r1, [r3, #12]
1004c680:	687b      	ldr	r3, [r7, #4]
1004c682:	7a1b      	ldrb	r3, [r3, #8]
1004c684:	001a      	movs	r2, r3
1004c686:	f000 f821 	bl	1004c6cc <TIMER_SetRadioTimerValue>
1004c68a:	0003      	movs	r3, r0
1004c68c:	001a      	movs	r2, r3
1004c68e:	683b      	ldr	r3, [r7, #0]
1004c690:	701a      	strb	r2, [r3, #0]
        timerHandle->pending = FALSE; /* timer has been served. No more pending */
1004c692:	687b      	ldr	r3, [r7, #4]
1004c694:	2200      	movs	r2, #0
1004c696:	729a      	strb	r2, [r3, #10]
        timerHandle->active = TRUE; /* timer has been programmed and it becomes ACTIVE */
1004c698:	687b      	ldr	r3, [r7, #4]
1004c69a:	2201      	movs	r2, #1
1004c69c:	725a      	strb	r2, [r3, #9]
        timerHandle->intTxRx_to_be_served = TRUE;
1004c69e:	687b      	ldr	r3, [r7, #4]
1004c6a0:	2201      	movs	r2, #1
1004c6a2:	72da      	strb	r2, [r3, #11]
1004c6a4:	e006      	b.n	1004c6b4 <_check_radio_activity+0xf0>
      }
      else
      {
        
        RADIO_TIMER_Context.radioTimer.pending = FALSE;
1004c6a6:	4b08      	ldr	r3, [pc, #32]	@ (1004c6c8 <_check_radio_activity+0x104>)
1004c6a8:	2262      	movs	r2, #98	@ 0x62
1004c6aa:	2100      	movs	r1, #0
1004c6ac:	5499      	strb	r1, [r3, r2]
        *expired = 1;
1004c6ae:	683b      	ldr	r3, [r7, #0]
1004c6b0:	2201      	movs	r2, #1
1004c6b2:	701a      	strb	r2, [r3, #0]
1004c6b4:	69fb      	ldr	r3, [r7, #28]
1004c6b6:	60bb      	str	r3, [r7, #8]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004c6b8:	68bb      	ldr	r3, [r7, #8]
1004c6ba:	f383 8810 	msr	PRIMASK, r3
}
1004c6be:	46c0      	nop			@ (mov r8, r8)
#endif
    }
    ATOMIC_SECTION_END();
    
  }
}
1004c6c0:	46c0      	nop			@ (mov r8, r8)
1004c6c2:	46bd      	mov	sp, r7
1004c6c4:	b00a      	add	sp, #40	@ 0x28
1004c6c6:	bdb0      	pop	{r4, r5, r7, pc}
1004c6c8:	200006f8 	.word	0x200006f8

1004c6cc <TIMER_SetRadioTimerValue>:
  * @warning The API must be called with interrupts disabled to avoid programming the timer with a value in the past
  * @retval  0 if a correct timeout has been programmed in the timeout register
  * @retval  1 if a correct timeout cannot be programmed
  */
static uint8_t TIMER_SetRadioTimerValue(uint32_t timeout, bool event_type, bool cal_req)
{
1004c6cc:	b580      	push	{r7, lr}
1004c6ce:	b08a      	sub	sp, #40	@ 0x28
1004c6d0:	af00      	add	r7, sp, #0
1004c6d2:	6078      	str	r0, [r7, #4]
1004c6d4:	0008      	movs	r0, r1
1004c6d6:	0011      	movs	r1, r2
1004c6d8:	1cfb      	adds	r3, r7, #3
1004c6da:	1c02      	adds	r2, r0, #0
1004c6dc:	701a      	strb	r2, [r3, #0]
1004c6de:	1cbb      	adds	r3, r7, #2
1004c6e0:	1c0a      	adds	r2, r1, #0
1004c6e2:	701a      	strb	r2, [r3, #0]
  uint32_t current_time, delay, radio_init_delay, device_delay, rel_timeout, rel_timeout_mt;
  uint8_t ret_val;

  /*choose the 2nd init duration. Check the event_type and cal. request*/
  if (event_type == TX)
1004c6e4:	1cfb      	adds	r3, r7, #3
1004c6e6:	781b      	ldrb	r3, [r3, #0]
1004c6e8:	2b00      	cmp	r3, #0
1004c6ea:	d015      	beq.n	1004c718 <TIMER_SetRadioTimerValue+0x4c>
  {
    if (cal_req)
1004c6ec:	1cbb      	adds	r3, r7, #2
1004c6ee:	781b      	ldrb	r3, [r3, #0]
1004c6f0:	2b00      	cmp	r3, #0
1004c6f2:	d008      	beq.n	1004c706 <TIMER_SetRadioTimerValue+0x3a>
    {
      radio_init_delay = RADIO_TIMER_Context.TxRxDelay.tx_cal_delay;
1004c6f4:	4b67      	ldr	r3, [pc, #412]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c6f6:	2238      	movs	r2, #56	@ 0x38
1004c6f8:	5c9b      	ldrb	r3, [r3, r2]
1004c6fa:	623b      	str	r3, [r7, #32]
      device_delay = RADIO_TIMER_Context.TxRxDelay.tx_cal_delay_st;
1004c6fc:	4b65      	ldr	r3, [pc, #404]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c6fe:	223c      	movs	r2, #60	@ 0x3c
1004c700:	5c9b      	ldrb	r3, [r3, r2]
1004c702:	61fb      	str	r3, [r7, #28]
1004c704:	e01d      	b.n	1004c742 <TIMER_SetRadioTimerValue+0x76>
    }
    else
    {
      radio_init_delay = RADIO_TIMER_Context.TxRxDelay.tx_no_cal_delay;
1004c706:	4b63      	ldr	r3, [pc, #396]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c708:	2239      	movs	r2, #57	@ 0x39
1004c70a:	5c9b      	ldrb	r3, [r3, r2]
1004c70c:	623b      	str	r3, [r7, #32]
      device_delay = RADIO_TIMER_Context.TxRxDelay.tx_cal_delay_st;
1004c70e:	4b61      	ldr	r3, [pc, #388]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c710:	223c      	movs	r2, #60	@ 0x3c
1004c712:	5c9b      	ldrb	r3, [r3, r2]
1004c714:	61fb      	str	r3, [r7, #28]
1004c716:	e014      	b.n	1004c742 <TIMER_SetRadioTimerValue+0x76>
    }
  }
  else
  {
    if (cal_req)
1004c718:	1cbb      	adds	r3, r7, #2
1004c71a:	781b      	ldrb	r3, [r3, #0]
1004c71c:	2b00      	cmp	r3, #0
1004c71e:	d008      	beq.n	1004c732 <TIMER_SetRadioTimerValue+0x66>
    {
      radio_init_delay = RADIO_TIMER_Context.TxRxDelay.rx_cal_delay;
1004c720:	4b5c      	ldr	r3, [pc, #368]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c722:	223a      	movs	r2, #58	@ 0x3a
1004c724:	5c9b      	ldrb	r3, [r3, r2]
1004c726:	623b      	str	r3, [r7, #32]
      device_delay = RADIO_TIMER_Context.TxRxDelay.tx_cal_delay_st;
1004c728:	4b5a      	ldr	r3, [pc, #360]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c72a:	223c      	movs	r2, #60	@ 0x3c
1004c72c:	5c9b      	ldrb	r3, [r3, r2]
1004c72e:	61fb      	str	r3, [r7, #28]
1004c730:	e007      	b.n	1004c742 <TIMER_SetRadioTimerValue+0x76>
    }
    else
    {
      radio_init_delay = RADIO_TIMER_Context.TxRxDelay.rx_no_cal_delay;
1004c732:	4b58      	ldr	r3, [pc, #352]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c734:	223b      	movs	r2, #59	@ 0x3b
1004c736:	5c9b      	ldrb	r3, [r3, r2]
1004c738:	623b      	str	r3, [r7, #32]
      device_delay = RADIO_TIMER_Context.TxRxDelay.tx_cal_delay_st;
1004c73a:	4b56      	ldr	r3, [pc, #344]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c73c:	223c      	movs	r2, #60	@ 0x3c
1004c73e:	5c9b      	ldrb	r3, [r3, r2]
1004c740:	61fb      	str	r3, [r7, #28]
    }
  }

  /* At this point, it is care of the upper layers to guarantee that the timeout represents an absolute time in the future */
  rel_timeout = timeout - (uint32_t)_get_system_time_and_machine(&RADIO_TIMER_Context, &current_time);
1004c742:	230c      	movs	r3, #12
1004c744:	18fa      	adds	r2, r7, r3
1004c746:	4b53      	ldr	r3, [pc, #332]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c748:	0011      	movs	r1, r2
1004c74a:	0018      	movs	r0, r3
1004c74c:	f7ff fce4 	bl	1004c118 <_get_system_time_and_machine>
1004c750:	0002      	movs	r2, r0
1004c752:	000b      	movs	r3, r1
1004c754:	687b      	ldr	r3, [r7, #4]
1004c756:	1a9b      	subs	r3, r3, r2
1004c758:	617b      	str	r3, [r7, #20]

  rel_timeout_mt =  blue_unit_conversion(rel_timeout, RADIO_TIMER_Context.calibrationData.freq1, MULT64_THR_FREQ);
1004c75a:	4b4e      	ldr	r3, [pc, #312]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c75c:	699b      	ldr	r3, [r3, #24]
1004c75e:	0019      	movs	r1, r3
1004c760:	4a4d      	ldr	r2, [pc, #308]	@ (1004c898 <TIMER_SetRadioTimerValue+0x1cc>)
1004c762:	697b      	ldr	r3, [r7, #20]
1004c764:	0018      	movs	r0, r3
1004c766:	f7f3 fcab 	bl	100400c0 <blue_unit_conversion>
1004c76a:	0003      	movs	r3, r0
1004c76c:	613b      	str	r3, [r7, #16]

  /*Check if the timeout is beyond the wakeup time offset. Then program either the WakeUp timer or the Timer1*/
  if (rel_timeout > (device_delay + RADIO_TIMER_Context.hs_startup_time + MARGIN_EXT))
1004c76e:	4b49      	ldr	r3, [pc, #292]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c770:	6e9a      	ldr	r2, [r3, #104]	@ 0x68
1004c772:	69fb      	ldr	r3, [r7, #28]
1004c774:	18d3      	adds	r3, r2, r3
1004c776:	33c8      	adds	r3, #200	@ 0xc8
1004c778:	697a      	ldr	r2, [r7, #20]
1004c77a:	429a      	cmp	r2, r3
1004c77c:	d92f      	bls.n	1004c7de <TIMER_SetRadioTimerValue+0x112>
  {
    /*The timeout is after the wakeup_time_offset, So it is ok to program the wakeup timer*/
    delay = rel_timeout_mt - BLUEGLOB->WAKEUPINITDELAY - radio_init_delay;
1004c77e:	4b47      	ldr	r3, [pc, #284]	@ (1004c89c <TIMER_SetRadioTimerValue+0x1d0>)
1004c780:	795b      	ldrb	r3, [r3, #5]
1004c782:	b2db      	uxtb	r3, r3
1004c784:	001a      	movs	r2, r3
1004c786:	693b      	ldr	r3, [r7, #16]
1004c788:	1a9a      	subs	r2, r3, r2
1004c78a:	6a3b      	ldr	r3, [r7, #32]
1004c78c:	1ad3      	subs	r3, r2, r3
1004c78e:	627b      	str	r3, [r7, #36]	@ 0x24
    LL_RADIO_TIMER_SetBLEWakeupTime(WAKEUP, ((current_time + delay) & TIMER_MAX_VALUE));
1004c790:	68fa      	ldr	r2, [r7, #12]
1004c792:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c794:	18d3      	adds	r3, r2, r3
1004c796:	4a42      	ldr	r2, [pc, #264]	@ (1004c8a0 <TIMER_SetRadioTimerValue+0x1d4>)
1004c798:	0019      	movs	r1, r3
1004c79a:	0010      	movs	r0, r2
1004c79c:	f7fe fdcd 	bl	1004b33a <LL_RADIO_TIMER_SetBLEWakeupTime>
    LL_RADIO_TIMER_SetSleepRequestMode(WAKEUP, 0);
1004c7a0:	4b3f      	ldr	r3, [pc, #252]	@ (1004c8a0 <TIMER_SetRadioTimerValue+0x1d4>)
1004c7a2:	2100      	movs	r1, #0
1004c7a4:	0018      	movs	r0, r3
1004c7a6:	f7fe fdf9 	bl	1004b39c <LL_RADIO_TIMER_SetSleepRequestMode>
    LL_RADIO_TIMER_DisableTimer1(BLUE);
1004c7aa:	23c0      	movs	r3, #192	@ 0xc0
1004c7ac:	05db      	lsls	r3, r3, #23
1004c7ae:	0018      	movs	r0, r3
1004c7b0:	f7fe fd4a 	bl	1004b248 <LL_RADIO_TIMER_DisableTimer1>
    LL_RADIO_TIMER_DisableTimer2(BLUE);
1004c7b4:	23c0      	movs	r3, #192	@ 0xc0
1004c7b6:	05db      	lsls	r3, r3, #23
1004c7b8:	0018      	movs	r0, r3
1004c7ba:	f7fe fd54 	bl	1004b266 <LL_RADIO_TIMER_DisableTimer2>
    LL_RADIO_TIMER_EnableBLEWakeupTimer(WAKEUP);
1004c7be:	4b38      	ldr	r3, [pc, #224]	@ (1004c8a0 <TIMER_SetRadioTimerValue+0x1d4>)
1004c7c0:	0018      	movs	r0, r3
1004c7c2:	f7fe fd6b 	bl	1004b29c <LL_RADIO_TIMER_EnableBLEWakeupTimer>
    LL_RADIO_TIMER_EnableWakeupTimerLowPowerMode(WAKEUP);
1004c7c6:	4b36      	ldr	r3, [pc, #216]	@ (1004c8a0 <TIMER_SetRadioTimerValue+0x1d4>)
1004c7c8:	0018      	movs	r0, r3
1004c7ca:	f7fe fdd8 	bl	1004b37e <LL_RADIO_TIMER_EnableWakeupTimerLowPowerMode>
    radio_init_delay += BLUEGLOB->WAKEUPINITDELAY;
1004c7ce:	4b33      	ldr	r3, [pc, #204]	@ (1004c89c <TIMER_SetRadioTimerValue+0x1d0>)
1004c7d0:	795b      	ldrb	r3, [r3, #5]
1004c7d2:	b2db      	uxtb	r3, r3
1004c7d4:	001a      	movs	r2, r3
1004c7d6:	6a3b      	ldr	r3, [r7, #32]
1004c7d8:	189b      	adds	r3, r3, r2
1004c7da:	623b      	str	r3, [r7, #32]
1004c7dc:	e021      	b.n	1004c822 <TIMER_SetRadioTimerValue+0x156>
  }
  else
  {
    delay = rel_timeout_mt - RADIO_TIMER_Context.TxRxDelay.tim12_delay_mt - radio_init_delay;
1004c7de:	4b2d      	ldr	r3, [pc, #180]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c7e0:	223d      	movs	r2, #61	@ 0x3d
1004c7e2:	5c9b      	ldrb	r3, [r3, r2]
1004c7e4:	001a      	movs	r2, r3
1004c7e6:	693b      	ldr	r3, [r7, #16]
1004c7e8:	1a9a      	subs	r2, r3, r2
1004c7ea:	6a3b      	ldr	r3, [r7, #32]
1004c7ec:	1ad3      	subs	r3, r2, r3
1004c7ee:	627b      	str	r3, [r7, #36]	@ 0x24
    LL_RADIO_TIMER_SetTimeout(BLUE, ((current_time + delay) & TIMER_MAX_VALUE));
1004c7f0:	68fa      	ldr	r2, [r7, #12]
1004c7f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004c7f4:	18d2      	adds	r2, r2, r3
1004c7f6:	23c0      	movs	r3, #192	@ 0xc0
1004c7f8:	05db      	lsls	r3, r3, #23
1004c7fa:	0011      	movs	r1, r2
1004c7fc:	0018      	movs	r0, r3
1004c7fe:	f7fe fd41 	bl	1004b284 <LL_RADIO_TIMER_SetTimeout>
    LL_RADIO_TIMER_DisableBLEWakeupTimer(WAKEUP);
1004c802:	4b27      	ldr	r3, [pc, #156]	@ (1004c8a0 <TIMER_SetRadioTimerValue+0x1d4>)
1004c804:	0018      	movs	r0, r3
1004c806:	f7fe fd59 	bl	1004b2bc <LL_RADIO_TIMER_DisableBLEWakeupTimer>
    LL_RADIO_TIMER_EnableTimer1(BLUE);
1004c80a:	23c0      	movs	r3, #192	@ 0xc0
1004c80c:	05db      	lsls	r3, r3, #23
1004c80e:	0018      	movs	r0, r3
1004c810:	f7fe fd0a 	bl	1004b228 <LL_RADIO_TIMER_EnableTimer1>
    radio_init_delay += RADIO_TIMER_Context.TxRxDelay.tim12_delay_mt;
1004c814:	4b1f      	ldr	r3, [pc, #124]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c816:	223d      	movs	r2, #61	@ 0x3d
1004c818:	5c9b      	ldrb	r3, [r3, r2]
1004c81a:	001a      	movs	r2, r3
1004c81c:	6a3b      	ldr	r3, [r7, #32]
1004c81e:	189b      	adds	r3, r3, r2
1004c820:	623b      	str	r3, [r7, #32]
  }

  RADIO_TIMER_Context.last_anchor_mt = (current_time + rel_timeout_mt) & TIMER_MAX_VALUE;
1004c822:	68fa      	ldr	r2, [r7, #12]
1004c824:	693b      	ldr	r3, [r7, #16]
1004c826:	18d2      	adds	r2, r2, r3
1004c828:	4b1a      	ldr	r3, [pc, #104]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c82a:	2188      	movs	r1, #136	@ 0x88
1004c82c:	505a      	str	r2, [r3, r1]
  BLUEGLOB->BYTE22 = 0xF0;
  BLUEGLOB->BYTE23 = 0xFF;
#endif

  /* Basic low level check with an extra margin of machine units */
  if ((delay + radio_init_delay) < (radio_init_delay + 5))
1004c82e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1004c830:	6a3b      	ldr	r3, [r7, #32]
1004c832:	18d2      	adds	r2, r2, r3
1004c834:	6a3b      	ldr	r3, [r7, #32]
1004c836:	3305      	adds	r3, #5
1004c838:	429a      	cmp	r2, r3
1004c83a:	d212      	bcs.n	1004c862 <TIMER_SetRadioTimerValue+0x196>
  {
    LL_RADIO_TIMER_DisableTimer1(BLUE);
1004c83c:	23c0      	movs	r3, #192	@ 0xc0
1004c83e:	05db      	lsls	r3, r3, #23
1004c840:	0018      	movs	r0, r3
1004c842:	f7fe fd01 	bl	1004b248 <LL_RADIO_TIMER_DisableTimer1>
    LL_RADIO_TIMER_DisableTimer2(BLUE);
1004c846:	23c0      	movs	r3, #192	@ 0xc0
1004c848:	05db      	lsls	r3, r3, #23
1004c84a:	0018      	movs	r0, r3
1004c84c:	f7fe fd0b 	bl	1004b266 <LL_RADIO_TIMER_DisableTimer2>
    LL_RADIO_TIMER_DisableBLEWakeupTimer(WAKEUP);
1004c850:	4b13      	ldr	r3, [pc, #76]	@ (1004c8a0 <TIMER_SetRadioTimerValue+0x1d4>)
1004c852:	0018      	movs	r0, r3
1004c854:	f7fe fd32 	bl	1004b2bc <LL_RADIO_TIMER_DisableBLEWakeupTimer>
    ret_val =  1;
1004c858:	231b      	movs	r3, #27
1004c85a:	18fb      	adds	r3, r7, r3
1004c85c:	2201      	movs	r2, #1
1004c85e:	701a      	strb	r2, [r3, #0]
1004c860:	e010      	b.n	1004c884 <TIMER_SetRadioTimerValue+0x1b8>
  }
  else
  {
    RADIO_TIMER_Context.last_setup_time = blue_unit_conversion(radio_init_delay, RADIO_TIMER_Context.calibrationData.period1, MULT64_THR_PERIOD);
1004c862:	4b0c      	ldr	r3, [pc, #48]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c864:	69db      	ldr	r3, [r3, #28]
1004c866:	0019      	movs	r1, r3
1004c868:	4a0e      	ldr	r2, [pc, #56]	@ (1004c8a4 <TIMER_SetRadioTimerValue+0x1d8>)
1004c86a:	6a3b      	ldr	r3, [r7, #32]
1004c86c:	0018      	movs	r0, r3
1004c86e:	f7f3 fc27 	bl	100400c0 <blue_unit_conversion>
1004c872:	0003      	movs	r3, r0
1004c874:	b2d9      	uxtb	r1, r3
1004c876:	4b07      	ldr	r3, [pc, #28]	@ (1004c894 <TIMER_SetRadioTimerValue+0x1c8>)
1004c878:	2284      	movs	r2, #132	@ 0x84
1004c87a:	5499      	strb	r1, [r3, r2]
    ret_val = 0;
1004c87c:	231b      	movs	r3, #27
1004c87e:	18fb      	adds	r3, r7, r3
1004c880:	2200      	movs	r2, #0
1004c882:	701a      	strb	r2, [r3, #0]
  }

  return ret_val;
1004c884:	231b      	movs	r3, #27
1004c886:	18fb      	adds	r3, r7, r3
1004c888:	781b      	ldrb	r3, [r3, #0]
}
1004c88a:	0018      	movs	r0, r3
1004c88c:	46bd      	mov	sp, r7
1004c88e:	b00a      	add	sp, #40	@ 0x28
1004c890:	bd80      	pop	{r7, pc}
1004c892:	46c0      	nop			@ (mov r8, r8)
1004c894:	200006f8 	.word	0x200006f8
1004c898:	00000326 	.word	0x00000326
1004c89c:	200000c0 	.word	0x200000c0
1004c8a0:	60001800 	.word	0x60001800
1004c8a4:	00000635 	.word	0x00000635

1004c8a8 <TIMER_GetPastSysTime>:
  * @param   current_system_time: Current System time
  * @warning User should guarantee that call to this function are performed in a non-interruptible context.
  * @return  STU value
  */
static uint64_t TIMER_GetPastSysTime(uint32_t time, uint64_t *current_system_time)
{
1004c8a8:	b5b0      	push	{r4, r5, r7, lr}
1004c8aa:	b084      	sub	sp, #16
1004c8ac:	af00      	add	r7, sp, #0
1004c8ae:	6078      	str	r0, [r7, #4]
1004c8b0:	6039      	str	r1, [r7, #0]
  uint32_t delta_systime, current_machine_time;

  *current_system_time = _get_system_time_and_machine(&RADIO_TIMER_Context, &current_machine_time);
1004c8b2:	2308      	movs	r3, #8
1004c8b4:	18fa      	adds	r2, r7, r3
1004c8b6:	4b12      	ldr	r3, [pc, #72]	@ (1004c900 <TIMER_GetPastSysTime+0x58>)
1004c8b8:	0011      	movs	r1, r2
1004c8ba:	0018      	movs	r0, r3
1004c8bc:	f7ff fc2c 	bl	1004c118 <_get_system_time_and_machine>
1004c8c0:	0002      	movs	r2, r0
1004c8c2:	000b      	movs	r3, r1
1004c8c4:	6839      	ldr	r1, [r7, #0]
1004c8c6:	600a      	str	r2, [r1, #0]
1004c8c8:	604b      	str	r3, [r1, #4]
  delta_systime = blue_unit_conversion(TIME_DIFF(current_machine_time, time), RADIO_TIMER_Context.calibrationData.period1, MULT64_THR_PERIOD);
1004c8ca:	68ba      	ldr	r2, [r7, #8]
1004c8cc:	687b      	ldr	r3, [r7, #4]
1004c8ce:	1ad0      	subs	r0, r2, r3
1004c8d0:	4b0b      	ldr	r3, [pc, #44]	@ (1004c900 <TIMER_GetPastSysTime+0x58>)
1004c8d2:	69db      	ldr	r3, [r3, #28]
1004c8d4:	0019      	movs	r1, r3
1004c8d6:	4b0b      	ldr	r3, [pc, #44]	@ (1004c904 <TIMER_GetPastSysTime+0x5c>)
1004c8d8:	001a      	movs	r2, r3
1004c8da:	f7f3 fbf1 	bl	100400c0 <blue_unit_conversion>
1004c8de:	0003      	movs	r3, r0
1004c8e0:	60fb      	str	r3, [r7, #12]

  return (*current_system_time - delta_systime);
1004c8e2:	683b      	ldr	r3, [r7, #0]
1004c8e4:	681a      	ldr	r2, [r3, #0]
1004c8e6:	685b      	ldr	r3, [r3, #4]
1004c8e8:	68f9      	ldr	r1, [r7, #12]
1004c8ea:	000c      	movs	r4, r1
1004c8ec:	2100      	movs	r1, #0
1004c8ee:	000d      	movs	r5, r1
1004c8f0:	1b12      	subs	r2, r2, r4
1004c8f2:	41ab      	sbcs	r3, r5
}
1004c8f4:	0010      	movs	r0, r2
1004c8f6:	0019      	movs	r1, r3
1004c8f8:	46bd      	mov	sp, r7
1004c8fa:	b004      	add	sp, #16
1004c8fc:	bdb0      	pop	{r4, r5, r7, pc}
1004c8fe:	46c0      	nop			@ (mov r8, r8)
1004c900:	200006f8 	.word	0x200006f8
1004c904:	00000635 	.word	0x00000635

1004c908 <HAL_RADIO_TIMER_CPU_WKUP_IRQHandler>:
__weak void HAL_RADIO_TIMER_TxRxWakeUpCallback(void)
{
}

void HAL_RADIO_TIMER_CPU_WKUP_IRQHandler(void)
{
1004c908:	b580      	push	{r7, lr}
1004c90a:	af00      	add	r7, sp, #0
  HAL_RADIO_TIMER_TimeoutCallback();
1004c90c:	f7ff f9be 	bl	1004bc8c <HAL_RADIO_TIMER_TimeoutCallback>

  HAL_RADIO_TIMER_CpuWakeUpCallback();
1004c910:	f7f5 ffca 	bl	100428a8 <HAL_RADIO_TIMER_CpuWakeUpCallback>
}
1004c914:	46c0      	nop			@ (mov r8, r8)
1004c916:	46bd      	mov	sp, r7
1004c918:	bd80      	pop	{r7, pc}

1004c91a <HAL_RADIO_TIMER_ERROR_IRQHandler>:
  HAL_RADIO_TIMER_WakeUpCallback();
#endif
}

void HAL_RADIO_TIMER_ERROR_IRQHandler(void)
{
1004c91a:	b580      	push	{r7, lr}
1004c91c:	b082      	sub	sp, #8
1004c91e:	af00      	add	r7, sp, #0
  volatile uint32_t debug_cmd = 0;
1004c920:	2300      	movs	r3, #0
1004c922:	607b      	str	r3, [r7, #4]
  UNUSED(debug_cmd);
1004c924:	687b      	ldr	r3, [r7, #4]
  BLUE->DEBUGCMDREG |= 1;
1004c926:	23c0      	movs	r3, #192	@ 0xc0
1004c928:	05db      	lsls	r3, r3, #23
1004c92a:	6f5a      	ldr	r2, [r3, #116]	@ 0x74
1004c92c:	23c0      	movs	r3, #192	@ 0xc0
1004c92e:	05db      	lsls	r3, r3, #23
1004c930:	2101      	movs	r1, #1
1004c932:	430a      	orrs	r2, r1
1004c934:	675a      	str	r2, [r3, #116]	@ 0x74
  /* If the device is configured with
     System clock = 64 MHz and BLE clock = 16 MHz
     a register read is necessary to end fine
     the clear interrupt register operation,
     due the AHB down converter latency */
  debug_cmd = BLUE->DEBUGCMDREG;
1004c936:	23c0      	movs	r3, #192	@ 0xc0
1004c938:	05db      	lsls	r3, r3, #23
1004c93a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
1004c93c:	607b      	str	r3, [r7, #4]
}
1004c93e:	46c0      	nop			@ (mov r8, r8)
1004c940:	46bd      	mov	sp, r7
1004c942:	b002      	add	sp, #8
1004c944:	bd80      	pop	{r7, pc}
	...

1004c948 <LL_PWR_SetNoPullB>:
  *         @arg @ref LL_PWR_GPIO_BIT_15
  *         (*) available only oon STM32WB06 and STM32WB07 devices
  * @retval None
  */
__STATIC_INLINE void LL_PWR_SetNoPullB(uint32_t GPIONumber)
{
1004c948:	b580      	push	{r7, lr}
1004c94a:	b082      	sub	sp, #8
1004c94c:	af00      	add	r7, sp, #0
1004c94e:	6078      	str	r0, [r7, #4]
  CLEAR_BIT(PWR->PUCRB, GPIONumber);
1004c950:	4b08      	ldr	r3, [pc, #32]	@ (1004c974 <LL_PWR_SetNoPullB+0x2c>)
1004c952:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
1004c954:	687b      	ldr	r3, [r7, #4]
1004c956:	43d9      	mvns	r1, r3
1004c958:	4b06      	ldr	r3, [pc, #24]	@ (1004c974 <LL_PWR_SetNoPullB+0x2c>)
1004c95a:	400a      	ands	r2, r1
1004c95c:	629a      	str	r2, [r3, #40]	@ 0x28
  CLEAR_BIT(PWR->PDCRB, GPIONumber);
1004c95e:	4b05      	ldr	r3, [pc, #20]	@ (1004c974 <LL_PWR_SetNoPullB+0x2c>)
1004c960:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
1004c962:	687b      	ldr	r3, [r7, #4]
1004c964:	43d9      	mvns	r1, r3
1004c966:	4b03      	ldr	r3, [pc, #12]	@ (1004c974 <LL_PWR_SetNoPullB+0x2c>)
1004c968:	400a      	ands	r2, r1
1004c96a:	62da      	str	r2, [r3, #44]	@ 0x2c
}
1004c96c:	46c0      	nop			@ (mov r8, r8)
1004c96e:	46bd      	mov	sp, r7
1004c970:	b002      	add	sp, #8
1004c972:	bd80      	pop	{r7, pc}
1004c974:	48500000 	.word	0x48500000

1004c978 <LL_RCC_HSE_Enable>:
  * @brief  Enable HSE crystal oscillator (HSE ON)
  * @rmtoll CR           HSEON         LL_RCC_HSE_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSE_Enable(void)
{
1004c978:	b580      	push	{r7, lr}
1004c97a:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_HSEON);
1004c97c:	4b04      	ldr	r3, [pc, #16]	@ (1004c990 <LL_RCC_HSE_Enable+0x18>)
1004c97e:	681a      	ldr	r2, [r3, #0]
1004c980:	4b03      	ldr	r3, [pc, #12]	@ (1004c990 <LL_RCC_HSE_Enable+0x18>)
1004c982:	2180      	movs	r1, #128	@ 0x80
1004c984:	0249      	lsls	r1, r1, #9
1004c986:	430a      	orrs	r2, r1
1004c988:	601a      	str	r2, [r3, #0]
}
1004c98a:	46c0      	nop			@ (mov r8, r8)
1004c98c:	46bd      	mov	sp, r7
1004c98e:	bd80      	pop	{r7, pc}
1004c990:	48400000 	.word	0x48400000

1004c994 <LL_RCC_HSE_Disable>:
  * @brief  Disable HSE crystal oscillator (HSE ON)
  * @rmtoll CR           HSEON         LL_RCC_HSE_Disable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSE_Disable(void)
{
1004c994:	b580      	push	{r7, lr}
1004c996:	af00      	add	r7, sp, #0
  CLEAR_BIT(RCC->CR, RCC_CR_HSEON);
1004c998:	4b04      	ldr	r3, [pc, #16]	@ (1004c9ac <LL_RCC_HSE_Disable+0x18>)
1004c99a:	681a      	ldr	r2, [r3, #0]
1004c99c:	4b03      	ldr	r3, [pc, #12]	@ (1004c9ac <LL_RCC_HSE_Disable+0x18>)
1004c99e:	4904      	ldr	r1, [pc, #16]	@ (1004c9b0 <LL_RCC_HSE_Disable+0x1c>)
1004c9a0:	400a      	ands	r2, r1
1004c9a2:	601a      	str	r2, [r3, #0]
}
1004c9a4:	46c0      	nop			@ (mov r8, r8)
1004c9a6:	46bd      	mov	sp, r7
1004c9a8:	bd80      	pop	{r7, pc}
1004c9aa:	46c0      	nop			@ (mov r8, r8)
1004c9ac:	48400000 	.word	0x48400000
1004c9b0:	fffeffff 	.word	0xfffeffff

1004c9b4 <LL_RCC_HSE_IsReady>:
  * @brief  Check if HSE oscillator Ready
  * @rmtoll CR           HSERDY        LL_RCC_HSE_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_HSE_IsReady(void)
{
1004c9b4:	b580      	push	{r7, lr}
1004c9b6:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY)) ? 1UL : 0UL);
1004c9b8:	4b07      	ldr	r3, [pc, #28]	@ (1004c9d8 <LL_RCC_HSE_IsReady+0x24>)
1004c9ba:	681a      	ldr	r2, [r3, #0]
1004c9bc:	2380      	movs	r3, #128	@ 0x80
1004c9be:	029b      	lsls	r3, r3, #10
1004c9c0:	401a      	ands	r2, r3
1004c9c2:	2380      	movs	r3, #128	@ 0x80
1004c9c4:	029b      	lsls	r3, r3, #10
1004c9c6:	429a      	cmp	r2, r3
1004c9c8:	d101      	bne.n	1004c9ce <LL_RCC_HSE_IsReady+0x1a>
1004c9ca:	2301      	movs	r3, #1
1004c9cc:	e000      	b.n	1004c9d0 <LL_RCC_HSE_IsReady+0x1c>
1004c9ce:	2300      	movs	r3, #0
}
1004c9d0:	0018      	movs	r0, r3
1004c9d2:	46bd      	mov	sp, r7
1004c9d4:	bd80      	pop	{r7, pc}
1004c9d6:	46c0      	nop			@ (mov r8, r8)
1004c9d8:	48400000 	.word	0x48400000

1004c9dc <LL_RCC_HSE_SetCapacitorTuning>:
  * @rmtoll RFSWHSECR        SWXOTUNE       LL_RCC_HSE_SetCapacitorTuning
  * @param  Value Between Min_Data = 0 and Max_Data = 63
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSE_SetCapacitorTuning(uint32_t Value)
{
1004c9dc:	b580      	push	{r7, lr}
1004c9de:	b082      	sub	sp, #8
1004c9e0:	af00      	add	r7, sp, #0
1004c9e2:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->RFSWHSECR, RCC_RFSWHSECR_SWXOTUNE, Value << RCC_RFSWHSECR_SWXOTUNE_Pos);
1004c9e4:	4a0b      	ldr	r2, [pc, #44]	@ (1004ca14 <LL_RCC_HSE_SetCapacitorTuning+0x38>)
1004c9e6:	2398      	movs	r3, #152	@ 0x98
1004c9e8:	58d3      	ldr	r3, [r2, r3]
1004c9ea:	4a0b      	ldr	r2, [pc, #44]	@ (1004ca18 <LL_RCC_HSE_SetCapacitorTuning+0x3c>)
1004c9ec:	401a      	ands	r2, r3
1004c9ee:	687b      	ldr	r3, [r7, #4]
1004c9f0:	021b      	lsls	r3, r3, #8
1004c9f2:	4908      	ldr	r1, [pc, #32]	@ (1004ca14 <LL_RCC_HSE_SetCapacitorTuning+0x38>)
1004c9f4:	4313      	orrs	r3, r2
1004c9f6:	2298      	movs	r2, #152	@ 0x98
1004c9f8:	508b      	str	r3, [r1, r2]
  SET_BIT(RCC->RFSWHSECR, RCC_RFSWHSECR_SWXOTUNEEN);
1004c9fa:	4a06      	ldr	r2, [pc, #24]	@ (1004ca14 <LL_RCC_HSE_SetCapacitorTuning+0x38>)
1004c9fc:	2398      	movs	r3, #152	@ 0x98
1004c9fe:	58d3      	ldr	r3, [r2, r3]
1004ca00:	4904      	ldr	r1, [pc, #16]	@ (1004ca14 <LL_RCC_HSE_SetCapacitorTuning+0x38>)
1004ca02:	2280      	movs	r2, #128	@ 0x80
1004ca04:	4313      	orrs	r3, r2
1004ca06:	2298      	movs	r2, #152	@ 0x98
1004ca08:	508b      	str	r3, [r1, r2]
}
1004ca0a:	46c0      	nop			@ (mov r8, r8)
1004ca0c:	46bd      	mov	sp, r7
1004ca0e:	b002      	add	sp, #8
1004ca10:	bd80      	pop	{r7, pc}
1004ca12:	46c0      	nop			@ (mov r8, r8)
1004ca14:	48400000 	.word	0x48400000
1004ca18:	ffffc0ff 	.word	0xffffc0ff

1004ca1c <LL_RCC_HSE_SetCurrentControl>:
  *         @arg @ref LL_RCC_HSE_CURRENTMAX_5
  *         @arg @ref LL_RCC_HSE_CURRENTMAX_6
  *         @arg @ref LL_RCC_HSE_CURRENTMAX_7
  */
__STATIC_INLINE void LL_RCC_HSE_SetCurrentControl(uint32_t CurrentMax)
{
1004ca1c:	b580      	push	{r7, lr}
1004ca1e:	b082      	sub	sp, #8
1004ca20:	af00      	add	r7, sp, #0
1004ca22:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->RFSWHSECR, RCC_RFSWHSECR_GMC, CurrentMax);
1004ca24:	4a07      	ldr	r2, [pc, #28]	@ (1004ca44 <LL_RCC_HSE_SetCurrentControl+0x28>)
1004ca26:	2398      	movs	r3, #152	@ 0x98
1004ca28:	58d3      	ldr	r3, [r2, r3]
1004ca2a:	2270      	movs	r2, #112	@ 0x70
1004ca2c:	4393      	bics	r3, r2
1004ca2e:	001a      	movs	r2, r3
1004ca30:	4904      	ldr	r1, [pc, #16]	@ (1004ca44 <LL_RCC_HSE_SetCurrentControl+0x28>)
1004ca32:	687b      	ldr	r3, [r7, #4]
1004ca34:	4313      	orrs	r3, r2
1004ca36:	2298      	movs	r2, #152	@ 0x98
1004ca38:	508b      	str	r3, [r1, r2]
}
1004ca3a:	46c0      	nop			@ (mov r8, r8)
1004ca3c:	46bd      	mov	sp, r7
1004ca3e:	b002      	add	sp, #8
1004ca40:	bd80      	pop	{r7, pc}
1004ca42:	46c0      	nop			@ (mov r8, r8)
1004ca44:	48400000 	.word	0x48400000

1004ca48 <LL_RCC_HSI_Enable>:
  * @brief  Enable HSI
  * @rmtoll CFGR           STOPHSI        LL_RCC_HSI_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSI_Enable(void)
{
1004ca48:	b580      	push	{r7, lr}
1004ca4a:	af00      	add	r7, sp, #0
  CLEAR_BIT(RCC->CFGR, RCC_CFGR_STOPHSI);
1004ca4c:	4b07      	ldr	r3, [pc, #28]	@ (1004ca6c <LL_RCC_HSI_Enable+0x24>)
1004ca4e:	689a      	ldr	r2, [r3, #8]
1004ca50:	4b06      	ldr	r3, [pc, #24]	@ (1004ca6c <LL_RCC_HSI_Enable+0x24>)
1004ca52:	2104      	movs	r1, #4
1004ca54:	438a      	bics	r2, r1
1004ca56:	609a      	str	r2, [r3, #8]
  CLEAR_BIT(RCC->CFGR, RCC_CFGR_HSESEL);
1004ca58:	4b04      	ldr	r3, [pc, #16]	@ (1004ca6c <LL_RCC_HSI_Enable+0x24>)
1004ca5a:	689a      	ldr	r2, [r3, #8]
1004ca5c:	4b03      	ldr	r3, [pc, #12]	@ (1004ca6c <LL_RCC_HSI_Enable+0x24>)
1004ca5e:	2102      	movs	r1, #2
1004ca60:	438a      	bics	r2, r1
1004ca62:	609a      	str	r2, [r3, #8]
}
1004ca64:	46c0      	nop			@ (mov r8, r8)
1004ca66:	46bd      	mov	sp, r7
1004ca68:	bd80      	pop	{r7, pc}
1004ca6a:	46c0      	nop			@ (mov r8, r8)
1004ca6c:	48400000 	.word	0x48400000

1004ca70 <LL_RCC_HSI_Disable>:
  * @brief  Disable HSI
  * @rmtoll CFGR           STOPHSI        LL_RCC_HSI_Disable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_HSI_Disable(void)
{
1004ca70:	b580      	push	{r7, lr}
1004ca72:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CFGR, RCC_CFGR_HSESEL);
1004ca74:	4b07      	ldr	r3, [pc, #28]	@ (1004ca94 <LL_RCC_HSI_Disable+0x24>)
1004ca76:	689a      	ldr	r2, [r3, #8]
1004ca78:	4b06      	ldr	r3, [pc, #24]	@ (1004ca94 <LL_RCC_HSI_Disable+0x24>)
1004ca7a:	2102      	movs	r1, #2
1004ca7c:	430a      	orrs	r2, r1
1004ca7e:	609a      	str	r2, [r3, #8]
  SET_BIT(RCC->CFGR, RCC_CFGR_STOPHSI);
1004ca80:	4b04      	ldr	r3, [pc, #16]	@ (1004ca94 <LL_RCC_HSI_Disable+0x24>)
1004ca82:	689a      	ldr	r2, [r3, #8]
1004ca84:	4b03      	ldr	r3, [pc, #12]	@ (1004ca94 <LL_RCC_HSI_Disable+0x24>)
1004ca86:	2104      	movs	r1, #4
1004ca88:	430a      	orrs	r2, r1
1004ca8a:	609a      	str	r2, [r3, #8]
}
1004ca8c:	46c0      	nop			@ (mov r8, r8)
1004ca8e:	46bd      	mov	sp, r7
1004ca90:	bd80      	pop	{r7, pc}
1004ca92:	46c0      	nop			@ (mov r8, r8)
1004ca94:	48400000 	.word	0x48400000

1004ca98 <LL_RCC_HSI_IsReady>:
  * @brief  Check if HSI clock is ready
  * @rmtoll CR           HSIRDY        LL_RCC_HSI_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_HSI_IsReady(void)
{
1004ca98:	b580      	push	{r7, lr}
1004ca9a:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) == (RCC_CR_HSIRDY)) ? 1UL : 0UL);
1004ca9c:	4b07      	ldr	r3, [pc, #28]	@ (1004cabc <LL_RCC_HSI_IsReady+0x24>)
1004ca9e:	681a      	ldr	r2, [r3, #0]
1004caa0:	2380      	movs	r3, #128	@ 0x80
1004caa2:	00db      	lsls	r3, r3, #3
1004caa4:	401a      	ands	r2, r3
1004caa6:	2380      	movs	r3, #128	@ 0x80
1004caa8:	00db      	lsls	r3, r3, #3
1004caaa:	429a      	cmp	r2, r3
1004caac:	d101      	bne.n	1004cab2 <LL_RCC_HSI_IsReady+0x1a>
1004caae:	2301      	movs	r3, #1
1004cab0:	e000      	b.n	1004cab4 <LL_RCC_HSI_IsReady+0x1c>
1004cab2:	2300      	movs	r3, #0
}
1004cab4:	0018      	movs	r0, r3
1004cab6:	46bd      	mov	sp, r7
1004cab8:	bd80      	pop	{r7, pc}
1004caba:	46c0      	nop			@ (mov r8, r8)
1004cabc:	48400000 	.word	0x48400000

1004cac0 <LL_RCC_DIRECT_HSE_Enable>:
  * @brief  Enable DIRECT_HSE mode
  * @rmtoll CFGR       HSESEL/STOPHSI         LL_RCC_HSE_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_DIRECT_HSE_Enable(void)
{
1004cac0:	b580      	push	{r7, lr}
1004cac2:	b082      	sub	sp, #8
1004cac4:	af00      	add	r7, sp, #0
  while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0);
1004cac6:	46c0      	nop			@ (mov r8, r8)
1004cac8:	4b0f      	ldr	r3, [pc, #60]	@ (1004cb08 <LL_RCC_DIRECT_HSE_Enable+0x48>)
1004caca:	681a      	ldr	r2, [r3, #0]
1004cacc:	2380      	movs	r3, #128	@ 0x80
1004cace:	029b      	lsls	r3, r3, #10
1004cad0:	4013      	ands	r3, r2
1004cad2:	d0f9      	beq.n	1004cac8 <LL_RCC_DIRECT_HSE_Enable+0x8>
  SET_BIT(RCC->CFGR, RCC_CFGR_HSESEL);
1004cad4:	4b0c      	ldr	r3, [pc, #48]	@ (1004cb08 <LL_RCC_DIRECT_HSE_Enable+0x48>)
1004cad6:	689a      	ldr	r2, [r3, #8]
1004cad8:	4b0b      	ldr	r3, [pc, #44]	@ (1004cb08 <LL_RCC_DIRECT_HSE_Enable+0x48>)
1004cada:	2102      	movs	r1, #2
1004cadc:	430a      	orrs	r2, r1
1004cade:	609a      	str	r2, [r3, #8]
  for (volatile int i = 0; i < 6; i++)
1004cae0:	2300      	movs	r3, #0
1004cae2:	607b      	str	r3, [r7, #4]
1004cae4:	e003      	b.n	1004caee <LL_RCC_DIRECT_HSE_Enable+0x2e>
  {
    __asm("NOP");
1004cae6:	46c0      	nop			@ (mov r8, r8)
  for (volatile int i = 0; i < 6; i++)
1004cae8:	687b      	ldr	r3, [r7, #4]
1004caea:	3301      	adds	r3, #1
1004caec:	607b      	str	r3, [r7, #4]
1004caee:	687b      	ldr	r3, [r7, #4]
1004caf0:	2b05      	cmp	r3, #5
1004caf2:	ddf8      	ble.n	1004cae6 <LL_RCC_DIRECT_HSE_Enable+0x26>
  }
  SET_BIT(RCC->CFGR, RCC_CFGR_STOPHSI);
1004caf4:	4b04      	ldr	r3, [pc, #16]	@ (1004cb08 <LL_RCC_DIRECT_HSE_Enable+0x48>)
1004caf6:	689a      	ldr	r2, [r3, #8]
1004caf8:	4b03      	ldr	r3, [pc, #12]	@ (1004cb08 <LL_RCC_DIRECT_HSE_Enable+0x48>)
1004cafa:	2104      	movs	r1, #4
1004cafc:	430a      	orrs	r2, r1
1004cafe:	609a      	str	r2, [r3, #8]
}
1004cb00:	46c0      	nop			@ (mov r8, r8)
1004cb02:	46bd      	mov	sp, r7
1004cb04:	b002      	add	sp, #8
1004cb06:	bd80      	pop	{r7, pc}
1004cb08:	48400000 	.word	0x48400000

1004cb0c <LL_RCC_LSCO_SetSource>:
  *         @arg @ref LL_RCC_LSCO_CLKSOURCE_LSI
  *         @arg @ref LL_RCC_LSCO_CLKSOURCE_HSI64M_DIV2048
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSCO_SetSource(uint32_t Source)
{
1004cb0c:	b580      	push	{r7, lr}
1004cb0e:	b082      	sub	sp, #8
1004cb10:	af00      	add	r7, sp, #0
1004cb12:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_CLKSLOWSEL, Source);
1004cb14:	4b06      	ldr	r3, [pc, #24]	@ (1004cb30 <LL_RCC_LSCO_SetSource+0x24>)
1004cb16:	689b      	ldr	r3, [r3, #8]
1004cb18:	4a06      	ldr	r2, [pc, #24]	@ (1004cb34 <LL_RCC_LSCO_SetSource+0x28>)
1004cb1a:	4013      	ands	r3, r2
1004cb1c:	0019      	movs	r1, r3
1004cb1e:	4b04      	ldr	r3, [pc, #16]	@ (1004cb30 <LL_RCC_LSCO_SetSource+0x24>)
1004cb20:	687a      	ldr	r2, [r7, #4]
1004cb22:	430a      	orrs	r2, r1
1004cb24:	609a      	str	r2, [r3, #8]
}
1004cb26:	46c0      	nop			@ (mov r8, r8)
1004cb28:	46bd      	mov	sp, r7
1004cb2a:	b002      	add	sp, #8
1004cb2c:	bd80      	pop	{r7, pc}
1004cb2e:	46c0      	nop			@ (mov r8, r8)
1004cb30:	48400000 	.word	0x48400000
1004cb34:	fffe7fff 	.word	0xfffe7fff

1004cb38 <LL_RCC_LSE_Enable>:
  * @brief  Enable  Low Speed External (LSE) crystal.
  * @rmtoll CR         LSEON         LL_RCC_LSE_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSE_Enable(void)
{
1004cb38:	b580      	push	{r7, lr}
1004cb3a:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_LSEON);
1004cb3c:	4b04      	ldr	r3, [pc, #16]	@ (1004cb50 <LL_RCC_LSE_Enable+0x18>)
1004cb3e:	681a      	ldr	r2, [r3, #0]
1004cb40:	4b03      	ldr	r3, [pc, #12]	@ (1004cb50 <LL_RCC_LSE_Enable+0x18>)
1004cb42:	2110      	movs	r1, #16
1004cb44:	430a      	orrs	r2, r1
1004cb46:	601a      	str	r2, [r3, #0]
}
1004cb48:	46c0      	nop			@ (mov r8, r8)
1004cb4a:	46bd      	mov	sp, r7
1004cb4c:	bd80      	pop	{r7, pc}
1004cb4e:	46c0      	nop			@ (mov r8, r8)
1004cb50:	48400000 	.word	0x48400000

1004cb54 <LL_RCC_LSE_Disable>:
  * @brief  Disable  Low Speed External (LSE) crystal.
  * @rmtoll CR         LSEON         LL_RCC_LSE_Disable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSE_Disable(void)
{
1004cb54:	b580      	push	{r7, lr}
1004cb56:	af00      	add	r7, sp, #0
  CLEAR_BIT(RCC->CR, RCC_CR_LSEON);
1004cb58:	4b04      	ldr	r3, [pc, #16]	@ (1004cb6c <LL_RCC_LSE_Disable+0x18>)
1004cb5a:	681a      	ldr	r2, [r3, #0]
1004cb5c:	4b03      	ldr	r3, [pc, #12]	@ (1004cb6c <LL_RCC_LSE_Disable+0x18>)
1004cb5e:	2110      	movs	r1, #16
1004cb60:	438a      	bics	r2, r1
1004cb62:	601a      	str	r2, [r3, #0]
}
1004cb64:	46c0      	nop			@ (mov r8, r8)
1004cb66:	46bd      	mov	sp, r7
1004cb68:	bd80      	pop	{r7, pc}
1004cb6a:	46c0      	nop			@ (mov r8, r8)
1004cb6c:	48400000 	.word	0x48400000

1004cb70 <LL_RCC_LSE_IsReady>:
  * @brief  Check if LSE oscillator Ready
  * @rmtoll CR         LSERDY        LL_RCC_LSE_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_LSE_IsReady(void)
{
1004cb70:	b580      	push	{r7, lr}
1004cb72:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_LSERDY) == (RCC_CR_LSERDY)) ? 1UL : 0UL);
1004cb74:	4b05      	ldr	r3, [pc, #20]	@ (1004cb8c <LL_RCC_LSE_IsReady+0x1c>)
1004cb76:	681b      	ldr	r3, [r3, #0]
1004cb78:	2220      	movs	r2, #32
1004cb7a:	4013      	ands	r3, r2
1004cb7c:	2b20      	cmp	r3, #32
1004cb7e:	d101      	bne.n	1004cb84 <LL_RCC_LSE_IsReady+0x14>
1004cb80:	2301      	movs	r3, #1
1004cb82:	e000      	b.n	1004cb86 <LL_RCC_LSE_IsReady+0x16>
1004cb84:	2300      	movs	r3, #0
}
1004cb86:	0018      	movs	r0, r3
1004cb88:	46bd      	mov	sp, r7
1004cb8a:	bd80      	pop	{r7, pc}
1004cb8c:	48400000 	.word	0x48400000

1004cb90 <LL_RCC_LSE_EnableBypass>:
  * @brief  Enable external clock source (LSE bypass).
  * @rmtoll CR         LSEBYP        LL_RCC_LSE_EnableBypass
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSE_EnableBypass(void)
{
1004cb90:	b580      	push	{r7, lr}
1004cb92:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_LSEBYP);
1004cb94:	4b04      	ldr	r3, [pc, #16]	@ (1004cba8 <LL_RCC_LSE_EnableBypass+0x18>)
1004cb96:	681a      	ldr	r2, [r3, #0]
1004cb98:	4b03      	ldr	r3, [pc, #12]	@ (1004cba8 <LL_RCC_LSE_EnableBypass+0x18>)
1004cb9a:	2140      	movs	r1, #64	@ 0x40
1004cb9c:	430a      	orrs	r2, r1
1004cb9e:	601a      	str	r2, [r3, #0]
}
1004cba0:	46c0      	nop			@ (mov r8, r8)
1004cba2:	46bd      	mov	sp, r7
1004cba4:	bd80      	pop	{r7, pc}
1004cba6:	46c0      	nop			@ (mov r8, r8)
1004cba8:	48400000 	.word	0x48400000

1004cbac <LL_RCC_LSE_DisableBypass>:
  * @brief  Disable external clock source (LSE bypass).
  * @rmtoll CR         LSEBYP        LL_RCC_LSE_DisableBypass
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSE_DisableBypass(void)
{
1004cbac:	b580      	push	{r7, lr}
1004cbae:	af00      	add	r7, sp, #0
  CLEAR_BIT(RCC->CR, RCC_CR_LSEBYP);
1004cbb0:	4b04      	ldr	r3, [pc, #16]	@ (1004cbc4 <LL_RCC_LSE_DisableBypass+0x18>)
1004cbb2:	681a      	ldr	r2, [r3, #0]
1004cbb4:	4b03      	ldr	r3, [pc, #12]	@ (1004cbc4 <LL_RCC_LSE_DisableBypass+0x18>)
1004cbb6:	2140      	movs	r1, #64	@ 0x40
1004cbb8:	438a      	bics	r2, r1
1004cbba:	601a      	str	r2, [r3, #0]
}
1004cbbc:	46c0      	nop			@ (mov r8, r8)
1004cbbe:	46bd      	mov	sp, r7
1004cbc0:	bd80      	pop	{r7, pc}
1004cbc2:	46c0      	nop			@ (mov r8, r8)
1004cbc4:	48400000 	.word	0x48400000

1004cbc8 <LL_RCC_LSE_IsBypassEnabled>:
  * @brief  Check if LSE bypass configuration is enabled.
  * @rmtoll CR         LSEBYP        LL_RCC_LSE_IsBypassEnabled
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_LSE_IsBypassEnabled(void)
{
1004cbc8:	b580      	push	{r7, lr}
1004cbca:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_LSEBYP) == (RCC_CR_LSEBYP)) ? 1UL : 0UL);
1004cbcc:	4b05      	ldr	r3, [pc, #20]	@ (1004cbe4 <LL_RCC_LSE_IsBypassEnabled+0x1c>)
1004cbce:	681b      	ldr	r3, [r3, #0]
1004cbd0:	2240      	movs	r2, #64	@ 0x40
1004cbd2:	4013      	ands	r3, r2
1004cbd4:	2b40      	cmp	r3, #64	@ 0x40
1004cbd6:	d101      	bne.n	1004cbdc <LL_RCC_LSE_IsBypassEnabled+0x14>
1004cbd8:	2301      	movs	r3, #1
1004cbda:	e000      	b.n	1004cbde <LL_RCC_LSE_IsBypassEnabled+0x16>
1004cbdc:	2300      	movs	r3, #0
}
1004cbde:	0018      	movs	r0, r3
1004cbe0:	46bd      	mov	sp, r7
1004cbe2:	bd80      	pop	{r7, pc}
1004cbe4:	48400000 	.word	0x48400000

1004cbe8 <LL_RCC_LSE_SetDriveCapability>:
  *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
  *         @arg @ref LL_RCC_LSEDRIVE_HIGH
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
{
1004cbe8:	b580      	push	{r7, lr}
1004cbea:	b082      	sub	sp, #8
1004cbec:	af00      	add	r7, sp, #0
1004cbee:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CSSWCR, RCC_CSSWCR_LSEDRV, LSEDrive);
1004cbf0:	4b06      	ldr	r3, [pc, #24]	@ (1004cc0c <LL_RCC_LSE_SetDriveCapability+0x24>)
1004cbf2:	68db      	ldr	r3, [r3, #12]
1004cbf4:	2260      	movs	r2, #96	@ 0x60
1004cbf6:	4393      	bics	r3, r2
1004cbf8:	0019      	movs	r1, r3
1004cbfa:	4b04      	ldr	r3, [pc, #16]	@ (1004cc0c <LL_RCC_LSE_SetDriveCapability+0x24>)
1004cbfc:	687a      	ldr	r2, [r7, #4]
1004cbfe:	430a      	orrs	r2, r1
1004cc00:	60da      	str	r2, [r3, #12]
}
1004cc02:	46c0      	nop			@ (mov r8, r8)
1004cc04:	46bd      	mov	sp, r7
1004cc06:	b002      	add	sp, #8
1004cc08:	bd80      	pop	{r7, pc}
1004cc0a:	46c0      	nop			@ (mov r8, r8)
1004cc0c:	48400000 	.word	0x48400000

1004cc10 <LL_RCC_LSI_Enable>:
  * @brief  Enable LSI Oscillator
  * @rmtoll CR          LSION         LL_RCC_LSI_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSI_Enable(void)
{
1004cc10:	b580      	push	{r7, lr}
1004cc12:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_LSION);
1004cc14:	4b04      	ldr	r3, [pc, #16]	@ (1004cc28 <LL_RCC_LSI_Enable+0x18>)
1004cc16:	681a      	ldr	r2, [r3, #0]
1004cc18:	4b03      	ldr	r3, [pc, #12]	@ (1004cc28 <LL_RCC_LSI_Enable+0x18>)
1004cc1a:	2104      	movs	r1, #4
1004cc1c:	430a      	orrs	r2, r1
1004cc1e:	601a      	str	r2, [r3, #0]
}
1004cc20:	46c0      	nop			@ (mov r8, r8)
1004cc22:	46bd      	mov	sp, r7
1004cc24:	bd80      	pop	{r7, pc}
1004cc26:	46c0      	nop			@ (mov r8, r8)
1004cc28:	48400000 	.word	0x48400000

1004cc2c <LL_RCC_LSI_Disable>:
  * @brief  Disable LSI Oscillator
  * @rmtoll CR          LSION         LL_RCC_LSI_Disable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSI_Disable(void)
{
1004cc2c:	b580      	push	{r7, lr}
1004cc2e:	af00      	add	r7, sp, #0
  CLEAR_BIT(RCC->CR, RCC_CR_LSION);
1004cc30:	4b04      	ldr	r3, [pc, #16]	@ (1004cc44 <LL_RCC_LSI_Disable+0x18>)
1004cc32:	681a      	ldr	r2, [r3, #0]
1004cc34:	4b03      	ldr	r3, [pc, #12]	@ (1004cc44 <LL_RCC_LSI_Disable+0x18>)
1004cc36:	2104      	movs	r1, #4
1004cc38:	438a      	bics	r2, r1
1004cc3a:	601a      	str	r2, [r3, #0]
}
1004cc3c:	46c0      	nop			@ (mov r8, r8)
1004cc3e:	46bd      	mov	sp, r7
1004cc40:	bd80      	pop	{r7, pc}
1004cc42:	46c0      	nop			@ (mov r8, r8)
1004cc44:	48400000 	.word	0x48400000

1004cc48 <LL_RCC_LSI_IsReady>:
  * @brief  Check if LSI is Ready
  * @rmtoll CR          LSIRDY        LL_RCC_LSI_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_LSI_IsReady(void)
{
1004cc48:	b580      	push	{r7, lr}
1004cc4a:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_LSIRDY) == (RCC_CR_LSIRDY)) ? 1UL : 0UL);
1004cc4c:	4b05      	ldr	r3, [pc, #20]	@ (1004cc64 <LL_RCC_LSI_IsReady+0x1c>)
1004cc4e:	681b      	ldr	r3, [r3, #0]
1004cc50:	2208      	movs	r2, #8
1004cc52:	4013      	ands	r3, r2
1004cc54:	2b08      	cmp	r3, #8
1004cc56:	d101      	bne.n	1004cc5c <LL_RCC_LSI_IsReady+0x14>
1004cc58:	2301      	movs	r3, #1
1004cc5a:	e000      	b.n	1004cc5e <LL_RCC_LSI_IsReady+0x16>
1004cc5c:	2300      	movs	r3, #0
}
1004cc5e:	0018      	movs	r0, r3
1004cc60:	46bd      	mov	sp, r7
1004cc62:	bd80      	pop	{r7, pc}
1004cc64:	48400000 	.word	0x48400000

1004cc68 <LL_RCC_RC64MPLL_Enable>:
  * @brief  Enable RC64MPLL
  * @rmtoll CR           HSIPLLON         LL_RCC_RC64MPLL_Enable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_RC64MPLL_Enable(void)
{
1004cc68:	b580      	push	{r7, lr}
1004cc6a:	af00      	add	r7, sp, #0
  SET_BIT(RCC->CR, RCC_CR_HSIPLLON);
1004cc6c:	4b04      	ldr	r3, [pc, #16]	@ (1004cc80 <LL_RCC_RC64MPLL_Enable+0x18>)
1004cc6e:	681a      	ldr	r2, [r3, #0]
1004cc70:	4b03      	ldr	r3, [pc, #12]	@ (1004cc80 <LL_RCC_RC64MPLL_Enable+0x18>)
1004cc72:	2180      	movs	r1, #128	@ 0x80
1004cc74:	0189      	lsls	r1, r1, #6
1004cc76:	430a      	orrs	r2, r1
1004cc78:	601a      	str	r2, [r3, #0]
}
1004cc7a:	46c0      	nop			@ (mov r8, r8)
1004cc7c:	46bd      	mov	sp, r7
1004cc7e:	bd80      	pop	{r7, pc}
1004cc80:	48400000 	.word	0x48400000

1004cc84 <LL_RCC_RC64MPLL_Disable>:
  * @note Cannot be disabled if the RC64MPLL clock is used as the system clock
  * @rmtoll CR           HSIPLLON         LL_RCC_RC64MPLL_Disable
  * @retval None
  */
__STATIC_INLINE void LL_RCC_RC64MPLL_Disable(void)
{
1004cc84:	b580      	push	{r7, lr}
1004cc86:	af00      	add	r7, sp, #0
  CLEAR_BIT(RCC->CR, RCC_CR_HSIPLLON);
1004cc88:	4b04      	ldr	r3, [pc, #16]	@ (1004cc9c <LL_RCC_RC64MPLL_Disable+0x18>)
1004cc8a:	681a      	ldr	r2, [r3, #0]
1004cc8c:	4b03      	ldr	r3, [pc, #12]	@ (1004cc9c <LL_RCC_RC64MPLL_Disable+0x18>)
1004cc8e:	4904      	ldr	r1, [pc, #16]	@ (1004cca0 <LL_RCC_RC64MPLL_Disable+0x1c>)
1004cc90:	400a      	ands	r2, r1
1004cc92:	601a      	str	r2, [r3, #0]
}
1004cc94:	46c0      	nop			@ (mov r8, r8)
1004cc96:	46bd      	mov	sp, r7
1004cc98:	bd80      	pop	{r7, pc}
1004cc9a:	46c0      	nop			@ (mov r8, r8)
1004cc9c:	48400000 	.word	0x48400000
1004cca0:	ffffdfff 	.word	0xffffdfff

1004cca4 <LL_RCC_RC64MPLL_IsReady>:
  * @brief  Check if RC64MPLL is Ready
  * @rmtoll CR           HSIPLLRDY        LL_RCC_RC64MPLL_IsReady
  * @retval State of bit (1 or 0).
  */
__STATIC_INLINE uint32_t LL_RCC_RC64MPLL_IsReady(void)
{
1004cca4:	b580      	push	{r7, lr}
1004cca6:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSIPLLRDY) == (RCC_CR_HSIPLLRDY)) ? 1UL : 0UL);
1004cca8:	4b07      	ldr	r3, [pc, #28]	@ (1004ccc8 <LL_RCC_RC64MPLL_IsReady+0x24>)
1004ccaa:	681a      	ldr	r2, [r3, #0]
1004ccac:	2380      	movs	r3, #128	@ 0x80
1004ccae:	01db      	lsls	r3, r3, #7
1004ccb0:	401a      	ands	r2, r3
1004ccb2:	2380      	movs	r3, #128	@ 0x80
1004ccb4:	01db      	lsls	r3, r3, #7
1004ccb6:	429a      	cmp	r2, r3
1004ccb8:	d101      	bne.n	1004ccbe <LL_RCC_RC64MPLL_IsReady+0x1a>
1004ccba:	2301      	movs	r3, #1
1004ccbc:	e000      	b.n	1004ccc0 <LL_RCC_RC64MPLL_IsReady+0x1c>
1004ccbe:	2300      	movs	r3, #0
}
1004ccc0:	0018      	movs	r0, r3
1004ccc2:	46bd      	mov	sp, r7
1004ccc4:	bd80      	pop	{r7, pc}
1004ccc6:	46c0      	nop			@ (mov r8, r8)
1004ccc8:	48400000 	.word	0x48400000

1004cccc <LL_RCC_SetRC64MPLLPrescaler>:
  *         @arg @ref LL_RCC_RC64MPLL_DIV_32
  *         @arg @ref LL_RCC_RC64MPLL_DIV_64
  * @retval None
  */
__STATIC_INLINE void LL_RCC_SetRC64MPLLPrescaler(uint32_t Prescaler)
{
1004cccc:	b580      	push	{r7, lr}
1004ccce:	b082      	sub	sp, #8
1004ccd0:	af00      	add	r7, sp, #0
1004ccd2:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_CLKSYSDIV, Prescaler);
1004ccd4:	4b06      	ldr	r3, [pc, #24]	@ (1004ccf0 <LL_RCC_SetRC64MPLLPrescaler+0x24>)
1004ccd6:	689b      	ldr	r3, [r3, #8]
1004ccd8:	22e0      	movs	r2, #224	@ 0xe0
1004ccda:	4393      	bics	r3, r2
1004ccdc:	0019      	movs	r1, r3
1004ccde:	4b04      	ldr	r3, [pc, #16]	@ (1004ccf0 <LL_RCC_SetRC64MPLLPrescaler+0x24>)
1004cce0:	687a      	ldr	r2, [r7, #4]
1004cce2:	430a      	orrs	r2, r1
1004cce4:	609a      	str	r2, [r3, #8]
}
1004cce6:	46c0      	nop			@ (mov r8, r8)
1004cce8:	46bd      	mov	sp, r7
1004ccea:	b002      	add	sp, #8
1004ccec:	bd80      	pop	{r7, pc}
1004ccee:	46c0      	nop			@ (mov r8, r8)
1004ccf0:	48400000 	.word	0x48400000

1004ccf4 <HAL_RCC_OscConfig>:
  * @param  RCC_OscInitStruct  pointer to a @ref RCC_OscInitTypeDef structure that
  *         contains the configuration information for the RCC Oscillators.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
1004ccf4:	b580      	push	{r7, lr}
1004ccf6:	b084      	sub	sp, #16
1004ccf8:	af00      	add	r7, sp, #0
1004ccfa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
1004ccfc:	687b      	ldr	r3, [r7, #4]
1004ccfe:	2b00      	cmp	r3, #0
1004cd00:	d101      	bne.n	1004cd06 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
1004cd02:	2301      	movs	r3, #1
1004cd04:	e13c      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  
  /*------------------------------- HSI Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
1004cd06:	687b      	ldr	r3, [r7, #4]
1004cd08:	681b      	ldr	r3, [r3, #0]
1004cd0a:	2210      	movs	r2, #16
1004cd0c:	4013      	ands	r3, r2
1004cd0e:	d033      	beq.n	1004cd78 <HAL_RCC_OscConfig+0x84>
  {
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
1004cd10:	687b      	ldr	r3, [r7, #4]
1004cd12:	689b      	ldr	r3, [r3, #8]
1004cd14:	2b00      	cmp	r3, #0
1004cd16:	d102      	bne.n	1004cd1e <HAL_RCC_OscConfig+0x2a>
1004cd18:	f7ff fe96 	bl	1004ca48 <LL_RCC_HSI_Enable>
1004cd1c:	e001      	b.n	1004cd22 <HAL_RCC_OscConfig+0x2e>
1004cd1e:	f7ff fea7 	bl	1004ca70 <LL_RCC_HSI_Disable>

    if(RCC_OscInitStruct->HSIState == RCC_HSI_OFF)
1004cd22:	687b      	ldr	r3, [r7, #4]
1004cd24:	689b      	ldr	r3, [r3, #8]
1004cd26:	2b04      	cmp	r3, #4
1004cd28:	d113      	bne.n	1004cd52 <HAL_RCC_OscConfig+0x5e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004cd2a:	f7fc ff43 	bl	10049bb4 <HAL_GetTick>
1004cd2e:	0003      	movs	r3, r0
1004cd30:	60fb      	str	r3, [r7, #12]

      /* Wait till HSI is disabled */
      while (LL_RCC_HSI_IsReady() == 1U)
1004cd32:	e008      	b.n	1004cd46 <HAL_RCC_OscConfig+0x52>
      {
        if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
1004cd34:	f7fc ff3e 	bl	10049bb4 <HAL_GetTick>
1004cd38:	0002      	movs	r2, r0
1004cd3a:	68fb      	ldr	r3, [r7, #12]
1004cd3c:	1ad3      	subs	r3, r2, r3
1004cd3e:	2b64      	cmp	r3, #100	@ 0x64
1004cd40:	d901      	bls.n	1004cd46 <HAL_RCC_OscConfig+0x52>
        {
          return HAL_TIMEOUT;
1004cd42:	2303      	movs	r3, #3
1004cd44:	e11c      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (LL_RCC_HSI_IsReady() == 1U)
1004cd46:	f7ff fea7 	bl	1004ca98 <LL_RCC_HSI_IsReady>
1004cd4a:	0003      	movs	r3, r0
1004cd4c:	2b01      	cmp	r3, #1
1004cd4e:	d0f1      	beq.n	1004cd34 <HAL_RCC_OscConfig+0x40>
1004cd50:	e012      	b.n	1004cd78 <HAL_RCC_OscConfig+0x84>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004cd52:	f7fc ff2f 	bl	10049bb4 <HAL_GetTick>
1004cd56:	0003      	movs	r3, r0
1004cd58:	60fb      	str	r3, [r7, #12]

      /* Wait till HSI is enabled */
      while (LL_RCC_HSI_IsReady() != 1U)
1004cd5a:	e008      	b.n	1004cd6e <HAL_RCC_OscConfig+0x7a>
      {
        if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
1004cd5c:	f7fc ff2a 	bl	10049bb4 <HAL_GetTick>
1004cd60:	0002      	movs	r2, r0
1004cd62:	68fb      	ldr	r3, [r7, #12]
1004cd64:	1ad3      	subs	r3, r2, r3
1004cd66:	2b64      	cmp	r3, #100	@ 0x64
1004cd68:	d901      	bls.n	1004cd6e <HAL_RCC_OscConfig+0x7a>
        {
          return HAL_TIMEOUT;
1004cd6a:	2303      	movs	r3, #3
1004cd6c:	e108      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (LL_RCC_HSI_IsReady() != 1U)
1004cd6e:	f7ff fe93 	bl	1004ca98 <LL_RCC_HSI_IsReady>
1004cd72:	0003      	movs	r3, r0
1004cd74:	2b01      	cmp	r3, #1
1004cd76:	d1f1      	bne.n	1004cd5c <HAL_RCC_OscConfig+0x68>
      }
    }
  }

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
1004cd78:	687b      	ldr	r3, [r7, #4]
1004cd7a:	681b      	ldr	r3, [r3, #0]
1004cd7c:	2201      	movs	r2, #1
1004cd7e:	4013      	ands	r3, r2
1004cd80:	d039      	beq.n	1004cdf6 <HAL_RCC_OscConfig+0x102>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* Set HSE Capacitor Tuning */
    LL_RCC_HSE_SetCapacitorTuning(CFG_HW_RCC_HSE_CAPACITOR_TUNE);
1004cd82:	2020      	movs	r0, #32
1004cd84:	f7ff fe2a 	bl	1004c9dc <LL_RCC_HSE_SetCapacitorTuning>

    /* Set HSE Current Control */
    LL_RCC_HSE_SetCurrentControl(LL_RCC_HSE_CURRENTMAX_3);
1004cd88:	2030      	movs	r0, #48	@ 0x30
1004cd8a:	f7ff fe47 	bl	1004ca1c <LL_RCC_HSE_SetCurrentControl>

    /* Set the new HSE configuration ---------------------------------------*/
    __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
1004cd8e:	687b      	ldr	r3, [r7, #4]
1004cd90:	685a      	ldr	r2, [r3, #4]
1004cd92:	2380      	movs	r3, #128	@ 0x80
1004cd94:	025b      	lsls	r3, r3, #9
1004cd96:	429a      	cmp	r2, r3
1004cd98:	d102      	bne.n	1004cda0 <HAL_RCC_OscConfig+0xac>
1004cd9a:	f7ff fded 	bl	1004c978 <LL_RCC_HSE_Enable>
1004cd9e:	e001      	b.n	1004cda4 <HAL_RCC_OscConfig+0xb0>
1004cda0:	f7ff fdf8 	bl	1004c994 <LL_RCC_HSE_Disable>

    /* Check the HSE State */
    if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
1004cda4:	687b      	ldr	r3, [r7, #4]
1004cda6:	685b      	ldr	r3, [r3, #4]
1004cda8:	2b00      	cmp	r3, #0
1004cdaa:	d012      	beq.n	1004cdd2 <HAL_RCC_OscConfig+0xde>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004cdac:	f7fc ff02 	bl	10049bb4 <HAL_GetTick>
1004cdb0:	0003      	movs	r3, r0
1004cdb2:	60fb      	str	r3, [r7, #12]

      /* Wait till HSE is ready */
      while (LL_RCC_HSE_IsReady() == 0U)
1004cdb4:	e008      	b.n	1004cdc8 <HAL_RCC_OscConfig+0xd4>
      {
        if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
1004cdb6:	f7fc fefd 	bl	10049bb4 <HAL_GetTick>
1004cdba:	0002      	movs	r2, r0
1004cdbc:	68fb      	ldr	r3, [r7, #12]
1004cdbe:	1ad3      	subs	r3, r2, r3
1004cdc0:	2b64      	cmp	r3, #100	@ 0x64
1004cdc2:	d901      	bls.n	1004cdc8 <HAL_RCC_OscConfig+0xd4>
        {
          return HAL_TIMEOUT;
1004cdc4:	2303      	movs	r3, #3
1004cdc6:	e0db      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (LL_RCC_HSE_IsReady() == 0U)
1004cdc8:	f7ff fdf4 	bl	1004c9b4 <LL_RCC_HSE_IsReady>
1004cdcc:	1e03      	subs	r3, r0, #0
1004cdce:	d0f2      	beq.n	1004cdb6 <HAL_RCC_OscConfig+0xc2>
1004cdd0:	e011      	b.n	1004cdf6 <HAL_RCC_OscConfig+0x102>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004cdd2:	f7fc feef 	bl	10049bb4 <HAL_GetTick>
1004cdd6:	0003      	movs	r3, r0
1004cdd8:	60fb      	str	r3, [r7, #12]

      /* Wait till HSE is disabled */
      while (LL_RCC_HSE_IsReady() != 0U)
1004cdda:	e008      	b.n	1004cdee <HAL_RCC_OscConfig+0xfa>
      {
        if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
1004cddc:	f7fc feea 	bl	10049bb4 <HAL_GetTick>
1004cde0:	0002      	movs	r2, r0
1004cde2:	68fb      	ldr	r3, [r7, #12]
1004cde4:	1ad3      	subs	r3, r2, r3
1004cde6:	2b64      	cmp	r3, #100	@ 0x64
1004cde8:	d901      	bls.n	1004cdee <HAL_RCC_OscConfig+0xfa>
        {
          return HAL_TIMEOUT;
1004cdea:	2303      	movs	r3, #3
1004cdec:	e0c8      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (LL_RCC_HSE_IsReady() != 0U)
1004cdee:	f7ff fde1 	bl	1004c9b4 <LL_RCC_HSE_IsReady>
1004cdf2:	1e03      	subs	r3, r0, #0
1004cdf4:	d1f2      	bne.n	1004cddc <HAL_RCC_OscConfig+0xe8>
      }
    }
  }

  /*--------------------------------- LSI Configuration -----------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
1004cdf6:	687b      	ldr	r3, [r7, #4]
1004cdf8:	681b      	ldr	r3, [r3, #0]
1004cdfa:	2204      	movs	r2, #4
1004cdfc:	4013      	ands	r3, r2
1004cdfe:	d03a      	beq.n	1004ce76 <HAL_RCC_OscConfig+0x182>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
1004ce00:	687b      	ldr	r3, [r7, #4]
1004ce02:	691b      	ldr	r3, [r3, #16]
1004ce04:	2b00      	cmp	r3, #0
1004ce06:	d022      	beq.n	1004ce4e <HAL_RCC_OscConfig+0x15a>
    {
      /* Disable the LSI */
      __HAL_RCC_LSI_DISABLE();
1004ce08:	f7ff ff10 	bl	1004cc2c <LL_RCC_LSI_Disable>
      while (__HAL_RCC_GET_LSI_READYFLAG() != 0U);
1004ce0c:	46c0      	nop			@ (mov r8, r8)
1004ce0e:	f7ff ff1b 	bl	1004cc48 <LL_RCC_LSI_IsReady>
1004ce12:	1e03      	subs	r3, r0, #0
1004ce14:	d1fb      	bne.n	1004ce0e <HAL_RCC_OscConfig+0x11a>

      /* Disable the LSE */
      __HAL_RCC_LSE_CONFIG(RCC_LSE_OFF);
1004ce16:	f7ff fe9d 	bl	1004cb54 <LL_RCC_LSE_Disable>

      /* Configure the Low Speed Clock to LSI */
      LL_RCC_LSCO_SetSource(LL_RCC_LSCO_CLKSOURCE_LSI);
1004ce1a:	2380      	movs	r3, #128	@ 0x80
1004ce1c:	025b      	lsls	r3, r3, #9
1004ce1e:	0018      	movs	r0, r3
1004ce20:	f7ff fe74 	bl	1004cb0c <LL_RCC_LSCO_SetSource>

      /*  Enable the Internal Low Speed oscillator (LSI)  */
      __HAL_RCC_LSI_ENABLE();
1004ce24:	f7ff fef4 	bl	1004cc10 <LL_RCC_LSI_Enable>

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004ce28:	f7fc fec4 	bl	10049bb4 <HAL_GetTick>
1004ce2c:	0003      	movs	r3, r0
1004ce2e:	60fb      	str	r3, [r7, #12]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_LSI_READYFLAG() == 0U)
1004ce30:	e008      	b.n	1004ce44 <HAL_RCC_OscConfig+0x150>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
1004ce32:	f7fc febf 	bl	10049bb4 <HAL_GetTick>
1004ce36:	0002      	movs	r2, r0
1004ce38:	68fb      	ldr	r3, [r7, #12]
1004ce3a:	1ad3      	subs	r3, r2, r3
1004ce3c:	2b02      	cmp	r3, #2
1004ce3e:	d901      	bls.n	1004ce44 <HAL_RCC_OscConfig+0x150>
        {
          return HAL_TIMEOUT;
1004ce40:	2303      	movs	r3, #3
1004ce42:	e09d      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (__HAL_RCC_GET_LSI_READYFLAG() == 0U)
1004ce44:	f7ff ff00 	bl	1004cc48 <LL_RCC_LSI_IsReady>
1004ce48:	1e03      	subs	r3, r0, #0
1004ce4a:	d0f2      	beq.n	1004ce32 <HAL_RCC_OscConfig+0x13e>
1004ce4c:	e013      	b.n	1004ce76 <HAL_RCC_OscConfig+0x182>
    }
    else
    {

      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
1004ce4e:	f7ff feed 	bl	1004cc2c <LL_RCC_LSI_Disable>

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004ce52:	f7fc feaf 	bl	10049bb4 <HAL_GetTick>
1004ce56:	0003      	movs	r3, r0
1004ce58:	60fb      	str	r3, [r7, #12]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_LSI_READYFLAG() != 0U)
1004ce5a:	e008      	b.n	1004ce6e <HAL_RCC_OscConfig+0x17a>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
1004ce5c:	f7fc feaa 	bl	10049bb4 <HAL_GetTick>
1004ce60:	0002      	movs	r2, r0
1004ce62:	68fb      	ldr	r3, [r7, #12]
1004ce64:	1ad3      	subs	r3, r2, r3
1004ce66:	2b02      	cmp	r3, #2
1004ce68:	d901      	bls.n	1004ce6e <HAL_RCC_OscConfig+0x17a>
        {
          return HAL_TIMEOUT;
1004ce6a:	2303      	movs	r3, #3
1004ce6c:	e088      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (__HAL_RCC_GET_LSI_READYFLAG() != 0U)
1004ce6e:	f7ff feeb 	bl	1004cc48 <LL_RCC_LSI_IsReady>
1004ce72:	1e03      	subs	r3, r0, #0
1004ce74:	d1f2      	bne.n	1004ce5c <HAL_RCC_OscConfig+0x168>
      }
    }
  }

  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
1004ce76:	687b      	ldr	r3, [r7, #4]
1004ce78:	681b      	ldr	r3, [r3, #0]
1004ce7a:	2202      	movs	r2, #2
1004ce7c:	4013      	ands	r3, r2
1004ce7e:	d047      	beq.n	1004cf10 <HAL_RCC_OscConfig+0x21c>

    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Disable LSI */
    __HAL_RCC_LSI_DISABLE();
1004ce80:	f7ff fed4 	bl	1004cc2c <LL_RCC_LSI_Disable>

    /* Disable LSE */
    __HAL_RCC_LSE_CONFIG(RCC_LSE_OFF);
1004ce84:	f7ff fe66 	bl	1004cb54 <LL_RCC_LSE_Disable>
    while (__HAL_RCC_GET_LSE_READYFLAG() != 0);
1004ce88:	46c0      	nop			@ (mov r8, r8)
1004ce8a:	f7ff fe71 	bl	1004cb70 <LL_RCC_LSE_IsReady>
1004ce8e:	1e03      	subs	r3, r0, #0
1004ce90:	d1fb      	bne.n	1004ce8a <HAL_RCC_OscConfig+0x196>

    /* Configure the PB12 and PB13 in NO PULL mode */
    LL_PWR_SetNoPullB(LL_PWR_GPIO_BIT_12 |
1004ce92:	23c0      	movs	r3, #192	@ 0xc0
1004ce94:	019b      	lsls	r3, r3, #6
1004ce96:	0018      	movs	r0, r3
1004ce98:	f7ff fd56 	bl	1004c948 <LL_PWR_SetNoPullB>
                      LL_PWR_GPIO_BIT_13);

    /* Configure the Low Speed Clock to LSE */
    LL_RCC_LSCO_SetSource(LL_RCC_LSCO_CLKSOURCE_LSE);
1004ce9c:	2380      	movs	r3, #128	@ 0x80
1004ce9e:	021b      	lsls	r3, r3, #8
1004cea0:	0018      	movs	r0, r3
1004cea2:	f7ff fe33 	bl	1004cb0c <LL_RCC_LSCO_SetSource>

    /* Set LSE oscillator drive capability */
    __HAL_RCC_LSEDRIVE_CONFIG(LSE_DRIVE_LEVEL);
1004cea6:	2020      	movs	r0, #32
1004cea8:	f7ff fe9e 	bl	1004cbe8 <LL_RCC_LSE_SetDriveCapability>


    /* Set the new LSE state */
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
1004ceac:	687b      	ldr	r3, [r7, #4]
1004ceae:	68db      	ldr	r3, [r3, #12]
1004ceb0:	2b10      	cmp	r3, #16
1004ceb2:	d102      	bne.n	1004ceba <HAL_RCC_OscConfig+0x1c6>
1004ceb4:	f7ff fe40 	bl	1004cb38 <LL_RCC_LSE_Enable>
1004ceb8:	e001      	b.n	1004cebe <HAL_RCC_OscConfig+0x1ca>
1004ceba:	f7ff fe4b 	bl	1004cb54 <LL_RCC_LSE_Disable>

    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
1004cebe:	687b      	ldr	r3, [r7, #4]
1004cec0:	68db      	ldr	r3, [r3, #12]
1004cec2:	2b00      	cmp	r3, #0
1004cec4:	d012      	beq.n	1004ceec <HAL_RCC_OscConfig+0x1f8>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004cec6:	f7fc fe75 	bl	10049bb4 <HAL_GetTick>
1004ceca:	0003      	movs	r3, r0
1004cecc:	60fb      	str	r3, [r7, #12]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_LSE_READYFLAG() == 0U)
1004cece:	e008      	b.n	1004cee2 <HAL_RCC_OscConfig+0x1ee>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
1004ced0:	f7fc fe70 	bl	10049bb4 <HAL_GetTick>
1004ced4:	0002      	movs	r2, r0
1004ced6:	68fb      	ldr	r3, [r7, #12]
1004ced8:	1ad3      	subs	r3, r2, r3
1004ceda:	2b64      	cmp	r3, #100	@ 0x64
1004cedc:	d901      	bls.n	1004cee2 <HAL_RCC_OscConfig+0x1ee>
        {
          return HAL_TIMEOUT;
1004cede:	2303      	movs	r3, #3
1004cee0:	e04e      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (__HAL_RCC_GET_LSE_READYFLAG() == 0U)
1004cee2:	f7ff fe45 	bl	1004cb70 <LL_RCC_LSE_IsReady>
1004cee6:	1e03      	subs	r3, r0, #0
1004cee8:	d0f2      	beq.n	1004ced0 <HAL_RCC_OscConfig+0x1dc>
1004ceea:	e011      	b.n	1004cf10 <HAL_RCC_OscConfig+0x21c>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004ceec:	f7fc fe62 	bl	10049bb4 <HAL_GetTick>
1004cef0:	0003      	movs	r3, r0
1004cef2:	60fb      	str	r3, [r7, #12]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_LSE_READYFLAG() != 0U)
1004cef4:	e008      	b.n	1004cf08 <HAL_RCC_OscConfig+0x214>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
1004cef6:	f7fc fe5d 	bl	10049bb4 <HAL_GetTick>
1004cefa:	0002      	movs	r2, r0
1004cefc:	68fb      	ldr	r3, [r7, #12]
1004cefe:	1ad3      	subs	r3, r2, r3
1004cf00:	2b64      	cmp	r3, #100	@ 0x64
1004cf02:	d901      	bls.n	1004cf08 <HAL_RCC_OscConfig+0x214>
        {
          return HAL_TIMEOUT;
1004cf04:	2303      	movs	r3, #3
1004cf06:	e03b      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (__HAL_RCC_GET_LSE_READYFLAG() != 0U)
1004cf08:	f7ff fe32 	bl	1004cb70 <LL_RCC_LSE_IsReady>
1004cf0c:	1e03      	subs	r3, r0, #0
1004cf0e:	d1f2      	bne.n	1004cef6 <HAL_RCC_OscConfig+0x202>
      }
    }
  }

  /*------------------------------ LSE Bypass Configuration ------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE_BYPASS) == RCC_OSCILLATORTYPE_LSE_BYPASS)
1004cf10:	687b      	ldr	r3, [r7, #4]
1004cf12:	681b      	ldr	r3, [r3, #0]
1004cf14:	2208      	movs	r2, #8
1004cf16:	4013      	ands	r3, r2
1004cf18:	d031      	beq.n	1004cf7e <HAL_RCC_OscConfig+0x28a>

    /* Check the parameters */
    assert_param(IS_RCC_LSE_BYPASS(RCC_OscInitStruct->LSEBYPASSState));

    /* Set the new LSE Bypass configuration -----------------------------------------*/
    __HAL_RCC_LSE_BYPASS_CONFIG(RCC_OscInitStruct->LSEBYPASSState);
1004cf1a:	687b      	ldr	r3, [r7, #4]
1004cf1c:	695b      	ldr	r3, [r3, #20]
1004cf1e:	2b40      	cmp	r3, #64	@ 0x40
1004cf20:	d102      	bne.n	1004cf28 <HAL_RCC_OscConfig+0x234>
1004cf22:	f7ff fe35 	bl	1004cb90 <LL_RCC_LSE_EnableBypass>
1004cf26:	e001      	b.n	1004cf2c <HAL_RCC_OscConfig+0x238>
1004cf28:	f7ff fe40 	bl	1004cbac <LL_RCC_LSE_DisableBypass>

    /* Check the LSE Bypass State */
    if (RCC_OscInitStruct->LSEBYPASSState != RCC_LSE_OFF)
1004cf2c:	687b      	ldr	r3, [r7, #4]
1004cf2e:	695b      	ldr	r3, [r3, #20]
1004cf30:	2b00      	cmp	r3, #0
1004cf32:	d012      	beq.n	1004cf5a <HAL_RCC_OscConfig+0x266>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004cf34:	f7fc fe3e 	bl	10049bb4 <HAL_GetTick>
1004cf38:	0003      	movs	r3, r0
1004cf3a:	60fb      	str	r3, [r7, #12]

      /* Wait till LSE is ready */
      while (LL_RCC_LSE_IsBypassEnabled() == 0U)
1004cf3c:	e008      	b.n	1004cf50 <HAL_RCC_OscConfig+0x25c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
1004cf3e:	f7fc fe39 	bl	10049bb4 <HAL_GetTick>
1004cf42:	0002      	movs	r2, r0
1004cf44:	68fb      	ldr	r3, [r7, #12]
1004cf46:	1ad3      	subs	r3, r2, r3
1004cf48:	2b64      	cmp	r3, #100	@ 0x64
1004cf4a:	d901      	bls.n	1004cf50 <HAL_RCC_OscConfig+0x25c>
        {
          return HAL_TIMEOUT;
1004cf4c:	2303      	movs	r3, #3
1004cf4e:	e017      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (LL_RCC_LSE_IsBypassEnabled() == 0U)
1004cf50:	f7ff fe3a 	bl	1004cbc8 <LL_RCC_LSE_IsBypassEnabled>
1004cf54:	1e03      	subs	r3, r0, #0
1004cf56:	d0f2      	beq.n	1004cf3e <HAL_RCC_OscConfig+0x24a>
1004cf58:	e011      	b.n	1004cf7e <HAL_RCC_OscConfig+0x28a>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
1004cf5a:	f7fc fe2b 	bl	10049bb4 <HAL_GetTick>
1004cf5e:	0003      	movs	r3, r0
1004cf60:	60fb      	str	r3, [r7, #12]

      /* Wait till LSE is disabled */
      while (LL_RCC_LSE_IsBypassEnabled() != 0U)
1004cf62:	e008      	b.n	1004cf76 <HAL_RCC_OscConfig+0x282>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
1004cf64:	f7fc fe26 	bl	10049bb4 <HAL_GetTick>
1004cf68:	0002      	movs	r2, r0
1004cf6a:	68fb      	ldr	r3, [r7, #12]
1004cf6c:	1ad3      	subs	r3, r2, r3
1004cf6e:	2b64      	cmp	r3, #100	@ 0x64
1004cf70:	d901      	bls.n	1004cf76 <HAL_RCC_OscConfig+0x282>
        {
          return HAL_TIMEOUT;
1004cf72:	2303      	movs	r3, #3
1004cf74:	e004      	b.n	1004cf80 <HAL_RCC_OscConfig+0x28c>
      while (LL_RCC_LSE_IsBypassEnabled() != 0U)
1004cf76:	f7ff fe27 	bl	1004cbc8 <LL_RCC_LSE_IsBypassEnabled>
1004cf7a:	1e03      	subs	r3, r0, #0
1004cf7c:	d1f2      	bne.n	1004cf64 <HAL_RCC_OscConfig+0x270>
        }
      }
    }
  }

  return HAL_OK;
1004cf7e:	2300      	movs	r3, #0
}
1004cf80:	0018      	movs	r0, r3
1004cf82:	46bd      	mov	sp, r7
1004cf84:	b004      	add	sp, #16
1004cf86:	bd80      	pop	{r7, pc}

1004cf88 <HAL_RCC_ClockConfig>:
  *         currently used as system clock source.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
1004cf88:	b580      	push	{r7, lr}
1004cf8a:	b084      	sub	sp, #16
1004cf8c:	af00      	add	r7, sp, #0
1004cf8e:	6078      	str	r0, [r7, #4]
1004cf90:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
1004cf92:	687b      	ldr	r3, [r7, #4]
1004cf94:	2b00      	cmp	r3, #0
1004cf96:	d101      	bne.n	1004cf9c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
1004cf98:	2301      	movs	r3, #1
1004cf9a:	e098      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>

  /* Check the parameters */
  assert_param(IS_FLASH_WAIT_STATES(FLatency));

  /* Set FALSH_WAIT_STATES_1 */
  __HAL_FLASH_SET_WAIT_STATES(FLatency);
1004cf9c:	4b4e      	ldr	r3, [pc, #312]	@ (1004d0d8 <HAL_RCC_ClockConfig+0x150>)
1004cf9e:	685b      	ldr	r3, [r3, #4]
1004cfa0:	2230      	movs	r2, #48	@ 0x30
1004cfa2:	4393      	bics	r3, r2
1004cfa4:	0019      	movs	r1, r3
1004cfa6:	4b4c      	ldr	r3, [pc, #304]	@ (1004d0d8 <HAL_RCC_ClockConfig+0x150>)
1004cfa8:	683a      	ldr	r2, [r7, #0]
1004cfaa:	430a      	orrs	r2, r1
1004cfac:	605a      	str	r2, [r3, #4]
  /*------------------------- SYSCLK Configuration ---------------------------*/
  assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
  assert_param(IS_RCC_SYSCLK_DIVIDER(RCC_ClkInitStruct->SYSCLKDivider));

  /* HSI is selected as System Clock Source */
  if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
1004cfae:	687b      	ldr	r3, [r7, #4]
1004cfb0:	681b      	ldr	r3, [r3, #0]
1004cfb2:	2b02      	cmp	r3, #2
1004cfb4:	d10e      	bne.n	1004cfd4 <HAL_RCC_ClockConfig+0x4c>
  {
    LL_RCC_HSI_Enable();
1004cfb6:	f7ff fd47 	bl	1004ca48 <LL_RCC_HSI_Enable>
    
    /* Check the HSI ready flag */
    if (LL_RCC_HSI_IsReady() == 0U)
1004cfba:	f7ff fd6d 	bl	1004ca98 <LL_RCC_HSI_IsReady>
1004cfbe:	1e03      	subs	r3, r0, #0
1004cfc0:	d101      	bne.n	1004cfc6 <HAL_RCC_ClockConfig+0x3e>
    {
      return HAL_ERROR;
1004cfc2:	2301      	movs	r3, #1
1004cfc4:	e083      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>
    }

    /* Disable the RC64MPLL*/
    __HAL_RCC_RC64MPLL_DISABLE();
1004cfc6:	f7ff fe5d 	bl	1004cc84 <LL_RCC_RC64MPLL_Disable>
    
    /* Configure the RC64MPLL multiplication factor */
    __HAL_RCC_RC64MPLL_PRESC_CONFIG(RCC_ClkInitStruct->SYSCLKDivider);
1004cfca:	687b      	ldr	r3, [r7, #4]
1004cfcc:	685b      	ldr	r3, [r3, #4]
1004cfce:	0018      	movs	r0, r3
1004cfd0:	f7ff fe7c 	bl	1004cccc <LL_RCC_SetRC64MPLLPrescaler>
  }

  /* RC64MPLL is selected as System Clock Source */
  if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_RC64MPLL)
1004cfd4:	687b      	ldr	r3, [r7, #4]
1004cfd6:	681b      	ldr	r3, [r3, #0]
1004cfd8:	2b00      	cmp	r3, #0
1004cfda:	d124      	bne.n	1004d026 <HAL_RCC_ClockConfig+0x9e>
  {
    /* Check the HSI ready flag */
    if (LL_RCC_HSI_IsReady() == 0U)
1004cfdc:	f7ff fd5c 	bl	1004ca98 <LL_RCC_HSI_IsReady>
1004cfe0:	1e03      	subs	r3, r0, #0
1004cfe2:	d101      	bne.n	1004cfe8 <HAL_RCC_ClockConfig+0x60>
    {
      return HAL_ERROR;
1004cfe4:	2301      	movs	r3, #1
1004cfe6:	e072      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>
    }

    /* Check the HSE ready flag */
    if (LL_RCC_HSE_IsReady() == 0U)
1004cfe8:	f7ff fce4 	bl	1004c9b4 <LL_RCC_HSE_IsReady>
1004cfec:	1e03      	subs	r3, r0, #0
1004cfee:	d101      	bne.n	1004cff4 <HAL_RCC_ClockConfig+0x6c>
    {
      return HAL_ERROR;
1004cff0:	2301      	movs	r3, #1
1004cff2:	e06c      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>
    }

    /* Enable the RC64MPLL*/
    __HAL_RCC_RC64MPLL_ENABLE();
1004cff4:	f7ff fe38 	bl	1004cc68 <LL_RCC_RC64MPLL_Enable>

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
1004cff8:	f7fc fddc 	bl	10049bb4 <HAL_GetTick>
1004cffc:	0003      	movs	r3, r0
1004cffe:	60fb      	str	r3, [r7, #12]

    /* Wait till RC64MPLL is ready */
    while (LL_RCC_RC64MPLL_IsReady() == 0)
1004d000:	e008      	b.n	1004d014 <HAL_RCC_ClockConfig+0x8c>
    {
      if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
1004d002:	f7fc fdd7 	bl	10049bb4 <HAL_GetTick>
1004d006:	0002      	movs	r2, r0
1004d008:	68fb      	ldr	r3, [r7, #12]
1004d00a:	1ad3      	subs	r3, r2, r3
1004d00c:	2b02      	cmp	r3, #2
1004d00e:	d901      	bls.n	1004d014 <HAL_RCC_ClockConfig+0x8c>
      {
        return HAL_TIMEOUT;
1004d010:	2303      	movs	r3, #3
1004d012:	e05c      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>
    while (LL_RCC_RC64MPLL_IsReady() == 0)
1004d014:	f7ff fe46 	bl	1004cca4 <LL_RCC_RC64MPLL_IsReady>
1004d018:	1e03      	subs	r3, r0, #0
1004d01a:	d0f2      	beq.n	1004d002 <HAL_RCC_ClockConfig+0x7a>
      }
    }

    /* Configure the RC64MPLL multiplication factor */
    __HAL_RCC_RC64MPLL_PRESC_CONFIG(RCC_ClkInitStruct->SYSCLKDivider);
1004d01c:	687b      	ldr	r3, [r7, #4]
1004d01e:	685b      	ldr	r3, [r3, #4]
1004d020:	0018      	movs	r0, r3
1004d022:	f7ff fe53 	bl	1004cccc <LL_RCC_SetRC64MPLLPrescaler>
  }

  /* DIRECT_HSE is selected as System Clock Source */
  if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_DIRECT_HSE)
1004d026:	687b      	ldr	r3, [r7, #4]
1004d028:	681b      	ldr	r3, [r3, #0]
1004d02a:	2b01      	cmp	r3, #1
1004d02c:	d117      	bne.n	1004d05e <HAL_RCC_ClockConfig+0xd6>
  {
    /* Enable the DIRECT_HSE configuration */
    LL_RCC_DIRECT_HSE_Enable();
1004d02e:	f7ff fd47 	bl	1004cac0 <LL_RCC_DIRECT_HSE_Enable>

    /* Check the HSI ready flag */
    if (LL_RCC_HSI_IsReady() != 0U)
1004d032:	f7ff fd31 	bl	1004ca98 <LL_RCC_HSI_IsReady>
1004d036:	1e03      	subs	r3, r0, #0
1004d038:	d001      	beq.n	1004d03e <HAL_RCC_ClockConfig+0xb6>
    {
      return HAL_ERROR;
1004d03a:	2301      	movs	r3, #1
1004d03c:	e047      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>
    }

    /* Check the HSE ready flag */
    if (LL_RCC_HSE_IsReady() == 0U)
1004d03e:	f7ff fcb9 	bl	1004c9b4 <LL_RCC_HSE_IsReady>
1004d042:	1e03      	subs	r3, r0, #0
1004d044:	d101      	bne.n	1004d04a <HAL_RCC_ClockConfig+0xc2>
    {
      return HAL_ERROR;
1004d046:	2301      	movs	r3, #1
1004d048:	e041      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>
    }

    /* Configure the DIRECT_HSE multiplication factor */
    __HAL_RCC_DIRECT_HSE_PRESC_CONFIG(RCC_ClkInitStruct->SYSCLKDivider);
1004d04a:	4b24      	ldr	r3, [pc, #144]	@ (1004d0dc <HAL_RCC_ClockConfig+0x154>)
1004d04c:	689b      	ldr	r3, [r3, #8]
1004d04e:	22e0      	movs	r2, #224	@ 0xe0
1004d050:	4393      	bics	r3, r2
1004d052:	0019      	movs	r1, r3
1004d054:	687b      	ldr	r3, [r7, #4]
1004d056:	685a      	ldr	r2, [r3, #4]
1004d058:	4b20      	ldr	r3, [pc, #128]	@ (1004d0dc <HAL_RCC_ClockConfig+0x154>)
1004d05a:	430a      	orrs	r2, r1
1004d05c:	609a      	str	r2, [r3, #8]
  /*----------------------- FLASH Latency Configuration ------------------------*/
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the FLASH clock */

  /* Setup flash wait states because according the system clock frequency */
  if (FLatency != __HAL_FLASH_GET_WAIT_STATES())
1004d05e:	4b1e      	ldr	r3, [pc, #120]	@ (1004d0d8 <HAL_RCC_ClockConfig+0x150>)
1004d060:	685b      	ldr	r3, [r3, #4]
1004d062:	2230      	movs	r2, #48	@ 0x30
1004d064:	4013      	ands	r3, r2
1004d066:	683a      	ldr	r2, [r7, #0]
1004d068:	429a      	cmp	r2, r3
1004d06a:	d01d      	beq.n	1004d0a8 <HAL_RCC_ClockConfig+0x120>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_CONFIG register */
    __HAL_FLASH_SET_WAIT_STATES(FLatency);
1004d06c:	4b1a      	ldr	r3, [pc, #104]	@ (1004d0d8 <HAL_RCC_ClockConfig+0x150>)
1004d06e:	685b      	ldr	r3, [r3, #4]
1004d070:	2230      	movs	r2, #48	@ 0x30
1004d072:	4393      	bics	r3, r2
1004d074:	0019      	movs	r1, r3
1004d076:	4b18      	ldr	r3, [pc, #96]	@ (1004d0d8 <HAL_RCC_ClockConfig+0x150>)
1004d078:	683a      	ldr	r2, [r7, #0]
1004d07a:	430a      	orrs	r2, r1
1004d07c:	605a      	str	r2, [r3, #4]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
1004d07e:	f7fc fd99 	bl	10049bb4 <HAL_GetTick>
1004d082:	0003      	movs	r3, r0
1004d084:	60fb      	str	r3, [r7, #12]

    /* Check that the new number of wait states is taken into account to access the Flash
       memory by reading the FLASH_CONFIG register */
    while (__HAL_FLASH_GET_WAIT_STATES() != FLatency)
1004d086:	e008      	b.n	1004d09a <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > LATENCY_TIMEOUT_VALUE)
1004d088:	f7fc fd94 	bl	10049bb4 <HAL_GetTick>
1004d08c:	0002      	movs	r2, r0
1004d08e:	68fb      	ldr	r3, [r7, #12]
1004d090:	1ad3      	subs	r3, r2, r3
1004d092:	2b02      	cmp	r3, #2
1004d094:	d901      	bls.n	1004d09a <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
1004d096:	2303      	movs	r3, #3
1004d098:	e019      	b.n	1004d0ce <HAL_RCC_ClockConfig+0x146>
    while (__HAL_FLASH_GET_WAIT_STATES() != FLatency)
1004d09a:	4b0f      	ldr	r3, [pc, #60]	@ (1004d0d8 <HAL_RCC_ClockConfig+0x150>)
1004d09c:	685b      	ldr	r3, [r3, #4]
1004d09e:	2230      	movs	r2, #48	@ 0x30
1004d0a0:	4013      	ands	r3, r2
1004d0a2:	683a      	ldr	r2, [r7, #0]
1004d0a4:	429a      	cmp	r2, r3
1004d0a6:	d1ef      	bne.n	1004d088 <HAL_RCC_ClockConfig+0x100>
  }

  /*---------------------------------------------------------------------------*/

  /* Update the SystemCoreClock global variable */
  for (volatile int i = 0; i < 6; i++)
1004d0a8:	2300      	movs	r3, #0
1004d0aa:	60bb      	str	r3, [r7, #8]
1004d0ac:	e003      	b.n	1004d0b6 <HAL_RCC_ClockConfig+0x12e>
  {
    __asm("NOP");
1004d0ae:	46c0      	nop			@ (mov r8, r8)
  for (volatile int i = 0; i < 6; i++)
1004d0b0:	68bb      	ldr	r3, [r7, #8]
1004d0b2:	3301      	adds	r3, #1
1004d0b4:	60bb      	str	r3, [r7, #8]
1004d0b6:	68bb      	ldr	r3, [r7, #8]
1004d0b8:	2b05      	cmp	r3, #5
1004d0ba:	ddf8      	ble.n	1004d0ae <HAL_RCC_ClockConfig+0x126>
  }
  SystemCoreClockUpdate();
1004d0bc:	f7fc fcd6 	bl	10049a6c <SystemCoreClockUpdate>

  /* Configure the source of time base considering new system clocks settings*/
  return HAL_InitTick(HAL_GetTickPrio());
1004d0c0:	f7fc fd82 	bl	10049bc8 <HAL_GetTickPrio>
1004d0c4:	0003      	movs	r3, r0
1004d0c6:	0018      	movs	r0, r3
1004d0c8:	f7fc fd1a 	bl	10049b00 <HAL_InitTick>
1004d0cc:	0003      	movs	r3, r0
}
1004d0ce:	0018      	movs	r0, r3
1004d0d0:	46bd      	mov	sp, r7
1004d0d2:	b004      	add	sp, #16
1004d0d4:	bd80      	pop	{r7, pc}
1004d0d6:	46c0      	nop			@ (mov r8, r8)
1004d0d8:	40001000 	.word	0x40001000
1004d0dc:	48400000 	.word	0x48400000

1004d0e0 <HAL_RCC_GetSysClockFreq>:
  *         content of the SystemCoreClock CMSIS variable
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
1004d0e0:	b580      	push	{r7, lr}
1004d0e2:	af00      	add	r7, sp, #0
  return SystemCoreClock;
1004d0e4:	4b02      	ldr	r3, [pc, #8]	@ (1004d0f0 <HAL_RCC_GetSysClockFreq+0x10>)
1004d0e6:	681b      	ldr	r3, [r3, #0]
}
1004d0e8:	0018      	movs	r0, r3
1004d0ea:	46bd      	mov	sp, r7
1004d0ec:	bd80      	pop	{r7, pc}
1004d0ee:	46c0      	nop			@ (mov r8, r8)
1004d0f0:	20000bc0 	.word	0x20000bc0

1004d0f4 <LL_RCC_HSE_IsReady>:
{
1004d0f4:	b580      	push	{r7, lr}
1004d0f6:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSERDY) == (RCC_CR_HSERDY)) ? 1UL : 0UL);
1004d0f8:	4b07      	ldr	r3, [pc, #28]	@ (1004d118 <LL_RCC_HSE_IsReady+0x24>)
1004d0fa:	681a      	ldr	r2, [r3, #0]
1004d0fc:	2380      	movs	r3, #128	@ 0x80
1004d0fe:	029b      	lsls	r3, r3, #10
1004d100:	401a      	ands	r2, r3
1004d102:	2380      	movs	r3, #128	@ 0x80
1004d104:	029b      	lsls	r3, r3, #10
1004d106:	429a      	cmp	r2, r3
1004d108:	d101      	bne.n	1004d10e <LL_RCC_HSE_IsReady+0x1a>
1004d10a:	2301      	movs	r3, #1
1004d10c:	e000      	b.n	1004d110 <LL_RCC_HSE_IsReady+0x1c>
1004d10e:	2300      	movs	r3, #0
}
1004d110:	0018      	movs	r0, r3
1004d112:	46bd      	mov	sp, r7
1004d114:	bd80      	pop	{r7, pc}
1004d116:	46c0      	nop			@ (mov r8, r8)
1004d118:	48400000 	.word	0x48400000

1004d11c <LL_RCC_DIRECT_HSE_IsEnabled>:
{
1004d11c:	b580      	push	{r7, lr}
1004d11e:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CFGR, RCC_CFGR_HSESEL_STATUS) == (RCC_CFGR_HSESEL_STATUS)) ? 1UL : 0UL);
1004d120:	4b05      	ldr	r3, [pc, #20]	@ (1004d138 <LL_RCC_DIRECT_HSE_IsEnabled+0x1c>)
1004d122:	689b      	ldr	r3, [r3, #8]
1004d124:	2208      	movs	r2, #8
1004d126:	4013      	ands	r3, r2
1004d128:	2b08      	cmp	r3, #8
1004d12a:	d101      	bne.n	1004d130 <LL_RCC_DIRECT_HSE_IsEnabled+0x14>
1004d12c:	2301      	movs	r3, #1
1004d12e:	e000      	b.n	1004d132 <LL_RCC_DIRECT_HSE_IsEnabled+0x16>
1004d130:	2300      	movs	r3, #0
}
1004d132:	0018      	movs	r0, r3
1004d134:	46bd      	mov	sp, r7
1004d136:	bd80      	pop	{r7, pc}
1004d138:	48400000 	.word	0x48400000

1004d13c <LL_RCC_LSCO_SetSource>:
{
1004d13c:	b580      	push	{r7, lr}
1004d13e:	b082      	sub	sp, #8
1004d140:	af00      	add	r7, sp, #0
1004d142:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_CLKSLOWSEL, Source);
1004d144:	4b06      	ldr	r3, [pc, #24]	@ (1004d160 <LL_RCC_LSCO_SetSource+0x24>)
1004d146:	689b      	ldr	r3, [r3, #8]
1004d148:	4a06      	ldr	r2, [pc, #24]	@ (1004d164 <LL_RCC_LSCO_SetSource+0x28>)
1004d14a:	4013      	ands	r3, r2
1004d14c:	0019      	movs	r1, r3
1004d14e:	4b04      	ldr	r3, [pc, #16]	@ (1004d160 <LL_RCC_LSCO_SetSource+0x24>)
1004d150:	687a      	ldr	r2, [r7, #4]
1004d152:	430a      	orrs	r2, r1
1004d154:	609a      	str	r2, [r3, #8]
}
1004d156:	46c0      	nop			@ (mov r8, r8)
1004d158:	46bd      	mov	sp, r7
1004d15a:	b002      	add	sp, #8
1004d15c:	bd80      	pop	{r7, pc}
1004d15e:	46c0      	nop			@ (mov r8, r8)
1004d160:	48400000 	.word	0x48400000
1004d164:	fffe7fff 	.word	0xfffe7fff

1004d168 <LL_RCC_LSCO_GetSource>:
{
1004d168:	b580      	push	{r7, lr}
1004d16a:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_CLKSLOWSEL));
1004d16c:	4b03      	ldr	r3, [pc, #12]	@ (1004d17c <LL_RCC_LSCO_GetSource+0x14>)
1004d16e:	689a      	ldr	r2, [r3, #8]
1004d170:	23c0      	movs	r3, #192	@ 0xc0
1004d172:	025b      	lsls	r3, r3, #9
1004d174:	4013      	ands	r3, r2
}
1004d176:	0018      	movs	r0, r3
1004d178:	46bd      	mov	sp, r7
1004d17a:	bd80      	pop	{r7, pc}
1004d17c:	48400000 	.word	0x48400000

1004d180 <LL_RCC_SetRFClock>:
{
1004d180:	b580      	push	{r7, lr}
1004d182:	b082      	sub	sp, #8
1004d184:	af00      	add	r7, sp, #0
1004d186:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->APB2ENR, RCC_APB2ENR_CLKBLEDIV, Source);
1004d188:	4b06      	ldr	r3, [pc, #24]	@ (1004d1a4 <LL_RCC_SetRFClock+0x24>)
1004d18a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
1004d18c:	2204      	movs	r2, #4
1004d18e:	4393      	bics	r3, r2
1004d190:	0019      	movs	r1, r3
1004d192:	4b04      	ldr	r3, [pc, #16]	@ (1004d1a4 <LL_RCC_SetRFClock+0x24>)
1004d194:	687a      	ldr	r2, [r7, #4]
1004d196:	430a      	orrs	r2, r1
1004d198:	661a      	str	r2, [r3, #96]	@ 0x60
}
1004d19a:	46c0      	nop			@ (mov r8, r8)
1004d19c:	46bd      	mov	sp, r7
1004d19e:	b002      	add	sp, #8
1004d1a0:	bd80      	pop	{r7, pc}
1004d1a2:	46c0      	nop			@ (mov r8, r8)
1004d1a4:	48400000 	.word	0x48400000

1004d1a8 <LL_RCC_GetRFClock>:
{
1004d1a8:	b580      	push	{r7, lr}
1004d1aa:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->APB2ENR, RCC_APB2ENR_CLKBLEDIV));
1004d1ac:	4b03      	ldr	r3, [pc, #12]	@ (1004d1bc <LL_RCC_GetRFClock+0x14>)
1004d1ae:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
1004d1b0:	2204      	movs	r2, #4
1004d1b2:	4013      	ands	r3, r2
}
1004d1b4:	0018      	movs	r0, r3
1004d1b6:	46bd      	mov	sp, r7
1004d1b8:	bd80      	pop	{r7, pc}
1004d1ba:	46c0      	nop			@ (mov r8, r8)
1004d1bc:	48400000 	.word	0x48400000

1004d1c0 <LL_RCC_SetSMPSPrescaler>:
{
1004d1c0:	b580      	push	{r7, lr}
1004d1c2:	b082      	sub	sp, #8
1004d1c4:	af00      	add	r7, sp, #0
1004d1c6:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SMPSDIV, Prescaler);
1004d1c8:	4b06      	ldr	r3, [pc, #24]	@ (1004d1e4 <LL_RCC_SetSMPSPrescaler+0x24>)
1004d1ca:	689b      	ldr	r3, [r3, #8]
1004d1cc:	4a06      	ldr	r2, [pc, #24]	@ (1004d1e8 <LL_RCC_SetSMPSPrescaler+0x28>)
1004d1ce:	4013      	ands	r3, r2
1004d1d0:	0019      	movs	r1, r3
1004d1d2:	4b04      	ldr	r3, [pc, #16]	@ (1004d1e4 <LL_RCC_SetSMPSPrescaler+0x24>)
1004d1d4:	687a      	ldr	r2, [r7, #4]
1004d1d6:	430a      	orrs	r2, r1
1004d1d8:	609a      	str	r2, [r3, #8]
}
1004d1da:	46c0      	nop			@ (mov r8, r8)
1004d1dc:	46bd      	mov	sp, r7
1004d1de:	b002      	add	sp, #8
1004d1e0:	bd80      	pop	{r7, pc}
1004d1e2:	46c0      	nop			@ (mov r8, r8)
1004d1e4:	48400000 	.word	0x48400000
1004d1e8:	ffffefff 	.word	0xffffefff

1004d1ec <LL_RCC_GetSMPSPrescaler>:
{
1004d1ec:	b580      	push	{r7, lr}
1004d1ee:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SMPSDIV));
1004d1f0:	4b03      	ldr	r3, [pc, #12]	@ (1004d200 <LL_RCC_GetSMPSPrescaler+0x14>)
1004d1f2:	689a      	ldr	r2, [r3, #8]
1004d1f4:	2380      	movs	r3, #128	@ 0x80
1004d1f6:	015b      	lsls	r3, r3, #5
1004d1f8:	4013      	ands	r3, r2
}
1004d1fa:	0018      	movs	r0, r3
1004d1fc:	46bd      	mov	sp, r7
1004d1fe:	bd80      	pop	{r7, pc}
1004d200:	48400000 	.word	0x48400000

1004d204 <LL_RCC_SetLPUARTClockSource>:
{
1004d204:	b580      	push	{r7, lr}
1004d206:	b082      	sub	sp, #8
1004d208:	af00      	add	r7, sp, #0
1004d20a:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_LPUCLKSEL, Source);
1004d20c:	4b06      	ldr	r3, [pc, #24]	@ (1004d228 <LL_RCC_SetLPUARTClockSource+0x24>)
1004d20e:	689b      	ldr	r3, [r3, #8]
1004d210:	4a06      	ldr	r2, [pc, #24]	@ (1004d22c <LL_RCC_SetLPUARTClockSource+0x28>)
1004d212:	4013      	ands	r3, r2
1004d214:	0019      	movs	r1, r3
1004d216:	4b04      	ldr	r3, [pc, #16]	@ (1004d228 <LL_RCC_SetLPUARTClockSource+0x24>)
1004d218:	687a      	ldr	r2, [r7, #4]
1004d21a:	430a      	orrs	r2, r1
1004d21c:	609a      	str	r2, [r3, #8]
}
1004d21e:	46c0      	nop			@ (mov r8, r8)
1004d220:	46bd      	mov	sp, r7
1004d222:	b002      	add	sp, #8
1004d224:	bd80      	pop	{r7, pc}
1004d226:	46c0      	nop			@ (mov r8, r8)
1004d228:	48400000 	.word	0x48400000
1004d22c:	ffffdfff 	.word	0xffffdfff

1004d230 <LL_RCC_GetLPUARTClockSource>:
{
1004d230:	b580      	push	{r7, lr}
1004d232:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_LPUCLKSEL));
1004d234:	4b03      	ldr	r3, [pc, #12]	@ (1004d244 <LL_RCC_GetLPUARTClockSource+0x14>)
1004d236:	689a      	ldr	r2, [r3, #8]
1004d238:	2380      	movs	r3, #128	@ 0x80
1004d23a:	019b      	lsls	r3, r3, #6
1004d23c:	4013      	ands	r3, r2
}
1004d23e:	0018      	movs	r0, r3
1004d240:	46bd      	mov	sp, r7
1004d242:	bd80      	pop	{r7, pc}
1004d244:	48400000 	.word	0x48400000

1004d248 <LL_RCC_SetSPI3I2SClockSource>:
{
1004d248:	b580      	push	{r7, lr}
1004d24a:	b082      	sub	sp, #8
1004d24c:	af00      	add	r7, sp, #0
1004d24e:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->CFGR, RCC_CFGR_SPI3I2SCLKSEL, Source);
1004d250:	4b06      	ldr	r3, [pc, #24]	@ (1004d26c <LL_RCC_SetSPI3I2SClockSource+0x24>)
1004d252:	689b      	ldr	r3, [r3, #8]
1004d254:	4a06      	ldr	r2, [pc, #24]	@ (1004d270 <LL_RCC_SetSPI3I2SClockSource+0x28>)
1004d256:	4013      	ands	r3, r2
1004d258:	0019      	movs	r1, r3
1004d25a:	4b04      	ldr	r3, [pc, #16]	@ (1004d26c <LL_RCC_SetSPI3I2SClockSource+0x24>)
1004d25c:	687a      	ldr	r2, [r7, #4]
1004d25e:	430a      	orrs	r2, r1
1004d260:	609a      	str	r2, [r3, #8]
}
1004d262:	46c0      	nop			@ (mov r8, r8)
1004d264:	46bd      	mov	sp, r7
1004d266:	b002      	add	sp, #8
1004d268:	bd80      	pop	{r7, pc}
1004d26a:	46c0      	nop			@ (mov r8, r8)
1004d26c:	48400000 	.word	0x48400000
1004d270:	ff3fffff 	.word	0xff3fffff

1004d274 <LL_RCC_GetSPI3I2SClockSource>:
{
1004d274:	b580      	push	{r7, lr}
1004d276:	af00      	add	r7, sp, #0
  return (uint32_t)(READ_BIT(RCC->CFGR, RCC_CFGR_SPI3I2SCLKSEL));
1004d278:	4b03      	ldr	r3, [pc, #12]	@ (1004d288 <LL_RCC_GetSPI3I2SClockSource+0x14>)
1004d27a:	689a      	ldr	r2, [r3, #8]
1004d27c:	23c0      	movs	r3, #192	@ 0xc0
1004d27e:	041b      	lsls	r3, r3, #16
1004d280:	4013      	ands	r3, r2
}
1004d282:	0018      	movs	r0, r3
1004d284:	46bd      	mov	sp, r7
1004d286:	bd80      	pop	{r7, pc}
1004d288:	48400000 	.word	0x48400000

1004d28c <LL_RCC_RC64MPLL_IsReady>:
{
1004d28c:	b580      	push	{r7, lr}
1004d28e:	af00      	add	r7, sp, #0
  return ((READ_BIT(RCC->CR, RCC_CR_HSIPLLRDY) == (RCC_CR_HSIPLLRDY)) ? 1UL : 0UL);
1004d290:	4b07      	ldr	r3, [pc, #28]	@ (1004d2b0 <LL_RCC_RC64MPLL_IsReady+0x24>)
1004d292:	681a      	ldr	r2, [r3, #0]
1004d294:	2380      	movs	r3, #128	@ 0x80
1004d296:	01db      	lsls	r3, r3, #7
1004d298:	401a      	ands	r2, r3
1004d29a:	2380      	movs	r3, #128	@ 0x80
1004d29c:	01db      	lsls	r3, r3, #7
1004d29e:	429a      	cmp	r2, r3
1004d2a0:	d101      	bne.n	1004d2a6 <LL_RCC_RC64MPLL_IsReady+0x1a>
1004d2a2:	2301      	movs	r3, #1
1004d2a4:	e000      	b.n	1004d2a8 <LL_RCC_RC64MPLL_IsReady+0x1c>
1004d2a6:	2300      	movs	r3, #0
}
1004d2a8:	0018      	movs	r0, r3
1004d2aa:	46bd      	mov	sp, r7
1004d2ac:	bd80      	pop	{r7, pc}
1004d2ae:	46c0      	nop			@ (mov r8, r8)
1004d2b0:	48400000 	.word	0x48400000

1004d2b4 <HAL_RCCEx_PeriphCLKConfig>:
  *  @note   (*) Peripherals are not available on all devices
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
1004d2b4:	b580      	push	{r7, lr}
1004d2b6:	b082      	sub	sp, #8
1004d2b8:	af00      	add	r7, sp, #0
1004d2ba:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*-------------------------- RF_BLE clock source configuration ---------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RF) == RCC_PERIPHCLK_RF))
1004d2bc:	687b      	ldr	r3, [r7, #4]
1004d2be:	681b      	ldr	r3, [r3, #0]
1004d2c0:	2201      	movs	r2, #1
1004d2c2:	4013      	ands	r3, r2
1004d2c4:	d004      	beq.n	1004d2d0 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    assert_param(IS_RCC_RF_BLE_CLOCK_SOURCE(PeriphClkInit->RFClockSelection));
    __HAL_RCC_RF_CLK_SET_CONFIG(PeriphClkInit->RFClockSelection);
1004d2c6:	687b      	ldr	r3, [r7, #4]
1004d2c8:	691b      	ldr	r3, [r3, #16]
1004d2ca:	0018      	movs	r0, r3
1004d2cc:	f7ff ff58 	bl	1004d180 <LL_RCC_SetRFClock>
  }

  /*-------------------------- SMPS clock configuration -------------------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SMPS) == RCC_PERIPHCLK_SMPS))
1004d2d0:	687b      	ldr	r3, [r7, #4]
1004d2d2:	681b      	ldr	r3, [r3, #0]
1004d2d4:	2202      	movs	r2, #2
1004d2d6:	4013      	ands	r3, r2
1004d2d8:	d004      	beq.n	1004d2e4 <HAL_RCCEx_PeriphCLKConfig+0x30>
  {
    assert_param(IS_RCC_SMPS_CLOCK_PRESC(PeriphClkInit->SmpsDivSelection));
    __HAL_RCC_SMPS_DIV_CONFIG(PeriphClkInit->SmpsDivSelection);
1004d2da:	687b      	ldr	r3, [r7, #4]
1004d2dc:	695b      	ldr	r3, [r3, #20]
1004d2de:	0018      	movs	r0, r3
1004d2e0:	f7ff ff6e 	bl	1004d1c0 <LL_RCC_SetSMPSPrescaler>
    __HAL_RCC_SPI2I2S_CLK_CONFIG(PeriphClkInit->SPI2I2SClockSelection);
  }
#endif
#if defined(SPI3)
  /*-------------------------- SPI3_I2S clock source configuration ---------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI3_I2S) == RCC_PERIPHCLK_SPI3_I2S))
1004d2e4:	687b      	ldr	r3, [r7, #4]
1004d2e6:	681b      	ldr	r3, [r3, #0]
1004d2e8:	2208      	movs	r2, #8
1004d2ea:	4013      	ands	r3, r2
1004d2ec:	d004      	beq.n	1004d2f8 <HAL_RCCEx_PeriphCLKConfig+0x44>
  {
    assert_param(IS_RCC_SPI3I2S_CLOCK_SOURCE(PeriphClkInit->SPI3I2SClockSelection));
    __HAL_RCC_SPI3I2S_CLK_CONFIG(PeriphClkInit->SPI3I2SClockSelection);
1004d2ee:	687b      	ldr	r3, [r7, #4]
1004d2f0:	685b      	ldr	r3, [r3, #4]
1004d2f2:	0018      	movs	r0, r3
1004d2f4:	f7ff ffa8 	bl	1004d248 <LL_RCC_SetSPI3I2SClockSource>
  }
#endif

#if defined(RCC_CFGR_LPUCLKSEL)
  /*-------------------------- LPUART1 clock source configuration ---------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1))
1004d2f8:	687b      	ldr	r3, [r7, #4]
1004d2fa:	681b      	ldr	r3, [r3, #0]
1004d2fc:	2210      	movs	r2, #16
1004d2fe:	4013      	ands	r3, r2
1004d300:	d004      	beq.n	1004d30c <HAL_RCCEx_PeriphCLKConfig+0x58>
  {
    assert_param(IS_RCC_LPUART1_CLOCK_SOURCE(PeriphClkInit->LPUART1ClockSelection));
    __HAL_RCC_LPUART1_CLK_CONFIG(PeriphClkInit->LPUART1ClockSelection);
1004d302:	687b      	ldr	r3, [r7, #4]
1004d304:	68db      	ldr	r3, [r3, #12]
1004d306:	0018      	movs	r0, r3
1004d308:	f7ff ff7c 	bl	1004d204 <LL_RCC_SetLPUARTClockSource>
  }
#endif /* RCC_CFGR_LPUCLKSEL */

  /*-------------------------- RTC WDG BLEWKUP clock source configuration ---------------------*/
  if ((((PeriphClkInit->RTCWDGBLEWKUPClockSelection) & RCC_PERIPHCLK_RTC_WDG_BLEWKUP) == RCC_PERIPHCLK_RTC_WDG_BLEWKUP))
1004d30c:	687b      	ldr	r3, [r7, #4]
1004d30e:	689b      	ldr	r3, [r3, #8]
1004d310:	2220      	movs	r2, #32
1004d312:	4013      	ands	r3, r2
1004d314:	d004      	beq.n	1004d320 <HAL_RCCEx_PeriphCLKConfig+0x6c>
  {
    assert_param(IS_RCC_RTC_WDG_BLEWKUP_CLOCK_SOURCE(PeriphClkInit->RTCWDGBLEWKUPClockSelection));
    __HAL_RCC_RTC_WDG_BLEWKUP_CLK_CONFIG(PeriphClkInit->RTCWDGBLEWKUPClockSelection);
1004d316:	687b      	ldr	r3, [r7, #4]
1004d318:	689b      	ldr	r3, [r3, #8]
1004d31a:	0018      	movs	r0, r3
1004d31c:	f7ff ff0e 	bl	1004d13c <LL_RCC_LSCO_SetSource>
  }

  return HAL_OK;
1004d320:	2300      	movs	r3, #0
}
1004d322:	0018      	movs	r0, r3
1004d324:	46bd      	mov	sp, r7
1004d326:	b002      	add	sp, #8
1004d328:	bd80      	pop	{r7, pc}
	...

1004d32c <HAL_RCCEx_GetPeriphCLKFreq>:
  *            @arg @ref RCC_PERIPHCLK_RTC_WDG_BLEWKUP   RTC, WDG and BLEWKUP peripheral clock
  * @retval Frequency in Hz
  * @note   (*) Peripherals are not available on all devices
  */
uint32_t HAL_RCCEx_GetPeriphCLKFreq(uint32_t PeriphClk)
{
1004d32c:	b580      	push	{r7, lr}
1004d32e:	b084      	sub	sp, #16
1004d330:	af00      	add	r7, sp, #0
1004d332:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClk));

  /* No if clausule is covered */
  frequency = 0;
1004d334:	2300      	movs	r3, #0
1004d336:	60fb      	str	r3, [r7, #12]

  switch (PeriphClk)
1004d338:	687b      	ldr	r3, [r7, #4]
1004d33a:	2b20      	cmp	r3, #32
1004d33c:	d900      	bls.n	1004d340 <HAL_RCCEx_GetPeriphCLKFreq+0x14>
1004d33e:	e07b      	b.n	1004d438 <HAL_RCCEx_GetPeriphCLKFreq+0x10c>
1004d340:	687b      	ldr	r3, [r7, #4]
1004d342:	009a      	lsls	r2, r3, #2
1004d344:	4b40      	ldr	r3, [pc, #256]	@ (1004d448 <HAL_RCCEx_GetPeriphCLKFreq+0x11c>)
1004d346:	18d3      	adds	r3, r2, r3
1004d348:	681b      	ldr	r3, [r3, #0]
1004d34a:	469f      	mov	pc, r3
  {
    case RCC_PERIPHCLK_RF :
      switch (__HAL_RCC_RF_CLK_GET_CONFIG())
1004d34c:	f7ff ff2c 	bl	1004d1a8 <LL_RCC_GetRFClock>
1004d350:	1e03      	subs	r3, r0, #0
1004d352:	d002      	beq.n	1004d35a <HAL_RCCEx_GetPeriphCLKFreq+0x2e>
1004d354:	2b04      	cmp	r3, #4
1004d356:	d003      	beq.n	1004d360 <HAL_RCCEx_GetPeriphCLKFreq+0x34>
        case RCC_RF_CLK_16M:
          frequency = HSE_VALUE / 2;
          break;
      }

      break;
1004d358:	e071      	b.n	1004d43e <HAL_RCCEx_GetPeriphCLKFreq+0x112>
          frequency = HSE_VALUE;
1004d35a:	4b3c      	ldr	r3, [pc, #240]	@ (1004d44c <HAL_RCCEx_GetPeriphCLKFreq+0x120>)
1004d35c:	60fb      	str	r3, [r7, #12]
          break;
1004d35e:	e002      	b.n	1004d366 <HAL_RCCEx_GetPeriphCLKFreq+0x3a>
          frequency = HSE_VALUE / 2;
1004d360:	4b3b      	ldr	r3, [pc, #236]	@ (1004d450 <HAL_RCCEx_GetPeriphCLKFreq+0x124>)
1004d362:	60fb      	str	r3, [r7, #12]
          break;
1004d364:	46c0      	nop			@ (mov r8, r8)
      break;
1004d366:	e06a      	b.n	1004d43e <HAL_RCCEx_GetPeriphCLKFreq+0x112>

    case RCC_PERIPHCLK_SMPS :
      switch (__HAL_RCC_GET_SMPS_DIV())
1004d368:	f7ff ff40 	bl	1004d1ec <LL_RCC_GetSMPSPrescaler>
1004d36c:	1e03      	subs	r3, r0, #0
1004d36e:	d004      	beq.n	1004d37a <HAL_RCCEx_GetPeriphCLKFreq+0x4e>
1004d370:	2280      	movs	r2, #128	@ 0x80
1004d372:	0152      	lsls	r2, r2, #5
1004d374:	4293      	cmp	r3, r2
1004d376:	d003      	beq.n	1004d380 <HAL_RCCEx_GetPeriphCLKFreq+0x54>
          break;
        case RCC_SMPSCLK_DIV4:
          frequency = HSE_VALUE / 8;
          break;
      }
      break;
1004d378:	e061      	b.n	1004d43e <HAL_RCCEx_GetPeriphCLKFreq+0x112>
          frequency = HSE_VALUE / 4;
1004d37a:	4b36      	ldr	r3, [pc, #216]	@ (1004d454 <HAL_RCCEx_GetPeriphCLKFreq+0x128>)
1004d37c:	60fb      	str	r3, [r7, #12]
          break;
1004d37e:	e002      	b.n	1004d386 <HAL_RCCEx_GetPeriphCLKFreq+0x5a>
          frequency = HSE_VALUE / 8;
1004d380:	4b35      	ldr	r3, [pc, #212]	@ (1004d458 <HAL_RCCEx_GetPeriphCLKFreq+0x12c>)
1004d382:	60fb      	str	r3, [r7, #12]
          break;
1004d384:	46c0      	nop			@ (mov r8, r8)
      break;
1004d386:	e05a      	b.n	1004d43e <HAL_RCCEx_GetPeriphCLKFreq+0x112>
      }
      break;
#endif

    case RCC_PERIPHCLK_SPI3_I2S :
      if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_DIRECT_HSE)
1004d388:	f7ff fec8 	bl	1004d11c <LL_RCC_DIRECT_HSE_IsEnabled>
1004d38c:	1e03      	subs	r3, r0, #0
1004d38e:	d005      	beq.n	1004d39c <HAL_RCCEx_GetPeriphCLKFreq+0x70>
      {
        if (__HAL_RCC_GET_HSE_READYFLAG() == 0)
1004d390:	f7ff feb0 	bl	1004d0f4 <LL_RCC_HSE_IsReady>
1004d394:	1e03      	subs	r3, r0, #0
1004d396:	d107      	bne.n	1004d3a8 <HAL_RCCEx_GetPeriphCLKFreq+0x7c>
        {
          return 0;
1004d398:	2300      	movs	r3, #0
1004d39a:	e051      	b.n	1004d440 <HAL_RCCEx_GetPeriphCLKFreq+0x114>
        }
      }
      else
      {
        if (__HAL_RCC_RC64MPLL_READYFLAG() == 0)
1004d39c:	f7ff ff76 	bl	1004d28c <LL_RCC_RC64MPLL_IsReady>
1004d3a0:	1e03      	subs	r3, r0, #0
1004d3a2:	d101      	bne.n	1004d3a8 <HAL_RCCEx_GetPeriphCLKFreq+0x7c>
        {
          return 0;
1004d3a4:	2300      	movs	r3, #0
1004d3a6:	e04b      	b.n	1004d440 <HAL_RCCEx_GetPeriphCLKFreq+0x114>
        }
      }
      spiFreqValue = __HAL_RCC_GET_SPI3I2S_CLK_CONFIG();
1004d3a8:	f7ff ff64 	bl	1004d274 <LL_RCC_GetSPI3I2SClockSource>
1004d3ac:	0003      	movs	r3, r0
1004d3ae:	60bb      	str	r3, [r7, #8]
      if (spiFreqValue == RCC_SPI3I2S_CLKSOURCE_16M)
1004d3b0:	68bb      	ldr	r3, [r7, #8]
1004d3b2:	2b00      	cmp	r3, #0
1004d3b4:	d101      	bne.n	1004d3ba <HAL_RCCEx_GetPeriphCLKFreq+0x8e>
      {
        frequency = HSE_VALUE / 2;
1004d3b6:	4b26      	ldr	r3, [pc, #152]	@ (1004d450 <HAL_RCCEx_GetPeriphCLKFreq+0x124>)
1004d3b8:	60fb      	str	r3, [r7, #12]
      }

      if (spiFreqValue == RCC_SPI3I2S_CLKSOURCE_32M)
1004d3ba:	68ba      	ldr	r2, [r7, #8]
1004d3bc:	2380      	movs	r3, #128	@ 0x80
1004d3be:	03db      	lsls	r3, r3, #15
1004d3c0:	429a      	cmp	r2, r3
1004d3c2:	d101      	bne.n	1004d3c8 <HAL_RCCEx_GetPeriphCLKFreq+0x9c>
      {
        frequency = HSE_VALUE;
1004d3c4:	4b21      	ldr	r3, [pc, #132]	@ (1004d44c <HAL_RCCEx_GetPeriphCLKFreq+0x120>)
1004d3c6:	60fb      	str	r3, [r7, #12]
      }
#if defined(RCC_SPI3I2S_CLKSOURCE_64M)
      if (spiFreqValue == RCC_SPI3I2S_CLKSOURCE_64M)
1004d3c8:	68ba      	ldr	r2, [r7, #8]
1004d3ca:	2380      	movs	r3, #128	@ 0x80
1004d3cc:	041b      	lsls	r3, r3, #16
1004d3ce:	429a      	cmp	r2, r3
1004d3d0:	d134      	bne.n	1004d43c <HAL_RCCEx_GetPeriphCLKFreq+0x110>
      {
        frequency = HSE_VALUE * 2;
1004d3d2:	4b22      	ldr	r3, [pc, #136]	@ (1004d45c <HAL_RCCEx_GetPeriphCLKFreq+0x130>)
1004d3d4:	60fb      	str	r3, [r7, #12]
      }
#endif
      break;
1004d3d6:	e031      	b.n	1004d43c <HAL_RCCEx_GetPeriphCLKFreq+0x110>

#if defined(RCC_CFGR_LPUCLKSEL)
    case RCC_PERIPHCLK_LPUART1 :
      switch (__HAL_RCC_GET_LPUART1_CLK_CONFIG())
1004d3d8:	f7ff ff2a 	bl	1004d230 <LL_RCC_GetLPUARTClockSource>
1004d3dc:	0002      	movs	r2, r0
1004d3de:	2380      	movs	r3, #128	@ 0x80
1004d3e0:	019b      	lsls	r3, r3, #6
1004d3e2:	429a      	cmp	r2, r3
1004d3e4:	d103      	bne.n	1004d3ee <HAL_RCCEx_GetPeriphCLKFreq+0xc2>
      {
        case RCC_LPUART1_CLKSOURCE_LSE:
          frequency = LSE_VALUE;
1004d3e6:	2380      	movs	r3, #128	@ 0x80
1004d3e8:	021b      	lsls	r3, r3, #8
1004d3ea:	60fb      	str	r3, [r7, #12]
          break;
1004d3ec:	e002      	b.n	1004d3f4 <HAL_RCCEx_GetPeriphCLKFreq+0xc8>
        case RCC_LPUART1_CLKSOURCE_16M:
        default:
          frequency = HSE_VALUE / 2;
1004d3ee:	4b18      	ldr	r3, [pc, #96]	@ (1004d450 <HAL_RCCEx_GetPeriphCLKFreq+0x124>)
1004d3f0:	60fb      	str	r3, [r7, #12]
          break;
1004d3f2:	46c0      	nop			@ (mov r8, r8)
      }
      break;
1004d3f4:	e023      	b.n	1004d43e <HAL_RCCEx_GetPeriphCLKFreq+0x112>
#endif /* RCC_CFGR_LPUCLKSEL */

    case RCC_PERIPHCLK_RTC_WDG_BLEWKUP :
      switch (LL_RCC_LSCO_GetSource())
1004d3f6:	f7ff feb7 	bl	1004d168 <LL_RCC_LSCO_GetSource>
1004d3fa:	0003      	movs	r3, r0
1004d3fc:	22c0      	movs	r2, #192	@ 0xc0
1004d3fe:	0252      	lsls	r2, r2, #9
1004d400:	4293      	cmp	r3, r2
1004d402:	d014      	beq.n	1004d42e <HAL_RCCEx_GetPeriphCLKFreq+0x102>
1004d404:	22c0      	movs	r2, #192	@ 0xc0
1004d406:	0252      	lsls	r2, r2, #9
1004d408:	4293      	cmp	r3, r2
1004d40a:	d813      	bhi.n	1004d434 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
1004d40c:	2280      	movs	r2, #128	@ 0x80
1004d40e:	0212      	lsls	r2, r2, #8
1004d410:	4293      	cmp	r3, r2
1004d412:	d004      	beq.n	1004d41e <HAL_RCCEx_GetPeriphCLKFreq+0xf2>
1004d414:	2280      	movs	r2, #128	@ 0x80
1004d416:	0252      	lsls	r2, r2, #9
1004d418:	4293      	cmp	r3, r2
1004d41a:	d004      	beq.n	1004d426 <HAL_RCCEx_GetPeriphCLKFreq+0xfa>
          break;
        case LL_RCC_LSCO_CLKSOURCE_HSI64M_DIV2048:
          frequency = HSE_VALUE >> 10;
          break;
        default :
          break;
1004d41c:	e00a      	b.n	1004d434 <HAL_RCCEx_GetPeriphCLKFreq+0x108>
          frequency = LSE_VALUE;
1004d41e:	2380      	movs	r3, #128	@ 0x80
1004d420:	021b      	lsls	r3, r3, #8
1004d422:	60fb      	str	r3, [r7, #12]
          break;
1004d424:	e007      	b.n	1004d436 <HAL_RCCEx_GetPeriphCLKFreq+0x10a>
          frequency = LSI_VALUE;
1004d426:	23fa      	movs	r3, #250	@ 0xfa
1004d428:	01db      	lsls	r3, r3, #7
1004d42a:	60fb      	str	r3, [r7, #12]
          break;
1004d42c:	e003      	b.n	1004d436 <HAL_RCCEx_GetPeriphCLKFreq+0x10a>
          frequency = HSE_VALUE >> 10;
1004d42e:	4b0c      	ldr	r3, [pc, #48]	@ (1004d460 <HAL_RCCEx_GetPeriphCLKFreq+0x134>)
1004d430:	60fb      	str	r3, [r7, #12]
          break;
1004d432:	e000      	b.n	1004d436 <HAL_RCCEx_GetPeriphCLKFreq+0x10a>
          break;
1004d434:	46c0      	nop			@ (mov r8, r8)
      }
      break;
1004d436:	e002      	b.n	1004d43e <HAL_RCCEx_GetPeriphCLKFreq+0x112>
    default :
      break;
1004d438:	46c0      	nop			@ (mov r8, r8)
1004d43a:	e000      	b.n	1004d43e <HAL_RCCEx_GetPeriphCLKFreq+0x112>
      break;
1004d43c:	46c0      	nop			@ (mov r8, r8)
  }

  return (frequency);
1004d43e:	68fb      	ldr	r3, [r7, #12]
}
1004d440:	0018      	movs	r0, r3
1004d442:	46bd      	mov	sp, r7
1004d444:	b004      	add	sp, #16
1004d446:	bd80      	pop	{r7, pc}
1004d448:	1006e7d8 	.word	0x1006e7d8
1004d44c:	01e84800 	.word	0x01e84800
1004d450:	00f42400 	.word	0x00f42400
1004d454:	007a1200 	.word	0x007a1200
1004d458:	003d0900 	.word	0x003d0900
1004d45c:	03d09000 	.word	0x03d09000
1004d460:	00007a12 	.word	0x00007a12

1004d464 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
1004d464:	b580      	push	{r7, lr}
1004d466:	b082      	sub	sp, #8
1004d468:	af00      	add	r7, sp, #0
1004d46a:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
1004d46c:	687b      	ldr	r3, [r7, #4]
1004d46e:	2b00      	cmp	r3, #0
1004d470:	d101      	bne.n	1004d476 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
1004d472:	2301      	movs	r3, #1
1004d474:	e046      	b.n	1004d504 <HAL_UART_Init+0xa0>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
1004d476:	687b      	ldr	r3, [r7, #4]
1004d478:	2288      	movs	r2, #136	@ 0x88
1004d47a:	589b      	ldr	r3, [r3, r2]
1004d47c:	2b00      	cmp	r3, #0
1004d47e:	d107      	bne.n	1004d490 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
1004d480:	687b      	ldr	r3, [r7, #4]
1004d482:	2284      	movs	r2, #132	@ 0x84
1004d484:	2100      	movs	r1, #0
1004d486:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
1004d488:	687b      	ldr	r3, [r7, #4]
1004d48a:	0018      	movs	r0, r3
1004d48c:	f7f4 fe6a 	bl	10042164 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
1004d490:	687b      	ldr	r3, [r7, #4]
1004d492:	2288      	movs	r2, #136	@ 0x88
1004d494:	2124      	movs	r1, #36	@ 0x24
1004d496:	5099      	str	r1, [r3, r2]

  __HAL_UART_DISABLE(huart);
1004d498:	687b      	ldr	r3, [r7, #4]
1004d49a:	681b      	ldr	r3, [r3, #0]
1004d49c:	681a      	ldr	r2, [r3, #0]
1004d49e:	687b      	ldr	r3, [r7, #4]
1004d4a0:	681b      	ldr	r3, [r3, #0]
1004d4a2:	2101      	movs	r1, #1
1004d4a4:	438a      	bics	r2, r1
1004d4a6:	601a      	str	r2, [r3, #0]

  /* Perform advanced settings configuration */
  /* For some items, configuration requires to be done prior TE and RE bits are set */
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
1004d4a8:	687b      	ldr	r3, [r7, #4]
1004d4aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004d4ac:	2b00      	cmp	r3, #0
1004d4ae:	d003      	beq.n	1004d4b8 <HAL_UART_Init+0x54>
  {
    UART_AdvFeatureConfig(huart);
1004d4b0:	687b      	ldr	r3, [r7, #4]
1004d4b2:	0018      	movs	r0, r3
1004d4b4:	f000 fa38 	bl	1004d928 <UART_AdvFeatureConfig>
  }

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
1004d4b8:	687b      	ldr	r3, [r7, #4]
1004d4ba:	0018      	movs	r0, r3
1004d4bc:	f000 f8cc 	bl	1004d658 <UART_SetConfig>
1004d4c0:	0003      	movs	r3, r0
1004d4c2:	2b01      	cmp	r3, #1
1004d4c4:	d101      	bne.n	1004d4ca <HAL_UART_Init+0x66>
  {
    return HAL_ERROR;
1004d4c6:	2301      	movs	r3, #1
1004d4c8:	e01c      	b.n	1004d504 <HAL_UART_Init+0xa0>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1004d4ca:	687b      	ldr	r3, [r7, #4]
1004d4cc:	681b      	ldr	r3, [r3, #0]
1004d4ce:	685a      	ldr	r2, [r3, #4]
1004d4d0:	687b      	ldr	r3, [r7, #4]
1004d4d2:	681b      	ldr	r3, [r3, #0]
1004d4d4:	490d      	ldr	r1, [pc, #52]	@ (1004d50c <HAL_UART_Init+0xa8>)
1004d4d6:	400a      	ands	r2, r1
1004d4d8:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1004d4da:	687b      	ldr	r3, [r7, #4]
1004d4dc:	681b      	ldr	r3, [r3, #0]
1004d4de:	689a      	ldr	r2, [r3, #8]
1004d4e0:	687b      	ldr	r3, [r7, #4]
1004d4e2:	681b      	ldr	r3, [r3, #0]
1004d4e4:	212a      	movs	r1, #42	@ 0x2a
1004d4e6:	438a      	bics	r2, r1
1004d4e8:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
1004d4ea:	687b      	ldr	r3, [r7, #4]
1004d4ec:	681b      	ldr	r3, [r3, #0]
1004d4ee:	681a      	ldr	r2, [r3, #0]
1004d4f0:	687b      	ldr	r3, [r7, #4]
1004d4f2:	681b      	ldr	r3, [r3, #0]
1004d4f4:	2101      	movs	r1, #1
1004d4f6:	430a      	orrs	r2, r1
1004d4f8:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
1004d4fa:	687b      	ldr	r3, [r7, #4]
1004d4fc:	0018      	movs	r0, r3
1004d4fe:	f000 fac7 	bl	1004da90 <UART_CheckIdleState>
1004d502:	0003      	movs	r3, r0
}
1004d504:	0018      	movs	r0, r3
1004d506:	46bd      	mov	sp, r7
1004d508:	b002      	add	sp, #8
1004d50a:	bd80      	pop	{r7, pc}
1004d50c:	ffffb7ff 	.word	0xffffb7ff

1004d510 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
1004d510:	b580      	push	{r7, lr}
1004d512:	b08a      	sub	sp, #40	@ 0x28
1004d514:	af02      	add	r7, sp, #8
1004d516:	60f8      	str	r0, [r7, #12]
1004d518:	60b9      	str	r1, [r7, #8]
1004d51a:	603b      	str	r3, [r7, #0]
1004d51c:	1dbb      	adds	r3, r7, #6
1004d51e:	801a      	strh	r2, [r3, #0]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
1004d520:	68fb      	ldr	r3, [r7, #12]
1004d522:	2288      	movs	r2, #136	@ 0x88
1004d524:	589b      	ldr	r3, [r3, r2]
1004d526:	2b20      	cmp	r3, #32
1004d528:	d000      	beq.n	1004d52c <HAL_UART_Transmit+0x1c>
1004d52a:	e090      	b.n	1004d64e <HAL_UART_Transmit+0x13e>
  {
    if ((pData == NULL) || (Size == 0U))
1004d52c:	68bb      	ldr	r3, [r7, #8]
1004d52e:	2b00      	cmp	r3, #0
1004d530:	d003      	beq.n	1004d53a <HAL_UART_Transmit+0x2a>
1004d532:	1dbb      	adds	r3, r7, #6
1004d534:	881b      	ldrh	r3, [r3, #0]
1004d536:	2b00      	cmp	r3, #0
1004d538:	d101      	bne.n	1004d53e <HAL_UART_Transmit+0x2e>
    {
      return  HAL_ERROR;
1004d53a:	2301      	movs	r3, #1
1004d53c:	e088      	b.n	1004d650 <HAL_UART_Transmit+0x140>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1004d53e:	68fb      	ldr	r3, [r7, #12]
1004d540:	689a      	ldr	r2, [r3, #8]
1004d542:	2380      	movs	r3, #128	@ 0x80
1004d544:	015b      	lsls	r3, r3, #5
1004d546:	429a      	cmp	r2, r3
1004d548:	d109      	bne.n	1004d55e <HAL_UART_Transmit+0x4e>
1004d54a:	68fb      	ldr	r3, [r7, #12]
1004d54c:	691b      	ldr	r3, [r3, #16]
1004d54e:	2b00      	cmp	r3, #0
1004d550:	d105      	bne.n	1004d55e <HAL_UART_Transmit+0x4e>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
1004d552:	68bb      	ldr	r3, [r7, #8]
1004d554:	2201      	movs	r2, #1
1004d556:	4013      	ands	r3, r2
1004d558:	d001      	beq.n	1004d55e <HAL_UART_Transmit+0x4e>
      {
        return  HAL_ERROR;
1004d55a:	2301      	movs	r3, #1
1004d55c:	e078      	b.n	1004d650 <HAL_UART_Transmit+0x140>
      }
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
1004d55e:	68fb      	ldr	r3, [r7, #12]
1004d560:	2290      	movs	r2, #144	@ 0x90
1004d562:	2100      	movs	r1, #0
1004d564:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
1004d566:	68fb      	ldr	r3, [r7, #12]
1004d568:	2288      	movs	r2, #136	@ 0x88
1004d56a:	2121      	movs	r1, #33	@ 0x21
1004d56c:	5099      	str	r1, [r3, r2]

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
1004d56e:	f7fc fb21 	bl	10049bb4 <HAL_GetTick>
1004d572:	0003      	movs	r3, r0
1004d574:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
1004d576:	68fb      	ldr	r3, [r7, #12]
1004d578:	1dba      	adds	r2, r7, #6
1004d57a:	2154      	movs	r1, #84	@ 0x54
1004d57c:	8812      	ldrh	r2, [r2, #0]
1004d57e:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
1004d580:	68fb      	ldr	r3, [r7, #12]
1004d582:	1dba      	adds	r2, r7, #6
1004d584:	2156      	movs	r1, #86	@ 0x56
1004d586:	8812      	ldrh	r2, [r2, #0]
1004d588:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1004d58a:	68fb      	ldr	r3, [r7, #12]
1004d58c:	689a      	ldr	r2, [r3, #8]
1004d58e:	2380      	movs	r3, #128	@ 0x80
1004d590:	015b      	lsls	r3, r3, #5
1004d592:	429a      	cmp	r2, r3
1004d594:	d108      	bne.n	1004d5a8 <HAL_UART_Transmit+0x98>
1004d596:	68fb      	ldr	r3, [r7, #12]
1004d598:	691b      	ldr	r3, [r3, #16]
1004d59a:	2b00      	cmp	r3, #0
1004d59c:	d104      	bne.n	1004d5a8 <HAL_UART_Transmit+0x98>
    {
      pdata8bits  = NULL;
1004d59e:	2300      	movs	r3, #0
1004d5a0:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
1004d5a2:	68bb      	ldr	r3, [r7, #8]
1004d5a4:	61bb      	str	r3, [r7, #24]
1004d5a6:	e003      	b.n	1004d5b0 <HAL_UART_Transmit+0xa0>
    }
    else
    {
      pdata8bits  = pData;
1004d5a8:	68bb      	ldr	r3, [r7, #8]
1004d5aa:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
1004d5ac:	2300      	movs	r3, #0
1004d5ae:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
1004d5b0:	e030      	b.n	1004d614 <HAL_UART_Transmit+0x104>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1004d5b2:	697a      	ldr	r2, [r7, #20]
1004d5b4:	68f8      	ldr	r0, [r7, #12]
1004d5b6:	683b      	ldr	r3, [r7, #0]
1004d5b8:	9300      	str	r3, [sp, #0]
1004d5ba:	0013      	movs	r3, r2
1004d5bc:	2200      	movs	r2, #0
1004d5be:	2180      	movs	r1, #128	@ 0x80
1004d5c0:	f000 fb10 	bl	1004dbe4 <UART_WaitOnFlagUntilTimeout>
1004d5c4:	1e03      	subs	r3, r0, #0
1004d5c6:	d005      	beq.n	1004d5d4 <HAL_UART_Transmit+0xc4>
      {

        huart->gState = HAL_UART_STATE_READY;
1004d5c8:	68fb      	ldr	r3, [r7, #12]
1004d5ca:	2288      	movs	r2, #136	@ 0x88
1004d5cc:	2120      	movs	r1, #32
1004d5ce:	5099      	str	r1, [r3, r2]

        return HAL_TIMEOUT;
1004d5d0:	2303      	movs	r3, #3
1004d5d2:	e03d      	b.n	1004d650 <HAL_UART_Transmit+0x140>
      }
      if (pdata8bits == NULL)
1004d5d4:	69fb      	ldr	r3, [r7, #28]
1004d5d6:	2b00      	cmp	r3, #0
1004d5d8:	d10b      	bne.n	1004d5f2 <HAL_UART_Transmit+0xe2>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1004d5da:	69bb      	ldr	r3, [r7, #24]
1004d5dc:	881b      	ldrh	r3, [r3, #0]
1004d5de:	001a      	movs	r2, r3
1004d5e0:	68fb      	ldr	r3, [r7, #12]
1004d5e2:	681b      	ldr	r3, [r3, #0]
1004d5e4:	05d2      	lsls	r2, r2, #23
1004d5e6:	0dd2      	lsrs	r2, r2, #23
1004d5e8:	629a      	str	r2, [r3, #40]	@ 0x28
        pdata16bits++;
1004d5ea:	69bb      	ldr	r3, [r7, #24]
1004d5ec:	3302      	adds	r3, #2
1004d5ee:	61bb      	str	r3, [r7, #24]
1004d5f0:	e007      	b.n	1004d602 <HAL_UART_Transmit+0xf2>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1004d5f2:	69fb      	ldr	r3, [r7, #28]
1004d5f4:	781a      	ldrb	r2, [r3, #0]
1004d5f6:	68fb      	ldr	r3, [r7, #12]
1004d5f8:	681b      	ldr	r3, [r3, #0]
1004d5fa:	629a      	str	r2, [r3, #40]	@ 0x28
        pdata8bits++;
1004d5fc:	69fb      	ldr	r3, [r7, #28]
1004d5fe:	3301      	adds	r3, #1
1004d600:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
1004d602:	68fb      	ldr	r3, [r7, #12]
1004d604:	2256      	movs	r2, #86	@ 0x56
1004d606:	5a9b      	ldrh	r3, [r3, r2]
1004d608:	b29b      	uxth	r3, r3
1004d60a:	3b01      	subs	r3, #1
1004d60c:	b299      	uxth	r1, r3
1004d60e:	68fb      	ldr	r3, [r7, #12]
1004d610:	2256      	movs	r2, #86	@ 0x56
1004d612:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
1004d614:	68fb      	ldr	r3, [r7, #12]
1004d616:	2256      	movs	r2, #86	@ 0x56
1004d618:	5a9b      	ldrh	r3, [r3, r2]
1004d61a:	b29b      	uxth	r3, r3
1004d61c:	2b00      	cmp	r3, #0
1004d61e:	d1c8      	bne.n	1004d5b2 <HAL_UART_Transmit+0xa2>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1004d620:	697a      	ldr	r2, [r7, #20]
1004d622:	68f8      	ldr	r0, [r7, #12]
1004d624:	683b      	ldr	r3, [r7, #0]
1004d626:	9300      	str	r3, [sp, #0]
1004d628:	0013      	movs	r3, r2
1004d62a:	2200      	movs	r2, #0
1004d62c:	2140      	movs	r1, #64	@ 0x40
1004d62e:	f000 fad9 	bl	1004dbe4 <UART_WaitOnFlagUntilTimeout>
1004d632:	1e03      	subs	r3, r0, #0
1004d634:	d005      	beq.n	1004d642 <HAL_UART_Transmit+0x132>
    {
      huart->gState = HAL_UART_STATE_READY;
1004d636:	68fb      	ldr	r3, [r7, #12]
1004d638:	2288      	movs	r2, #136	@ 0x88
1004d63a:	2120      	movs	r1, #32
1004d63c:	5099      	str	r1, [r3, r2]

      return HAL_TIMEOUT;
1004d63e:	2303      	movs	r3, #3
1004d640:	e006      	b.n	1004d650 <HAL_UART_Transmit+0x140>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
1004d642:	68fb      	ldr	r3, [r7, #12]
1004d644:	2288      	movs	r2, #136	@ 0x88
1004d646:	2120      	movs	r1, #32
1004d648:	5099      	str	r1, [r3, r2]

    return HAL_OK;
1004d64a:	2300      	movs	r3, #0
1004d64c:	e000      	b.n	1004d650 <HAL_UART_Transmit+0x140>
  }
  else
  {
    return HAL_BUSY;
1004d64e:	2302      	movs	r3, #2
  }
}
1004d650:	0018      	movs	r0, r3
1004d652:	46bd      	mov	sp, r7
1004d654:	b008      	add	sp, #32
1004d656:	bd80      	pop	{r7, pc}

1004d658 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
1004d658:	b5b0      	push	{r4, r5, r7, lr}
1004d65a:	b090      	sub	sp, #64	@ 0x40
1004d65c:	af00      	add	r7, sp, #0
1004d65e:	6278      	str	r0, [r7, #36]	@ 0x24
  uint32_t tmpreg;
  uint16_t brrtemp;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
1004d660:	231b      	movs	r3, #27
1004d662:	2220      	movs	r2, #32
1004d664:	189b      	adds	r3, r3, r2
1004d666:	19db      	adds	r3, r3, r7
1004d668:	2200      	movs	r2, #0
1004d66a:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
1004d66c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d66e:	689a      	ldr	r2, [r3, #8]
1004d670:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d672:	691b      	ldr	r3, [r3, #16]
1004d674:	431a      	orrs	r2, r3
1004d676:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d678:	695b      	ldr	r3, [r3, #20]
1004d67a:	431a      	orrs	r2, r3
1004d67c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d67e:	69db      	ldr	r3, [r3, #28]
1004d680:	4313      	orrs	r3, r2
1004d682:	63fb      	str	r3, [r7, #60]	@ 0x3c
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
1004d684:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d686:	681b      	ldr	r3, [r3, #0]
1004d688:	681b      	ldr	r3, [r3, #0]
1004d68a:	4aa1      	ldr	r2, [pc, #644]	@ (1004d910 <UART_SetConfig+0x2b8>)
1004d68c:	4013      	ands	r3, r2
1004d68e:	0019      	movs	r1, r3
1004d690:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d692:	681a      	ldr	r2, [r3, #0]
1004d694:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004d696:	430b      	orrs	r3, r1
1004d698:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
1004d69a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d69c:	681b      	ldr	r3, [r3, #0]
1004d69e:	685b      	ldr	r3, [r3, #4]
1004d6a0:	4a9c      	ldr	r2, [pc, #624]	@ (1004d914 <UART_SetConfig+0x2bc>)
1004d6a2:	4013      	ands	r3, r2
1004d6a4:	0018      	movs	r0, r3
1004d6a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6a8:	68d9      	ldr	r1, [r3, #12]
1004d6aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6ac:	681a      	ldr	r2, [r3, #0]
1004d6ae:	0003      	movs	r3, r0
1004d6b0:	430b      	orrs	r3, r1
1004d6b2:	6053      	str	r3, [r2, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
1004d6b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6b6:	699b      	ldr	r3, [r3, #24]
1004d6b8:	63fb      	str	r3, [r7, #60]	@ 0x3c

  if (!(UART_INSTANCE_LOWPOWER(huart)))
1004d6ba:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6bc:	681b      	ldr	r3, [r3, #0]
1004d6be:	4a96      	ldr	r2, [pc, #600]	@ (1004d918 <UART_SetConfig+0x2c0>)
1004d6c0:	4293      	cmp	r3, r2
1004d6c2:	d004      	beq.n	1004d6ce <UART_SetConfig+0x76>
  {
    tmpreg |= huart->Init.OneBitSampling;
1004d6c4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6c6:	6a1b      	ldr	r3, [r3, #32]
1004d6c8:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1004d6ca:	4313      	orrs	r3, r2
1004d6cc:	63fb      	str	r3, [r7, #60]	@ 0x3c
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
1004d6ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6d0:	681b      	ldr	r3, [r3, #0]
1004d6d2:	689b      	ldr	r3, [r3, #8]
1004d6d4:	4a91      	ldr	r2, [pc, #580]	@ (1004d91c <UART_SetConfig+0x2c4>)
1004d6d6:	4013      	ands	r3, r2
1004d6d8:	0019      	movs	r1, r3
1004d6da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6dc:	681a      	ldr	r2, [r3, #0]
1004d6de:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004d6e0:	430b      	orrs	r3, r1
1004d6e2:	6093      	str	r3, [r2, #8]

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
1004d6e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6e6:	681b      	ldr	r3, [r3, #0]
1004d6e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
1004d6ea:	220f      	movs	r2, #15
1004d6ec:	4393      	bics	r3, r2
1004d6ee:	0018      	movs	r0, r3
1004d6f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6f2:	6a59      	ldr	r1, [r3, #36]	@ 0x24
1004d6f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d6f6:	681a      	ldr	r2, [r3, #0]
1004d6f8:	0003      	movs	r3, r0
1004d6fa:	430b      	orrs	r3, r1
1004d6fc:	62d3      	str	r3, [r2, #44]	@ 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
1004d6fe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d700:	681b      	ldr	r3, [r3, #0]
1004d702:	4a85      	ldr	r2, [pc, #532]	@ (1004d918 <UART_SetConfig+0x2c0>)
1004d704:	4293      	cmp	r3, r2
1004d706:	d16d      	bne.n	1004d7e4 <UART_SetConfig+0x18c>
  {
    /* Retrieve frequency clock */
#if defined(RCC_CFGR_LPUCLKSEL)
    pclk = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_LPUART1);
1004d708:	2010      	movs	r0, #16
1004d70a:	f7ff fe0f 	bl	1004d32c <HAL_RCCEx_GetPeriphCLKFreq>
1004d70e:	0003      	movs	r3, r0
1004d710:	637b      	str	r3, [r7, #52]	@ 0x34
#else
    pclk = UART_PERIPHCLK;
#endif /* RCC_CFGR_LPUCLKSEL */

    /* If proper clock source reported */
    if (pclk != 0U)
1004d712:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004d714:	2b00      	cmp	r3, #0
1004d716:	d100      	bne.n	1004d71a <UART_SetConfig+0xc2>
1004d718:	e0e3      	b.n	1004d8e2 <UART_SetConfig+0x28a>
    {
      /* Compute clock after Prescaler */
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
1004d71a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d71c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
1004d71e:	4b80      	ldr	r3, [pc, #512]	@ (1004d920 <UART_SetConfig+0x2c8>)
1004d720:	0052      	lsls	r2, r2, #1
1004d722:	5ad3      	ldrh	r3, [r2, r3]
1004d724:	0019      	movs	r1, r3
1004d726:	6b78      	ldr	r0, [r7, #52]	@ 0x34
1004d728:	f7f2 fd8a 	bl	10040240 <__udivsi3>
1004d72c:	0003      	movs	r3, r0
1004d72e:	62bb      	str	r3, [r7, #40]	@ 0x28

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
1004d730:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d732:	685a      	ldr	r2, [r3, #4]
1004d734:	0013      	movs	r3, r2
1004d736:	005b      	lsls	r3, r3, #1
1004d738:	189b      	adds	r3, r3, r2
1004d73a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
1004d73c:	429a      	cmp	r2, r3
1004d73e:	d305      	bcc.n	1004d74c <UART_SetConfig+0xf4>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
1004d740:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d742:	685b      	ldr	r3, [r3, #4]
1004d744:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
1004d746:	6aba      	ldr	r2, [r7, #40]	@ 0x28
1004d748:	429a      	cmp	r2, r3
1004d74a:	d906      	bls.n	1004d75a <UART_SetConfig+0x102>
      {
        ret = HAL_ERROR;
1004d74c:	231b      	movs	r3, #27
1004d74e:	2220      	movs	r2, #32
1004d750:	189b      	adds	r3, r3, r2
1004d752:	19db      	adds	r3, r3, r7
1004d754:	2201      	movs	r2, #1
1004d756:	701a      	strb	r2, [r3, #0]
1004d758:	e0c3      	b.n	1004d8e2 <UART_SetConfig+0x28a>
      }
      else
      {
        /* Check computed UsartDiv value is in allocated range
           (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
1004d75a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004d75c:	61bb      	str	r3, [r7, #24]
1004d75e:	2300      	movs	r3, #0
1004d760:	61fb      	str	r3, [r7, #28]
1004d762:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d764:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
1004d766:	4b6e      	ldr	r3, [pc, #440]	@ (1004d920 <UART_SetConfig+0x2c8>)
1004d768:	0052      	lsls	r2, r2, #1
1004d76a:	5ad3      	ldrh	r3, [r2, r3]
1004d76c:	613b      	str	r3, [r7, #16]
1004d76e:	2300      	movs	r3, #0
1004d770:	617b      	str	r3, [r7, #20]
1004d772:	693a      	ldr	r2, [r7, #16]
1004d774:	697b      	ldr	r3, [r7, #20]
1004d776:	69b8      	ldr	r0, [r7, #24]
1004d778:	69f9      	ldr	r1, [r7, #28]
1004d77a:	f7f2 ff3f 	bl	100405fc <__aeabi_uldivmod>
1004d77e:	0002      	movs	r2, r0
1004d780:	000b      	movs	r3, r1
1004d782:	0e11      	lsrs	r1, r2, #24
1004d784:	021d      	lsls	r5, r3, #8
1004d786:	430d      	orrs	r5, r1
1004d788:	0214      	lsls	r4, r2, #8
1004d78a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d78c:	685b      	ldr	r3, [r3, #4]
1004d78e:	085b      	lsrs	r3, r3, #1
1004d790:	60bb      	str	r3, [r7, #8]
1004d792:	2300      	movs	r3, #0
1004d794:	60fb      	str	r3, [r7, #12]
1004d796:	68b8      	ldr	r0, [r7, #8]
1004d798:	68f9      	ldr	r1, [r7, #12]
1004d79a:	1900      	adds	r0, r0, r4
1004d79c:	4169      	adcs	r1, r5
1004d79e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d7a0:	685b      	ldr	r3, [r3, #4]
1004d7a2:	603b      	str	r3, [r7, #0]
1004d7a4:	2300      	movs	r3, #0
1004d7a6:	607b      	str	r3, [r7, #4]
1004d7a8:	683a      	ldr	r2, [r7, #0]
1004d7aa:	687b      	ldr	r3, [r7, #4]
1004d7ac:	f7f2 ff26 	bl	100405fc <__aeabi_uldivmod>
1004d7b0:	0002      	movs	r2, r0
1004d7b2:	000b      	movs	r3, r1
1004d7b4:	0013      	movs	r3, r2
1004d7b6:	633b      	str	r3, [r7, #48]	@ 0x30
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
1004d7b8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004d7ba:	23c0      	movs	r3, #192	@ 0xc0
1004d7bc:	009b      	lsls	r3, r3, #2
1004d7be:	429a      	cmp	r2, r3
1004d7c0:	d309      	bcc.n	1004d7d6 <UART_SetConfig+0x17e>
1004d7c2:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004d7c4:	2380      	movs	r3, #128	@ 0x80
1004d7c6:	035b      	lsls	r3, r3, #13
1004d7c8:	429a      	cmp	r2, r3
1004d7ca:	d204      	bcs.n	1004d7d6 <UART_SetConfig+0x17e>
        {
          huart->Instance->BRR = usartdiv;
1004d7cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d7ce:	681b      	ldr	r3, [r3, #0]
1004d7d0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004d7d2:	60da      	str	r2, [r3, #12]
1004d7d4:	e085      	b.n	1004d8e2 <UART_SetConfig+0x28a>
        }
        else
        {
          ret = HAL_ERROR;
1004d7d6:	231b      	movs	r3, #27
1004d7d8:	2220      	movs	r2, #32
1004d7da:	189b      	adds	r3, r3, r2
1004d7dc:	19db      	adds	r3, r3, r7
1004d7de:	2201      	movs	r2, #1
1004d7e0:	701a      	strb	r2, [r3, #0]
1004d7e2:	e07e      	b.n	1004d8e2 <UART_SetConfig+0x28a>
      } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
                (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
1004d7e4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d7e6:	69da      	ldr	r2, [r3, #28]
1004d7e8:	2380      	movs	r3, #128	@ 0x80
1004d7ea:	021b      	lsls	r3, r3, #8
1004d7ec:	429a      	cmp	r2, r3
1004d7ee:	d148      	bne.n	1004d882 <UART_SetConfig+0x22a>
  {
    pclk = UART_PERIPHCLK;
1004d7f0:	4b4c      	ldr	r3, [pc, #304]	@ (1004d924 <UART_SetConfig+0x2cc>)
1004d7f2:	637b      	str	r3, [r7, #52]	@ 0x34

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
1004d7f4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004d7f6:	2b00      	cmp	r3, #0
1004d7f8:	d100      	bne.n	1004d7fc <UART_SetConfig+0x1a4>
1004d7fa:	e072      	b.n	1004d8e2 <UART_SetConfig+0x28a>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
1004d7fc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d7fe:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
1004d800:	4b47      	ldr	r3, [pc, #284]	@ (1004d920 <UART_SetConfig+0x2c8>)
1004d802:	0052      	lsls	r2, r2, #1
1004d804:	5ad3      	ldrh	r3, [r2, r3]
1004d806:	0019      	movs	r1, r3
1004d808:	6b78      	ldr	r0, [r7, #52]	@ 0x34
1004d80a:	f7f2 fd19 	bl	10040240 <__udivsi3>
1004d80e:	0003      	movs	r3, r0
1004d810:	005a      	lsls	r2, r3, #1
1004d812:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d814:	685b      	ldr	r3, [r3, #4]
1004d816:	085b      	lsrs	r3, r3, #1
1004d818:	18d2      	adds	r2, r2, r3
1004d81a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d81c:	685b      	ldr	r3, [r3, #4]
1004d81e:	0019      	movs	r1, r3
1004d820:	0010      	movs	r0, r2
1004d822:	f7f2 fd0d 	bl	10040240 <__udivsi3>
1004d826:	0003      	movs	r3, r0
1004d828:	633b      	str	r3, [r7, #48]	@ 0x30
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
1004d82a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1004d82c:	2b0f      	cmp	r3, #15
1004d82e:	d921      	bls.n	1004d874 <UART_SetConfig+0x21c>
1004d830:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004d832:	2380      	movs	r3, #128	@ 0x80
1004d834:	025b      	lsls	r3, r3, #9
1004d836:	429a      	cmp	r2, r3
1004d838:	d21c      	bcs.n	1004d874 <UART_SetConfig+0x21c>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
1004d83a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1004d83c:	b29a      	uxth	r2, r3
1004d83e:	200e      	movs	r0, #14
1004d840:	2420      	movs	r4, #32
1004d842:	1903      	adds	r3, r0, r4
1004d844:	19db      	adds	r3, r3, r7
1004d846:	210f      	movs	r1, #15
1004d848:	438a      	bics	r2, r1
1004d84a:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
1004d84c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1004d84e:	085b      	lsrs	r3, r3, #1
1004d850:	b29b      	uxth	r3, r3
1004d852:	2207      	movs	r2, #7
1004d854:	4013      	ands	r3, r2
1004d856:	b299      	uxth	r1, r3
1004d858:	1903      	adds	r3, r0, r4
1004d85a:	19db      	adds	r3, r3, r7
1004d85c:	1902      	adds	r2, r0, r4
1004d85e:	19d2      	adds	r2, r2, r7
1004d860:	8812      	ldrh	r2, [r2, #0]
1004d862:	430a      	orrs	r2, r1
1004d864:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
1004d866:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d868:	681b      	ldr	r3, [r3, #0]
1004d86a:	1902      	adds	r2, r0, r4
1004d86c:	19d2      	adds	r2, r2, r7
1004d86e:	8812      	ldrh	r2, [r2, #0]
1004d870:	60da      	str	r2, [r3, #12]
1004d872:	e036      	b.n	1004d8e2 <UART_SetConfig+0x28a>
      }
      else
      {
        ret = HAL_ERROR;
1004d874:	231b      	movs	r3, #27
1004d876:	2220      	movs	r2, #32
1004d878:	189b      	adds	r3, r3, r2
1004d87a:	19db      	adds	r3, r3, r7
1004d87c:	2201      	movs	r2, #1
1004d87e:	701a      	strb	r2, [r3, #0]
1004d880:	e02f      	b.n	1004d8e2 <UART_SetConfig+0x28a>
      }
    }
  }
  else
  {
    pclk = UART_PERIPHCLK;
1004d882:	4b28      	ldr	r3, [pc, #160]	@ (1004d924 <UART_SetConfig+0x2cc>)
1004d884:	637b      	str	r3, [r7, #52]	@ 0x34

    if (pclk != 0U)
1004d886:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004d888:	2b00      	cmp	r3, #0
1004d88a:	d02a      	beq.n	1004d8e2 <UART_SetConfig+0x28a>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
1004d88c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d88e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
1004d890:	4b23      	ldr	r3, [pc, #140]	@ (1004d920 <UART_SetConfig+0x2c8>)
1004d892:	0052      	lsls	r2, r2, #1
1004d894:	5ad3      	ldrh	r3, [r2, r3]
1004d896:	0019      	movs	r1, r3
1004d898:	6b78      	ldr	r0, [r7, #52]	@ 0x34
1004d89a:	f7f2 fcd1 	bl	10040240 <__udivsi3>
1004d89e:	0003      	movs	r3, r0
1004d8a0:	001a      	movs	r2, r3
1004d8a2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d8a4:	685b      	ldr	r3, [r3, #4]
1004d8a6:	085b      	lsrs	r3, r3, #1
1004d8a8:	18d2      	adds	r2, r2, r3
1004d8aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d8ac:	685b      	ldr	r3, [r3, #4]
1004d8ae:	0019      	movs	r1, r3
1004d8b0:	0010      	movs	r0, r2
1004d8b2:	f7f2 fcc5 	bl	10040240 <__udivsi3>
1004d8b6:	0003      	movs	r3, r0
1004d8b8:	633b      	str	r3, [r7, #48]	@ 0x30
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
1004d8ba:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1004d8bc:	2b0f      	cmp	r3, #15
1004d8be:	d90a      	bls.n	1004d8d6 <UART_SetConfig+0x27e>
1004d8c0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004d8c2:	2380      	movs	r3, #128	@ 0x80
1004d8c4:	025b      	lsls	r3, r3, #9
1004d8c6:	429a      	cmp	r2, r3
1004d8c8:	d205      	bcs.n	1004d8d6 <UART_SetConfig+0x27e>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
1004d8ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1004d8cc:	b29a      	uxth	r2, r3
1004d8ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d8d0:	681b      	ldr	r3, [r3, #0]
1004d8d2:	60da      	str	r2, [r3, #12]
1004d8d4:	e005      	b.n	1004d8e2 <UART_SetConfig+0x28a>
      }
      else
      {
        ret = HAL_ERROR;
1004d8d6:	231b      	movs	r3, #27
1004d8d8:	2220      	movs	r2, #32
1004d8da:	189b      	adds	r3, r3, r2
1004d8dc:	19db      	adds	r3, r3, r7
1004d8de:	2201      	movs	r2, #1
1004d8e0:	701a      	strb	r2, [r3, #0]
      }
    }
  }

  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
1004d8e2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d8e4:	226a      	movs	r2, #106	@ 0x6a
1004d8e6:	2101      	movs	r1, #1
1004d8e8:	5299      	strh	r1, [r3, r2]
  huart->NbRxDataToProcess = 1;
1004d8ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d8ec:	2268      	movs	r2, #104	@ 0x68
1004d8ee:	2101      	movs	r1, #1
1004d8f0:	5299      	strh	r1, [r3, r2]

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
1004d8f2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d8f4:	2200      	movs	r2, #0
1004d8f6:	675a      	str	r2, [r3, #116]	@ 0x74
  huart->TxISR = NULL;
1004d8f8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004d8fa:	2200      	movs	r2, #0
1004d8fc:	679a      	str	r2, [r3, #120]	@ 0x78

  return ret;
1004d8fe:	231b      	movs	r3, #27
1004d900:	2220      	movs	r2, #32
1004d902:	189b      	adds	r3, r3, r2
1004d904:	19db      	adds	r3, r3, r7
1004d906:	781b      	ldrb	r3, [r3, #0]
}
1004d908:	0018      	movs	r0, r3
1004d90a:	46bd      	mov	sp, r7
1004d90c:	b010      	add	sp, #64	@ 0x40
1004d90e:	bdb0      	pop	{r4, r5, r7, pc}
1004d910:	cfff69f3 	.word	0xcfff69f3
1004d914:	ffffcfff 	.word	0xffffcfff
1004d918:	41005000 	.word	0x41005000
1004d91c:	11fff4ff 	.word	0x11fff4ff
1004d920:	1006e85c 	.word	0x1006e85c
1004d924:	00f42400 	.word	0x00f42400

1004d928 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
1004d928:	b580      	push	{r7, lr}
1004d92a:	b082      	sub	sp, #8
1004d92c:	af00      	add	r7, sp, #0
1004d92e:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
1004d930:	687b      	ldr	r3, [r7, #4]
1004d932:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004d934:	2208      	movs	r2, #8
1004d936:	4013      	ands	r3, r2
1004d938:	d00b      	beq.n	1004d952 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
1004d93a:	687b      	ldr	r3, [r7, #4]
1004d93c:	681b      	ldr	r3, [r3, #0]
1004d93e:	685b      	ldr	r3, [r3, #4]
1004d940:	4a4a      	ldr	r2, [pc, #296]	@ (1004da6c <UART_AdvFeatureConfig+0x144>)
1004d942:	4013      	ands	r3, r2
1004d944:	0019      	movs	r1, r3
1004d946:	687b      	ldr	r3, [r7, #4]
1004d948:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
1004d94a:	687b      	ldr	r3, [r7, #4]
1004d94c:	681b      	ldr	r3, [r3, #0]
1004d94e:	430a      	orrs	r2, r1
1004d950:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
1004d952:	687b      	ldr	r3, [r7, #4]
1004d954:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004d956:	2201      	movs	r2, #1
1004d958:	4013      	ands	r3, r2
1004d95a:	d00b      	beq.n	1004d974 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
1004d95c:	687b      	ldr	r3, [r7, #4]
1004d95e:	681b      	ldr	r3, [r3, #0]
1004d960:	685b      	ldr	r3, [r3, #4]
1004d962:	4a43      	ldr	r2, [pc, #268]	@ (1004da70 <UART_AdvFeatureConfig+0x148>)
1004d964:	4013      	ands	r3, r2
1004d966:	0019      	movs	r1, r3
1004d968:	687b      	ldr	r3, [r7, #4]
1004d96a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
1004d96c:	687b      	ldr	r3, [r7, #4]
1004d96e:	681b      	ldr	r3, [r3, #0]
1004d970:	430a      	orrs	r2, r1
1004d972:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
1004d974:	687b      	ldr	r3, [r7, #4]
1004d976:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004d978:	2202      	movs	r2, #2
1004d97a:	4013      	ands	r3, r2
1004d97c:	d00b      	beq.n	1004d996 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
1004d97e:	687b      	ldr	r3, [r7, #4]
1004d980:	681b      	ldr	r3, [r3, #0]
1004d982:	685b      	ldr	r3, [r3, #4]
1004d984:	4a3b      	ldr	r2, [pc, #236]	@ (1004da74 <UART_AdvFeatureConfig+0x14c>)
1004d986:	4013      	ands	r3, r2
1004d988:	0019      	movs	r1, r3
1004d98a:	687b      	ldr	r3, [r7, #4]
1004d98c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
1004d98e:	687b      	ldr	r3, [r7, #4]
1004d990:	681b      	ldr	r3, [r3, #0]
1004d992:	430a      	orrs	r2, r1
1004d994:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
1004d996:	687b      	ldr	r3, [r7, #4]
1004d998:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004d99a:	2204      	movs	r2, #4
1004d99c:	4013      	ands	r3, r2
1004d99e:	d00b      	beq.n	1004d9b8 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
1004d9a0:	687b      	ldr	r3, [r7, #4]
1004d9a2:	681b      	ldr	r3, [r3, #0]
1004d9a4:	685b      	ldr	r3, [r3, #4]
1004d9a6:	4a34      	ldr	r2, [pc, #208]	@ (1004da78 <UART_AdvFeatureConfig+0x150>)
1004d9a8:	4013      	ands	r3, r2
1004d9aa:	0019      	movs	r1, r3
1004d9ac:	687b      	ldr	r3, [r7, #4]
1004d9ae:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
1004d9b0:	687b      	ldr	r3, [r7, #4]
1004d9b2:	681b      	ldr	r3, [r3, #0]
1004d9b4:	430a      	orrs	r2, r1
1004d9b6:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
1004d9b8:	687b      	ldr	r3, [r7, #4]
1004d9ba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004d9bc:	2210      	movs	r2, #16
1004d9be:	4013      	ands	r3, r2
1004d9c0:	d00b      	beq.n	1004d9da <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
1004d9c2:	687b      	ldr	r3, [r7, #4]
1004d9c4:	681b      	ldr	r3, [r3, #0]
1004d9c6:	689b      	ldr	r3, [r3, #8]
1004d9c8:	4a2c      	ldr	r2, [pc, #176]	@ (1004da7c <UART_AdvFeatureConfig+0x154>)
1004d9ca:	4013      	ands	r3, r2
1004d9cc:	0019      	movs	r1, r3
1004d9ce:	687b      	ldr	r3, [r7, #4]
1004d9d0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
1004d9d2:	687b      	ldr	r3, [r7, #4]
1004d9d4:	681b      	ldr	r3, [r3, #0]
1004d9d6:	430a      	orrs	r2, r1
1004d9d8:	609a      	str	r2, [r3, #8]
  }

#if defined(HAL_DMA_MODULE_ENABLED)
  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
1004d9da:	687b      	ldr	r3, [r7, #4]
1004d9dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004d9de:	2220      	movs	r2, #32
1004d9e0:	4013      	ands	r3, r2
1004d9e2:	d00b      	beq.n	1004d9fc <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
1004d9e4:	687b      	ldr	r3, [r7, #4]
1004d9e6:	681b      	ldr	r3, [r3, #0]
1004d9e8:	689b      	ldr	r3, [r3, #8]
1004d9ea:	4a25      	ldr	r2, [pc, #148]	@ (1004da80 <UART_AdvFeatureConfig+0x158>)
1004d9ec:	4013      	ands	r3, r2
1004d9ee:	0019      	movs	r1, r3
1004d9f0:	687b      	ldr	r3, [r7, #4]
1004d9f2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
1004d9f4:	687b      	ldr	r3, [r7, #4]
1004d9f6:	681b      	ldr	r3, [r3, #0]
1004d9f8:	430a      	orrs	r2, r1
1004d9fa:	609a      	str	r2, [r3, #8]
  }
#endif /* HAL_DMA_MODULE_ENABLED */

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
1004d9fc:	687b      	ldr	r3, [r7, #4]
1004d9fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004da00:	2240      	movs	r2, #64	@ 0x40
1004da02:	4013      	ands	r3, r2
1004da04:	d01d      	beq.n	1004da42 <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
1004da06:	687b      	ldr	r3, [r7, #4]
1004da08:	681b      	ldr	r3, [r3, #0]
1004da0a:	685b      	ldr	r3, [r3, #4]
1004da0c:	4a1d      	ldr	r2, [pc, #116]	@ (1004da84 <UART_AdvFeatureConfig+0x15c>)
1004da0e:	4013      	ands	r3, r2
1004da10:	0019      	movs	r1, r3
1004da12:	687b      	ldr	r3, [r7, #4]
1004da14:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
1004da16:	687b      	ldr	r3, [r7, #4]
1004da18:	681b      	ldr	r3, [r3, #0]
1004da1a:	430a      	orrs	r2, r1
1004da1c:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
1004da1e:	687b      	ldr	r3, [r7, #4]
1004da20:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
1004da22:	2380      	movs	r3, #128	@ 0x80
1004da24:	035b      	lsls	r3, r3, #13
1004da26:	429a      	cmp	r2, r3
1004da28:	d10b      	bne.n	1004da42 <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
1004da2a:	687b      	ldr	r3, [r7, #4]
1004da2c:	681b      	ldr	r3, [r3, #0]
1004da2e:	685b      	ldr	r3, [r3, #4]
1004da30:	4a15      	ldr	r2, [pc, #84]	@ (1004da88 <UART_AdvFeatureConfig+0x160>)
1004da32:	4013      	ands	r3, r2
1004da34:	0019      	movs	r1, r3
1004da36:	687b      	ldr	r3, [r7, #4]
1004da38:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
1004da3a:	687b      	ldr	r3, [r7, #4]
1004da3c:	681b      	ldr	r3, [r3, #0]
1004da3e:	430a      	orrs	r2, r1
1004da40:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
1004da42:	687b      	ldr	r3, [r7, #4]
1004da44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
1004da46:	2280      	movs	r2, #128	@ 0x80
1004da48:	4013      	ands	r3, r2
1004da4a:	d00b      	beq.n	1004da64 <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
1004da4c:	687b      	ldr	r3, [r7, #4]
1004da4e:	681b      	ldr	r3, [r3, #0]
1004da50:	685b      	ldr	r3, [r3, #4]
1004da52:	4a0e      	ldr	r2, [pc, #56]	@ (1004da8c <UART_AdvFeatureConfig+0x164>)
1004da54:	4013      	ands	r3, r2
1004da56:	0019      	movs	r1, r3
1004da58:	687b      	ldr	r3, [r7, #4]
1004da5a:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
1004da5c:	687b      	ldr	r3, [r7, #4]
1004da5e:	681b      	ldr	r3, [r3, #0]
1004da60:	430a      	orrs	r2, r1
1004da62:	605a      	str	r2, [r3, #4]
  }
}
1004da64:	46c0      	nop			@ (mov r8, r8)
1004da66:	46bd      	mov	sp, r7
1004da68:	b002      	add	sp, #8
1004da6a:	bd80      	pop	{r7, pc}
1004da6c:	ffff7fff 	.word	0xffff7fff
1004da70:	fffdffff 	.word	0xfffdffff
1004da74:	fffeffff 	.word	0xfffeffff
1004da78:	fffbffff 	.word	0xfffbffff
1004da7c:	ffffefff 	.word	0xffffefff
1004da80:	ffffdfff 	.word	0xffffdfff
1004da84:	ffefffff 	.word	0xffefffff
1004da88:	ff9fffff 	.word	0xff9fffff
1004da8c:	fff7ffff 	.word	0xfff7ffff

1004da90 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
1004da90:	b580      	push	{r7, lr}
1004da92:	b092      	sub	sp, #72	@ 0x48
1004da94:	af02      	add	r7, sp, #8
1004da96:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
1004da98:	687b      	ldr	r3, [r7, #4]
1004da9a:	2290      	movs	r2, #144	@ 0x90
1004da9c:	2100      	movs	r1, #0
1004da9e:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
1004daa0:	f7fc f888 	bl	10049bb4 <HAL_GetTick>
1004daa4:	0003      	movs	r3, r0
1004daa6:	63fb      	str	r3, [r7, #60]	@ 0x3c

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
1004daa8:	687b      	ldr	r3, [r7, #4]
1004daaa:	681b      	ldr	r3, [r3, #0]
1004daac:	681b      	ldr	r3, [r3, #0]
1004daae:	2208      	movs	r2, #8
1004dab0:	4013      	ands	r3, r2
1004dab2:	2b08      	cmp	r3, #8
1004dab4:	d12d      	bne.n	1004db12 <UART_CheckIdleState+0x82>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
1004dab6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004dab8:	2280      	movs	r2, #128	@ 0x80
1004daba:	0391      	lsls	r1, r2, #14
1004dabc:	6878      	ldr	r0, [r7, #4]
1004dabe:	4a47      	ldr	r2, [pc, #284]	@ (1004dbdc <UART_CheckIdleState+0x14c>)
1004dac0:	9200      	str	r2, [sp, #0]
1004dac2:	2200      	movs	r2, #0
1004dac4:	f000 f88e 	bl	1004dbe4 <UART_WaitOnFlagUntilTimeout>
1004dac8:	1e03      	subs	r3, r0, #0
1004daca:	d022      	beq.n	1004db12 <UART_CheckIdleState+0x82>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004dacc:	f3ef 8310 	mrs	r3, PRIMASK
1004dad0:	627b      	str	r3, [r7, #36]	@ 0x24
  return(result);
1004dad2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
1004dad4:	63bb      	str	r3, [r7, #56]	@ 0x38
1004dad6:	2301      	movs	r3, #1
1004dad8:	62bb      	str	r3, [r7, #40]	@ 0x28
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004dada:	6abb      	ldr	r3, [r7, #40]	@ 0x28
1004dadc:	f383 8810 	msr	PRIMASK, r3
}
1004dae0:	46c0      	nop			@ (mov r8, r8)
1004dae2:	687b      	ldr	r3, [r7, #4]
1004dae4:	681b      	ldr	r3, [r3, #0]
1004dae6:	681a      	ldr	r2, [r3, #0]
1004dae8:	687b      	ldr	r3, [r7, #4]
1004daea:	681b      	ldr	r3, [r3, #0]
1004daec:	2180      	movs	r1, #128	@ 0x80
1004daee:	438a      	bics	r2, r1
1004daf0:	601a      	str	r2, [r3, #0]
1004daf2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1004daf4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004daf6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1004daf8:	f383 8810 	msr	PRIMASK, r3
}
1004dafc:	46c0      	nop			@ (mov r8, r8)

      huart->gState = HAL_UART_STATE_READY;
1004dafe:	687b      	ldr	r3, [r7, #4]
1004db00:	2288      	movs	r2, #136	@ 0x88
1004db02:	2120      	movs	r1, #32
1004db04:	5099      	str	r1, [r3, r2]

      __HAL_UNLOCK(huart);
1004db06:	687b      	ldr	r3, [r7, #4]
1004db08:	2284      	movs	r2, #132	@ 0x84
1004db0a:	2100      	movs	r1, #0
1004db0c:	5499      	strb	r1, [r3, r2]

      /* Timeout occurred */
      return HAL_TIMEOUT;
1004db0e:	2303      	movs	r3, #3
1004db10:	e060      	b.n	1004dbd4 <UART_CheckIdleState+0x144>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
1004db12:	687b      	ldr	r3, [r7, #4]
1004db14:	681b      	ldr	r3, [r3, #0]
1004db16:	681b      	ldr	r3, [r3, #0]
1004db18:	2204      	movs	r2, #4
1004db1a:	4013      	ands	r3, r2
1004db1c:	2b04      	cmp	r3, #4
1004db1e:	d146      	bne.n	1004dbae <UART_CheckIdleState+0x11e>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
1004db20:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004db22:	2280      	movs	r2, #128	@ 0x80
1004db24:	03d1      	lsls	r1, r2, #15
1004db26:	6878      	ldr	r0, [r7, #4]
1004db28:	4a2c      	ldr	r2, [pc, #176]	@ (1004dbdc <UART_CheckIdleState+0x14c>)
1004db2a:	9200      	str	r2, [sp, #0]
1004db2c:	2200      	movs	r2, #0
1004db2e:	f000 f859 	bl	1004dbe4 <UART_WaitOnFlagUntilTimeout>
1004db32:	1e03      	subs	r3, r0, #0
1004db34:	d03b      	beq.n	1004dbae <UART_CheckIdleState+0x11e>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004db36:	f3ef 8310 	mrs	r3, PRIMASK
1004db3a:	60fb      	str	r3, [r7, #12]
  return(result);
1004db3c:	68fb      	ldr	r3, [r7, #12]
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
1004db3e:	637b      	str	r3, [r7, #52]	@ 0x34
1004db40:	2301      	movs	r3, #1
1004db42:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004db44:	693b      	ldr	r3, [r7, #16]
1004db46:	f383 8810 	msr	PRIMASK, r3
}
1004db4a:	46c0      	nop			@ (mov r8, r8)
1004db4c:	687b      	ldr	r3, [r7, #4]
1004db4e:	681b      	ldr	r3, [r3, #0]
1004db50:	681a      	ldr	r2, [r3, #0]
1004db52:	687b      	ldr	r3, [r7, #4]
1004db54:	681b      	ldr	r3, [r3, #0]
1004db56:	4922      	ldr	r1, [pc, #136]	@ (1004dbe0 <UART_CheckIdleState+0x150>)
1004db58:	400a      	ands	r2, r1
1004db5a:	601a      	str	r2, [r3, #0]
1004db5c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004db5e:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004db60:	697b      	ldr	r3, [r7, #20]
1004db62:	f383 8810 	msr	PRIMASK, r3
}
1004db66:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004db68:	f3ef 8310 	mrs	r3, PRIMASK
1004db6c:	61bb      	str	r3, [r7, #24]
  return(result);
1004db6e:	69bb      	ldr	r3, [r7, #24]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1004db70:	633b      	str	r3, [r7, #48]	@ 0x30
1004db72:	2301      	movs	r3, #1
1004db74:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004db76:	69fb      	ldr	r3, [r7, #28]
1004db78:	f383 8810 	msr	PRIMASK, r3
}
1004db7c:	46c0      	nop			@ (mov r8, r8)
1004db7e:	687b      	ldr	r3, [r7, #4]
1004db80:	681b      	ldr	r3, [r3, #0]
1004db82:	689a      	ldr	r2, [r3, #8]
1004db84:	687b      	ldr	r3, [r7, #4]
1004db86:	681b      	ldr	r3, [r3, #0]
1004db88:	2101      	movs	r1, #1
1004db8a:	438a      	bics	r2, r1
1004db8c:	609a      	str	r2, [r3, #8]
1004db8e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1004db90:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004db92:	6a3b      	ldr	r3, [r7, #32]
1004db94:	f383 8810 	msr	PRIMASK, r3
}
1004db98:	46c0      	nop			@ (mov r8, r8)

      huart->RxState = HAL_UART_STATE_READY;
1004db9a:	687b      	ldr	r3, [r7, #4]
1004db9c:	228c      	movs	r2, #140	@ 0x8c
1004db9e:	2120      	movs	r1, #32
1004dba0:	5099      	str	r1, [r3, r2]

      __HAL_UNLOCK(huart);
1004dba2:	687b      	ldr	r3, [r7, #4]
1004dba4:	2284      	movs	r2, #132	@ 0x84
1004dba6:	2100      	movs	r1, #0
1004dba8:	5499      	strb	r1, [r3, r2]

      /* Timeout occurred */
      return HAL_TIMEOUT;
1004dbaa:	2303      	movs	r3, #3
1004dbac:	e012      	b.n	1004dbd4 <UART_CheckIdleState+0x144>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
1004dbae:	687b      	ldr	r3, [r7, #4]
1004dbb0:	2288      	movs	r2, #136	@ 0x88
1004dbb2:	2120      	movs	r1, #32
1004dbb4:	5099      	str	r1, [r3, r2]
  huart->RxState = HAL_UART_STATE_READY;
1004dbb6:	687b      	ldr	r3, [r7, #4]
1004dbb8:	228c      	movs	r2, #140	@ 0x8c
1004dbba:	2120      	movs	r1, #32
1004dbbc:	5099      	str	r1, [r3, r2]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1004dbbe:	687b      	ldr	r3, [r7, #4]
1004dbc0:	2200      	movs	r2, #0
1004dbc2:	66da      	str	r2, [r3, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
1004dbc4:	687b      	ldr	r3, [r7, #4]
1004dbc6:	2200      	movs	r2, #0
1004dbc8:	671a      	str	r2, [r3, #112]	@ 0x70

  __HAL_UNLOCK(huart);
1004dbca:	687b      	ldr	r3, [r7, #4]
1004dbcc:	2284      	movs	r2, #132	@ 0x84
1004dbce:	2100      	movs	r1, #0
1004dbd0:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
1004dbd2:	2300      	movs	r3, #0
}
1004dbd4:	0018      	movs	r0, r3
1004dbd6:	46bd      	mov	sp, r7
1004dbd8:	b010      	add	sp, #64	@ 0x40
1004dbda:	bd80      	pop	{r7, pc}
1004dbdc:	01ffffff 	.word	0x01ffffff
1004dbe0:	fffffedf 	.word	0xfffffedf

1004dbe4 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
1004dbe4:	b580      	push	{r7, lr}
1004dbe6:	b084      	sub	sp, #16
1004dbe8:	af00      	add	r7, sp, #0
1004dbea:	60f8      	str	r0, [r7, #12]
1004dbec:	60b9      	str	r1, [r7, #8]
1004dbee:	603b      	str	r3, [r7, #0]
1004dbf0:	1dfb      	adds	r3, r7, #7
1004dbf2:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
1004dbf4:	e051      	b.n	1004dc9a <UART_WaitOnFlagUntilTimeout+0xb6>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
1004dbf6:	69bb      	ldr	r3, [r7, #24]
1004dbf8:	3301      	adds	r3, #1
1004dbfa:	d04e      	beq.n	1004dc9a <UART_WaitOnFlagUntilTimeout+0xb6>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
1004dbfc:	f7fb ffda 	bl	10049bb4 <HAL_GetTick>
1004dc00:	0002      	movs	r2, r0
1004dc02:	683b      	ldr	r3, [r7, #0]
1004dc04:	1ad3      	subs	r3, r2, r3
1004dc06:	69ba      	ldr	r2, [r7, #24]
1004dc08:	429a      	cmp	r2, r3
1004dc0a:	d302      	bcc.n	1004dc12 <UART_WaitOnFlagUntilTimeout+0x2e>
1004dc0c:	69bb      	ldr	r3, [r7, #24]
1004dc0e:	2b00      	cmp	r3, #0
1004dc10:	d101      	bne.n	1004dc16 <UART_WaitOnFlagUntilTimeout+0x32>
      {

        return HAL_TIMEOUT;
1004dc12:	2303      	movs	r3, #3
1004dc14:	e051      	b.n	1004dcba <UART_WaitOnFlagUntilTimeout+0xd6>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
1004dc16:	68fb      	ldr	r3, [r7, #12]
1004dc18:	681b      	ldr	r3, [r3, #0]
1004dc1a:	681b      	ldr	r3, [r3, #0]
1004dc1c:	2204      	movs	r2, #4
1004dc1e:	4013      	ands	r3, r2
1004dc20:	d03b      	beq.n	1004dc9a <UART_WaitOnFlagUntilTimeout+0xb6>
1004dc22:	68bb      	ldr	r3, [r7, #8]
1004dc24:	2b80      	cmp	r3, #128	@ 0x80
1004dc26:	d038      	beq.n	1004dc9a <UART_WaitOnFlagUntilTimeout+0xb6>
1004dc28:	68bb      	ldr	r3, [r7, #8]
1004dc2a:	2b40      	cmp	r3, #64	@ 0x40
1004dc2c:	d035      	beq.n	1004dc9a <UART_WaitOnFlagUntilTimeout+0xb6>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
1004dc2e:	68fb      	ldr	r3, [r7, #12]
1004dc30:	681b      	ldr	r3, [r3, #0]
1004dc32:	69db      	ldr	r3, [r3, #28]
1004dc34:	2208      	movs	r2, #8
1004dc36:	4013      	ands	r3, r2
1004dc38:	2b08      	cmp	r3, #8
1004dc3a:	d111      	bne.n	1004dc60 <UART_WaitOnFlagUntilTimeout+0x7c>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1004dc3c:	68fb      	ldr	r3, [r7, #12]
1004dc3e:	681b      	ldr	r3, [r3, #0]
1004dc40:	2208      	movs	r2, #8
1004dc42:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
1004dc44:	68fb      	ldr	r3, [r7, #12]
1004dc46:	0018      	movs	r0, r3
1004dc48:	f000 f83c 	bl	1004dcc4 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
1004dc4c:	68fb      	ldr	r3, [r7, #12]
1004dc4e:	2290      	movs	r2, #144	@ 0x90
1004dc50:	2108      	movs	r1, #8
1004dc52:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
1004dc54:	68fb      	ldr	r3, [r7, #12]
1004dc56:	2284      	movs	r2, #132	@ 0x84
1004dc58:	2100      	movs	r1, #0
1004dc5a:	5499      	strb	r1, [r3, r2]

          return HAL_ERROR;
1004dc5c:	2301      	movs	r3, #1
1004dc5e:	e02c      	b.n	1004dcba <UART_WaitOnFlagUntilTimeout+0xd6>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
1004dc60:	68fb      	ldr	r3, [r7, #12]
1004dc62:	681b      	ldr	r3, [r3, #0]
1004dc64:	69da      	ldr	r2, [r3, #28]
1004dc66:	2380      	movs	r3, #128	@ 0x80
1004dc68:	011b      	lsls	r3, r3, #4
1004dc6a:	401a      	ands	r2, r3
1004dc6c:	2380      	movs	r3, #128	@ 0x80
1004dc6e:	011b      	lsls	r3, r3, #4
1004dc70:	429a      	cmp	r2, r3
1004dc72:	d112      	bne.n	1004dc9a <UART_WaitOnFlagUntilTimeout+0xb6>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
1004dc74:	68fb      	ldr	r3, [r7, #12]
1004dc76:	681b      	ldr	r3, [r3, #0]
1004dc78:	2280      	movs	r2, #128	@ 0x80
1004dc7a:	0112      	lsls	r2, r2, #4
1004dc7c:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
1004dc7e:	68fb      	ldr	r3, [r7, #12]
1004dc80:	0018      	movs	r0, r3
1004dc82:	f000 f81f 	bl	1004dcc4 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
1004dc86:	68fb      	ldr	r3, [r7, #12]
1004dc88:	2290      	movs	r2, #144	@ 0x90
1004dc8a:	2120      	movs	r1, #32
1004dc8c:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
1004dc8e:	68fb      	ldr	r3, [r7, #12]
1004dc90:	2284      	movs	r2, #132	@ 0x84
1004dc92:	2100      	movs	r1, #0
1004dc94:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
1004dc96:	2303      	movs	r3, #3
1004dc98:	e00f      	b.n	1004dcba <UART_WaitOnFlagUntilTimeout+0xd6>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
1004dc9a:	68fb      	ldr	r3, [r7, #12]
1004dc9c:	681b      	ldr	r3, [r3, #0]
1004dc9e:	69db      	ldr	r3, [r3, #28]
1004dca0:	68ba      	ldr	r2, [r7, #8]
1004dca2:	4013      	ands	r3, r2
1004dca4:	68ba      	ldr	r2, [r7, #8]
1004dca6:	1ad3      	subs	r3, r2, r3
1004dca8:	425a      	negs	r2, r3
1004dcaa:	4153      	adcs	r3, r2
1004dcac:	b2db      	uxtb	r3, r3
1004dcae:	001a      	movs	r2, r3
1004dcb0:	1dfb      	adds	r3, r7, #7
1004dcb2:	781b      	ldrb	r3, [r3, #0]
1004dcb4:	429a      	cmp	r2, r3
1004dcb6:	d09e      	beq.n	1004dbf6 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
1004dcb8:	2300      	movs	r3, #0
}
1004dcba:	0018      	movs	r0, r3
1004dcbc:	46bd      	mov	sp, r7
1004dcbe:	b004      	add	sp, #16
1004dcc0:	bd80      	pop	{r7, pc}
	...

1004dcc4 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
1004dcc4:	b580      	push	{r7, lr}
1004dcc6:	b08e      	sub	sp, #56	@ 0x38
1004dcc8:	af00      	add	r7, sp, #0
1004dcca:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004dccc:	f3ef 8310 	mrs	r3, PRIMASK
1004dcd0:	617b      	str	r3, [r7, #20]
  return(result);
1004dcd2:	697b      	ldr	r3, [r7, #20]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
1004dcd4:	637b      	str	r3, [r7, #52]	@ 0x34
1004dcd6:	2301      	movs	r3, #1
1004dcd8:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004dcda:	69bb      	ldr	r3, [r7, #24]
1004dcdc:	f383 8810 	msr	PRIMASK, r3
}
1004dce0:	46c0      	nop			@ (mov r8, r8)
1004dce2:	687b      	ldr	r3, [r7, #4]
1004dce4:	681b      	ldr	r3, [r3, #0]
1004dce6:	681a      	ldr	r2, [r3, #0]
1004dce8:	687b      	ldr	r3, [r7, #4]
1004dcea:	681b      	ldr	r3, [r3, #0]
1004dcec:	4926      	ldr	r1, [pc, #152]	@ (1004dd88 <UART_EndRxTransfer+0xc4>)
1004dcee:	400a      	ands	r2, r1
1004dcf0:	601a      	str	r2, [r3, #0]
1004dcf2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004dcf4:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004dcf6:	69fb      	ldr	r3, [r7, #28]
1004dcf8:	f383 8810 	msr	PRIMASK, r3
}
1004dcfc:	46c0      	nop			@ (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004dcfe:	f3ef 8310 	mrs	r3, PRIMASK
1004dd02:	623b      	str	r3, [r7, #32]
  return(result);
1004dd04:	6a3b      	ldr	r3, [r7, #32]
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
1004dd06:	633b      	str	r3, [r7, #48]	@ 0x30
1004dd08:	2301      	movs	r3, #1
1004dd0a:	627b      	str	r3, [r7, #36]	@ 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004dd0c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004dd0e:	f383 8810 	msr	PRIMASK, r3
}
1004dd12:	46c0      	nop			@ (mov r8, r8)
1004dd14:	687b      	ldr	r3, [r7, #4]
1004dd16:	681b      	ldr	r3, [r3, #0]
1004dd18:	689a      	ldr	r2, [r3, #8]
1004dd1a:	687b      	ldr	r3, [r7, #4]
1004dd1c:	681b      	ldr	r3, [r3, #0]
1004dd1e:	491b      	ldr	r1, [pc, #108]	@ (1004dd8c <UART_EndRxTransfer+0xc8>)
1004dd20:	400a      	ands	r2, r1
1004dd22:	609a      	str	r2, [r3, #8]
1004dd24:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
1004dd26:	62bb      	str	r3, [r7, #40]	@ 0x28
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004dd28:	6abb      	ldr	r3, [r7, #40]	@ 0x28
1004dd2a:	f383 8810 	msr	PRIMASK, r3
}
1004dd2e:	46c0      	nop			@ (mov r8, r8)

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
1004dd30:	687b      	ldr	r3, [r7, #4]
1004dd32:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
1004dd34:	2b01      	cmp	r3, #1
1004dd36:	d118      	bne.n	1004dd6a <UART_EndRxTransfer+0xa6>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004dd38:	f3ef 8310 	mrs	r3, PRIMASK
1004dd3c:	60bb      	str	r3, [r7, #8]
  return(result);
1004dd3e:	68bb      	ldr	r3, [r7, #8]
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
1004dd40:	62fb      	str	r3, [r7, #44]	@ 0x2c
1004dd42:	2301      	movs	r3, #1
1004dd44:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004dd46:	68fb      	ldr	r3, [r7, #12]
1004dd48:	f383 8810 	msr	PRIMASK, r3
}
1004dd4c:	46c0      	nop			@ (mov r8, r8)
1004dd4e:	687b      	ldr	r3, [r7, #4]
1004dd50:	681b      	ldr	r3, [r3, #0]
1004dd52:	681a      	ldr	r2, [r3, #0]
1004dd54:	687b      	ldr	r3, [r7, #4]
1004dd56:	681b      	ldr	r3, [r3, #0]
1004dd58:	2110      	movs	r1, #16
1004dd5a:	438a      	bics	r2, r1
1004dd5c:	601a      	str	r2, [r3, #0]
1004dd5e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
1004dd60:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004dd62:	693b      	ldr	r3, [r7, #16]
1004dd64:	f383 8810 	msr	PRIMASK, r3
}
1004dd68:	46c0      	nop			@ (mov r8, r8)
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
1004dd6a:	687b      	ldr	r3, [r7, #4]
1004dd6c:	228c      	movs	r2, #140	@ 0x8c
1004dd6e:	2120      	movs	r1, #32
1004dd70:	5099      	str	r1, [r3, r2]
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
1004dd72:	687b      	ldr	r3, [r7, #4]
1004dd74:	2200      	movs	r2, #0
1004dd76:	66da      	str	r2, [r3, #108]	@ 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
1004dd78:	687b      	ldr	r3, [r7, #4]
1004dd7a:	2200      	movs	r2, #0
1004dd7c:	675a      	str	r2, [r3, #116]	@ 0x74
}
1004dd7e:	46c0      	nop			@ (mov r8, r8)
1004dd80:	46bd      	mov	sp, r7
1004dd82:	b00e      	add	sp, #56	@ 0x38
1004dd84:	bd80      	pop	{r7, pc}
1004dd86:	46c0      	nop			@ (mov r8, r8)
1004dd88:	fffffedf 	.word	0xfffffedf
1004dd8c:	effffffe 	.word	0xeffffffe

1004dd90 <HAL_UARTEx_EnableFifoMode>:
  * @brief  Enable the FIFO mode.
  * @param huart      UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_EnableFifoMode(UART_HandleTypeDef *huart)
{
1004dd90:	b580      	push	{r7, lr}
1004dd92:	b084      	sub	sp, #16
1004dd94:	af00      	add	r7, sp, #0
1004dd96:	6078      	str	r0, [r7, #4]

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
1004dd98:	687b      	ldr	r3, [r7, #4]
1004dd9a:	2284      	movs	r2, #132	@ 0x84
1004dd9c:	5c9b      	ldrb	r3, [r3, r2]
1004dd9e:	2b01      	cmp	r3, #1
1004dda0:	d101      	bne.n	1004dda6 <HAL_UARTEx_EnableFifoMode+0x16>
1004dda2:	2302      	movs	r3, #2
1004dda4:	e02d      	b.n	1004de02 <HAL_UARTEx_EnableFifoMode+0x72>
1004dda6:	687b      	ldr	r3, [r7, #4]
1004dda8:	2284      	movs	r2, #132	@ 0x84
1004ddaa:	2101      	movs	r1, #1
1004ddac:	5499      	strb	r1, [r3, r2]

  huart->gState = HAL_UART_STATE_BUSY;
1004ddae:	687b      	ldr	r3, [r7, #4]
1004ddb0:	2288      	movs	r2, #136	@ 0x88
1004ddb2:	2124      	movs	r1, #36	@ 0x24
1004ddb4:	5099      	str	r1, [r3, r2]

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
1004ddb6:	687b      	ldr	r3, [r7, #4]
1004ddb8:	681b      	ldr	r3, [r3, #0]
1004ddba:	681b      	ldr	r3, [r3, #0]
1004ddbc:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
1004ddbe:	687b      	ldr	r3, [r7, #4]
1004ddc0:	681b      	ldr	r3, [r3, #0]
1004ddc2:	681a      	ldr	r2, [r3, #0]
1004ddc4:	687b      	ldr	r3, [r7, #4]
1004ddc6:	681b      	ldr	r3, [r3, #0]
1004ddc8:	2101      	movs	r1, #1
1004ddca:	438a      	bics	r2, r1
1004ddcc:	601a      	str	r2, [r3, #0]

  /* Enable FIFO mode */
  SET_BIT(tmpcr1, USART_CR1_FIFOEN);
1004ddce:	68fb      	ldr	r3, [r7, #12]
1004ddd0:	2280      	movs	r2, #128	@ 0x80
1004ddd2:	0592      	lsls	r2, r2, #22
1004ddd4:	4313      	orrs	r3, r2
1004ddd6:	60fb      	str	r3, [r7, #12]
  huart->FifoMode = UART_FIFOMODE_ENABLE;
1004ddd8:	687b      	ldr	r3, [r7, #4]
1004ddda:	2280      	movs	r2, #128	@ 0x80
1004dddc:	0592      	lsls	r2, r2, #22
1004ddde:	665a      	str	r2, [r3, #100]	@ 0x64

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
1004dde0:	687b      	ldr	r3, [r7, #4]
1004dde2:	681b      	ldr	r3, [r3, #0]
1004dde4:	68fa      	ldr	r2, [r7, #12]
1004dde6:	601a      	str	r2, [r3, #0]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
1004dde8:	687b      	ldr	r3, [r7, #4]
1004ddea:	0018      	movs	r0, r3
1004ddec:	f000 f88e 	bl	1004df0c <UARTEx_SetNbDataToProcess>

  huart->gState = HAL_UART_STATE_READY;
1004ddf0:	687b      	ldr	r3, [r7, #4]
1004ddf2:	2288      	movs	r2, #136	@ 0x88
1004ddf4:	2120      	movs	r1, #32
1004ddf6:	5099      	str	r1, [r3, r2]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
1004ddf8:	687b      	ldr	r3, [r7, #4]
1004ddfa:	2284      	movs	r2, #132	@ 0x84
1004ddfc:	2100      	movs	r1, #0
1004ddfe:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
1004de00:	2300      	movs	r3, #0
}
1004de02:	0018      	movs	r0, r3
1004de04:	46bd      	mov	sp, r7
1004de06:	b004      	add	sp, #16
1004de08:	bd80      	pop	{r7, pc}

1004de0a <HAL_UARTEx_SetTxFifoThreshold>:
  *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
1004de0a:	b580      	push	{r7, lr}
1004de0c:	b084      	sub	sp, #16
1004de0e:	af00      	add	r7, sp, #0
1004de10:	6078      	str	r0, [r7, #4]
1004de12:	6039      	str	r1, [r7, #0]
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
1004de14:	687b      	ldr	r3, [r7, #4]
1004de16:	2284      	movs	r2, #132	@ 0x84
1004de18:	5c9b      	ldrb	r3, [r3, r2]
1004de1a:	2b01      	cmp	r3, #1
1004de1c:	d101      	bne.n	1004de22 <HAL_UARTEx_SetTxFifoThreshold+0x18>
1004de1e:	2302      	movs	r3, #2
1004de20:	e02e      	b.n	1004de80 <HAL_UARTEx_SetTxFifoThreshold+0x76>
1004de22:	687b      	ldr	r3, [r7, #4]
1004de24:	2284      	movs	r2, #132	@ 0x84
1004de26:	2101      	movs	r1, #1
1004de28:	5499      	strb	r1, [r3, r2]

  huart->gState = HAL_UART_STATE_BUSY;
1004de2a:	687b      	ldr	r3, [r7, #4]
1004de2c:	2288      	movs	r2, #136	@ 0x88
1004de2e:	2124      	movs	r1, #36	@ 0x24
1004de30:	5099      	str	r1, [r3, r2]

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
1004de32:	687b      	ldr	r3, [r7, #4]
1004de34:	681b      	ldr	r3, [r3, #0]
1004de36:	681b      	ldr	r3, [r3, #0]
1004de38:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
1004de3a:	687b      	ldr	r3, [r7, #4]
1004de3c:	681b      	ldr	r3, [r3, #0]
1004de3e:	681a      	ldr	r2, [r3, #0]
1004de40:	687b      	ldr	r3, [r7, #4]
1004de42:	681b      	ldr	r3, [r3, #0]
1004de44:	2101      	movs	r1, #1
1004de46:	438a      	bics	r2, r1
1004de48:	601a      	str	r2, [r3, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
1004de4a:	687b      	ldr	r3, [r7, #4]
1004de4c:	681b      	ldr	r3, [r3, #0]
1004de4e:	689b      	ldr	r3, [r3, #8]
1004de50:	00db      	lsls	r3, r3, #3
1004de52:	08d9      	lsrs	r1, r3, #3
1004de54:	687b      	ldr	r3, [r7, #4]
1004de56:	681b      	ldr	r3, [r3, #0]
1004de58:	683a      	ldr	r2, [r7, #0]
1004de5a:	430a      	orrs	r2, r1
1004de5c:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
1004de5e:	687b      	ldr	r3, [r7, #4]
1004de60:	0018      	movs	r0, r3
1004de62:	f000 f853 	bl	1004df0c <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
1004de66:	687b      	ldr	r3, [r7, #4]
1004de68:	681b      	ldr	r3, [r3, #0]
1004de6a:	68fa      	ldr	r2, [r7, #12]
1004de6c:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
1004de6e:	687b      	ldr	r3, [r7, #4]
1004de70:	2288      	movs	r2, #136	@ 0x88
1004de72:	2120      	movs	r1, #32
1004de74:	5099      	str	r1, [r3, r2]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
1004de76:	687b      	ldr	r3, [r7, #4]
1004de78:	2284      	movs	r2, #132	@ 0x84
1004de7a:	2100      	movs	r1, #0
1004de7c:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
1004de7e:	2300      	movs	r3, #0
}
1004de80:	0018      	movs	r0, r3
1004de82:	46bd      	mov	sp, r7
1004de84:	b004      	add	sp, #16
1004de86:	bd80      	pop	{r7, pc}

1004de88 <HAL_UARTEx_SetRxFifoThreshold>:
  *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
1004de88:	b580      	push	{r7, lr}
1004de8a:	b084      	sub	sp, #16
1004de8c:	af00      	add	r7, sp, #0
1004de8e:	6078      	str	r0, [r7, #4]
1004de90:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
1004de92:	687b      	ldr	r3, [r7, #4]
1004de94:	2284      	movs	r2, #132	@ 0x84
1004de96:	5c9b      	ldrb	r3, [r3, r2]
1004de98:	2b01      	cmp	r3, #1
1004de9a:	d101      	bne.n	1004dea0 <HAL_UARTEx_SetRxFifoThreshold+0x18>
1004de9c:	2302      	movs	r3, #2
1004de9e:	e02f      	b.n	1004df00 <HAL_UARTEx_SetRxFifoThreshold+0x78>
1004dea0:	687b      	ldr	r3, [r7, #4]
1004dea2:	2284      	movs	r2, #132	@ 0x84
1004dea4:	2101      	movs	r1, #1
1004dea6:	5499      	strb	r1, [r3, r2]

  huart->gState = HAL_UART_STATE_BUSY;
1004dea8:	687b      	ldr	r3, [r7, #4]
1004deaa:	2288      	movs	r2, #136	@ 0x88
1004deac:	2124      	movs	r1, #36	@ 0x24
1004deae:	5099      	str	r1, [r3, r2]

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
1004deb0:	687b      	ldr	r3, [r7, #4]
1004deb2:	681b      	ldr	r3, [r3, #0]
1004deb4:	681b      	ldr	r3, [r3, #0]
1004deb6:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
1004deb8:	687b      	ldr	r3, [r7, #4]
1004deba:	681b      	ldr	r3, [r3, #0]
1004debc:	681a      	ldr	r2, [r3, #0]
1004debe:	687b      	ldr	r3, [r7, #4]
1004dec0:	681b      	ldr	r3, [r3, #0]
1004dec2:	2101      	movs	r1, #1
1004dec4:	438a      	bics	r2, r1
1004dec6:	601a      	str	r2, [r3, #0]

  /* Update RX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
1004dec8:	687b      	ldr	r3, [r7, #4]
1004deca:	681b      	ldr	r3, [r3, #0]
1004decc:	689b      	ldr	r3, [r3, #8]
1004dece:	4a0e      	ldr	r2, [pc, #56]	@ (1004df08 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
1004ded0:	4013      	ands	r3, r2
1004ded2:	0019      	movs	r1, r3
1004ded4:	687b      	ldr	r3, [r7, #4]
1004ded6:	681b      	ldr	r3, [r3, #0]
1004ded8:	683a      	ldr	r2, [r7, #0]
1004deda:	430a      	orrs	r2, r1
1004dedc:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
1004dede:	687b      	ldr	r3, [r7, #4]
1004dee0:	0018      	movs	r0, r3
1004dee2:	f000 f813 	bl	1004df0c <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
1004dee6:	687b      	ldr	r3, [r7, #4]
1004dee8:	681b      	ldr	r3, [r3, #0]
1004deea:	68fa      	ldr	r2, [r7, #12]
1004deec:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
1004deee:	687b      	ldr	r3, [r7, #4]
1004def0:	2288      	movs	r2, #136	@ 0x88
1004def2:	2120      	movs	r1, #32
1004def4:	5099      	str	r1, [r3, r2]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
1004def6:	687b      	ldr	r3, [r7, #4]
1004def8:	2284      	movs	r2, #132	@ 0x84
1004defa:	2100      	movs	r1, #0
1004defc:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
1004defe:	2300      	movs	r3, #0
}
1004df00:	0018      	movs	r0, r3
1004df02:	46bd      	mov	sp, r7
1004df04:	b004      	add	sp, #16
1004df06:	bd80      	pop	{r7, pc}
1004df08:	f1ffffff 	.word	0xf1ffffff

1004df0c <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
1004df0c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004df0e:	b085      	sub	sp, #20
1004df10:	af00      	add	r7, sp, #0
1004df12:	6078      	str	r0, [r7, #4]
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
1004df14:	687b      	ldr	r3, [r7, #4]
1004df16:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1004df18:	2b00      	cmp	r3, #0
1004df1a:	d108      	bne.n	1004df2e <UARTEx_SetNbDataToProcess+0x22>
  {
    huart->NbTxDataToProcess = 1U;
1004df1c:	687b      	ldr	r3, [r7, #4]
1004df1e:	226a      	movs	r2, #106	@ 0x6a
1004df20:	2101      	movs	r1, #1
1004df22:	5299      	strh	r1, [r3, r2]
    huart->NbRxDataToProcess = 1U;
1004df24:	687b      	ldr	r3, [r7, #4]
1004df26:	2268      	movs	r2, #104	@ 0x68
1004df28:	2101      	movs	r1, #1
1004df2a:	5299      	strh	r1, [r3, r2]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
1004df2c:	e043      	b.n	1004dfb6 <UARTEx_SetNbDataToProcess+0xaa>
    rx_fifo_depth = RX_FIFO_DEPTH;
1004df2e:	260f      	movs	r6, #15
1004df30:	19bb      	adds	r3, r7, r6
1004df32:	2208      	movs	r2, #8
1004df34:	701a      	strb	r2, [r3, #0]
    tx_fifo_depth = TX_FIFO_DEPTH;
1004df36:	200e      	movs	r0, #14
1004df38:	183b      	adds	r3, r7, r0
1004df3a:	2208      	movs	r2, #8
1004df3c:	701a      	strb	r2, [r3, #0]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
1004df3e:	687b      	ldr	r3, [r7, #4]
1004df40:	681b      	ldr	r3, [r3, #0]
1004df42:	689b      	ldr	r3, [r3, #8]
1004df44:	0e5b      	lsrs	r3, r3, #25
1004df46:	b2da      	uxtb	r2, r3
1004df48:	240d      	movs	r4, #13
1004df4a:	193b      	adds	r3, r7, r4
1004df4c:	2107      	movs	r1, #7
1004df4e:	400a      	ands	r2, r1
1004df50:	701a      	strb	r2, [r3, #0]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
1004df52:	687b      	ldr	r3, [r7, #4]
1004df54:	681b      	ldr	r3, [r3, #0]
1004df56:	689b      	ldr	r3, [r3, #8]
1004df58:	0f5b      	lsrs	r3, r3, #29
1004df5a:	b2da      	uxtb	r2, r3
1004df5c:	250c      	movs	r5, #12
1004df5e:	197b      	adds	r3, r7, r5
1004df60:	2107      	movs	r1, #7
1004df62:	400a      	ands	r2, r1
1004df64:	701a      	strb	r2, [r3, #0]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
1004df66:	183b      	adds	r3, r7, r0
1004df68:	781b      	ldrb	r3, [r3, #0]
1004df6a:	197a      	adds	r2, r7, r5
1004df6c:	7812      	ldrb	r2, [r2, #0]
1004df6e:	4914      	ldr	r1, [pc, #80]	@ (1004dfc0 <UARTEx_SetNbDataToProcess+0xb4>)
1004df70:	5c8a      	ldrb	r2, [r1, r2]
1004df72:	435a      	muls	r2, r3
1004df74:	0010      	movs	r0, r2
                               (uint16_t)denominator[tx_fifo_threshold];
1004df76:	197b      	adds	r3, r7, r5
1004df78:	781b      	ldrb	r3, [r3, #0]
1004df7a:	4a12      	ldr	r2, [pc, #72]	@ (1004dfc4 <UARTEx_SetNbDataToProcess+0xb8>)
1004df7c:	5cd3      	ldrb	r3, [r2, r3]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
1004df7e:	0019      	movs	r1, r3
1004df80:	f7f2 f9e8 	bl	10040354 <__divsi3>
1004df84:	0003      	movs	r3, r0
1004df86:	b299      	uxth	r1, r3
1004df88:	687b      	ldr	r3, [r7, #4]
1004df8a:	226a      	movs	r2, #106	@ 0x6a
1004df8c:	5299      	strh	r1, [r3, r2]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
1004df8e:	19bb      	adds	r3, r7, r6
1004df90:	781b      	ldrb	r3, [r3, #0]
1004df92:	193a      	adds	r2, r7, r4
1004df94:	7812      	ldrb	r2, [r2, #0]
1004df96:	490a      	ldr	r1, [pc, #40]	@ (1004dfc0 <UARTEx_SetNbDataToProcess+0xb4>)
1004df98:	5c8a      	ldrb	r2, [r1, r2]
1004df9a:	435a      	muls	r2, r3
1004df9c:	0010      	movs	r0, r2
                               (uint16_t)denominator[rx_fifo_threshold];
1004df9e:	193b      	adds	r3, r7, r4
1004dfa0:	781b      	ldrb	r3, [r3, #0]
1004dfa2:	4a08      	ldr	r2, [pc, #32]	@ (1004dfc4 <UARTEx_SetNbDataToProcess+0xb8>)
1004dfa4:	5cd3      	ldrb	r3, [r2, r3]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
1004dfa6:	0019      	movs	r1, r3
1004dfa8:	f7f2 f9d4 	bl	10040354 <__divsi3>
1004dfac:	0003      	movs	r3, r0
1004dfae:	b299      	uxth	r1, r3
1004dfb0:	687b      	ldr	r3, [r7, #4]
1004dfb2:	2268      	movs	r2, #104	@ 0x68
1004dfb4:	5299      	strh	r1, [r3, r2]
}
1004dfb6:	46c0      	nop			@ (mov r8, r8)
1004dfb8:	46bd      	mov	sp, r7
1004dfba:	b005      	add	sp, #20
1004dfbc:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004dfbe:	46c0      	nop			@ (mov r8, r8)
1004dfc0:	1006e874 	.word	0x1006e874
1004dfc4:	1006e87c 	.word	0x1006e87c

1004dfc8 <BLE_STACK_Event>:

  return 0;
}

void BLE_STACK_Event(hci_pckt *hci_pckt, uint16_t length)
{
1004dfc8:	b5f0      	push	{r4, r5, r6, r7, lr}
1004dfca:	b089      	sub	sp, #36	@ 0x24
1004dfcc:	af00      	add	r7, sp, #0
1004dfce:	6078      	str	r0, [r7, #4]
1004dfd0:	000a      	movs	r2, r1
1004dfd2:	1cbb      	adds	r3, r7, #2
1004dfd4:	801a      	strh	r2, [r3, #0]
  BLEEVT_EvtAckStatus_t event_notification_status = BLEEVT_NoAck;
1004dfd6:	231f      	movs	r3, #31
1004dfd8:	18fb      	adds	r3, r7, r3
1004dfda:	2200      	movs	r2, #0
1004dfdc:	701a      	strb	r2, [r3, #0]
  
  if(hci_pckt->type == HCI_EVENT_PKT_TYPE || hci_pckt->type == HCI_EVENT_EXT_PKT_TYPE)
1004dfde:	687b      	ldr	r3, [r7, #4]
1004dfe0:	781b      	ldrb	r3, [r3, #0]
1004dfe2:	2b04      	cmp	r3, #4
1004dfe4:	d003      	beq.n	1004dfee <BLE_STACK_Event+0x26>
1004dfe6:	687b      	ldr	r3, [r7, #4]
1004dfe8:	781b      	ldrb	r3, [r3, #0]
1004dfea:	2b82      	cmp	r3, #130	@ 0x82
1004dfec:	d148      	bne.n	1004e080 <BLE_STACK_Event+0xb8>
  {
    void *data;
    hci_event_pckt *event_pckt = (hci_event_pckt*)hci_pckt->data;
1004dfee:	687b      	ldr	r3, [r7, #4]
1004dff0:	3301      	adds	r3, #1
1004dff2:	613b      	str	r3, [r7, #16]
    
    if(hci_pckt->type == HCI_EVENT_PKT_TYPE){
1004dff4:	687b      	ldr	r3, [r7, #4]
1004dff6:	781b      	ldrb	r3, [r3, #0]
1004dff8:	2b04      	cmp	r3, #4
1004dffa:	d103      	bne.n	1004e004 <BLE_STACK_Event+0x3c>
      data = event_pckt->data;
1004dffc:	693b      	ldr	r3, [r7, #16]
1004dffe:	3302      	adds	r3, #2
1004e000:	61bb      	str	r3, [r7, #24]
1004e002:	e005      	b.n	1004e010 <BLE_STACK_Event+0x48>
    }
    else { /* hci_pckt->type == HCI_EVENT_EXT_PKT_TYPE */
      hci_event_ext_pckt *event_pckt = (hci_event_ext_pckt*)hci_pckt->data;
1004e004:	687b      	ldr	r3, [r7, #4]
1004e006:	3301      	adds	r3, #1
1004e008:	60fb      	str	r3, [r7, #12]
      data = event_pckt->data;
1004e00a:	68fb      	ldr	r3, [r7, #12]
1004e00c:	3303      	adds	r3, #3
1004e00e:	61bb      	str	r3, [r7, #24]
    }
    
    if(event_pckt->evt == HCI_VENDOR_EVT_CODE) /* evt fields is at same offset in hci_event_pckt and hci_event_ext_pckt */
1004e010:	693b      	ldr	r3, [r7, #16]
1004e012:	781b      	ldrb	r3, [r3, #0]
1004e014:	2bff      	cmp	r3, #255	@ 0xff
1004e016:	d133      	bne.n	1004e080 <BLE_STACK_Event+0xb8>
    {
      aci_blecore_event * blecore_evt = (aci_blecore_event*) data;
1004e018:	69bb      	ldr	r3, [r7, #24]
1004e01a:	60bb      	str	r3, [r7, #8]
      
      if((blecore_evt->ecode & BLEEVT_EGID_EVT_MASK) == BLEEVT_GATT_EVT_TYPE)
1004e01c:	68bb      	ldr	r3, [r7, #8]
1004e01e:	781a      	ldrb	r2, [r3, #0]
1004e020:	785b      	ldrb	r3, [r3, #1]
1004e022:	021b      	lsls	r3, r3, #8
1004e024:	4313      	orrs	r3, r2
1004e026:	b29b      	uxth	r3, r3
1004e028:	001a      	movs	r2, r3
1004e02a:	23fc      	movs	r3, #252	@ 0xfc
1004e02c:	021b      	lsls	r3, r3, #8
1004e02e:	401a      	ands	r2, r3
1004e030:	23c0      	movs	r3, #192	@ 0xc0
1004e032:	011b      	lsls	r3, r3, #4
1004e034:	429a      	cmp	r2, r3
1004e036:	d123      	bne.n	1004e080 <BLE_STACK_Event+0xb8>
      {
        /* GATT events */
        
#if (BLE_CFG_MAX_NBR_GATT_EVT_HANDLERS > 0)
        /* For GATT event handler */
        for (uint8_t index = 0; index < BLEEVT_GattEvtHandler.NbrOfRegisteredHandlers; index++)
1004e038:	2317      	movs	r3, #23
1004e03a:	18fb      	adds	r3, r7, r3
1004e03c:	2200      	movs	r2, #0
1004e03e:	701a      	strb	r2, [r3, #0]
1004e040:	e015      	b.n	1004e06e <BLE_STACK_Event+0xa6>
        {
          event_notification_status = BLEEVT_GattEvtHandler.BLEEVT_SvcHandlerTab[index](blecore_evt);
1004e042:	2517      	movs	r5, #23
1004e044:	197b      	adds	r3, r7, r5
1004e046:	781a      	ldrb	r2, [r3, #0]
1004e048:	4b14      	ldr	r3, [pc, #80]	@ (1004e09c <BLE_STACK_Event+0xd4>)
1004e04a:	0092      	lsls	r2, r2, #2
1004e04c:	58d3      	ldr	r3, [r2, r3]
1004e04e:	261f      	movs	r6, #31
1004e050:	19bc      	adds	r4, r7, r6
1004e052:	68ba      	ldr	r2, [r7, #8]
1004e054:	0010      	movs	r0, r2
1004e056:	4798      	blx	r3
1004e058:	0003      	movs	r3, r0
1004e05a:	7023      	strb	r3, [r4, #0]
          /**
          * When a GATT event has been acknowledged by application, do not call other registered handler.
          * a GATT event may be relevant for only one Service
          */
          if (event_notification_status == BLEEVT_Ack)
1004e05c:	19bb      	adds	r3, r7, r6
1004e05e:	781b      	ldrb	r3, [r3, #0]
1004e060:	2b01      	cmp	r3, #1
1004e062:	d00c      	beq.n	1004e07e <BLE_STACK_Event+0xb6>
        for (uint8_t index = 0; index < BLEEVT_GattEvtHandler.NbrOfRegisteredHandlers; index++)
1004e064:	197b      	adds	r3, r7, r5
1004e066:	781a      	ldrb	r2, [r3, #0]
1004e068:	197b      	adds	r3, r7, r5
1004e06a:	3201      	adds	r2, #1
1004e06c:	701a      	strb	r2, [r3, #0]
1004e06e:	4b0b      	ldr	r3, [pc, #44]	@ (1004e09c <BLE_STACK_Event+0xd4>)
1004e070:	791b      	ldrb	r3, [r3, #4]
1004e072:	2217      	movs	r2, #23
1004e074:	18ba      	adds	r2, r7, r2
1004e076:	7812      	ldrb	r2, [r2, #0]
1004e078:	429a      	cmp	r2, r3
1004e07a:	d3e2      	bcc.n	1004e042 <BLE_STACK_Event+0x7a>
1004e07c:	e000      	b.n	1004e080 <BLE_STACK_Event+0xb8>
          {
            /**
            *  The event has been managed. The Event processing should be stopped
            */
            break;
1004e07e:	46c0      	nop			@ (mov r8, r8)
  
  /**
   * When no registered handlers has acknowledged the event, it is reported to the application.
   */
  
  if(event_notification_status == BLEEVT_NoAck)
1004e080:	231f      	movs	r3, #31
1004e082:	18fb      	adds	r3, r7, r3
1004e084:	781b      	ldrb	r3, [r3, #0]
1004e086:	2b00      	cmp	r3, #0
1004e088:	d103      	bne.n	1004e092 <BLE_STACK_Event+0xca>
  {
    BLEEVT_App_Notification(hci_pckt);
1004e08a:	687b      	ldr	r3, [r7, #4]
1004e08c:	0018      	movs	r0, r3
1004e08e:	f7f4 fc6f 	bl	10042970 <BLEEVT_App_Notification>
  }
}
1004e092:	46c0      	nop			@ (mov r8, r8)
1004e094:	46bd      	mov	sp, r7
1004e096:	b009      	add	sp, #36	@ 0x24
1004e098:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004e09a:	46c0      	nop			@ (mov r8, r8)
1004e09c:	20000790 	.word	0x20000790

1004e0a0 <GAP_set_advertising_configuration_ucfg>:
                                                  uint8_t Primary_Advertising_PHY,
                                                  uint8_t Secondary_Advertising_Max_Skip,
                                                  uint8_t Secondary_Advertising_PHY,
                                                  uint8_t Advertising_SID,
                                                  uint8_t Scan_Request_Notification_Enable)
{
1004e0a0:	b5b0      	push	{r4, r5, r7, lr}
1004e0a2:	b08e      	sub	sp, #56	@ 0x38
1004e0a4:	af0c      	add	r7, sp, #48	@ 0x30
1004e0a6:	0004      	movs	r4, r0
1004e0a8:	0008      	movs	r0, r1
1004e0aa:	0011      	movs	r1, r2
1004e0ac:	603b      	str	r3, [r7, #0]
1004e0ae:	1dfb      	adds	r3, r7, #7
1004e0b0:	1c22      	adds	r2, r4, #0
1004e0b2:	701a      	strb	r2, [r3, #0]
1004e0b4:	1dbb      	adds	r3, r7, #6
1004e0b6:	1c02      	adds	r2, r0, #0
1004e0b8:	701a      	strb	r2, [r3, #0]
1004e0ba:	1d3b      	adds	r3, r7, #4
1004e0bc:	1c0a      	adds	r2, r1, #0
1004e0be:	801a      	strh	r2, [r3, #0]
    return GAP_set_extended_advertising_configuration(Advertising_Handle,
1004e0c0:	683c      	ldr	r4, [r7, #0]
1004e0c2:	1d3b      	adds	r3, r7, #4
1004e0c4:	881a      	ldrh	r2, [r3, #0]
1004e0c6:	1dbb      	adds	r3, r7, #6
1004e0c8:	7819      	ldrb	r1, [r3, #0]
1004e0ca:	1dfb      	adds	r3, r7, #7
1004e0cc:	7818      	ldrb	r0, [r3, #0]
1004e0ce:	2328      	movs	r3, #40	@ 0x28
1004e0d0:	2518      	movs	r5, #24
1004e0d2:	195b      	adds	r3, r3, r5
1004e0d4:	19db      	adds	r3, r3, r7
1004e0d6:	781b      	ldrb	r3, [r3, #0]
1004e0d8:	930a      	str	r3, [sp, #40]	@ 0x28
1004e0da:	2324      	movs	r3, #36	@ 0x24
1004e0dc:	195b      	adds	r3, r3, r5
1004e0de:	19db      	adds	r3, r3, r7
1004e0e0:	781b      	ldrb	r3, [r3, #0]
1004e0e2:	9309      	str	r3, [sp, #36]	@ 0x24
1004e0e4:	2320      	movs	r3, #32
1004e0e6:	195b      	adds	r3, r3, r5
1004e0e8:	19db      	adds	r3, r3, r7
1004e0ea:	781b      	ldrb	r3, [r3, #0]
1004e0ec:	9308      	str	r3, [sp, #32]
1004e0ee:	2334      	movs	r3, #52	@ 0x34
1004e0f0:	18fb      	adds	r3, r7, r3
1004e0f2:	781b      	ldrb	r3, [r3, #0]
1004e0f4:	9307      	str	r3, [sp, #28]
1004e0f6:	2330      	movs	r3, #48	@ 0x30
1004e0f8:	18fb      	adds	r3, r7, r3
1004e0fa:	781b      	ldrb	r3, [r3, #0]
1004e0fc:	9306      	str	r3, [sp, #24]
1004e0fe:	232c      	movs	r3, #44	@ 0x2c
1004e100:	18fb      	adds	r3, r7, r3
1004e102:	781b      	ldrb	r3, [r3, #0]
1004e104:	b25b      	sxtb	r3, r3
1004e106:	9305      	str	r3, [sp, #20]
1004e108:	2328      	movs	r3, #40	@ 0x28
1004e10a:	18fb      	adds	r3, r7, r3
1004e10c:	781b      	ldrb	r3, [r3, #0]
1004e10e:	9304      	str	r3, [sp, #16]
1004e110:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004e112:	9303      	str	r3, [sp, #12]
1004e114:	2320      	movs	r3, #32
1004e116:	18fb      	adds	r3, r7, r3
1004e118:	781b      	ldrb	r3, [r3, #0]
1004e11a:	9302      	str	r3, [sp, #8]
1004e11c:	231c      	movs	r3, #28
1004e11e:	18fb      	adds	r3, r7, r3
1004e120:	781b      	ldrb	r3, [r3, #0]
1004e122:	9301      	str	r3, [sp, #4]
1004e124:	69bb      	ldr	r3, [r7, #24]
1004e126:	9300      	str	r3, [sp, #0]
1004e128:	0023      	movs	r3, r4
1004e12a:	f003 ff71 	bl	10052010 <GAP_set_extended_advertising_configuration>
1004e12e:	0003      	movs	r3, r0
                                                      Primary_Advertising_PHY,
                                                      Secondary_Advertising_Max_Skip,
                                                      Secondary_Advertising_PHY,
                                                      Advertising_SID,
                                                      Scan_Request_Notification_Enable);
}
1004e130:	0018      	movs	r0, r3
1004e132:	46bd      	mov	sp, r7
1004e134:	b002      	add	sp, #8
1004e136:	bdb0      	pop	{r4, r5, r7, pc}

1004e138 <GAP_set_advertising_enable_ucfg>:
#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus GAP_set_advertising_enable_ucfg(uint8_t Enable,
                                           uint8_t Num_Of_Sets,
                                           Advertising_Set_Parameters_t* Advertising_Set_Parameters)
{
1004e138:	b580      	push	{r7, lr}
1004e13a:	b082      	sub	sp, #8
1004e13c:	af00      	add	r7, sp, #0
1004e13e:	603a      	str	r2, [r7, #0]
1004e140:	1dfb      	adds	r3, r7, #7
1004e142:	1c02      	adds	r2, r0, #0
1004e144:	701a      	strb	r2, [r3, #0]
1004e146:	1dbb      	adds	r3, r7, #6
1004e148:	1c0a      	adds	r2, r1, #0
1004e14a:	701a      	strb	r2, [r3, #0]
    return GAP_set_extended_advertising_enable(Enable,
1004e14c:	683a      	ldr	r2, [r7, #0]
1004e14e:	1dbb      	adds	r3, r7, #6
1004e150:	7819      	ldrb	r1, [r3, #0]
1004e152:	1dfb      	adds	r3, r7, #7
1004e154:	781b      	ldrb	r3, [r3, #0]
1004e156:	0018      	movs	r0, r3
1004e158:	f004 f8a6 	bl	100522a8 <GAP_set_extended_advertising_enable>
1004e15c:	0003      	movs	r3, r0
                                               Num_Of_Sets,
                                               Advertising_Set_Parameters);
}
1004e15e:	0018      	movs	r0, r3
1004e160:	46bd      	mov	sp, r7
1004e162:	b002      	add	sp, #8
1004e164:	bd80      	pop	{r7, pc}

1004e166 <GAP_create_connection_ucfg>:
tBleStatus GAP_create_connection_ucfg(uint8_t* peer_address,
                                      uint8_t peer_address_type,
                                      uint8_t own_address_type,
                                      uint8_t initiator_filter_policy,
                                      uint8_t phys)
{
1004e166:	b590      	push	{r4, r7, lr}
1004e168:	b085      	sub	sp, #20
1004e16a:	af02      	add	r7, sp, #8
1004e16c:	6078      	str	r0, [r7, #4]
1004e16e:	000c      	movs	r4, r1
1004e170:	0010      	movs	r0, r2
1004e172:	0019      	movs	r1, r3
1004e174:	1cfb      	adds	r3, r7, #3
1004e176:	1c22      	adds	r2, r4, #0
1004e178:	701a      	strb	r2, [r3, #0]
1004e17a:	1cbb      	adds	r3, r7, #2
1004e17c:	1c02      	adds	r2, r0, #0
1004e17e:	701a      	strb	r2, [r3, #0]
1004e180:	1c7b      	adds	r3, r7, #1
1004e182:	1c0a      	adds	r2, r1, #0
1004e184:	701a      	strb	r2, [r3, #0]
    return GAP_create_connection_ext(peer_address,
1004e186:	1c7b      	adds	r3, r7, #1
1004e188:	781c      	ldrb	r4, [r3, #0]
1004e18a:	1cbb      	adds	r3, r7, #2
1004e18c:	781a      	ldrb	r2, [r3, #0]
1004e18e:	1cfb      	adds	r3, r7, #3
1004e190:	7819      	ldrb	r1, [r3, #0]
1004e192:	6878      	ldr	r0, [r7, #4]
1004e194:	2318      	movs	r3, #24
1004e196:	18fb      	adds	r3, r7, r3
1004e198:	781b      	ldrb	r3, [r3, #0]
1004e19a:	9300      	str	r3, [sp, #0]
1004e19c:	0023      	movs	r3, r4
1004e19e:	f002 ffb9 	bl	10051114 <GAP_create_connection_ext>
1004e1a2:	0003      	movs	r3, r0
                                     peer_address_type,
                                     own_address_type,
                                     initiator_filter_policy,
                                     phys);
}
1004e1a4:	0018      	movs	r0, r3
1004e1a6:	46bd      	mov	sp, r7
1004e1a8:	b003      	add	sp, #12
1004e1aa:	bd90      	pop	{r4, r7, pc}

1004e1ac <GAP_set_scan_parameters_ucfg>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus GAP_set_scan_parameters_ucfg(uint8_t own_address_type,
                                        uint8_t phys)
{
1004e1ac:	b580      	push	{r7, lr}
1004e1ae:	b082      	sub	sp, #8
1004e1b0:	af00      	add	r7, sp, #0
1004e1b2:	0002      	movs	r2, r0
1004e1b4:	1dfb      	adds	r3, r7, #7
1004e1b6:	701a      	strb	r2, [r3, #0]
1004e1b8:	1dbb      	adds	r3, r7, #6
1004e1ba:	1c0a      	adds	r2, r1, #0
1004e1bc:	701a      	strb	r2, [r3, #0]
    return GAP_set_scan_parameters_ext(own_address_type,
1004e1be:	1dbb      	adds	r3, r7, #6
1004e1c0:	781a      	ldrb	r2, [r3, #0]
1004e1c2:	1dfb      	adds	r3, r7, #7
1004e1c4:	781b      	ldrb	r3, [r3, #0]
1004e1c6:	0011      	movs	r1, r2
1004e1c8:	0018      	movs	r0, r3
1004e1ca:	f002 ffef 	bl	100511ac <GAP_set_scan_parameters_ext>
1004e1ce:	0003      	movs	r3, r0
                                       phys);
}
1004e1d0:	0018      	movs	r0, r3
1004e1d2:	46bd      	mov	sp, r7
1004e1d4:	b002      	add	sp, #8
1004e1d6:	bd80      	pop	{r7, pc}

1004e1d8 <GAP_enable_disable_scan_ucfg>:
#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_SCAN_ENABLED == 1)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus GAP_enable_disable_scan_ucfg(uint8_t enable,
                                        uint8_t duplicate_filtering)
{
1004e1d8:	b580      	push	{r7, lr}
1004e1da:	b082      	sub	sp, #8
1004e1dc:	af00      	add	r7, sp, #0
1004e1de:	0002      	movs	r2, r0
1004e1e0:	1dfb      	adds	r3, r7, #7
1004e1e2:	701a      	strb	r2, [r3, #0]
1004e1e4:	1dbb      	adds	r3, r7, #6
1004e1e6:	1c0a      	adds	r2, r1, #0
1004e1e8:	701a      	strb	r2, [r3, #0]
    return GAP_enable_disable_scan_ext(enable,
1004e1ea:	1dbb      	adds	r3, r7, #6
1004e1ec:	781a      	ldrb	r2, [r3, #0]
1004e1ee:	1dfb      	adds	r3, r7, #7
1004e1f0:	781b      	ldrb	r3, [r3, #0]
1004e1f2:	0011      	movs	r1, r2
1004e1f4:	0018      	movs	r0, r3
1004e1f6:	f003 f80f 	bl	10051218 <GAP_enable_disable_scan_ext>
1004e1fa:	0003      	movs	r3, r0
                                       duplicate_filtering);
}
1004e1fc:	0018      	movs	r0, r3
1004e1fe:	46bd      	mov	sp, r7
1004e200:	b002      	add	sp, #8
1004e202:	bd80      	pop	{r7, pc}

1004e204 <GAP_connection_procedure_ucfg>:
#if (CONNECTION_ENABLED == 1)
tBleStatus GAP_connection_procedure_ucfg(uint8_t procedure_code,
                                         uint8_t phys,
                                         uint8_t peer_address_type,
                                         uint8_t peer_address[6])
{
1004e204:	b590      	push	{r4, r7, lr}
1004e206:	b083      	sub	sp, #12
1004e208:	af00      	add	r7, sp, #0
1004e20a:	0004      	movs	r4, r0
1004e20c:	0008      	movs	r0, r1
1004e20e:	0011      	movs	r1, r2
1004e210:	603b      	str	r3, [r7, #0]
1004e212:	1dfb      	adds	r3, r7, #7
1004e214:	1c22      	adds	r2, r4, #0
1004e216:	701a      	strb	r2, [r3, #0]
1004e218:	1dbb      	adds	r3, r7, #6
1004e21a:	1c02      	adds	r2, r0, #0
1004e21c:	701a      	strb	r2, [r3, #0]
1004e21e:	1d7b      	adds	r3, r7, #5
1004e220:	1c0a      	adds	r2, r1, #0
1004e222:	701a      	strb	r2, [r3, #0]
    return GAP_connection_procedure(procedure_code,
1004e224:	683c      	ldr	r4, [r7, #0]
1004e226:	1d7b      	adds	r3, r7, #5
1004e228:	781a      	ldrb	r2, [r3, #0]
1004e22a:	1dbb      	adds	r3, r7, #6
1004e22c:	7819      	ldrb	r1, [r3, #0]
1004e22e:	1dfb      	adds	r3, r7, #7
1004e230:	7818      	ldrb	r0, [r3, #0]
1004e232:	0023      	movs	r3, r4
1004e234:	f003 f8a4 	bl	10051380 <GAP_connection_procedure>
1004e238:	0003      	movs	r3, r0
                                    phys,
                                    peer_address_type,
                                    peer_address);
}
1004e23a:	0018      	movs	r0, r3
1004e23c:	46bd      	mov	sp, r7
1004e23e:	b003      	add	sp, #12
1004e240:	bd90      	pop	{r4, r7, pc}

1004e242 <GAP_terminate_gap_procedure_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
tBleStatus GAP_terminate_gap_procedure_ucfg(uint8_t procedure_code)
{
1004e242:	b580      	push	{r7, lr}
1004e244:	b082      	sub	sp, #8
1004e246:	af00      	add	r7, sp, #0
1004e248:	0002      	movs	r2, r0
1004e24a:	1dfb      	adds	r3, r7, #7
1004e24c:	701a      	strb	r2, [r3, #0]
    return GAP_terminate_gap_procedure(procedure_code);
1004e24e:	1dfb      	adds	r3, r7, #7
1004e250:	781b      	ldrb	r3, [r3, #0]
1004e252:	0018      	movs	r0, r3
1004e254:	f003 f8ec 	bl	10051430 <GAP_terminate_gap_procedure>
1004e258:	0003      	movs	r3, r0
}
1004e25a:	0018      	movs	r0, r3
1004e25c:	46bd      	mov	sp, r7
1004e25e:	b002      	add	sp, #8
1004e260:	bd80      	pop	{r7, pc}

1004e262 <GAP_discover_peer_name_ucfg>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
tBleStatus GAP_discover_peer_name_ucfg(void)
{
1004e262:	b580      	push	{r7, lr}
1004e264:	af00      	add	r7, sp, #0
    return GAP_discover_peer_name();
1004e266:	f003 f91d 	bl	100514a4 <GAP_discover_peer_name>
1004e26a:	0003      	movs	r3, r0
}
1004e26c:	0018      	movs	r0, r3
1004e26e:	46bd      	mov	sp, r7
1004e270:	bd80      	pop	{r7, pc}

1004e272 <GAP_name_disc_proc_connected_check_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAP_name_disc_proc_connected_check_ucfg(uint16_t task_idx)
{
1004e272:	b580      	push	{r7, lr}
1004e274:	b082      	sub	sp, #8
1004e276:	af00      	add	r7, sp, #0
1004e278:	0002      	movs	r2, r0
1004e27a:	1dbb      	adds	r3, r7, #6
1004e27c:	801a      	strh	r2, [r3, #0]
    GAP_name_disc_proc_connected_check(task_idx);
1004e27e:	1dbb      	adds	r3, r7, #6
1004e280:	881b      	ldrh	r3, [r3, #0]
1004e282:	0018      	movs	r0, r3
1004e284:	f003 f930 	bl	100514e8 <GAP_name_disc_proc_connected_check>
}
1004e288:	46c0      	nop			@ (mov r8, r8)
1004e28a:	46bd      	mov	sp, r7
1004e28c:	b002      	add	sp, #8
1004e28e:	bd80      	pop	{r7, pc}

1004e290 <GAP_central_connection_complete_handler_ucfg>:
      )\
     )\
    )
void GAP_central_connection_complete_handler_ucfg(uint8_t status,
                                                  uint16_t connectionHandle)
{
1004e290:	b580      	push	{r7, lr}
1004e292:	b082      	sub	sp, #8
1004e294:	af00      	add	r7, sp, #0
1004e296:	0002      	movs	r2, r0
1004e298:	1dfb      	adds	r3, r7, #7
1004e29a:	701a      	strb	r2, [r3, #0]
1004e29c:	1d3b      	adds	r3, r7, #4
1004e29e:	1c0a      	adds	r2, r1, #0
1004e2a0:	801a      	strh	r2, [r3, #0]
    GAP_central_connection_complete_handler(status,
1004e2a2:	1d3b      	adds	r3, r7, #4
1004e2a4:	881a      	ldrh	r2, [r3, #0]
1004e2a6:	1dfb      	adds	r3, r7, #7
1004e2a8:	781b      	ldrb	r3, [r3, #0]
1004e2aa:	0011      	movs	r1, r2
1004e2ac:	0018      	movs	r0, r3
1004e2ae:	f003 f941 	bl	10051534 <GAP_central_connection_complete_handler>
                                            connectionHandle);
}
1004e2b2:	46c0      	nop			@ (mov r8, r8)
1004e2b4:	46bd      	mov	sp, r7
1004e2b6:	b002      	add	sp, #8
1004e2b8:	bd80      	pop	{r7, pc}

1004e2ba <GAP_parse_connectable_advertising_report_ucfg>:
#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
uint8_t GAP_parse_connectable_advertising_report_ucfg(uint8_t* adv_buf,
                                                   uint8_t extended)
{
1004e2ba:	b580      	push	{r7, lr}
1004e2bc:	b082      	sub	sp, #8
1004e2be:	af00      	add	r7, sp, #0
1004e2c0:	6078      	str	r0, [r7, #4]
1004e2c2:	000a      	movs	r2, r1
1004e2c4:	1cfb      	adds	r3, r7, #3
1004e2c6:	701a      	strb	r2, [r3, #0]
    return GAP_parse_connectable_advertising_report(adv_buf,
1004e2c8:	1cfb      	adds	r3, r7, #3
1004e2ca:	781a      	ldrb	r2, [r3, #0]
1004e2cc:	687b      	ldr	r3, [r7, #4]
1004e2ce:	0011      	movs	r1, r2
1004e2d0:	0018      	movs	r0, r3
1004e2d2:	f003 f953 	bl	1005157c <GAP_parse_connectable_advertising_report>
1004e2d6:	0003      	movs	r3, r0
                                                    extended);
}
1004e2d8:	0018      	movs	r0, r3
1004e2da:	46bd      	mov	sp, r7
1004e2dc:	b002      	add	sp, #8
1004e2de:	bd80      	pop	{r7, pc}

1004e2e0 <GAP_parse_advertising_report_ucfg>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_SCAN_ENABLED == 1)
uint8_t GAP_parse_advertising_report_ucfg(uint8_t* adv_buf,
                                       uint8_t extended)
{
1004e2e0:	b580      	push	{r7, lr}
1004e2e2:	b082      	sub	sp, #8
1004e2e4:	af00      	add	r7, sp, #0
1004e2e6:	6078      	str	r0, [r7, #4]
1004e2e8:	000a      	movs	r2, r1
1004e2ea:	1cfb      	adds	r3, r7, #3
1004e2ec:	701a      	strb	r2, [r3, #0]
    return GAP_parse_advertising_report(adv_buf,
1004e2ee:	1cfb      	adds	r3, r7, #3
1004e2f0:	781a      	ldrb	r2, [r3, #0]
1004e2f2:	687b      	ldr	r3, [r7, #4]
1004e2f4:	0011      	movs	r1, r2
1004e2f6:	0018      	movs	r0, r3
1004e2f8:	f003 f954 	bl	100515a4 <GAP_parse_advertising_report>
1004e2fc:	0003      	movs	r3, r0
                                        extended);
}
1004e2fe:	0018      	movs	r0, r3
1004e300:	46bd      	mov	sp, r7
1004e302:	b002      	add	sp, #8
1004e304:	bd80      	pop	{r7, pc}

1004e306 <GAP_DiscProcTimeoutcb_ucfg>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void GAP_DiscProcTimeoutcb_ucfg(uint8_t timer_id)
{
1004e306:	b580      	push	{r7, lr}
1004e308:	b082      	sub	sp, #8
1004e30a:	af00      	add	r7, sp, #0
1004e30c:	0002      	movs	r2, r0
1004e30e:	1dfb      	adds	r3, r7, #7
1004e310:	701a      	strb	r2, [r3, #0]
    GAP_DiscProcTimeoutcb(timer_id);
1004e312:	1dfb      	adds	r3, r7, #7
1004e314:	781b      	ldrb	r3, [r3, #0]
1004e316:	0018      	movs	r0, r3
1004e318:	f003 f9f8 	bl	1005170c <GAP_DiscProcTimeoutcb>
}
1004e31c:	46c0      	nop			@ (mov r8, r8)
1004e31e:	46bd      	mov	sp, r7
1004e320:	b002      	add	sp, #8
1004e322:	bd80      	pop	{r7, pc}

1004e324 <GAP_LimDiscTimeoutcb_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAP_LimDiscTimeoutcb_ucfg(uint8_t timer_id)
{
1004e324:	b580      	push	{r7, lr}
1004e326:	b082      	sub	sp, #8
1004e328:	af00      	add	r7, sp, #0
1004e32a:	0002      	movs	r2, r0
1004e32c:	1dfb      	adds	r3, r7, #7
1004e32e:	701a      	strb	r2, [r3, #0]
    GAP_LimDiscTimeoutcb(timer_id);
1004e330:	1dfb      	adds	r3, r7, #7
1004e332:	781b      	ldrb	r3, [r3, #0]
1004e334:	0018      	movs	r0, r3
1004e336:	f003 fc37 	bl	10051ba8 <GAP_LimDiscTimeoutcb>
}
1004e33a:	46c0      	nop			@ (mov r8, r8)
1004e33c:	46bd      	mov	sp, r7
1004e33e:	b002      	add	sp, #8
1004e340:	bd80      	pop	{r7, pc}

1004e342 <GAP_hci_le_advertising_set_terminated_evt_hndl_ucfg>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
void GAP_hci_le_advertising_set_terminated_evt_hndl_ucfg(uint8_t status,
                                                         uint8_t Advertising_Handle)
{
1004e342:	b580      	push	{r7, lr}
1004e344:	b082      	sub	sp, #8
1004e346:	af00      	add	r7, sp, #0
1004e348:	0002      	movs	r2, r0
1004e34a:	1dfb      	adds	r3, r7, #7
1004e34c:	701a      	strb	r2, [r3, #0]
1004e34e:	1dbb      	adds	r3, r7, #6
1004e350:	1c0a      	adds	r2, r1, #0
1004e352:	701a      	strb	r2, [r3, #0]
    GAP_hci_le_advertising_set_terminated_evt_hndl(status,
1004e354:	1dbb      	adds	r3, r7, #6
1004e356:	781a      	ldrb	r2, [r3, #0]
1004e358:	1dfb      	adds	r3, r7, #7
1004e35a:	781b      	ldrb	r3, [r3, #0]
1004e35c:	0011      	movs	r1, r2
1004e35e:	0018      	movs	r0, r3
1004e360:	f003 fc4a 	bl	10051bf8 <GAP_hci_le_advertising_set_terminated_evt_hndl>
                                                   Advertising_Handle);
}
1004e364:	46c0      	nop			@ (mov r8, r8)
1004e366:	46bd      	mov	sp, r7
1004e368:	b002      	add	sp, #8
1004e36a:	bd80      	pop	{r7, pc}

1004e36c <GAP_peripheral_connection_complete_handler_ucfg>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void GAP_peripheral_connection_complete_handler_ucfg(uint16_t connectionHandle)
{
1004e36c:	b580      	push	{r7, lr}
1004e36e:	b082      	sub	sp, #8
1004e370:	af00      	add	r7, sp, #0
1004e372:	0002      	movs	r2, r0
1004e374:	1dbb      	adds	r3, r7, #6
1004e376:	801a      	strh	r2, [r3, #0]
    GAP_peripheral_connection_complete_handler(connectionHandle);
1004e378:	1dbb      	adds	r3, r7, #6
1004e37a:	881b      	ldrh	r3, [r3, #0]
1004e37c:	0018      	movs	r0, r3
1004e37e:	f003 fcbb 	bl	10051cf8 <GAP_peripheral_connection_complete_handler>
}
1004e382:	46c0      	nop			@ (mov r8, r8)
1004e384:	46bd      	mov	sp, r7
1004e386:	b002      	add	sp, #8
1004e388:	bd80      	pop	{r7, pc}

1004e38a <GAP_set_controller_random_address_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus GAP_set_controller_random_address_ucfg(uint8_t random_address[6])
{
1004e38a:	b580      	push	{r7, lr}
1004e38c:	b082      	sub	sp, #8
1004e38e:	af00      	add	r7, sp, #0
1004e390:	6078      	str	r0, [r7, #4]
    return GAP_set_controller_random_address_extended(random_address);
1004e392:	687b      	ldr	r3, [r7, #4]
1004e394:	0018      	movs	r0, r3
1004e396:	f003 fd83 	bl	10051ea0 <GAP_set_controller_random_address_extended>
1004e39a:	0003      	movs	r3, r0
}
1004e39c:	0018      	movs	r0, r3
1004e39e:	46bd      	mov	sp, r7
1004e3a0:	b002      	add	sp, #8
1004e3a2:	bd80      	pop	{r7, pc}

1004e3a4 <GAP_init_advertising_sets_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus GAP_init_advertising_sets_ucfg(uint8_t own_address_type)
{
1004e3a4:	b580      	push	{r7, lr}
1004e3a6:	b082      	sub	sp, #8
1004e3a8:	af00      	add	r7, sp, #0
1004e3aa:	0002      	movs	r2, r0
1004e3ac:	1dfb      	adds	r3, r7, #7
1004e3ae:	701a      	strb	r2, [r3, #0]
    return GAP_init_advertising_sets(own_address_type);
1004e3b0:	1dfb      	adds	r3, r7, #7
1004e3b2:	781b      	ldrb	r3, [r3, #0]
1004e3b4:	0018      	movs	r0, r3
1004e3b6:	f003 fd3f 	bl	10051e38 <GAP_init_advertising_sets>
1004e3ba:	0003      	movs	r3, r0
}
1004e3bc:	0018      	movs	r0, r3
1004e3be:	46bd      	mov	sp, r7
1004e3c0:	b002      	add	sp, #8
1004e3c2:	bd80      	pop	{r7, pc}

1004e3c4 <GAP_suspend_resume_active_advertising_sets_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus GAP_suspend_resume_active_advertising_sets_ucfg(uint8_t resume)
{
1004e3c4:	b580      	push	{r7, lr}
1004e3c6:	b082      	sub	sp, #8
1004e3c8:	af00      	add	r7, sp, #0
1004e3ca:	0002      	movs	r2, r0
1004e3cc:	1dfb      	adds	r3, r7, #7
1004e3ce:	701a      	strb	r2, [r3, #0]
    return GAP_suspend_resume_active_advertising_sets_extended(resume);
1004e3d0:	1dfb      	adds	r3, r7, #7
1004e3d2:	781b      	ldrb	r3, [r3, #0]
1004e3d4:	0018      	movs	r0, r3
1004e3d6:	f003 ffeb 	bl	100523b0 <GAP_suspend_resume_active_advertising_sets_extended>
1004e3da:	0003      	movs	r3, r0
}
1004e3dc:	0018      	movs	r0, r3
1004e3de:	46bd      	mov	sp, r7
1004e3e0:	b002      	add	sp, #8
1004e3e2:	bd80      	pop	{r7, pc}

1004e3e4 <GAP_ResumeAdvertising_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
void GAP_ResumeAdvertising_ucfg(uint16_t task_idx)
{
1004e3e4:	b580      	push	{r7, lr}
1004e3e6:	b082      	sub	sp, #8
1004e3e8:	af00      	add	r7, sp, #0
1004e3ea:	0002      	movs	r2, r0
1004e3ec:	1dbb      	adds	r3, r7, #6
1004e3ee:	801a      	strh	r2, [r3, #0]
    GAP_ResumeAdvertising(task_idx);
1004e3f0:	1dbb      	adds	r3, r7, #6
1004e3f2:	881b      	ldrh	r3, [r3, #0]
1004e3f4:	0018      	movs	r0, r3
1004e3f6:	f004 f85b 	bl	100524b0 <GAP_ResumeAdvertising>
}
1004e3fa:	46c0      	nop			@ (mov r8, r8)
1004e3fc:	46bd      	mov	sp, r7
1004e3fe:	b002      	add	sp, #8
1004e400:	bd80      	pop	{r7, pc}

1004e402 <hci_acl_data_tx_cmpl_event_int_cb_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_acl_data_tx_cmpl_event_int_cb_ucfg(void* header_p,
                                                  uint8_t* buff_p)
{
1004e402:	b580      	push	{r7, lr}
1004e404:	b082      	sub	sp, #8
1004e406:	af00      	add	r7, sp, #0
1004e408:	6078      	str	r0, [r7, #4]
1004e40a:	6039      	str	r1, [r7, #0]
    return hci_acl_data_tx_cmpl_event_int_cb(header_p,
1004e40c:	683a      	ldr	r2, [r7, #0]
1004e40e:	687b      	ldr	r3, [r7, #4]
1004e410:	0011      	movs	r1, r2
1004e412:	0018      	movs	r0, r3
1004e414:	f001 fd38 	bl	1004fe88 <hci_acl_data_tx_cmpl_event_int_cb>
1004e418:	0003      	movs	r3, r0
                                             buff_p);
}
1004e41a:	0018      	movs	r0, r3
1004e41c:	46bd      	mov	sp, r7
1004e41e:	b002      	add	sp, #8
1004e420:	bd80      	pop	{r7, pc}

1004e422 <hci_acl_data_ind_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_acl_data_ind_event_int_cb_ucfg(void* header_p,
                                              uint8_t* buff_p)
{
1004e422:	b580      	push	{r7, lr}
1004e424:	b082      	sub	sp, #8
1004e426:	af00      	add	r7, sp, #0
1004e428:	6078      	str	r0, [r7, #4]
1004e42a:	6039      	str	r1, [r7, #0]
    return hci_acl_data_ind_event_int_cb(header_p,
1004e42c:	683a      	ldr	r2, [r7, #0]
1004e42e:	687b      	ldr	r3, [r7, #4]
1004e430:	0011      	movs	r1, r2
1004e432:	0018      	movs	r0, r3
1004e434:	f001 fd52 	bl	1004fedc <hci_acl_data_ind_event_int_cb>
1004e438:	0003      	movs	r3, r0
                                         buff_p);
}
1004e43a:	0018      	movs	r0, r3
1004e43c:	46bd      	mov	sp, r7
1004e43e:	b002      	add	sp, #8
1004e440:	bd80      	pop	{r7, pc}

1004e442 <Controller_Process_Q_ucfg>:
#endif /* ((CONTROLLER_CHAN_CLASS_ENABLED == 1) &&\
          (CONNECTION_ENABLED == 1)) */

#if (CONNECTION_ENABLED == 1)
void Controller_Process_Q_ucfg(uint16_t task_idx)
{
1004e442:	b580      	push	{r7, lr}
1004e444:	b082      	sub	sp, #8
1004e446:	af00      	add	r7, sp, #0
1004e448:	0002      	movs	r2, r0
1004e44a:	1dbb      	adds	r3, r7, #6
1004e44c:	801a      	strh	r2, [r3, #0]
    Controller_Process_Q(task_idx);
1004e44e:	1dbb      	adds	r3, r7, #6
1004e450:	881b      	ldrh	r3, [r3, #0]
1004e452:	0018      	movs	r0, r3
1004e454:	f006 fd82 	bl	10054f5c <Controller_Process_Q>
}
1004e458:	46c0      	nop			@ (mov r8, r8)
1004e45a:	46bd      	mov	sp, r7
1004e45c:	b002      	add	sp, #8
1004e45e:	bd80      	pop	{r7, pc}

1004e460 <LLC_offline_control_procedures_processing_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
void LLC_offline_control_procedures_processing_ucfg(uint16_t task_idx)
{
1004e460:	b580      	push	{r7, lr}
1004e462:	b082      	sub	sp, #8
1004e464:	af00      	add	r7, sp, #0
1004e466:	0002      	movs	r2, r0
1004e468:	1dbb      	adds	r3, r7, #6
1004e46a:	801a      	strh	r2, [r3, #0]
    LLC_offline_control_procedures_processing(task_idx);
1004e46c:	1dbb      	adds	r3, r7, #6
1004e46e:	881b      	ldrh	r3, [r3, #0]
1004e470:	0018      	movs	r0, r3
1004e472:	f006 fdcf 	bl	10055014 <LLC_offline_control_procedures_processing>
}
1004e476:	46c0      	nop			@ (mov r8, r8)
1004e478:	46bd      	mov	sp, r7
1004e47a:	b002      	add	sp, #8
1004e47c:	bd80      	pop	{r7, pc}

1004e47e <scan_csr_ucfg>:
}
#endif /* (CONTROLLER_2M_CODED_PHY_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1)
uint32_t scan_csr_ucfg(void)
{
1004e47e:	b580      	push	{r7, lr}
1004e480:	af00      	add	r7, sp, #0
    return scan_csr();
1004e482:	f007 f8fc 	bl	1005567e <scan_csr>
1004e486:	0003      	movs	r3, r0
}
1004e488:	0018      	movs	r0, r3
1004e48a:	46bd      	mov	sp, r7
1004e48c:	bd80      	pop	{r7, pc}

1004e48e <conn_supp_csr_ucfg>:
#endif /* (CONTROLLER_SCAN_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
uint32_t conn_supp_csr_ucfg(void)
{
1004e48e:	b580      	push	{r7, lr}
1004e490:	af00      	add	r7, sp, #0
    return conn_supp_csr();
1004e492:	f007 f8f6 	bl	10055682 <conn_supp_csr>
1004e496:	0003      	movs	r3, r0
}
1004e498:	0018      	movs	r0, r3
1004e49a:	46bd      	mov	sp, r7
1004e49c:	bd80      	pop	{r7, pc}

1004e49e <ACL_pkt_init_ucfg>:
}
#endif /* (CONTROLLER_CTE_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus ACL_pkt_init_ucfg(void)
{
1004e49e:	b580      	push	{r7, lr}
1004e4a0:	af00      	add	r7, sp, #0
    return ACL_pkt_init();
1004e4a2:	f001 fd3d 	bl	1004ff20 <ACL_pkt_init>
1004e4a6:	0003      	movs	r3, r0
}
1004e4a8:	0018      	movs	r0, r3
1004e4aa:	46bd      	mov	sp, r7
1004e4ac:	bd80      	pop	{r7, pc}

1004e4ae <hci_disconnection_complete_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_disconnection_complete_event_int_cb_ucfg(void* header_p,
                                                        uint8_t* buff_p)
{
1004e4ae:	b580      	push	{r7, lr}
1004e4b0:	b082      	sub	sp, #8
1004e4b2:	af00      	add	r7, sp, #0
1004e4b4:	6078      	str	r0, [r7, #4]
1004e4b6:	6039      	str	r1, [r7, #0]
    return hci_disconnection_complete_event_int_cb(header_p,
1004e4b8:	683a      	ldr	r2, [r7, #0]
1004e4ba:	687b      	ldr	r3, [r7, #4]
1004e4bc:	0011      	movs	r1, r2
1004e4be:	0018      	movs	r0, r3
1004e4c0:	f002 f8de 	bl	10050680 <hci_disconnection_complete_event_int_cb>
1004e4c4:	0003      	movs	r3, r0
                                                   buff_p);
}
1004e4c6:	0018      	movs	r0, r3
1004e4c8:	46bd      	mov	sp, r7
1004e4ca:	b002      	add	sp, #8
1004e4cc:	bd80      	pop	{r7, pc}

1004e4ce <hci_encryption_change_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_encryption_change_event_int_cb_ucfg(void* header_p,
                                                   uint8_t* buff_p)
{
1004e4ce:	b580      	push	{r7, lr}
1004e4d0:	b082      	sub	sp, #8
1004e4d2:	af00      	add	r7, sp, #0
1004e4d4:	6078      	str	r0, [r7, #4]
1004e4d6:	6039      	str	r1, [r7, #0]
    return hci_encryption_change_event_int_cb(header_p,
1004e4d8:	683a      	ldr	r2, [r7, #0]
1004e4da:	687b      	ldr	r3, [r7, #4]
1004e4dc:	0011      	movs	r1, r2
1004e4de:	0018      	movs	r0, r3
1004e4e0:	f002 f8fe 	bl	100506e0 <hci_encryption_change_event_int_cb>
1004e4e4:	0003      	movs	r3, r0
                                              buff_p);
}
1004e4e6:	0018      	movs	r0, r3
1004e4e8:	46bd      	mov	sp, r7
1004e4ea:	b002      	add	sp, #8
1004e4ec:	bd80      	pop	{r7, pc}

1004e4ee <hci_encryption_key_refresh_complete_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_encryption_key_refresh_complete_event_int_cb_ucfg(void* header_p,
                                                                 uint8_t* buff_p)
{
1004e4ee:	b580      	push	{r7, lr}
1004e4f0:	b082      	sub	sp, #8
1004e4f2:	af00      	add	r7, sp, #0
1004e4f4:	6078      	str	r0, [r7, #4]
1004e4f6:	6039      	str	r1, [r7, #0]
    return hci_encryption_key_refresh_complete_event_int_cb(header_p,
1004e4f8:	683a      	ldr	r2, [r7, #0]
1004e4fa:	687b      	ldr	r3, [r7, #4]
1004e4fc:	0011      	movs	r1, r2
1004e4fe:	0018      	movs	r0, r3
1004e500:	f002 f90a 	bl	10050718 <hci_encryption_key_refresh_complete_event_int_cb>
1004e504:	0003      	movs	r3, r0
                                                            buff_p);
}
1004e506:	0018      	movs	r0, r3
1004e508:	46bd      	mov	sp, r7
1004e50a:	b002      	add	sp, #8
1004e50c:	bd80      	pop	{r7, pc}

1004e50e <hci_le_connection_complete_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_le_connection_complete_event_int_cb_ucfg(void* header_p,
                                                        uint8_t* buff_p)
{
1004e50e:	b580      	push	{r7, lr}
1004e510:	b082      	sub	sp, #8
1004e512:	af00      	add	r7, sp, #0
1004e514:	6078      	str	r0, [r7, #4]
1004e516:	6039      	str	r1, [r7, #0]
    return hci_le_connection_complete_event_int_cb(header_p,
1004e518:	683a      	ldr	r2, [r7, #0]
1004e51a:	687b      	ldr	r3, [r7, #4]
1004e51c:	0011      	movs	r1, r2
1004e51e:	0018      	movs	r0, r3
1004e520:	f002 f916 	bl	10050750 <hci_le_connection_complete_event_int_cb>
1004e524:	0003      	movs	r3, r0
                                                   buff_p);
}
1004e526:	0018      	movs	r0, r3
1004e528:	46bd      	mov	sp, r7
1004e52a:	b002      	add	sp, #8
1004e52c:	bd80      	pop	{r7, pc}

1004e52e <hci_le_enhanced_connection_complete_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_le_enhanced_connection_complete_event_int_cb_ucfg(void* header_p,
                                                                 uint8_t* buff_p)
{
1004e52e:	b580      	push	{r7, lr}
1004e530:	b082      	sub	sp, #8
1004e532:	af00      	add	r7, sp, #0
1004e534:	6078      	str	r0, [r7, #4]
1004e536:	6039      	str	r1, [r7, #0]
    return hci_le_enhanced_connection_complete_event_int_cb(header_p,
1004e538:	683a      	ldr	r2, [r7, #0]
1004e53a:	687b      	ldr	r3, [r7, #4]
1004e53c:	0011      	movs	r1, r2
1004e53e:	0018      	movs	r0, r3
1004e540:	f002 f946 	bl	100507d0 <hci_le_enhanced_connection_complete_event_int_cb>
1004e544:	0003      	movs	r3, r0
                                                            buff_p);
}
1004e546:	0018      	movs	r0, r3
1004e548:	46bd      	mov	sp, r7
1004e54a:	b002      	add	sp, #8
1004e54c:	bd80      	pop	{r7, pc}

1004e54e <hci_le_long_term_key_request_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_le_long_term_key_request_event_int_cb_ucfg(void* header_p,
                                                          uint8_t* buff_p)
{
1004e54e:	b580      	push	{r7, lr}
1004e550:	b082      	sub	sp, #8
1004e552:	af00      	add	r7, sp, #0
1004e554:	6078      	str	r0, [r7, #4]
1004e556:	6039      	str	r1, [r7, #0]
    return hci_le_long_term_key_request_event_int_cb(header_p,
1004e558:	683a      	ldr	r2, [r7, #0]
1004e55a:	687b      	ldr	r3, [r7, #4]
1004e55c:	0011      	movs	r1, r2
1004e55e:	0018      	movs	r0, r3
1004e560:	f002 f97c 	bl	1005085c <hci_le_long_term_key_request_event_int_cb>
1004e564:	0003      	movs	r3, r0
                                                     buff_p);
}
1004e566:	0018      	movs	r0, r3
1004e568:	46bd      	mov	sp, r7
1004e56a:	b002      	add	sp, #8
1004e56c:	bd80      	pop	{r7, pc}

1004e56e <hci_le_read_local_p256_public_key_complete_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_le_read_local_p256_public_key_complete_event_int_cb_ucfg(void* header_p,
                                                                        uint8_t* buff_p)
{
1004e56e:	b580      	push	{r7, lr}
1004e570:	b082      	sub	sp, #8
1004e572:	af00      	add	r7, sp, #0
1004e574:	6078      	str	r0, [r7, #4]
1004e576:	6039      	str	r1, [r7, #0]
    return hci_le_read_local_p256_public_key_complete_event_int_cb(header_p,
1004e578:	683a      	ldr	r2, [r7, #0]
1004e57a:	687b      	ldr	r3, [r7, #4]
1004e57c:	0011      	movs	r1, r2
1004e57e:	0018      	movs	r0, r3
1004e580:	f002 f99c 	bl	100508bc <hci_le_read_local_p256_public_key_complete_event_int_cb>
1004e584:	0003      	movs	r3, r0
                                                                   buff_p);
}
1004e586:	0018      	movs	r0, r3
1004e588:	46bd      	mov	sp, r7
1004e58a:	b002      	add	sp, #8
1004e58c:	bd80      	pop	{r7, pc}

1004e58e <hci_le_generate_dhkey_complete_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_le_generate_dhkey_complete_event_int_cb_ucfg(void* header_p,
                                                            uint8_t* buff_p)
{
1004e58e:	b580      	push	{r7, lr}
1004e590:	b082      	sub	sp, #8
1004e592:	af00      	add	r7, sp, #0
1004e594:	6078      	str	r0, [r7, #4]
1004e596:	6039      	str	r1, [r7, #0]
    return hci_le_generate_dhkey_complete_event_int_cb(header_p,
1004e598:	683a      	ldr	r2, [r7, #0]
1004e59a:	687b      	ldr	r3, [r7, #4]
1004e59c:	0011      	movs	r1, r2
1004e59e:	0018      	movs	r0, r3
1004e5a0:	f002 f9aa 	bl	100508f8 <hci_le_generate_dhkey_complete_event_int_cb>
1004e5a4:	0003      	movs	r3, r0
                                                       buff_p);
}
1004e5a6:	0018      	movs	r0, r3
1004e5a8:	46bd      	mov	sp, r7
1004e5aa:	b002      	add	sp, #8
1004e5ac:	bd80      	pop	{r7, pc}

1004e5ae <hci_le_advertising_report_event_int_cb_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1)
tBleStatus hci_le_advertising_report_event_int_cb_ucfg(void* header_p,
                                                       uint8_t* buff_p)
{
1004e5ae:	b580      	push	{r7, lr}
1004e5b0:	b082      	sub	sp, #8
1004e5b2:	af00      	add	r7, sp, #0
1004e5b4:	6078      	str	r0, [r7, #4]
1004e5b6:	6039      	str	r1, [r7, #0]
    return hci_le_advertising_report_event_int_cb(header_p,
1004e5b8:	683a      	ldr	r2, [r7, #0]
1004e5ba:	687b      	ldr	r3, [r7, #4]
1004e5bc:	0011      	movs	r1, r2
1004e5be:	0018      	movs	r0, r3
1004e5c0:	f002 f9b6 	bl	10050930 <hci_le_advertising_report_event_int_cb>
1004e5c4:	0003      	movs	r3, r0
                                                  buff_p);
}
1004e5c6:	0018      	movs	r0, r3
1004e5c8:	46bd      	mov	sp, r7
1004e5ca:	b002      	add	sp, #8
1004e5cc:	bd80      	pop	{r7, pc}

1004e5ce <hci_le_extended_advertising_report_event_int_cb_ucfg>:

#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus hci_le_extended_advertising_report_event_int_cb_ucfg(void* header_p,
                                                                uint8_t* buff_p)
{
1004e5ce:	b580      	push	{r7, lr}
1004e5d0:	b082      	sub	sp, #8
1004e5d2:	af00      	add	r7, sp, #0
1004e5d4:	6078      	str	r0, [r7, #4]
1004e5d6:	6039      	str	r1, [r7, #0]
    return hci_le_extended_advertising_report_event_int_cb(header_p,
1004e5d8:	683a      	ldr	r2, [r7, #0]
1004e5da:	687b      	ldr	r3, [r7, #4]
1004e5dc:	0011      	movs	r1, r2
1004e5de:	0018      	movs	r0, r3
1004e5e0:	f002 f9c6 	bl	10050970 <hci_le_extended_advertising_report_event_int_cb>
1004e5e4:	0003      	movs	r3, r0
                                                           buff_p);
}
1004e5e6:	0018      	movs	r0, r3
1004e5e8:	46bd      	mov	sp, r7
1004e5ea:	b002      	add	sp, #8
1004e5ec:	bd80      	pop	{r7, pc}

1004e5ee <hci_le_scan_timeout_event_int_cb_ucfg>:

#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus hci_le_scan_timeout_event_int_cb_ucfg(void* header_p,
                                                 uint8_t* buff_p)
{
1004e5ee:	b580      	push	{r7, lr}
1004e5f0:	b082      	sub	sp, #8
1004e5f2:	af00      	add	r7, sp, #0
1004e5f4:	6078      	str	r0, [r7, #4]
1004e5f6:	6039      	str	r1, [r7, #0]
    return hci_le_scan_timeout_event_int_cb(header_p,
1004e5f8:	683a      	ldr	r2, [r7, #0]
1004e5fa:	687b      	ldr	r3, [r7, #4]
1004e5fc:	0011      	movs	r1, r2
1004e5fe:	0018      	movs	r0, r3
1004e600:	f002 f9d4 	bl	100509ac <hci_le_scan_timeout_event_int_cb>
1004e604:	0003      	movs	r3, r0
                                            buff_p);
}
1004e606:	0018      	movs	r0, r3
1004e608:	46bd      	mov	sp, r7
1004e60a:	b002      	add	sp, #8
1004e60c:	bd80      	pop	{r7, pc}

1004e60e <hci_le_advertising_set_terminated_event_int_cb_ucfg>:
          (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) */

#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus hci_le_advertising_set_terminated_event_int_cb_ucfg(void* header_p,
                                                               uint8_t* buff_p)
{
1004e60e:	b580      	push	{r7, lr}
1004e610:	b082      	sub	sp, #8
1004e612:	af00      	add	r7, sp, #0
1004e614:	6078      	str	r0, [r7, #4]
1004e616:	6039      	str	r1, [r7, #0]
    return hci_le_advertising_set_terminated_event_int_cb(header_p,
1004e618:	683a      	ldr	r2, [r7, #0]
1004e61a:	687b      	ldr	r3, [r7, #4]
1004e61c:	0011      	movs	r1, r2
1004e61e:	0018      	movs	r0, r3
1004e620:	f002 f9da 	bl	100509d8 <hci_le_advertising_set_terminated_event_int_cb>
1004e624:	0003      	movs	r3, r0
                                                          buff_p);
}
1004e626:	0018      	movs	r0, r3
1004e628:	46bd      	mov	sp, r7
1004e62a:	b002      	add	sp, #8
1004e62c:	bd80      	pop	{r7, pc}

1004e62e <hci_le_enhanced_connection_complete_v2_event_int_cb_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
tBleStatus hci_le_enhanced_connection_complete_v2_event_int_cb_ucfg(void* header_p,
                                                                    uint8_t* buff_p)
{
1004e62e:	b580      	push	{r7, lr}
1004e630:	b082      	sub	sp, #8
1004e632:	af00      	add	r7, sp, #0
1004e634:	6078      	str	r0, [r7, #4]
1004e636:	6039      	str	r1, [r7, #0]
    return hci_le_enhanced_connection_complete_v2_event_int_cb(header_p,
1004e638:	683a      	ldr	r2, [r7, #0]
1004e63a:	687b      	ldr	r3, [r7, #4]
1004e63c:	0011      	movs	r1, r2
1004e63e:	0018      	movs	r0, r3
1004e640:	f002 fcbc 	bl	10050fbc <hci_le_enhanced_connection_complete_v2_event_int_cb>
1004e644:	0003      	movs	r3, r0
                                                               buff_p);
}
1004e646:	0018      	movs	r0, r3
1004e648:	46bd      	mov	sp, r7
1004e64a:	b002      	add	sp, #8
1004e64c:	bd80      	pop	{r7, pc}

1004e64e <MBM_init_ucfg>:
          (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1) ||\
    (CONTROLLER_ISO_ENABLED == 1)
tBleStatus MBM_init_ucfg(void)
{
1004e64e:	b580      	push	{r7, lr}
1004e650:	af00      	add	r7, sp, #0
    return MBM_init();
1004e652:	f014 fa81 	bl	10062b58 <MBM_init>
1004e656:	0003      	movs	r3, r0
}
1004e658:	0018      	movs	r0, r3
1004e65a:	46bd      	mov	sp, r7
1004e65c:	bd80      	pop	{r7, pc}

1004e65e <L2C_init_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
tBleStatus L2C_init_ucfg(uint8_t cos_enabled)
{
1004e65e:	b580      	push	{r7, lr}
1004e660:	b082      	sub	sp, #8
1004e662:	af00      	add	r7, sp, #0
1004e664:	0002      	movs	r2, r0
1004e666:	1dfb      	adds	r3, r7, #7
1004e668:	701a      	strb	r2, [r3, #0]
    return L2C_init(cos_enabled);
1004e66a:	1dfb      	adds	r3, r7, #7
1004e66c:	781b      	ldrb	r3, [r3, #0]
1004e66e:	0018      	movs	r0, r3
1004e670:	f007 f9dc 	bl	10055a2c <L2C_init>
1004e674:	0003      	movs	r3, r0
}
1004e676:	0018      	movs	r0, r3
1004e678:	46bd      	mov	sp, r7
1004e67a:	b002      	add	sp, #8
1004e67c:	bd80      	pop	{r7, pc}

1004e67e <llc_conn_peripheral_roll_back_params_tsk_ucfg>:
}
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
void llc_conn_peripheral_roll_back_params_tsk_ucfg(uint16_t task_idx)
{
1004e67e:	b580      	push	{r7, lr}
1004e680:	b082      	sub	sp, #8
1004e682:	af00      	add	r7, sp, #0
1004e684:	0002      	movs	r2, r0
1004e686:	1dbb      	adds	r3, r7, #6
1004e688:	801a      	strh	r2, [r3, #0]
    llc_conn_peripheral_roll_back_params_tsk(task_idx);
1004e68a:	1dbb      	adds	r3, r7, #6
1004e68c:	881b      	ldrh	r3, [r3, #0]
1004e68e:	0018      	movs	r0, r3
1004e690:	f009 f9b2 	bl	100579f8 <llc_conn_peripheral_roll_back_params_tsk>
}
1004e694:	46c0      	nop			@ (mov r8, r8)
1004e696:	46bd      	mov	sp, r7
1004e698:	b002      	add	sp, #8
1004e69a:	bd80      	pop	{r7, pc}

1004e69c <llc_padv_mem_allocate_ucfg>:
    (CONNECTION_ENABLED == 1)
void llc_padv_mem_allocate_ucfg(uint8_t eadv_en,
                                uint8_t padv_en,
                                uint8_t nr_of_adv_sets,
                                uint8_t* more_info_p)
{
1004e69c:	b590      	push	{r4, r7, lr}
1004e69e:	b083      	sub	sp, #12
1004e6a0:	af00      	add	r7, sp, #0
1004e6a2:	0004      	movs	r4, r0
1004e6a4:	0008      	movs	r0, r1
1004e6a6:	0011      	movs	r1, r2
1004e6a8:	603b      	str	r3, [r7, #0]
1004e6aa:	1dfb      	adds	r3, r7, #7
1004e6ac:	1c22      	adds	r2, r4, #0
1004e6ae:	701a      	strb	r2, [r3, #0]
1004e6b0:	1dbb      	adds	r3, r7, #6
1004e6b2:	1c02      	adds	r2, r0, #0
1004e6b4:	701a      	strb	r2, [r3, #0]
1004e6b6:	1d7b      	adds	r3, r7, #5
1004e6b8:	1c0a      	adds	r2, r1, #0
1004e6ba:	701a      	strb	r2, [r3, #0]
    llc_padv_wr_mem_allocate(eadv_en,
1004e6bc:	683c      	ldr	r4, [r7, #0]
1004e6be:	1d7b      	adds	r3, r7, #5
1004e6c0:	781a      	ldrb	r2, [r3, #0]
1004e6c2:	1dbb      	adds	r3, r7, #6
1004e6c4:	7819      	ldrb	r1, [r3, #0]
1004e6c6:	1dfb      	adds	r3, r7, #7
1004e6c8:	7818      	ldrb	r0, [r3, #0]
1004e6ca:	0023      	movs	r3, r4
1004e6cc:	f009 ff04 	bl	100584d8 <llc_padv_wr_mem_allocate>
                             padv_en,
                             nr_of_adv_sets,
                             more_info_p);
}
1004e6d0:	46c0      	nop			@ (mov r8, r8)
1004e6d2:	46bd      	mov	sp, r7
1004e6d4:	b003      	add	sp, #12
1004e6d6:	bd90      	pop	{r4, r7, pc}

1004e6d8 <llc_padv_init_ucfg>:
          (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) */

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1))
void llc_padv_init_ucfg(void)
{
1004e6d8:	b580      	push	{r7, lr}
1004e6da:	af00      	add	r7, sp, #0
    llc_padv_init();
1004e6dc:	f009 fb56 	bl	10057d8c <llc_padv_init>
}
1004e6e0:	46c0      	nop			@ (mov r8, r8)
1004e6e2:	46bd      	mov	sp, r7
1004e6e4:	bd80      	pop	{r7, pc}

1004e6e6 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising_ucfg>:
          (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) */

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1))
uint8_t llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising_ucfg(void* context_p)
{
1004e6e6:	b580      	push	{r7, lr}
1004e6e8:	b082      	sub	sp, #8
1004e6ea:	af00      	add	r7, sp, #0
1004e6ec:	6078      	str	r0, [r7, #4]
    return llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising(context_p);
1004e6ee:	687b      	ldr	r3, [r7, #4]
1004e6f0:	0018      	movs	r0, r3
1004e6f2:	f009 fc7b 	bl	10057fec <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising>
1004e6f6:	0003      	movs	r3, r0
}
1004e6f8:	0018      	movs	r0, r3
1004e6fa:	46bd      	mov	sp, r7
1004e6fc:	b002      	add	sp, #8
1004e6fe:	bd80      	pop	{r7, pc}

1004e700 <llc_padv_update_sync_info_ucfg>:

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1))
uint8_t llc_padv_update_sync_info_ucfg(void* padv_per_p,
                                    uint32_t aux_adv_ind_anchor)
{
1004e700:	b580      	push	{r7, lr}
1004e702:	b082      	sub	sp, #8
1004e704:	af00      	add	r7, sp, #0
1004e706:	6078      	str	r0, [r7, #4]
1004e708:	6039      	str	r1, [r7, #0]
    return llc_padv_update_sync_info(padv_per_p,
1004e70a:	683a      	ldr	r2, [r7, #0]
1004e70c:	687b      	ldr	r3, [r7, #4]
1004e70e:	0011      	movs	r1, r2
1004e710:	0018      	movs	r0, r3
1004e712:	f009 fe11 	bl	10058338 <llc_padv_update_sync_info>
1004e716:	0003      	movs	r3, r0
                                     aux_adv_ind_anchor);
}
1004e718:	0018      	movs	r0, r3
1004e71a:	46bd      	mov	sp, r7
1004e71c:	b002      	add	sp, #8
1004e71e:	bd80      	pop	{r7, pc}

1004e720 <llc_padv_prepare_periodic_advertising_payload_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1))
void llc_padv_prepare_periodic_advertising_payload_ucfg(void* padv_per_p,
                                                        uint8_t extended_header_flags,
                                                        uint8_t* payload_p)
{
1004e720:	b580      	push	{r7, lr}
1004e722:	b084      	sub	sp, #16
1004e724:	af00      	add	r7, sp, #0
1004e726:	60f8      	str	r0, [r7, #12]
1004e728:	607a      	str	r2, [r7, #4]
1004e72a:	200b      	movs	r0, #11
1004e72c:	183b      	adds	r3, r7, r0
1004e72e:	1c0a      	adds	r2, r1, #0
1004e730:	701a      	strb	r2, [r3, #0]
    llc_padv_prepare_periodic_advertising_payload(padv_per_p,
1004e732:	687a      	ldr	r2, [r7, #4]
1004e734:	183b      	adds	r3, r7, r0
1004e736:	7819      	ldrb	r1, [r3, #0]
1004e738:	68fb      	ldr	r3, [r7, #12]
1004e73a:	0018      	movs	r0, r3
1004e73c:	f009 fe64 	bl	10058408 <llc_padv_prepare_periodic_advertising_payload>
                                                  extended_header_flags,
                                                  payload_p);
}
1004e740:	46c0      	nop			@ (mov r8, r8)
1004e742:	46bd      	mov	sp, r7
1004e744:	b004      	add	sp, #16
1004e746:	bd80      	pop	{r7, pc}

1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>:
          (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) */

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1))
uint32_t llc_padv_periodic_adv_sync_csr_ucfg(void)
{
1004e748:	b580      	push	{r7, lr}
1004e74a:	af00      	add	r7, sp, #0
    return llc_padv_periodic_adv_sync_csr();
1004e74c:	f009 feae 	bl	100584ac <llc_padv_periodic_adv_sync_csr>
1004e750:	0003      	movs	r3, r0
}
1004e752:	0018      	movs	r0, r3
1004e754:	46bd      	mov	sp, r7
1004e756:	bd80      	pop	{r7, pc}

1004e758 <llc_padv_wr_create_connection_cancel_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
uint8_t llc_padv_wr_create_connection_cancel_ucfg(void* _padv_per_p,
                                               uint8_t advertising_handle)
{
1004e758:	b580      	push	{r7, lr}
1004e75a:	b082      	sub	sp, #8
1004e75c:	af00      	add	r7, sp, #0
1004e75e:	6078      	str	r0, [r7, #4]
1004e760:	000a      	movs	r2, r1
1004e762:	1cfb      	adds	r3, r7, #3
1004e764:	701a      	strb	r2, [r3, #0]
    return llc_padv_wr_create_connection_cancel(_padv_per_p,
1004e766:	1cfb      	adds	r3, r7, #3
1004e768:	781a      	ldrb	r2, [r3, #0]
1004e76a:	687b      	ldr	r3, [r7, #4]
1004e76c:	0011      	movs	r1, r2
1004e76e:	0018      	movs	r0, r3
1004e770:	f00a f9cf 	bl	10058b12 <llc_padv_wr_create_connection_cancel>
1004e774:	0003      	movs	r3, r0
                                                advertising_handle);
}
1004e776:	0018      	movs	r0, r3
1004e778:	46bd      	mov	sp, r7
1004e77a:	b002      	add	sp, #8
1004e77c:	bd80      	pop	{r7, pc}

1004e77e <llc_padv_wr_set_start_parameters_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
void llc_padv_wr_set_start_parameters_ucfg(void* set_padv_wr_start_parameters_p)
{
1004e77e:	b580      	push	{r7, lr}
1004e780:	b082      	sub	sp, #8
1004e782:	af00      	add	r7, sp, #0
1004e784:	6078      	str	r0, [r7, #4]
    llc_padv_wr_set_start_parameters(set_padv_wr_start_parameters_p);
1004e786:	687b      	ldr	r3, [r7, #4]
1004e788:	0018      	movs	r0, r3
1004e78a:	f00a f9e7 	bl	10058b5c <llc_padv_wr_set_start_parameters>
}
1004e78e:	46c0      	nop			@ (mov r8, r8)
1004e790:	46bd      	mov	sp, r7
1004e792:	b002      	add	sp, #8
1004e794:	bd80      	pop	{r7, pc}

1004e796 <llc_padv_wr_set_periodic_advertising_subevent_data_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
tBleStatus llc_padv_wr_set_periodic_advertising_subevent_data_ucfg(void* set_padv_wr_data_p)
{
1004e796:	b580      	push	{r7, lr}
1004e798:	b082      	sub	sp, #8
1004e79a:	af00      	add	r7, sp, #0
1004e79c:	6078      	str	r0, [r7, #4]
    return llc_padv_wr_set_periodic_advertising_subevent_data(set_padv_wr_data_p);
1004e79e:	687b      	ldr	r3, [r7, #4]
1004e7a0:	0018      	movs	r0, r3
1004e7a2:	f00a fa81 	bl	10058ca8 <llc_padv_wr_set_periodic_advertising_subevent_data>
1004e7a6:	0003      	movs	r3, r0
}
1004e7a8:	0018      	movs	r0, r3
1004e7aa:	46bd      	mov	sp, r7
1004e7ac:	b002      	add	sp, #8
1004e7ae:	bd80      	pop	{r7, pc}

1004e7b0 <llc_padv_wr_set_ctrdata_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
uint8_t llc_padv_wr_set_ctrdata_ucfg(void* padv_per_p,
                                  uint8_t* ctrdata_p)
{
1004e7b0:	b580      	push	{r7, lr}
1004e7b2:	b082      	sub	sp, #8
1004e7b4:	af00      	add	r7, sp, #0
1004e7b6:	6078      	str	r0, [r7, #4]
1004e7b8:	6039      	str	r1, [r7, #0]
    return llc_padv_wr_set_ctrdata(padv_per_p,
1004e7ba:	683a      	ldr	r2, [r7, #0]
1004e7bc:	687b      	ldr	r3, [r7, #4]
1004e7be:	0011      	movs	r1, r2
1004e7c0:	0018      	movs	r0, r3
1004e7c2:	f00a fba5 	bl	10058f10 <llc_padv_wr_set_ctrdata>
1004e7c6:	0003      	movs	r3, r0
                                   ctrdata_p);
}
1004e7c8:	0018      	movs	r0, r3
1004e7ca:	46bd      	mov	sp, r7
1004e7cc:	b002      	add	sp, #8
1004e7ce:	bd80      	pop	{r7, pc}

1004e7d0 <llc_padv_wr_set_acad_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
void llc_padv_wr_set_acad_ucfg(void* padv_per_p,
                               uint8_t* ext_hdr_p)
{
1004e7d0:	b580      	push	{r7, lr}
1004e7d2:	b082      	sub	sp, #8
1004e7d4:	af00      	add	r7, sp, #0
1004e7d6:	6078      	str	r0, [r7, #4]
1004e7d8:	6039      	str	r1, [r7, #0]
    llc_padv_wr_set_acad(padv_per_p,
1004e7da:	683a      	ldr	r2, [r7, #0]
1004e7dc:	687b      	ldr	r3, [r7, #4]
1004e7de:	0011      	movs	r1, r2
1004e7e0:	0018      	movs	r0, r3
1004e7e2:	f00a fbb6 	bl	10058f52 <llc_padv_wr_set_acad>
                         ext_hdr_p);
}
1004e7e6:	46c0      	nop			@ (mov r8, r8)
1004e7e8:	46bd      	mov	sp, r7
1004e7ea:	b002      	add	sp, #8
1004e7ec:	bd80      	pop	{r7, pc}

1004e7ee <llc_padv_wr_init_anchors_and_counters_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
void llc_padv_wr_init_anchors_and_counters_ucfg(void* padv_per_p)
{
1004e7ee:	b580      	push	{r7, lr}
1004e7f0:	b082      	sub	sp, #8
1004e7f2:	af00      	add	r7, sp, #0
1004e7f4:	6078      	str	r0, [r7, #4]
    llc_padv_wr_init_anchors_and_counters(padv_per_p);
1004e7f6:	687b      	ldr	r3, [r7, #4]
1004e7f8:	0018      	movs	r0, r3
1004e7fa:	f00a fbb6 	bl	10058f6a <llc_padv_wr_init_anchors_and_counters>
}
1004e7fe:	46c0      	nop			@ (mov r8, r8)
1004e800:	46bd      	mov	sp, r7
1004e802:	b002      	add	sp, #8
1004e804:	bd80      	pop	{r7, pc}

1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
uint32_t llc_padv_periodic_adv_sync_wr_csr_ucfg(void)
{
1004e806:	b580      	push	{r7, lr}
1004e808:	af00      	add	r7, sp, #0
    return llc_padv_periodic_adv_sync_wr_csr();
1004e80a:	f00a fbd1 	bl	10058fb0 <llc_padv_periodic_adv_sync_wr_csr>
1004e80e:	0003      	movs	r3, r0
}
1004e810:	0018      	movs	r0, r3
1004e812:	46bd      	mov	sp, r7
1004e814:	bd80      	pop	{r7, pc}

1004e816 <llc_padv_wr_disable_ext_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
void llc_padv_wr_disable_ext_ucfg(void* _padv_per_p)
{
1004e816:	b580      	push	{r7, lr}
1004e818:	b082      	sub	sp, #8
1004e81a:	af00      	add	r7, sp, #0
1004e81c:	6078      	str	r0, [r7, #4]
    llc_padv_wr_disable_ext(_padv_per_p);
1004e81e:	687b      	ldr	r3, [r7, #4]
1004e820:	0018      	movs	r0, r3
1004e822:	f00a fbc7 	bl	10058fb4 <llc_padv_wr_disable_ext>
}
1004e826:	46c0      	nop			@ (mov r8, r8)
1004e828:	46bd      	mov	sp, r7
1004e82a:	b002      	add	sp, #8
1004e82c:	bd80      	pop	{r7, pc}

1004e82e <llc_pscan_isr_ucfg>:

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1)
uint8_t llc_pscan_isr_ucfg(void* cntxt_per_p)
{
1004e82e:	b580      	push	{r7, lr}
1004e830:	b082      	sub	sp, #8
1004e832:	af00      	add	r7, sp, #0
1004e834:	6078      	str	r0, [r7, #4]
    return llc_pscan_isr(cntxt_per_p);
1004e836:	687b      	ldr	r3, [r7, #4]
1004e838:	0018      	movs	r0, r3
1004e83a:	f00a fcdb 	bl	100591f4 <llc_pscan_isr>
1004e83e:	0003      	movs	r3, r0
}
1004e840:	0018      	movs	r0, r3
1004e842:	46bd      	mov	sp, r7
1004e844:	b002      	add	sp, #8
1004e846:	bd80      	pop	{r7, pc}

1004e848 <llc_pscan_init_ucfg>:

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1)
void llc_pscan_init_ucfg(void)
{
1004e848:	b580      	push	{r7, lr}
1004e84a:	af00      	add	r7, sp, #0
    llc_pscan_init();
1004e84c:	f00a fe86 	bl	1005955c <llc_pscan_init>
}
1004e850:	46c0      	nop			@ (mov r8, r8)
1004e852:	46bd      	mov	sp, r7
1004e854:	bd80      	pop	{r7, pc}

1004e856 <llc_pscan_mem_allocate_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1)
void llc_pscan_mem_allocate_ucfg(uint8_t scan_en,
                                 uint8_t ext_en,
                                 uint8_t pscan_en)
{
1004e856:	b590      	push	{r4, r7, lr}
1004e858:	b083      	sub	sp, #12
1004e85a:	af00      	add	r7, sp, #0
1004e85c:	0004      	movs	r4, r0
1004e85e:	0008      	movs	r0, r1
1004e860:	0011      	movs	r1, r2
1004e862:	1dfb      	adds	r3, r7, #7
1004e864:	1c22      	adds	r2, r4, #0
1004e866:	701a      	strb	r2, [r3, #0]
1004e868:	1dbb      	adds	r3, r7, #6
1004e86a:	1c02      	adds	r2, r0, #0
1004e86c:	701a      	strb	r2, [r3, #0]
1004e86e:	1d7b      	adds	r3, r7, #5
1004e870:	1c0a      	adds	r2, r1, #0
1004e872:	701a      	strb	r2, [r3, #0]
    llc_pscan_mem_allocate(scan_en,
1004e874:	1d7b      	adds	r3, r7, #5
1004e876:	781a      	ldrb	r2, [r3, #0]
1004e878:	1dbb      	adds	r3, r7, #6
1004e87a:	7819      	ldrb	r1, [r3, #0]
1004e87c:	1dfb      	adds	r3, r7, #7
1004e87e:	781b      	ldrb	r3, [r3, #0]
1004e880:	0018      	movs	r0, r3
1004e882:	f00a fe8d 	bl	100595a0 <llc_pscan_mem_allocate>
                           ext_en,
                           pscan_en);
}
1004e886:	46c0      	nop			@ (mov r8, r8)
1004e888:	46bd      	mov	sp, r7
1004e88a:	b003      	add	sp, #12
1004e88c:	bd90      	pop	{r4, r7, pc}

1004e88e <llc_pscan_push_padv_report_event_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_push_padv_report_event_ucfg(void* params)
{
1004e88e:	b580      	push	{r7, lr}
1004e890:	b082      	sub	sp, #8
1004e892:	af00      	add	r7, sp, #0
1004e894:	6078      	str	r0, [r7, #4]
    llc_pscan_push_padv_report_event(params);
1004e896:	687b      	ldr	r3, [r7, #4]
1004e898:	0018      	movs	r0, r3
1004e89a:	f00b f98d 	bl	10059bb8 <llc_pscan_push_padv_report_event>
}
1004e89e:	46c0      	nop			@ (mov r8, r8)
1004e8a0:	46bd      	mov	sp, r7
1004e8a2:	b002      	add	sp, #8
1004e8a4:	bd80      	pop	{r7, pc}

1004e8a6 <llc_pscan_push_past_received_event_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_push_past_received_event_ucfg(void* params)
{
1004e8a6:	b580      	push	{r7, lr}
1004e8a8:	b082      	sub	sp, #8
1004e8aa:	af00      	add	r7, sp, #0
1004e8ac:	6078      	str	r0, [r7, #4]
    llc_pscan_push_past_received_event(params);
1004e8ae:	687b      	ldr	r3, [r7, #4]
1004e8b0:	0018      	movs	r0, r3
1004e8b2:	f00b f995 	bl	10059be0 <llc_pscan_push_past_received_event>
}
1004e8b6:	46c0      	nop			@ (mov r8, r8)
1004e8b8:	46bd      	mov	sp, r7
1004e8ba:	b002      	add	sp, #8
1004e8bc:	bd80      	pop	{r7, pc}

1004e8be <llc_pscan_push_sync_established_event_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_push_sync_established_event_ucfg(void* params)
{
1004e8be:	b580      	push	{r7, lr}
1004e8c0:	b082      	sub	sp, #8
1004e8c2:	af00      	add	r7, sp, #0
1004e8c4:	6078      	str	r0, [r7, #4]
    llc_pscan_push_sync_established_event(params);
1004e8c6:	687b      	ldr	r3, [r7, #4]
1004e8c8:	0018      	movs	r0, r3
1004e8ca:	f00b f99d 	bl	10059c08 <llc_pscan_push_sync_established_event>
}
1004e8ce:	46c0      	nop			@ (mov r8, r8)
1004e8d0:	46bd      	mov	sp, r7
1004e8d2:	b002      	add	sp, #8
1004e8d4:	bd80      	pop	{r7, pc}

1004e8d6 <llc_pscan_check_address_ucfg>:

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1)
uint8_t llc_pscan_check_address_ucfg(void* addr_p)
{
1004e8d6:	b580      	push	{r7, lr}
1004e8d8:	b082      	sub	sp, #8
1004e8da:	af00      	add	r7, sp, #0
1004e8dc:	6078      	str	r0, [r7, #4]
    return llc_pscan_check_address(addr_p);
1004e8de:	687b      	ldr	r3, [r7, #4]
1004e8e0:	0018      	movs	r0, r3
1004e8e2:	f00b f9c5 	bl	10059c70 <llc_pscan_check_address>
1004e8e6:	0003      	movs	r3, r0
}
1004e8e8:	0018      	movs	r0, r3
1004e8ea:	46bd      	mov	sp, r7
1004e8ec:	b002      	add	sp, #8
1004e8ee:	bd80      	pop	{r7, pc}

1004e8f0 <llc_pscan_synchronizing_ucfg>:

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1)
void llc_pscan_synchronizing_ucfg(void* params_p)
{
1004e8f0:	b580      	push	{r7, lr}
1004e8f2:	b082      	sub	sp, #8
1004e8f4:	af00      	add	r7, sp, #0
1004e8f6:	6078      	str	r0, [r7, #4]
    llc_pscan_synchronizing(params_p);
1004e8f8:	687b      	ldr	r3, [r7, #4]
1004e8fa:	0018      	movs	r0, r3
1004e8fc:	f00b f9e2 	bl	10059cc4 <llc_pscan_synchronizing>
}
1004e900:	46c0      	nop			@ (mov r8, r8)
1004e902:	46bd      	mov	sp, r7
1004e904:	b002      	add	sp, #8
1004e906:	bd80      	pop	{r7, pc}

1004e908 <llc_pscan_wr_init_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_wr_init_ucfg(void)
{
1004e908:	b580      	push	{r7, lr}
1004e90a:	af00      	add	r7, sp, #0
    llc_pscan_wr_init();
1004e90c:	f00b fbde 	bl	1005a0cc <llc_pscan_wr_init>
}
1004e910:	46c0      	nop			@ (mov r8, r8)
1004e912:	46bd      	mov	sp, r7
1004e914:	bd80      	pop	{r7, pc}

1004e916 <llc_pscan_wr_mem_allocate_ucfg>:
void llc_pscan_wr_mem_allocate_ucfg(uint8_t scan_en,
                                    uint8_t ext_en,
                                    uint8_t pscan_en,
                                    uint8_t pscan_wr_en,
                                    uint8_t conn_en)
{
1004e916:	b5b0      	push	{r4, r5, r7, lr}
1004e918:	b084      	sub	sp, #16
1004e91a:	af02      	add	r7, sp, #8
1004e91c:	0005      	movs	r5, r0
1004e91e:	000c      	movs	r4, r1
1004e920:	0010      	movs	r0, r2
1004e922:	0019      	movs	r1, r3
1004e924:	1dfb      	adds	r3, r7, #7
1004e926:	1c2a      	adds	r2, r5, #0
1004e928:	701a      	strb	r2, [r3, #0]
1004e92a:	1dbb      	adds	r3, r7, #6
1004e92c:	1c22      	adds	r2, r4, #0
1004e92e:	701a      	strb	r2, [r3, #0]
1004e930:	1d7b      	adds	r3, r7, #5
1004e932:	1c02      	adds	r2, r0, #0
1004e934:	701a      	strb	r2, [r3, #0]
1004e936:	1d3b      	adds	r3, r7, #4
1004e938:	1c0a      	adds	r2, r1, #0
1004e93a:	701a      	strb	r2, [r3, #0]
    llc_pscan_wr_mem_allocate(scan_en,
1004e93c:	1d3b      	adds	r3, r7, #4
1004e93e:	781c      	ldrb	r4, [r3, #0]
1004e940:	1d7b      	adds	r3, r7, #5
1004e942:	781a      	ldrb	r2, [r3, #0]
1004e944:	1dbb      	adds	r3, r7, #6
1004e946:	7819      	ldrb	r1, [r3, #0]
1004e948:	1dfb      	adds	r3, r7, #7
1004e94a:	7818      	ldrb	r0, [r3, #0]
1004e94c:	2318      	movs	r3, #24
1004e94e:	18fb      	adds	r3, r7, r3
1004e950:	781b      	ldrb	r3, [r3, #0]
1004e952:	9300      	str	r3, [sp, #0]
1004e954:	0023      	movs	r3, r4
1004e956:	f00b fbdf 	bl	1005a118 <llc_pscan_wr_mem_allocate>
                              ext_en,
                              pscan_en,
                              pscan_wr_en,
                              conn_en);
}
1004e95a:	46c0      	nop			@ (mov r8, r8)
1004e95c:	46bd      	mov	sp, r7
1004e95e:	b002      	add	sp, #8
1004e960:	bdb0      	pop	{r4, r5, r7, pc}

1004e962 <llc_pscan_wr_per_init_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_wr_per_init_ucfg(uint8_t sync_idx)
{
1004e962:	b580      	push	{r7, lr}
1004e964:	b082      	sub	sp, #8
1004e966:	af00      	add	r7, sp, #0
1004e968:	0002      	movs	r2, r0
1004e96a:	1dfb      	adds	r3, r7, #7
1004e96c:	701a      	strb	r2, [r3, #0]
    llc_pscan_wr_per_init(sync_idx);
1004e96e:	1dfb      	adds	r3, r7, #7
1004e970:	781b      	ldrb	r3, [r3, #0]
1004e972:	0018      	movs	r0, r3
1004e974:	f00b fbb8 	bl	1005a0e8 <llc_pscan_wr_per_init>
}
1004e978:	46c0      	nop			@ (mov r8, r8)
1004e97a:	46bd      	mov	sp, r7
1004e97c:	b002      	add	sp, #8
1004e97e:	bd80      	pop	{r7, pc}

1004e980 <llc_pscan_wr_config_tx_blue_sm_ucfg>:
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_wr_config_tx_blue_sm_ucfg(void* params_p,
                                         uint8_t pawr_feat)
{
1004e980:	b580      	push	{r7, lr}
1004e982:	b082      	sub	sp, #8
1004e984:	af00      	add	r7, sp, #0
1004e986:	6078      	str	r0, [r7, #4]
1004e988:	000a      	movs	r2, r1
1004e98a:	1cfb      	adds	r3, r7, #3
1004e98c:	701a      	strb	r2, [r3, #0]
    llc_pscan_wr_config_tx_blue_sm(params_p,
1004e98e:	1cfb      	adds	r3, r7, #3
1004e990:	781a      	ldrb	r2, [r3, #0]
1004e992:	687b      	ldr	r3, [r7, #4]
1004e994:	0011      	movs	r1, r2
1004e996:	0018      	movs	r0, r3
1004e998:	f00b fdbc 	bl	1005a514 <llc_pscan_wr_config_tx_blue_sm>
                                   pawr_feat);
}
1004e99c:	46c0      	nop			@ (mov r8, r8)
1004e99e:	46bd      	mov	sp, r7
1004e9a0:	b002      	add	sp, #8
1004e9a2:	bd80      	pop	{r7, pc}

1004e9a4 <llc_pscan_wr_get_pawr_info_ucfg>:
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
uint8_t llc_pscan_wr_get_pawr_info_ucfg(uint8_t acad_size,
                                     uint8_t* acad_p,
                                     uint8_t* pawr_info_p)
{
1004e9a4:	b590      	push	{r4, r7, lr}
1004e9a6:	b085      	sub	sp, #20
1004e9a8:	af00      	add	r7, sp, #0
1004e9aa:	60b9      	str	r1, [r7, #8]
1004e9ac:	607a      	str	r2, [r7, #4]
1004e9ae:	240f      	movs	r4, #15
1004e9b0:	193b      	adds	r3, r7, r4
1004e9b2:	1c02      	adds	r2, r0, #0
1004e9b4:	701a      	strb	r2, [r3, #0]
    return llc_pscan_wr_get_pawr_info(acad_size,
1004e9b6:	687a      	ldr	r2, [r7, #4]
1004e9b8:	68b9      	ldr	r1, [r7, #8]
1004e9ba:	193b      	adds	r3, r7, r4
1004e9bc:	781b      	ldrb	r3, [r3, #0]
1004e9be:	0018      	movs	r0, r3
1004e9c0:	f00b fe1c 	bl	1005a5fc <llc_pscan_wr_get_pawr_info>
1004e9c4:	0003      	movs	r3, r0
                                      acad_p,
                                      pawr_info_p);
}
1004e9c6:	0018      	movs	r0, r3
1004e9c8:	46bd      	mov	sp, r7
1004e9ca:	b005      	add	sp, #20
1004e9cc:	bd90      	pop	{r4, r7, pc}

1004e9ce <llc_pscan_wr_check_pawr_active_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
uint8_t llc_pscan_wr_check_pawr_active_ucfg(uint8_t conn_idx)
{
1004e9ce:	b580      	push	{r7, lr}
1004e9d0:	b082      	sub	sp, #8
1004e9d2:	af00      	add	r7, sp, #0
1004e9d4:	0002      	movs	r2, r0
1004e9d6:	1dfb      	adds	r3, r7, #7
1004e9d8:	701a      	strb	r2, [r3, #0]
    return llc_pscan_wr_check_pawr_active(conn_idx);
1004e9da:	1dfb      	adds	r3, r7, #7
1004e9dc:	781b      	ldrb	r3, [r3, #0]
1004e9de:	0018      	movs	r0, r3
1004e9e0:	f00b fe2a 	bl	1005a638 <llc_pscan_wr_check_pawr_active>
1004e9e4:	0003      	movs	r3, r0
}
1004e9e6:	0018      	movs	r0, r3
1004e9e8:	46bd      	mov	sp, r7
1004e9ea:	b002      	add	sp, #8
1004e9ec:	bd80      	pop	{r7, pc}

1004e9ee <llc_pscan_wr_check_pawr_info_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
uint8_t llc_pscan_wr_check_pawr_info_ucfg(void* params_p)
{
1004e9ee:	b580      	push	{r7, lr}
1004e9f0:	b082      	sub	sp, #8
1004e9f2:	af00      	add	r7, sp, #0
1004e9f4:	6078      	str	r0, [r7, #4]
    return llc_pscan_wr_check_pawr_info(params_p);
1004e9f6:	687b      	ldr	r3, [r7, #4]
1004e9f8:	0018      	movs	r0, r3
1004e9fa:	f00b fe39 	bl	1005a670 <llc_pscan_wr_check_pawr_info>
1004e9fe:	0003      	movs	r3, r0
}
1004ea00:	0018      	movs	r0, r3
1004ea02:	46bd      	mov	sp, r7
1004ea04:	b002      	add	sp, #8
1004ea06:	bd80      	pop	{r7, pc}

1004ea08 <llc_pscan_wr_reserve_taskslots_ucfg>:
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
uint8_t llc_pscan_wr_reserve_taskslots_ucfg(void* params_p,
                                            uint8_t pawr_feat)
{
1004ea08:	b580      	push	{r7, lr}
1004ea0a:	b082      	sub	sp, #8
1004ea0c:	af00      	add	r7, sp, #0
1004ea0e:	6078      	str	r0, [r7, #4]
1004ea10:	000a      	movs	r2, r1
1004ea12:	1cfb      	adds	r3, r7, #3
1004ea14:	701a      	strb	r2, [r3, #0]
    return llc_pscan_wr_reserve_taskslots(params_p,
1004ea16:	1cfb      	adds	r3, r7, #3
1004ea18:	781a      	ldrb	r2, [r3, #0]
1004ea1a:	687b      	ldr	r3, [r7, #4]
1004ea1c:	0011      	movs	r1, r2
1004ea1e:	0018      	movs	r0, r3
1004ea20:	f00b fe50 	bl	1005a6c4 <llc_pscan_wr_reserve_taskslots>
1004ea24:	0003      	movs	r3, r0
                                          pawr_feat);
}
1004ea26:	0018      	movs	r0, r3
1004ea28:	46bd      	mov	sp, r7
1004ea2a:	b002      	add	sp, #8
1004ea2c:	bd80      	pop	{r7, pc}

1004ea2e <llc_pscan_wr_set_pscan_cntxt_ucfg>:
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_wr_set_pscan_cntxt_ucfg(void* cntxt_p,
                                       void* params_p)
{
1004ea2e:	b580      	push	{r7, lr}
1004ea30:	b082      	sub	sp, #8
1004ea32:	af00      	add	r7, sp, #0
1004ea34:	6078      	str	r0, [r7, #4]
1004ea36:	6039      	str	r1, [r7, #0]
    llc_pscan_wr_set_pscan_cntxt(cntxt_p,
1004ea38:	683a      	ldr	r2, [r7, #0]
1004ea3a:	687b      	ldr	r3, [r7, #4]
1004ea3c:	0011      	movs	r1, r2
1004ea3e:	0018      	movs	r0, r3
1004ea40:	f00b fe6e 	bl	1005a720 <llc_pscan_wr_set_pscan_cntxt>
                                 params_p);
}
1004ea44:	46c0      	nop			@ (mov r8, r8)
1004ea46:	46bd      	mov	sp, r7
1004ea48:	b002      	add	sp, #8
1004ea4a:	bd80      	pop	{r7, pc}

1004ea4c <llc_pscan_wr_set_scheduler_params_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_pscan_wr_set_scheduler_params_ucfg(void* params_p)
{
1004ea4c:	b580      	push	{r7, lr}
1004ea4e:	b082      	sub	sp, #8
1004ea50:	af00      	add	r7, sp, #0
1004ea52:	6078      	str	r0, [r7, #4]
    llc_pscan_wr_set_scheduler_params(params_p);
1004ea54:	687b      	ldr	r3, [r7, #4]
1004ea56:	0018      	movs	r0, r3
1004ea58:	f00b fe98 	bl	1005a78c <llc_pscan_wr_set_scheduler_params>
}
1004ea5c:	46c0      	nop			@ (mov r8, r8)
1004ea5e:	46bd      	mov	sp, r7
1004ea60:	b002      	add	sp, #8
1004ea62:	bd80      	pop	{r7, pc}

1004ea64 <llc_scan_conn_ind_sent_ucfg>:

#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_scan_conn_ind_sent_ucfg(void* ptr,
                                 uint8_t idx)
{
1004ea64:	b580      	push	{r7, lr}
1004ea66:	b082      	sub	sp, #8
1004ea68:	af00      	add	r7, sp, #0
1004ea6a:	6078      	str	r0, [r7, #4]
1004ea6c:	000a      	movs	r2, r1
1004ea6e:	1cfb      	adds	r3, r7, #3
1004ea70:	701a      	strb	r2, [r3, #0]
    llc_scan_conn_ind_sent(ptr,
1004ea72:	1cfb      	adds	r3, r7, #3
1004ea74:	781a      	ldrb	r2, [r3, #0]
1004ea76:	687b      	ldr	r3, [r7, #4]
1004ea78:	0011      	movs	r1, r2
1004ea7a:	0018      	movs	r0, r3
1004ea7c:	f00b feae 	bl	1005a7dc <llc_scan_conn_ind_sent>
                           idx);
}
1004ea80:	46c0      	nop			@ (mov r8, r8)
1004ea82:	46bd      	mov	sp, r7
1004ea84:	b002      	add	sp, #8
1004ea86:	bd80      	pop	{r7, pc}

1004ea88 <llc_scan_isr_uncoded_ucfg>:
#endif /* (CONTROLLER_SCAN_ENABLED == 1) &&\
          (CONNECTION_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1)
uint8_t llc_scan_isr_uncoded_ucfg(void* cntxt_p)
{
1004ea88:	b580      	push	{r7, lr}
1004ea8a:	b082      	sub	sp, #8
1004ea8c:	af00      	add	r7, sp, #0
1004ea8e:	6078      	str	r0, [r7, #4]
    return llc_scan_isr_uncoded(cntxt_p);
1004ea90:	687b      	ldr	r3, [r7, #4]
1004ea92:	0018      	movs	r0, r3
1004ea94:	f00b feee 	bl	1005a874 <llc_scan_isr_uncoded>
1004ea98:	0003      	movs	r3, r0
}
1004ea9a:	0018      	movs	r0, r3
1004ea9c:	46bd      	mov	sp, r7
1004ea9e:	b002      	add	sp, #8
1004eaa0:	bd80      	pop	{r7, pc}

1004eaa2 <llc_scan_isr_coded_ucfg>:
#endif /* (CONTROLLER_SCAN_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
uint8_t llc_scan_isr_coded_ucfg(void* cntxt_p)
{
1004eaa2:	b580      	push	{r7, lr}
1004eaa4:	b082      	sub	sp, #8
1004eaa6:	af00      	add	r7, sp, #0
1004eaa8:	6078      	str	r0, [r7, #4]
    return llc_scan_isr_coded(cntxt_p);
1004eaaa:	687b      	ldr	r3, [r7, #4]
1004eaac:	0018      	movs	r0, r3
1004eaae:	f00c f9b5 	bl	1005ae1c <llc_scan_isr_coded>
1004eab2:	0003      	movs	r3, r0
}
1004eab4:	0018      	movs	r0, r3
1004eab6:	46bd      	mov	sp, r7
1004eab8:	b002      	add	sp, #8
1004eaba:	bd80      	pop	{r7, pc}

1004eabc <llc_scan_process_ext_adv_ucfg>:
                                   void* params_p,
                                   uint32_t direct_addr[2],
                                   uint8_t idx,
                                   uint8_t advertiser_addr_flag,
                                   uint8_t* send_report_p)
{
1004eabc:	b590      	push	{r4, r7, lr}
1004eabe:	b087      	sub	sp, #28
1004eac0:	af02      	add	r7, sp, #8
1004eac2:	60f8      	str	r0, [r7, #12]
1004eac4:	60b9      	str	r1, [r7, #8]
1004eac6:	607a      	str	r2, [r7, #4]
1004eac8:	001a      	movs	r2, r3
1004eaca:	1cfb      	adds	r3, r7, #3
1004eacc:	701a      	strb	r2, [r3, #0]
    return llc_scan_process_ext_adv(scan_p,
1004eace:	1cfb      	adds	r3, r7, #3
1004ead0:	781c      	ldrb	r4, [r3, #0]
1004ead2:	687a      	ldr	r2, [r7, #4]
1004ead4:	68b9      	ldr	r1, [r7, #8]
1004ead6:	68f8      	ldr	r0, [r7, #12]
1004ead8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
1004eada:	9301      	str	r3, [sp, #4]
1004eadc:	2320      	movs	r3, #32
1004eade:	18fb      	adds	r3, r7, r3
1004eae0:	781b      	ldrb	r3, [r3, #0]
1004eae2:	9300      	str	r3, [sp, #0]
1004eae4:	0023      	movs	r3, r4
1004eae6:	f00c f99f 	bl	1005ae28 <llc_scan_process_ext_adv>
1004eaea:	0003      	movs	r3, r0
                                    params_p,
                                    direct_addr,
                                    idx,
                                    advertiser_addr_flag,
                                    send_report_p);
}
1004eaec:	0018      	movs	r0, r3
1004eaee:	46bd      	mov	sp, r7
1004eaf0:	b005      	add	sp, #20
1004eaf2:	bd90      	pop	{r4, r7, pc}

1004eaf4 <llc_scan_aux_conn_rsp_rcvd_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_scan_aux_conn_rsp_rcvd_ucfg(void* scan_p,
                                     void* aux_p,
                                     uint8_t idx)
{
1004eaf4:	b580      	push	{r7, lr}
1004eaf6:	b084      	sub	sp, #16
1004eaf8:	af00      	add	r7, sp, #0
1004eafa:	60f8      	str	r0, [r7, #12]
1004eafc:	60b9      	str	r1, [r7, #8]
1004eafe:	1dfb      	adds	r3, r7, #7
1004eb00:	701a      	strb	r2, [r3, #0]
    llc_scan_aux_conn_rsp_rcvd(scan_p,
1004eb02:	1dfb      	adds	r3, r7, #7
1004eb04:	781a      	ldrb	r2, [r3, #0]
1004eb06:	68b9      	ldr	r1, [r7, #8]
1004eb08:	68fb      	ldr	r3, [r7, #12]
1004eb0a:	0018      	movs	r0, r3
1004eb0c:	f00c fd84 	bl	1005b618 <llc_scan_aux_conn_rsp_rcvd>
                               aux_p,
                               idx);
}
1004eb10:	46c0      	nop			@ (mov r8, r8)
1004eb12:	46bd      	mov	sp, r7
1004eb14:	b004      	add	sp, #16
1004eb16:	bd80      	pop	{r7, pc}

1004eb18 <llc_scan_init_ucfg>:
          (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
          (CONNECTION_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1)
void llc_scan_init_ucfg(uint8_t ext_en)
{
1004eb18:	b580      	push	{r7, lr}
1004eb1a:	b082      	sub	sp, #8
1004eb1c:	af00      	add	r7, sp, #0
1004eb1e:	0002      	movs	r2, r0
1004eb20:	1dfb      	adds	r3, r7, #7
1004eb22:	701a      	strb	r2, [r3, #0]
    llc_scan_init(ext_en);
1004eb24:	1dfb      	adds	r3, r7, #7
1004eb26:	781b      	ldrb	r3, [r3, #0]
1004eb28:	0018      	movs	r0, r3
1004eb2a:	f00c fdcb 	bl	1005b6c4 <llc_scan_init>
}
1004eb2e:	46c0      	nop			@ (mov r8, r8)
1004eb30:	46bd      	mov	sp, r7
1004eb32:	b002      	add	sp, #8
1004eb34:	bd80      	pop	{r7, pc}

1004eb36 <llc_scan_mem_allocate_ucfg>:
#endif /* (CONTROLLER_SCAN_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1)
void llc_scan_mem_allocate_ucfg(uint8_t scan_en,
                                uint8_t ext_en)
{
1004eb36:	b580      	push	{r7, lr}
1004eb38:	b082      	sub	sp, #8
1004eb3a:	af00      	add	r7, sp, #0
1004eb3c:	0002      	movs	r2, r0
1004eb3e:	1dfb      	adds	r3, r7, #7
1004eb40:	701a      	strb	r2, [r3, #0]
1004eb42:	1dbb      	adds	r3, r7, #6
1004eb44:	1c0a      	adds	r2, r1, #0
1004eb46:	701a      	strb	r2, [r3, #0]
    llc_scan_mem_allocate(scan_en,
1004eb48:	1dbb      	adds	r3, r7, #6
1004eb4a:	781a      	ldrb	r2, [r3, #0]
1004eb4c:	1dfb      	adds	r3, r7, #7
1004eb4e:	781b      	ldrb	r3, [r3, #0]
1004eb50:	0011      	movs	r1, r2
1004eb52:	0018      	movs	r0, r3
1004eb54:	f00c fe0e 	bl	1005b774 <llc_scan_mem_allocate>
                          ext_en);
}
1004eb58:	46c0      	nop			@ (mov r8, r8)
1004eb5a:	46bd      	mov	sp, r7
1004eb5c:	b002      	add	sp, #8
1004eb5e:	bd80      	pop	{r7, pc}

1004eb60 <llc_scan_prepare_conn_ind_req_ucfg>:
#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_scan_prepare_conn_ind_req_ucfg(void* ptr,
                                        uint8_t idx,
                                        uint8_t aux_conn_req)
{
1004eb60:	b580      	push	{r7, lr}
1004eb62:	b082      	sub	sp, #8
1004eb64:	af00      	add	r7, sp, #0
1004eb66:	6078      	str	r0, [r7, #4]
1004eb68:	0008      	movs	r0, r1
1004eb6a:	0011      	movs	r1, r2
1004eb6c:	1cfb      	adds	r3, r7, #3
1004eb6e:	1c02      	adds	r2, r0, #0
1004eb70:	701a      	strb	r2, [r3, #0]
1004eb72:	1cbb      	adds	r3, r7, #2
1004eb74:	1c0a      	adds	r2, r1, #0
1004eb76:	701a      	strb	r2, [r3, #0]
    llc_scan_prepare_conn_ind_req(ptr,
1004eb78:	1cbb      	adds	r3, r7, #2
1004eb7a:	781a      	ldrb	r2, [r3, #0]
1004eb7c:	1cfb      	adds	r3, r7, #3
1004eb7e:	7819      	ldrb	r1, [r3, #0]
1004eb80:	687b      	ldr	r3, [r7, #4]
1004eb82:	0018      	movs	r0, r3
1004eb84:	f00d f9ca 	bl	1005bf1c <llc_scan_prepare_conn_ind_req>
                                  idx,
                                  aux_conn_req);
}
1004eb88:	46c0      	nop			@ (mov r8, r8)
1004eb8a:	46bd      	mov	sp, r7
1004eb8c:	b002      	add	sp, #8
1004eb8e:	bd80      	pop	{r7, pc}

1004eb90 <llc_scan_enable_extended_ucfg>:
          (CONNECTION_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
void llc_scan_enable_extended_ucfg(void* scan_p)
{
1004eb90:	b580      	push	{r7, lr}
1004eb92:	b082      	sub	sp, #8
1004eb94:	af00      	add	r7, sp, #0
1004eb96:	6078      	str	r0, [r7, #4]
    llc_scan_enable_extended(scan_p);
1004eb98:	687b      	ldr	r3, [r7, #4]
1004eb9a:	0018      	movs	r0, r3
1004eb9c:	f00d fd0e 	bl	1005c5bc <llc_scan_enable_extended>
}
1004eba0:	46c0      	nop			@ (mov r8, r8)
1004eba2:	46bd      	mov	sp, r7
1004eba4:	b002      	add	sp, #8
1004eba6:	bd80      	pop	{r7, pc}

1004eba8 <llc_scan_push_ext_adv_report_ucfg>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
void llc_scan_push_ext_adv_report_ucfg(void* ptr,
                                       uint8_t data_len,
                                       uint8_t data_offset,
                                       uint8_t event_type)
{
1004eba8:	b590      	push	{r4, r7, lr}
1004ebaa:	b083      	sub	sp, #12
1004ebac:	af00      	add	r7, sp, #0
1004ebae:	6078      	str	r0, [r7, #4]
1004ebb0:	000c      	movs	r4, r1
1004ebb2:	0010      	movs	r0, r2
1004ebb4:	0019      	movs	r1, r3
1004ebb6:	1cfb      	adds	r3, r7, #3
1004ebb8:	1c22      	adds	r2, r4, #0
1004ebba:	701a      	strb	r2, [r3, #0]
1004ebbc:	1cbb      	adds	r3, r7, #2
1004ebbe:	1c02      	adds	r2, r0, #0
1004ebc0:	701a      	strb	r2, [r3, #0]
1004ebc2:	1c7b      	adds	r3, r7, #1
1004ebc4:	1c0a      	adds	r2, r1, #0
1004ebc6:	701a      	strb	r2, [r3, #0]
    llc_scan_push_ext_adv_report(ptr,
1004ebc8:	1c7b      	adds	r3, r7, #1
1004ebca:	781c      	ldrb	r4, [r3, #0]
1004ebcc:	1cbb      	adds	r3, r7, #2
1004ebce:	781a      	ldrb	r2, [r3, #0]
1004ebd0:	1cfb      	adds	r3, r7, #3
1004ebd2:	7819      	ldrb	r1, [r3, #0]
1004ebd4:	6878      	ldr	r0, [r7, #4]
1004ebd6:	0023      	movs	r3, r4
1004ebd8:	f00d fd0c 	bl	1005c5f4 <llc_scan_push_ext_adv_report>
                                 data_len,
                                 data_offset,
                                 event_type);
}
1004ebdc:	46c0      	nop			@ (mov r8, r8)
1004ebde:	46bd      	mov	sp, r7
1004ebe0:	b003      	add	sp, #12
1004ebe2:	bd90      	pop	{r4, r7, pc}

1004ebe4 <llc_scan_reserve_taskslots_ucfg>:

#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus llc_scan_reserve_taskslots_ucfg(void* scan_en_p,
                                           void* scan_p)
{
1004ebe4:	b580      	push	{r7, lr}
1004ebe6:	b082      	sub	sp, #8
1004ebe8:	af00      	add	r7, sp, #0
1004ebea:	6078      	str	r0, [r7, #4]
1004ebec:	6039      	str	r1, [r7, #0]
    return llc_scan_reserve_taskslots(scan_en_p,
1004ebee:	683a      	ldr	r2, [r7, #0]
1004ebf0:	687b      	ldr	r3, [r7, #4]
1004ebf2:	0011      	movs	r1, r2
1004ebf4:	0018      	movs	r0, r3
1004ebf6:	f00d fd6d 	bl	1005c6d4 <llc_scan_reserve_taskslots>
1004ebfa:	0003      	movs	r3, r0
                                      scan_p);
}
1004ebfc:	0018      	movs	r0, r3
1004ebfe:	46bd      	mov	sp, r7
1004ec00:	b002      	add	sp, #8
1004ec02:	bd80      	pop	{r7, pc}

1004ec04 <llc_scan_set_conn_params_ucfg>:
#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void llc_scan_set_conn_params_ucfg(Extended_Create_Connection_Parameters_t ext_create_conn_params,
                                   uint8_t initiating_phy)
{
1004ec04:	b590      	push	{r4, r7, lr}
1004ec06:	b087      	sub	sp, #28
1004ec08:	af02      	add	r7, sp, #8
1004ec0a:	003c      	movs	r4, r7
1004ec0c:	6020      	str	r0, [r4, #0]
1004ec0e:	6061      	str	r1, [r4, #4]
1004ec10:	60a2      	str	r2, [r4, #8]
1004ec12:	60e3      	str	r3, [r4, #12]
    llc_scan_set_conn_params(ext_create_conn_params,
1004ec14:	003b      	movs	r3, r7
1004ec16:	2220      	movs	r2, #32
1004ec18:	18ba      	adds	r2, r7, r2
1004ec1a:	7812      	ldrb	r2, [r2, #0]
1004ec1c:	9200      	str	r2, [sp, #0]
1004ec1e:	6818      	ldr	r0, [r3, #0]
1004ec20:	6859      	ldr	r1, [r3, #4]
1004ec22:	689a      	ldr	r2, [r3, #8]
1004ec24:	68db      	ldr	r3, [r3, #12]
1004ec26:	f00d fda0 	bl	1005c76a <llc_scan_set_conn_params>
                             initiating_phy);
}
1004ec2a:	46c0      	nop			@ (mov r8, r8)
1004ec2c:	46bd      	mov	sp, r7
1004ec2e:	b005      	add	sp, #20
1004ec30:	bd90      	pop	{r4, r7, pc}

1004ec32 <llc_scan_disable_ucfg>:
          (CONNECTION_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
void llc_scan_disable_ucfg(void* scan_p)
{
1004ec32:	b580      	push	{r7, lr}
1004ec34:	b082      	sub	sp, #8
1004ec36:	af00      	add	r7, sp, #0
1004ec38:	6078      	str	r0, [r7, #4]
    llc_scan_disable(scan_p);
1004ec3a:	687b      	ldr	r3, [r7, #4]
1004ec3c:	0018      	movs	r0, r3
1004ec3e:	f00d fe53 	bl	1005c8e8 <llc_scan_disable>
}
1004ec42:	46c0      	nop			@ (mov r8, r8)
1004ec44:	46bd      	mov	sp, r7
1004ec46:	b002      	add	sp, #8
1004ec48:	bd80      	pop	{r7, pc}

1004ec4a <llc_scan_stop_ucfg>:
#endif /* (CONTROLLER_SCAN_ENABLED == 1) &&\
          (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) */

#if (CONTROLLER_SCAN_ENABLED == 1)
uint8_t llc_scan_stop_ucfg(uint8_t scan_disable)
{
1004ec4a:	b580      	push	{r7, lr}
1004ec4c:	b082      	sub	sp, #8
1004ec4e:	af00      	add	r7, sp, #0
1004ec50:	0002      	movs	r2, r0
1004ec52:	1dfb      	adds	r3, r7, #7
1004ec54:	701a      	strb	r2, [r3, #0]
    return llc_scan_stop(scan_disable);
1004ec56:	1dfb      	adds	r3, r7, #7
1004ec58:	781b      	ldrb	r3, [r3, #0]
1004ec5a:	0018      	movs	r0, r3
1004ec5c:	f00d fe12 	bl	1005c884 <llc_scan_stop>
1004ec60:	0003      	movs	r3, r0
}
1004ec62:	0018      	movs	r0, r3
1004ec64:	46bd      	mov	sp, r7
1004ec66:	b002      	add	sp, #8
1004ec68:	bd80      	pop	{r7, pc}

1004ec6a <LL_cpe_init_past_ucfg>:

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
void LL_cpe_init_past_ucfg(void)
{
1004ec6a:	b580      	push	{r7, lr}
1004ec6c:	af00      	add	r7, sp, #0
    LL_cpe_init_past();
1004ec6e:	f00e fe71 	bl	1005d954 <LL_cpe_init_past>
}
1004ec72:	46c0      	nop			@ (mov r8, r8)
1004ec74:	46bd      	mov	sp, r7
1004ec76:	bd80      	pop	{r7, pc}

1004ec78 <LL_cpe_init_conn_update_ucfg>:
#endif /* ((CONTROLLER_POWER_CONTROL_ENABLED == 1) &&\
          (CONNECTION_ENABLED == 1)) */

#if (CONNECTION_ENABLED == 1)
void LL_cpe_init_conn_update_ucfg(void)
{
1004ec78:	b580      	push	{r7, lr}
1004ec7a:	af00      	add	r7, sp, #0
    LL_cpe_init_conn_update();
1004ec7c:	f00e fe72 	bl	1005d964 <LL_cpe_init_conn_update>
}
1004ec80:	46c0      	nop			@ (mov r8, r8)
1004ec82:	46bd      	mov	sp, r7
1004ec84:	bd80      	pop	{r7, pc}

1004ec86 <LL_cpe_init_chmap_update_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
void LL_cpe_init_chmap_update_ucfg(void)
{
1004ec86:	b580      	push	{r7, lr}
1004ec88:	af00      	add	r7, sp, #0
    LL_cpe_init_chmap_update();
1004ec8a:	f00e fe73 	bl	1005d974 <LL_cpe_init_chmap_update>
}
1004ec8e:	46c0      	nop			@ (mov r8, r8)
1004ec90:	46bd      	mov	sp, r7
1004ec92:	bd80      	pop	{r7, pc}

1004ec94 <LL_cpe_init_ucfg>:
          (CONNECTION_ENABLED == 1) &&\
          (CONTROLLER_ISO_ENABLED == 1)) */

#if (CONNECTION_ENABLED == 1)
void LL_cpe_init_ucfg(void)
{
1004ec94:	b580      	push	{r7, lr}
1004ec96:	af00      	add	r7, sp, #0
    LL_cpe_init();
1004ec98:	f00e feb0 	bl	1005d9fc <LL_cpe_init>
}
1004ec9c:	46c0      	nop			@ (mov r8, r8)
1004ec9e:	46bd      	mov	sp, r7
1004eca0:	bd80      	pop	{r7, pc}

1004eca2 <LLC_channel_map_update_offline_processing_ucfg>:
       (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)\
      )\
     )\
    )
uint8_t LLC_channel_map_update_offline_processing_ucfg(uint8_t conn_idx)
{
1004eca2:	b580      	push	{r7, lr}
1004eca4:	b082      	sub	sp, #8
1004eca6:	af00      	add	r7, sp, #0
1004eca8:	0002      	movs	r2, r0
1004ecaa:	1dfb      	adds	r3, r7, #7
1004ecac:	701a      	strb	r2, [r3, #0]
    return LLC_channel_map_update_offline_processing(conn_idx);
1004ecae:	1dfb      	adds	r3, r7, #7
1004ecb0:	781b      	ldrb	r3, [r3, #0]
1004ecb2:	0018      	movs	r0, r3
1004ecb4:	f00f f971 	bl	1005df9a <LLC_channel_map_update_offline_processing>
1004ecb8:	0003      	movs	r3, r0
}
1004ecba:	0018      	movs	r0, r3
1004ecbc:	46bd      	mov	sp, r7
1004ecbe:	b002      	add	sp, #8
1004ecc0:	bd80      	pop	{r7, pc}

1004ecc2 <LLC_authenticated_payload_timeout_processing_ucfg>:
}
#endif /* (CONTROLLER_CTE_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
void LLC_authenticated_payload_timeout_processing_ucfg(uint16_t task_idx)
{
1004ecc2:	b580      	push	{r7, lr}
1004ecc4:	b082      	sub	sp, #8
1004ecc6:	af00      	add	r7, sp, #0
1004ecc8:	0002      	movs	r2, r0
1004ecca:	1dbb      	adds	r3, r7, #6
1004eccc:	801a      	strh	r2, [r3, #0]
    LLC_authenticated_payload_timeout_processing(task_idx);
1004ecce:	1dbb      	adds	r3, r7, #6
1004ecd0:	881b      	ldrh	r3, [r3, #0]
1004ecd2:	0018      	movs	r0, r3
1004ecd4:	f010 f930 	bl	1005ef38 <LLC_authenticated_payload_timeout_processing>
}
1004ecd8:	46c0      	nop			@ (mov r8, r8)
1004ecda:	46bd      	mov	sp, r7
1004ecdc:	b002      	add	sp, #8
1004ecde:	bd80      	pop	{r7, pc}

1004ece0 <llc_past_mem_allocate_ucfg>:
    (CONNECTION_ENABLED == 1)
void llc_past_mem_allocate_ucfg(uint8_t scan_en,
                                uint8_t ext_en,
                                uint8_t pscan_en,
                                uint8_t conn_en)
{
1004ece0:	b5b0      	push	{r4, r5, r7, lr}
1004ece2:	b082      	sub	sp, #8
1004ece4:	af00      	add	r7, sp, #0
1004ece6:	0005      	movs	r5, r0
1004ece8:	000c      	movs	r4, r1
1004ecea:	0010      	movs	r0, r2
1004ecec:	0019      	movs	r1, r3
1004ecee:	1dfb      	adds	r3, r7, #7
1004ecf0:	1c2a      	adds	r2, r5, #0
1004ecf2:	701a      	strb	r2, [r3, #0]
1004ecf4:	1dbb      	adds	r3, r7, #6
1004ecf6:	1c22      	adds	r2, r4, #0
1004ecf8:	701a      	strb	r2, [r3, #0]
1004ecfa:	1d7b      	adds	r3, r7, #5
1004ecfc:	1c02      	adds	r2, r0, #0
1004ecfe:	701a      	strb	r2, [r3, #0]
1004ed00:	1d3b      	adds	r3, r7, #4
1004ed02:	1c0a      	adds	r2, r1, #0
1004ed04:	701a      	strb	r2, [r3, #0]
    llc_past_mem_allocate(scan_en,
1004ed06:	1d3b      	adds	r3, r7, #4
1004ed08:	781c      	ldrb	r4, [r3, #0]
1004ed0a:	1d7b      	adds	r3, r7, #5
1004ed0c:	781a      	ldrb	r2, [r3, #0]
1004ed0e:	1dbb      	adds	r3, r7, #6
1004ed10:	7819      	ldrb	r1, [r3, #0]
1004ed12:	1dfb      	adds	r3, r7, #7
1004ed14:	7818      	ldrb	r0, [r3, #0]
1004ed16:	0023      	movs	r3, r4
1004ed18:	f010 fa80 	bl	1005f21c <llc_past_mem_allocate>
                          ext_en,
                          pscan_en,
                          conn_en);
}
1004ed1c:	46c0      	nop			@ (mov r8, r8)
1004ed1e:	46bd      	mov	sp, r7
1004ed20:	b002      	add	sp, #8
1004ed22:	bdb0      	pop	{r4, r5, r7, pc}

1004ed24 <LL_past_load_txctrl_packet_from_scanner_ucfg>:
                                                  uint8_t* pdu_p,
                                                  uint32_t instant_anchor,
                                                  uint32_t connect_interval,
                                                  uint16_t connect_event_count,
                                                  uint16_t connect_event_cnt)
{
1004ed24:	b590      	push	{r4, r7, lr}
1004ed26:	b087      	sub	sp, #28
1004ed28:	af02      	add	r7, sp, #8
1004ed2a:	60f8      	str	r0, [r7, #12]
1004ed2c:	60b9      	str	r1, [r7, #8]
1004ed2e:	607a      	str	r2, [r7, #4]
1004ed30:	603b      	str	r3, [r7, #0]
    LL_past_load_txctrl_packet_from_scanner(params,
1004ed32:	683c      	ldr	r4, [r7, #0]
1004ed34:	687a      	ldr	r2, [r7, #4]
1004ed36:	68b9      	ldr	r1, [r7, #8]
1004ed38:	68f8      	ldr	r0, [r7, #12]
1004ed3a:	2324      	movs	r3, #36	@ 0x24
1004ed3c:	18fb      	adds	r3, r7, r3
1004ed3e:	881b      	ldrh	r3, [r3, #0]
1004ed40:	9301      	str	r3, [sp, #4]
1004ed42:	2320      	movs	r3, #32
1004ed44:	18fb      	adds	r3, r7, r3
1004ed46:	881b      	ldrh	r3, [r3, #0]
1004ed48:	9300      	str	r3, [sp, #0]
1004ed4a:	0023      	movs	r3, r4
1004ed4c:	f010 faa8 	bl	1005f2a0 <LL_past_load_txctrl_packet_from_scanner>
                                            pdu_p,
                                            instant_anchor,
                                            connect_interval,
                                            connect_event_count,
                                            connect_event_cnt);
}
1004ed50:	46c0      	nop			@ (mov r8, r8)
1004ed52:	46bd      	mov	sp, r7
1004ed54:	b005      	add	sp, #20
1004ed56:	bd90      	pop	{r4, r7, pc}

1004ed58 <LL_periodicscan_deploy_scanner_from_past_ucfg>:
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void LL_periodicscan_deploy_scanner_from_past_ucfg(void* params,
                                                   uint8_t conn_idx,
                                                   uint8_t pawr_feat)
{
1004ed58:	b580      	push	{r7, lr}
1004ed5a:	b082      	sub	sp, #8
1004ed5c:	af00      	add	r7, sp, #0
1004ed5e:	6078      	str	r0, [r7, #4]
1004ed60:	0008      	movs	r0, r1
1004ed62:	0011      	movs	r1, r2
1004ed64:	1cfb      	adds	r3, r7, #3
1004ed66:	1c02      	adds	r2, r0, #0
1004ed68:	701a      	strb	r2, [r3, #0]
1004ed6a:	1cbb      	adds	r3, r7, #2
1004ed6c:	1c0a      	adds	r2, r1, #0
1004ed6e:	701a      	strb	r2, [r3, #0]
    LL_periodicscan_deploy_scanner_from_past(params,
1004ed70:	1cbb      	adds	r3, r7, #2
1004ed72:	781a      	ldrb	r2, [r3, #0]
1004ed74:	1cfb      	adds	r3, r7, #3
1004ed76:	7819      	ldrb	r1, [r3, #0]
1004ed78:	687b      	ldr	r3, [r7, #4]
1004ed7a:	0018      	movs	r0, r3
1004ed7c:	f010 fc7a 	bl	1005f674 <LL_periodicscan_deploy_scanner_from_past>
                                             conn_idx,
                                             pawr_feat);
}
1004ed80:	46c0      	nop			@ (mov r8, r8)
1004ed82:	46bd      	mov	sp, r7
1004ed84:	b002      	add	sp, #8
1004ed86:	bd80      	pop	{r7, pc}

1004ed88 <LL_past_initialize_connect_context_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void LL_past_initialize_connect_context_ucfg(uint8_t conn_idx)
{
1004ed88:	b580      	push	{r7, lr}
1004ed8a:	b082      	sub	sp, #8
1004ed8c:	af00      	add	r7, sp, #0
1004ed8e:	0002      	movs	r2, r0
1004ed90:	1dfb      	adds	r3, r7, #7
1004ed92:	701a      	strb	r2, [r3, #0]
    LL_past_initialize_connect_context(conn_idx);
1004ed94:	1dfb      	adds	r3, r7, #7
1004ed96:	781b      	ldrb	r3, [r3, #0]
1004ed98:	0018      	movs	r0, r3
1004ed9a:	f010 fa6c 	bl	1005f276 <LL_past_initialize_connect_context>
}
1004ed9e:	46c0      	nop			@ (mov r8, r8)
1004eda0:	46bd      	mov	sp, r7
1004eda2:	b002      	add	sp, #8
1004eda4:	bd80      	pop	{r7, pc}

1004eda6 <LL_past_default_params_ucfg>:
#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
void LL_past_default_params_ucfg(uint8_t conn_idx)
{
1004eda6:	b580      	push	{r7, lr}
1004eda8:	b082      	sub	sp, #8
1004edaa:	af00      	add	r7, sp, #0
1004edac:	0002      	movs	r2, r0
1004edae:	1dfb      	adds	r3, r7, #7
1004edb0:	701a      	strb	r2, [r3, #0]
    LL_past_default_params(conn_idx);
1004edb2:	1dfb      	adds	r3, r7, #7
1004edb4:	781b      	ldrb	r3, [r3, #0]
1004edb6:	0018      	movs	r0, r3
1004edb8:	f010 fd3a 	bl	1005f830 <LL_past_default_params>
}
1004edbc:	46c0      	nop			@ (mov r8, r8)
1004edbe:	46bd      	mov	sp, r7
1004edc0:	b002      	add	sp, #8
1004edc2:	bd80      	pop	{r7, pc}

1004edc4 <ADV_ISR_connect_request_received_ucfg>:

#if (CONNECTION_ENABLED == 1)
void ADV_ISR_connect_request_received_ucfg(void* pointer,
                                           uint8_t* packet,
                                           void* PeerIDAddress_p)
{
1004edc4:	b580      	push	{r7, lr}
1004edc6:	b084      	sub	sp, #16
1004edc8:	af00      	add	r7, sp, #0
1004edca:	60f8      	str	r0, [r7, #12]
1004edcc:	60b9      	str	r1, [r7, #8]
1004edce:	607a      	str	r2, [r7, #4]
    ADV_ISR_connect_request_received(pointer,
1004edd0:	687a      	ldr	r2, [r7, #4]
1004edd2:	68b9      	ldr	r1, [r7, #8]
1004edd4:	68fb      	ldr	r3, [r7, #12]
1004edd6:	0018      	movs	r0, r3
1004edd8:	f011 fd0c 	bl	100607f4 <ADV_ISR_connect_request_received>
                                     packet,
                                     PeerIDAddress_p);
}
1004eddc:	46c0      	nop			@ (mov r8, r8)
1004edde:	46bd      	mov	sp, r7
1004ede0:	b004      	add	sp, #16
1004ede2:	bd80      	pop	{r7, pc}

1004ede4 <LL_eadv_EauxIsr_connect_response_sent_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
void LL_eadv_EauxIsr_connect_response_sent_ucfg(void* pointer)
{
1004ede4:	b580      	push	{r7, lr}
1004ede6:	b082      	sub	sp, #8
1004ede8:	af00      	add	r7, sp, #0
1004edea:	6078      	str	r0, [r7, #4]
    LL_eadv_EauxIsr_connect_response_sent(pointer);
1004edec:	687b      	ldr	r3, [r7, #4]
1004edee:	0018      	movs	r0, r3
1004edf0:	f012 f8a6 	bl	10060f40 <LL_eadv_EauxIsr_connect_response_sent>
}
1004edf4:	46c0      	nop			@ (mov r8, r8)
1004edf6:	46bd      	mov	sp, r7
1004edf8:	b002      	add	sp, #8
1004edfa:	bd80      	pop	{r7, pc}

1004edfc <LL_eadv_EauxIsr_connect_request_received_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
void LL_eadv_EauxIsr_connect_request_received_ucfg(void* pointer,
                                                   uint8_t* calibration_required)
{
1004edfc:	b580      	push	{r7, lr}
1004edfe:	b082      	sub	sp, #8
1004ee00:	af00      	add	r7, sp, #0
1004ee02:	6078      	str	r0, [r7, #4]
1004ee04:	6039      	str	r1, [r7, #0]
    LL_eadv_EauxIsr_connect_request_received(pointer,
1004ee06:	683a      	ldr	r2, [r7, #0]
1004ee08:	687b      	ldr	r3, [r7, #4]
1004ee0a:	0011      	movs	r1, r2
1004ee0c:	0018      	movs	r0, r3
1004ee0e:	f012 f8d3 	bl	10060fb8 <LL_eadv_EauxIsr_connect_request_received>
                                             calibration_required);
}
1004ee12:	46c0      	nop			@ (mov r8, r8)
1004ee14:	46bd      	mov	sp, r7
1004ee16:	b002      	add	sp, #8
1004ee18:	bd80      	pop	{r7, pc}

1004ee1a <EADV_start_request_radio_tasks_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
uint8_t EADV_start_request_radio_tasks_ucfg(void* pointer)
{
1004ee1a:	b580      	push	{r7, lr}
1004ee1c:	b082      	sub	sp, #8
1004ee1e:	af00      	add	r7, sp, #0
1004ee20:	6078      	str	r0, [r7, #4]
    return EADV_start_request_radio_tasks(pointer);
1004ee22:	687b      	ldr	r3, [r7, #4]
1004ee24:	0018      	movs	r0, r3
1004ee26:	f012 fccb 	bl	100617c0 <EADV_start_request_radio_tasks>
1004ee2a:	0003      	movs	r3, r0
}
1004ee2c:	0018      	movs	r0, r3
1004ee2e:	46bd      	mov	sp, r7
1004ee30:	b002      	add	sp, #8
1004ee32:	bd80      	pop	{r7, pc}

1004ee34 <llc_eadv_max_supported_data_check_ucfg>:
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus llc_eadv_max_supported_data_check_ucfg(uint16_t data_length,
                                                  void* pointer)
{
1004ee34:	b580      	push	{r7, lr}
1004ee36:	b082      	sub	sp, #8
1004ee38:	af00      	add	r7, sp, #0
1004ee3a:	0002      	movs	r2, r0
1004ee3c:	6039      	str	r1, [r7, #0]
1004ee3e:	1dbb      	adds	r3, r7, #6
1004ee40:	801a      	strh	r2, [r3, #0]
    return llc_eadv_max_supported_data_check(data_length,
1004ee42:	683a      	ldr	r2, [r7, #0]
1004ee44:	1dbb      	adds	r3, r7, #6
1004ee46:	881b      	ldrh	r3, [r3, #0]
1004ee48:	0011      	movs	r1, r2
1004ee4a:	0018      	movs	r0, r3
1004ee4c:	f010 ff46 	bl	1005fcdc <llc_eadv_max_supported_data_check>
1004ee50:	0003      	movs	r3, r0
                                             pointer);
}
1004ee52:	0018      	movs	r0, r3
1004ee54:	46bd      	mov	sp, r7
1004ee56:	b002      	add	sp, #8
1004ee58:	bd80      	pop	{r7, pc}

1004ee5a <LL_eadv_start_extended_ucfg>:
#endif /* (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) */

#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
void LL_eadv_start_extended_ucfg(void* pointer)
{
1004ee5a:	b580      	push	{r7, lr}
1004ee5c:	b082      	sub	sp, #8
1004ee5e:	af00      	add	r7, sp, #0
1004ee60:	6078      	str	r0, [r7, #4]
    LL_eadv_start_extended(pointer);
1004ee62:	687b      	ldr	r3, [r7, #4]
1004ee64:	0018      	movs	r0, r3
1004ee66:	f012 fa53 	bl	10061310 <LL_eadv_start_extended>
}
1004ee6a:	46c0      	nop			@ (mov r8, r8)
1004ee6c:	46bd      	mov	sp, r7
1004ee6e:	b002      	add	sp, #8
1004ee70:	bd80      	pop	{r7, pc}

1004ee72 <ext_adv_scan_enabled_ucfg>:
#endif /* (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1) */

#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
uint8_t ext_adv_scan_enabled_ucfg(void)
{
1004ee72:	b580      	push	{r7, lr}
1004ee74:	af00      	add	r7, sp, #0
    return ext_adv_scan_enabled();
1004ee76:	f012 fe73 	bl	10061b60 <ext_adv_scan_enabled>
1004ee7a:	0003      	movs	r3, r0
}
1004ee7c:	0018      	movs	r0, r3
1004ee7e:	46bd      	mov	sp, r7
1004ee80:	bd80      	pop	{r7, pc}

1004ee82 <LL_init_ucfg>:
                  uint8_t PerAdvScanWr,
                  uint8_t Cte,
                  uint8_t Pcl,
                  uint8_t Cns,
                  uint8_t Chc)
{
1004ee82:	b5b0      	push	{r4, r5, r7, lr}
1004ee84:	b08a      	sub	sp, #40	@ 0x28
1004ee86:	af08      	add	r7, sp, #32
1004ee88:	0005      	movs	r5, r0
1004ee8a:	000c      	movs	r4, r1
1004ee8c:	0010      	movs	r0, r2
1004ee8e:	0019      	movs	r1, r3
1004ee90:	1dfb      	adds	r3, r7, #7
1004ee92:	1c2a      	adds	r2, r5, #0
1004ee94:	701a      	strb	r2, [r3, #0]
1004ee96:	1dbb      	adds	r3, r7, #6
1004ee98:	1c22      	adds	r2, r4, #0
1004ee9a:	701a      	strb	r2, [r3, #0]
1004ee9c:	1d7b      	adds	r3, r7, #5
1004ee9e:	1c02      	adds	r2, r0, #0
1004eea0:	701a      	strb	r2, [r3, #0]
1004eea2:	1d3b      	adds	r3, r7, #4
1004eea4:	1c0a      	adds	r2, r1, #0
1004eea6:	701a      	strb	r2, [r3, #0]
    LL_init(dataLenExt,
1004eea8:	1d3b      	adds	r3, r7, #4
1004eeaa:	781c      	ldrb	r4, [r3, #0]
1004eeac:	1d7b      	adds	r3, r7, #5
1004eeae:	781a      	ldrb	r2, [r3, #0]
1004eeb0:	1dbb      	adds	r3, r7, #6
1004eeb2:	7819      	ldrb	r1, [r3, #0]
1004eeb4:	1dfb      	adds	r3, r7, #7
1004eeb6:	7818      	ldrb	r0, [r3, #0]
1004eeb8:	2330      	movs	r3, #48	@ 0x30
1004eeba:	18fb      	adds	r3, r7, r3
1004eebc:	781b      	ldrb	r3, [r3, #0]
1004eebe:	9306      	str	r3, [sp, #24]
1004eec0:	232c      	movs	r3, #44	@ 0x2c
1004eec2:	18fb      	adds	r3, r7, r3
1004eec4:	781b      	ldrb	r3, [r3, #0]
1004eec6:	9305      	str	r3, [sp, #20]
1004eec8:	2328      	movs	r3, #40	@ 0x28
1004eeca:	18fb      	adds	r3, r7, r3
1004eecc:	781b      	ldrb	r3, [r3, #0]
1004eece:	9304      	str	r3, [sp, #16]
1004eed0:	2324      	movs	r3, #36	@ 0x24
1004eed2:	18fb      	adds	r3, r7, r3
1004eed4:	781b      	ldrb	r3, [r3, #0]
1004eed6:	9303      	str	r3, [sp, #12]
1004eed8:	2320      	movs	r3, #32
1004eeda:	18fb      	adds	r3, r7, r3
1004eedc:	781b      	ldrb	r3, [r3, #0]
1004eede:	9302      	str	r3, [sp, #8]
1004eee0:	231c      	movs	r3, #28
1004eee2:	18fb      	adds	r3, r7, r3
1004eee4:	781b      	ldrb	r3, [r3, #0]
1004eee6:	9301      	str	r3, [sp, #4]
1004eee8:	2318      	movs	r3, #24
1004eeea:	18fb      	adds	r3, r7, r3
1004eeec:	781b      	ldrb	r3, [r3, #0]
1004eeee:	9300      	str	r3, [sp, #0]
1004eef0:	0023      	movs	r3, r4
1004eef2:	f013 f975 	bl	100621e0 <LL_init>
            PerAdvScanWr,
            Cte,
            Pcl,
            Cns,
            Chc);
}
1004eef6:	46c0      	nop			@ (mov r8, r8)
1004eef8:	46bd      	mov	sp, r7
1004eefa:	b002      	add	sp, #8
1004eefc:	bdb0      	pop	{r4, r5, r7, pc}

1004eefe <smp_start_encryption_ucfg>:
       (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)\
      )\
     )\
    )
tBleStatus smp_start_encryption_ucfg(void* params)
{
1004eefe:	b580      	push	{r7, lr}
1004ef00:	b082      	sub	sp, #8
1004ef02:	af00      	add	r7, sp, #0
1004ef04:	6078      	str	r0, [r7, #4]
    return smp_start_encryption(params);
1004ef06:	687b      	ldr	r3, [r7, #4]
1004ef08:	0018      	movs	r0, r3
1004ef0a:	f014 fe1c 	bl	10063b46 <smp_start_encryption>
1004ef0e:	0003      	movs	r3, r0
}
1004ef10:	0018      	movs	r0, r3
1004ef12:	46bd      	mov	sp, r7
1004ef14:	b002      	add	sp, #8
1004ef16:	bd80      	pop	{r7, pc}

1004ef18 <smp_pp1_cei_send_pairing_request_ucfg>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_SCAN_ENABLED == 1) &&\
    (CONNECTION_ENABLED == 1)
tBleStatus smp_pp1_cei_send_pairing_request_ucfg(void* params)
{
1004ef18:	b580      	push	{r7, lr}
1004ef1a:	b082      	sub	sp, #8
1004ef1c:	af00      	add	r7, sp, #0
1004ef1e:	6078      	str	r0, [r7, #4]
    return smp_pp1_cei_send_pairing_request(params);
1004ef20:	687b      	ldr	r3, [r7, #4]
1004ef22:	0018      	movs	r0, r3
1004ef24:	f014 fe52 	bl	10063bcc <smp_pp1_cei_send_pairing_request>
1004ef28:	0003      	movs	r3, r0
}
1004ef2a:	0018      	movs	r0, r3
1004ef2c:	46bd      	mov	sp, r7
1004ef2e:	b002      	add	sp, #8
1004ef30:	bd80      	pop	{r7, pc}

1004ef32 <smp_fsm_process_actions_wrt_state_tsk_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void smp_fsm_process_actions_wrt_state_tsk_ucfg(uint16_t task_idx)
{
1004ef32:	b580      	push	{r7, lr}
1004ef34:	b082      	sub	sp, #8
1004ef36:	af00      	add	r7, sp, #0
1004ef38:	0002      	movs	r2, r0
1004ef3a:	1dbb      	adds	r3, r7, #6
1004ef3c:	801a      	strh	r2, [r3, #0]
    smp_fsm_process_actions_wrt_state_tsk(task_idx);
1004ef3e:	1dbb      	adds	r3, r7, #6
1004ef40:	881b      	ldrh	r3, [r3, #0]
1004ef42:	0018      	movs	r0, r3
1004ef44:	f015 f9de 	bl	10064304 <smp_fsm_process_actions_wrt_state_tsk>
}
1004ef48:	46c0      	nop			@ (mov r8, r8)
1004ef4a:	46bd      	mov	sp, r7
1004ef4c:	b002      	add	sp, #8
1004ef4e:	bd80      	pop	{r7, pc}

1004ef50 <smp_fsm_execute_actions_excerpt_cei_ucfg>:
       (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)\
      )\
     )\
    )
void smp_fsm_execute_actions_excerpt_cei_ucfg(void* params)
{
1004ef50:	b580      	push	{r7, lr}
1004ef52:	b082      	sub	sp, #8
1004ef54:	af00      	add	r7, sp, #0
1004ef56:	6078      	str	r0, [r7, #4]
    smp_fsm_execute_actions_excerpt_cei(params);
1004ef58:	687b      	ldr	r3, [r7, #4]
1004ef5a:	0018      	movs	r0, r3
1004ef5c:	f015 fab4 	bl	100644c8 <smp_fsm_execute_actions_excerpt_cei>
}
1004ef60:	46c0      	nop			@ (mov r8, r8)
1004ef62:	46bd      	mov	sp, r7
1004ef64:	b002      	add	sp, #8
1004ef66:	bd80      	pop	{r7, pc}

1004ef68 <smp_rxp_process_rxed_packets_tsk_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void smp_rxp_process_rxed_packets_tsk_ucfg(uint16_t task_idx)
{
1004ef68:	b580      	push	{r7, lr}
1004ef6a:	b082      	sub	sp, #8
1004ef6c:	af00      	add	r7, sp, #0
1004ef6e:	0002      	movs	r2, r0
1004ef70:	1dbb      	adds	r3, r7, #6
1004ef72:	801a      	strh	r2, [r3, #0]
    smp_rxp_process_rxed_packets_tsk(task_idx);
1004ef74:	1dbb      	adds	r3, r7, #6
1004ef76:	881b      	ldrh	r3, [r3, #0]
1004ef78:	0018      	movs	r0, r3
1004ef7a:	f015 facf 	bl	1006451c <smp_rxp_process_rxed_packets_tsk>
}
1004ef7e:	46c0      	nop			@ (mov r8, r8)
1004ef80:	46bd      	mov	sp, r7
1004ef82:	b002      	add	sp, #8
1004ef84:	bd80      	pop	{r7, pc}

1004ef86 <smp_rxp_process_wrt_current_fsm_excerpt_cei_ucfg>:
       (CONTROLLER_PERIODIC_ADV_WR_ENABLED == 1)\
      )\
     )\
    )
tBleStatus smp_rxp_process_wrt_current_fsm_excerpt_cei_ucfg(void* params)
{
1004ef86:	b580      	push	{r7, lr}
1004ef88:	b082      	sub	sp, #8
1004ef8a:	af00      	add	r7, sp, #0
1004ef8c:	6078      	str	r0, [r7, #4]
    return smp_rxp_process_wrt_current_fsm_excerpt_cei(params);
1004ef8e:	687b      	ldr	r3, [r7, #4]
1004ef90:	0018      	movs	r0, r3
1004ef92:	f015 fb89 	bl	100646a8 <smp_rxp_process_wrt_current_fsm_excerpt_cei>
1004ef96:	0003      	movs	r3, r0
}
1004ef98:	0018      	movs	r0, r3
1004ef9a:	46bd      	mov	sp, r7
1004ef9c:	b002      	add	sp, #8
1004ef9e:	bd80      	pop	{r7, pc}

1004efa0 <smp_init_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void smp_init_ucfg(void)
{
1004efa0:	b580      	push	{r7, lr}
1004efa2:	af00      	add	r7, sp, #0
    smp_init();
1004efa4:	f015 fc50 	bl	10064848 <smp_init>
}
1004efa8:	46c0      	nop			@ (mov r8, r8)
1004efaa:	46bd      	mov	sp, r7
1004efac:	bd80      	pop	{r7, pc}

1004efae <GAT_att_cmn_init_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAT_att_cmn_init_ucfg(void)
{
1004efae:	b580      	push	{r7, lr}
1004efb0:	af00      	add	r7, sp, #0
    GAT_att_cmn_init();
1004efb2:	f003 fa83 	bl	100524bc <GAT_att_cmn_init>
}
1004efb6:	46c0      	nop			@ (mov r8, r8)
1004efb8:	46bd      	mov	sp, r7
1004efba:	bd80      	pop	{r7, pc}

1004efbc <GAT_att_cmn_timer_expire_tsk_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAT_att_cmn_timer_expire_tsk_ucfg(uint16_t task_idx)
{
1004efbc:	b580      	push	{r7, lr}
1004efbe:	b082      	sub	sp, #8
1004efc0:	af00      	add	r7, sp, #0
1004efc2:	0002      	movs	r2, r0
1004efc4:	1dbb      	adds	r3, r7, #6
1004efc6:	801a      	strh	r2, [r3, #0]
    GAT_att_cmn_timer_expire_tsk(task_idx);
1004efc8:	1dbb      	adds	r3, r7, #6
1004efca:	881b      	ldrh	r3, [r3, #0]
1004efcc:	0018      	movs	r0, r3
1004efce:	f003 fae1 	bl	10052594 <GAT_att_cmn_timer_expire_tsk>
}
1004efd2:	46c0      	nop			@ (mov r8, r8)
1004efd4:	46bd      	mov	sp, r7
1004efd6:	b002      	add	sp, #8
1004efd8:	bd80      	pop	{r7, pc}

1004efda <GAT_att_cmn_tx_pool_evt_tsk_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAT_att_cmn_tx_pool_evt_tsk_ucfg(uint16_t task_idx)
{
1004efda:	b580      	push	{r7, lr}
1004efdc:	b082      	sub	sp, #8
1004efde:	af00      	add	r7, sp, #0
1004efe0:	0002      	movs	r2, r0
1004efe2:	1dbb      	adds	r3, r7, #6
1004efe4:	801a      	strh	r2, [r3, #0]
    GAT_att_cmn_tx_pool_evt_tsk(task_idx);
1004efe6:	1dbb      	adds	r3, r7, #6
1004efe8:	881b      	ldrh	r3, [r3, #0]
1004efea:	0018      	movs	r0, r3
1004efec:	f003 fb46 	bl	1005267c <GAT_att_cmn_tx_pool_evt_tsk>
}
1004eff0:	46c0      	nop			@ (mov r8, r8)
1004eff2:	46bd      	mov	sp, r7
1004eff4:	b002      	add	sp, #8
1004eff6:	bd80      	pop	{r7, pc}

1004eff8 <GAT_att_srv_process_rx_pckt_tsk_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAT_att_srv_process_rx_pckt_tsk_ucfg(uint16_t task_idx)
{
1004eff8:	b580      	push	{r7, lr}
1004effa:	b082      	sub	sp, #8
1004effc:	af00      	add	r7, sp, #0
1004effe:	0002      	movs	r2, r0
1004f000:	1dbb      	adds	r3, r7, #6
1004f002:	801a      	strh	r2, [r3, #0]
    GAT_att_srv_process_rx_pckt_tsk(task_idx);
1004f004:	1dbb      	adds	r3, r7, #6
1004f006:	881b      	ldrh	r3, [r3, #0]
1004f008:	0018      	movs	r0, r3
1004f00a:	f003 fe71 	bl	10052cf0 <GAT_att_srv_process_rx_pckt_tsk>
}
1004f00e:	46c0      	nop			@ (mov r8, r8)
1004f010:	46bd      	mov	sp, r7
1004f012:	b002      	add	sp, #8
1004f014:	bd80      	pop	{r7, pc}

1004f016 <GAT_srv_db_hash_tsk_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAT_srv_db_hash_tsk_ucfg(uint16_t task_idx)
{
1004f016:	b580      	push	{r7, lr}
1004f018:	b082      	sub	sp, #8
1004f01a:	af00      	add	r7, sp, #0
1004f01c:	0002      	movs	r2, r0
1004f01e:	1dbb      	adds	r3, r7, #6
1004f020:	801a      	strh	r2, [r3, #0]
    GAT_srv_db_hash_tsk(task_idx);
1004f022:	1dbb      	adds	r3, r7, #6
1004f024:	881b      	ldrh	r3, [r3, #0]
1004f026:	0018      	movs	r0, r3
1004f028:	f004 ff60 	bl	10053eec <GAT_srv_db_hash_tsk>
}
1004f02c:	46c0      	nop			@ (mov r8, r8)
1004f02e:	46bd      	mov	sp, r7
1004f030:	b002      	add	sp, #8
1004f032:	bd80      	pop	{r7, pc}

1004f034 <GAT_srv_send_srv_change_tsk_ucfg>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
void GAT_srv_send_srv_change_tsk_ucfg(uint16_t task_idx)
{
1004f034:	b580      	push	{r7, lr}
1004f036:	b082      	sub	sp, #8
1004f038:	af00      	add	r7, sp, #0
1004f03a:	0002      	movs	r2, r0
1004f03c:	1dbb      	adds	r3, r7, #6
1004f03e:	801a      	strh	r2, [r3, #0]
    GAT_srv_send_srv_change_tsk(task_idx);
1004f040:	1dbb      	adds	r3, r7, #6
1004f042:	881b      	ldrh	r3, [r3, #0]
1004f044:	0018      	movs	r0, r3
1004f046:	f005 f80b 	bl	10054060 <GAT_srv_send_srv_change_tsk>
}
1004f04a:	46c0      	nop			@ (mov r8, r8)
1004f04c:	46bd      	mov	sp, r7
1004f04e:	b002      	add	sp, #8
1004f050:	bd80      	pop	{r7, pc}

1004f052 <aci_gap_set_scan_configuration>:
                                          uint8_t scanning_filter_policy,
                                          uint8_t phy,
                                          uint8_t scan_type,
                                          uint16_t scan_interval,
                                          uint16_t scan_window)
{
1004f052:	b5b0      	push	{r4, r5, r7, lr}
1004f054:	b084      	sub	sp, #16
1004f056:	af02      	add	r7, sp, #8
1004f058:	0005      	movs	r5, r0
1004f05a:	000c      	movs	r4, r1
1004f05c:	0010      	movs	r0, r2
1004f05e:	0019      	movs	r1, r3
1004f060:	1dfb      	adds	r3, r7, #7
1004f062:	1c2a      	adds	r2, r5, #0
1004f064:	701a      	strb	r2, [r3, #0]
1004f066:	1dbb      	adds	r3, r7, #6
1004f068:	1c22      	adds	r2, r4, #0
1004f06a:	701a      	strb	r2, [r3, #0]
1004f06c:	1d7b      	adds	r3, r7, #5
1004f06e:	1c02      	adds	r2, r0, #0
1004f070:	701a      	strb	r2, [r3, #0]
1004f072:	1d3b      	adds	r3, r7, #4
1004f074:	1c0a      	adds	r2, r1, #0
1004f076:	701a      	strb	r2, [r3, #0]
    return aci_gap_set_scan_configuration_api(duplicate_filtering,
1004f078:	1d3b      	adds	r3, r7, #4
1004f07a:	781c      	ldrb	r4, [r3, #0]
1004f07c:	1d7b      	adds	r3, r7, #5
1004f07e:	781a      	ldrb	r2, [r3, #0]
1004f080:	1dbb      	adds	r3, r7, #6
1004f082:	7819      	ldrb	r1, [r3, #0]
1004f084:	1dfb      	adds	r3, r7, #7
1004f086:	7818      	ldrb	r0, [r3, #0]
1004f088:	231c      	movs	r3, #28
1004f08a:	18fb      	adds	r3, r7, r3
1004f08c:	881b      	ldrh	r3, [r3, #0]
1004f08e:	9301      	str	r3, [sp, #4]
1004f090:	2318      	movs	r3, #24
1004f092:	18fb      	adds	r3, r7, r3
1004f094:	881b      	ldrh	r3, [r3, #0]
1004f096:	9300      	str	r3, [sp, #0]
1004f098:	0023      	movs	r3, r4
1004f09a:	f000 fc30 	bl	1004f8fe <aci_gap_set_scan_configuration_api>
1004f09e:	0003      	movs	r3, r0
                                              scanning_filter_policy,
                                              phy,
                                              scan_type,
                                              scan_interval,
                                              scan_window);
}
1004f0a0:	0018      	movs	r0, r3
1004f0a2:	46bd      	mov	sp, r7
1004f0a4:	b002      	add	sp, #8
1004f0a6:	bdb0      	pop	{r4, r5, r7, pc}

1004f0a8 <aci_gap_set_connection_configuration>:
                                                uint16_t connection_interval_max,
                                                uint16_t max_latency,
                                                uint16_t supervision_timeout,
                                                uint16_t min_ce_length,
                                                uint16_t max_ce_length)
{
1004f0a8:	b5b0      	push	{r4, r5, r7, lr}
1004f0aa:	b086      	sub	sp, #24
1004f0ac:	af04      	add	r7, sp, #16
1004f0ae:	0005      	movs	r5, r0
1004f0b0:	000c      	movs	r4, r1
1004f0b2:	0010      	movs	r0, r2
1004f0b4:	0019      	movs	r1, r3
1004f0b6:	1dfb      	adds	r3, r7, #7
1004f0b8:	1c2a      	adds	r2, r5, #0
1004f0ba:	701a      	strb	r2, [r3, #0]
1004f0bc:	1d3b      	adds	r3, r7, #4
1004f0be:	1c22      	adds	r2, r4, #0
1004f0c0:	801a      	strh	r2, [r3, #0]
1004f0c2:	1cbb      	adds	r3, r7, #2
1004f0c4:	1c02      	adds	r2, r0, #0
1004f0c6:	801a      	strh	r2, [r3, #0]
1004f0c8:	003b      	movs	r3, r7
1004f0ca:	1c0a      	adds	r2, r1, #0
1004f0cc:	801a      	strh	r2, [r3, #0]
    return aci_gap_set_connection_configuration_api(phy,
1004f0ce:	003b      	movs	r3, r7
1004f0d0:	881c      	ldrh	r4, [r3, #0]
1004f0d2:	1cbb      	adds	r3, r7, #2
1004f0d4:	881a      	ldrh	r2, [r3, #0]
1004f0d6:	1d3b      	adds	r3, r7, #4
1004f0d8:	8819      	ldrh	r1, [r3, #0]
1004f0da:	1dfb      	adds	r3, r7, #7
1004f0dc:	7818      	ldrb	r0, [r3, #0]
1004f0de:	2320      	movs	r3, #32
1004f0e0:	18fb      	adds	r3, r7, r3
1004f0e2:	881b      	ldrh	r3, [r3, #0]
1004f0e4:	9302      	str	r3, [sp, #8]
1004f0e6:	231c      	movs	r3, #28
1004f0e8:	18fb      	adds	r3, r7, r3
1004f0ea:	881b      	ldrh	r3, [r3, #0]
1004f0ec:	9301      	str	r3, [sp, #4]
1004f0ee:	2318      	movs	r3, #24
1004f0f0:	18fb      	adds	r3, r7, r3
1004f0f2:	881b      	ldrh	r3, [r3, #0]
1004f0f4:	9300      	str	r3, [sp, #0]
1004f0f6:	0023      	movs	r3, r4
1004f0f8:	f000 fc13 	bl	1004f922 <aci_gap_set_connection_configuration_api>
1004f0fc:	0003      	movs	r3, r0
                                                    connection_interval_max,
                                                    max_latency,
                                                    supervision_timeout,
                                                    min_ce_length,
                                                    max_ce_length);
}
1004f0fe:	0018      	movs	r0, r3
1004f100:	46bd      	mov	sp, r7
1004f102:	b002      	add	sp, #8
1004f104:	bdb0      	pop	{r4, r5, r7, pc}

1004f106 <aci_gap_start_procedure>:
#if (CONTROLLER_SCAN_ENABLED == 1)
tBleStatus aci_gap_start_procedure(uint8_t procedure_code,
                                   uint8_t phys,
                                   uint16_t duration,
                                   uint16_t period)
{
1004f106:	b5b0      	push	{r4, r5, r7, lr}
1004f108:	b082      	sub	sp, #8
1004f10a:	af00      	add	r7, sp, #0
1004f10c:	0005      	movs	r5, r0
1004f10e:	000c      	movs	r4, r1
1004f110:	0010      	movs	r0, r2
1004f112:	0019      	movs	r1, r3
1004f114:	1dfb      	adds	r3, r7, #7
1004f116:	1c2a      	adds	r2, r5, #0
1004f118:	701a      	strb	r2, [r3, #0]
1004f11a:	1dbb      	adds	r3, r7, #6
1004f11c:	1c22      	adds	r2, r4, #0
1004f11e:	701a      	strb	r2, [r3, #0]
1004f120:	1d3b      	adds	r3, r7, #4
1004f122:	1c02      	adds	r2, r0, #0
1004f124:	801a      	strh	r2, [r3, #0]
1004f126:	1cbb      	adds	r3, r7, #2
1004f128:	1c0a      	adds	r2, r1, #0
1004f12a:	801a      	strh	r2, [r3, #0]
    return aci_gap_start_procedure_api(procedure_code,
1004f12c:	1cbb      	adds	r3, r7, #2
1004f12e:	881c      	ldrh	r4, [r3, #0]
1004f130:	1d3b      	adds	r3, r7, #4
1004f132:	881a      	ldrh	r2, [r3, #0]
1004f134:	1dbb      	adds	r3, r7, #6
1004f136:	7819      	ldrb	r1, [r3, #0]
1004f138:	1dfb      	adds	r3, r7, #7
1004f13a:	7818      	ldrb	r0, [r3, #0]
1004f13c:	0023      	movs	r3, r4
1004f13e:	f000 fc03 	bl	1004f948 <aci_gap_start_procedure_api>
1004f142:	0003      	movs	r3, r0
                                       phys,
                                       duration,
                                       period);
}
1004f144:	0018      	movs	r0, r3
1004f146:	46bd      	mov	sp, r7
1004f148:	b002      	add	sp, #8
1004f14a:	bdb0      	pop	{r4, r5, r7, pc}

1004f14c <aci_gap_terminate_proc>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONTROLLER_SCAN_ENABLED == 1)
tBleStatus aci_gap_terminate_proc(uint8_t Procedure_Code)
{
1004f14c:	b580      	push	{r7, lr}
1004f14e:	b082      	sub	sp, #8
1004f150:	af00      	add	r7, sp, #0
1004f152:	0002      	movs	r2, r0
1004f154:	1dfb      	adds	r3, r7, #7
1004f156:	701a      	strb	r2, [r3, #0]
    return aci_gap_terminate_proc_api(Procedure_Code);
1004f158:	1dfb      	adds	r3, r7, #7
1004f15a:	781b      	ldrb	r3, [r3, #0]
1004f15c:	0018      	movs	r0, r3
1004f15e:	f000 fc09 	bl	1004f974 <aci_gap_terminate_proc_api>
1004f162:	0003      	movs	r3, r0
}
1004f164:	0018      	movs	r0, r3
1004f166:	46bd      	mov	sp, r7
1004f168:	b002      	add	sp, #8
1004f16a:	bd80      	pop	{r7, pc}

1004f16c <aci_gap_set_io_capability>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
tBleStatus aci_gap_set_io_capability(uint8_t IO_Capability)
{
1004f16c:	b580      	push	{r7, lr}
1004f16e:	b082      	sub	sp, #8
1004f170:	af00      	add	r7, sp, #0
1004f172:	0002      	movs	r2, r0
1004f174:	1dfb      	adds	r3, r7, #7
1004f176:	701a      	strb	r2, [r3, #0]
    return aci_gap_set_io_capability_api(IO_Capability);
1004f178:	1dfb      	adds	r3, r7, #7
1004f17a:	781b      	ldrb	r3, [r3, #0]
1004f17c:	0018      	movs	r0, r3
1004f17e:	f000 fc82 	bl	1004fa86 <aci_gap_set_io_capability_api>
1004f182:	0003      	movs	r3, r0
}
1004f184:	0018      	movs	r0, r3
1004f186:	46bd      	mov	sp, r7
1004f188:	b002      	add	sp, #8
1004f18a:	bd80      	pop	{r7, pc}

1004f18c <aci_gap_set_security_requirements>:
                                             uint8_t SC_Support,
                                             uint8_t KeyPress_Notification_Support,
                                             uint8_t Min_Encryption_Key_Size,
                                             uint8_t Max_Encryption_Key_Size,
                                             uint8_t Pairing_Response)
{
1004f18c:	b5b0      	push	{r4, r5, r7, lr}
1004f18e:	b086      	sub	sp, #24
1004f190:	af04      	add	r7, sp, #16
1004f192:	0005      	movs	r5, r0
1004f194:	000c      	movs	r4, r1
1004f196:	0010      	movs	r0, r2
1004f198:	0019      	movs	r1, r3
1004f19a:	1dfb      	adds	r3, r7, #7
1004f19c:	1c2a      	adds	r2, r5, #0
1004f19e:	701a      	strb	r2, [r3, #0]
1004f1a0:	1dbb      	adds	r3, r7, #6
1004f1a2:	1c22      	adds	r2, r4, #0
1004f1a4:	701a      	strb	r2, [r3, #0]
1004f1a6:	1d7b      	adds	r3, r7, #5
1004f1a8:	1c02      	adds	r2, r0, #0
1004f1aa:	701a      	strb	r2, [r3, #0]
1004f1ac:	1d3b      	adds	r3, r7, #4
1004f1ae:	1c0a      	adds	r2, r1, #0
1004f1b0:	701a      	strb	r2, [r3, #0]
    return aci_gap_set_security_requirements_api(Bonding_Mode,
1004f1b2:	1d3b      	adds	r3, r7, #4
1004f1b4:	781c      	ldrb	r4, [r3, #0]
1004f1b6:	1d7b      	adds	r3, r7, #5
1004f1b8:	781a      	ldrb	r2, [r3, #0]
1004f1ba:	1dbb      	adds	r3, r7, #6
1004f1bc:	7819      	ldrb	r1, [r3, #0]
1004f1be:	1dfb      	adds	r3, r7, #7
1004f1c0:	7818      	ldrb	r0, [r3, #0]
1004f1c2:	2320      	movs	r3, #32
1004f1c4:	18fb      	adds	r3, r7, r3
1004f1c6:	781b      	ldrb	r3, [r3, #0]
1004f1c8:	9302      	str	r3, [sp, #8]
1004f1ca:	231c      	movs	r3, #28
1004f1cc:	18fb      	adds	r3, r7, r3
1004f1ce:	781b      	ldrb	r3, [r3, #0]
1004f1d0:	9301      	str	r3, [sp, #4]
1004f1d2:	2318      	movs	r3, #24
1004f1d4:	18fb      	adds	r3, r7, r3
1004f1d6:	781b      	ldrb	r3, [r3, #0]
1004f1d8:	9300      	str	r3, [sp, #0]
1004f1da:	0023      	movs	r3, r4
1004f1dc:	f000 fc5c 	bl	1004fa98 <aci_gap_set_security_requirements_api>
1004f1e0:	0003      	movs	r3, r0
                                                 SC_Support,
                                                 KeyPress_Notification_Support,
                                                 Min_Encryption_Key_Size,
                                                 Max_Encryption_Key_Size,
                                                 Pairing_Response);
}
1004f1e2:	0018      	movs	r0, r3
1004f1e4:	46bd      	mov	sp, r7
1004f1e6:	b002      	add	sp, #8
1004f1e8:	bdb0      	pop	{r4, r5, r7, pc}

1004f1ea <aci_gap_passkey_resp>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
tBleStatus aci_gap_passkey_resp(uint16_t Connection_Handle,
                                uint32_t Passkey)
{
1004f1ea:	b580      	push	{r7, lr}
1004f1ec:	b082      	sub	sp, #8
1004f1ee:	af00      	add	r7, sp, #0
1004f1f0:	0002      	movs	r2, r0
1004f1f2:	6039      	str	r1, [r7, #0]
1004f1f4:	1dbb      	adds	r3, r7, #6
1004f1f6:	801a      	strh	r2, [r3, #0]
    return aci_gap_passkey_resp_api(Connection_Handle,
1004f1f8:	683a      	ldr	r2, [r7, #0]
1004f1fa:	1dbb      	adds	r3, r7, #6
1004f1fc:	881b      	ldrh	r3, [r3, #0]
1004f1fe:	0011      	movs	r1, r2
1004f200:	0018      	movs	r0, r3
1004f202:	f000 fc8d 	bl	1004fb20 <aci_gap_passkey_resp_api>
1004f206:	0003      	movs	r3, r0
                                    Passkey);
}
1004f208:	0018      	movs	r0, r3
1004f20a:	46bd      	mov	sp, r7
1004f20c:	b002      	add	sp, #8
1004f20e:	bd80      	pop	{r7, pc}

1004f210 <aci_gatt_srv_add_service>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
tBleStatus aci_gatt_srv_add_service(ble_gatt_srv_def_t* Serv_p)
{
1004f210:	b580      	push	{r7, lr}
1004f212:	b082      	sub	sp, #8
1004f214:	af00      	add	r7, sp, #0
1004f216:	6078      	str	r0, [r7, #4]
    return aci_gatt_srv_add_service_api(Serv_p);
1004f218:	687b      	ldr	r3, [r7, #4]
1004f21a:	0018      	movs	r0, r3
1004f21c:	f000 fc8c 	bl	1004fb38 <aci_gatt_srv_add_service_api>
1004f220:	0003      	movs	r3, r0
}
1004f222:	0018      	movs	r0, r3
1004f224:	46bd      	mov	sp, r7
1004f226:	b002      	add	sp, #8
1004f228:	bd80      	pop	{r7, pc}

1004f22a <aci_gatt_srv_get_service_handle>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
uint16_t aci_gatt_srv_get_service_handle(ble_gatt_srv_def_t* Serv_p)
{
1004f22a:	b580      	push	{r7, lr}
1004f22c:	b082      	sub	sp, #8
1004f22e:	af00      	add	r7, sp, #0
1004f230:	6078      	str	r0, [r7, #4]
    return aci_gatt_srv_get_service_handle_api(Serv_p);
1004f232:	687b      	ldr	r3, [r7, #4]
1004f234:	0018      	movs	r0, r3
1004f236:	f000 fc83 	bl	1004fb40 <aci_gatt_srv_get_service_handle_api>
1004f23a:	0003      	movs	r3, r0
}
1004f23c:	0018      	movs	r0, r3
1004f23e:	46bd      	mov	sp, r7
1004f240:	b002      	add	sp, #8
1004f242:	bd80      	pop	{r7, pc}

1004f244 <aci_gatt_srv_add_char>:

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
tBleStatus aci_gatt_srv_add_char(ble_gatt_chr_def_t* Char_p,
                                 uint16_t Serv_Attr_H)
{
1004f244:	b580      	push	{r7, lr}
1004f246:	b082      	sub	sp, #8
1004f248:	af00      	add	r7, sp, #0
1004f24a:	6078      	str	r0, [r7, #4]
1004f24c:	000a      	movs	r2, r1
1004f24e:	1cbb      	adds	r3, r7, #2
1004f250:	801a      	strh	r2, [r3, #0]
    return aci_gatt_srv_add_char_api(Char_p,
1004f252:	1cbb      	adds	r3, r7, #2
1004f254:	881a      	ldrh	r2, [r3, #0]
1004f256:	687b      	ldr	r3, [r7, #4]
1004f258:	0011      	movs	r1, r2
1004f25a:	0018      	movs	r0, r3
1004f25c:	f000 fc74 	bl	1004fb48 <aci_gatt_srv_add_char_api>
1004f260:	0003      	movs	r3, r0
                                     Serv_Attr_H);
}
1004f262:	0018      	movs	r0, r3
1004f264:	46bd      	mov	sp, r7
1004f266:	b002      	add	sp, #8
1004f268:	bd80      	pop	{r7, pc}

1004f26a <aci_gatt_srv_get_char_decl_handle>:
#endif /* (BLESTACK_CONTROLLER_ONLY == 0) */

#if (BLESTACK_CONTROLLER_ONLY == 0)
#if (CONNECTION_ENABLED == 1)
uint16_t aci_gatt_srv_get_char_decl_handle(ble_gatt_chr_def_t* Char_p)
{
1004f26a:	b580      	push	{r7, lr}
1004f26c:	b082      	sub	sp, #8
1004f26e:	af00      	add	r7, sp, #0
1004f270:	6078      	str	r0, [r7, #4]
    return aci_gatt_srv_get_char_decl_handle_api(Char_p);
1004f272:	687b      	ldr	r3, [r7, #4]
1004f274:	0018      	movs	r0, r3
1004f276:	f000 fc6b 	bl	1004fb50 <aci_gatt_srv_get_char_decl_handle_api>
1004f27a:	0003      	movs	r3, r0
}
1004f27c:	0018      	movs	r0, r3
1004f27e:	46bd      	mov	sp, r7
1004f280:	b002      	add	sp, #8
1004f282:	bd80      	pop	{r7, pc}

1004f284 <aci_gatt_srv_resp>:
                             uint16_t CID,
                             uint16_t Attr_Handle,
                             uint8_t Error_Code,
                             uint16_t Data_Len,
                             uint8_t* Data_p)
{
1004f284:	b5b0      	push	{r4, r5, r7, lr}
1004f286:	b084      	sub	sp, #16
1004f288:	af02      	add	r7, sp, #8
1004f28a:	0005      	movs	r5, r0
1004f28c:	000c      	movs	r4, r1
1004f28e:	0010      	movs	r0, r2
1004f290:	0019      	movs	r1, r3
1004f292:	1dbb      	adds	r3, r7, #6
1004f294:	1c2a      	adds	r2, r5, #0
1004f296:	801a      	strh	r2, [r3, #0]
1004f298:	1d3b      	adds	r3, r7, #4
1004f29a:	1c22      	adds	r2, r4, #0
1004f29c:	801a      	strh	r2, [r3, #0]
1004f29e:	1cbb      	adds	r3, r7, #2
1004f2a0:	1c02      	adds	r2, r0, #0
1004f2a2:	801a      	strh	r2, [r3, #0]
1004f2a4:	1c7b      	adds	r3, r7, #1
1004f2a6:	1c0a      	adds	r2, r1, #0
1004f2a8:	701a      	strb	r2, [r3, #0]
    return aci_gatt_srv_resp_api(Connection_Handle,
1004f2aa:	1c7b      	adds	r3, r7, #1
1004f2ac:	781c      	ldrb	r4, [r3, #0]
1004f2ae:	1cbb      	adds	r3, r7, #2
1004f2b0:	881a      	ldrh	r2, [r3, #0]
1004f2b2:	1d3b      	adds	r3, r7, #4
1004f2b4:	8819      	ldrh	r1, [r3, #0]
1004f2b6:	1dbb      	adds	r3, r7, #6
1004f2b8:	8818      	ldrh	r0, [r3, #0]
1004f2ba:	69fb      	ldr	r3, [r7, #28]
1004f2bc:	9301      	str	r3, [sp, #4]
1004f2be:	2318      	movs	r3, #24
1004f2c0:	18fb      	adds	r3, r7, r3
1004f2c2:	881b      	ldrh	r3, [r3, #0]
1004f2c4:	9300      	str	r3, [sp, #0]
1004f2c6:	0023      	movs	r3, r4
1004f2c8:	f000 fc46 	bl	1004fb58 <aci_gatt_srv_resp_api>
1004f2cc:	0003      	movs	r3, r0
                                 CID,
                                 Attr_Handle,
                                 Error_Code,
                                 Data_Len,
                                 Data_p);
}
1004f2ce:	0018      	movs	r0, r3
1004f2d0:	46bd      	mov	sp, r7
1004f2d2:	b002      	add	sp, #8
1004f2d4:	bdb0      	pop	{r4, r5, r7, pc}

1004f2d6 <aci_l2cap_connection_parameter_update_resp>:
                                                      uint16_t Timeout_Multiplier,
                                                      uint16_t Min_CE_Length,
                                                      uint16_t Max_CE_Length,
                                                      uint8_t Identifier,
                                                      uint8_t Accept)
{
1004f2d6:	b5b0      	push	{r4, r5, r7, lr}
1004f2d8:	b088      	sub	sp, #32
1004f2da:	af06      	add	r7, sp, #24
1004f2dc:	0005      	movs	r5, r0
1004f2de:	000c      	movs	r4, r1
1004f2e0:	0010      	movs	r0, r2
1004f2e2:	0019      	movs	r1, r3
1004f2e4:	1dbb      	adds	r3, r7, #6
1004f2e6:	1c2a      	adds	r2, r5, #0
1004f2e8:	801a      	strh	r2, [r3, #0]
1004f2ea:	1d3b      	adds	r3, r7, #4
1004f2ec:	1c22      	adds	r2, r4, #0
1004f2ee:	801a      	strh	r2, [r3, #0]
1004f2f0:	1cbb      	adds	r3, r7, #2
1004f2f2:	1c02      	adds	r2, r0, #0
1004f2f4:	801a      	strh	r2, [r3, #0]
1004f2f6:	003b      	movs	r3, r7
1004f2f8:	1c0a      	adds	r2, r1, #0
1004f2fa:	801a      	strh	r2, [r3, #0]
    return aci_l2cap_connection_parameter_update_resp_api(Connection_Handle,
1004f2fc:	003b      	movs	r3, r7
1004f2fe:	881c      	ldrh	r4, [r3, #0]
1004f300:	1cbb      	adds	r3, r7, #2
1004f302:	881a      	ldrh	r2, [r3, #0]
1004f304:	1d3b      	adds	r3, r7, #4
1004f306:	8819      	ldrh	r1, [r3, #0]
1004f308:	1dbb      	adds	r3, r7, #6
1004f30a:	8818      	ldrh	r0, [r3, #0]
1004f30c:	2328      	movs	r3, #40	@ 0x28
1004f30e:	18fb      	adds	r3, r7, r3
1004f310:	781b      	ldrb	r3, [r3, #0]
1004f312:	9304      	str	r3, [sp, #16]
1004f314:	2324      	movs	r3, #36	@ 0x24
1004f316:	18fb      	adds	r3, r7, r3
1004f318:	781b      	ldrb	r3, [r3, #0]
1004f31a:	9303      	str	r3, [sp, #12]
1004f31c:	2320      	movs	r3, #32
1004f31e:	18fb      	adds	r3, r7, r3
1004f320:	881b      	ldrh	r3, [r3, #0]
1004f322:	9302      	str	r3, [sp, #8]
1004f324:	231c      	movs	r3, #28
1004f326:	18fb      	adds	r3, r7, r3
1004f328:	881b      	ldrh	r3, [r3, #0]
1004f32a:	9301      	str	r3, [sp, #4]
1004f32c:	2318      	movs	r3, #24
1004f32e:	18fb      	adds	r3, r7, r3
1004f330:	881b      	ldrh	r3, [r3, #0]
1004f332:	9300      	str	r3, [sp, #0]
1004f334:	0023      	movs	r3, r4
1004f336:	f000 fd25 	bl	1004fd84 <aci_l2cap_connection_parameter_update_resp_api>
1004f33a:	0003      	movs	r3, r0
                                                          Timeout_Multiplier,
                                                          Min_CE_Length,
                                                          Max_CE_Length,
                                                          Identifier,
                                                          Accept);
}
1004f33c:	0018      	movs	r0, r3
1004f33e:	46bd      	mov	sp, r7
1004f340:	b002      	add	sp, #8
1004f342:	bdb0      	pop	{r4, r5, r7, pc}

1004f344 <hci_le_read_remote_features>:
}
#endif /* (CONNECTION_ENABLED == 1) */

#if (CONNECTION_ENABLED == 1)
tBleStatus hci_le_read_remote_features(uint16_t Connection_Handle)
{
1004f344:	b580      	push	{r7, lr}
1004f346:	b082      	sub	sp, #8
1004f348:	af00      	add	r7, sp, #0
1004f34a:	0002      	movs	r2, r0
1004f34c:	1dbb      	adds	r3, r7, #6
1004f34e:	801a      	strh	r2, [r3, #0]
    return hci_le_read_remote_features_api(Connection_Handle);
1004f350:	1dbb      	adds	r3, r7, #6
1004f352:	881b      	ldrh	r3, [r3, #0]
1004f354:	0018      	movs	r0, r3
1004f356:	f005 fe1f 	bl	10054f98 <hci_le_read_remote_features_api>
1004f35a:	0003      	movs	r3, r0
}
1004f35c:	0018      	movs	r0, r3
1004f35e:	46bd      	mov	sp, r7
1004f360:	b002      	add	sp, #8
1004f362:	bd80      	pop	{r7, pc}

1004f364 <hci_le_set_extended_advertising_enable>:

#if (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)
tBleStatus hci_le_set_extended_advertising_enable(uint8_t Enable,
                                                  uint8_t Number_of_Sets,
                                                  Advertising_Set_Parameters_t* Advertising_Set_Parameters)
{
1004f364:	b580      	push	{r7, lr}
1004f366:	b082      	sub	sp, #8
1004f368:	af00      	add	r7, sp, #0
1004f36a:	603a      	str	r2, [r7, #0]
1004f36c:	1dfb      	adds	r3, r7, #7
1004f36e:	1c02      	adds	r2, r0, #0
1004f370:	701a      	strb	r2, [r3, #0]
1004f372:	1dbb      	adds	r3, r7, #6
1004f374:	1c0a      	adds	r2, r1, #0
1004f376:	701a      	strb	r2, [r3, #0]
    return hci_le_set_extended_advertising_enable_api(Enable,
1004f378:	683a      	ldr	r2, [r7, #0]
1004f37a:	1dbb      	adds	r3, r7, #6
1004f37c:	7819      	ldrb	r1, [r3, #0]
1004f37e:	1dfb      	adds	r3, r7, #7
1004f380:	781b      	ldrb	r3, [r3, #0]
1004f382:	0018      	movs	r0, r3
1004f384:	f006 f806 	bl	10055394 <hci_le_set_extended_advertising_enable_api>
1004f388:	0003      	movs	r3, r0
                                                      Number_of_Sets,
                                                      Advertising_Set_Parameters);
}
1004f38a:	0018      	movs	r0, r3
1004f38c:	46bd      	mov	sp, r7
1004f38e:	b002      	add	sp, #8
1004f390:	bd80      	pop	{r7, pc}

1004f392 <hci_le_periodic_advertising_set_info_transfer>:
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1)) &&\
    (CONNECTION_ENABLED == 1)
tBleStatus hci_le_periodic_advertising_set_info_transfer(uint16_t Connection_Handle,
                                                         uint16_t Service_Data,
                                                         uint8_t Advertising_Handle)
{
1004f392:	b590      	push	{r4, r7, lr}
1004f394:	b083      	sub	sp, #12
1004f396:	af00      	add	r7, sp, #0
1004f398:	0004      	movs	r4, r0
1004f39a:	0008      	movs	r0, r1
1004f39c:	0011      	movs	r1, r2
1004f39e:	1dbb      	adds	r3, r7, #6
1004f3a0:	1c22      	adds	r2, r4, #0
1004f3a2:	801a      	strh	r2, [r3, #0]
1004f3a4:	1d3b      	adds	r3, r7, #4
1004f3a6:	1c02      	adds	r2, r0, #0
1004f3a8:	801a      	strh	r2, [r3, #0]
1004f3aa:	1cfb      	adds	r3, r7, #3
1004f3ac:	1c0a      	adds	r2, r1, #0
1004f3ae:	701a      	strb	r2, [r3, #0]
    return hci_le_periodic_advertising_set_info_transfer_api(Connection_Handle,
1004f3b0:	1cfb      	adds	r3, r7, #3
1004f3b2:	781a      	ldrb	r2, [r3, #0]
1004f3b4:	1d3b      	adds	r3, r7, #4
1004f3b6:	8819      	ldrh	r1, [r3, #0]
1004f3b8:	1dbb      	adds	r3, r7, #6
1004f3ba:	881b      	ldrh	r3, [r3, #0]
1004f3bc:	0018      	movs	r0, r3
1004f3be:	f006 f832 	bl	10055426 <hci_le_periodic_advertising_set_info_transfer_api>
1004f3c2:	0003      	movs	r3, r0
                                                             Service_Data,
                                                             Advertising_Handle);
}
1004f3c4:	0018      	movs	r0, r3
1004f3c6:	46bd      	mov	sp, r7
1004f3c8:	b003      	add	sp, #12
1004f3ca:	bd90      	pop	{r4, r7, pc}

1004f3cc <hci_le_set_periodic_advertising_enable>:

#if ((CONTROLLER_PERIODIC_ADV_ENABLED == 1) &&\
    (CONTROLLER_EXT_ADV_SCAN_ENABLED == 1))
tBleStatus hci_le_set_periodic_advertising_enable(uint8_t Enable,
                                                  uint8_t Advertising_Handle)
{
1004f3cc:	b580      	push	{r7, lr}
1004f3ce:	b082      	sub	sp, #8
1004f3d0:	af00      	add	r7, sp, #0
1004f3d2:	0002      	movs	r2, r0
1004f3d4:	1dfb      	adds	r3, r7, #7
1004f3d6:	701a      	strb	r2, [r3, #0]
1004f3d8:	1dbb      	adds	r3, r7, #6
1004f3da:	1c0a      	adds	r2, r1, #0
1004f3dc:	701a      	strb	r2, [r3, #0]
    return hci_le_set_periodic_advertising_enable_api(Enable,
1004f3de:	1dbb      	adds	r3, r7, #6
1004f3e0:	781a      	ldrb	r2, [r3, #0]
1004f3e2:	1dfb      	adds	r3, r7, #7
1004f3e4:	781b      	ldrb	r3, [r3, #0]
1004f3e6:	0011      	movs	r1, r2
1004f3e8:	0018      	movs	r0, r3
1004f3ea:	f006 f879 	bl	100554e0 <hci_le_set_periodic_advertising_enable_api>
1004f3ee:	0003      	movs	r3, r0
                                                      Advertising_Handle);
}
1004f3f0:	0018      	movs	r0, r3
1004f3f2:	46bd      	mov	sp, r7
1004f3f4:	b002      	add	sp, #8
1004f3f6:	bd80      	pop	{r7, pc}

1004f3f8 <hci_le_set_periodic_advertising_parameters_v2>:
                                                         uint8_t Num_Subevents,
                                                         uint8_t Subevent_Interval,
                                                         uint8_t Response_Slot_Delay,
                                                         uint8_t Response_Slot_Spacing,
                                                         uint8_t Num_Response_Slots)
{
1004f3f8:	b5b0      	push	{r4, r5, r7, lr}
1004f3fa:	b088      	sub	sp, #32
1004f3fc:	af06      	add	r7, sp, #24
1004f3fe:	0005      	movs	r5, r0
1004f400:	000c      	movs	r4, r1
1004f402:	0010      	movs	r0, r2
1004f404:	0019      	movs	r1, r3
1004f406:	1dfb      	adds	r3, r7, #7
1004f408:	1c2a      	adds	r2, r5, #0
1004f40a:	701a      	strb	r2, [r3, #0]
1004f40c:	1d3b      	adds	r3, r7, #4
1004f40e:	1c22      	adds	r2, r4, #0
1004f410:	801a      	strh	r2, [r3, #0]
1004f412:	1cbb      	adds	r3, r7, #2
1004f414:	1c02      	adds	r2, r0, #0
1004f416:	801a      	strh	r2, [r3, #0]
1004f418:	003b      	movs	r3, r7
1004f41a:	1c0a      	adds	r2, r1, #0
1004f41c:	801a      	strh	r2, [r3, #0]
    return hci_le_set_periodic_advertising_parameters_v2_api(Advertising_Handle,
1004f41e:	003b      	movs	r3, r7
1004f420:	881c      	ldrh	r4, [r3, #0]
1004f422:	1cbb      	adds	r3, r7, #2
1004f424:	881a      	ldrh	r2, [r3, #0]
1004f426:	1d3b      	adds	r3, r7, #4
1004f428:	8819      	ldrh	r1, [r3, #0]
1004f42a:	1dfb      	adds	r3, r7, #7
1004f42c:	7818      	ldrb	r0, [r3, #0]
1004f42e:	2328      	movs	r3, #40	@ 0x28
1004f430:	18fb      	adds	r3, r7, r3
1004f432:	781b      	ldrb	r3, [r3, #0]
1004f434:	9304      	str	r3, [sp, #16]
1004f436:	2324      	movs	r3, #36	@ 0x24
1004f438:	18fb      	adds	r3, r7, r3
1004f43a:	781b      	ldrb	r3, [r3, #0]
1004f43c:	9303      	str	r3, [sp, #12]
1004f43e:	2320      	movs	r3, #32
1004f440:	18fb      	adds	r3, r7, r3
1004f442:	781b      	ldrb	r3, [r3, #0]
1004f444:	9302      	str	r3, [sp, #8]
1004f446:	231c      	movs	r3, #28
1004f448:	18fb      	adds	r3, r7, r3
1004f44a:	781b      	ldrb	r3, [r3, #0]
1004f44c:	9301      	str	r3, [sp, #4]
1004f44e:	2318      	movs	r3, #24
1004f450:	18fb      	adds	r3, r7, r3
1004f452:	781b      	ldrb	r3, [r3, #0]
1004f454:	9300      	str	r3, [sp, #0]
1004f456:	0023      	movs	r3, r4
1004f458:	f006 f860 	bl	1005551c <hci_le_set_periodic_advertising_parameters_v2_api>
1004f45c:	0003      	movs	r3, r0
                                                             Num_Subevents,
                                                             Subevent_Interval,
                                                             Response_Slot_Delay,
                                                             Response_Slot_Spacing,
                                                             Num_Response_Slots);
}
1004f45e:	0018      	movs	r0, r3
1004f460:	46bd      	mov	sp, r7
1004f462:	b002      	add	sp, #8
1004f464:	bdb0      	pop	{r4, r5, r7, pc}
	...

1004f468 <UTIL_SEQ_Run>:
 * That is the reason why many variables that are used only in that function are declared static.
 * Note: These variables could have been declared static in the function.
 *
 */
void UTIL_SEQ_Run( UTIL_SEQ_bm_t Mask_bm )
{
1004f468:	b580      	push	{r7, lr}
1004f46a:	b090      	sub	sp, #64	@ 0x40
1004f46c:	af00      	add	r7, sp, #0
1004f46e:	6078      	str	r0, [r7, #4]
  /*
   * When this function is nested, the mask to be applied cannot be larger than the first call
   * The mask is always getting smaller and smaller
   * A copy is made of the mask set by UTIL_SEQ_Run() in case it is called again in the task
   */
  super_mask_backup = SuperMask;
1004f470:	4b75      	ldr	r3, [pc, #468]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f472:	681b      	ldr	r3, [r3, #0]
1004f474:	62bb      	str	r3, [r7, #40]	@ 0x28
  SuperMask &= Mask_bm;
1004f476:	4b74      	ldr	r3, [pc, #464]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f478:	681b      	ldr	r3, [r3, #0]
1004f47a:	687a      	ldr	r2, [r7, #4]
1004f47c:	401a      	ands	r2, r3
1004f47e:	4b72      	ldr	r3, [pc, #456]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f480:	601a      	str	r2, [r3, #0]
   * TaskMask that comes from UTIL_SEQ_PauseTask() / UTIL_SEQ_ResumeTask
   * SuperMask that comes from UTIL_SEQ_Run
   * If the waited event is there, exit from  UTIL_SEQ_Run() to return to the
   * waiting task
   */
  local_taskset = TaskSet;
1004f482:	4b72      	ldr	r3, [pc, #456]	@ (1004f64c <UTIL_SEQ_Run+0x1e4>)
1004f484:	681b      	ldr	r3, [r3, #0]
1004f486:	63bb      	str	r3, [r7, #56]	@ 0x38
  local_evtset = EvtSet;
1004f488:	4b71      	ldr	r3, [pc, #452]	@ (1004f650 <UTIL_SEQ_Run+0x1e8>)
1004f48a:	681b      	ldr	r3, [r3, #0]
1004f48c:	637b      	str	r3, [r7, #52]	@ 0x34
  local_taskmask = TaskMask;
1004f48e:	4b71      	ldr	r3, [pc, #452]	@ (1004f654 <UTIL_SEQ_Run+0x1ec>)
1004f490:	681b      	ldr	r3, [r3, #0]
1004f492:	633b      	str	r3, [r7, #48]	@ 0x30
  local_evtwaited =  EvtWaited;
1004f494:	4b70      	ldr	r3, [pc, #448]	@ (1004f658 <UTIL_SEQ_Run+0x1f0>)
1004f496:	681b      	ldr	r3, [r3, #0]
1004f498:	62fb      	str	r3, [r7, #44]	@ 0x2c
  while(((local_taskset & local_taskmask & SuperMask) != 0U) && ((local_evtset & local_evtwaited)==0U))
1004f49a:	e090      	b.n	1004f5be <UTIL_SEQ_Run+0x156>
  {
    counter = 0U;
1004f49c:	2300      	movs	r3, #0
1004f49e:	63fb      	str	r3, [r7, #60]	@ 0x3c
    /*
     * When a flag is set, the associated bit is set in TaskPrio[counter].priority mask depending
     * on the priority parameter given from UTIL_SEQ_SetTask()
     * The while loop is looking for a flag set from the highest priority maskr to the lower
     */
    while((TaskPrio[counter].priority & local_taskmask & SuperMask)== 0U)
1004f4a0:	e002      	b.n	1004f4a8 <UTIL_SEQ_Run+0x40>
    {
      counter++;
1004f4a2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f4a4:	3301      	adds	r3, #1
1004f4a6:	63fb      	str	r3, [r7, #60]	@ 0x3c
    while((TaskPrio[counter].priority & local_taskmask & SuperMask)== 0U)
1004f4a8:	4b6c      	ldr	r3, [pc, #432]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f4aa:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1004f4ac:	00d2      	lsls	r2, r2, #3
1004f4ae:	58d3      	ldr	r3, [r2, r3]
1004f4b0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004f4b2:	401a      	ands	r2, r3
1004f4b4:	4b64      	ldr	r3, [pc, #400]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f4b6:	681b      	ldr	r3, [r3, #0]
1004f4b8:	4013      	ands	r3, r2
1004f4ba:	d0f2      	beq.n	1004f4a2 <UTIL_SEQ_Run+0x3a>
    }

    current_task_set = TaskPrio[counter].priority & local_taskmask & SuperMask;
1004f4bc:	4b67      	ldr	r3, [pc, #412]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f4be:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1004f4c0:	00d2      	lsls	r2, r2, #3
1004f4c2:	58d3      	ldr	r3, [r2, r3]
1004f4c4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004f4c6:	401a      	ands	r2, r3
1004f4c8:	4b5f      	ldr	r3, [pc, #380]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f4ca:	681b      	ldr	r3, [r3, #0]
1004f4cc:	4013      	ands	r3, r2
1004f4ce:	627b      	str	r3, [r7, #36]	@ 0x24
     * so that the second one can be executed.
     * Note that the first flag is not removed from the list of pending task but just masked by the round_robin mask
     *
     * In the check below, the round_robin mask is reinitialize in case all pending tasks haven been executed at least once
     */
    if ((TaskPrio[counter].round_robin & current_task_set) == 0U)
1004f4d0:	4a62      	ldr	r2, [pc, #392]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f4d2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f4d4:	00db      	lsls	r3, r3, #3
1004f4d6:	18d3      	adds	r3, r2, r3
1004f4d8:	3304      	adds	r3, #4
1004f4da:	681b      	ldr	r3, [r3, #0]
1004f4dc:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1004f4de:	4013      	ands	r3, r2
1004f4e0:	d107      	bne.n	1004f4f2 <UTIL_SEQ_Run+0x8a>
    {
      TaskPrio[counter].round_robin = UTIL_SEQ_ALL_BIT_SET;
1004f4e2:	4a5e      	ldr	r2, [pc, #376]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f4e4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f4e6:	00db      	lsls	r3, r3, #3
1004f4e8:	18d3      	adds	r3, r2, r3
1004f4ea:	3304      	adds	r3, #4
1004f4ec:	2201      	movs	r2, #1
1004f4ee:	4252      	negs	r2, r2
1004f4f0:	601a      	str	r2, [r3, #0]
  /*
   * Read the flag index of the task to be executed
	 * Once the index is read, the associated task will be executed even though a higher priority stack is requested
	 * before task execution.
	 */
    CurrentTaskIdx = (SEQ_BitPosition(current_task_set & TaskPrio[counter].round_robin));
1004f4f2:	4a5a      	ldr	r2, [pc, #360]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f4f4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f4f6:	00db      	lsls	r3, r3, #3
1004f4f8:	18d3      	adds	r3, r2, r3
1004f4fa:	3304      	adds	r3, #4
1004f4fc:	681b      	ldr	r3, [r3, #0]
1004f4fe:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
1004f500:	4013      	ands	r3, r2
1004f502:	0018      	movs	r0, r3
1004f504:	f000 f99a 	bl	1004f83c <SEQ_BitPosition>
1004f508:	0003      	movs	r3, r0
1004f50a:	001a      	movs	r2, r3
1004f50c:	4b54      	ldr	r3, [pc, #336]	@ (1004f660 <UTIL_SEQ_Run+0x1f8>)
1004f50e:	601a      	str	r2, [r3, #0]

    /*
     * remove from the roun_robin mask the task that has been selected to be executed
     */
    TaskPrio[counter].round_robin &= ~(1U << CurrentTaskIdx);
1004f510:	4a52      	ldr	r2, [pc, #328]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f512:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f514:	00db      	lsls	r3, r3, #3
1004f516:	18d3      	adds	r3, r2, r3
1004f518:	3304      	adds	r3, #4
1004f51a:	681a      	ldr	r2, [r3, #0]
1004f51c:	4b50      	ldr	r3, [pc, #320]	@ (1004f660 <UTIL_SEQ_Run+0x1f8>)
1004f51e:	681b      	ldr	r3, [r3, #0]
1004f520:	2101      	movs	r1, #1
1004f522:	4099      	lsls	r1, r3
1004f524:	000b      	movs	r3, r1
1004f526:	43db      	mvns	r3, r3
1004f528:	401a      	ands	r2, r3
1004f52a:	494c      	ldr	r1, [pc, #304]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f52c:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f52e:	00db      	lsls	r3, r3, #3
1004f530:	18cb      	adds	r3, r1, r3
1004f532:	3304      	adds	r3, #4
1004f534:	601a      	str	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004f536:	f3ef 8310 	mrs	r3, PRIMASK
1004f53a:	61bb      	str	r3, [r7, #24]
  return(result);
1004f53c:	69bb      	ldr	r3, [r7, #24]

    UTIL_SEQ_ENTER_CRITICAL_SECTION( );
1004f53e:	623b      	str	r3, [r7, #32]
  __ASM volatile ("cpsid i" : : : "memory");
1004f540:	b672      	cpsid	i
}
1004f542:	46c0      	nop			@ (mov r8, r8)
    /* remove from the list or pending task the one that has been selected to be executed */
    TaskSet &= ~(1U << CurrentTaskIdx);
1004f544:	4b46      	ldr	r3, [pc, #280]	@ (1004f660 <UTIL_SEQ_Run+0x1f8>)
1004f546:	681b      	ldr	r3, [r3, #0]
1004f548:	2201      	movs	r2, #1
1004f54a:	409a      	lsls	r2, r3
1004f54c:	0013      	movs	r3, r2
1004f54e:	43da      	mvns	r2, r3
1004f550:	4b3e      	ldr	r3, [pc, #248]	@ (1004f64c <UTIL_SEQ_Run+0x1e4>)
1004f552:	681b      	ldr	r3, [r3, #0]
1004f554:	401a      	ands	r2, r3
1004f556:	4b3d      	ldr	r3, [pc, #244]	@ (1004f64c <UTIL_SEQ_Run+0x1e4>)
1004f558:	601a      	str	r2, [r3, #0]
    /* remove from all priority mask the task that has been selected to be executed */
    for (counter = UTIL_SEQ_CONF_PRIO_NBR; counter != 0U; counter--)
1004f55a:	2302      	movs	r3, #2
1004f55c:	63fb      	str	r3, [r7, #60]	@ 0x3c
1004f55e:	e013      	b.n	1004f588 <UTIL_SEQ_Run+0x120>
    {
      TaskPrio[counter - 1U].priority &= ~(1U << CurrentTaskIdx);
1004f560:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f562:	1e5a      	subs	r2, r3, #1
1004f564:	4b3d      	ldr	r3, [pc, #244]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f566:	00d2      	lsls	r2, r2, #3
1004f568:	58d1      	ldr	r1, [r2, r3]
1004f56a:	4b3d      	ldr	r3, [pc, #244]	@ (1004f660 <UTIL_SEQ_Run+0x1f8>)
1004f56c:	681b      	ldr	r3, [r3, #0]
1004f56e:	2201      	movs	r2, #1
1004f570:	409a      	lsls	r2, r3
1004f572:	0013      	movs	r3, r2
1004f574:	43db      	mvns	r3, r3
1004f576:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
1004f578:	3a01      	subs	r2, #1
1004f57a:	4019      	ands	r1, r3
1004f57c:	4b37      	ldr	r3, [pc, #220]	@ (1004f65c <UTIL_SEQ_Run+0x1f4>)
1004f57e:	00d2      	lsls	r2, r2, #3
1004f580:	50d1      	str	r1, [r2, r3]
    for (counter = UTIL_SEQ_CONF_PRIO_NBR; counter != 0U; counter--)
1004f582:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f584:	3b01      	subs	r3, #1
1004f586:	63fb      	str	r3, [r7, #60]	@ 0x3c
1004f588:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
1004f58a:	2b00      	cmp	r3, #0
1004f58c:	d1e8      	bne.n	1004f560 <UTIL_SEQ_Run+0xf8>
1004f58e:	6a3b      	ldr	r3, [r7, #32]
1004f590:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004f592:	697b      	ldr	r3, [r7, #20]
1004f594:	f383 8810 	msr	PRIMASK, r3
}
1004f598:	46c0      	nop			@ (mov r8, r8)
    }
    UTIL_SEQ_EXIT_CRITICAL_SECTION( );

    /* Execute the task */
    TaskCb[CurrentTaskIdx]( );
1004f59a:	4b31      	ldr	r3, [pc, #196]	@ (1004f660 <UTIL_SEQ_Run+0x1f8>)
1004f59c:	681a      	ldr	r2, [r3, #0]
1004f59e:	4b31      	ldr	r3, [pc, #196]	@ (1004f664 <UTIL_SEQ_Run+0x1fc>)
1004f5a0:	0092      	lsls	r2, r2, #2
1004f5a2:	58d3      	ldr	r3, [r2, r3]
1004f5a4:	4798      	blx	r3

    local_taskset = TaskSet;
1004f5a6:	4b29      	ldr	r3, [pc, #164]	@ (1004f64c <UTIL_SEQ_Run+0x1e4>)
1004f5a8:	681b      	ldr	r3, [r3, #0]
1004f5aa:	63bb      	str	r3, [r7, #56]	@ 0x38
    local_evtset = EvtSet;
1004f5ac:	4b28      	ldr	r3, [pc, #160]	@ (1004f650 <UTIL_SEQ_Run+0x1e8>)
1004f5ae:	681b      	ldr	r3, [r3, #0]
1004f5b0:	637b      	str	r3, [r7, #52]	@ 0x34
    local_taskmask = TaskMask;
1004f5b2:	4b28      	ldr	r3, [pc, #160]	@ (1004f654 <UTIL_SEQ_Run+0x1ec>)
1004f5b4:	681b      	ldr	r3, [r3, #0]
1004f5b6:	633b      	str	r3, [r7, #48]	@ 0x30
    local_evtwaited = EvtWaited;
1004f5b8:	4b27      	ldr	r3, [pc, #156]	@ (1004f658 <UTIL_SEQ_Run+0x1f0>)
1004f5ba:	681b      	ldr	r3, [r3, #0]
1004f5bc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  while(((local_taskset & local_taskmask & SuperMask) != 0U) && ((local_evtset & local_evtwaited)==0U))
1004f5be:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1004f5c0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004f5c2:	401a      	ands	r2, r3
1004f5c4:	4b20      	ldr	r3, [pc, #128]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f5c6:	681b      	ldr	r3, [r3, #0]
1004f5c8:	4013      	ands	r3, r2
1004f5ca:	d004      	beq.n	1004f5d6 <UTIL_SEQ_Run+0x16e>
1004f5cc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
1004f5ce:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
1004f5d0:	4013      	ands	r3, r2
1004f5d2:	d100      	bne.n	1004f5d6 <UTIL_SEQ_Run+0x16e>
1004f5d4:	e762      	b.n	1004f49c <UTIL_SEQ_Run+0x34>
  }

  /* the set of CurrentTaskIdx to no task running allows to call WaitEvt in the Pre/Post ilde context */
  CurrentTaskIdx = UTIL_SEQ_NOTASKRUNNING;
1004f5d6:	4b22      	ldr	r3, [pc, #136]	@ (1004f660 <UTIL_SEQ_Run+0x1f8>)
1004f5d8:	2201      	movs	r2, #1
1004f5da:	4252      	negs	r2, r2
1004f5dc:	601a      	str	r2, [r3, #0]
  /* if a waited event is present, ignore the IDLE sequence */
  if ((local_evtset & EvtWaited)== 0U)
1004f5de:	4b1e      	ldr	r3, [pc, #120]	@ (1004f658 <UTIL_SEQ_Run+0x1f0>)
1004f5e0:	681b      	ldr	r3, [r3, #0]
1004f5e2:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
1004f5e4:	4013      	ands	r3, r2
1004f5e6:	d127      	bne.n	1004f638 <UTIL_SEQ_Run+0x1d0>
  {
    UTIL_SEQ_PreIdle( );
1004f5e8:	f7f2 fb70 	bl	10041ccc <UTIL_SEQ_PreIdle>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004f5ec:	f3ef 8310 	mrs	r3, PRIMASK
1004f5f0:	613b      	str	r3, [r7, #16]
  return(result);
1004f5f2:	693b      	ldr	r3, [r7, #16]

    UTIL_SEQ_ENTER_CRITICAL_SECTION_IDLE( );
1004f5f4:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("cpsid i" : : : "memory");
1004f5f6:	b672      	cpsid	i
}
1004f5f8:	46c0      	nop			@ (mov r8, r8)
    local_taskset = TaskSet;
1004f5fa:	4b14      	ldr	r3, [pc, #80]	@ (1004f64c <UTIL_SEQ_Run+0x1e4>)
1004f5fc:	681b      	ldr	r3, [r3, #0]
1004f5fe:	63bb      	str	r3, [r7, #56]	@ 0x38
    local_evtset = EvtSet;
1004f600:	4b13      	ldr	r3, [pc, #76]	@ (1004f650 <UTIL_SEQ_Run+0x1e8>)
1004f602:	681b      	ldr	r3, [r3, #0]
1004f604:	637b      	str	r3, [r7, #52]	@ 0x34
    local_taskmask = TaskMask;
1004f606:	4b13      	ldr	r3, [pc, #76]	@ (1004f654 <UTIL_SEQ_Run+0x1ec>)
1004f608:	681b      	ldr	r3, [r3, #0]
1004f60a:	633b      	str	r3, [r7, #48]	@ 0x30
    if ((local_taskset & local_taskmask & SuperMask) == 0U)
1004f60c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
1004f60e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
1004f610:	401a      	ands	r2, r3
1004f612:	4b0d      	ldr	r3, [pc, #52]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f614:	681b      	ldr	r3, [r3, #0]
1004f616:	4013      	ands	r3, r2
1004f618:	d106      	bne.n	1004f628 <UTIL_SEQ_Run+0x1c0>
    {
      if ((local_evtset & EvtWaited)== 0U)
1004f61a:	4b0f      	ldr	r3, [pc, #60]	@ (1004f658 <UTIL_SEQ_Run+0x1f0>)
1004f61c:	681b      	ldr	r3, [r3, #0]
1004f61e:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
1004f620:	4013      	ands	r3, r2
1004f622:	d101      	bne.n	1004f628 <UTIL_SEQ_Run+0x1c0>
      {
        UTIL_SEQ_Idle( );
1004f624:	f7f2 fb57 	bl	10041cd6 <UTIL_SEQ_Idle>
1004f628:	69fb      	ldr	r3, [r7, #28]
1004f62a:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004f62c:	68fb      	ldr	r3, [r7, #12]
1004f62e:	f383 8810 	msr	PRIMASK, r3
}
1004f632:	46c0      	nop			@ (mov r8, r8)
      }
    }
    UTIL_SEQ_EXIT_CRITICAL_SECTION_IDLE( );

    UTIL_SEQ_PostIdle( );
1004f634:	f000 f8fc 	bl	1004f830 <UTIL_SEQ_PostIdle>
  }

  /* restore the mask from UTIL_SEQ_Run() */
  SuperMask = super_mask_backup;
1004f638:	4b03      	ldr	r3, [pc, #12]	@ (1004f648 <UTIL_SEQ_Run+0x1e0>)
1004f63a:	6aba      	ldr	r2, [r7, #40]	@ 0x28
1004f63c:	601a      	str	r2, [r3, #0]

  return;
1004f63e:	46c0      	nop			@ (mov r8, r8)
}
1004f640:	46bd      	mov	sp, r7
1004f642:	b010      	add	sp, #64	@ 0x40
1004f644:	bd80      	pop	{r7, pc}
1004f646:	46c0      	nop			@ (mov r8, r8)
1004f648:	20000bd0 	.word	0x20000bd0
1004f64c:	20000798 	.word	0x20000798
1004f650:	2000079c 	.word	0x2000079c
1004f654:	20000bcc 	.word	0x20000bcc
1004f658:	200007a0 	.word	0x200007a0
1004f65c:	20000828 	.word	0x20000828
1004f660:	200007a4 	.word	0x200007a4
1004f664:	200007a8 	.word	0x200007a8

1004f668 <UTIL_SEQ_RegTask>:

void UTIL_SEQ_RegTask(UTIL_SEQ_bm_t TaskId_bm, uint32_t Flags, void (*Task)( void ))
{
1004f668:	b580      	push	{r7, lr}
1004f66a:	b088      	sub	sp, #32
1004f66c:	af00      	add	r7, sp, #0
1004f66e:	60f8      	str	r0, [r7, #12]
1004f670:	60b9      	str	r1, [r7, #8]
1004f672:	607a      	str	r2, [r7, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004f674:	f3ef 8310 	mrs	r3, PRIMASK
1004f678:	617b      	str	r3, [r7, #20]
  return(result);
1004f67a:	697b      	ldr	r3, [r7, #20]
  (void)Flags;
  UTIL_SEQ_ENTER_CRITICAL_SECTION();
1004f67c:	61fb      	str	r3, [r7, #28]
  __ASM volatile ("cpsid i" : : : "memory");
1004f67e:	b672      	cpsid	i
}
1004f680:	46c0      	nop			@ (mov r8, r8)

  TaskCb[SEQ_BitPosition(TaskId_bm)] = Task;
1004f682:	68fb      	ldr	r3, [r7, #12]
1004f684:	0018      	movs	r0, r3
1004f686:	f000 f8d9 	bl	1004f83c <SEQ_BitPosition>
1004f68a:	0003      	movs	r3, r0
1004f68c:	001a      	movs	r2, r3
1004f68e:	4b07      	ldr	r3, [pc, #28]	@ (1004f6ac <UTIL_SEQ_RegTask+0x44>)
1004f690:	0092      	lsls	r2, r2, #2
1004f692:	6879      	ldr	r1, [r7, #4]
1004f694:	50d1      	str	r1, [r2, r3]
1004f696:	69fb      	ldr	r3, [r7, #28]
1004f698:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004f69a:	69bb      	ldr	r3, [r7, #24]
1004f69c:	f383 8810 	msr	PRIMASK, r3
}
1004f6a0:	46c0      	nop			@ (mov r8, r8)

  UTIL_SEQ_EXIT_CRITICAL_SECTION();

  return;
1004f6a2:	46c0      	nop			@ (mov r8, r8)
}
1004f6a4:	46bd      	mov	sp, r7
1004f6a6:	b008      	add	sp, #32
1004f6a8:	bd80      	pop	{r7, pc}
1004f6aa:	46c0      	nop			@ (mov r8, r8)
1004f6ac:	200007a8 	.word	0x200007a8

1004f6b0 <UTIL_SEQ_SetTask>:
  UTIL_SEQ_EXIT_CRITICAL_SECTION();
  return _status;
}

void UTIL_SEQ_SetTask( UTIL_SEQ_bm_t TaskId_bm , uint32_t Task_Prio )
{
1004f6b0:	b580      	push	{r7, lr}
1004f6b2:	b086      	sub	sp, #24
1004f6b4:	af00      	add	r7, sp, #0
1004f6b6:	6078      	str	r0, [r7, #4]
1004f6b8:	6039      	str	r1, [r7, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004f6ba:	f3ef 8310 	mrs	r3, PRIMASK
1004f6be:	60fb      	str	r3, [r7, #12]
  return(result);
1004f6c0:	68fb      	ldr	r3, [r7, #12]
  UTIL_SEQ_ENTER_CRITICAL_SECTION( );
1004f6c2:	617b      	str	r3, [r7, #20]
  __ASM volatile ("cpsid i" : : : "memory");
1004f6c4:	b672      	cpsid	i
}
1004f6c6:	46c0      	nop			@ (mov r8, r8)

  TaskSet |= TaskId_bm;
1004f6c8:	4b0d      	ldr	r3, [pc, #52]	@ (1004f700 <UTIL_SEQ_SetTask+0x50>)
1004f6ca:	681a      	ldr	r2, [r3, #0]
1004f6cc:	687b      	ldr	r3, [r7, #4]
1004f6ce:	431a      	orrs	r2, r3
1004f6d0:	4b0b      	ldr	r3, [pc, #44]	@ (1004f700 <UTIL_SEQ_SetTask+0x50>)
1004f6d2:	601a      	str	r2, [r3, #0]
  TaskPrio[Task_Prio].priority |= TaskId_bm;
1004f6d4:	4b0b      	ldr	r3, [pc, #44]	@ (1004f704 <UTIL_SEQ_SetTask+0x54>)
1004f6d6:	683a      	ldr	r2, [r7, #0]
1004f6d8:	00d2      	lsls	r2, r2, #3
1004f6da:	58d2      	ldr	r2, [r2, r3]
1004f6dc:	687b      	ldr	r3, [r7, #4]
1004f6de:	431a      	orrs	r2, r3
1004f6e0:	0011      	movs	r1, r2
1004f6e2:	4b08      	ldr	r3, [pc, #32]	@ (1004f704 <UTIL_SEQ_SetTask+0x54>)
1004f6e4:	683a      	ldr	r2, [r7, #0]
1004f6e6:	00d2      	lsls	r2, r2, #3
1004f6e8:	50d1      	str	r1, [r2, r3]
1004f6ea:	697b      	ldr	r3, [r7, #20]
1004f6ec:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004f6ee:	693b      	ldr	r3, [r7, #16]
1004f6f0:	f383 8810 	msr	PRIMASK, r3
}
1004f6f4:	46c0      	nop			@ (mov r8, r8)

  UTIL_SEQ_EXIT_CRITICAL_SECTION( );

  return;
1004f6f6:	46c0      	nop			@ (mov r8, r8)
}
1004f6f8:	46bd      	mov	sp, r7
1004f6fa:	b006      	add	sp, #24
1004f6fc:	bd80      	pop	{r7, pc}
1004f6fe:	46c0      	nop			@ (mov r8, r8)
1004f700:	20000798 	.word	0x20000798
1004f704:	20000828 	.word	0x20000828

1004f708 <UTIL_SEQ_SetEvt>:

  return;
}

void UTIL_SEQ_SetEvt( UTIL_SEQ_bm_t EvtId_bm )
{
1004f708:	b580      	push	{r7, lr}
1004f70a:	b086      	sub	sp, #24
1004f70c:	af00      	add	r7, sp, #0
1004f70e:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004f710:	f3ef 8310 	mrs	r3, PRIMASK
1004f714:	60fb      	str	r3, [r7, #12]
  return(result);
1004f716:	68fb      	ldr	r3, [r7, #12]
  UTIL_SEQ_ENTER_CRITICAL_SECTION( );
1004f718:	617b      	str	r3, [r7, #20]
  __ASM volatile ("cpsid i" : : : "memory");
1004f71a:	b672      	cpsid	i
}
1004f71c:	46c0      	nop			@ (mov r8, r8)

  EvtSet |= EvtId_bm;
1004f71e:	4b08      	ldr	r3, [pc, #32]	@ (1004f740 <UTIL_SEQ_SetEvt+0x38>)
1004f720:	681a      	ldr	r2, [r3, #0]
1004f722:	687b      	ldr	r3, [r7, #4]
1004f724:	431a      	orrs	r2, r3
1004f726:	4b06      	ldr	r3, [pc, #24]	@ (1004f740 <UTIL_SEQ_SetEvt+0x38>)
1004f728:	601a      	str	r2, [r3, #0]
1004f72a:	697b      	ldr	r3, [r7, #20]
1004f72c:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004f72e:	693b      	ldr	r3, [r7, #16]
1004f730:	f383 8810 	msr	PRIMASK, r3
}
1004f734:	46c0      	nop			@ (mov r8, r8)

  UTIL_SEQ_EXIT_CRITICAL_SECTION( );

  return;
1004f736:	46c0      	nop			@ (mov r8, r8)
}
1004f738:	46bd      	mov	sp, r7
1004f73a:	b006      	add	sp, #24
1004f73c:	bd80      	pop	{r7, pc}
1004f73e:	46c0      	nop			@ (mov r8, r8)
1004f740:	2000079c 	.word	0x2000079c

1004f744 <UTIL_SEQ_ClrEvt>:

void UTIL_SEQ_ClrEvt( UTIL_SEQ_bm_t EvtId_bm )
{
1004f744:	b580      	push	{r7, lr}
1004f746:	b086      	sub	sp, #24
1004f748:	af00      	add	r7, sp, #0
1004f74a:	6078      	str	r0, [r7, #4]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004f74c:	f3ef 8310 	mrs	r3, PRIMASK
1004f750:	60fb      	str	r3, [r7, #12]
  return(result);
1004f752:	68fb      	ldr	r3, [r7, #12]
  UTIL_SEQ_ENTER_CRITICAL_SECTION( );
1004f754:	617b      	str	r3, [r7, #20]
  __ASM volatile ("cpsid i" : : : "memory");
1004f756:	b672      	cpsid	i
}
1004f758:	46c0      	nop			@ (mov r8, r8)

  EvtSet &= (~EvtId_bm);
1004f75a:	687b      	ldr	r3, [r7, #4]
1004f75c:	43da      	mvns	r2, r3
1004f75e:	4b07      	ldr	r3, [pc, #28]	@ (1004f77c <UTIL_SEQ_ClrEvt+0x38>)
1004f760:	681b      	ldr	r3, [r3, #0]
1004f762:	401a      	ands	r2, r3
1004f764:	4b05      	ldr	r3, [pc, #20]	@ (1004f77c <UTIL_SEQ_ClrEvt+0x38>)
1004f766:	601a      	str	r2, [r3, #0]
1004f768:	697b      	ldr	r3, [r7, #20]
1004f76a:	613b      	str	r3, [r7, #16]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004f76c:	693b      	ldr	r3, [r7, #16]
1004f76e:	f383 8810 	msr	PRIMASK, r3
}
1004f772:	46c0      	nop			@ (mov r8, r8)

  UTIL_SEQ_EXIT_CRITICAL_SECTION( );

  return;
1004f774:	46c0      	nop			@ (mov r8, r8)
}
1004f776:	46bd      	mov	sp, r7
1004f778:	b006      	add	sp, #24
1004f77a:	bd80      	pop	{r7, pc}
1004f77c:	2000079c 	.word	0x2000079c

1004f780 <UTIL_SEQ_WaitEvt>:

void UTIL_SEQ_WaitEvt(UTIL_SEQ_bm_t EvtId_bm)
{
1004f780:	b580      	push	{r7, lr}
1004f782:	b088      	sub	sp, #32
1004f784:	af00      	add	r7, sp, #0
1004f786:	6078      	str	r0, [r7, #4]
  UTIL_SEQ_bm_t wait_task_idx;
  /*
   * store in local the current_task_id_bm as the global variable CurrentTaskIdx
   * may be overwritten in case there are nested call of UTIL_SEQ_Run()
   */
  current_task_idx = CurrentTaskIdx;
1004f788:	4b1f      	ldr	r3, [pc, #124]	@ (1004f808 <UTIL_SEQ_WaitEvt+0x88>)
1004f78a:	681b      	ldr	r3, [r3, #0]
1004f78c:	61bb      	str	r3, [r7, #24]
  if(UTIL_SEQ_NOTASKRUNNING == CurrentTaskIdx)
1004f78e:	4b1e      	ldr	r3, [pc, #120]	@ (1004f808 <UTIL_SEQ_WaitEvt+0x88>)
1004f790:	681b      	ldr	r3, [r3, #0]
1004f792:	3301      	adds	r3, #1
1004f794:	d102      	bne.n	1004f79c <UTIL_SEQ_WaitEvt+0x1c>
  {
    wait_task_idx = 0u;
1004f796:	2300      	movs	r3, #0
1004f798:	61fb      	str	r3, [r7, #28]
1004f79a:	e005      	b.n	1004f7a8 <UTIL_SEQ_WaitEvt+0x28>
  }
  else
  {
    wait_task_idx = (uint32_t)1u << CurrentTaskIdx;
1004f79c:	4b1a      	ldr	r3, [pc, #104]	@ (1004f808 <UTIL_SEQ_WaitEvt+0x88>)
1004f79e:	681b      	ldr	r3, [r3, #0]
1004f7a0:	2201      	movs	r2, #1
1004f7a2:	409a      	lsls	r2, r3
1004f7a4:	0013      	movs	r3, r2
1004f7a6:	61fb      	str	r3, [r7, #28]
  }

  /* backup the event id that was currently waited */
  event_waited_id_backup = EvtWaited;
1004f7a8:	4b18      	ldr	r3, [pc, #96]	@ (1004f80c <UTIL_SEQ_WaitEvt+0x8c>)
1004f7aa:	681b      	ldr	r3, [r3, #0]
1004f7ac:	617b      	str	r3, [r7, #20]
  EvtWaited = EvtId_bm;
1004f7ae:	4b17      	ldr	r3, [pc, #92]	@ (1004f80c <UTIL_SEQ_WaitEvt+0x8c>)
1004f7b0:	687a      	ldr	r2, [r7, #4]
1004f7b2:	601a      	str	r2, [r3, #0]
   * The system is waiting only for the last waited event.
   * When it will go out, it will wait again from the previous one.
   * It case it occurs while waiting for the second one, the while loop will exit immediately
   */

  while ((EvtSet & EvtId_bm) == 0U)
1004f7b4:	e005      	b.n	1004f7c2 <UTIL_SEQ_WaitEvt+0x42>
  {
    UTIL_SEQ_EvtIdle(wait_task_idx, EvtId_bm);
1004f7b6:	687a      	ldr	r2, [r7, #4]
1004f7b8:	69fb      	ldr	r3, [r7, #28]
1004f7ba:	0011      	movs	r1, r2
1004f7bc:	0018      	movs	r0, r3
1004f7be:	f000 f829 	bl	1004f814 <UTIL_SEQ_EvtIdle>
  while ((EvtSet & EvtId_bm) == 0U)
1004f7c2:	4b13      	ldr	r3, [pc, #76]	@ (1004f810 <UTIL_SEQ_WaitEvt+0x90>)
1004f7c4:	681b      	ldr	r3, [r3, #0]
1004f7c6:	687a      	ldr	r2, [r7, #4]
1004f7c8:	4013      	ands	r3, r2
1004f7ca:	d0f4      	beq.n	1004f7b6 <UTIL_SEQ_WaitEvt+0x36>
  /*
   * Restore the CurrentTaskIdx that may have been modified by call of UTIL_SEQ_Run() from UTIL_SEQ_EvtIdle()
   * This is required so that a second call of UTIL_SEQ_WaitEvt() in the same process pass the correct current_task_id_bm
   * in the call of UTIL_SEQ_EvtIdle()
   */
  CurrentTaskIdx = current_task_idx;
1004f7cc:	4b0e      	ldr	r3, [pc, #56]	@ (1004f808 <UTIL_SEQ_WaitEvt+0x88>)
1004f7ce:	69ba      	ldr	r2, [r7, #24]
1004f7d0:	601a      	str	r2, [r3, #0]
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
1004f7d2:	f3ef 8310 	mrs	r3, PRIMASK
1004f7d6:	60bb      	str	r3, [r7, #8]
  return(result);
1004f7d8:	68bb      	ldr	r3, [r7, #8]

  UTIL_SEQ_ENTER_CRITICAL_SECTION( );
1004f7da:	613b      	str	r3, [r7, #16]
  __ASM volatile ("cpsid i" : : : "memory");
1004f7dc:	b672      	cpsid	i
}
1004f7de:	46c0      	nop			@ (mov r8, r8)

  EvtSet &= (~EvtId_bm);
1004f7e0:	687b      	ldr	r3, [r7, #4]
1004f7e2:	43da      	mvns	r2, r3
1004f7e4:	4b0a      	ldr	r3, [pc, #40]	@ (1004f810 <UTIL_SEQ_WaitEvt+0x90>)
1004f7e6:	681b      	ldr	r3, [r3, #0]
1004f7e8:	401a      	ands	r2, r3
1004f7ea:	4b09      	ldr	r3, [pc, #36]	@ (1004f810 <UTIL_SEQ_WaitEvt+0x90>)
1004f7ec:	601a      	str	r2, [r3, #0]
1004f7ee:	693b      	ldr	r3, [r7, #16]
1004f7f0:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
1004f7f2:	68fb      	ldr	r3, [r7, #12]
1004f7f4:	f383 8810 	msr	PRIMASK, r3
}
1004f7f8:	46c0      	nop			@ (mov r8, r8)

  UTIL_SEQ_EXIT_CRITICAL_SECTION( );

  EvtWaited = event_waited_id_backup;
1004f7fa:	4b04      	ldr	r3, [pc, #16]	@ (1004f80c <UTIL_SEQ_WaitEvt+0x8c>)
1004f7fc:	697a      	ldr	r2, [r7, #20]
1004f7fe:	601a      	str	r2, [r3, #0]
  return;
1004f800:	46c0      	nop			@ (mov r8, r8)
}
1004f802:	46bd      	mov	sp, r7
1004f804:	b008      	add	sp, #32
1004f806:	bd80      	pop	{r7, pc}
1004f808:	200007a4 	.word	0x200007a4
1004f80c:	200007a0 	.word	0x200007a0
1004f810:	2000079c 	.word	0x2000079c

1004f814 <UTIL_SEQ_EvtIdle>:
  UTIL_SEQ_bm_t local_evtwaited = EvtWaited;
  return (EvtSet & local_evtwaited);
}

__WEAK void UTIL_SEQ_EvtIdle( UTIL_SEQ_bm_t TaskId_bm, UTIL_SEQ_bm_t EvtWaited_bm )
{
1004f814:	b580      	push	{r7, lr}
1004f816:	b082      	sub	sp, #8
1004f818:	af00      	add	r7, sp, #0
1004f81a:	6078      	str	r0, [r7, #4]
1004f81c:	6039      	str	r1, [r7, #0]
  (void)EvtWaited_bm;
  UTIL_SEQ_Run(~TaskId_bm);
1004f81e:	687b      	ldr	r3, [r7, #4]
1004f820:	43db      	mvns	r3, r3
1004f822:	0018      	movs	r0, r3
1004f824:	f7ff fe20 	bl	1004f468 <UTIL_SEQ_Run>
  return;
1004f828:	46c0      	nop			@ (mov r8, r8)
}
1004f82a:	46bd      	mov	sp, r7
1004f82c:	b002      	add	sp, #8
1004f82e:	bd80      	pop	{r7, pc}

1004f830 <UTIL_SEQ_PostIdle>:
   */
  return;
}

__WEAK void UTIL_SEQ_PostIdle( void )
{
1004f830:	b580      	push	{r7, lr}
1004f832:	af00      	add	r7, sp, #0
  /*
   * Unless specified by the application, there is nothing to be done
   */
  return;
1004f834:	46c0      	nop			@ (mov r8, r8)
}
1004f836:	46bd      	mov	sp, r7
1004f838:	bd80      	pop	{r7, pc}
	...

1004f83c <SEQ_BitPosition>:
 * @brief return the position of the first bit set to 1
 * @param Value 32 bit value
 * @retval bit position
 */
uint8_t SEQ_BitPosition(uint32_t Value)
{
1004f83c:	b580      	push	{r7, lr}
1004f83e:	b084      	sub	sp, #16
1004f840:	af00      	add	r7, sp, #0
1004f842:	6078      	str	r0, [r7, #4]
uint8_t n = 0U;
1004f844:	210f      	movs	r1, #15
1004f846:	187b      	adds	r3, r7, r1
1004f848:	2200      	movs	r2, #0
1004f84a:	701a      	strb	r2, [r3, #0]
uint32_t lvalue = Value;
1004f84c:	687b      	ldr	r3, [r7, #4]
1004f84e:	60bb      	str	r3, [r7, #8]

  if ((lvalue & 0xFFFF0000U) == 0U)  { n  = 16U; lvalue <<= 16U;  }
1004f850:	68ba      	ldr	r2, [r7, #8]
1004f852:	2380      	movs	r3, #128	@ 0x80
1004f854:	025b      	lsls	r3, r3, #9
1004f856:	429a      	cmp	r2, r3
1004f858:	d205      	bcs.n	1004f866 <SEQ_BitPosition+0x2a>
1004f85a:	187b      	adds	r3, r7, r1
1004f85c:	2210      	movs	r2, #16
1004f85e:	701a      	strb	r2, [r3, #0]
1004f860:	68bb      	ldr	r3, [r7, #8]
1004f862:	041b      	lsls	r3, r3, #16
1004f864:	60bb      	str	r3, [r7, #8]
  if ((lvalue & 0xFF000000U) == 0U)  { n +=  8U; lvalue <<=  8U;  }
1004f866:	68ba      	ldr	r2, [r7, #8]
1004f868:	2380      	movs	r3, #128	@ 0x80
1004f86a:	045b      	lsls	r3, r3, #17
1004f86c:	429a      	cmp	r2, r3
1004f86e:	d208      	bcs.n	1004f882 <SEQ_BitPosition+0x46>
1004f870:	220f      	movs	r2, #15
1004f872:	18bb      	adds	r3, r7, r2
1004f874:	18ba      	adds	r2, r7, r2
1004f876:	7812      	ldrb	r2, [r2, #0]
1004f878:	3208      	adds	r2, #8
1004f87a:	701a      	strb	r2, [r3, #0]
1004f87c:	68bb      	ldr	r3, [r7, #8]
1004f87e:	021b      	lsls	r3, r3, #8
1004f880:	60bb      	str	r3, [r7, #8]
  if ((lvalue & 0xF0000000U) == 0U)  { n +=  4U; lvalue <<=  4U;  }
1004f882:	68ba      	ldr	r2, [r7, #8]
1004f884:	2380      	movs	r3, #128	@ 0x80
1004f886:	055b      	lsls	r3, r3, #21
1004f888:	429a      	cmp	r2, r3
1004f88a:	d208      	bcs.n	1004f89e <SEQ_BitPosition+0x62>
1004f88c:	220f      	movs	r2, #15
1004f88e:	18bb      	adds	r3, r7, r2
1004f890:	18ba      	adds	r2, r7, r2
1004f892:	7812      	ldrb	r2, [r2, #0]
1004f894:	3204      	adds	r2, #4
1004f896:	701a      	strb	r2, [r3, #0]
1004f898:	68bb      	ldr	r3, [r7, #8]
1004f89a:	011b      	lsls	r3, r3, #4
1004f89c:	60bb      	str	r3, [r7, #8]

  n += SEQ_clz_table_4bit[lvalue >> (32-4)];
1004f89e:	68bb      	ldr	r3, [r7, #8]
1004f8a0:	0f1b      	lsrs	r3, r3, #28
1004f8a2:	4a08      	ldr	r2, [pc, #32]	@ (1004f8c4 <SEQ_BitPosition+0x88>)
1004f8a4:	5cd1      	ldrb	r1, [r2, r3]
1004f8a6:	200f      	movs	r0, #15
1004f8a8:	183b      	adds	r3, r7, r0
1004f8aa:	183a      	adds	r2, r7, r0
1004f8ac:	7812      	ldrb	r2, [r2, #0]
1004f8ae:	188a      	adds	r2, r1, r2
1004f8b0:	701a      	strb	r2, [r3, #0]

  return (uint8_t)(31U-n);
1004f8b2:	183b      	adds	r3, r7, r0
1004f8b4:	781b      	ldrb	r3, [r3, #0]
1004f8b6:	221f      	movs	r2, #31
1004f8b8:	1ad3      	subs	r3, r2, r3
1004f8ba:	b2db      	uxtb	r3, r3
}
1004f8bc:	0018      	movs	r0, r3
1004f8be:	46bd      	mov	sp, r7
1004f8c0:	b004      	add	sp, #16
1004f8c2:	bd80      	pop	{r7, pc}
1004f8c4:	1006e884 	.word	0x1006e884

1004f8c8 <aci_gap_init>:
1004f8c8:	b580      	push	{r7, lr}
1004f8ca:	2802      	cmp	r0, #2
1004f8cc:	d901      	bls.n	1004f8d2 <aci_gap_init+0xa>
1004f8ce:	2012      	movs	r0, #18
1004f8d0:	bd80      	pop	{r7, pc}
1004f8d2:	f002 f873 	bl	100519bc <GAP_Init>
1004f8d6:	bd80      	pop	{r7, pc}

1004f8d8 <aci_gap_set_le_event_mask>:
1004f8d8:	b51c      	push	{r2, r3, r4, lr}
1004f8da:	4604      	mov	r4, r0
1004f8dc:	4668      	mov	r0, sp
1004f8de:	f002 f831 	bl	10051944 <GAP_get_default_le_event_mask>
1004f8e2:	2000      	movs	r0, #0
1004f8e4:	2808      	cmp	r0, #8
1004f8e6:	d006      	beq.n	1004f8f6 <aci_gap_set_le_event_mask+0x1e>
1004f8e8:	4669      	mov	r1, sp
1004f8ea:	5c09      	ldrb	r1, [r1, r0]
1004f8ec:	5c22      	ldrb	r2, [r4, r0]
1004f8ee:	430a      	orrs	r2, r1
1004f8f0:	5422      	strb	r2, [r4, r0]
1004f8f2:	1c40      	adds	r0, r0, #1
1004f8f4:	e7f6      	b.n	1004f8e4 <aci_gap_set_le_event_mask+0xc>
1004f8f6:	4620      	mov	r0, r4
1004f8f8:	f005 fb64 	bl	10054fc4 <hci_le_set_event_mask>
1004f8fc:	bd1c      	pop	{r2, r3, r4, pc}

1004f8fe <aci_gap_set_scan_configuration_api>:
1004f8fe:	b5bf      	push	{r0, r1, r2, r3, r4, r5, r7, lr}
1004f900:	ac02      	add	r4, sp, #8
1004f902:	7123      	strb	r3, [r4, #4]
1004f904:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1004f906:	8063      	strh	r3, [r4, #2]
1004f908:	9b08      	ldr	r3, [sp, #32]
1004f90a:	8023      	strh	r3, [r4, #0]
1004f90c:	466b      	mov	r3, sp
1004f90e:	2500      	movs	r5, #0
1004f910:	709d      	strb	r5, [r3, #2]
1004f912:	7059      	strb	r1, [r3, #1]
1004f914:	7018      	strb	r0, [r3, #0]
1004f916:	4618      	mov	r0, r3
1004f918:	4621      	mov	r1, r4
1004f91a:	f001 fba3 	bl	10051064 <GAP_set_scan_configuration>
1004f91e:	b004      	add	sp, #16
1004f920:	bdb0      	pop	{r4, r5, r7, pc}

1004f922 <aci_gap_set_connection_configuration_api>:
1004f922:	b5bf      	push	{r0, r1, r2, r3, r4, r5, r7, lr}
1004f924:	4604      	mov	r4, r0
1004f926:	4668      	mov	r0, sp
1004f928:	2501      	movs	r5, #1
1004f92a:	7305      	strb	r5, [r0, #12]
1004f92c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
1004f92e:	8145      	strh	r5, [r0, #10]
1004f930:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1004f932:	8105      	strh	r5, [r0, #8]
1004f934:	9d08      	ldr	r5, [sp, #32]
1004f936:	80c5      	strh	r5, [r0, #6]
1004f938:	8083      	strh	r3, [r0, #4]
1004f93a:	8042      	strh	r2, [r0, #2]
1004f93c:	8001      	strh	r1, [r0, #0]
1004f93e:	4621      	mov	r1, r4
1004f940:	f001 fbba 	bl	100510b8 <GAP_set_connect_configuration>
1004f944:	b004      	add	sp, #16
1004f946:	bdb0      	pop	{r4, r5, r7, pc}

1004f948 <aci_gap_start_procedure_api>:
1004f948:	b5e0      	push	{r5, r6, r7, lr}
1004f94a:	466a      	mov	r2, sp
1004f94c:	2300      	movs	r3, #0
1004f94e:	8093      	strh	r3, [r2, #4]
1004f950:	9300      	str	r3, [sp, #0]
1004f952:	2805      	cmp	r0, #5
1004f954:	d807      	bhi.n	1004f966 <aci_gap_start_procedure_api+0x1e>
1004f956:	b240      	sxtb	r0, r0
1004f958:	a204      	add	r2, pc, #16	@ (adr r2, 1004f96c <aci_gap_start_procedure_api+0x24>)
1004f95a:	5c10      	ldrb	r0, [r2, r0]
1004f95c:	2200      	movs	r2, #0
1004f95e:	466b      	mov	r3, sp
1004f960:	f001 fc72 	bl	10051248 <GAP_start_procedure>
1004f964:	bd8c      	pop	{r2, r3, r7, pc}
1004f966:	2012      	movs	r0, #18
1004f968:	bd8c      	pop	{r2, r3, r7, pc}
1004f96a:	46c0      	nop			@ (mov r8, r8)
1004f96c:	08040201 	.word	0x08040201
1004f970:	00002010 	.word	0x00002010

1004f974 <aci_gap_terminate_proc_api>:
1004f974:	b580      	push	{r7, lr}
1004f976:	2807      	cmp	r0, #7
1004f978:	d805      	bhi.n	1004f986 <aci_gap_terminate_proc_api+0x12>
1004f97a:	b240      	sxtb	r0, r0
1004f97c:	a103      	add	r1, pc, #12	@ (adr r1, 1004f98c <aci_gap_terminate_proc_api+0x18>)
1004f97e:	5c08      	ldrb	r0, [r1, r0]
1004f980:	f7fe fc5f 	bl	1004e242 <GAP_terminate_gap_procedure_ucfg>
1004f984:	bd80      	pop	{r7, pc}
1004f986:	2012      	movs	r0, #18
1004f988:	bd80      	pop	{r7, pc}
1004f98a:	46c0      	nop			@ (mov r8, r8)
1004f98c:	08040201 	.word	0x08040201
1004f990:	80402010 	.word	0x80402010

1004f994 <aci_gap_add_devices_to_filter_accept_and_resolving_list>:
1004f994:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1004f996:	461c      	mov	r4, r3
1004f998:	4615      	mov	r5, r2
1004f99a:	460e      	mov	r6, r1
1004f99c:	a901      	add	r1, sp, #4
1004f99e:	7008      	strb	r0, [r1, #0]
1004f9a0:	4608      	mov	r0, r1
1004f9a2:	4631      	mov	r1, r6
1004f9a4:	461a      	mov	r2, r3
1004f9a6:	f000 f80b 	bl	1004f9c0 <_aci_gap_lists_check>
1004f9aa:	2800      	cmp	r0, #0
1004f9ac:	d000      	beq.n	1004f9b0 <aci_gap_add_devices_to_filter_accept_and_resolving_list+0x1c>
1004f9ae:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1004f9b0:	a801      	add	r0, sp, #4
1004f9b2:	7800      	ldrb	r0, [r0, #0]
1004f9b4:	4631      	mov	r1, r6
1004f9b6:	462a      	mov	r2, r5
1004f9b8:	4623      	mov	r3, r4
1004f9ba:	f002 fa1f 	bl	10051dfc <GAP_add_multiple_devices_to_filter_accept_and_resolving_list>
1004f9be:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

1004f9c0 <_aci_gap_lists_check>:
1004f9c0:	b5b0      	push	{r4, r5, r7, lr}
1004f9c2:	4604      	mov	r4, r0
1004f9c4:	7800      	ldrb	r0, [r0, #0]
1004f9c6:	2800      	cmp	r0, #0
1004f9c8:	d001      	beq.n	1004f9ce <_aci_gap_lists_check+0xe>
1004f9ca:	2804      	cmp	r0, #4
1004f9cc:	d301      	bcc.n	1004f9d2 <_aci_gap_lists_check+0x12>
1004f9ce:	2012      	movs	r0, #18
1004f9d0:	e000      	b.n	1004f9d4 <_aci_gap_lists_check+0x14>
1004f9d2:	2000      	movs	r0, #0
1004f9d4:	2512      	movs	r5, #18
1004f9d6:	2a00      	cmp	r2, #0
1004f9d8:	462a      	mov	r2, r5
1004f9da:	d000      	beq.n	1004f9de <_aci_gap_lists_check+0x1e>
1004f9dc:	4602      	mov	r2, r0
1004f9de:	2901      	cmp	r1, #1
1004f9e0:	d800      	bhi.n	1004f9e4 <_aci_gap_lists_check+0x24>
1004f9e2:	4615      	mov	r5, r2
1004f9e4:	2d00      	cmp	r5, #0
1004f9e6:	d107      	bne.n	1004f9f8 <_aci_gap_lists_check+0x38>
1004f9e8:	f009 fbfd 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
1004f9ec:	2800      	cmp	r0, #0
1004f9ee:	d103      	bne.n	1004f9f8 <_aci_gap_lists_check+0x38>
1004f9f0:	7820      	ldrb	r0, [r4, #0]
1004f9f2:	21fd      	movs	r1, #253	@ 0xfd
1004f9f4:	4001      	ands	r1, r0
1004f9f6:	7021      	strb	r1, [r4, #0]
1004f9f8:	4628      	mov	r0, r5
1004f9fa:	bdb0      	pop	{r4, r5, r7, pc}

1004f9fc <aci_gap_configure_filter_accept_and_resolving_list>:
1004f9fc:	b5e0      	push	{r5, r6, r7, lr}
1004f9fe:	a901      	add	r1, sp, #4
1004fa00:	7008      	strb	r0, [r1, #0]
1004fa02:	2201      	movs	r2, #1
1004fa04:	4608      	mov	r0, r1
1004fa06:	4611      	mov	r1, r2
1004fa08:	f7ff ffda 	bl	1004f9c0 <_aci_gap_lists_check>
1004fa0c:	2800      	cmp	r0, #0
1004fa0e:	d000      	beq.n	1004fa12 <aci_gap_configure_filter_accept_and_resolving_list+0x16>
1004fa10:	bd8c      	pop	{r2, r3, r7, pc}
1004fa12:	a801      	add	r0, sp, #4
1004fa14:	7800      	ldrb	r0, [r0, #0]
1004fa16:	f002 f9d5 	bl	10051dc4 <GAP_configure_filter_accept_and_resolving_list>
1004fa1a:	bd8c      	pop	{r2, r3, r7, pc}

1004fa1c <aci_gap_set_advertising_configuration>:
1004fa1c:	b5f0      	push	{r4, r5, r6, r7, lr}
1004fa1e:	b093      	sub	sp, #76	@ 0x4c
1004fa20:	461f      	mov	r7, r3
1004fa22:	4615      	mov	r5, r2
1004fa24:	460e      	mov	r6, r1
1004fa26:	9012      	str	r0, [sp, #72]	@ 0x48
1004fa28:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
1004fa2a:	4608      	mov	r0, r1
1004fa2c:	4611      	mov	r1, r2
1004fa2e:	4622      	mov	r2, r4
1004fa30:	f002 fada 	bl	10051fe8 <GAP_check_discoverability_mode>
1004fa34:	2800      	cmp	r0, #0
1004fa36:	d124      	bne.n	1004fa82 <aci_gap_set_advertising_configuration+0x66>
1004fa38:	9822      	ldr	r0, [sp, #136]	@ 0x88
1004fa3a:	900d      	str	r0, [sp, #52]	@ 0x34
1004fa3c:	ab1f      	add	r3, sp, #124	@ 0x7c
1004fa3e:	cb0d      	ldmia	r3, {r0, r2, r3}
1004fa40:	9011      	str	r0, [sp, #68]	@ 0x44
1004fa42:	981e      	ldr	r0, [sp, #120]	@ 0x78
1004fa44:	900f      	str	r0, [sp, #60]	@ 0x3c
1004fa46:	981d      	ldr	r0, [sp, #116]	@ 0x74
1004fa48:	900e      	str	r0, [sp, #56]	@ 0x38
1004fa4a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
1004fa4c:	900c      	str	r0, [sp, #48]	@ 0x30
1004fa4e:	991a      	ldr	r1, [sp, #104]	@ 0x68
1004fa50:	9819      	ldr	r0, [sp, #100]	@ 0x64
1004fa52:	9710      	str	r7, [sp, #64]	@ 0x40
1004fa54:	9f18      	ldr	r7, [sp, #96]	@ 0x60
1004fa56:	9208      	str	r2, [sp, #32]
1004fa58:	9309      	str	r3, [sp, #36]	@ 0x24
1004fa5a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1004fa5c:	920a      	str	r2, [sp, #40]	@ 0x28
1004fa5e:	9700      	str	r7, [sp, #0]
1004fa60:	9001      	str	r0, [sp, #4]
1004fa62:	9102      	str	r1, [sp, #8]
1004fa64:	980c      	ldr	r0, [sp, #48]	@ 0x30
1004fa66:	9003      	str	r0, [sp, #12]
1004fa68:	9404      	str	r4, [sp, #16]
1004fa6a:	980e      	ldr	r0, [sp, #56]	@ 0x38
1004fa6c:	9005      	str	r0, [sp, #20]
1004fa6e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
1004fa70:	9006      	str	r0, [sp, #24]
1004fa72:	9811      	ldr	r0, [sp, #68]	@ 0x44
1004fa74:	9007      	str	r0, [sp, #28]
1004fa76:	9812      	ldr	r0, [sp, #72]	@ 0x48
1004fa78:	4631      	mov	r1, r6
1004fa7a:	462a      	mov	r2, r5
1004fa7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1004fa7e:	f7fe fb0f 	bl	1004e0a0 <GAP_set_advertising_configuration_ucfg>
1004fa82:	b013      	add	sp, #76	@ 0x4c
1004fa84:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004fa86 <aci_gap_set_io_capability_api>:
1004fa86:	b580      	push	{r7, lr}
1004fa88:	2804      	cmp	r0, #4
1004fa8a:	d901      	bls.n	1004fa90 <aci_gap_set_io_capability_api+0xa>
1004fa8c:	2012      	movs	r0, #18
1004fa8e:	bd80      	pop	{r7, pc}
1004fa90:	f014 ff2a 	bl	100648e8 <smp_sap_aci_set_io_capabilities>
1004fa94:	bd80      	pop	{r7, pc}
	...

1004fa98 <aci_gap_set_security_requirements_api>:
1004fa98:	b5f0      	push	{r4, r5, r6, r7, lr}
1004fa9a:	b089      	sub	sp, #36	@ 0x24
1004fa9c:	4605      	mov	r5, r0
1004fa9e:	4608      	mov	r0, r1
1004faa0:	4328      	orrs	r0, r5
1004faa2:	2412      	movs	r4, #18
1004faa4:	2801      	cmp	r0, #1
1004faa6:	d836      	bhi.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004faa8:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
1004faaa:	2f07      	cmp	r7, #7
1004faac:	d333      	bcc.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004faae:	2f10      	cmp	r7, #16
1004fab0:	d831      	bhi.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004fab2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
1004fab4:	2810      	cmp	r0, #16
1004fab6:	d82e      	bhi.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004fab8:	42b8      	cmp	r0, r7
1004faba:	d32c      	bcc.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004fabc:	460e      	mov	r6, r1
1004fabe:	9910      	ldr	r1, [sp, #64]	@ 0x40
1004fac0:	2902      	cmp	r1, #2
1004fac2:	d828      	bhi.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004fac4:	9101      	str	r1, [sp, #4]
1004fac6:	9002      	str	r0, [sp, #8]
1004fac8:	9303      	str	r3, [sp, #12]
1004faca:	9204      	str	r2, [sp, #16]
1004facc:	f015 f974 	bl	10064db8 <secure_connections_csr_ucfg_weak>
1004fad0:	2801      	cmp	r0, #1
1004fad2:	d106      	bne.n	1004fae2 <aci_gap_set_security_requirements_api+0x4a>
1004fad4:	9904      	ldr	r1, [sp, #16]
1004fad6:	2902      	cmp	r1, #2
1004fad8:	d81d      	bhi.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004fada:	9a03      	ldr	r2, [sp, #12]
1004fadc:	2a01      	cmp	r2, #1
1004fade:	d907      	bls.n	1004faf0 <aci_gap_set_security_requirements_api+0x58>
1004fae0:	e019      	b.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004fae2:	9a03      	ldr	r2, [sp, #12]
1004fae4:	4610      	mov	r0, r2
1004fae6:	9904      	ldr	r1, [sp, #16]
1004fae8:	4308      	orrs	r0, r1
1004faea:	d001      	beq.n	1004faf0 <aci_gap_set_security_requirements_api+0x58>
1004faec:	2411      	movs	r4, #17
1004faee:	e012      	b.n	1004fb16 <aci_gap_set_security_requirements_api+0x7e>
1004faf0:	ac05      	add	r4, sp, #20
1004faf2:	9801      	ldr	r0, [sp, #4]
1004faf4:	7320      	strb	r0, [r4, #12]
1004faf6:	4809      	ldr	r0, [pc, #36]	@ (1004fb1c <__arm_cp.1_0>)
1004faf8:	80e0      	strh	r0, [r4, #6]
1004fafa:	9802      	ldr	r0, [sp, #8]
1004fafc:	7160      	strb	r0, [r4, #5]
1004fafe:	7127      	strb	r7, [r4, #4]
1004fb00:	70e2      	strb	r2, [r4, #3]
1004fb02:	70a1      	strb	r1, [r4, #2]
1004fb04:	7066      	strb	r6, [r4, #1]
1004fb06:	7025      	strb	r5, [r4, #0]
1004fb08:	f002 f92a 	bl	10051d60 <GAP_get_identity_address_type>
1004fb0c:	7360      	strb	r0, [r4, #13]
1004fb0e:	4620      	mov	r0, r4
1004fb10:	f014 ff20 	bl	10064954 <smp_sap_aci_set_authentication_req>
1004fb14:	4604      	mov	r4, r0
1004fb16:	4620      	mov	r0, r4
1004fb18:	b009      	add	sp, #36	@ 0x24
1004fb1a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1004fb1c <__arm_cp.1_0>:
1004fb1c:	00000707 	.word	0x00000707

1004fb20 <aci_gap_passkey_resp_api>:
1004fb20:	b580      	push	{r7, lr}
1004fb22:	4a04      	ldr	r2, [pc, #16]	@ (1004fb34 <__arm_cp.4_0>)
1004fb24:	4291      	cmp	r1, r2
1004fb26:	d901      	bls.n	1004fb2c <aci_gap_passkey_resp_api+0xc>
1004fb28:	2012      	movs	r0, #18
1004fb2a:	bd80      	pop	{r7, pc}
1004fb2c:	f014 ff3c 	bl	100649a8 <smp_sap_aci_passkey_response>
1004fb30:	bd80      	pop	{r7, pc}
1004fb32:	46c0      	nop			@ (mov r8, r8)

1004fb34 <__arm_cp.4_0>:
1004fb34:	000f423f 	.word	0x000f423f

1004fb38 <aci_gatt_srv_add_service_api>:
1004fb38:	b580      	push	{r7, lr}
1004fb3a:	f004 ff41 	bl	100549c0 <GAT_srv_add_service>
1004fb3e:	bd80      	pop	{r7, pc}

1004fb40 <aci_gatt_srv_get_service_handle_api>:
1004fb40:	b580      	push	{r7, lr}
1004fb42:	f005 f97b 	bl	10054e3c <GAT_srv_get_service_handle>
1004fb46:	bd80      	pop	{r7, pc}

1004fb48 <aci_gatt_srv_add_char_api>:
1004fb48:	b580      	push	{r7, lr}
1004fb4a:	f004 ffe9 	bl	10054b20 <GAT_srv_add_characteristic>
1004fb4e:	bd80      	pop	{r7, pc}

1004fb50 <aci_gatt_srv_get_char_decl_handle_api>:
1004fb50:	b580      	push	{r7, lr}
1004fb52:	f005 f97d 	bl	10054e50 <GAT_srv_get_char_decl_handle>
1004fb56:	bd80      	pop	{r7, pc}

1004fb58 <aci_gatt_srv_resp_api>:
1004fb58:	b51c      	push	{r2, r3, r4, lr}
1004fb5a:	9c05      	ldr	r4, [sp, #20]
1004fb5c:	9401      	str	r4, [sp, #4]
1004fb5e:	9c04      	ldr	r4, [sp, #16]
1004fb60:	9400      	str	r4, [sp, #0]
1004fb62:	f005 f963 	bl	10054e2c <GAT_srv_resp>
1004fb66:	2000      	movs	r0, #0
1004fb68:	bd1c      	pop	{r2, r3, r4, pc}

1004fb6a <configBitmapGet>:
1004fb6a:	2000      	movs	r0, #0
1004fb6c:	4770      	bx	lr
	...

1004fb70 <HAL_Read_ConfigData>:
1004fb70:	b5f0      	push	{r4, r5, r6, r7, lr}
1004fb72:	b08b      	sub	sp, #44	@ 0x2c
1004fb74:	4615      	mov	r5, r2
1004fb76:	460c      	mov	r4, r1
1004fb78:	493a      	ldr	r1, [pc, #232]	@ (1004fc64 <__arm_cp.5_0>)
1004fb7a:	680b      	ldr	r3, [r1, #0]
1004fb7c:	4606      	mov	r6, r0
1004fb7e:	3e28      	subs	r6, #40	@ 0x28
1004fb80:	2206      	movs	r2, #6
1004fb82:	2112      	movs	r1, #18
1004fb84:	2e0b      	cmp	r6, #11
1004fb86:	d910      	bls.n	1004fbaa <HAL_Read_ConfigData+0x3a>
1004fb88:	2800      	cmp	r0, #0
1004fb8a:	d01c      	beq.n	1004fbc6 <HAL_Read_ConfigData+0x56>
1004fb8c:	28ff      	cmp	r0, #255	@ 0xff
1004fb8e:	d035      	beq.n	1004fbfc <HAL_Read_ConfigData+0x8c>
1004fb90:	2808      	cmp	r0, #8
1004fb92:	d017      	beq.n	1004fbc4 <HAL_Read_ConfigData+0x54>
1004fb94:	2818      	cmp	r0, #24
1004fb96:	d015      	beq.n	1004fbc4 <HAL_Read_ConfigData+0x54>
1004fb98:	2880      	cmp	r0, #128	@ 0x80
1004fb9a:	d03c      	beq.n	1004fc16 <HAL_Read_ConfigData+0xa6>
1004fb9c:	2881      	cmp	r0, #129	@ 0x81
1004fb9e:	d047      	beq.n	1004fc30 <HAL_Read_ConfigData+0xc0>
1004fba0:	28fe      	cmp	r0, #254	@ 0xfe
1004fba2:	d04b      	beq.n	1004fc3c <HAL_Read_ConfigData+0xcc>
1004fba4:	2806      	cmp	r0, #6
1004fba6:	d00b      	beq.n	1004fbc0 <HAL_Read_ConfigData+0x50>
1004fba8:	e013      	b.n	1004fbd2 <HAL_Read_ConfigData+0x62>
1004fbaa:	46c0      	nop			@ (mov r8, r8)
1004fbac:	447e      	add	r6, pc
1004fbae:	7936      	ldrb	r6, [r6, #4]
1004fbb0:	0076      	lsls	r6, r6, #1
1004fbb2:	44b7      	add	pc, r6
1004fbb4:	0e050e05 	.word	0x0e050e05
1004fbb8:	0e080e11 	.word	0x0e080e11
1004fbbc:	180e0e0e 	.word	0x180e0e0e
1004fbc0:	2202      	movs	r2, #2
1004fbc2:	e000      	b.n	1004fbc6 <HAL_Read_ConfigData+0x56>
1004fbc4:	2210      	movs	r2, #16
1004fbc6:	7022      	strb	r2, [r4, #0]
1004fbc8:	1819      	adds	r1, r3, r0
1004fbca:	4628      	mov	r0, r5
1004fbcc:	f7f4 feea 	bl	100449a4 <BLEPLAT_MemCpy>
1004fbd0:	2100      	movs	r1, #0
1004fbd2:	4608      	mov	r0, r1
1004fbd4:	b00b      	add	sp, #44	@ 0x2c
1004fbd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1004fbd8:	2001      	movs	r0, #1
1004fbda:	7020      	strb	r0, [r4, #0]
1004fbdc:	212c      	movs	r1, #44	@ 0x2c
1004fbde:	5c59      	ldrb	r1, [r3, r1]
1004fbe0:	4001      	ands	r1, r0
1004fbe2:	7029      	strb	r1, [r5, #0]
1004fbe4:	e7f4      	b.n	1004fbd0 <HAL_Read_ConfigData+0x60>
1004fbe6:	f002 f9f7 	bl	10051fd8 <GAP_is_rpa_change_at_timeout_enabled>
1004fbea:	a901      	add	r1, sp, #4
1004fbec:	7008      	strb	r0, [r1, #0]
1004fbee:	2601      	movs	r6, #1
1004fbf0:	4628      	mov	r0, r5
1004fbf2:	4632      	mov	r2, r6
1004fbf4:	f7f4 fed6 	bl	100449a4 <BLEPLAT_MemCpy>
1004fbf8:	7026      	strb	r6, [r4, #0]
1004fbfa:	e7e9      	b.n	1004fbd0 <HAL_Read_ConfigData+0x60>
1004fbfc:	a801      	add	r0, sp, #4
1004fbfe:	f7ff ffb4 	bl	1004fb6a <configBitmapGet>
1004fc02:	2800      	cmp	r0, #0
1004fc04:	d026      	beq.n	1004fc54 <HAL_Read_ConfigData+0xe4>
1004fc06:	a901      	add	r1, sp, #4
1004fc08:	2604      	movs	r6, #4
1004fc0a:	4628      	mov	r0, r5
1004fc0c:	4632      	mov	r2, r6
1004fc0e:	f7f4 fec9 	bl	100449a4 <BLEPLAT_MemCpy>
1004fc12:	2100      	movs	r1, #0
1004fc14:	e020      	b.n	1004fc58 <HAL_Read_ConfigData+0xe8>
1004fc16:	2006      	movs	r0, #6
1004fc18:	7020      	strb	r0, [r4, #0]
1004fc1a:	a801      	add	r0, sp, #4
1004fc1c:	f015 fab1 	bl	10065182 <nvm_dev_id_data_get_record>
1004fc20:	2800      	cmp	r0, #0
1004fc22:	d01b      	beq.n	1004fc5c <HAL_Read_ConfigData+0xec>
1004fc24:	7822      	ldrb	r2, [r4, #0]
1004fc26:	21ff      	movs	r1, #255	@ 0xff
1004fc28:	4628      	mov	r0, r5
1004fc2a:	f7f4 fecb 	bl	100449c4 <BLEPLAT_MemSet>
1004fc2e:	e7cf      	b.n	1004fbd0 <HAL_Read_ConfigData+0x60>
1004fc30:	2206      	movs	r2, #6
1004fc32:	7022      	strb	r2, [r4, #0]
1004fc34:	480c      	ldr	r0, [pc, #48]	@ (1004fc68 <__arm_cp.5_1>)
1004fc36:	6801      	ldr	r1, [r0, #0]
1004fc38:	3166      	adds	r1, #102	@ 0x66
1004fc3a:	e7c6      	b.n	1004fbca <HAL_Read_ConfigData+0x5a>
1004fc3c:	ae01      	add	r6, sp, #4
1004fc3e:	4630      	mov	r0, r6
1004fc40:	f000 fb58 	bl	100502f4 <log_verbosity_get_ucfg_weak>
1004fc44:	2705      	movs	r7, #5
1004fc46:	4628      	mov	r0, r5
1004fc48:	4631      	mov	r1, r6
1004fc4a:	463a      	mov	r2, r7
1004fc4c:	f7f4 feaa 	bl	100449a4 <BLEPLAT_MemCpy>
1004fc50:	7027      	strb	r7, [r4, #0]
1004fc52:	e7bd      	b.n	1004fbd0 <HAL_Read_ConfigData+0x60>
1004fc54:	2112      	movs	r1, #18
1004fc56:	2600      	movs	r6, #0
1004fc58:	7026      	strb	r6, [r4, #0]
1004fc5a:	e7ba      	b.n	1004fbd2 <HAL_Read_ConfigData+0x62>
1004fc5c:	7822      	ldrb	r2, [r4, #0]
1004fc5e:	a901      	add	r1, sp, #4
1004fc60:	3120      	adds	r1, #32
1004fc62:	e7b2      	b.n	1004fbca <HAL_Read_ConfigData+0x5a>

1004fc64 <__arm_cp.5_0>:
1004fc64:	2000083c 	.word	0x2000083c

1004fc68 <__arm_cp.5_1>:
1004fc68:	20000844 	.word	0x20000844

1004fc6c <aci_hal_read_config_data>:
1004fc6c:	b580      	push	{r7, lr}
1004fc6e:	f7ff ff7f 	bl	1004fb70 <HAL_Read_ConfigData>
1004fc72:	bd80      	pop	{r7, pc}

1004fc74 <aci_hal_set_tx_power_level>:
1004fc74:	b580      	push	{r7, lr}
1004fc76:	f000 f801 	bl	1004fc7c <HAL_Set_TX_Power_Level>
1004fc7a:	bd80      	pop	{r7, pc}

1004fc7c <HAL_Set_TX_Power_Level>:
1004fc7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1004fc7e:	460e      	mov	r6, r1
1004fc80:	4605      	mov	r5, r0
1004fc82:	2412      	movs	r4, #18
1004fc84:	f7f4 ff53 	bl	10044b2e <BLEPLAT_GetMaxPALevel>
1004fc88:	42b0      	cmp	r0, r6
1004fc8a:	d317      	bcc.n	1004fcbc <HAL_Set_TX_Power_Level+0x40>
1004fc8c:	2d01      	cmp	r5, #1
1004fc8e:	d815      	bhi.n	1004fcbc <HAL_Set_TX_Power_Level+0x40>
1004fc90:	480b      	ldr	r0, [pc, #44]	@ (1004fcc0 <__arm_cp.11_0>)
1004fc92:	6800      	ldr	r0, [r0, #0]
1004fc94:	7a81      	ldrb	r1, [r0, #10]
1004fc96:	9100      	str	r1, [sp, #0]
1004fc98:	7285      	strb	r5, [r0, #10]
1004fc9a:	7a47      	ldrb	r7, [r0, #9]
1004fc9c:	7246      	strb	r6, [r0, #9]
1004fc9e:	4628      	mov	r0, r5
1004fca0:	f7f4 ff55 	bl	10044b4e <BLEPLAT_SetHighPower>
1004fca4:	2400      	movs	r4, #0
1004fca6:	42b7      	cmp	r7, r6
1004fca8:	d102      	bne.n	1004fcb0 <HAL_Set_TX_Power_Level+0x34>
1004fcaa:	9800      	ldr	r0, [sp, #0]
1004fcac:	42a8      	cmp	r0, r5
1004fcae:	d005      	beq.n	1004fcbc <HAL_Set_TX_Power_Level+0x40>
1004fcb0:	20ff      	movs	r0, #255	@ 0xff
1004fcb2:	227f      	movs	r2, #127	@ 0x7f
1004fcb4:	2101      	movs	r1, #1
1004fcb6:	460b      	mov	r3, r1
1004fcb8:	f00f fde6 	bl	1005f888 <LLC_pcl_set_radio_tx_power_and_eval_indication_ucfg_weak>
1004fcbc:	4620      	mov	r0, r4
1004fcbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1004fcc0 <__arm_cp.11_0>:
1004fcc0:	20000894 	.word	0x20000894

1004fcc4 <ble_HAL_Init>:
1004fcc4:	b580      	push	{r7, lr}
1004fcc6:	4804      	ldr	r0, [pc, #16]	@ (1004fcd8 <__arm_cp.17_0>)
1004fcc8:	6800      	ldr	r0, [r0, #0]
1004fcca:	3060      	adds	r0, #96	@ 0x60
1004fccc:	2100      	movs	r1, #0
1004fcce:	2204      	movs	r2, #4
1004fcd0:	f7f4 fe78 	bl	100449c4 <BLEPLAT_MemSet>
1004fcd4:	bd80      	pop	{r7, pc}
1004fcd6:	46c0      	nop			@ (mov r8, r8)

1004fcd8 <__arm_cp.17_0>:
1004fcd8:	20000894 	.word	0x20000894

1004fcdc <hal_read_radio_activity_state>:
1004fcdc:	b570      	push	{r4, r5, r6, lr}
1004fcde:	4603      	mov	r3, r0
1004fce0:	480a      	ldr	r0, [pc, #40]	@ (1004fd0c <__arm_cp.18_0>)
1004fce2:	6804      	ldr	r4, [r0, #0]
1004fce4:	f3ef 8010 	mrs	r0, PRIMASK
1004fce8:	b672      	cpsid	i
1004fcea:	7d20      	ldrb	r0, [r4, #20]
1004fcec:	2500      	movs	r5, #0
1004fcee:	7525      	strb	r5, [r4, #20]
1004fcf0:	7c25      	ldrb	r5, [r4, #16]
1004fcf2:	260f      	movs	r6, #15
1004fcf4:	402e      	ands	r6, r5
1004fcf6:	701e      	strb	r6, [r3, #0]
1004fcf8:	7c23      	ldrb	r3, [r4, #16]
1004fcfa:	091b      	lsrs	r3, r3, #4
1004fcfc:	700b      	strb	r3, [r1, #0]
1004fcfe:	68e1      	ldr	r1, [r4, #12]
1004fd00:	6011      	str	r1, [r2, #0]
1004fd02:	1e41      	subs	r1, r0, #1
1004fd04:	4188      	sbcs	r0, r1
1004fd06:	b662      	cpsie	i
1004fd08:	bd70      	pop	{r4, r5, r6, pc}
1004fd0a:	46c0      	nop			@ (mov r8, r8)

1004fd0c <__arm_cp.18_0>:
1004fd0c:	20000894 	.word	0x20000894

1004fd10 <hal_radio_activity_state_init>:
1004fd10:	4803      	ldr	r0, [pc, #12]	@ (1004fd20 <__arm_cp.20_0>)
1004fd12:	6800      	ldr	r0, [r0, #0]
1004fd14:	2100      	movs	r1, #0
1004fd16:	7501      	strb	r1, [r0, #20]
1004fd18:	8241      	strh	r1, [r0, #18]
1004fd1a:	7401      	strb	r1, [r0, #16]
1004fd1c:	4770      	bx	lr
1004fd1e:	46c0      	nop			@ (mov r8, r8)

1004fd20 <__arm_cp.20_0>:
1004fd20:	20000894 	.word	0x20000894

1004fd24 <hal_radio_activity_state_cb_check>:
1004fd24:	b510      	push	{r4, lr}
1004fd26:	b086      	sub	sp, #24
1004fd28:	4815      	ldr	r0, [pc, #84]	@ (1004fd80 <__arm_cp.22_0>)
1004fd2a:	6804      	ldr	r4, [r0, #0]
1004fd2c:	a802      	add	r0, sp, #8
1004fd2e:	a901      	add	r1, sp, #4
1004fd30:	466a      	mov	r2, sp
1004fd32:	f7ff ffd3 	bl	1004fcdc <hal_read_radio_activity_state>
1004fd36:	2800      	cmp	r0, #0
1004fd38:	d01f      	beq.n	1004fd7a <hal_radio_activity_state_cb_check+0x56>
1004fd3a:	a802      	add	r0, sp, #8
1004fd3c:	7801      	ldrb	r1, [r0, #0]
1004fd3e:	8a60      	ldrh	r0, [r4, #18]
1004fd40:	40c8      	lsrs	r0, r1
1004fd42:	07c0      	lsls	r0, r0, #31
1004fd44:	d019      	beq.n	1004fd7a <hal_radio_activity_state_cb_check+0x56>
1004fd46:	9a01      	ldr	r2, [sp, #4]
1004fd48:	9b00      	ldr	r3, [sp, #0]
1004fd4a:	a803      	add	r0, sp, #12
1004fd4c:	2408      	movs	r4, #8
1004fd4e:	7084      	strb	r4, [r0, #2]
1004fd50:	0e1c      	lsrs	r4, r3, #24
1004fd52:	72c4      	strb	r4, [r0, #11]
1004fd54:	0c1c      	lsrs	r4, r3, #16
1004fd56:	7284      	strb	r4, [r0, #10]
1004fd58:	0a1c      	lsrs	r4, r3, #8
1004fd5a:	7244      	strb	r4, [r0, #9]
1004fd5c:	7203      	strb	r3, [r0, #8]
1004fd5e:	71c2      	strb	r2, [r0, #7]
1004fd60:	7181      	strb	r1, [r0, #6]
1004fd62:	21ff      	movs	r1, #255	@ 0xff
1004fd64:	7041      	strb	r1, [r0, #1]
1004fd66:	2182      	movs	r1, #130	@ 0x82
1004fd68:	7001      	strb	r1, [r0, #0]
1004fd6a:	2100      	movs	r1, #0
1004fd6c:	7141      	strb	r1, [r0, #5]
1004fd6e:	2204      	movs	r2, #4
1004fd70:	7102      	strb	r2, [r0, #4]
1004fd72:	70c1      	strb	r1, [r0, #3]
1004fd74:	210c      	movs	r1, #12
1004fd76:	f7fe f927 	bl	1004dfc8 <BLE_STACK_Event>
1004fd7a:	b006      	add	sp, #24
1004fd7c:	bd10      	pop	{r4, pc}
1004fd7e:	46c0      	nop			@ (mov r8, r8)

1004fd80 <__arm_cp.22_0>:
1004fd80:	20000894 	.word	0x20000894

1004fd84 <aci_l2cap_connection_parameter_update_resp_api>:
1004fd84:	b5bf      	push	{r0, r1, r2, r3, r4, r5, r7, lr}
1004fd86:	466c      	mov	r4, sp
1004fd88:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
1004fd8a:	81a5      	strh	r5, [r4, #12]
1004fd8c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1004fd8e:	8165      	strh	r5, [r4, #10]
1004fd90:	9d08      	ldr	r5, [sp, #32]
1004fd92:	8125      	strh	r5, [r4, #8]
1004fd94:	80e3      	strh	r3, [r4, #6]
1004fd96:	80a2      	strh	r2, [r4, #4]
1004fd98:	8061      	strh	r1, [r4, #2]
1004fd9a:	8020      	strh	r0, [r4, #0]
1004fd9c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1004fd9e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1004fda0:	4620      	mov	r0, r4
1004fda2:	f005 fc7d 	bl	100556a0 <L2C_build_connect_update_response>
1004fda6:	b004      	add	sp, #16
1004fda8:	bdb0      	pop	{r4, r5, r7, pc}
	...

1004fdac <Acl_Init>:
1004fdac:	4803      	ldr	r0, [pc, #12]	@ (1004fdbc <__arm_cp.0_0>)
1004fdae:	6800      	ldr	r0, [r0, #0]
1004fdb0:	2188      	movs	r1, #136	@ 0x88
1004fdb2:	4a03      	ldr	r2, [pc, #12]	@ (1004fdc0 <__arm_cp.0_1>)
1004fdb4:	5042      	str	r2, [r0, r1]
1004fdb6:	2000      	movs	r0, #0
1004fdb8:	4770      	bx	lr
1004fdba:	46c0      	nop			@ (mov r8, r8)

1004fdbc <__arm_cp.0_0>:
1004fdbc:	20000894 	.word	0x20000894

1004fdc0 <__arm_cp.0_1>:
1004fdc0:	03030000 	.word	0x03030000

1004fdc4 <isr_Acl_Data_Indication_Queue_Full>:
1004fdc4:	4805      	ldr	r0, [pc, #20]	@ (1004fddc <__arm_cp.1_0>)
1004fdc6:	6800      	ldr	r0, [r0, #0]
1004fdc8:	2188      	movs	r1, #136	@ 0x88
1004fdca:	5c41      	ldrb	r1, [r0, r1]
1004fdcc:	3088      	adds	r0, #136	@ 0x88
1004fdce:	7880      	ldrb	r0, [r0, #2]
1004fdd0:	4281      	cmp	r1, r0
1004fdd2:	d801      	bhi.n	1004fdd8 <isr_Acl_Data_Indication_Queue_Full+0x14>
1004fdd4:	2000      	movs	r0, #0
1004fdd6:	4770      	bx	lr
1004fdd8:	2001      	movs	r0, #1
1004fdda:	4770      	bx	lr

1004fddc <__arm_cp.1_0>:
1004fddc:	20000894 	.word	0x20000894

1004fde0 <isr_Acl_Data_TX_Cmpl_Queue_Full>:
1004fde0:	4805      	ldr	r0, [pc, #20]	@ (1004fdf8 <__arm_cp.2_0>)
1004fde2:	6800      	ldr	r0, [r0, #0]
1004fde4:	2189      	movs	r1, #137	@ 0x89
1004fde6:	5c41      	ldrb	r1, [r0, r1]
1004fde8:	3089      	adds	r0, #137	@ 0x89
1004fdea:	7880      	ldrb	r0, [r0, #2]
1004fdec:	4281      	cmp	r1, r0
1004fdee:	d801      	bhi.n	1004fdf4 <isr_Acl_Data_TX_Cmpl_Queue_Full+0x14>
1004fdf0:	2000      	movs	r0, #0
1004fdf2:	4770      	bx	lr
1004fdf4:	2001      	movs	r0, #1
1004fdf6:	4770      	bx	lr

1004fdf8 <__arm_cp.2_0>:
1004fdf8:	20000894 	.word	0x20000894

1004fdfc <Acl_Rcv_Pkt_Handler>:
1004fdfc:	b510      	push	{r4, lr}
1004fdfe:	4604      	mov	r4, r0
1004fe00:	480a      	ldr	r0, [pc, #40]	@ (1004fe2c <__arm_cp.5_0>)
1004fe02:	6800      	ldr	r0, [r0, #0]
1004fe04:	6900      	ldr	r0, [r0, #16]
1004fe06:	2190      	movs	r1, #144	@ 0x90
1004fe08:	2201      	movs	r2, #1
1004fe0a:	4613      	mov	r3, r2
1004fe0c:	f000 fa78 	bl	10050300 <aci_event_fifo_push_header>
1004fe10:	2800      	cmp	r0, #0
1004fe12:	d004      	beq.n	1004fe1e <Acl_Rcv_Pkt_Handler+0x22>
1004fe14:	4601      	mov	r1, r0
1004fe16:	6044      	str	r4, [r0, #4]
1004fe18:	2090      	movs	r0, #144	@ 0x90
1004fe1a:	f000 fb0e 	bl	1005043a <aci_event_fifo_push>
1004fe1e:	4804      	ldr	r0, [pc, #16]	@ (1004fe30 <__arm_cp.5_1>)
1004fe20:	6800      	ldr	r0, [r0, #0]
1004fe22:	2188      	movs	r1, #136	@ 0x88
1004fe24:	5c42      	ldrb	r2, [r0, r1]
1004fe26:	1c52      	adds	r2, r2, #1
1004fe28:	5442      	strb	r2, [r0, r1]
1004fe2a:	bd10      	pop	{r4, pc}

1004fe2c <__arm_cp.5_0>:
1004fe2c:	20000840 	.word	0x20000840

1004fe30 <__arm_cp.5_1>:
1004fe30:	20000894 	.word	0x20000894

1004fe34 <Acl_Tx_Cmpl_Pkt_Handler>:
1004fe34:	b510      	push	{r4, lr}
1004fe36:	4604      	mov	r4, r0
1004fe38:	7a00      	ldrb	r0, [r0, #8]
1004fe3a:	21f7      	movs	r1, #247	@ 0xf7
1004fe3c:	4001      	ands	r1, r0
1004fe3e:	7221      	strb	r1, [r4, #8]
1004fe40:	480a      	ldr	r0, [pc, #40]	@ (1004fe6c <__arm_cp.6_0>)
1004fe42:	6800      	ldr	r0, [r0, #0]
1004fe44:	6900      	ldr	r0, [r0, #16]
1004fe46:	2190      	movs	r1, #144	@ 0x90
1004fe48:	2200      	movs	r2, #0
1004fe4a:	2301      	movs	r3, #1
1004fe4c:	f000 fa58 	bl	10050300 <aci_event_fifo_push_header>
1004fe50:	2800      	cmp	r0, #0
1004fe52:	d004      	beq.n	1004fe5e <Acl_Tx_Cmpl_Pkt_Handler+0x2a>
1004fe54:	4601      	mov	r1, r0
1004fe56:	6044      	str	r4, [r0, #4]
1004fe58:	2090      	movs	r0, #144	@ 0x90
1004fe5a:	f000 faee 	bl	1005043a <aci_event_fifo_push>
1004fe5e:	4804      	ldr	r0, [pc, #16]	@ (1004fe70 <__arm_cp.6_1>)
1004fe60:	6800      	ldr	r0, [r0, #0]
1004fe62:	2189      	movs	r1, #137	@ 0x89
1004fe64:	5c42      	ldrb	r2, [r0, r1]
1004fe66:	1c52      	adds	r2, r2, #1
1004fe68:	5442      	strb	r2, [r0, r1]
1004fe6a:	bd10      	pop	{r4, pc}

1004fe6c <__arm_cp.6_0>:
1004fe6c:	20000840 	.word	0x20000840

1004fe70 <__arm_cp.6_1>:
1004fe70:	20000894 	.word	0x20000894

1004fe74 <Acl_Transmit_Data>:
1004fe74:	b510      	push	{r4, lr}
1004fe76:	2400      	movs	r4, #0
1004fe78:	61c4      	str	r4, [r0, #28]
1004fe7a:	f007 fca7 	bl	100577cc <llc_conn_send_acl_data>
1004fe7e:	2884      	cmp	r0, #132	@ 0x84
1004fe80:	d000      	beq.n	1004fe84 <Acl_Transmit_Data+0x10>
1004fe82:	2481      	movs	r4, #129	@ 0x81
1004fe84:	4620      	mov	r0, r4
1004fe86:	bd10      	pop	{r4, pc}

1004fe88 <hci_acl_data_tx_cmpl_event_int_cb>:
1004fe88:	b5b0      	push	{r4, r5, r7, lr}
1004fe8a:	6809      	ldr	r1, [r1, #0]
1004fe8c:	2483      	movs	r4, #131	@ 0x83
1004fe8e:	2200      	movs	r2, #0
1004fe90:	2900      	cmp	r1, #0
1004fe92:	d012      	beq.n	1004feba <hci_acl_data_tx_cmpl_event_int_cb+0x32>
1004fe94:	69cd      	ldr	r5, [r1, #28]
1004fe96:	2400      	movs	r4, #0
1004fe98:	61cc      	str	r4, [r1, #28]
1004fe9a:	7a08      	ldrb	r0, [r1, #8]
1004fe9c:	06c0      	lsls	r0, r0, #27
1004fe9e:	d403      	bmi.n	1004fea8 <hci_acl_data_tx_cmpl_event_int_cb+0x20>
1004fea0:	2000      	movs	r0, #0
1004fea2:	f005 fee3 	bl	10055c6c <L2C_mux_acl_packet>
1004fea6:	e002      	b.n	1004feae <hci_acl_data_tx_cmpl_event_int_cb+0x26>
1004fea8:	4608      	mov	r0, r1
1004feaa:	f005 f80f 	bl	10054ecc <hci_tx_acl_data_done>
1004feae:	2201      	movs	r2, #1
1004feb0:	2800      	cmp	r0, #0
1004feb2:	4629      	mov	r1, r5
1004feb4:	d0ec      	beq.n	1004fe90 <hci_acl_data_tx_cmpl_event_int_cb+0x8>
1004feb6:	2483      	movs	r4, #131	@ 0x83
1004feb8:	e00c      	b.n	1004fed4 <hci_acl_data_tx_cmpl_event_int_cb+0x4c>
1004feba:	07d0      	lsls	r0, r2, #31
1004febc:	d00a      	beq.n	1004fed4 <hci_acl_data_tx_cmpl_event_int_cb+0x4c>
1004febe:	f3ef 8010 	mrs	r0, PRIMASK
1004fec2:	b672      	cpsid	i
1004fec4:	4804      	ldr	r0, [pc, #16]	@ (1004fed8 <__arm_cp.9_0>)
1004fec6:	6800      	ldr	r0, [r0, #0]
1004fec8:	2189      	movs	r1, #137	@ 0x89
1004feca:	5c42      	ldrb	r2, [r0, r1]
1004fecc:	1e52      	subs	r2, r2, #1
1004fece:	5442      	strb	r2, [r0, r1]
1004fed0:	b662      	cpsie	i
1004fed2:	2400      	movs	r4, #0
1004fed4:	b2e0      	uxtb	r0, r4
1004fed6:	bdb0      	pop	{r4, r5, r7, pc}

1004fed8 <__arm_cp.9_0>:
1004fed8:	20000894 	.word	0x20000894

1004fedc <hci_acl_data_ind_event_int_cb>:
1004fedc:	b580      	push	{r7, lr}
1004fede:	480e      	ldr	r0, [pc, #56]	@ (1004ff18 <__arm_cp.11_0>)
1004fee0:	6800      	ldr	r0, [r0, #0]
1004fee2:	222c      	movs	r2, #44	@ 0x2c
1004fee4:	5c80      	ldrb	r0, [r0, r2]
1004fee6:	07c0      	lsls	r0, r0, #31
1004fee8:	6808      	ldr	r0, [r1, #0]
1004feea:	d102      	bne.n	1004fef2 <hci_acl_data_ind_event_int_cb+0x16>
1004feec:	f005 fe30 	bl	10055b50 <L2C_receive_data>
1004fef0:	e001      	b.n	1004fef6 <hci_acl_data_ind_event_int_cb+0x1a>
1004fef2:	f004 ffb7 	bl	10054e64 <hci_rx_acl_data>
1004fef6:	2800      	cmp	r0, #0
1004fef8:	d001      	beq.n	1004fefe <hci_acl_data_ind_event_int_cb+0x22>
1004fefa:	2083      	movs	r0, #131	@ 0x83
1004fefc:	bd80      	pop	{r7, pc}
1004fefe:	f3ef 8010 	mrs	r0, PRIMASK
1004ff02:	b672      	cpsid	i
1004ff04:	4805      	ldr	r0, [pc, #20]	@ (1004ff1c <__arm_cp.11_1>)
1004ff06:	6800      	ldr	r0, [r0, #0]
1004ff08:	2188      	movs	r1, #136	@ 0x88
1004ff0a:	5c42      	ldrb	r2, [r0, r1]
1004ff0c:	1e52      	subs	r2, r2, #1
1004ff0e:	5442      	strb	r2, [r0, r1]
1004ff10:	b662      	cpsie	i
1004ff12:	2000      	movs	r0, #0
1004ff14:	bd80      	pop	{r7, pc}
1004ff16:	46c0      	nop			@ (mov r8, r8)

1004ff18 <__arm_cp.11_0>:
1004ff18:	2000083c 	.word	0x2000083c

1004ff1c <__arm_cp.11_1>:
1004ff1c:	20000894 	.word	0x20000894

1004ff20 <ACL_pkt_init>:
1004ff20:	b570      	push	{r4, r5, r6, lr}
1004ff22:	4c0b      	ldr	r4, [pc, #44]	@ (1004ff50 <__arm_cp.1_0>)
1004ff24:	2501      	movs	r5, #1
1004ff26:	2204      	movs	r2, #4
1004ff28:	4620      	mov	r0, r4
1004ff2a:	4629      	mov	r1, r5
1004ff2c:	f012 ff70 	bl	10062e10 <csmem_mem_assign>
1004ff30:	4e08      	ldr	r6, [pc, #32]	@ (1004ff54 <__arm_cp.1_1>)
1004ff32:	6030      	str	r0, [r6, #0]
1004ff34:	2206      	movs	r2, #6
1004ff36:	4620      	mov	r0, r4
1004ff38:	4629      	mov	r1, r5
1004ff3a:	f012 ff69 	bl	10062e10 <csmem_mem_assign>
1004ff3e:	6831      	ldr	r1, [r6, #0]
1004ff40:	6008      	str	r0, [r1, #0]
1004ff42:	6830      	ldr	r0, [r6, #0]
1004ff44:	6801      	ldr	r1, [r0, #0]
1004ff46:	2000      	movs	r0, #0
1004ff48:	8088      	strh	r0, [r1, #4]
1004ff4a:	8048      	strh	r0, [r1, #2]
1004ff4c:	7008      	strb	r0, [r1, #0]
1004ff4e:	bd70      	pop	{r4, r5, r6, pc}

1004ff50 <__arm_cp.1_0>:
1004ff50:	200008a4 	.word	0x200008a4

1004ff54 <__arm_cp.1_1>:
1004ff54:	20000838 	.word	0x20000838

1004ff58 <ACL_pkt_get>:
1004ff58:	b5b0      	push	{r4, r5, r7, lr}
1004ff5a:	460d      	mov	r5, r1
1004ff5c:	4604      	mov	r4, r0
1004ff5e:	1e41      	subs	r1, r0, #1
1004ff60:	4188      	sbcs	r0, r1
1004ff62:	1e51      	subs	r1, r2, #1
1004ff64:	221f      	movs	r2, #31
1004ff66:	430a      	orrs	r2, r1
1004ff68:	3221      	adds	r2, #33	@ 0x21
1004ff6a:	b291      	uxth	r1, r2
1004ff6c:	f012 fe2e 	bl	10062bcc <MBM_get>
1004ff70:	2800      	cmp	r0, #0
1004ff72:	d006      	beq.n	1004ff82 <ACL_pkt_get+0x2a>
1004ff74:	8085      	strh	r5, [r0, #4]
1004ff76:	6801      	ldr	r1, [r0, #0]
1004ff78:	6081      	str	r1, [r0, #8]
1004ff7a:	2c00      	cmp	r4, #0
1004ff7c:	d103      	bne.n	1004ff86 <ACL_pkt_get+0x2e>
1004ff7e:	2140      	movs	r1, #64	@ 0x40
1004ff80:	e003      	b.n	1004ff8a <ACL_pkt_get+0x32>
1004ff82:	2000      	movs	r0, #0
1004ff84:	bdb0      	pop	{r4, r5, r7, pc}
1004ff86:	217f      	movs	r1, #127	@ 0x7f
1004ff88:	43c9      	mvns	r1, r1
1004ff8a:	7301      	strb	r1, [r0, #12]
1004ff8c:	1d00      	adds	r0, r0, #4
1004ff8e:	bdb0      	pop	{r4, r5, r7, pc}

1004ff90 <ACL_pkt_get_available_mem_buffers>:
1004ff90:	b580      	push	{r7, lr}
1004ff92:	1e41      	subs	r1, r0, #1
1004ff94:	4188      	sbcs	r0, r1
1004ff96:	f012 fe81 	bl	10062c9c <MBM_get_available_mem_buffers>
1004ff9a:	bd80      	pop	{r7, pc}

1004ff9c <ACL_pkt_release>:
1004ff9c:	b580      	push	{r7, lr}
1004ff9e:	7a01      	ldrb	r1, [r0, #8]
1004ffa0:	098a      	lsrs	r2, r1, #6
1004ffa2:	2101      	movs	r1, #1
1004ffa4:	4391      	bics	r1, r2
1004ffa6:	1f00      	subs	r0, r0, #4
1004ffa8:	f012 fe4a 	bl	10062c40 <MBM_release>
1004ffac:	bd80      	pop	{r7, pc}

1004ffae <ACL_pkt_resize>:
1004ffae:	b580      	push	{r7, lr}
1004ffb0:	460a      	mov	r2, r1
1004ffb2:	7a01      	ldrb	r1, [r0, #8]
1004ffb4:	098b      	lsrs	r3, r1, #6
1004ffb6:	2101      	movs	r1, #1
1004ffb8:	4399      	bics	r1, r3
1004ffba:	6840      	ldr	r0, [r0, #4]
1004ffbc:	f012 fe82 	bl	10062cc4 <MBM_resize>
1004ffc0:	bd80      	pop	{r7, pc}

1004ffc2 <ACL_pkt_cmp>:
1004ffc2:	b510      	push	{r4, lr}
1004ffc4:	4614      	mov	r4, r2
1004ffc6:	460a      	mov	r2, r1
1004ffc8:	6840      	ldr	r0, [r0, #4]
1004ffca:	4619      	mov	r1, r3
1004ffcc:	4623      	mov	r3, r4
1004ffce:	f013 f853 	bl	10063078 <Mem_Buff_cmp>
1004ffd2:	bd10      	pop	{r4, pc}

1004ffd4 <ACL_pkt_read>:
1004ffd4:	b510      	push	{r4, lr}
1004ffd6:	4614      	mov	r4, r2
1004ffd8:	460a      	mov	r2, r1
1004ffda:	6840      	ldr	r0, [r0, #4]
1004ffdc:	4619      	mov	r1, r3
1004ffde:	4623      	mov	r3, r4
1004ffe0:	f013 f811 	bl	10063006 <Mem_Buff_read>
1004ffe4:	bd10      	pop	{r4, pc}

1004ffe6 <ACL_pkt_read_16b>:
1004ffe6:	b5e0      	push	{r5, r6, r7, lr}
1004ffe8:	2202      	movs	r2, #2
1004ffea:	ab01      	add	r3, sp, #4
1004ffec:	f7ff fff2 	bl	1004ffd4 <ACL_pkt_read>
1004fff0:	2800      	cmp	r0, #0
1004fff2:	d001      	beq.n	1004fff8 <ACL_pkt_read_16b+0x12>
1004fff4:	2000      	movs	r0, #0
1004fff6:	e004      	b.n	10050002 <ACL_pkt_read_16b+0x1c>
1004fff8:	a801      	add	r0, sp, #4
1004fffa:	7801      	ldrb	r1, [r0, #0]
1004fffc:	7840      	ldrb	r0, [r0, #1]
1004fffe:	0200      	lsls	r0, r0, #8
10050000:	1840      	adds	r0, r0, r1
10050002:	b280      	uxth	r0, r0
10050004:	bd8c      	pop	{r2, r3, r7, pc}

10050006 <ACL_pkt_write_16b>:
10050006:	b5e0      	push	{r5, r6, r7, lr}
10050008:	ab01      	add	r3, sp, #4
1005000a:	701a      	strb	r2, [r3, #0]
1005000c:	0a12      	lsrs	r2, r2, #8
1005000e:	705a      	strb	r2, [r3, #1]
10050010:	2202      	movs	r2, #2
10050012:	f000 f801 	bl	10050018 <ACL_pkt_write>
10050016:	bd8c      	pop	{r2, r3, r7, pc}

10050018 <ACL_pkt_write>:
10050018:	b510      	push	{r4, lr}
1005001a:	4614      	mov	r4, r2
1005001c:	460a      	mov	r2, r1
1005001e:	6840      	ldr	r0, [r0, #4]
10050020:	4619      	mov	r1, r3
10050022:	4623      	mov	r3, r4
10050024:	f012 ffb5 	bl	10062f92 <Mem_Buff_write>
10050028:	bd10      	pop	{r4, pc}

1005002a <ACL_pkt_extract_pdu>:
1005002a:	1f01      	subs	r1, r0, #4
1005002c:	2200      	movs	r2, #0
1005002e:	600a      	str	r2, [r1, #0]
10050030:	6840      	ldr	r0, [r0, #4]
10050032:	4770      	bx	lr

10050034 <ACL_pkt_connection>:
10050034:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10050036:	480f      	ldr	r0, [pc, #60]	@ (10050074 <__arm_cp.14_0>)
10050038:	6800      	ldr	r0, [r0, #0]
1005003a:	6805      	ldr	r5, [r0, #0]
1005003c:	7828      	ldrb	r0, [r5, #0]
1005003e:	1c41      	adds	r1, r0, #1
10050040:	7029      	strb	r1, [r5, #0]
10050042:	4f0d      	ldr	r7, [pc, #52]	@ (10050078 <__arm_cp.14_1>)
10050044:	8a39      	ldrh	r1, [r7, #16]
10050046:	3125      	adds	r1, #37	@ 0x25
10050048:	094e      	lsrs	r6, r1, #5
1005004a:	1c74      	adds	r4, r6, #1
1005004c:	2800      	cmp	r0, #0
1005004e:	d109      	bne.n	10050064 <ACL_pkt_connection+0x30>
10050050:	2000      	movs	r0, #0
10050052:	4621      	mov	r1, r4
10050054:	f012 fe72 	bl	10062d3c <MBM_reserve>
10050058:	8a38      	ldrh	r0, [r7, #16]
1005005a:	3025      	adds	r0, #37	@ 0x25
1005005c:	0940      	lsrs	r0, r0, #5
1005005e:	1c40      	adds	r0, r0, #1
10050060:	8068      	strh	r0, [r5, #2]
10050062:	1cb4      	adds	r4, r6, #2
10050064:	2001      	movs	r0, #1
10050066:	4621      	mov	r1, r4
10050068:	f012 fe68 	bl	10062d3c <MBM_reserve>
1005006c:	88a8      	ldrh	r0, [r5, #4]
1005006e:	1900      	adds	r0, r0, r4
10050070:	80a8      	strh	r0, [r5, #4]
10050072:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10050074 <__arm_cp.14_0>:
10050074:	20000838 	.word	0x20000838

10050078 <__arm_cp.14_1>:
10050078:	200008a8 	.word	0x200008a8

1005007c <ACL_pkt_disconnection>:
1005007c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005007e:	480e      	ldr	r0, [pc, #56]	@ (100500b8 <__arm_cp.15_0>)
10050080:	6800      	ldr	r0, [r0, #0]
10050082:	6806      	ldr	r6, [r0, #0]
10050084:	7830      	ldrb	r0, [r6, #0]
10050086:	1e40      	subs	r0, r0, #1
10050088:	7030      	strb	r0, [r6, #0]
1005008a:	490c      	ldr	r1, [pc, #48]	@ (100500bc <__arm_cp.15_1>)
1005008c:	8a09      	ldrh	r1, [r1, #16]
1005008e:	3125      	adds	r1, #37	@ 0x25
10050090:	094f      	lsrs	r7, r1, #5
10050092:	1c7c      	adds	r4, r7, #1
10050094:	0600      	lsls	r0, r0, #24
10050096:	d106      	bne.n	100500a6 <ACL_pkt_disconnection+0x2a>
10050098:	2500      	movs	r5, #0
1005009a:	4628      	mov	r0, r5
1005009c:	4621      	mov	r1, r4
1005009e:	f012 fea1 	bl	10062de4 <MBM_unreserve>
100500a2:	8075      	strh	r5, [r6, #2]
100500a4:	1cbc      	adds	r4, r7, #2
100500a6:	2001      	movs	r0, #1
100500a8:	4621      	mov	r1, r4
100500aa:	f012 fe9b 	bl	10062de4 <MBM_unreserve>
100500ae:	88b0      	ldrh	r0, [r6, #4]
100500b0:	1b00      	subs	r0, r0, r4
100500b2:	80b0      	strh	r0, [r6, #4]
100500b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100500b6:	46c0      	nop			@ (mov r8, r8)

100500b8 <__arm_cp.15_0>:
100500b8:	20000838 	.word	0x20000838

100500bc <__arm_cp.15_1>:
100500bc:	200008a8 	.word	0x200008a8

100500c0 <BLE_STACK_Tick>:
100500c0:	b580      	push	{r7, lr}
100500c2:	f015 f881 	bl	100651c8 <tsk_scheduler>
100500c6:	bd80      	pop	{r7, pc}

100500c8 <BlueNRG_Stack_Initialize_Layers>:
100500c8:	b5f0      	push	{r4, r5, r6, r7, lr}
100500ca:	b08f      	sub	sp, #60	@ 0x3c
100500cc:	9309      	str	r3, [sp, #36]	@ 0x24
100500ce:	920b      	str	r2, [sp, #44]	@ 0x2c
100500d0:	910a      	str	r1, [sp, #40]	@ 0x28
100500d2:	9008      	str	r0, [sp, #32]
100500d4:	f012 fe96 	bl	10062e04 <csmem_init>
100500d8:	2401      	movs	r4, #1
100500da:	2138      	movs	r1, #56	@ 0x38
100500dc:	4620      	mov	r0, r4
100500de:	f012 fea9 	bl	10062e34 <csmem_mem_0_assign>
100500e2:	4933      	ldr	r1, [pc, #204]	@ (100501b0 <__arm_cp.1_0>)
100500e4:	7ac9      	ldrb	r1, [r1, #11]
100500e6:	2234      	movs	r2, #52	@ 0x34
100500e8:	5481      	strb	r1, [r0, r2]
100500ea:	4e32      	ldr	r6, [pc, #200]	@ (100501b4 <__arm_cp.1_1>)
100500ec:	6030      	str	r0, [r6, #0]
100500ee:	2700      	movs	r7, #0
100500f0:	7007      	strb	r7, [r0, #0]
100500f2:	6830      	ldr	r0, [r6, #0]
100500f4:	7047      	strb	r7, [r0, #1]
100500f6:	6830      	ldr	r0, [r6, #0]
100500f8:	7087      	strb	r7, [r0, #2]
100500fa:	6830      	ldr	r0, [r6, #0]
100500fc:	21e1      	movs	r1, #225	@ 0xe1
100500fe:	70c1      	strb	r1, [r0, #3]
10050100:	2005      	movs	r0, #5
10050102:	01c0      	lsls	r0, r0, #7
10050104:	6831      	ldr	r1, [r6, #0]
10050106:	8088      	strh	r0, [r1, #4]
10050108:	2030      	movs	r0, #48	@ 0x30
1005010a:	8508      	strh	r0, [r1, #40]	@ 0x28
1005010c:	ad0e      	add	r5, sp, #56	@ 0x38
1005010e:	a90d      	add	r1, sp, #52	@ 0x34
10050110:	aa0c      	add	r2, sp, #48	@ 0x30
10050112:	4628      	mov	r0, r5
10050114:	f7f4 fc77 	bl	10044a06 <BLEPLAT_GetPartInfo>
10050118:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005011a:	0200      	lsls	r0, r0, #8
1005011c:	7829      	ldrb	r1, [r5, #0]
1005011e:	0109      	lsls	r1, r1, #4
10050120:	4301      	orrs	r1, r0
10050122:	980d      	ldr	r0, [sp, #52]	@ 0x34
10050124:	0300      	lsls	r0, r0, #12
10050126:	4308      	orrs	r0, r1
10050128:	1d00      	adds	r0, r0, #4
1005012a:	6831      	ldr	r1, [r6, #0]
1005012c:	8548      	strh	r0, [r1, #42]	@ 0x2a
1005012e:	2118      	movs	r1, #24
10050130:	4620      	mov	r0, r4
10050132:	f012 fe7f 	bl	10062e34 <csmem_mem_0_assign>
10050136:	4920      	ldr	r1, [pc, #128]	@ (100501b8 <__arm_cp.1_2>)
10050138:	6008      	str	r0, [r1, #0]
1005013a:	7507      	strb	r7, [r0, #20]
1005013c:	f015 f83a 	bl	100651b4 <tsk_init>
10050140:	981c      	ldr	r0, [sp, #112]	@ 0x70
10050142:	9006      	str	r0, [sp, #24]
10050144:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
10050146:	9405      	str	r4, [sp, #20]
10050148:	981a      	ldr	r0, [sp, #104]	@ 0x68
1005014a:	9004      	str	r0, [sp, #16]
1005014c:	9819      	ldr	r0, [sp, #100]	@ 0x64
1005014e:	9003      	str	r0, [sp, #12]
10050150:	9818      	ldr	r0, [sp, #96]	@ 0x60
10050152:	9002      	str	r0, [sp, #8]
10050154:	9817      	ldr	r0, [sp, #92]	@ 0x5c
10050156:	9001      	str	r0, [sp, #4]
10050158:	9d15      	ldr	r5, [sp, #84]	@ 0x54
1005015a:	9500      	str	r5, [sp, #0]
1005015c:	9808      	ldr	r0, [sp, #32]
1005015e:	990a      	ldr	r1, [sp, #40]	@ 0x28
10050160:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10050162:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10050164:	f7fe fe8d 	bl	1004ee82 <LL_init_ucfg>
10050168:	f7fe fa71 	bl	1004e64e <MBM_init_ucfg>
1005016c:	9f1d      	ldr	r7, [sp, #116]	@ 0x74
1005016e:	2c01      	cmp	r4, #1
10050170:	d101      	bne.n	10050176 <BlueNRG_Stack_Initialize_Layers+0xae>
10050172:	f7fe f994 	bl	1004e49e <ACL_pkt_init_ucfg>
10050176:	f000 f989 	bl	1005048c <Events_Process_init>
1005017a:	2f01      	cmp	r7, #1
1005017c:	d101      	bne.n	10050182 <BlueNRG_Stack_Initialize_Layers+0xba>
1005017e:	f000 f8ba 	bl	100502f6 <log_init_ucfg_weak>
10050182:	6830      	ldr	r0, [r6, #0]
10050184:	212c      	movs	r1, #44	@ 0x2c
10050186:	5c40      	ldrb	r0, [r0, r1]
10050188:	07c0      	lsls	r0, r0, #31
1005018a:	d10e      	bne.n	100501aa <BlueNRG_Stack_Initialize_Layers+0xe2>
1005018c:	2c01      	cmp	r4, #1
1005018e:	d106      	bne.n	1005019e <BlueNRG_Stack_Initialize_Layers+0xd6>
10050190:	9816      	ldr	r0, [sp, #88]	@ 0x58
10050192:	f7fe fa64 	bl	1004e65e <L2C_init_ucfg>
10050196:	f7fe ff03 	bl	1004efa0 <smp_init_ucfg>
1005019a:	f7fe ff08 	bl	1004efae <GAT_att_cmn_init_ucfg>
1005019e:	980a      	ldr	r0, [sp, #40]	@ 0x28
100501a0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100501a2:	462a      	mov	r2, r5
100501a4:	4623      	mov	r3, r4
100501a6:	f001 fb6d 	bl	10051884 <GAP_init_context>
100501aa:	b00f      	add	sp, #60	@ 0x3c
100501ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
100501ae:	46c0      	nop			@ (mov r8, r8)

100501b0 <__arm_cp.1_0>:
100501b0:	200008a8 	.word	0x200008a8

100501b4 <__arm_cp.1_1>:
100501b4:	2000083c 	.word	0x2000083c

100501b8 <__arm_cp.1_2>:
100501b8:	200008e8 	.word	0x200008e8

100501bc <_BlueNRG_Stack_Initialization>:
100501bc:	b5f0      	push	{r4, r5, r6, r7, lr}
100501be:	b095      	sub	sp, #84	@ 0x54
100501c0:	2001      	movs	r0, #1
100501c2:	0481      	lsls	r1, r0, #18
100501c4:	9114      	str	r1, [sp, #80]	@ 0x50
100501c6:	482e      	ldr	r0, [pc, #184]	@ (10050280 <__arm_cp.2_0>)
100501c8:	6001      	str	r1, [r0, #0]
100501ca:	f3bf 8f4f 	dsb	sy
100501ce:	f3bf 8f6f 	isb	sy
100501d2:	f7f5 fcf4 	bl	10045bbe <BLEPLAT_CNTR_GlobDisableBlue>
100501d6:	f7f4 fd1a 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100501da:	2000      	movs	r0, #0
100501dc:	9012      	str	r0, [sp, #72]	@ 0x48
100501de:	43c0      	mvns	r0, r0
100501e0:	f7f5 fcd1 	bl	10045b86 <BLEPLAT_CNTR_ClearInterrupt>
100501e4:	f005 f950 	bl	10055488 <data_length_extension_csr_ucfg_weak>
100501e8:	9013      	str	r0, [sp, #76]	@ 0x4c
100501ea:	f005 fa1b 	bl	10055624 <phy_upd_csr_ucfg_weak>
100501ee:	9011      	str	r0, [sp, #68]	@ 0x44
100501f0:	f7fe fe3f 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
100501f4:	9010      	str	r0, [sp, #64]	@ 0x40
100501f6:	f008 fff6 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
100501fa:	900f      	str	r0, [sp, #60]	@ 0x3c
100501fc:	f014 fddc 	bl	10064db8 <secure_connections_csr_ucfg_weak>
10050200:	f7fe f93d 	bl	1004e47e <scan_csr_ucfg>
10050204:	900e      	str	r0, [sp, #56]	@ 0x38
10050206:	f005 fbf5 	bl	100559f4 <l2c_cos_csr_ucfg_weak>
1005020a:	900d      	str	r0, [sp, #52]	@ 0x34
1005020c:	f7fe fa9c 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
10050210:	900c      	str	r0, [sp, #48]	@ 0x30
10050212:	f7fe faf8 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
10050216:	900b      	str	r0, [sp, #44]	@ 0x2c
10050218:	f004 ff84 	bl	10055124 <cte_csr_ucfg_weak>
1005021c:	4604      	mov	r4, r0
1005021e:	f005 f9ff 	bl	10055620 <pcl_csr_ucfg_weak>
10050222:	4605      	mov	r5, r0
10050224:	f7fe f933 	bl	1004e48e <conn_supp_csr_ucfg>
10050228:	4606      	mov	r6, r0
1005022a:	f004 fe5d 	bl	10054ee8 <chc_csr_ucfg_weak>
1005022e:	4607      	mov	r7, r0
10050230:	f000 f864 	bl	100502fc <log_csr_ucfg_weak>
10050234:	b2c0      	uxtb	r0, r0
10050236:	b2f9      	uxtb	r1, r7
10050238:	9108      	str	r1, [sp, #32]
1005023a:	9009      	str	r0, [sp, #36]	@ 0x24
1005023c:	b2f0      	uxtb	r0, r6
1005023e:	b2e9      	uxtb	r1, r5
10050240:	b2e2      	uxtb	r2, r4
10050242:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10050244:	b2db      	uxtb	r3, r3
10050246:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
10050248:	b2e4      	uxtb	r4, r4
1005024a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
1005024c:	b2ed      	uxtb	r5, r5
1005024e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
10050250:	b2f6      	uxtb	r6, r6
10050252:	9f12      	ldr	r7, [sp, #72]	@ 0x48
10050254:	9700      	str	r7, [sp, #0]
10050256:	9601      	str	r6, [sp, #4]
10050258:	9502      	str	r5, [sp, #8]
1005025a:	9403      	str	r4, [sp, #12]
1005025c:	9304      	str	r3, [sp, #16]
1005025e:	9205      	str	r2, [sp, #20]
10050260:	9106      	str	r1, [sp, #24]
10050262:	9007      	str	r0, [sp, #28]
10050264:	9813      	ldr	r0, [sp, #76]	@ 0x4c
10050266:	b2c0      	uxtb	r0, r0
10050268:	9911      	ldr	r1, [sp, #68]	@ 0x44
1005026a:	b2c9      	uxtb	r1, r1
1005026c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
1005026e:	b2d3      	uxtb	r3, r2
10050270:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10050272:	f7ff ff29 	bl	100500c8 <BlueNRG_Stack_Initialize_Layers>
10050276:	4803      	ldr	r0, [pc, #12]	@ (10050284 <__arm_cp.2_1>)
10050278:	9914      	ldr	r1, [sp, #80]	@ 0x50
1005027a:	6001      	str	r1, [r0, #0]
1005027c:	b015      	add	sp, #84	@ 0x54
1005027e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10050280 <__arm_cp.2_0>:
10050280:	e000e180 	.word	0xe000e180

10050284 <__arm_cp.2_1>:
10050284:	e000e100 	.word	0xe000e100

10050288 <BLE_STACK_Init>:
10050288:	b5b0      	push	{r4, r5, r7, lr}
1005028a:	4605      	mov	r5, r0
1005028c:	7ac0      	ldrb	r0, [r0, #11]
1005028e:	2412      	movs	r4, #18
10050290:	2880      	cmp	r0, #128	@ 0x80
10050292:	d829      	bhi.n	100502e8 <BLE_STACK_Init+0x60>
10050294:	8c29      	ldrh	r1, [r5, #32]
10050296:	2917      	cmp	r1, #23
10050298:	d326      	bcc.n	100502e8 <BLE_STACK_Init+0x60>
1005029a:	4814      	ldr	r0, [pc, #80]	@ (100502ec <__arm_cp.3_0>)
1005029c:	1d82      	adds	r2, r0, #6
1005029e:	4291      	cmp	r1, r2
100502a0:	d822      	bhi.n	100502e8 <BLE_STACK_Init+0x60>
100502a2:	8a29      	ldrh	r1, [r5, #16]
100502a4:	2917      	cmp	r1, #23
100502a6:	d31f      	bcc.n	100502e8 <BLE_STACK_Init+0x60>
100502a8:	4281      	cmp	r1, r0
100502aa:	d81d      	bhi.n	100502e8 <BLE_STACK_Init+0x60>
100502ac:	7ea8      	ldrb	r0, [r5, #26]
100502ae:	2800      	cmp	r0, #0
100502b0:	d01a      	beq.n	100502e8 <BLE_STACK_Init+0x60>
100502b2:	f7fe faa8 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
100502b6:	2800      	cmp	r0, #0
100502b8:	d008      	beq.n	100502cc <BLE_STACK_Init+0x44>
100502ba:	7ee8      	ldrb	r0, [r5, #27]
100502bc:	2800      	cmp	r0, #0
100502be:	d013      	beq.n	100502e8 <BLE_STACK_Init+0x60>
100502c0:	2880      	cmp	r0, #128	@ 0x80
100502c2:	d811      	bhi.n	100502e8 <BLE_STACK_Init+0x60>
100502c4:	7f28      	ldrb	r0, [r5, #28]
100502c6:	1e40      	subs	r0, r0, #1
100502c8:	280e      	cmp	r0, #14
100502ca:	d80d      	bhi.n	100502e8 <BLE_STACK_Init+0x60>
100502cc:	4808      	ldr	r0, [pc, #32]	@ (100502f0 <__arm_cp.3_1>)
100502ce:	2234      	movs	r2, #52	@ 0x34
100502d0:	4629      	mov	r1, r5
100502d2:	f7f4 fb67 	bl	100449a4 <BLEPLAT_MemCpy>
100502d6:	f012 ff47 	bl	10063168 <BlueNRG_Stack_Initialize_RAM_check>
100502da:	2800      	cmp	r0, #0
100502dc:	d403      	bmi.n	100502e6 <BLE_STACK_Init+0x5e>
100502de:	f7ff ff6d 	bl	100501bc <_BlueNRG_Stack_Initialization>
100502e2:	2400      	movs	r4, #0
100502e4:	e000      	b.n	100502e8 <BLE_STACK_Init+0x60>
100502e6:	2487      	movs	r4, #135	@ 0x87
100502e8:	4620      	mov	r0, r4
100502ea:	bdb0      	pop	{r4, r5, r7, pc}

100502ec <__arm_cp.3_0>:
100502ec:	000003fa 	.word	0x000003fa

100502f0 <__arm_cp.3_1>:
100502f0:	200008a8 	.word	0x200008a8

100502f4 <log_verbosity_get_ucfg_weak>:
100502f4:	4770      	bx	lr

100502f6 <log_init_ucfg_weak>:
100502f6:	4770      	bx	lr

100502f8 <log_notify_stu_ucfg_weak>:
100502f8:	4770      	bx	lr

100502fa <log_notify_us_flush_ucfg_weak>:
100502fa:	4770      	bx	lr

100502fc <log_csr_ucfg_weak>:
100502fc:	2000      	movs	r0, #0
100502fe:	4770      	bx	lr

10050300 <aci_event_fifo_push_header>:
10050300:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10050302:	4615      	mov	r5, r2
10050304:	460c      	mov	r4, r1
10050306:	4606      	mov	r6, r0
10050308:	0608      	lsls	r0, r1, #24
1005030a:	d414      	bmi.n	10050336 <aci_event_fifo_push_header+0x36>
1005030c:	aa02      	add	r2, sp, #8
1005030e:	af01      	add	r7, sp, #4
10050310:	4630      	mov	r0, r6
10050312:	4619      	mov	r1, r3
10050314:	463b      	mov	r3, r7
10050316:	f000 f853 	bl	100503c0 <fifoBuf_getFreeHeader>
1005031a:	2800      	cmp	r0, #0
1005031c:	d021      	beq.n	10050362 <aci_event_fifo_push_header+0x62>
1005031e:	0660      	lsls	r0, r4, #25
10050320:	d438      	bmi.n	10050394 <aci_event_fifo_push_header+0x94>
10050322:	9802      	ldr	r0, [sp, #8]
10050324:	7881      	ldrb	r1, [r0, #2]
10050326:	22fc      	movs	r2, #252	@ 0xfc
10050328:	400a      	ands	r2, r1
1005032a:	7082      	strb	r2, [r0, #2]
1005032c:	9901      	ldr	r1, [sp, #4]
1005032e:	8001      	strh	r1, [r0, #0]
10050330:	8071      	strh	r1, [r6, #2]
10050332:	2701      	movs	r7, #1
10050334:	e02f      	b.n	10050396 <aci_event_fifo_push_header+0x96>
10050336:	f3ef 8010 	mrs	r0, PRIMASK
1005033a:	b672      	cpsid	i
1005033c:	aa02      	add	r2, sp, #8
1005033e:	af01      	add	r7, sp, #4
10050340:	4630      	mov	r0, r6
10050342:	4619      	mov	r1, r3
10050344:	463b      	mov	r3, r7
10050346:	f000 f83b 	bl	100503c0 <fifoBuf_getFreeHeader>
1005034a:	2800      	cmp	r0, #0
1005034c:	d00b      	beq.n	10050366 <aci_event_fifo_push_header+0x66>
1005034e:	9902      	ldr	r1, [sp, #8]
10050350:	788a      	ldrb	r2, [r1, #2]
10050352:	23fc      	movs	r3, #252	@ 0xfc
10050354:	4013      	ands	r3, r2
10050356:	708b      	strb	r3, [r1, #2]
10050358:	9a01      	ldr	r2, [sp, #4]
1005035a:	800a      	strh	r2, [r1, #0]
1005035c:	8072      	strh	r2, [r6, #2]
1005035e:	2701      	movs	r7, #1
10050360:	e002      	b.n	10050368 <aci_event_fifo_push_header+0x68>
10050362:	2700      	movs	r7, #0
10050364:	e003      	b.n	1005036e <aci_event_fifo_push_header+0x6e>
10050366:	2700      	movs	r7, #0
10050368:	b662      	cpsie	i
1005036a:	2800      	cmp	r0, #0
1005036c:	d113      	bne.n	10050396 <aci_event_fifo_push_header+0x96>
1005036e:	f3ef 8010 	mrs	r0, PRIMASK
10050372:	b672      	cpsid	i
10050374:	06a0      	lsls	r0, r4, #26
10050376:	d40a      	bmi.n	1005038e <aci_event_fifo_push_header+0x8e>
10050378:	4810      	ldr	r0, [pc, #64]	@ (100503bc <__arm_cp.0_0>)
1005037a:	6800      	ldr	r0, [r0, #0]
1005037c:	6801      	ldr	r1, [r0, #0]
1005037e:	2208      	movs	r2, #8
10050380:	430a      	orrs	r2, r1
10050382:	6002      	str	r2, [r0, #0]
10050384:	2000      	movs	r0, #0
10050386:	f014 ff53 	bl	10065230 <tsk_notify_idx>
1005038a:	f7f2 faa4 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005038e:	b662      	cpsie	i
10050390:	2600      	movs	r6, #0
10050392:	e00a      	b.n	100503aa <aci_event_fifo_push_header+0xaa>
10050394:	2700      	movs	r7, #0
10050396:	9e02      	ldr	r6, [sp, #8]
10050398:	70f5      	strb	r5, [r6, #3]
1005039a:	00a0      	lsls	r0, r4, #2
1005039c:	2160      	movs	r1, #96	@ 0x60
1005039e:	4001      	ands	r1, r0
100503a0:	78b0      	ldrb	r0, [r6, #2]
100503a2:	2203      	movs	r2, #3
100503a4:	4002      	ands	r2, r0
100503a6:	1850      	adds	r0, r2, r1
100503a8:	70b0      	strb	r0, [r6, #2]
100503aa:	2f00      	cmp	r7, #0
100503ac:	d004      	beq.n	100503b8 <aci_event_fifo_push_header+0xb8>
100503ae:	2000      	movs	r0, #0
100503b0:	f014 ff3e 	bl	10065230 <tsk_notify_idx>
100503b4:	f7f2 fa8f 	bl	100428d6 <BLE_STACK_ProcessRequest>
100503b8:	4630      	mov	r0, r6
100503ba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100503bc <__arm_cp.0_0>:
100503bc:	20000840 	.word	0x20000840

100503c0 <fifoBuf_getFreeHeader>:
100503c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100503c2:	9200      	str	r2, [sp, #0]
100503c4:	8845      	ldrh	r5, [r0, #2]
100503c6:	08ac      	lsrs	r4, r5, #2
100503c8:	801c      	strh	r4, [r3, #0]
100503ca:	1c49      	adds	r1, r1, #1
100503cc:	b28a      	uxth	r2, r1
100503ce:	18a6      	adds	r6, r4, r2
100503d0:	8887      	ldrh	r7, [r0, #4]
100503d2:	42be      	cmp	r6, r7
100503d4:	d900      	bls.n	100503d8 <fifoBuf_getFreeHeader+0x18>
100503d6:	1b09      	subs	r1, r1, r4
100503d8:	190a      	adds	r2, r1, r4
100503da:	0092      	lsls	r2, r2, #2
100503dc:	42be      	cmp	r6, r7
100503de:	d900      	bls.n	100503e2 <fifoBuf_getFreeHeader+0x22>
100503e0:	1c6d      	adds	r5, r5, #1
100503e2:	2603      	movs	r6, #3
100503e4:	4035      	ands	r5, r6
100503e6:	1952      	adds	r2, r2, r5
100503e8:	801a      	strh	r2, [r3, #0]
100503ea:	00a3      	lsls	r3, r4, #2
100503ec:	181b      	adds	r3, r3, r0
100503ee:	3308      	adds	r3, #8
100503f0:	9c00      	ldr	r4, [sp, #0]
100503f2:	6023      	str	r3, [r4, #0]
100503f4:	b292      	uxth	r2, r2
100503f6:	8805      	ldrh	r5, [r0, #0]
100503f8:	1b52      	subs	r2, r2, r5
100503fa:	4617      	mov	r7, r2
100503fc:	4037      	ands	r7, r6
100503fe:	8884      	ldrh	r4, [r0, #4]
10050400:	4367      	muls	r7, r4
10050402:	4035      	ands	r5, r6
10050404:	1952      	adds	r2, r2, r5
10050406:	0892      	lsrs	r2, r2, #2
10050408:	19d2      	adds	r2, r2, r7
1005040a:	b295      	uxth	r5, r2
1005040c:	88c6      	ldrh	r6, [r0, #6]
1005040e:	42b5      	cmp	r5, r6
10050410:	d900      	bls.n	10050414 <fifoBuf_getFreeHeader+0x54>
10050412:	80c2      	strh	r2, [r0, #6]
10050414:	42a5      	cmp	r5, r4
10050416:	d80a      	bhi.n	1005042e <fifoBuf_getFreeHeader+0x6e>
10050418:	b209      	sxth	r1, r1
1005041a:	2900      	cmp	r1, #0
1005041c:	d507      	bpl.n	1005042e <fifoBuf_getFreeHeader+0x6e>
1005041e:	7899      	ldrb	r1, [r3, #2]
10050420:	22fc      	movs	r2, #252	@ 0xfc
10050422:	400a      	ands	r2, r1
10050424:	1c51      	adds	r1, r2, #1
10050426:	7099      	strb	r1, [r3, #2]
10050428:	3008      	adds	r0, #8
1005042a:	9900      	ldr	r1, [sp, #0]
1005042c:	6008      	str	r0, [r1, #0]
1005042e:	42a5      	cmp	r5, r4
10050430:	d901      	bls.n	10050436 <fifoBuf_getFreeHeader+0x76>
10050432:	2000      	movs	r0, #0
10050434:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10050436:	2001      	movs	r0, #1
10050438:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005043a <aci_event_fifo_push>:
1005043a:	b580      	push	{r7, lr}
1005043c:	0640      	lsls	r0, r0, #25
1005043e:	d405      	bmi.n	1005044c <aci_event_fifo_push+0x12>
10050440:	7888      	ldrb	r0, [r1, #2]
10050442:	22fc      	movs	r2, #252	@ 0xfc
10050444:	4002      	ands	r2, r0
10050446:	1c90      	adds	r0, r2, #2
10050448:	7088      	strb	r0, [r1, #2]
1005044a:	bd80      	pop	{r7, pc}
1005044c:	4608      	mov	r0, r1
1005044e:	f000 f801 	bl	10050454 <event_notify_cb>
10050452:	bd80      	pop	{r7, pc}

10050454 <event_notify_cb>:
10050454:	b580      	push	{r7, lr}
10050456:	1d01      	adds	r1, r0, #4
10050458:	78c2      	ldrb	r2, [r0, #3]
1005045a:	2a14      	cmp	r2, #20
1005045c:	d804      	bhi.n	10050468 <event_notify_cb+0x14>
1005045e:	6842      	ldr	r2, [r0, #4]
10050460:	7880      	ldrb	r0, [r0, #2]
10050462:	0880      	lsrs	r0, r0, #2
10050464:	4790      	blx	r2
10050466:	bd80      	pop	{r7, pc}
10050468:	2a3d      	cmp	r2, #61	@ 0x3d
1005046a:	d803      	bhi.n	10050474 <event_notify_cb+0x20>
1005046c:	2000      	movs	r0, #0
1005046e:	f000 f8e9 	bl	10050644 <hci_event_notify_cb>
10050472:	bd80      	pop	{r7, pc}
10050474:	2a3f      	cmp	r2, #63	@ 0x3f
10050476:	d803      	bhi.n	10050480 <event_notify_cb+0x2c>
10050478:	2000      	movs	r0, #0
1005047a:	f000 f8f5 	bl	10050668 <hci_rx_data_notify_cb>
1005047e:	bd80      	pop	{r7, pc}
10050480:	2a60      	cmp	r2, #96	@ 0x60
10050482:	d802      	bhi.n	1005048a <event_notify_cb+0x36>
10050484:	2000      	movs	r0, #0
10050486:	f000 f8e4 	bl	10050652 <hci_aci_event_notify_cb>
1005048a:	bd80      	pop	{r7, pc}

1005048c <Events_Process_init>:
1005048c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005048e:	2001      	movs	r0, #1
10050490:	211c      	movs	r1, #28
10050492:	4a29      	ldr	r2, [pc, #164]	@ (10050538 <__arm_cp.7_0>)
10050494:	4790      	blx	r2
10050496:	4f29      	ldr	r7, [pc, #164]	@ (1005053c <__arm_cp.7_1>)
10050498:	6038      	str	r0, [r7, #0]
1005049a:	4d29      	ldr	r5, [pc, #164]	@ (10050540 <__arm_cp.7_2>)
1005049c:	8da8      	ldrh	r0, [r5, #44]	@ 0x2c
1005049e:	1e40      	subs	r0, r0, #1
100504a0:	2603      	movs	r6, #3
100504a2:	4330      	orrs	r0, r6
100504a4:	1c40      	adds	r0, r0, #1
100504a6:	0880      	lsrs	r0, r0, #2
100504a8:	1cc0      	adds	r0, r0, #3
100504aa:	2404      	movs	r4, #4
100504ac:	4621      	mov	r1, r4
100504ae:	4a22      	ldr	r2, [pc, #136]	@ (10050538 <__arm_cp.7_0>)
100504b0:	4790      	blx	r2
100504b2:	6839      	ldr	r1, [r7, #0]
100504b4:	6048      	str	r0, [r1, #4]
100504b6:	8de8      	ldrh	r0, [r5, #46]	@ 0x2e
100504b8:	1e40      	subs	r0, r0, #1
100504ba:	4330      	orrs	r0, r6
100504bc:	1c40      	adds	r0, r0, #1
100504be:	0880      	lsrs	r0, r0, #2
100504c0:	1cc0      	adds	r0, r0, #3
100504c2:	4621      	mov	r1, r4
100504c4:	4d1c      	ldr	r5, [pc, #112]	@ (10050538 <__arm_cp.7_0>)
100504c6:	47a8      	blx	r5
100504c8:	462a      	mov	r2, r5
100504ca:	6839      	ldr	r1, [r7, #0]
100504cc:	6088      	str	r0, [r1, #8]
100504ce:	4d1c      	ldr	r5, [pc, #112]	@ (10050540 <__arm_cp.7_2>)
100504d0:	8e28      	ldrh	r0, [r5, #48]	@ 0x30
100504d2:	1e40      	subs	r0, r0, #1
100504d4:	4330      	orrs	r0, r6
100504d6:	1c40      	adds	r0, r0, #1
100504d8:	0880      	lsrs	r0, r0, #2
100504da:	1cc0      	adds	r0, r0, #3
100504dc:	4621      	mov	r1, r4
100504de:	4790      	blx	r2
100504e0:	6839      	ldr	r1, [r7, #0]
100504e2:	60c8      	str	r0, [r1, #12]
100504e4:	f7ff fc14 	bl	1004fd10 <hal_radio_activity_state_init>
100504e8:	6838      	ldr	r0, [r7, #0]
100504ea:	6842      	ldr	r2, [r0, #4]
100504ec:	2100      	movs	r1, #0
100504ee:	8011      	strh	r1, [r2, #0]
100504f0:	8051      	strh	r1, [r2, #2]
100504f2:	6883      	ldr	r3, [r0, #8]
100504f4:	8019      	strh	r1, [r3, #0]
100504f6:	80d1      	strh	r1, [r2, #6]
100504f8:	8daf      	ldrh	r7, [r5, #44]	@ 0x2c
100504fa:	1e7f      	subs	r7, r7, #1
100504fc:	4337      	orrs	r7, r6
100504fe:	1c7f      	adds	r7, r7, #1
10050500:	08bf      	lsrs	r7, r7, #2
10050502:	8097      	strh	r7, [r2, #4]
10050504:	8059      	strh	r1, [r3, #2]
10050506:	80d9      	strh	r1, [r3, #6]
10050508:	8def      	ldrh	r7, [r5, #46]	@ 0x2e
1005050a:	1e7f      	subs	r7, r7, #1
1005050c:	4337      	orrs	r7, r6
1005050e:	1c7f      	adds	r7, r7, #1
10050510:	08bf      	lsrs	r7, r7, #2
10050512:	809f      	strh	r7, [r3, #4]
10050514:	68c7      	ldr	r7, [r0, #12]
10050516:	8039      	strh	r1, [r7, #0]
10050518:	6102      	str	r2, [r0, #16]
1005051a:	6143      	str	r3, [r0, #20]
1005051c:	80f9      	strh	r1, [r7, #6]
1005051e:	8e2a      	ldrh	r2, [r5, #48]	@ 0x30
10050520:	1e52      	subs	r2, r2, #1
10050522:	4332      	orrs	r2, r6
10050524:	1c52      	adds	r2, r2, #1
10050526:	0892      	lsrs	r2, r2, #2
10050528:	80ba      	strh	r2, [r7, #4]
1005052a:	8079      	strh	r1, [r7, #2]
1005052c:	6187      	str	r7, [r0, #24]
1005052e:	4622      	mov	r2, r4
10050530:	f7f4 fa48 	bl	100449c4 <BLEPLAT_MemSet>
10050534:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10050536:	46c0      	nop			@ (mov r8, r8)

10050538 <__arm_cp.7_0>:
10050538:	10062e35 	.word	0x10062e35

1005053c <__arm_cp.7_1>:
1005053c:	20000840 	.word	0x20000840

10050540 <__arm_cp.7_2>:
10050540:	200008a8 	.word	0x200008a8

10050544 <Events_Process_Q>:
10050544:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10050546:	4d3d      	ldr	r5, [pc, #244]	@ (1005063c <__arm_cp.8_0>)
10050548:	6828      	ldr	r0, [r5, #0]
1005054a:	3010      	adds	r0, #16
1005054c:	2100      	movs	r1, #0
1005054e:	2906      	cmp	r1, #6
10050550:	d005      	beq.n	1005055e <Events_Process_Q+0x1a>
10050552:	c804      	ldmia	r0!, {r2}
10050554:	8852      	ldrh	r2, [r2, #2]
10050556:	ab01      	add	r3, sp, #4
10050558:	525a      	strh	r2, [r3, r1]
1005055a:	1c89      	adds	r1, r1, #2
1005055c:	e7f7      	b.n	1005054e <Events_Process_Q+0xa>
1005055e:	f3ef 8010 	mrs	r0, PRIMASK
10050562:	b672      	cpsid	i
10050564:	6828      	ldr	r0, [r5, #0]
10050566:	6804      	ldr	r4, [r0, #0]
10050568:	2700      	movs	r7, #0
1005056a:	6007      	str	r7, [r0, #0]
1005056c:	b662      	cpsie	i
1005056e:	07e0      	lsls	r0, r4, #31
10050570:	d002      	beq.n	10050578 <Events_Process_Q+0x34>
10050572:	2000      	movs	r0, #0
10050574:	f000 fd68 	bl	10051048 <hci_hardware_error_event_cb>
10050578:	07a0      	lsls	r0, r4, #30
1005057a:	d502      	bpl.n	10050582 <Events_Process_Q+0x3e>
1005057c:	2001      	movs	r0, #1
1005057e:	f000 fd63 	bl	10051048 <hci_hardware_error_event_cb>
10050582:	0760      	lsls	r0, r4, #29
10050584:	d502      	bpl.n	1005058c <Events_Process_Q+0x48>
10050586:	2002      	movs	r0, #2
10050588:	f000 fd5e 	bl	10051048 <hci_hardware_error_event_cb>
1005058c:	0720      	lsls	r0, r4, #28
1005058e:	d502      	bpl.n	10050596 <Events_Process_Q+0x52>
10050590:	2003      	movs	r0, #3
10050592:	f000 fd59 	bl	10051048 <hci_hardware_error_event_cb>
10050596:	06e0      	lsls	r0, r4, #27
10050598:	d54a      	bpl.n	10050630 <Events_Process_Q+0xec>
1005059a:	2004      	movs	r0, #4
1005059c:	f000 fd54 	bl	10051048 <hci_hardware_error_event_cb>
100505a0:	e046      	b.n	10050630 <Events_Process_Q+0xec>
100505a2:	0078      	lsls	r0, r7, #1
100505a4:	a901      	add	r1, sp, #4
100505a6:	5a0e      	ldrh	r6, [r1, r0]
100505a8:	9700      	str	r7, [sp, #0]
100505aa:	00bf      	lsls	r7, r7, #2
100505ac:	6828      	ldr	r0, [r5, #0]
100505ae:	19c0      	adds	r0, r0, r7
100505b0:	6900      	ldr	r0, [r0, #16]
100505b2:	8801      	ldrh	r1, [r0, #0]
100505b4:	8802      	ldrh	r2, [r0, #0]
100505b6:	42b2      	cmp	r2, r6
100505b8:	d02a      	beq.n	10050610 <Events_Process_Q+0xcc>
100505ba:	0889      	lsrs	r1, r1, #2
100505bc:	1c89      	adds	r1, r1, #2
100505be:	0089      	lsls	r1, r1, #2
100505c0:	1844      	adds	r4, r0, r1
100505c2:	78a1      	ldrb	r1, [r4, #2]
100505c4:	2203      	movs	r2, #3
100505c6:	400a      	ands	r2, r1
100505c8:	2a01      	cmp	r2, #1
100505ca:	d002      	beq.n	100505d2 <Events_Process_Q+0x8e>
100505cc:	2a00      	cmp	r2, #0
100505ce:	d103      	bne.n	100505d8 <Events_Process_Q+0x94>
100505d0:	e01e      	b.n	10050610 <Events_Process_Q+0xcc>
100505d2:	7a81      	ldrb	r1, [r0, #10]
100505d4:	3008      	adds	r0, #8
100505d6:	4604      	mov	r4, r0
100505d8:	0648      	lsls	r0, r1, #25
100505da:	d403      	bmi.n	100505e4 <Events_Process_Q+0xa0>
100505dc:	4620      	mov	r0, r4
100505de:	f7ff ff39 	bl	10050454 <event_notify_cb>
100505e2:	e00a      	b.n	100505fa <Events_Process_Q+0xb6>
100505e4:	78e0      	ldrb	r0, [r4, #3]
100505e6:	2813      	cmp	r0, #19
100505e8:	d207      	bcs.n	100505fa <Events_Process_Q+0xb6>
100505ea:	0080      	lsls	r0, r0, #2
100505ec:	4914      	ldr	r1, [pc, #80]	@ (10050640 <__arm_cp.8_1>)
100505ee:	580a      	ldr	r2, [r1, r0]
100505f0:	1d21      	adds	r1, r4, #4
100505f2:	4620      	mov	r0, r4
100505f4:	4790      	blx	r2
100505f6:	2800      	cmp	r0, #0
100505f8:	d105      	bne.n	10050606 <Events_Process_Q+0xc2>
100505fa:	6828      	ldr	r0, [r5, #0]
100505fc:	19c0      	adds	r0, r0, r7
100505fe:	6900      	ldr	r0, [r0, #16]
10050600:	8821      	ldrh	r1, [r4, #0]
10050602:	8001      	strh	r1, [r0, #0]
10050604:	e7d5      	b.n	100505b2 <Events_Process_Q+0x6e>
10050606:	2000      	movs	r0, #0
10050608:	f014 fe12 	bl	10065230 <tsk_notify_idx>
1005060c:	f7f2 f963 	bl	100428d6 <BLE_STACK_ProcessRequest>
10050610:	f3ef 8010 	mrs	r0, PRIMASK
10050614:	b672      	cpsid	i
10050616:	6828      	ldr	r0, [r5, #0]
10050618:	19c0      	adds	r0, r0, r7
1005061a:	6900      	ldr	r0, [r0, #16]
1005061c:	8841      	ldrh	r1, [r0, #2]
1005061e:	8802      	ldrh	r2, [r0, #0]
10050620:	4291      	cmp	r1, r2
10050622:	d102      	bne.n	1005062a <Events_Process_Q+0xe6>
10050624:	2100      	movs	r1, #0
10050626:	8001      	strh	r1, [r0, #0]
10050628:	8041      	strh	r1, [r0, #2]
1005062a:	b662      	cpsie	i
1005062c:	9f00      	ldr	r7, [sp, #0]
1005062e:	1c7f      	adds	r7, r7, #1
10050630:	2f03      	cmp	r7, #3
10050632:	d1b6      	bne.n	100505a2 <Events_Process_Q+0x5e>
10050634:	f7ff fb76 	bl	1004fd24 <hal_radio_activity_state_cb_check>
10050638:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005063a:	46c0      	nop			@ (mov r8, r8)

1005063c <__arm_cp.8_0>:
1005063c:	20000840 	.word	0x20000840

10050640 <__arm_cp.8_1>:
10050640:	1006e894 	.word	0x1006e894

10050644 <hci_event_notify_cb>:
10050644:	b580      	push	{r7, lr}
10050646:	4608      	mov	r0, r1
10050648:	7889      	ldrb	r1, [r1, #2]
1005064a:	1cc9      	adds	r1, r1, #3
1005064c:	f7fd fcbc 	bl	1004dfc8 <BLE_STACK_Event>
10050650:	bd80      	pop	{r7, pc}

10050652 <hci_aci_event_notify_cb>:
10050652:	b580      	push	{r7, lr}
10050654:	4608      	mov	r0, r1
10050656:	7889      	ldrb	r1, [r1, #2]
10050658:	78c2      	ldrb	r2, [r0, #3]
1005065a:	0212      	lsls	r2, r2, #8
1005065c:	1851      	adds	r1, r2, r1
1005065e:	1d09      	adds	r1, r1, #4
10050660:	b289      	uxth	r1, r1
10050662:	f7fd fcb1 	bl	1004dfc8 <BLE_STACK_Event>
10050666:	bd80      	pop	{r7, pc}

10050668 <hci_rx_data_notify_cb>:
10050668:	b580      	push	{r7, lr}
1005066a:	4608      	mov	r0, r1
1005066c:	78c9      	ldrb	r1, [r1, #3]
1005066e:	7902      	ldrb	r2, [r0, #4]
10050670:	0212      	lsls	r2, r2, #8
10050672:	1851      	adds	r1, r2, r1
10050674:	1d49      	adds	r1, r1, #5
10050676:	b289      	uxth	r1, r1
10050678:	f7fd fca6 	bl	1004dfc8 <BLE_STACK_Event>
1005067c:	bd80      	pop	{r7, pc}
	...

10050680 <hci_disconnection_complete_event_int_cb>:
10050680:	b5b0      	push	{r4, r5, r7, lr}
10050682:	460d      	mov	r5, r1
10050684:	4604      	mov	r4, r0
10050686:	7908      	ldrb	r0, [r1, #4]
10050688:	7949      	ldrb	r1, [r1, #5]
1005068a:	0209      	lsls	r1, r1, #8
1005068c:	1808      	adds	r0, r1, r0
1005068e:	f002 f883 	bl	10052798 <GAT_att_cmn_disconnection>
10050692:	7928      	ldrb	r0, [r5, #4]
10050694:	7969      	ldrb	r1, [r5, #5]
10050696:	0209      	lsls	r1, r1, #8
10050698:	1808      	adds	r0, r1, r0
1005069a:	f014 fb5f 	bl	10064d5c <smp_sap_hci_disconnection_complete_evt_hndl>
1005069e:	7928      	ldrb	r0, [r5, #4]
100506a0:	7969      	ldrb	r1, [r5, #5]
100506a2:	0209      	lsls	r1, r1, #8
100506a4:	1808      	adds	r0, r1, r0
100506a6:	f005 fc79 	bl	10055f9c <l2c_sap_hci_disconnection_complete_evt_hndl>
100506aa:	f001 fb41 	bl	10051d30 <GAP_hci_disconnection_complete_evt_hndl>
100506ae:	7928      	ldrb	r0, [r5, #4]
100506b0:	7969      	ldrb	r1, [r5, #5]
100506b2:	0209      	lsls	r1, r1, #8
100506b4:	1808      	adds	r0, r1, r0
100506b6:	f7ff fce1 	bl	1005007c <ACL_pkt_disconnection>
100506ba:	4808      	ldr	r0, [pc, #32]	@ (100506dc <__arm_cp.14_0>)
100506bc:	6800      	ldr	r0, [r0, #0]
100506be:	2136      	movs	r1, #54	@ 0x36
100506c0:	5c40      	ldrb	r0, [r0, r1]
100506c2:	06c0      	lsls	r0, r0, #27
100506c4:	d401      	bmi.n	100506ca <hci_disconnection_complete_event_int_cb+0x4a>
100506c6:	2000      	movs	r0, #0
100506c8:	bdb0      	pop	{r4, r5, r7, pc}
100506ca:	2015      	movs	r0, #21
100506cc:	70e0      	strb	r0, [r4, #3]
100506ce:	78a0      	ldrb	r0, [r4, #2]
100506d0:	21bf      	movs	r1, #191	@ 0xbf
100506d2:	4001      	ands	r1, r0
100506d4:	70a1      	strb	r1, [r4, #2]
100506d6:	2084      	movs	r0, #132	@ 0x84
100506d8:	bdb0      	pop	{r4, r5, r7, pc}
100506da:	46c0      	nop			@ (mov r8, r8)

100506dc <__arm_cp.14_0>:
100506dc:	20000894 	.word	0x20000894

100506e0 <hci_encryption_change_event_int_cb>:
100506e0:	b510      	push	{r4, lr}
100506e2:	4604      	mov	r4, r0
100506e4:	7908      	ldrb	r0, [r1, #4]
100506e6:	794a      	ldrb	r2, [r1, #5]
100506e8:	0212      	lsls	r2, r2, #8
100506ea:	1812      	adds	r2, r2, r0
100506ec:	78c9      	ldrb	r1, [r1, #3]
100506ee:	2006      	movs	r0, #6
100506f0:	f014 faba 	bl	10064c68 <smp_sap_hci_encryption_change_evt_hndl>
100506f4:	4807      	ldr	r0, [pc, #28]	@ (10050714 <__arm_cp.16_0>)
100506f6:	6800      	ldr	r0, [r0, #0]
100506f8:	2136      	movs	r1, #54	@ 0x36
100506fa:	5640      	ldrsb	r0, [r0, r1]
100506fc:	2800      	cmp	r0, #0
100506fe:	d401      	bmi.n	10050704 <hci_encryption_change_event_int_cb+0x24>
10050700:	2000      	movs	r0, #0
10050702:	bd10      	pop	{r4, pc}
10050704:	2016      	movs	r0, #22
10050706:	70e0      	strb	r0, [r4, #3]
10050708:	78a0      	ldrb	r0, [r4, #2]
1005070a:	21bf      	movs	r1, #191	@ 0xbf
1005070c:	4001      	ands	r1, r0
1005070e:	70a1      	strb	r1, [r4, #2]
10050710:	2084      	movs	r0, #132	@ 0x84
10050712:	bd10      	pop	{r4, pc}

10050714 <__arm_cp.16_0>:
10050714:	20000894 	.word	0x20000894

10050718 <hci_encryption_key_refresh_complete_event_int_cb>:
10050718:	b510      	push	{r4, lr}
1005071a:	4604      	mov	r4, r0
1005071c:	7908      	ldrb	r0, [r1, #4]
1005071e:	794a      	ldrb	r2, [r1, #5]
10050720:	0212      	lsls	r2, r2, #8
10050722:	1812      	adds	r2, r2, r0
10050724:	78c9      	ldrb	r1, [r1, #3]
10050726:	2007      	movs	r0, #7
10050728:	f014 fa9e 	bl	10064c68 <smp_sap_hci_encryption_change_evt_hndl>
1005072c:	4807      	ldr	r0, [pc, #28]	@ (1005074c <__arm_cp.18_0>)
1005072e:	6800      	ldr	r0, [r0, #0]
10050730:	213b      	movs	r1, #59	@ 0x3b
10050732:	5640      	ldrsb	r0, [r0, r1]
10050734:	2800      	cmp	r0, #0
10050736:	d401      	bmi.n	1005073c <hci_encryption_key_refresh_complete_event_int_cb+0x24>
10050738:	2000      	movs	r0, #0
1005073a:	bd10      	pop	{r4, pc}
1005073c:	2017      	movs	r0, #23
1005073e:	70e0      	strb	r0, [r4, #3]
10050740:	78a0      	ldrb	r0, [r4, #2]
10050742:	21bf      	movs	r1, #191	@ 0xbf
10050744:	4001      	ands	r1, r0
10050746:	70a1      	strb	r1, [r4, #2]
10050748:	2084      	movs	r0, #132	@ 0x84
1005074a:	bd10      	pop	{r4, pc}

1005074c <__arm_cp.18_0>:
1005074c:	20000894 	.word	0x20000894

10050750 <hci_le_connection_complete_event_int_cb>:
10050750:	b5b0      	push	{r4, r5, r7, lr}
10050752:	460d      	mov	r5, r1
10050754:	4604      	mov	r4, r0
10050756:	7908      	ldrb	r0, [r1, #4]
10050758:	2800      	cmp	r0, #0
1005075a:	d11d      	bne.n	10050798 <hci_le_connection_complete_event_int_cb+0x48>
1005075c:	7968      	ldrb	r0, [r5, #5]
1005075e:	79a9      	ldrb	r1, [r5, #6]
10050760:	0209      	lsls	r1, r1, #8
10050762:	1808      	adds	r0, r1, r0
10050764:	f7ff fc66 	bl	10050034 <ACL_pkt_connection>
10050768:	7968      	ldrb	r0, [r5, #5]
1005076a:	79a9      	ldrb	r1, [r5, #6]
1005076c:	0209      	lsls	r1, r1, #8
1005076e:	1808      	adds	r0, r1, r0
10050770:	7a2a      	ldrb	r2, [r5, #8]
10050772:	79e9      	ldrb	r1, [r5, #7]
10050774:	462b      	mov	r3, r5
10050776:	3309      	adds	r3, #9
10050778:	f014 f934 	bl	100649e4 <smp_sap_hci_le_connection_complete_evt_hndl>
1005077c:	7968      	ldrb	r0, [r5, #5]
1005077e:	79a9      	ldrb	r1, [r5, #6]
10050780:	0209      	lsls	r1, r1, #8
10050782:	1808      	adds	r0, r1, r0
10050784:	f001 ffe8 	bl	10052758 <GAT_att_cmn_connection>
10050788:	7968      	ldrb	r0, [r5, #5]
1005078a:	79a9      	ldrb	r1, [r5, #6]
1005078c:	0209      	lsls	r1, r1, #8
1005078e:	1808      	adds	r0, r1, r0
10050790:	79e9      	ldrb	r1, [r5, #7]
10050792:	f005 fbf3 	bl	10055f7c <l2c_sap_hci_le_connection_complete_evt_hndl>
10050796:	7928      	ldrb	r0, [r5, #4]
10050798:	7969      	ldrb	r1, [r5, #5]
1005079a:	79aa      	ldrb	r2, [r5, #6]
1005079c:	0212      	lsls	r2, r2, #8
1005079e:	1851      	adds	r1, r2, r1
100507a0:	79ea      	ldrb	r2, [r5, #7]
100507a2:	f001 fac6 	bl	10051d32 <GAP_hci_le_connection_complete_evt_hndl>
100507a6:	4809      	ldr	r0, [pc, #36]	@ (100507cc <__arm_cp.20_0>)
100507a8:	6801      	ldr	r1, [r0, #0]
100507aa:	203d      	movs	r0, #61	@ 0x3d
100507ac:	5c0a      	ldrb	r2, [r1, r0]
100507ae:	2000      	movs	r0, #0
100507b0:	0692      	lsls	r2, r2, #26
100507b2:	d50a      	bpl.n	100507ca <hci_le_connection_complete_event_int_cb+0x7a>
100507b4:	313d      	adds	r1, #61	@ 0x3d
100507b6:	7a49      	ldrb	r1, [r1, #9]
100507b8:	07c9      	lsls	r1, r1, #31
100507ba:	d006      	beq.n	100507ca <hci_le_connection_complete_event_int_cb+0x7a>
100507bc:	2018      	movs	r0, #24
100507be:	70e0      	strb	r0, [r4, #3]
100507c0:	78a0      	ldrb	r0, [r4, #2]
100507c2:	21bf      	movs	r1, #191	@ 0xbf
100507c4:	4001      	ands	r1, r0
100507c6:	70a1      	strb	r1, [r4, #2]
100507c8:	2084      	movs	r0, #132	@ 0x84
100507ca:	bdb0      	pop	{r4, r5, r7, pc}

100507cc <__arm_cp.20_0>:
100507cc:	20000894 	.word	0x20000894

100507d0 <hci_le_enhanced_connection_complete_event_int_cb>:
100507d0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100507d2:	460d      	mov	r5, r1
100507d4:	4604      	mov	r4, r0
100507d6:	7908      	ldrb	r0, [r1, #4]
100507d8:	2800      	cmp	r0, #0
100507da:	d123      	bne.n	10050824 <hci_le_enhanced_connection_complete_event_int_cb+0x54>
100507dc:	7968      	ldrb	r0, [r5, #5]
100507de:	79a9      	ldrb	r1, [r5, #6]
100507e0:	0209      	lsls	r1, r1, #8
100507e2:	1808      	adds	r0, r1, r0
100507e4:	f7ff fc26 	bl	10050034 <ACL_pkt_connection>
100507e8:	7a2a      	ldrb	r2, [r5, #8]
100507ea:	79e9      	ldrb	r1, [r5, #7]
100507ec:	7968      	ldrb	r0, [r5, #5]
100507ee:	79ab      	ldrb	r3, [r5, #6]
100507f0:	462e      	mov	r6, r5
100507f2:	3615      	adds	r6, #21
100507f4:	462f      	mov	r7, r5
100507f6:	370f      	adds	r7, #15
100507f8:	9700      	str	r7, [sp, #0]
100507fa:	9601      	str	r6, [sp, #4]
100507fc:	021b      	lsls	r3, r3, #8
100507fe:	1818      	adds	r0, r3, r0
10050800:	462b      	mov	r3, r5
10050802:	3309      	adds	r3, #9
10050804:	f014 f988 	bl	10064b18 <smp_sap_hci_le_enhanced_connection_complete_evt_hndl>
10050808:	7968      	ldrb	r0, [r5, #5]
1005080a:	79a9      	ldrb	r1, [r5, #6]
1005080c:	0209      	lsls	r1, r1, #8
1005080e:	1808      	adds	r0, r1, r0
10050810:	f001 ffa2 	bl	10052758 <GAT_att_cmn_connection>
10050814:	7968      	ldrb	r0, [r5, #5]
10050816:	79a9      	ldrb	r1, [r5, #6]
10050818:	0209      	lsls	r1, r1, #8
1005081a:	1808      	adds	r0, r1, r0
1005081c:	79e9      	ldrb	r1, [r5, #7]
1005081e:	f005 fbad 	bl	10055f7c <l2c_sap_hci_le_connection_complete_evt_hndl>
10050822:	7928      	ldrb	r0, [r5, #4]
10050824:	7969      	ldrb	r1, [r5, #5]
10050826:	79aa      	ldrb	r2, [r5, #6]
10050828:	0212      	lsls	r2, r2, #8
1005082a:	1851      	adds	r1, r2, r1
1005082c:	79ea      	ldrb	r2, [r5, #7]
1005082e:	f001 fa80 	bl	10051d32 <GAP_hci_le_connection_complete_evt_hndl>
10050832:	4809      	ldr	r0, [pc, #36]	@ (10050858 <__arm_cp.22_0>)
10050834:	6801      	ldr	r1, [r0, #0]
10050836:	203d      	movs	r0, #61	@ 0x3d
10050838:	5c0a      	ldrb	r2, [r1, r0]
1005083a:	2000      	movs	r0, #0
1005083c:	0692      	lsls	r2, r2, #26
1005083e:	d50a      	bpl.n	10050856 <hci_le_enhanced_connection_complete_event_int_cb+0x86>
10050840:	313d      	adds	r1, #61	@ 0x3d
10050842:	7a89      	ldrb	r1, [r1, #10]
10050844:	0789      	lsls	r1, r1, #30
10050846:	d506      	bpl.n	10050856 <hci_le_enhanced_connection_complete_event_int_cb+0x86>
10050848:	201c      	movs	r0, #28
1005084a:	70e0      	strb	r0, [r4, #3]
1005084c:	78a0      	ldrb	r0, [r4, #2]
1005084e:	21bf      	movs	r1, #191	@ 0xbf
10050850:	4001      	ands	r1, r0
10050852:	70a1      	strb	r1, [r4, #2]
10050854:	2084      	movs	r0, #132	@ 0x84
10050856:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10050858 <__arm_cp.22_0>:
10050858:	20000894 	.word	0x20000894

1005085c <hci_le_long_term_key_request_event_int_cb>:
1005085c:	b570      	push	{r4, r5, r6, lr}
1005085e:	4604      	mov	r4, r0
10050860:	4d14      	ldr	r5, [pc, #80]	@ (100508b4 <__arm_cp.24_0>)
10050862:	6828      	ldr	r0, [r5, #0]
10050864:	2636      	movs	r6, #54	@ 0x36
10050866:	5d80      	ldrb	r0, [r0, r6]
10050868:	2800      	cmp	r0, #0
1005086a:	d10e      	bne.n	1005088a <hci_le_long_term_key_request_event_int_cb+0x2e>
1005086c:	7908      	ldrb	r0, [r1, #4]
1005086e:	794a      	ldrb	r2, [r1, #5]
10050870:	0212      	lsls	r2, r2, #8
10050872:	1810      	adds	r0, r2, r0
10050874:	7b8a      	ldrb	r2, [r1, #14]
10050876:	7bcb      	ldrb	r3, [r1, #15]
10050878:	021b      	lsls	r3, r3, #8
1005087a:	189a      	adds	r2, r3, r2
1005087c:	1d89      	adds	r1, r1, #6
1005087e:	f014 f973 	bl	10064b68 <smp_sap_hci_le_long_term_key_request_evt_hndl>
10050882:	6828      	ldr	r0, [r5, #0]
10050884:	5d80      	ldrb	r0, [r0, r6]
10050886:	2800      	cmp	r0, #0
10050888:	d012      	beq.n	100508b0 <hci_le_long_term_key_request_event_int_cb+0x54>
1005088a:	480b      	ldr	r0, [pc, #44]	@ (100508b8 <__arm_cp.24_1>)
1005088c:	6801      	ldr	r1, [r0, #0]
1005088e:	203d      	movs	r0, #61	@ 0x3d
10050890:	5c0a      	ldrb	r2, [r1, r0]
10050892:	2000      	movs	r0, #0
10050894:	0692      	lsls	r2, r2, #26
10050896:	d50a      	bpl.n	100508ae <hci_le_long_term_key_request_event_int_cb+0x52>
10050898:	313d      	adds	r1, #61	@ 0x3d
1005089a:	7a49      	ldrb	r1, [r1, #9]
1005089c:	06c9      	lsls	r1, r1, #27
1005089e:	d506      	bpl.n	100508ae <hci_le_long_term_key_request_event_int_cb+0x52>
100508a0:	2019      	movs	r0, #25
100508a2:	70e0      	strb	r0, [r4, #3]
100508a4:	78a0      	ldrb	r0, [r4, #2]
100508a6:	21bf      	movs	r1, #191	@ 0xbf
100508a8:	4001      	ands	r1, r0
100508aa:	70a1      	strb	r1, [r4, #2]
100508ac:	2084      	movs	r0, #132	@ 0x84
100508ae:	bd70      	pop	{r4, r5, r6, pc}
100508b0:	2000      	movs	r0, #0
100508b2:	bd70      	pop	{r4, r5, r6, pc}

100508b4 <__arm_cp.24_0>:
100508b4:	2000083c 	.word	0x2000083c

100508b8 <__arm_cp.24_1>:
100508b8:	20000894 	.word	0x20000894

100508bc <hci_le_read_local_p256_public_key_complete_event_int_cb>:
100508bc:	b510      	push	{r4, lr}
100508be:	4604      	mov	r4, r0
100508c0:	7908      	ldrb	r0, [r1, #4]
100508c2:	1d49      	adds	r1, r1, #5
100508c4:	f014 fa7a 	bl	10064dbc <smp_sap_hci_le_read_local_p256_public_key_complete_evt_hndl_ucfg_weak>
100508c8:	480a      	ldr	r0, [pc, #40]	@ (100508f4 <__arm_cp.26_0>)
100508ca:	6801      	ldr	r1, [r0, #0]
100508cc:	203d      	movs	r0, #61	@ 0x3d
100508ce:	5c0a      	ldrb	r2, [r1, r0]
100508d0:	2000      	movs	r0, #0
100508d2:	0692      	lsls	r2, r2, #26
100508d4:	d504      	bpl.n	100508e0 <hci_le_read_local_p256_public_key_complete_event_int_cb+0x24>
100508d6:	313d      	adds	r1, #61	@ 0x3d
100508d8:	2209      	movs	r2, #9
100508da:	5689      	ldrsb	r1, [r1, r2]
100508dc:	2900      	cmp	r1, #0
100508de:	d400      	bmi.n	100508e2 <hci_le_read_local_p256_public_key_complete_event_int_cb+0x26>
100508e0:	bd10      	pop	{r4, pc}
100508e2:	201a      	movs	r0, #26
100508e4:	70e0      	strb	r0, [r4, #3]
100508e6:	78a0      	ldrb	r0, [r4, #2]
100508e8:	21bf      	movs	r1, #191	@ 0xbf
100508ea:	4001      	ands	r1, r0
100508ec:	70a1      	strb	r1, [r4, #2]
100508ee:	2084      	movs	r0, #132	@ 0x84
100508f0:	bd10      	pop	{r4, pc}
100508f2:	46c0      	nop			@ (mov r8, r8)

100508f4 <__arm_cp.26_0>:
100508f4:	20000894 	.word	0x20000894

100508f8 <hci_le_generate_dhkey_complete_event_int_cb>:
100508f8:	b510      	push	{r4, lr}
100508fa:	4604      	mov	r4, r0
100508fc:	7908      	ldrb	r0, [r1, #4]
100508fe:	1d49      	adds	r1, r1, #5
10050900:	f014 fa5d 	bl	10064dbe <smp_sap_hci_le_generate_dhkey_complete_evt_hndl_ucfg_weak>
10050904:	4809      	ldr	r0, [pc, #36]	@ (1005092c <__arm_cp.28_0>)
10050906:	6801      	ldr	r1, [r0, #0]
10050908:	203d      	movs	r0, #61	@ 0x3d
1005090a:	5c0a      	ldrb	r2, [r1, r0]
1005090c:	2000      	movs	r0, #0
1005090e:	0692      	lsls	r2, r2, #26
10050910:	d50a      	bpl.n	10050928 <hci_le_generate_dhkey_complete_event_int_cb+0x30>
10050912:	313d      	adds	r1, #61	@ 0x3d
10050914:	7a89      	ldrb	r1, [r1, #10]
10050916:	07c9      	lsls	r1, r1, #31
10050918:	d006      	beq.n	10050928 <hci_le_generate_dhkey_complete_event_int_cb+0x30>
1005091a:	201b      	movs	r0, #27
1005091c:	70e0      	strb	r0, [r4, #3]
1005091e:	78a0      	ldrb	r0, [r4, #2]
10050920:	21bf      	movs	r1, #191	@ 0xbf
10050922:	4001      	ands	r1, r0
10050924:	70a1      	strb	r1, [r4, #2]
10050926:	2084      	movs	r0, #132	@ 0x84
10050928:	bd10      	pop	{r4, pc}
1005092a:	46c0      	nop			@ (mov r8, r8)

1005092c <__arm_cp.28_0>:
1005092c:	20000894 	.word	0x20000894

10050930 <hci_le_advertising_report_event_int_cb>:
10050930:	b5b0      	push	{r4, r5, r7, lr}
10050932:	4605      	mov	r5, r0
10050934:	2400      	movs	r4, #0
10050936:	4608      	mov	r0, r1
10050938:	4621      	mov	r1, r4
1005093a:	f001 f9df 	bl	10051cfc <GAP_hci_le_advertising_report_evt_hndl>
1005093e:	2800      	cmp	r0, #0
10050940:	d010      	beq.n	10050964 <hci_le_advertising_report_event_int_cb+0x34>
10050942:	4809      	ldr	r0, [pc, #36]	@ (10050968 <__arm_cp.30_0>)
10050944:	6800      	ldr	r0, [r0, #0]
10050946:	213d      	movs	r1, #61	@ 0x3d
10050948:	5c41      	ldrb	r1, [r0, r1]
1005094a:	0689      	lsls	r1, r1, #26
1005094c:	d50a      	bpl.n	10050964 <hci_le_advertising_report_event_int_cb+0x34>
1005094e:	303d      	adds	r0, #61	@ 0x3d
10050950:	7a40      	ldrb	r0, [r0, #9]
10050952:	0780      	lsls	r0, r0, #30
10050954:	d506      	bpl.n	10050964 <hci_le_advertising_report_event_int_cb+0x34>
10050956:	2000      	movs	r0, #0
10050958:	70e8      	strb	r0, [r5, #3]
1005095a:	78a8      	ldrb	r0, [r5, #2]
1005095c:	21bf      	movs	r1, #191	@ 0xbf
1005095e:	4001      	ands	r1, r0
10050960:	70a9      	strb	r1, [r5, #2]
10050962:	2484      	movs	r4, #132	@ 0x84
10050964:	4620      	mov	r0, r4
10050966:	bdb0      	pop	{r4, r5, r7, pc}

10050968 <__arm_cp.30_0>:
10050968:	20000894 	.word	0x20000894

1005096c <hci_le_directed_advertising_report_event_int_cb_ucfg_weak>:
1005096c:	2000      	movs	r0, #0
1005096e:	4770      	bx	lr

10050970 <hci_le_extended_advertising_report_event_int_cb>:
10050970:	b5b0      	push	{r4, r5, r7, lr}
10050972:	4604      	mov	r4, r0
10050974:	2501      	movs	r5, #1
10050976:	4608      	mov	r0, r1
10050978:	4629      	mov	r1, r5
1005097a:	f001 f9bf 	bl	10051cfc <GAP_hci_le_advertising_report_evt_hndl>
1005097e:	4601      	mov	r1, r0
10050980:	2000      	movs	r0, #0
10050982:	2900      	cmp	r1, #0
10050984:	d00f      	beq.n	100509a6 <hci_le_extended_advertising_report_event_int_cb+0x36>
10050986:	4908      	ldr	r1, [pc, #32]	@ (100509a8 <__arm_cp.34_0>)
10050988:	6809      	ldr	r1, [r1, #0]
1005098a:	223d      	movs	r2, #61	@ 0x3d
1005098c:	5c8a      	ldrb	r2, [r1, r2]
1005098e:	0692      	lsls	r2, r2, #26
10050990:	d509      	bpl.n	100509a6 <hci_le_extended_advertising_report_event_int_cb+0x36>
10050992:	313d      	adds	r1, #61	@ 0x3d
10050994:	7a89      	ldrb	r1, [r1, #10]
10050996:	06c9      	lsls	r1, r1, #27
10050998:	d505      	bpl.n	100509a6 <hci_le_extended_advertising_report_event_int_cb+0x36>
1005099a:	70e5      	strb	r5, [r4, #3]
1005099c:	78a0      	ldrb	r0, [r4, #2]
1005099e:	21bf      	movs	r1, #191	@ 0xbf
100509a0:	4001      	ands	r1, r0
100509a2:	70a1      	strb	r1, [r4, #2]
100509a4:	2084      	movs	r0, #132	@ 0x84
100509a6:	bdb0      	pop	{r4, r5, r7, pc}

100509a8 <__arm_cp.34_0>:
100509a8:	20000894 	.word	0x20000894

100509ac <hci_le_scan_timeout_event_int_cb>:
100509ac:	4909      	ldr	r1, [pc, #36]	@ (100509d4 <__arm_cp.36_0>)
100509ae:	680a      	ldr	r2, [r1, #0]
100509b0:	213d      	movs	r1, #61	@ 0x3d
100509b2:	5c53      	ldrb	r3, [r2, r1]
100509b4:	2100      	movs	r1, #0
100509b6:	069b      	lsls	r3, r3, #26
100509b8:	d50a      	bpl.n	100509d0 <hci_le_scan_timeout_event_int_cb+0x24>
100509ba:	323d      	adds	r2, #61	@ 0x3d
100509bc:	7ad2      	ldrb	r2, [r2, #11]
100509be:	07d2      	lsls	r2, r2, #31
100509c0:	d006      	beq.n	100509d0 <hci_le_scan_timeout_event_int_cb+0x24>
100509c2:	211e      	movs	r1, #30
100509c4:	70c1      	strb	r1, [r0, #3]
100509c6:	7881      	ldrb	r1, [r0, #2]
100509c8:	22bf      	movs	r2, #191	@ 0xbf
100509ca:	400a      	ands	r2, r1
100509cc:	7082      	strb	r2, [r0, #2]
100509ce:	2184      	movs	r1, #132	@ 0x84
100509d0:	4608      	mov	r0, r1
100509d2:	4770      	bx	lr

100509d4 <__arm_cp.36_0>:
100509d4:	20000894 	.word	0x20000894

100509d8 <hci_le_advertising_set_terminated_event_int_cb>:
100509d8:	b510      	push	{r4, lr}
100509da:	4604      	mov	r4, r0
100509dc:	794a      	ldrb	r2, [r1, #5]
100509de:	7908      	ldrb	r0, [r1, #4]
100509e0:	4611      	mov	r1, r2
100509e2:	f7fd fcae 	bl	1004e342 <GAP_hci_le_advertising_set_terminated_evt_hndl_ucfg>
100509e6:	4809      	ldr	r0, [pc, #36]	@ (10050a0c <__arm_cp.38_0>)
100509e8:	6801      	ldr	r1, [r0, #0]
100509ea:	203d      	movs	r0, #61	@ 0x3d
100509ec:	5c0a      	ldrb	r2, [r1, r0]
100509ee:	2000      	movs	r0, #0
100509f0:	0692      	lsls	r2, r2, #26
100509f2:	d50a      	bpl.n	10050a0a <hci_le_advertising_set_terminated_event_int_cb+0x32>
100509f4:	313d      	adds	r1, #61	@ 0x3d
100509f6:	7ac9      	ldrb	r1, [r1, #11]
100509f8:	0789      	lsls	r1, r1, #30
100509fa:	d506      	bpl.n	10050a0a <hci_le_advertising_set_terminated_event_int_cb+0x32>
100509fc:	201f      	movs	r0, #31
100509fe:	70e0      	strb	r0, [r4, #3]
10050a00:	78a0      	ldrb	r0, [r4, #2]
10050a02:	21bf      	movs	r1, #191	@ 0xbf
10050a04:	4001      	ands	r1, r0
10050a06:	70a1      	strb	r1, [r4, #2]
10050a08:	2084      	movs	r0, #132	@ 0x84
10050a0a:	bd10      	pop	{r4, pc}

10050a0c <__arm_cp.38_0>:
10050a0c:	20000894 	.word	0x20000894

10050a10 <hci_read_remote_version_information_complete_event_copy>:
10050a10:	7101      	strb	r1, [r0, #4]
10050a12:	2300      	movs	r3, #0
10050a14:	70c3      	strb	r3, [r0, #3]
10050a16:	0a09      	lsrs	r1, r1, #8
10050a18:	7141      	strb	r1, [r0, #5]
10050a1a:	7811      	ldrb	r1, [r2, #0]
10050a1c:	7181      	strb	r1, [r0, #6]
10050a1e:	7851      	ldrb	r1, [r2, #1]
10050a20:	7893      	ldrb	r3, [r2, #2]
10050a22:	7203      	strb	r3, [r0, #8]
10050a24:	71c1      	strb	r1, [r0, #7]
10050a26:	78d1      	ldrb	r1, [r2, #3]
10050a28:	7912      	ldrb	r2, [r2, #4]
10050a2a:	7282      	strb	r2, [r0, #10]
10050a2c:	7241      	strb	r1, [r0, #9]
10050a2e:	4770      	bx	lr

10050a30 <hci_number_of_completed_packets_event_copy>:
10050a30:	2200      	movs	r2, #0
10050a32:	7102      	strb	r2, [r0, #4]
10050a34:	2201      	movs	r2, #1
10050a36:	70c2      	strb	r2, [r0, #3]
10050a38:	7041      	strb	r1, [r0, #1]
10050a3a:	7002      	strb	r2, [r0, #0]
10050a3c:	0a09      	lsrs	r1, r1, #8
10050a3e:	7081      	strb	r1, [r0, #2]
10050a40:	4770      	bx	lr

10050a42 <aci_gap_proc_complete_event_copy>:
10050a42:	b510      	push	{r4, lr}
10050a44:	7813      	ldrb	r3, [r2, #0]
10050a46:	7183      	strb	r3, [r0, #6]
10050a48:	7853      	ldrb	r3, [r2, #1]
10050a4a:	1e8c      	subs	r4, r1, #2
10050a4c:	7204      	strb	r4, [r0, #8]
10050a4e:	71c3      	strb	r3, [r0, #7]
10050a50:	3009      	adds	r0, #9
10050a52:	1c91      	adds	r1, r2, #2
10050a54:	b2e2      	uxtb	r2, r4
10050a56:	f7f3 ffa5 	bl	100449a4 <BLEPLAT_MemCpy>
10050a5a:	bd10      	pop	{r4, pc}

10050a5c <aci_l2cap_connection_update_req_event_copy>:
10050a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
10050a5e:	b085      	sub	sp, #20
10050a60:	4617      	mov	r7, r2
10050a62:	9103      	str	r1, [sp, #12]
10050a64:	4604      	mov	r4, r0
10050a66:	6850      	ldr	r0, [r2, #4]
10050a68:	7a40      	ldrb	r0, [r0, #9]
10050a6a:	9004      	str	r0, [sp, #16]
10050a6c:	2106      	movs	r1, #6
10050a6e:	4d16      	ldr	r5, [pc, #88]	@ (10050ac8 <__arm_cp.42_0>)
10050a70:	4610      	mov	r0, r2
10050a72:	47a8      	blx	r5
10050a74:	9002      	str	r0, [sp, #8]
10050a76:	2108      	movs	r1, #8
10050a78:	4638      	mov	r0, r7
10050a7a:	47a8      	blx	r5
10050a7c:	9001      	str	r0, [sp, #4]
10050a7e:	210a      	movs	r1, #10
10050a80:	4638      	mov	r0, r7
10050a82:	47a8      	blx	r5
10050a84:	4606      	mov	r6, r0
10050a86:	210c      	movs	r1, #12
10050a88:	4638      	mov	r0, r7
10050a8a:	47a8      	blx	r5
10050a8c:	462a      	mov	r2, r5
10050a8e:	4605      	mov	r5, r0
10050a90:	210e      	movs	r1, #14
10050a92:	4638      	mov	r0, r7
10050a94:	4790      	blx	r2
10050a96:	7460      	strb	r0, [r4, #17]
10050a98:	0a29      	lsrs	r1, r5, #8
10050a9a:	7421      	strb	r1, [r4, #16]
10050a9c:	73e5      	strb	r5, [r4, #15]
10050a9e:	0a31      	lsrs	r1, r6, #8
10050aa0:	73a1      	strb	r1, [r4, #14]
10050aa2:	7366      	strb	r6, [r4, #13]
10050aa4:	9a01      	ldr	r2, [sp, #4]
10050aa6:	0a11      	lsrs	r1, r2, #8
10050aa8:	7321      	strb	r1, [r4, #12]
10050aaa:	72e2      	strb	r2, [r4, #11]
10050aac:	9a02      	ldr	r2, [sp, #8]
10050aae:	0a11      	lsrs	r1, r2, #8
10050ab0:	72a1      	strb	r1, [r4, #10]
10050ab2:	7262      	strb	r2, [r4, #9]
10050ab4:	9a03      	ldr	r2, [sp, #12]
10050ab6:	0a11      	lsrs	r1, r2, #8
10050ab8:	71e1      	strb	r1, [r4, #7]
10050aba:	71a2      	strb	r2, [r4, #6]
10050abc:	9904      	ldr	r1, [sp, #16]
10050abe:	7221      	strb	r1, [r4, #8]
10050ac0:	0a00      	lsrs	r0, r0, #8
10050ac2:	74a0      	strb	r0, [r4, #18]
10050ac4:	b005      	add	sp, #20
10050ac6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10050ac8 <__arm_cp.42_0>:
10050ac8:	1004ffe7 	.word	0x1004ffe7

10050acc <ACL_pkt_read_8b>:
10050acc:	b51c      	push	{r2, r3, r4, lr}
10050ace:	291f      	cmp	r1, #31
10050ad0:	d803      	bhi.n	10050ada <ACL_pkt_read_8b+0xe>
10050ad2:	aa01      	add	r2, sp, #4
10050ad4:	8011      	strh	r1, [r2, #0]
10050ad6:	6840      	ldr	r0, [r0, #4]
10050ad8:	e005      	b.n	10050ae6 <ACL_pkt_read_8b+0x1a>
10050ada:	6840      	ldr	r0, [r0, #4]
10050adc:	ac01      	add	r4, sp, #4
10050ade:	4622      	mov	r2, r4
10050ae0:	f012 fa47 	bl	10062f72 <Mem_Buff_get_buff_off>
10050ae4:	8821      	ldrh	r1, [r4, #0]
10050ae6:	1840      	adds	r0, r0, r1
10050ae8:	7900      	ldrb	r0, [r0, #4]
10050aea:	bd1c      	pop	{r2, r3, r4, pc}

10050aec <aci_l2cap_command_reject_event_copy>:
10050aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10050aee:	4615      	mov	r5, r2
10050af0:	460e      	mov	r6, r1
10050af2:	4604      	mov	r4, r0
10050af4:	6850      	ldr	r0, [r2, #4]
10050af6:	7a40      	ldrb	r0, [r0, #9]
10050af8:	9000      	str	r0, [sp, #0]
10050afa:	2106      	movs	r1, #6
10050afc:	4610      	mov	r0, r2
10050afe:	f7ff fa72 	bl	1004ffe6 <ACL_pkt_read_16b>
10050b02:	4607      	mov	r7, r0
10050b04:	2108      	movs	r1, #8
10050b06:	4628      	mov	r0, r5
10050b08:	f7ff fa6d 	bl	1004ffe6 <ACL_pkt_read_16b>
10050b0c:	1eb9      	subs	r1, r7, #2
10050b0e:	72e1      	strb	r1, [r4, #11]
10050b10:	7260      	strb	r0, [r4, #9]
10050b12:	9a00      	ldr	r2, [sp, #0]
10050b14:	7222      	strb	r2, [r4, #8]
10050b16:	0a32      	lsrs	r2, r6, #8
10050b18:	71e2      	strb	r2, [r4, #7]
10050b1a:	71a6      	strb	r6, [r4, #6]
10050b1c:	0a00      	lsrs	r0, r0, #8
10050b1e:	72a0      	strb	r0, [r4, #10]
10050b20:	b2ca      	uxtb	r2, r1
10050b22:	89a8      	ldrh	r0, [r5, #12]
10050b24:	340c      	adds	r4, #12
10050b26:	1d80      	adds	r0, r0, #6
10050b28:	b281      	uxth	r1, r0
10050b2a:	4628      	mov	r0, r5
10050b2c:	4623      	mov	r3, r4
10050b2e:	f7ff fa51 	bl	1004ffd4 <ACL_pkt_read>
10050b32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10050b34 <aci_att_clt_find_info_resp_event_copy>:
10050b34:	b570      	push	{r4, r5, r6, lr}
10050b36:	461c      	mov	r4, r3
10050b38:	4605      	mov	r5, r0
10050b3a:	885e      	ldrh	r6, [r3, #2]
10050b3c:	0a10      	lsrs	r0, r2, #8
10050b3e:	70e8      	strb	r0, [r5, #3]
10050b40:	70aa      	strb	r2, [r5, #2]
10050b42:	0a08      	lsrs	r0, r1, #8
10050b44:	7068      	strb	r0, [r5, #1]
10050b46:	7029      	strb	r1, [r5, #0]
10050b48:	8998      	ldrh	r0, [r3, #12]
10050b4a:	1c40      	adds	r0, r0, #1
10050b4c:	b281      	uxth	r1, r0
10050b4e:	4618      	mov	r0, r3
10050b50:	f7ff ffbc 	bl	10050acc <ACL_pkt_read_8b>
10050b54:	1eb1      	subs	r1, r6, #2
10050b56:	0a0a      	lsrs	r2, r1, #8
10050b58:	71aa      	strb	r2, [r5, #6]
10050b5a:	7169      	strb	r1, [r5, #5]
10050b5c:	7128      	strb	r0, [r5, #4]
10050b5e:	89a0      	ldrh	r0, [r4, #12]
10050b60:	1deb      	adds	r3, r5, #7
10050b62:	b28a      	uxth	r2, r1
10050b64:	1c80      	adds	r0, r0, #2
10050b66:	b281      	uxth	r1, r0
10050b68:	4620      	mov	r0, r4
10050b6a:	f7ff fa33 	bl	1004ffd4 <ACL_pkt_read>
10050b6e:	bd70      	pop	{r4, r5, r6, pc}

10050b70 <aci_att_clt_find_by_type_value_resp_event_copy>:
10050b70:	b5b0      	push	{r4, r5, r7, lr}
10050b72:	461c      	mov	r4, r3
10050b74:	885b      	ldrh	r3, [r3, #2]
10050b76:	0a15      	lsrs	r5, r2, #8
10050b78:	70c5      	strb	r5, [r0, #3]
10050b7a:	7082      	strb	r2, [r0, #2]
10050b7c:	0a0a      	lsrs	r2, r1, #8
10050b7e:	7042      	strb	r2, [r0, #1]
10050b80:	7001      	strb	r1, [r0, #0]
10050b82:	1e59      	subs	r1, r3, #1
10050b84:	088a      	lsrs	r2, r1, #2
10050b86:	7102      	strb	r2, [r0, #4]
10050b88:	89a5      	ldrh	r5, [r4, #12]
10050b8a:	1d43      	adds	r3, r0, #5
10050b8c:	b28a      	uxth	r2, r1
10050b8e:	1c68      	adds	r0, r5, #1
10050b90:	b281      	uxth	r1, r0
10050b92:	4620      	mov	r0, r4
10050b94:	f7ff fa1e 	bl	1004ffd4 <ACL_pkt_read>
10050b98:	bdb0      	pop	{r4, r5, r7, pc}

10050b9a <aci_att_clt_read_by_type_resp_event_copy>:
10050b9a:	b570      	push	{r4, r5, r6, lr}
10050b9c:	461c      	mov	r4, r3
10050b9e:	4605      	mov	r5, r0
10050ba0:	885e      	ldrh	r6, [r3, #2]
10050ba2:	0a10      	lsrs	r0, r2, #8
10050ba4:	70e8      	strb	r0, [r5, #3]
10050ba6:	70aa      	strb	r2, [r5, #2]
10050ba8:	0a08      	lsrs	r0, r1, #8
10050baa:	7068      	strb	r0, [r5, #1]
10050bac:	7029      	strb	r1, [r5, #0]
10050bae:	8998      	ldrh	r0, [r3, #12]
10050bb0:	1c40      	adds	r0, r0, #1
10050bb2:	b281      	uxth	r1, r0
10050bb4:	4618      	mov	r0, r3
10050bb6:	f7ff ff89 	bl	10050acc <ACL_pkt_read_8b>
10050bba:	1eb1      	subs	r1, r6, #2
10050bbc:	0a0a      	lsrs	r2, r1, #8
10050bbe:	71aa      	strb	r2, [r5, #6]
10050bc0:	7169      	strb	r1, [r5, #5]
10050bc2:	7128      	strb	r0, [r5, #4]
10050bc4:	89a0      	ldrh	r0, [r4, #12]
10050bc6:	1deb      	adds	r3, r5, #7
10050bc8:	b28a      	uxth	r2, r1
10050bca:	1c80      	adds	r0, r0, #2
10050bcc:	b281      	uxth	r1, r0
10050bce:	4620      	mov	r0, r4
10050bd0:	f7ff fa00 	bl	1004ffd4 <ACL_pkt_read>
10050bd4:	bd70      	pop	{r4, r5, r6, pc}

10050bd6 <aci_att_clt_read_resp_event_copy>:
10050bd6:	b5b0      	push	{r4, r5, r7, lr}
10050bd8:	461c      	mov	r4, r3
10050bda:	885b      	ldrh	r3, [r3, #2]
10050bdc:	0a15      	lsrs	r5, r2, #8
10050bde:	70c5      	strb	r5, [r0, #3]
10050be0:	7082      	strb	r2, [r0, #2]
10050be2:	0a0a      	lsrs	r2, r1, #8
10050be4:	7042      	strb	r2, [r0, #1]
10050be6:	7001      	strb	r1, [r0, #0]
10050be8:	1e59      	subs	r1, r3, #1
10050bea:	7101      	strb	r1, [r0, #4]
10050bec:	0a0a      	lsrs	r2, r1, #8
10050bee:	7142      	strb	r2, [r0, #5]
10050bf0:	89a5      	ldrh	r5, [r4, #12]
10050bf2:	1d83      	adds	r3, r0, #6
10050bf4:	b28a      	uxth	r2, r1
10050bf6:	1c68      	adds	r0, r5, #1
10050bf8:	b281      	uxth	r1, r0
10050bfa:	4620      	mov	r0, r4
10050bfc:	f7ff f9ea 	bl	1004ffd4 <ACL_pkt_read>
10050c00:	bdb0      	pop	{r4, r5, r7, pc}

10050c02 <aci_att_clt_read_blob_resp_event_copy>:
10050c02:	b5b0      	push	{r4, r5, r7, lr}
10050c04:	461c      	mov	r4, r3
10050c06:	885b      	ldrh	r3, [r3, #2]
10050c08:	0a15      	lsrs	r5, r2, #8
10050c0a:	70c5      	strb	r5, [r0, #3]
10050c0c:	7082      	strb	r2, [r0, #2]
10050c0e:	0a0a      	lsrs	r2, r1, #8
10050c10:	7042      	strb	r2, [r0, #1]
10050c12:	7001      	strb	r1, [r0, #0]
10050c14:	1e59      	subs	r1, r3, #1
10050c16:	7101      	strb	r1, [r0, #4]
10050c18:	0a0a      	lsrs	r2, r1, #8
10050c1a:	7142      	strb	r2, [r0, #5]
10050c1c:	89a5      	ldrh	r5, [r4, #12]
10050c1e:	1d83      	adds	r3, r0, #6
10050c20:	b28a      	uxth	r2, r1
10050c22:	1c68      	adds	r0, r5, #1
10050c24:	b281      	uxth	r1, r0
10050c26:	4620      	mov	r0, r4
10050c28:	f7ff f9d4 	bl	1004ffd4 <ACL_pkt_read>
10050c2c:	bdb0      	pop	{r4, r5, r7, pc}

10050c2e <aci_att_clt_read_multiple_resp_event_copy>:
10050c2e:	b5b0      	push	{r4, r5, r7, lr}
10050c30:	461c      	mov	r4, r3
10050c32:	885b      	ldrh	r3, [r3, #2]
10050c34:	0a15      	lsrs	r5, r2, #8
10050c36:	70c5      	strb	r5, [r0, #3]
10050c38:	7082      	strb	r2, [r0, #2]
10050c3a:	0a0a      	lsrs	r2, r1, #8
10050c3c:	7042      	strb	r2, [r0, #1]
10050c3e:	7001      	strb	r1, [r0, #0]
10050c40:	1e59      	subs	r1, r3, #1
10050c42:	7101      	strb	r1, [r0, #4]
10050c44:	0a0a      	lsrs	r2, r1, #8
10050c46:	7142      	strb	r2, [r0, #5]
10050c48:	89a5      	ldrh	r5, [r4, #12]
10050c4a:	1d83      	adds	r3, r0, #6
10050c4c:	b28a      	uxth	r2, r1
10050c4e:	1c68      	adds	r0, r5, #1
10050c50:	b281      	uxth	r1, r0
10050c52:	4620      	mov	r0, r4
10050c54:	f7ff f9be 	bl	1004ffd4 <ACL_pkt_read>
10050c58:	bdb0      	pop	{r4, r5, r7, pc}

10050c5a <aci_att_clt_read_by_group_type_resp_event_copy>:
10050c5a:	b570      	push	{r4, r5, r6, lr}
10050c5c:	461c      	mov	r4, r3
10050c5e:	4605      	mov	r5, r0
10050c60:	885e      	ldrh	r6, [r3, #2]
10050c62:	0a10      	lsrs	r0, r2, #8
10050c64:	70e8      	strb	r0, [r5, #3]
10050c66:	70aa      	strb	r2, [r5, #2]
10050c68:	0a08      	lsrs	r0, r1, #8
10050c6a:	7068      	strb	r0, [r5, #1]
10050c6c:	7029      	strb	r1, [r5, #0]
10050c6e:	8998      	ldrh	r0, [r3, #12]
10050c70:	1c40      	adds	r0, r0, #1
10050c72:	b281      	uxth	r1, r0
10050c74:	4618      	mov	r0, r3
10050c76:	f7ff ff29 	bl	10050acc <ACL_pkt_read_8b>
10050c7a:	1eb1      	subs	r1, r6, #2
10050c7c:	0a0a      	lsrs	r2, r1, #8
10050c7e:	71aa      	strb	r2, [r5, #6]
10050c80:	7169      	strb	r1, [r5, #5]
10050c82:	7128      	strb	r0, [r5, #4]
10050c84:	89a0      	ldrh	r0, [r4, #12]
10050c86:	1deb      	adds	r3, r5, #7
10050c88:	b28a      	uxth	r2, r1
10050c8a:	1c80      	adds	r0, r0, #2
10050c8c:	b281      	uxth	r1, r0
10050c8e:	4620      	mov	r0, r4
10050c90:	f7ff f9a0 	bl	1004ffd4 <ACL_pkt_read>
10050c94:	bd70      	pop	{r4, r5, r6, pc}

10050c96 <aci_att_clt_prepare_write_resp_event_copy>:
10050c96:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10050c98:	461c      	mov	r4, r3
10050c9a:	4617      	mov	r7, r2
10050c9c:	9102      	str	r1, [sp, #8]
10050c9e:	4605      	mov	r5, r0
10050ca0:	8858      	ldrh	r0, [r3, #2]
10050ca2:	9001      	str	r0, [sp, #4]
10050ca4:	8998      	ldrh	r0, [r3, #12]
10050ca6:	1c40      	adds	r0, r0, #1
10050ca8:	b281      	uxth	r1, r0
10050caa:	4618      	mov	r0, r3
10050cac:	f7ff f99b 	bl	1004ffe6 <ACL_pkt_read_16b>
10050cb0:	4606      	mov	r6, r0
10050cb2:	89a0      	ldrh	r0, [r4, #12]
10050cb4:	1cc0      	adds	r0, r0, #3
10050cb6:	b281      	uxth	r1, r0
10050cb8:	4620      	mov	r0, r4
10050cba:	f7ff f994 	bl	1004ffe6 <ACL_pkt_read_16b>
10050cbe:	9901      	ldr	r1, [sp, #4]
10050cc0:	1f49      	subs	r1, r1, #5
10050cc2:	0a0a      	lsrs	r2, r1, #8
10050cc4:	726a      	strb	r2, [r5, #9]
10050cc6:	7229      	strb	r1, [r5, #8]
10050cc8:	71a8      	strb	r0, [r5, #6]
10050cca:	0a32      	lsrs	r2, r6, #8
10050ccc:	716a      	strb	r2, [r5, #5]
10050cce:	712e      	strb	r6, [r5, #4]
10050cd0:	0a3a      	lsrs	r2, r7, #8
10050cd2:	70ea      	strb	r2, [r5, #3]
10050cd4:	70af      	strb	r7, [r5, #2]
10050cd6:	9b02      	ldr	r3, [sp, #8]
10050cd8:	0a1a      	lsrs	r2, r3, #8
10050cda:	706a      	strb	r2, [r5, #1]
10050cdc:	702b      	strb	r3, [r5, #0]
10050cde:	0a00      	lsrs	r0, r0, #8
10050ce0:	71e8      	strb	r0, [r5, #7]
10050ce2:	89a0      	ldrh	r0, [r4, #12]
10050ce4:	350a      	adds	r5, #10
10050ce6:	b28a      	uxth	r2, r1
10050ce8:	1d40      	adds	r0, r0, #5
10050cea:	b281      	uxth	r1, r0
10050cec:	4620      	mov	r0, r4
10050cee:	462b      	mov	r3, r5
10050cf0:	f7ff f970 	bl	1004ffd4 <ACL_pkt_read>
10050cf4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10050cf6 <aci_gatt_clt_indication_event_copy>:
10050cf6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10050cf8:	461c      	mov	r4, r3
10050cfa:	4617      	mov	r7, r2
10050cfc:	460e      	mov	r6, r1
10050cfe:	4605      	mov	r5, r0
10050d00:	8858      	ldrh	r0, [r3, #2]
10050d02:	9000      	str	r0, [sp, #0]
10050d04:	8998      	ldrh	r0, [r3, #12]
10050d06:	1c40      	adds	r0, r0, #1
10050d08:	b281      	uxth	r1, r0
10050d0a:	4618      	mov	r0, r3
10050d0c:	f7ff f96b 	bl	1004ffe6 <ACL_pkt_read_16b>
10050d10:	9900      	ldr	r1, [sp, #0]
10050d12:	1ec9      	subs	r1, r1, #3
10050d14:	0a0a      	lsrs	r2, r1, #8
10050d16:	71ea      	strb	r2, [r5, #7]
10050d18:	71a9      	strb	r1, [r5, #6]
10050d1a:	7128      	strb	r0, [r5, #4]
10050d1c:	0a3a      	lsrs	r2, r7, #8
10050d1e:	70ea      	strb	r2, [r5, #3]
10050d20:	70af      	strb	r7, [r5, #2]
10050d22:	0a32      	lsrs	r2, r6, #8
10050d24:	706a      	strb	r2, [r5, #1]
10050d26:	702e      	strb	r6, [r5, #0]
10050d28:	0a00      	lsrs	r0, r0, #8
10050d2a:	7168      	strb	r0, [r5, #5]
10050d2c:	89a0      	ldrh	r0, [r4, #12]
10050d2e:	3508      	adds	r5, #8
10050d30:	b28a      	uxth	r2, r1
10050d32:	1cc0      	adds	r0, r0, #3
10050d34:	b281      	uxth	r1, r0
10050d36:	4620      	mov	r0, r4
10050d38:	462b      	mov	r3, r5
10050d3a:	f7ff f94b 	bl	1004ffd4 <ACL_pkt_read>
10050d3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10050d40 <aci_gatt_clt_notification_event_copy>:
10050d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10050d42:	461c      	mov	r4, r3
10050d44:	4617      	mov	r7, r2
10050d46:	460e      	mov	r6, r1
10050d48:	4605      	mov	r5, r0
10050d4a:	8858      	ldrh	r0, [r3, #2]
10050d4c:	9000      	str	r0, [sp, #0]
10050d4e:	8998      	ldrh	r0, [r3, #12]
10050d50:	1c40      	adds	r0, r0, #1
10050d52:	b281      	uxth	r1, r0
10050d54:	4618      	mov	r0, r3
10050d56:	f7ff f946 	bl	1004ffe6 <ACL_pkt_read_16b>
10050d5a:	9900      	ldr	r1, [sp, #0]
10050d5c:	1ec9      	subs	r1, r1, #3
10050d5e:	0a0a      	lsrs	r2, r1, #8
10050d60:	71ea      	strb	r2, [r5, #7]
10050d62:	71a9      	strb	r1, [r5, #6]
10050d64:	7128      	strb	r0, [r5, #4]
10050d66:	0a3a      	lsrs	r2, r7, #8
10050d68:	70ea      	strb	r2, [r5, #3]
10050d6a:	70af      	strb	r7, [r5, #2]
10050d6c:	0a32      	lsrs	r2, r6, #8
10050d6e:	706a      	strb	r2, [r5, #1]
10050d70:	702e      	strb	r6, [r5, #0]
10050d72:	0a00      	lsrs	r0, r0, #8
10050d74:	7168      	strb	r0, [r5, #5]
10050d76:	89a0      	ldrh	r0, [r4, #12]
10050d78:	3508      	adds	r5, #8
10050d7a:	b28a      	uxth	r2, r1
10050d7c:	1cc0      	adds	r0, r0, #3
10050d7e:	b281      	uxth	r1, r0
10050d80:	4620      	mov	r0, r4
10050d82:	462b      	mov	r3, r5
10050d84:	f7ff f926 	bl	1004ffd4 <ACL_pkt_read>
10050d88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10050d8a <aci_gatt_clt_disc_read_char_by_uuid_resp_event_copy>:
10050d8a:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10050d8c:	461d      	mov	r5, r3
10050d8e:	4604      	mov	r4, r0
10050d90:	7202      	strb	r2, [r0, #8]
10050d92:	7181      	strb	r1, [r0, #6]
10050d94:	0a10      	lsrs	r0, r2, #8
10050d96:	7260      	strb	r0, [r4, #9]
10050d98:	0a08      	lsrs	r0, r1, #8
10050d9a:	71e0      	strb	r0, [r4, #7]
10050d9c:	9e07      	ldr	r6, [sp, #28]
10050d9e:	89b0      	ldrh	r0, [r6, #12]
10050da0:	18c0      	adds	r0, r0, r3
10050da2:	b281      	uxth	r1, r0
10050da4:	2202      	movs	r2, #2
10050da6:	ab01      	add	r3, sp, #4
10050da8:	4630      	mov	r0, r6
10050daa:	f7ff f913 	bl	1004ffd4 <ACL_pkt_read>
10050dae:	9806      	ldr	r0, [sp, #24]
10050db0:	1e80      	subs	r0, r0, #2
10050db2:	7320      	strb	r0, [r4, #12]
10050db4:	9901      	ldr	r1, [sp, #4]
10050db6:	72a1      	strb	r1, [r4, #10]
10050db8:	0a09      	lsrs	r1, r1, #8
10050dba:	72e1      	strb	r1, [r4, #11]
10050dbc:	89b1      	ldrh	r1, [r6, #12]
10050dbe:	1869      	adds	r1, r5, r1
10050dc0:	1c89      	adds	r1, r1, #2
10050dc2:	b289      	uxth	r1, r1
10050dc4:	340d      	adds	r4, #13
10050dc6:	b2c2      	uxtb	r2, r0
10050dc8:	4630      	mov	r0, r6
10050dca:	4623      	mov	r3, r4
10050dcc:	f7ff f902 	bl	1004ffd4 <ACL_pkt_read>
10050dd0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10050dd2 <aci_gatt_srv_write_event_copy>:
10050dd2:	b5b0      	push	{r4, r5, r7, lr}
10050dd4:	4615      	mov	r5, r2
10050dd6:	4604      	mov	r4, r0
10050dd8:	9a05      	ldr	r2, [sp, #20]
10050dda:	71c2      	strb	r2, [r0, #7]
10050ddc:	9804      	ldr	r0, [sp, #16]
10050dde:	7160      	strb	r0, [r4, #5]
10050de0:	7123      	strb	r3, [r4, #4]
10050de2:	70a5      	strb	r5, [r4, #2]
10050de4:	7021      	strb	r1, [r4, #0]
10050de6:	0a13      	lsrs	r3, r2, #8
10050de8:	7223      	strb	r3, [r4, #8]
10050dea:	0a00      	lsrs	r0, r0, #8
10050dec:	71a0      	strb	r0, [r4, #6]
10050dee:	0a28      	lsrs	r0, r5, #8
10050df0:	70e0      	strb	r0, [r4, #3]
10050df2:	0a08      	lsrs	r0, r1, #8
10050df4:	7060      	strb	r0, [r4, #1]
10050df6:	9806      	ldr	r0, [sp, #24]
10050df8:	8981      	ldrh	r1, [r0, #12]
10050dfa:	3409      	adds	r4, #9
10050dfc:	1cc9      	adds	r1, r1, #3
10050dfe:	b289      	uxth	r1, r1
10050e00:	4623      	mov	r3, r4
10050e02:	f7ff f8e7 	bl	1004ffd4 <ACL_pkt_read>
10050e06:	bdb0      	pop	{r4, r5, r7, pc}

10050e08 <aci_att_srv_prepare_write_req_event_copy>:
10050e08:	b570      	push	{r4, r5, r6, lr}
10050e0a:	4615      	mov	r5, r2
10050e0c:	4604      	mov	r4, r0
10050e0e:	9a05      	ldr	r2, [sp, #20]
10050e10:	7202      	strb	r2, [r0, #8]
10050e12:	9804      	ldr	r0, [sp, #16]
10050e14:	71a0      	strb	r0, [r4, #6]
10050e16:	7123      	strb	r3, [r4, #4]
10050e18:	70a5      	strb	r5, [r4, #2]
10050e1a:	7021      	strb	r1, [r4, #0]
10050e1c:	0a16      	lsrs	r6, r2, #8
10050e1e:	7266      	strb	r6, [r4, #9]
10050e20:	0a00      	lsrs	r0, r0, #8
10050e22:	71e0      	strb	r0, [r4, #7]
10050e24:	0a18      	lsrs	r0, r3, #8
10050e26:	7160      	strb	r0, [r4, #5]
10050e28:	0a28      	lsrs	r0, r5, #8
10050e2a:	70e0      	strb	r0, [r4, #3]
10050e2c:	0a08      	lsrs	r0, r1, #8
10050e2e:	7060      	strb	r0, [r4, #1]
10050e30:	9806      	ldr	r0, [sp, #24]
10050e32:	8981      	ldrh	r1, [r0, #12]
10050e34:	340a      	adds	r4, #10
10050e36:	1d49      	adds	r1, r1, #5
10050e38:	b289      	uxth	r1, r1
10050e3a:	4623      	mov	r3, r4
10050e3c:	f7ff f8ca 	bl	1004ffd4 <ACL_pkt_read>
10050e40:	bd70      	pop	{r4, r5, r6, pc}

10050e42 <aci_gatt_clt_multi_notification_int_event_copy>:
10050e42:	b5b0      	push	{r4, r5, r7, lr}
10050e44:	461c      	mov	r4, r3
10050e46:	885b      	ldrh	r3, [r3, #2]
10050e48:	0a15      	lsrs	r5, r2, #8
10050e4a:	70c5      	strb	r5, [r0, #3]
10050e4c:	7082      	strb	r2, [r0, #2]
10050e4e:	0a0a      	lsrs	r2, r1, #8
10050e50:	7042      	strb	r2, [r0, #1]
10050e52:	7001      	strb	r1, [r0, #0]
10050e54:	1e59      	subs	r1, r3, #1
10050e56:	7101      	strb	r1, [r0, #4]
10050e58:	0a0a      	lsrs	r2, r1, #8
10050e5a:	7142      	strb	r2, [r0, #5]
10050e5c:	89a5      	ldrh	r5, [r4, #12]
10050e5e:	1d83      	adds	r3, r0, #6
10050e60:	b28a      	uxth	r2, r1
10050e62:	1c68      	adds	r0, r5, #1
10050e64:	b281      	uxth	r1, r0
10050e66:	4620      	mov	r0, r4
10050e68:	f7ff f8b4 	bl	1004ffd4 <ACL_pkt_read>
10050e6c:	bdb0      	pop	{r4, r5, r7, pc}

10050e6e <aci_att_clt_read_multiple_var_len_resp_event_copy>:
10050e6e:	b5b0      	push	{r4, r5, r7, lr}
10050e70:	461c      	mov	r4, r3
10050e72:	885b      	ldrh	r3, [r3, #2]
10050e74:	0a15      	lsrs	r5, r2, #8
10050e76:	70c5      	strb	r5, [r0, #3]
10050e78:	7082      	strb	r2, [r0, #2]
10050e7a:	0a0a      	lsrs	r2, r1, #8
10050e7c:	7042      	strb	r2, [r0, #1]
10050e7e:	7001      	strb	r1, [r0, #0]
10050e80:	1e59      	subs	r1, r3, #1
10050e82:	7101      	strb	r1, [r0, #4]
10050e84:	0a0a      	lsrs	r2, r1, #8
10050e86:	7142      	strb	r2, [r0, #5]
10050e88:	89a5      	ldrh	r5, [r4, #12]
10050e8a:	1d83      	adds	r3, r0, #6
10050e8c:	b28a      	uxth	r2, r1
10050e8e:	1c68      	adds	r0, r5, #1
10050e90:	b281      	uxth	r1, r0
10050e92:	4620      	mov	r0, r4
10050e94:	f7ff f89e 	bl	1004ffd4 <ACL_pkt_read>
10050e98:	bdb0      	pop	{r4, r5, r7, pc}

10050e9a <hci_rx_acl_data_event_copy>:
10050e9a:	b5b0      	push	{r4, r5, r7, lr}
10050e9c:	4614      	mov	r4, r2
10050e9e:	9a04      	ldr	r2, [sp, #16]
10050ea0:	70c2      	strb	r2, [r0, #3]
10050ea2:	7041      	strb	r1, [r0, #1]
10050ea4:	0a15      	lsrs	r5, r2, #8
10050ea6:	7105      	strb	r5, [r0, #4]
10050ea8:	250f      	movs	r5, #15
10050eaa:	022d      	lsls	r5, r5, #8
10050eac:	400d      	ands	r5, r1
10050eae:	07a1      	lsls	r1, r4, #30
10050eb0:	0c89      	lsrs	r1, r1, #18
10050eb2:	1949      	adds	r1, r1, r5
10050eb4:	039b      	lsls	r3, r3, #14
10050eb6:	18c9      	adds	r1, r1, r3
10050eb8:	0a09      	lsrs	r1, r1, #8
10050eba:	7081      	strb	r1, [r0, #2]
10050ebc:	1d43      	adds	r3, r0, #5
10050ebe:	9805      	ldr	r0, [sp, #20]
10050ec0:	2100      	movs	r1, #0
10050ec2:	f7ff f887 	bl	1004ffd4 <ACL_pkt_read>
10050ec6:	bdb0      	pop	{r4, r5, r7, pc}

10050ec8 <hci_le_advertising_report_event_copy>:
10050ec8:	b510      	push	{r4, lr}
10050eca:	4604      	mov	r4, r0
10050ecc:	7242      	strb	r2, [r0, #9]
10050ece:	7201      	strb	r1, [r0, #8]
10050ed0:	2001      	movs	r0, #1
10050ed2:	7120      	strb	r0, [r4, #4]
10050ed4:	4620      	mov	r0, r4
10050ed6:	300a      	adds	r0, #10
10050ed8:	2206      	movs	r2, #6
10050eda:	4619      	mov	r1, r3
10050edc:	f7f3 fd62 	bl	100449a4 <BLEPLAT_MemCpy>
10050ee0:	4620      	mov	r0, r4
10050ee2:	301c      	adds	r0, #28
10050ee4:	6160      	str	r0, [r4, #20]
10050ee6:	9a03      	ldr	r2, [sp, #12]
10050ee8:	7422      	strb	r2, [r4, #16]
10050eea:	9904      	ldr	r1, [sp, #16]
10050eec:	f7f3 fd5a 	bl	100449a4 <BLEPLAT_MemCpy>
10050ef0:	9802      	ldr	r0, [sp, #8]
10050ef2:	7620      	strb	r0, [r4, #24]
10050ef4:	bd10      	pop	{r4, pc}

10050ef6 <hci_le_periodic_advertising_response_report_event_copy>:
10050ef6:	b5b0      	push	{r4, r5, r7, lr}
10050ef8:	4614      	mov	r4, r2
10050efa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10050efc:	7342      	strb	r2, [r0, #13]
10050efe:	9d08      	ldr	r5, [sp, #32]
10050f00:	7305      	strb	r5, [r0, #12]
10050f02:	9d07      	ldr	r5, [sp, #28]
10050f04:	72c5      	strb	r5, [r0, #11]
10050f06:	9d06      	ldr	r5, [sp, #24]
10050f08:	7285      	strb	r5, [r0, #10]
10050f0a:	9d05      	ldr	r5, [sp, #20]
10050f0c:	7245      	strb	r5, [r0, #9]
10050f0e:	9d04      	ldr	r5, [sp, #16]
10050f10:	7205      	strb	r5, [r0, #8]
10050f12:	2501      	movs	r5, #1
10050f14:	71c5      	strb	r5, [r0, #7]
10050f16:	7183      	strb	r3, [r0, #6]
10050f18:	7144      	strb	r4, [r0, #5]
10050f1a:	7101      	strb	r1, [r0, #4]
10050f1c:	4603      	mov	r3, r0
10050f1e:	3314      	adds	r3, #20
10050f20:	6103      	str	r3, [r0, #16]
10050f22:	990a      	ldr	r1, [sp, #40]	@ 0x28
10050f24:	4618      	mov	r0, r3
10050f26:	f7f3 fd3d 	bl	100449a4 <BLEPLAT_MemCpy>
10050f2a:	bdb0      	pop	{r4, r5, r7, pc}

10050f2c <hci_le_directed_advertising_report_event_copy>:
10050f2c:	b5b0      	push	{r4, r5, r7, lr}
10050f2e:	4604      	mov	r4, r0
10050f30:	7182      	strb	r2, [r0, #6]
10050f32:	7141      	strb	r1, [r0, #5]
10050f34:	2001      	movs	r0, #1
10050f36:	7120      	strb	r0, [r4, #4]
10050f38:	1de0      	adds	r0, r4, #7
10050f3a:	2506      	movs	r5, #6
10050f3c:	4619      	mov	r1, r3
10050f3e:	462a      	mov	r2, r5
10050f40:	f7f3 fd30 	bl	100449a4 <BLEPLAT_MemCpy>
10050f44:	9804      	ldr	r0, [sp, #16]
10050f46:	7360      	strb	r0, [r4, #13]
10050f48:	4620      	mov	r0, r4
10050f4a:	300e      	adds	r0, #14
10050f4c:	9905      	ldr	r1, [sp, #20]
10050f4e:	462a      	mov	r2, r5
10050f50:	f7f3 fd28 	bl	100449a4 <BLEPLAT_MemCpy>
10050f54:	9806      	ldr	r0, [sp, #24]
10050f56:	7520      	strb	r0, [r4, #20]
10050f58:	bdb0      	pop	{r4, r5, r7, pc}
	...

10050f5c <hci_le_extended_advertising_report_event_copy>:
10050f5c:	b570      	push	{r4, r5, r6, lr}
10050f5e:	4604      	mov	r4, r0
10050f60:	7282      	strb	r2, [r0, #10]
10050f62:	8101      	strh	r1, [r0, #8]
10050f64:	2001      	movs	r0, #1
10050f66:	7120      	strb	r0, [r4, #4]
10050f68:	4620      	mov	r0, r4
10050f6a:	300b      	adds	r0, #11
10050f6c:	2506      	movs	r5, #6
10050f6e:	4e0f      	ldr	r6, [pc, #60]	@ (10050fac <__arm_cp.65_0>)
10050f70:	4619      	mov	r1, r3
10050f72:	462a      	mov	r2, r5
10050f74:	47b0      	blx	r6
10050f76:	980a      	ldr	r0, [sp, #40]	@ 0x28
10050f78:	7620      	strb	r0, [r4, #24]
10050f7a:	9809      	ldr	r0, [sp, #36]	@ 0x24
10050f7c:	82e0      	strh	r0, [r4, #22]
10050f7e:	9808      	ldr	r0, [sp, #32]
10050f80:	7560      	strb	r0, [r4, #21]
10050f82:	9807      	ldr	r0, [sp, #28]
10050f84:	7520      	strb	r0, [r4, #20]
10050f86:	9806      	ldr	r0, [sp, #24]
10050f88:	74e0      	strb	r0, [r4, #19]
10050f8a:	9805      	ldr	r0, [sp, #20]
10050f8c:	74a0      	strb	r0, [r4, #18]
10050f8e:	9804      	ldr	r0, [sp, #16]
10050f90:	7460      	strb	r0, [r4, #17]
10050f92:	4620      	mov	r0, r4
10050f94:	3019      	adds	r0, #25
10050f96:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10050f98:	462a      	mov	r2, r5
10050f9a:	47b0      	blx	r6
10050f9c:	4620      	mov	r0, r4
10050f9e:	3024      	adds	r0, #36	@ 0x24
10050fa0:	6220      	str	r0, [r4, #32]
10050fa2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10050fa4:	77e2      	strb	r2, [r4, #31]
10050fa6:	990d      	ldr	r1, [sp, #52]	@ 0x34
10050fa8:	47b0      	blx	r6
10050faa:	bd70      	pop	{r4, r5, r6, pc}

10050fac <__arm_cp.65_0>:
10050fac:	100449a5 	.word	0x100449a5

10050fb0 <aci_l2cap_proc_timeout_event_copy>:
10050fb0:	7001      	strb	r1, [r0, #0]
10050fb2:	2200      	movs	r2, #0
10050fb4:	7082      	strb	r2, [r0, #2]
10050fb6:	0a09      	lsrs	r1, r1, #8
10050fb8:	7041      	strb	r1, [r0, #1]
10050fba:	4770      	bx	lr

10050fbc <hci_le_enhanced_connection_complete_v2_event_int_cb>:
10050fbc:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10050fbe:	460d      	mov	r5, r1
10050fc0:	4604      	mov	r4, r0
10050fc2:	7908      	ldrb	r0, [r1, #4]
10050fc4:	2800      	cmp	r0, #0
10050fc6:	d123      	bne.n	10051010 <hci_le_enhanced_connection_complete_v2_event_int_cb+0x54>
10050fc8:	7968      	ldrb	r0, [r5, #5]
10050fca:	79a9      	ldrb	r1, [r5, #6]
10050fcc:	0209      	lsls	r1, r1, #8
10050fce:	1808      	adds	r0, r1, r0
10050fd0:	f7ff f830 	bl	10050034 <ACL_pkt_connection>
10050fd4:	7a2a      	ldrb	r2, [r5, #8]
10050fd6:	79e9      	ldrb	r1, [r5, #7]
10050fd8:	7968      	ldrb	r0, [r5, #5]
10050fda:	79ab      	ldrb	r3, [r5, #6]
10050fdc:	462e      	mov	r6, r5
10050fde:	3615      	adds	r6, #21
10050fe0:	462f      	mov	r7, r5
10050fe2:	370f      	adds	r7, #15
10050fe4:	9700      	str	r7, [sp, #0]
10050fe6:	9601      	str	r6, [sp, #4]
10050fe8:	021b      	lsls	r3, r3, #8
10050fea:	1818      	adds	r0, r3, r0
10050fec:	462b      	mov	r3, r5
10050fee:	3309      	adds	r3, #9
10050ff0:	f013 fd92 	bl	10064b18 <smp_sap_hci_le_enhanced_connection_complete_evt_hndl>
10050ff4:	7968      	ldrb	r0, [r5, #5]
10050ff6:	79a9      	ldrb	r1, [r5, #6]
10050ff8:	0209      	lsls	r1, r1, #8
10050ffa:	1808      	adds	r0, r1, r0
10050ffc:	f001 fbac 	bl	10052758 <GAT_att_cmn_connection>
10051000:	7968      	ldrb	r0, [r5, #5]
10051002:	79a9      	ldrb	r1, [r5, #6]
10051004:	0209      	lsls	r1, r1, #8
10051006:	1808      	adds	r0, r1, r0
10051008:	79e9      	ldrb	r1, [r5, #7]
1005100a:	f004 ffb7 	bl	10055f7c <l2c_sap_hci_le_connection_complete_evt_hndl>
1005100e:	7928      	ldrb	r0, [r5, #4]
10051010:	7969      	ldrb	r1, [r5, #5]
10051012:	79aa      	ldrb	r2, [r5, #6]
10051014:	0212      	lsls	r2, r2, #8
10051016:	1851      	adds	r1, r2, r1
10051018:	79ea      	ldrb	r2, [r5, #7]
1005101a:	f000 fe8a 	bl	10051d32 <GAP_hci_le_connection_complete_evt_hndl>
1005101e:	4809      	ldr	r0, [pc, #36]	@ (10051044 <__arm_cp.71_0>)
10051020:	6801      	ldr	r1, [r0, #0]
10051022:	203d      	movs	r0, #61	@ 0x3d
10051024:	5c0a      	ldrb	r2, [r1, r0]
10051026:	2000      	movs	r0, #0
10051028:	0692      	lsls	r2, r2, #26
1005102a:	d50a      	bpl.n	10051042 <hci_le_enhanced_connection_complete_v2_event_int_cb+0x86>
1005102c:	313d      	adds	r1, #61	@ 0x3d
1005102e:	7b89      	ldrb	r1, [r1, #14]
10051030:	07c9      	lsls	r1, r1, #31
10051032:	d006      	beq.n	10051042 <hci_le_enhanced_connection_complete_v2_event_int_cb+0x86>
10051034:	2020      	movs	r0, #32
10051036:	70e0      	strb	r0, [r4, #3]
10051038:	78a0      	ldrb	r0, [r4, #2]
1005103a:	21bf      	movs	r1, #191	@ 0xbf
1005103c:	4001      	ands	r1, r0
1005103e:	70a1      	strb	r1, [r4, #2]
10051040:	2084      	movs	r0, #132	@ 0x84
10051042:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10051044 <__arm_cp.71_0>:
10051044:	20000894 	.word	0x20000894

10051048 <hci_hardware_error_event_cb>:
10051048:	b5e0      	push	{r5, r6, r7, lr}
1005104a:	aa01      	add	r2, sp, #4
1005104c:	70d0      	strb	r0, [r2, #3]
1005104e:	2001      	movs	r0, #1
10051050:	7090      	strb	r0, [r2, #2]
10051052:	2010      	movs	r0, #16
10051054:	7050      	strb	r0, [r2, #1]
10051056:	2104      	movs	r1, #4
10051058:	7011      	strb	r1, [r2, #0]
1005105a:	4610      	mov	r0, r2
1005105c:	f7fc ffb4 	bl	1004dfc8 <BLE_STACK_Event>
10051060:	bd8c      	pop	{r2, r3, r7, pc}
	...

10051064 <GAP_set_scan_configuration>:
10051064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051066:	4616      	mov	r6, r2
10051068:	460c      	mov	r4, r1
1005106a:	4605      	mov	r5, r0
1005106c:	f000 fd12 	bl	10051a94 <gap_coded_phy_supported>
10051070:	4607      	mov	r7, r0
10051072:	f000 fc9f 	bl	100519b4 <gap_extended_adv_scan_supported>
10051076:	2e01      	cmp	r6, #1
10051078:	d104      	bne.n	10051084 <GAP_set_scan_configuration+0x20>
1005107a:	480e      	ldr	r0, [pc, #56]	@ (100510b4 <__arm_cp.0_0>)
1005107c:	6801      	ldr	r1, [r0, #0]
1005107e:	4608      	mov	r0, r1
10051080:	3030      	adds	r0, #48	@ 0x30
10051082:	e00a      	b.n	1005109a <GAP_set_scan_configuration+0x36>
10051084:	4601      	mov	r1, r0
10051086:	2012      	movs	r0, #18
10051088:	2e04      	cmp	r6, #4
1005108a:	d111      	bne.n	100510b0 <GAP_set_scan_configuration+0x4c>
1005108c:	2f00      	cmp	r7, #0
1005108e:	d00f      	beq.n	100510b0 <GAP_set_scan_configuration+0x4c>
10051090:	2900      	cmp	r1, #0
10051092:	d00d      	beq.n	100510b0 <GAP_set_scan_configuration+0x4c>
10051094:	4807      	ldr	r0, [pc, #28]	@ (100510b4 <__arm_cp.0_0>)
10051096:	6801      	ldr	r1, [r0, #0]
10051098:	6b88      	ldr	r0, [r1, #56]	@ 0x38
1005109a:	222a      	movs	r2, #42	@ 0x2a
1005109c:	5c8b      	ldrb	r3, [r1, r2]
1005109e:	4333      	orrs	r3, r6
100510a0:	548b      	strb	r3, [r1, r2]
100510a2:	882a      	ldrh	r2, [r5, #0]
100510a4:	850a      	strh	r2, [r1, #40]	@ 0x28
100510a6:	2206      	movs	r2, #6
100510a8:	4621      	mov	r1, r4
100510aa:	f7f3 fc7b 	bl	100449a4 <BLEPLAT_MemCpy>
100510ae:	2000      	movs	r0, #0
100510b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100510b2:	46c0      	nop			@ (mov r8, r8)

100510b4 <__arm_cp.0_0>:
100510b4:	20000844 	.word	0x20000844

100510b8 <GAP_set_connect_configuration>:
100510b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100510ba:	460d      	mov	r5, r1
100510bc:	4604      	mov	r4, r0
100510be:	f000 fce9 	bl	10051a94 <gap_coded_phy_supported>
100510c2:	4606      	mov	r6, r0
100510c4:	f000 fceb 	bl	10051a9e <gap_2mbps_phy_supported>
100510c8:	4607      	mov	r7, r0
100510ca:	f000 fc73 	bl	100519b4 <gap_extended_adv_scan_supported>
100510ce:	2d01      	cmp	r5, #1
100510d0:	d103      	bne.n	100510da <GAP_set_connect_configuration+0x22>
100510d2:	480f      	ldr	r0, [pc, #60]	@ (10051110 <__arm_cp.1_0>)
100510d4:	6800      	ldr	r0, [r0, #0]
100510d6:	303c      	adds	r0, #60	@ 0x3c
100510d8:	e013      	b.n	10051102 <GAP_set_connect_configuration+0x4a>
100510da:	2d02      	cmp	r5, #2
100510dc:	d107      	bne.n	100510ee <GAP_set_connect_configuration+0x36>
100510de:	2f00      	cmp	r7, #0
100510e0:	d005      	beq.n	100510ee <GAP_set_connect_configuration+0x36>
100510e2:	2800      	cmp	r0, #0
100510e4:	d003      	beq.n	100510ee <GAP_set_connect_configuration+0x36>
100510e6:	480a      	ldr	r0, [pc, #40]	@ (10051110 <__arm_cp.1_0>)
100510e8:	6800      	ldr	r0, [r0, #0]
100510ea:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
100510ec:	e009      	b.n	10051102 <GAP_set_connect_configuration+0x4a>
100510ee:	2112      	movs	r1, #18
100510f0:	2d04      	cmp	r5, #4
100510f2:	d10b      	bne.n	1005110c <GAP_set_connect_configuration+0x54>
100510f4:	2e00      	cmp	r6, #0
100510f6:	d009      	beq.n	1005110c <GAP_set_connect_configuration+0x54>
100510f8:	2800      	cmp	r0, #0
100510fa:	d007      	beq.n	1005110c <GAP_set_connect_configuration+0x54>
100510fc:	4804      	ldr	r0, [pc, #16]	@ (10051110 <__arm_cp.1_0>)
100510fe:	6800      	ldr	r0, [r0, #0]
10051100:	6d00      	ldr	r0, [r0, #80]	@ 0x50
10051102:	220e      	movs	r2, #14
10051104:	4621      	mov	r1, r4
10051106:	f7f3 fc4d 	bl	100449a4 <BLEPLAT_MemCpy>
1005110a:	2100      	movs	r1, #0
1005110c:	4608      	mov	r0, r1
1005110e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10051110 <__arm_cp.1_0>:
10051110:	20000844 	.word	0x20000844

10051114 <GAP_create_connection_ext>:
10051114:	b5f0      	push	{r4, r5, r6, r7, lr}
10051116:	b099      	sub	sp, #100	@ 0x64
10051118:	9303      	str	r3, [sp, #12]
1005111a:	9204      	str	r2, [sp, #16]
1005111c:	9105      	str	r1, [sp, #20]
1005111e:	9006      	str	r0, [sp, #24]
10051120:	4820      	ldr	r0, [pc, #128]	@ (100511a4 <__arm_cp.3_0>)
10051122:	6800      	ldr	r0, [r0, #0]
10051124:	4601      	mov	r1, r0
10051126:	3130      	adds	r1, #48	@ 0x30
10051128:	9117      	str	r1, [sp, #92]	@ 0x5c
1005112a:	9116      	str	r1, [sp, #88]	@ 0x58
1005112c:	4601      	mov	r1, r0
1005112e:	313c      	adds	r1, #60	@ 0x3c
10051130:	9113      	str	r1, [sp, #76]	@ 0x4c
10051132:	6b81      	ldr	r1, [r0, #56]	@ 0x38
10051134:	9118      	str	r1, [sp, #96]	@ 0x60
10051136:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
10051138:	6d00      	ldr	r0, [r0, #80]	@ 0x50
1005113a:	9114      	str	r1, [sp, #80]	@ 0x50
1005113c:	9015      	str	r0, [sp, #84]	@ 0x54
1005113e:	981e      	ldr	r0, [sp, #120]	@ 0x78
10051140:	7b09      	ldrb	r1, [r1, #12]
10051142:	2901      	cmp	r1, #1
10051144:	d101      	bne.n	1005114a <GAP_create_connection_ext+0x36>
10051146:	2102      	movs	r1, #2
10051148:	4308      	orrs	r0, r1
1005114a:	2100      	movs	r1, #0
1005114c:	a616      	add	r6, pc, #88	@ (adr r6, 100511a8 <__arm_cp.3_0+0x4>)
1005114e:	460f      	mov	r7, r1
10051150:	290c      	cmp	r1, #12
10051152:	d01e      	beq.n	10051192 <GAP_create_connection_ext+0x7e>
10051154:	7832      	ldrb	r2, [r6, #0]
10051156:	4202      	tst	r2, r0
10051158:	d018      	beq.n	1005118c <GAP_create_connection_ext+0x78>
1005115a:	aa16      	add	r2, sp, #88	@ 0x58
1005115c:	5852      	ldr	r2, [r2, r1]
1005115e:	8813      	ldrh	r3, [r2, #0]
10051160:	b2fc      	uxtb	r4, r7
10051162:	0124      	lsls	r4, r4, #4
10051164:	ad07      	add	r5, sp, #28
10051166:	532b      	strh	r3, [r5, r4]
10051168:	192b      	adds	r3, r5, r4
1005116a:	8852      	ldrh	r2, [r2, #2]
1005116c:	805a      	strh	r2, [r3, #2]
1005116e:	aa13      	add	r2, sp, #76	@ 0x4c
10051170:	5852      	ldr	r2, [r2, r1]
10051172:	8814      	ldrh	r4, [r2, #0]
10051174:	809c      	strh	r4, [r3, #4]
10051176:	8854      	ldrh	r4, [r2, #2]
10051178:	80dc      	strh	r4, [r3, #6]
1005117a:	8894      	ldrh	r4, [r2, #4]
1005117c:	811c      	strh	r4, [r3, #8]
1005117e:	88d4      	ldrh	r4, [r2, #6]
10051180:	815c      	strh	r4, [r3, #10]
10051182:	8914      	ldrh	r4, [r2, #8]
10051184:	819c      	strh	r4, [r3, #12]
10051186:	8952      	ldrh	r2, [r2, #10]
10051188:	81da      	strh	r2, [r3, #14]
1005118a:	1c7f      	adds	r7, r7, #1
1005118c:	1c76      	adds	r6, r6, #1
1005118e:	1d09      	adds	r1, r1, #4
10051190:	e7de      	b.n	10051150 <GAP_create_connection_ext+0x3c>
10051192:	a907      	add	r1, sp, #28
10051194:	9000      	str	r0, [sp, #0]
10051196:	9101      	str	r1, [sp, #4]
10051198:	ab03      	add	r3, sp, #12
1005119a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
1005119c:	f003 ffa8 	bl	100550f0 <hci_le_extended_create_connection_api>
100511a0:	b019      	add	sp, #100	@ 0x64
100511a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100511a4 <__arm_cp.3_0>:
100511a4:	20000844 	.word	0x20000844
100511a8:	00040201 	.word	0x00040201

100511ac <GAP_set_scan_parameters_ext>:
100511ac:	b5f0      	push	{r4, r5, r6, r7, lr}
100511ae:	b087      	sub	sp, #28
100511b0:	460a      	mov	r2, r1
100511b2:	9001      	str	r0, [sp, #4]
100511b4:	4916      	ldr	r1, [pc, #88]	@ (10051210 <__arm_cp.5_0>)
100511b6:	6808      	ldr	r0, [r1, #0]
100511b8:	4603      	mov	r3, r0
100511ba:	3330      	adds	r3, #48	@ 0x30
100511bc:	9305      	str	r3, [sp, #20]
100511be:	9000      	str	r0, [sp, #0]
100511c0:	6b83      	ldr	r3, [r0, #56]	@ 0x38
100511c2:	9306      	str	r3, [sp, #24]
100511c4:	2300      	movs	r3, #0
100511c6:	ac05      	add	r4, sp, #20
100511c8:	461e      	mov	r6, r3
100511ca:	2b02      	cmp	r3, #2
100511cc:	d013      	beq.n	100511f6 <GAP_set_scan_parameters_ext+0x4a>
100511ce:	a011      	add	r0, pc, #68	@ (adr r0, 10051214 <__arm_cp.5_0+0x4>)
100511d0:	5cc7      	ldrb	r7, [r0, r3]
100511d2:	4217      	tst	r7, r2
100511d4:	d00c      	beq.n	100511f0 <GAP_set_scan_parameters_ext+0x44>
100511d6:	b2f7      	uxtb	r7, r6
100511d8:	2106      	movs	r1, #6
100511da:	4379      	muls	r1, r7
100511dc:	6827      	ldr	r7, [r4, #0]
100511de:	7938      	ldrb	r0, [r7, #4]
100511e0:	ad02      	add	r5, sp, #8
100511e2:	5468      	strb	r0, [r5, r1]
100511e4:	1868      	adds	r0, r5, r1
100511e6:	8839      	ldrh	r1, [r7, #0]
100511e8:	8041      	strh	r1, [r0, #2]
100511ea:	8879      	ldrh	r1, [r7, #2]
100511ec:	8081      	strh	r1, [r0, #4]
100511ee:	1c76      	adds	r6, r6, #1
100511f0:	1d24      	adds	r4, r4, #4
100511f2:	1c5b      	adds	r3, r3, #1
100511f4:	e7e9      	b.n	100511ca <GAP_set_scan_parameters_ext+0x1e>
100511f6:	2029      	movs	r0, #41	@ 0x29
100511f8:	9900      	ldr	r1, [sp, #0]
100511fa:	5c09      	ldrb	r1, [r1, r0]
100511fc:	ab02      	add	r3, sp, #8
100511fe:	9801      	ldr	r0, [sp, #4]
10051200:	f004 fa12 	bl	10055628 <hci_le_set_extended_scan_parameters_api>
10051204:	2812      	cmp	r0, #18
10051206:	d100      	bne.n	1005120a <GAP_set_scan_parameters_ext+0x5e>
10051208:	20d1      	movs	r0, #209	@ 0xd1
1005120a:	b007      	add	sp, #28
1005120c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005120e:	46c0      	nop			@ (mov r8, r8)

10051210 <__arm_cp.5_0>:
10051210:	20000844 	.word	0x20000844
10051214:	00000401 	.word	0x00000401

10051218 <GAP_enable_disable_scan_ext>:
10051218:	b5b0      	push	{r4, r5, r7, lr}
1005121a:	4605      	mov	r5, r0
1005121c:	2200      	movs	r2, #0
1005121e:	4613      	mov	r3, r2
10051220:	f004 fa17 	bl	10055652 <hci_le_set_extended_scan_enable_api>
10051224:	4604      	mov	r4, r0
10051226:	2d00      	cmp	r5, #0
10051228:	d106      	bne.n	10051238 <GAP_enable_disable_scan_ext+0x20>
1005122a:	4806      	ldr	r0, [pc, #24]	@ (10051244 <__arm_cp.8_0>)
1005122c:	6800      	ldr	r0, [r0, #0]
1005122e:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
10051230:	2100      	movs	r1, #0
10051232:	221c      	movs	r2, #28
10051234:	f7f3 fbc6 	bl	100449c4 <BLEPLAT_MemSet>
10051238:	2c12      	cmp	r4, #18
1005123a:	d101      	bne.n	10051240 <GAP_enable_disable_scan_ext+0x28>
1005123c:	202e      	movs	r0, #46	@ 0x2e
1005123e:	43c4      	mvns	r4, r0
10051240:	b2e0      	uxtb	r0, r4
10051242:	bdb0      	pop	{r4, r5, r7, pc}

10051244 <__arm_cp.8_0>:
10051244:	20000844 	.word	0x20000844

10051248 <GAP_start_procedure>:
10051248:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005124a:	9302      	str	r3, [sp, #8]
1005124c:	9201      	str	r2, [sp, #4]
1005124e:	460d      	mov	r5, r1
10051250:	4607      	mov	r7, r0
10051252:	482b      	ldr	r0, [pc, #172]	@ (10051300 <__arm_cp.9_0>)
10051254:	6806      	ldr	r6, [r0, #0]
10051256:	f000 fc22 	bl	10051a9e <gap_2mbps_phy_supported>
1005125a:	0044      	lsls	r4, r0, #1
1005125c:	f000 fc1a 	bl	10051a94 <gap_coded_phy_supported>
10051260:	0080      	lsls	r0, r0, #2
10051262:	4320      	orrs	r0, r4
10051264:	1c40      	adds	r0, r0, #1
10051266:	4028      	ands	r0, r5
10051268:	42a8      	cmp	r0, r5
1005126a:	d116      	bne.n	1005129a <GAP_start_procedure+0x52>
1005126c:	4634      	mov	r4, r6
1005126e:	342a      	adds	r4, #42	@ 0x2a
10051270:	7820      	ldrb	r0, [r4, #0]
10051272:	4028      	ands	r0, r5
10051274:	42a8      	cmp	r0, r5
10051276:	d112      	bne.n	1005129e <GAP_start_procedure+0x56>
10051278:	20df      	movs	r0, #223	@ 0xdf
1005127a:	4207      	tst	r7, r0
1005127c:	d003      	beq.n	10051286 <GAP_start_procedure+0x3e>
1005127e:	f7fd f906 	bl	1004e48e <conn_supp_csr_ucfg>
10051282:	2800      	cmp	r0, #0
10051284:	d007      	beq.n	10051296 <GAP_start_procedure+0x4e>
10051286:	4630      	mov	r0, r6
10051288:	305d      	adds	r0, #93	@ 0x5d
1005128a:	7800      	ldrb	r0, [r0, #0]
1005128c:	2f40      	cmp	r7, #64	@ 0x40
1005128e:	d109      	bne.n	100512a4 <GAP_start_procedure+0x5c>
10051290:	21e7      	movs	r1, #231	@ 0xe7
10051292:	4208      	tst	r0, r1
10051294:	d008      	beq.n	100512a8 <GAP_start_procedure+0x60>
10051296:	240c      	movs	r4, #12
10051298:	e002      	b.n	100512a0 <GAP_start_procedure+0x58>
1005129a:	2412      	movs	r4, #18
1005129c:	e000      	b.n	100512a0 <GAP_start_procedure+0x58>
1005129e:	24d1      	movs	r4, #209	@ 0xd1
100512a0:	4620      	mov	r0, r4
100512a2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100512a4:	2800      	cmp	r0, #0
100512a6:	d1f6      	bne.n	10051296 <GAP_start_procedure+0x4e>
100512a8:	f000 fe36 	bl	10051f18 <GAP_generate_new_rpa>
100512ac:	4601      	mov	r1, r0
100512ae:	2023      	movs	r0, #35	@ 0x23
100512b0:	4207      	tst	r7, r0
100512b2:	d005      	beq.n	100512c0 <GAP_start_procedure+0x78>
100512b4:	4638      	mov	r0, r7
100512b6:	460c      	mov	r4, r1
100512b8:	4629      	mov	r1, r5
100512ba:	f000 f823 	bl	10051304 <GAP_scan_procedure>
100512be:	e011      	b.n	100512e4 <GAP_start_procedure+0x9c>
100512c0:	07e8      	lsls	r0, r5, #31
100512c2:	d002      	beq.n	100512ca <GAP_start_procedure+0x82>
100512c4:	7fa0      	ldrb	r0, [r4, #30]
100512c6:	2800      	cmp	r0, #0
100512c8:	d017      	beq.n	100512fa <GAP_start_procedure+0xb2>
100512ca:	0768      	lsls	r0, r5, #29
100512cc:	d503      	bpl.n	100512d6 <GAP_start_procedure+0x8e>
100512ce:	6d30      	ldr	r0, [r6, #80]	@ 0x50
100512d0:	7b00      	ldrb	r0, [r0, #12]
100512d2:	2800      	cmp	r0, #0
100512d4:	d011      	beq.n	100512fa <GAP_start_procedure+0xb2>
100512d6:	4638      	mov	r0, r7
100512d8:	460c      	mov	r4, r1
100512da:	4629      	mov	r1, r5
100512dc:	9a01      	ldr	r2, [sp, #4]
100512de:	9b02      	ldr	r3, [sp, #8]
100512e0:	f7fc ff90 	bl	1004e204 <GAP_connection_procedure_ucfg>
100512e4:	4621      	mov	r1, r4
100512e6:	4604      	mov	r4, r0
100512e8:	2c00      	cmp	r4, #0
100512ea:	d0d9      	beq.n	100512a0 <GAP_start_procedure+0x58>
100512ec:	2900      	cmp	r1, #0
100512ee:	d1d7      	bne.n	100512a0 <GAP_start_procedure+0x58>
100512f0:	2000      	movs	r0, #0
100512f2:	4601      	mov	r1, r0
100512f4:	f000 fde8 	bl	10051ec8 <GAP_start_privacy_timer>
100512f8:	e7d2      	b.n	100512a0 <GAP_start_procedure+0x58>
100512fa:	24d2      	movs	r4, #210	@ 0xd2
100512fc:	e7f4      	b.n	100512e8 <GAP_start_procedure+0xa0>
100512fe:	46c0      	nop			@ (mov r8, r8)

10051300 <__arm_cp.9_0>:
10051300:	20000844 	.word	0x20000844

10051304 <GAP_scan_procedure>:
10051304:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10051306:	460e      	mov	r6, r1
10051308:	4604      	mov	r4, r0
1005130a:	2703      	movs	r7, #3
1005130c:	4007      	ands	r7, r0
1005130e:	481b      	ldr	r0, [pc, #108]	@ (1005137c <__arm_cp.10_0>)
10051310:	6801      	ldr	r1, [r0, #0]
10051312:	460d      	mov	r5, r1
10051314:	3528      	adds	r5, #40	@ 0x28
10051316:	2f00      	cmp	r7, #0
10051318:	d007      	beq.n	1005132a <GAP_scan_procedure+0x26>
1005131a:	2c01      	cmp	r4, #1
1005131c:	d000      	beq.n	10051320 <GAP_scan_procedure+0x1c>
1005131e:	2402      	movs	r4, #2
10051320:	7868      	ldrb	r0, [r5, #1]
10051322:	2800      	cmp	r0, #0
10051324:	d006      	beq.n	10051334 <GAP_scan_procedure+0x30>
10051326:	26d1      	movs	r6, #209	@ 0xd1
10051328:	e026      	b.n	10051378 <GAP_scan_procedure+0x74>
1005132a:	9102      	str	r1, [sp, #8]
1005132c:	2000      	movs	r0, #0
1005132e:	9001      	str	r0, [sp, #4]
10051330:	2420      	movs	r4, #32
10051332:	e003      	b.n	1005133c <GAP_scan_procedure+0x38>
10051334:	9102      	str	r1, [sp, #8]
10051336:	2005      	movs	r0, #5
10051338:	02c0      	lsls	r0, r0, #11
1005133a:	9001      	str	r0, [sp, #4]
1005133c:	f000 fd1a 	bl	10051d74 <GAP_get_own_address_type>
10051340:	4631      	mov	r1, r6
10051342:	f7fc ff33 	bl	1004e1ac <GAP_set_scan_parameters_ucfg>
10051346:	4606      	mov	r6, r0
10051348:	2800      	cmp	r0, #0
1005134a:	d115      	bne.n	10051378 <GAP_scan_procedure+0x74>
1005134c:	7829      	ldrb	r1, [r5, #0]
1005134e:	2001      	movs	r0, #1
10051350:	f7fc ff42 	bl	1004e1d8 <GAP_enable_disable_scan_ucfg>
10051354:	4606      	mov	r6, r0
10051356:	2800      	cmp	r0, #0
10051358:	d10e      	bne.n	10051378 <GAP_scan_procedure+0x74>
1005135a:	9902      	ldr	r1, [sp, #8]
1005135c:	315d      	adds	r1, #93	@ 0x5d
1005135e:	7808      	ldrb	r0, [r1, #0]
10051360:	4320      	orrs	r0, r4
10051362:	7008      	strb	r0, [r1, #0]
10051364:	2600      	movs	r6, #0
10051366:	2f00      	cmp	r7, #0
10051368:	d006      	beq.n	10051378 <GAP_scan_procedure+0x74>
1005136a:	4804      	ldr	r0, [pc, #16]	@ (1005137c <__arm_cp.10_0>)
1005136c:	6800      	ldr	r0, [r0, #0]
1005136e:	2102      	movs	r1, #2
10051370:	2201      	movs	r2, #1
10051372:	9b01      	ldr	r3, [sp, #4]
10051374:	f014 f805 	bl	10065382 <CST_start>
10051378:	4630      	mov	r0, r6
1005137a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005137c <__arm_cp.10_0>:
1005137c:	20000844 	.word	0x20000844

10051380 <GAP_connection_procedure>:
10051380:	b5f0      	push	{r4, r5, r6, r7, lr}
10051382:	b085      	sub	sp, #20
10051384:	9302      	str	r3, [sp, #8]
10051386:	9203      	str	r2, [sp, #12]
10051388:	9104      	str	r1, [sp, #16]
1005138a:	4607      	mov	r7, r0
1005138c:	4827      	ldr	r0, [pc, #156]	@ (1005142c <__arm_cp.12_0>)
1005138e:	6804      	ldr	r4, [r0, #0]
10051390:	f000 fcf0 	bl	10051d74 <GAP_get_own_address_type>
10051394:	4605      	mov	r5, r0
10051396:	205e      	movs	r0, #94	@ 0x5e
10051398:	2100      	movs	r1, #0
1005139a:	9101      	str	r1, [sp, #4]
1005139c:	5421      	strb	r1, [r4, r0]
1005139e:	4626      	mov	r6, r4
100513a0:	365d      	adds	r6, #93	@ 0x5d
100513a2:	0638      	lsls	r0, r7, #24
100513a4:	0f80      	lsrs	r0, r0, #30
100513a6:	d00d      	beq.n	100513c4 <GAP_connection_procedure+0x44>
100513a8:	7830      	ldrb	r0, [r6, #0]
100513aa:	06c0      	lsls	r0, r0, #27
100513ac:	0f80      	lsrs	r0, r0, #30
100513ae:	d005      	beq.n	100513bc <GAP_connection_procedure+0x3c>
100513b0:	2000      	movs	r0, #0
100513b2:	4601      	mov	r1, r0
100513b4:	f7fc ff10 	bl	1004e1d8 <GAP_enable_disable_scan_ucfg>
100513b8:	2800      	cmp	r0, #0
100513ba:	d135      	bne.n	10051428 <GAP_connection_procedure+0xa8>
100513bc:	9804      	ldr	r0, [sp, #16]
100513be:	9000      	str	r0, [sp, #0]
100513c0:	2300      	movs	r3, #0
100513c2:	e022      	b.n	1005140a <GAP_connection_procedure+0x8a>
100513c4:	0778      	lsls	r0, r7, #29
100513c6:	d41d      	bmi.n	10051404 <GAP_connection_procedure+0x84>
100513c8:	06f8      	lsls	r0, r7, #27
100513ca:	0f81      	lsrs	r1, r0, #30
100513cc:	d029      	beq.n	10051422 <GAP_connection_procedure+0xa2>
100513ce:	3428      	adds	r4, #40	@ 0x28
100513d0:	2800      	cmp	r0, #0
100513d2:	d504      	bpl.n	100513de <GAP_connection_procedure+0x5e>
100513d4:	7860      	ldrb	r0, [r4, #1]
100513d6:	2102      	movs	r1, #2
100513d8:	4301      	orrs	r1, r0
100513da:	2903      	cmp	r1, #3
100513dc:	d123      	bne.n	10051426 <GAP_connection_procedure+0xa6>
100513de:	0738      	lsls	r0, r7, #28
100513e0:	d504      	bpl.n	100513ec <GAP_connection_procedure+0x6c>
100513e2:	7860      	ldrb	r0, [r4, #1]
100513e4:	2102      	movs	r1, #2
100513e6:	4301      	orrs	r1, r0
100513e8:	2902      	cmp	r1, #2
100513ea:	d11c      	bne.n	10051426 <GAP_connection_procedure+0xa6>
100513ec:	f000 fcc2 	bl	10051d74 <GAP_get_own_address_type>
100513f0:	9904      	ldr	r1, [sp, #16]
100513f2:	f7fc fedb 	bl	1004e1ac <GAP_set_scan_parameters_ucfg>
100513f6:	2800      	cmp	r0, #0
100513f8:	d116      	bne.n	10051428 <GAP_connection_procedure+0xa8>
100513fa:	7821      	ldrb	r1, [r4, #0]
100513fc:	2001      	movs	r0, #1
100513fe:	f7fc feeb 	bl	1004e1d8 <GAP_enable_disable_scan_ucfg>
10051402:	e007      	b.n	10051414 <GAP_connection_procedure+0x94>
10051404:	9804      	ldr	r0, [sp, #16]
10051406:	9000      	str	r0, [sp, #0]
10051408:	2301      	movs	r3, #1
1005140a:	9802      	ldr	r0, [sp, #8]
1005140c:	9903      	ldr	r1, [sp, #12]
1005140e:	462a      	mov	r2, r5
10051410:	f7fc fea9 	bl	1004e166 <GAP_create_connection_ucfg>
10051414:	2800      	cmp	r0, #0
10051416:	d107      	bne.n	10051428 <GAP_connection_procedure+0xa8>
10051418:	7830      	ldrb	r0, [r6, #0]
1005141a:	4338      	orrs	r0, r7
1005141c:	7030      	strb	r0, [r6, #0]
1005141e:	9801      	ldr	r0, [sp, #4]
10051420:	e002      	b.n	10051428 <GAP_connection_procedure+0xa8>
10051422:	2012      	movs	r0, #18
10051424:	e000      	b.n	10051428 <GAP_connection_procedure+0xa8>
10051426:	20d1      	movs	r0, #209	@ 0xd1
10051428:	b005      	add	sp, #20
1005142a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005142c <__arm_cp.12_0>:
1005142c:	20000844 	.word	0x20000844

10051430 <GAP_terminate_gap_procedure>:
10051430:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051432:	4604      	mov	r4, r0
10051434:	2012      	movs	r0, #18
10051436:	2c00      	cmp	r4, #0
10051438:	d016      	beq.n	10051468 <GAP_terminate_gap_procedure+0x38>
1005143a:	1e61      	subs	r1, r4, #1
1005143c:	420c      	tst	r4, r1
1005143e:	d113      	bne.n	10051468 <GAP_terminate_gap_procedure+0x38>
10051440:	4e17      	ldr	r6, [pc, #92]	@ (100514a0 <__arm_cp.14_0>)
10051442:	6837      	ldr	r7, [r6, #0]
10051444:	205d      	movs	r0, #93	@ 0x5d
10051446:	5c38      	ldrb	r0, [r7, r0]
10051448:	4220      	tst	r0, r4
1005144a:	d00e      	beq.n	1005146a <GAP_terminate_gap_procedure+0x3a>
1005144c:	21c4      	movs	r1, #196	@ 0xc4
1005144e:	420c      	tst	r4, r1
10051450:	d00d      	beq.n	1005146e <GAP_terminate_gap_procedure+0x3e>
10051452:	f003 fe49 	bl	100550e8 <hci_le_create_connection_cancel_api>
10051456:	07a1      	lsls	r1, r4, #30
10051458:	d006      	beq.n	10051468 <GAP_terminate_gap_procedure+0x38>
1005145a:	2800      	cmp	r0, #0
1005145c:	d104      	bne.n	10051468 <GAP_terminate_gap_procedure+0x38>
1005145e:	6830      	ldr	r0, [r6, #0]
10051460:	2102      	movs	r1, #2
10051462:	f013 ff58 	bl	10065316 <CST_stop>
10051466:	2000      	movs	r0, #0
10051468:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005146a:	200c      	movs	r0, #12
1005146c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005146e:	06e1      	lsls	r1, r4, #27
10051470:	0f89      	lsrs	r1, r1, #30
10051472:	d001      	beq.n	10051478 <GAP_terminate_gap_procedure+0x48>
10051474:	0640      	lsls	r0, r0, #25
10051476:	d4ec      	bmi.n	10051452 <GAP_terminate_gap_procedure+0x22>
10051478:	2500      	movs	r5, #0
1005147a:	4628      	mov	r0, r5
1005147c:	4629      	mov	r1, r5
1005147e:	f7fc feab 	bl	1004e1d8 <GAP_enable_disable_scan_ucfg>
10051482:	2800      	cmp	r0, #0
10051484:	d1e7      	bne.n	10051456 <GAP_terminate_gap_procedure+0x26>
10051486:	375d      	adds	r7, #93	@ 0x5d
10051488:	4669      	mov	r1, sp
1005148a:	704d      	strb	r5, [r1, #1]
1005148c:	700c      	strb	r4, [r1, #0]
1005148e:	703d      	strb	r5, [r7, #0]
10051490:	2002      	movs	r0, #2
10051492:	f000 fb27 	bl	10051ae4 <aci_gap_proc_complete_event_wrapper>
10051496:	f000 fc11 	bl	10051cbc <GAP_stop_privacy_timer>
1005149a:	4628      	mov	r0, r5
1005149c:	e7db      	b.n	10051456 <GAP_terminate_gap_procedure+0x26>
1005149e:	46c0      	nop			@ (mov r8, r8)

100514a0 <__arm_cp.14_0>:
100514a0:	20000844 	.word	0x20000844

100514a4 <GAP_discover_peer_name>:
100514a4:	b510      	push	{r4, lr}
100514a6:	b086      	sub	sp, #24
100514a8:	ac01      	add	r4, sp, #4
100514aa:	a108      	add	r1, pc, #32	@ (adr r1, 100514cc <GAP_discover_peer_name+0x28>)
100514ac:	2214      	movs	r2, #20
100514ae:	4620      	mov	r0, r4
100514b0:	f01a fc03 	bl	1006bcba <__aeabi_memcpy>
100514b4:	480a      	ldr	r0, [pc, #40]	@ (100514e0 <__arm_cp.16_1>)
100514b6:	6800      	ldr	r0, [r0, #0]
100514b8:	2172      	movs	r1, #114	@ 0x72
100514ba:	5a40      	ldrh	r0, [r0, r1]
100514bc:	9400      	str	r4, [sp, #0]
100514be:	2104      	movs	r1, #4
100514c0:	2201      	movs	r2, #1
100514c2:	4b08      	ldr	r3, [pc, #32]	@ (100514e4 <__arm_cp.16_2>)
100514c4:	f002 fb51 	bl	10053b6a <GAT_clt_read_chr_by_uuid>
100514c8:	b006      	add	sp, #24
100514ca:	bd10      	pop	{r4, pc}
100514cc:	5f9b34fb 	.word	0x5f9b34fb
100514d0:	80000080 	.word	0x80000080
100514d4:	00001000 	.word	0x00001000
100514d8:	00002a00 	.word	0x00002a00
100514dc:	00000010 	.word	0x00000010

100514e0 <__arm_cp.16_1>:
100514e0:	20000844 	.word	0x20000844

100514e4 <__arm_cp.16_2>:
100514e4:	0000ffff 	.word	0x0000ffff

100514e8 <GAP_name_disc_proc_connected_check>:
100514e8:	b51c      	push	{r2, r3, r4, lr}
100514ea:	4811      	ldr	r0, [pc, #68]	@ (10051530 <__arm_cp.18_0>)
100514ec:	6804      	ldr	r4, [r0, #0]
100514ee:	f7fc feb8 	bl	1004e262 <GAP_discover_peer_name_ucfg>
100514f2:	2888      	cmp	r0, #136	@ 0x88
100514f4:	d007      	beq.n	10051506 <GAP_name_disc_proc_connected_check+0x1e>
100514f6:	280c      	cmp	r0, #12
100514f8:	d005      	beq.n	10051506 <GAP_name_disc_proc_connected_check+0x1e>
100514fa:	345d      	adds	r4, #93	@ 0x5d
100514fc:	2800      	cmp	r0, #0
100514fe:	d108      	bne.n	10051512 <GAP_name_disc_proc_connected_check+0x2a>
10051500:	2002      	movs	r0, #2
10051502:	7060      	strb	r0, [r4, #1]
10051504:	bd1c      	pop	{r2, r3, r4, pc}
10051506:	2005      	movs	r0, #5
10051508:	f013 fe92 	bl	10065230 <tsk_notify_idx>
1005150c:	f7f1 f9e3 	bl	100428d6 <BLE_STACK_ProcessRequest>
10051510:	bd1c      	pop	{r2, r3, r4, pc}
10051512:	2000      	movs	r0, #0
10051514:	7060      	strb	r0, [r4, #1]
10051516:	7820      	ldrb	r0, [r4, #0]
10051518:	217f      	movs	r1, #127	@ 0x7f
1005151a:	4001      	ands	r1, r0
1005151c:	7021      	strb	r1, [r4, #0]
1005151e:	a901      	add	r1, sp, #4
10051520:	2086      	movs	r0, #134	@ 0x86
10051522:	7048      	strb	r0, [r1, #1]
10051524:	2080      	movs	r0, #128	@ 0x80
10051526:	7008      	strb	r0, [r1, #0]
10051528:	2002      	movs	r0, #2
1005152a:	f000 fadb 	bl	10051ae4 <aci_gap_proc_complete_event_wrapper>
1005152e:	bd1c      	pop	{r2, r3, r4, pc}

10051530 <__arm_cp.18_0>:
10051530:	20000844 	.word	0x20000844

10051534 <GAP_central_connection_complete_handler>:
10051534:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10051536:	4a10      	ldr	r2, [pc, #64]	@ (10051578 <__arm_cp.20_0>)
10051538:	6814      	ldr	r4, [r2, #0]
1005153a:	225d      	movs	r2, #93	@ 0x5d
1005153c:	5ca2      	ldrb	r2, [r4, r2]
1005153e:	2800      	cmp	r0, #0
10051540:	d10a      	bne.n	10051558 <GAP_central_connection_complete_handler+0x24>
10051542:	2080      	movs	r0, #128	@ 0x80
10051544:	4010      	ands	r0, r2
10051546:	d007      	beq.n	10051558 <GAP_central_connection_complete_handler+0x24>
10051548:	3472      	adds	r4, #114	@ 0x72
1005154a:	8021      	strh	r1, [r4, #0]
1005154c:	2005      	movs	r0, #5
1005154e:	f013 fe6f 	bl	10065230 <tsk_notify_idx>
10051552:	f7f1 f9c0 	bl	100428d6 <BLE_STACK_ProcessRequest>
10051556:	e00c      	b.n	10051572 <GAP_central_connection_complete_handler+0x3e>
10051558:	20dc      	movs	r0, #220	@ 0xdc
1005155a:	4202      	tst	r2, r0
1005155c:	d00b      	beq.n	10051576 <GAP_central_connection_complete_handler+0x42>
1005155e:	345d      	adds	r4, #93	@ 0x5d
10051560:	a901      	add	r1, sp, #4
10051562:	2500      	movs	r5, #0
10051564:	704d      	strb	r5, [r1, #1]
10051566:	4002      	ands	r2, r0
10051568:	700a      	strb	r2, [r1, #0]
1005156a:	2002      	movs	r0, #2
1005156c:	f000 faba 	bl	10051ae4 <aci_gap_proc_complete_event_wrapper>
10051570:	7025      	strb	r5, [r4, #0]
10051572:	f000 fba3 	bl	10051cbc <GAP_stop_privacy_timer>
10051576:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10051578 <__arm_cp.20_0>:
10051578:	20000844 	.word	0x20000844

1005157c <GAP_parse_connectable_advertising_report>:
1005157c:	2901      	cmp	r1, #1
1005157e:	d103      	bne.n	10051588 <GAP_parse_connectable_advertising_report+0xc>
10051580:	8901      	ldrh	r1, [r0, #8]
10051582:	2001      	movs	r0, #1
10051584:	4008      	ands	r0, r1
10051586:	4770      	bx	lr
10051588:	2108      	movs	r1, #8
1005158a:	5640      	ldrsb	r0, [r0, r1]
1005158c:	2804      	cmp	r0, #4
1005158e:	d802      	bhi.n	10051596 <GAP_parse_connectable_advertising_report+0x1a>
10051590:	a102      	add	r1, pc, #8	@ (adr r1, 1005159c <GAP_parse_connectable_advertising_report+0x20>)
10051592:	5c08      	ldrb	r0, [r1, r0]
10051594:	4770      	bx	lr
10051596:	2000      	movs	r0, #0
10051598:	4770      	bx	lr
1005159a:	46c0      	nop			@ (mov r8, r8)
1005159c:	00000101 	.word	0x00000101
100515a0:	00000001 	.word	0x00000001

100515a4 <GAP_parse_advertising_report>:
100515a4:	b5f0      	push	{r4, r5, r6, r7, lr}
100515a6:	b087      	sub	sp, #28
100515a8:	2901      	cmp	r1, #1
100515aa:	d11a      	bne.n	100515e2 <GAP_parse_advertising_report+0x3e>
100515ac:	4603      	mov	r3, r0
100515ae:	3308      	adds	r3, #8
100515b0:	881f      	ldrh	r7, [r3, #0]
100515b2:	2601      	movs	r6, #1
100515b4:	073a      	lsls	r2, r7, #28
100515b6:	d47c      	bmi.n	100516b2 <GAP_parse_advertising_report+0x10e>
100515b8:	9102      	str	r1, [sp, #8]
100515ba:	9301      	str	r3, [sp, #4]
100515bc:	7a81      	ldrb	r1, [r0, #10]
100515be:	4603      	mov	r3, r0
100515c0:	330b      	adds	r3, #11
100515c2:	6a04      	ldr	r4, [r0, #32]
100515c4:	7fc5      	ldrb	r5, [r0, #31]
100515c6:	06f8      	lsls	r0, r7, #27
100515c8:	9304      	str	r3, [sp, #16]
100515ca:	9103      	str	r1, [sp, #12]
100515cc:	d414      	bmi.n	100515f8 <GAP_parse_advertising_report+0x54>
100515ce:	2200      	movs	r2, #0
100515d0:	4618      	mov	r0, r3
100515d2:	f000 f873 	bl	100516bc <GAP_check_discovered_address_list>
100515d6:	2801      	cmp	r0, #1
100515d8:	d05d      	beq.n	10051696 <GAP_parse_advertising_report+0xf2>
100515da:	2800      	cmp	r0, #0
100515dc:	9902      	ldr	r1, [sp, #8]
100515de:	d00c      	beq.n	100515fa <GAP_parse_advertising_report+0x56>
100515e0:	e067      	b.n	100516b2 <GAP_parse_advertising_report+0x10e>
100515e2:	7a02      	ldrb	r2, [r0, #8]
100515e4:	2a04      	cmp	r2, #4
100515e6:	d101      	bne.n	100515ec <GAP_parse_advertising_report+0x48>
100515e8:	2601      	movs	r6, #1
100515ea:	e062      	b.n	100516b2 <GAP_parse_advertising_report+0x10e>
100515ec:	6944      	ldr	r4, [r0, #20]
100515ee:	7c05      	ldrb	r5, [r0, #16]
100515f0:	2000      	movs	r0, #0
100515f2:	9004      	str	r0, [sp, #16]
100515f4:	9003      	str	r0, [sp, #12]
100515f6:	e000      	b.n	100515fa <GAP_parse_advertising_report+0x56>
100515f8:	9902      	ldr	r1, [sp, #8]
100515fa:	482f      	ldr	r0, [pc, #188]	@ (100516b8 <__arm_cp.24_0>)
100515fc:	6800      	ldr	r0, [r0, #0]
100515fe:	2701      	movs	r7, #1
10051600:	b2ba      	uxth	r2, r7
10051602:	2600      	movs	r6, #0
10051604:	42aa      	cmp	r2, r5
10051606:	d21b      	bcs.n	10051640 <GAP_parse_advertising_report+0x9c>
10051608:	1913      	adds	r3, r2, r4
1005160a:	1e5b      	subs	r3, r3, #1
1005160c:	781b      	ldrb	r3, [r3, #0]
1005160e:	2b00      	cmp	r3, #0
10051610:	d016      	beq.n	10051640 <GAP_parse_advertising_report+0x9c>
10051612:	5ca2      	ldrb	r2, [r4, r2]
10051614:	1c7f      	adds	r7, r7, #1
10051616:	2a01      	cmp	r2, #1
10051618:	d001      	beq.n	1005161e <GAP_parse_advertising_report+0x7a>
1005161a:	18ff      	adds	r7, r7, r3
1005161c:	e7f0      	b.n	10051600 <GAP_parse_advertising_report+0x5c>
1005161e:	225d      	movs	r2, #93	@ 0x5d
10051620:	5c82      	ldrb	r2, [r0, r2]
10051622:	07d3      	lsls	r3, r2, #31
10051624:	d108      	bne.n	10051638 <GAP_parse_advertising_report+0x94>
10051626:	0792      	lsls	r2, r2, #30
10051628:	d50a      	bpl.n	10051640 <GAP_parse_advertising_report+0x9c>
1005162a:	b2ba      	uxth	r2, r7
1005162c:	5ca2      	ldrb	r2, [r4, r2]
1005162e:	2603      	movs	r6, #3
10051630:	4016      	ands	r6, r2
10051632:	1e72      	subs	r2, r6, #1
10051634:	4196      	sbcs	r6, r2
10051636:	e003      	b.n	10051640 <GAP_parse_advertising_report+0x9c>
10051638:	b2ba      	uxth	r2, r7
1005163a:	5ca2      	ldrb	r2, [r4, r2]
1005163c:	2601      	movs	r6, #1
1005163e:	4016      	ands	r6, r2
10051640:	2901      	cmp	r1, #1
10051642:	d136      	bne.n	100516b2 <GAP_parse_advertising_report+0x10e>
10051644:	2e00      	cmp	r6, #0
10051646:	d024      	beq.n	10051692 <GAP_parse_advertising_report+0xee>
10051648:	9901      	ldr	r1, [sp, #4]
1005164a:	8809      	ldrh	r1, [r1, #0]
1005164c:	2270      	movs	r2, #112	@ 0x70
1005164e:	400a      	ands	r2, r1
10051650:	2a20      	cmp	r2, #32
10051652:	d1c9      	bne.n	100515e8 <GAP_parse_advertising_report+0x44>
10051654:	2600      	movs	r6, #0
10051656:	43f4      	mvns	r4, r6
10051658:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
1005165a:	1fc7      	subs	r7, r0, #7
1005165c:	2c03      	cmp	r4, #3
1005165e:	d028      	beq.n	100516b2 <GAP_parse_advertising_report+0x10e>
10051660:	a905      	add	r1, sp, #20
10051662:	2000      	movs	r0, #0
10051664:	7188      	strb	r0, [r1, #6]
10051666:	8088      	strh	r0, [r1, #4]
10051668:	9005      	str	r0, [sp, #20]
1005166a:	1dff      	adds	r7, r7, #7
1005166c:	2207      	movs	r2, #7
1005166e:	4638      	mov	r0, r7
10051670:	f7f3 f9b8 	bl	100449e4 <BLEPLAT_MemCmp>
10051674:	0600      	lsls	r0, r0, #24
10051676:	1c64      	adds	r4, r4, #1
10051678:	2800      	cmp	r0, #0
1005167a:	d1ef      	bne.n	1005165c <GAP_parse_advertising_report+0xb8>
1005167c:	2c03      	cmp	r4, #3
1005167e:	d80a      	bhi.n	10051696 <GAP_parse_advertising_report+0xf2>
10051680:	2206      	movs	r2, #6
10051682:	4638      	mov	r0, r7
10051684:	9c04      	ldr	r4, [sp, #16]
10051686:	4621      	mov	r1, r4
10051688:	f7f3 f98c 	bl	100449a4 <BLEPLAT_MemCpy>
1005168c:	9903      	ldr	r1, [sp, #12]
1005168e:	71b9      	strb	r1, [r7, #6]
10051690:	e003      	b.n	1005169a <GAP_parse_advertising_report+0xf6>
10051692:	2600      	movs	r6, #0
10051694:	e00d      	b.n	100516b2 <GAP_parse_advertising_report+0x10e>
10051696:	9c04      	ldr	r4, [sp, #16]
10051698:	9903      	ldr	r1, [sp, #12]
1005169a:	9801      	ldr	r0, [sp, #4]
1005169c:	8800      	ldrh	r0, [r0, #0]
1005169e:	2220      	movs	r2, #32
100516a0:	4002      	ands	r2, r0
100516a2:	3240      	adds	r2, #64	@ 0x40
100516a4:	2a40      	cmp	r2, #64	@ 0x40
100516a6:	d19f      	bne.n	100515e8 <GAP_parse_advertising_report+0x44>
100516a8:	2601      	movs	r6, #1
100516aa:	4620      	mov	r0, r4
100516ac:	4632      	mov	r2, r6
100516ae:	f000 f805 	bl	100516bc <GAP_check_discovered_address_list>
100516b2:	4630      	mov	r0, r6
100516b4:	b007      	add	sp, #28
100516b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100516b8 <__arm_cp.24_0>:
100516b8:	20000844 	.word	0x20000844

100516bc <GAP_check_discovered_address_list>:
100516bc:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100516be:	9200      	str	r2, [sp, #0]
100516c0:	9102      	str	r1, [sp, #8]
100516c2:	4607      	mov	r7, r0
100516c4:	4810      	ldr	r0, [pc, #64]	@ (10051708 <__arm_cp.25_0>)
100516c6:	6800      	ldr	r0, [r0, #0]
100516c8:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
100516ca:	2600      	movs	r6, #0
100516cc:	9601      	str	r6, [sp, #4]
100516ce:	2e1c      	cmp	r6, #28
100516d0:	d00d      	beq.n	100516ee <GAP_check_discovered_address_list+0x32>
100516d2:	19a5      	adds	r5, r4, r6
100516d4:	2206      	movs	r2, #6
100516d6:	4628      	mov	r0, r5
100516d8:	4639      	mov	r1, r7
100516da:	f7f3 f983 	bl	100449e4 <BLEPLAT_MemCmp>
100516de:	0600      	lsls	r0, r0, #24
100516e0:	d103      	bne.n	100516ea <GAP_check_discovered_address_list+0x2e>
100516e2:	79a8      	ldrb	r0, [r5, #6]
100516e4:	9902      	ldr	r1, [sp, #8]
100516e6:	4288      	cmp	r0, r1
100516e8:	d004      	beq.n	100516f4 <GAP_check_discovered_address_list+0x38>
100516ea:	1df6      	adds	r6, r6, #7
100516ec:	e7ef      	b.n	100516ce <GAP_check_discovered_address_list+0x12>
100516ee:	9c01      	ldr	r4, [sp, #4]
100516f0:	4620      	mov	r0, r4
100516f2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100516f4:	2401      	movs	r4, #1
100516f6:	9800      	ldr	r0, [sp, #0]
100516f8:	2800      	cmp	r0, #0
100516fa:	d0f9      	beq.n	100516f0 <GAP_check_discovered_address_list+0x34>
100516fc:	2100      	movs	r1, #0
100516fe:	2207      	movs	r2, #7
10051700:	4628      	mov	r0, r5
10051702:	f7f3 f95f 	bl	100449c4 <BLEPLAT_MemSet>
10051706:	e7f3      	b.n	100516f0 <GAP_check_discovered_address_list+0x34>

10051708 <__arm_cp.25_0>:
10051708:	20000844 	.word	0x20000844

1005170c <GAP_DiscProcTimeoutcb>:
1005170c:	b51c      	push	{r2, r3, r4, lr}
1005170e:	4811      	ldr	r0, [pc, #68]	@ (10051754 <__arm_cp.27_0>)
10051710:	6804      	ldr	r4, [r0, #0]
10051712:	2000      	movs	r0, #0
10051714:	4601      	mov	r1, r0
10051716:	f7fc fd5f 	bl	1004e1d8 <GAP_enable_disable_scan_ucfg>
1005171a:	a901      	add	r1, sp, #4
1005171c:	7048      	strb	r0, [r1, #1]
1005171e:	205d      	movs	r0, #93	@ 0x5d
10051720:	5c20      	ldrb	r0, [r4, r0]
10051722:	07c1      	lsls	r1, r0, #31
10051724:	345d      	adds	r4, #93	@ 0x5d
10051726:	2900      	cmp	r1, #0
10051728:	d005      	beq.n	10051736 <GAP_DiscProcTimeoutcb+0x2a>
1005172a:	a901      	add	r1, sp, #4
1005172c:	2201      	movs	r2, #1
1005172e:	700a      	strb	r2, [r1, #0]
10051730:	21fe      	movs	r1, #254	@ 0xfe
10051732:	4008      	ands	r0, r1
10051734:	7020      	strb	r0, [r4, #0]
10051736:	0781      	lsls	r1, r0, #30
10051738:	d505      	bpl.n	10051746 <GAP_DiscProcTimeoutcb+0x3a>
1005173a:	a901      	add	r1, sp, #4
1005173c:	2202      	movs	r2, #2
1005173e:	700a      	strb	r2, [r1, #0]
10051740:	21fd      	movs	r1, #253	@ 0xfd
10051742:	4008      	ands	r0, r1
10051744:	7020      	strb	r0, [r4, #0]
10051746:	2002      	movs	r0, #2
10051748:	a901      	add	r1, sp, #4
1005174a:	f000 f9cb 	bl	10051ae4 <aci_gap_proc_complete_event_wrapper>
1005174e:	f000 fab5 	bl	10051cbc <GAP_stop_privacy_timer>
10051752:	bd1c      	pop	{r2, r3, r4, pc}

10051754 <__arm_cp.27_0>:
10051754:	20000844 	.word	0x20000844

10051758 <GAP_started_gatt_proc>:
10051758:	4907      	ldr	r1, [pc, #28]	@ (10051778 <__arm_cp.28_0>)
1005175a:	6809      	ldr	r1, [r1, #0]
1005175c:	225d      	movs	r2, #93	@ 0x5d
1005175e:	5c8a      	ldrb	r2, [r1, r2]
10051760:	2388      	movs	r3, #136	@ 0x88
10051762:	421a      	tst	r2, r3
10051764:	d004      	beq.n	10051770 <GAP_started_gatt_proc+0x18>
10051766:	3172      	adds	r1, #114	@ 0x72
10051768:	8809      	ldrh	r1, [r1, #0]
1005176a:	4041      	eors	r1, r0
1005176c:	0508      	lsls	r0, r1, #20
1005176e:	d001      	beq.n	10051774 <GAP_started_gatt_proc+0x1c>
10051770:	2000      	movs	r0, #0
10051772:	4770      	bx	lr
10051774:	2001      	movs	r0, #1
10051776:	4770      	bx	lr

10051778 <__arm_cp.28_0>:
10051778:	20000844 	.word	0x20000844

1005177c <gap_timers_callback_wrapper>:
1005177c:	b580      	push	{r7, lr}
1005177e:	6940      	ldr	r0, [r0, #20]
10051780:	4901      	ldr	r1, [pc, #4]	@ (10051788 <__arm_cp.0_0>)
10051782:	f013 fe8c 	bl	1006549e <cst_sharedCallback>
10051786:	bd80      	pop	{r7, pc}

10051788 <__arm_cp.0_0>:
10051788:	1005178d 	.word	0x1005178d

1005178c <gap_timers_callback>:
1005178c:	b580      	push	{r7, lr}
1005178e:	2802      	cmp	r0, #2
10051790:	d007      	beq.n	100517a2 <gap_timers_callback+0x16>
10051792:	2801      	cmp	r0, #1
10051794:	d009      	beq.n	100517aa <gap_timers_callback+0x1e>
10051796:	2800      	cmp	r0, #0
10051798:	d106      	bne.n	100517a8 <gap_timers_callback+0x1c>
1005179a:	2000      	movs	r0, #0
1005179c:	f7fc fdc2 	bl	1004e324 <GAP_LimDiscTimeoutcb_ucfg>
100517a0:	bd80      	pop	{r7, pc}
100517a2:	2000      	movs	r0, #0
100517a4:	f7fc fdaf 	bl	1004e306 <GAP_DiscProcTimeoutcb_ucfg>
100517a8:	bd80      	pop	{r7, pc}
100517aa:	2000      	movs	r0, #0
100517ac:	f000 f802 	bl	100517b4 <GAP_PrivateAddrTimercb>
100517b0:	bd80      	pop	{r7, pc}
	...

100517b4 <GAP_PrivateAddrTimercb>:
100517b4:	b5f0      	push	{r4, r5, r6, r7, lr}
100517b6:	b087      	sub	sp, #28
100517b8:	4831      	ldr	r0, [pc, #196]	@ (10051880 <__arm_cp.2_0>)
100517ba:	6804      	ldr	r4, [r0, #0]
100517bc:	a906      	add	r1, sp, #24
100517be:	9104      	str	r1, [sp, #16]
100517c0:	2000      	movs	r0, #0
100517c2:	9001      	str	r0, [sp, #4]
100517c4:	7008      	strb	r0, [r1, #0]
100517c6:	ae05      	add	r6, sp, #20
100517c8:	2001      	movs	r0, #1
100517ca:	7030      	strb	r0, [r6, #0]
100517cc:	f000 f952 	bl	10051a74 <GAP_reset_privacy_timer>
100517d0:	205d      	movs	r0, #93	@ 0x5d
100517d2:	9403      	str	r4, [sp, #12]
100517d4:	5c27      	ldrb	r7, [r4, r0]
100517d6:	1e78      	subs	r0, r7, #1
100517d8:	463d      	mov	r5, r7
100517da:	4185      	sbcs	r5, r0
100517dc:	2020      	movs	r0, #32
100517de:	4038      	ands	r0, r7
100517e0:	4244      	negs	r4, r0
100517e2:	9002      	str	r0, [sp, #8]
100517e4:	4144      	adcs	r4, r0
100517e6:	9804      	ldr	r0, [sp, #16]
100517e8:	4631      	mov	r1, r6
100517ea:	f000 fe21 	bl	10052430 <GAP_check_adv_status>
100517ee:	2f00      	cmp	r7, #0
100517f0:	d101      	bne.n	100517f6 <GAP_PrivateAddrTimercb+0x42>
100517f2:	2801      	cmp	r0, #1
100517f4:	d13e      	bne.n	10051874 <GAP_PrivateAddrTimercb+0xc0>
100517f6:	402c      	ands	r4, r5
100517f8:	d138      	bne.n	1005186c <GAP_PrivateAddrTimercb+0xb8>
100517fa:	a805      	add	r0, sp, #20
100517fc:	7800      	ldrb	r0, [r0, #0]
100517fe:	2800      	cmp	r0, #0
10051800:	d034      	beq.n	1005186c <GAP_PrivateAddrTimercb+0xb8>
10051802:	9c03      	ldr	r4, [sp, #12]
10051804:	4620      	mov	r0, r4
10051806:	305d      	adds	r0, #93	@ 0x5d
10051808:	7bc0      	ldrb	r0, [r0, #15]
1005180a:	2800      	cmp	r0, #0
1005180c:	d034      	beq.n	10051878 <GAP_PrivateAddrTimercb+0xc4>
1005180e:	3428      	adds	r4, #40	@ 0x28
10051810:	9d02      	ldr	r5, [sp, #8]
10051812:	2d00      	cmp	r5, #0
10051814:	d003      	beq.n	1005181e <GAP_PrivateAddrTimercb+0x6a>
10051816:	7821      	ldrb	r1, [r4, #0]
10051818:	2000      	movs	r0, #0
1005181a:	f7fc fcdd 	bl	1004e1d8 <GAP_enable_disable_scan_ucfg>
1005181e:	a806      	add	r0, sp, #24
10051820:	7800      	ldrb	r0, [r0, #0]
10051822:	2801      	cmp	r0, #1
10051824:	d102      	bne.n	1005182c <GAP_PrivateAddrTimercb+0x78>
10051826:	2000      	movs	r0, #0
10051828:	f7fc fdcc 	bl	1004e3c4 <GAP_suspend_resume_active_advertising_sets_ucfg>
1005182c:	f000 fb74 	bl	10051f18 <GAP_generate_new_rpa>
10051830:	2800      	cmp	r0, #0
10051832:	d104      	bne.n	1005183e <GAP_PrivateAddrTimercb+0x8a>
10051834:	2000      	movs	r0, #0
10051836:	2101      	movs	r1, #1
10051838:	f000 fb46 	bl	10051ec8 <GAP_start_privacy_timer>
1005183c:	9001      	str	r0, [sp, #4]
1005183e:	2d00      	cmp	r5, #0
10051840:	d00a      	beq.n	10051858 <GAP_PrivateAddrTimercb+0xa4>
10051842:	7821      	ldrb	r1, [r4, #0]
10051844:	2001      	movs	r0, #1
10051846:	f7fc fcc7 	bl	1004e1d8 <GAP_enable_disable_scan_ucfg>
1005184a:	2800      	cmp	r0, #0
1005184c:	d004      	beq.n	10051858 <GAP_PrivateAddrTimercb+0xa4>
1005184e:	9801      	ldr	r0, [sp, #4]
10051850:	2800      	cmp	r0, #0
10051852:	d001      	beq.n	10051858 <GAP_PrivateAddrTimercb+0xa4>
10051854:	f000 fa32 	bl	10051cbc <GAP_stop_privacy_timer>
10051858:	a806      	add	r0, sp, #24
1005185a:	7800      	ldrb	r0, [r0, #0]
1005185c:	2801      	cmp	r0, #1
1005185e:	d109      	bne.n	10051874 <GAP_PrivateAddrTimercb+0xc0>
10051860:	2006      	movs	r0, #6
10051862:	f013 fce5 	bl	10065230 <tsk_notify_idx>
10051866:	f7f1 f836 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005186a:	e003      	b.n	10051874 <GAP_PrivateAddrTimercb+0xc0>
1005186c:	2001      	movs	r0, #1
1005186e:	4601      	mov	r1, r0
10051870:	f000 fb2a 	bl	10051ec8 <GAP_start_privacy_timer>
10051874:	b007      	add	sp, #28
10051876:	bdf0      	pop	{r4, r5, r6, r7, pc}
10051878:	2000      	movs	r0, #0
1005187a:	2101      	movs	r1, #1
1005187c:	e7f8      	b.n	10051870 <GAP_PrivateAddrTimercb+0xbc>
1005187e:	46c0      	nop			@ (mov r8, r8)

10051880 <__arm_cp.2_0>:
10051880:	20000844 	.word	0x20000844

10051884 <GAP_init_context>:
10051884:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10051886:	461f      	mov	r7, r3
10051888:	9201      	str	r2, [sp, #4]
1005188a:	9102      	str	r1, [sp, #8]
1005188c:	4605      	mov	r5, r0
1005188e:	2401      	movs	r4, #1
10051890:	2178      	movs	r1, #120	@ 0x78
10051892:	4620      	mov	r0, r4
10051894:	f011 face 	bl	10062e34 <csmem_mem_0_assign>
10051898:	21e1      	movs	r1, #225	@ 0xe1
1005189a:	0089      	lsls	r1, r1, #2
1005189c:	225a      	movs	r2, #90	@ 0x5a
1005189e:	5281      	strh	r1, [r0, r2]
100518a0:	4e24      	ldr	r6, [pc, #144]	@ (10051934 <__arm_cp.3_0>)
100518a2:	6030      	str	r0, [r6, #0]
100518a4:	2d01      	cmp	r5, #1
100518a6:	d117      	bne.n	100518d8 <GAP_init_context+0x54>
100518a8:	2001      	movs	r0, #1
100518aa:	2106      	movs	r1, #6
100518ac:	f011 fac2 	bl	10062e34 <csmem_mem_0_assign>
100518b0:	4601      	mov	r1, r0
100518b2:	6830      	ldr	r0, [r6, #0]
100518b4:	6381      	str	r1, [r0, #56]	@ 0x38
100518b6:	2f01      	cmp	r7, #1
100518b8:	d10e      	bne.n	100518d8 <GAP_init_context+0x54>
100518ba:	2501      	movs	r5, #1
100518bc:	270e      	movs	r7, #14
100518be:	4628      	mov	r0, r5
100518c0:	4639      	mov	r1, r7
100518c2:	f011 fab7 	bl	10062e34 <csmem_mem_0_assign>
100518c6:	6831      	ldr	r1, [r6, #0]
100518c8:	64c8      	str	r0, [r1, #76]	@ 0x4c
100518ca:	4628      	mov	r0, r5
100518cc:	4639      	mov	r1, r7
100518ce:	f011 fab1 	bl	10062e34 <csmem_mem_0_assign>
100518d2:	4601      	mov	r1, r0
100518d4:	6830      	ldr	r0, [r6, #0]
100518d6:	6501      	str	r1, [r0, #80]	@ 0x50
100518d8:	9902      	ldr	r1, [sp, #8]
100518da:	2901      	cmp	r1, #1
100518dc:	d10b      	bne.n	100518f6 <GAP_init_context+0x72>
100518de:	9801      	ldr	r0, [sp, #4]
100518e0:	2801      	cmp	r0, #1
100518e2:	d105      	bne.n	100518f0 <GAP_init_context+0x6c>
100518e4:	201c      	movs	r0, #28
100518e6:	2101      	movs	r1, #1
100518e8:	f011 faa4 	bl	10062e34 <csmem_mem_0_assign>
100518ec:	6831      	ldr	r1, [r6, #0]
100518ee:	62c8      	str	r0, [r1, #44]	@ 0x2c
100518f0:	4811      	ldr	r0, [pc, #68]	@ (10051938 <__arm_cp.3_1>)
100518f2:	7e84      	ldrb	r4, [r0, #26]
100518f4:	e001      	b.n	100518fa <GAP_init_context+0x76>
100518f6:	2100      	movs	r1, #0
100518f8:	62c1      	str	r1, [r0, #44]	@ 0x2c
100518fa:	2114      	movs	r1, #20
100518fc:	4620      	mov	r0, r4
100518fe:	f011 fa99 	bl	10062e34 <csmem_mem_0_assign>
10051902:	6831      	ldr	r1, [r6, #0]
10051904:	6548      	str	r0, [r1, #84]	@ 0x54
10051906:	4c0d      	ldr	r4, [pc, #52]	@ (1005193c <__arm_cp.3_2>)
10051908:	2104      	movs	r1, #4
1005190a:	2201      	movs	r2, #1
1005190c:	4620      	mov	r0, r4
1005190e:	f011 fa7f 	bl	10062e10 <csmem_mem_assign>
10051912:	6831      	ldr	r1, [r6, #0]
10051914:	6208      	str	r0, [r1, #32]
10051916:	2503      	movs	r5, #3
10051918:	2202      	movs	r2, #2
1005191a:	4620      	mov	r0, r4
1005191c:	4629      	mov	r1, r5
1005191e:	f011 fa77 	bl	10062e10 <csmem_mem_assign>
10051922:	6831      	ldr	r1, [r6, #0]
10051924:	6248      	str	r0, [r1, #36]	@ 0x24
10051926:	4a06      	ldr	r2, [pc, #24]	@ (10051940 <__arm_cp.3_3>)
10051928:	2307      	movs	r3, #7
1005192a:	4608      	mov	r0, r1
1005192c:	4629      	mov	r1, r5
1005192e:	f013 fcdd 	bl	100652ec <CST_init>
10051932:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10051934 <__arm_cp.3_0>:
10051934:	20000844 	.word	0x20000844

10051938 <__arm_cp.3_1>:
10051938:	200008a8 	.word	0x200008a8

1005193c <__arm_cp.3_2>:
1005193c:	200008a4 	.word	0x200008a4

10051940 <__arm_cp.3_3>:
10051940:	1005177d 	.word	0x1005177d

10051944 <GAP_get_default_le_event_mask>:
10051944:	b5b0      	push	{r4, r5, r7, lr}
10051946:	4604      	mov	r4, r0
10051948:	2100      	movs	r1, #0
1005194a:	2508      	movs	r5, #8
1005194c:	462a      	mov	r2, r5
1005194e:	f7f3 f839 	bl	100449c4 <BLEPLAT_MemSet>
10051952:	7820      	ldrb	r0, [r4, #0]
10051954:	21df      	movs	r1, #223	@ 0xdf
10051956:	4301      	orrs	r1, r0
10051958:	7021      	strb	r1, [r4, #0]
1005195a:	7860      	ldrb	r0, [r4, #1]
1005195c:	2109      	movs	r1, #9
1005195e:	4301      	orrs	r1, r0
10051960:	7061      	strb	r1, [r4, #1]
10051962:	78a1      	ldrb	r1, [r4, #2]
10051964:	4329      	orrs	r1, r5
10051966:	70a1      	strb	r1, [r4, #2]
10051968:	4911      	ldr	r1, [pc, #68]	@ (100519b0 <__arm_cp.4_0>)
1005196a:	6809      	ldr	r1, [r1, #0]
1005196c:	225c      	movs	r2, #92	@ 0x5c
1005196e:	5c89      	ldrb	r1, [r1, r2]
10051970:	0689      	lsls	r1, r1, #26
10051972:	d502      	bpl.n	1005197a <GAP_get_default_le_event_mask+0x36>
10051974:	210f      	movs	r1, #15
10051976:	4308      	orrs	r0, r1
10051978:	7060      	strb	r0, [r4, #1]
1005197a:	f7fd fa7a 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
1005197e:	2801      	cmp	r0, #1
10051980:	d107      	bne.n	10051992 <GAP_get_default_le_event_mask+0x4e>
10051982:	7860      	ldrb	r0, [r4, #1]
10051984:	2112      	movs	r1, #18
10051986:	4301      	orrs	r1, r0
10051988:	7061      	strb	r1, [r4, #1]
1005198a:	78a0      	ldrb	r0, [r4, #2]
1005198c:	2107      	movs	r1, #7
1005198e:	4301      	orrs	r1, r0
10051990:	70a1      	strb	r1, [r4, #2]
10051992:	f7fc fed9 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
10051996:	b2c0      	uxtb	r0, r0
10051998:	2801      	cmp	r0, #1
1005199a:	d107      	bne.n	100519ac <GAP_get_default_le_event_mask+0x68>
1005199c:	7860      	ldrb	r0, [r4, #1]
1005199e:	21e0      	movs	r1, #224	@ 0xe0
100519a0:	4301      	orrs	r1, r0
100519a2:	7061      	strb	r1, [r4, #1]
100519a4:	78a0      	ldrb	r0, [r4, #2]
100519a6:	2180      	movs	r1, #128	@ 0x80
100519a8:	4301      	orrs	r1, r0
100519aa:	70a1      	strb	r1, [r4, #2]
100519ac:	bdb0      	pop	{r4, r5, r7, pc}
100519ae:	46c0      	nop			@ (mov r8, r8)

100519b0 <__arm_cp.4_0>:
100519b0:	20000844 	.word	0x20000844

100519b4 <gap_extended_adv_scan_supported>:
100519b4:	b580      	push	{r7, lr}
100519b6:	f7fd fa5c 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
100519ba:	bd80      	pop	{r7, pc}

100519bc <GAP_Init>:
100519bc:	b5f0      	push	{r4, r5, r6, r7, lr}
100519be:	b087      	sub	sp, #28
100519c0:	4606      	mov	r6, r0
100519c2:	a806      	add	r0, sp, #24
100519c4:	2700      	movs	r7, #0
100519c6:	7007      	strb	r7, [r0, #0]
100519c8:	2412      	movs	r4, #18
100519ca:	2901      	cmp	r1, #1
100519cc:	d901      	bls.n	100519d2 <GAP_Init+0x16>
100519ce:	4620      	mov	r0, r4
100519d0:	e04a      	b.n	10051a68 <GAP_Init+0xac>
100519d2:	460d      	mov	r5, r1
100519d4:	4825      	ldr	r0, [pc, #148]	@ (10051a6c <__arm_cp.7_0>)
100519d6:	6800      	ldr	r0, [r0, #0]
100519d8:	9002      	str	r0, [sp, #8]
100519da:	f013 ff47 	bl	1006586c <IDD_Initialize_Device_IDs>
100519de:	2800      	cmp	r0, #0
100519e0:	d142      	bne.n	10051a68 <GAP_Init+0xac>
100519e2:	9902      	ldr	r1, [sp, #8]
100519e4:	315c      	adds	r1, #92	@ 0x5c
100519e6:	7808      	ldrb	r0, [r1, #0]
100519e8:	07c0      	lsls	r0, r0, #31
100519ea:	d111      	bne.n	10051a10 <GAP_Init+0x54>
100519ec:	78c8      	ldrb	r0, [r1, #3]
100519ee:	4328      	orrs	r0, r5
100519f0:	9101      	str	r1, [sp, #4]
100519f2:	70c8      	strb	r0, [r1, #3]
100519f4:	a805      	add	r0, sp, #20
100519f6:	2107      	movs	r1, #7
100519f8:	7001      	strb	r1, [r0, #0]
100519fa:	2e00      	cmp	r6, #0
100519fc:	d012      	beq.n	10051a24 <GAP_Init+0x68>
100519fe:	2e02      	cmp	r6, #2
10051a00:	d008      	beq.n	10051a14 <GAP_Init+0x58>
10051a02:	2e01      	cmp	r6, #1
10051a04:	4620      	mov	r0, r4
10051a06:	d12f      	bne.n	10051a68 <GAP_Init+0xac>
10051a08:	a806      	add	r0, sp, #24
10051a0a:	2110      	movs	r1, #16
10051a0c:	7001      	strb	r1, [r0, #0]
10051a0e:	e009      	b.n	10051a24 <GAP_Init+0x68>
10051a10:	200c      	movs	r0, #12
10051a12:	e029      	b.n	10051a68 <GAP_Init+0xac>
10051a14:	a806      	add	r0, sp, #24
10051a16:	2120      	movs	r1, #32
10051a18:	7001      	strb	r1, [r0, #0]
10051a1a:	a905      	add	r1, sp, #20
10051a1c:	f000 f9be 	bl	10051d9c <GAP_enable_controller_privacy_ucfg_weak>
10051a20:	2800      	cmp	r0, #0
10051a22:	d121      	bne.n	10051a68 <GAP_Init+0xac>
10051a24:	4628      	mov	r0, r5
10051a26:	f7fc fcbd 	bl	1004e3a4 <GAP_init_advertising_sets_ucfg>
10051a2a:	2800      	cmp	r0, #0
10051a2c:	d11c      	bne.n	10051a68 <GAP_Init+0xac>
10051a2e:	9802      	ldr	r0, [sp, #8]
10051a30:	3060      	adds	r0, #96	@ 0x60
10051a32:	f7fc fcaa 	bl	1004e38a <GAP_set_controller_random_address_ucfg>
10051a36:	2800      	cmp	r0, #0
10051a38:	d116      	bne.n	10051a68 <GAP_Init+0xac>
10051a3a:	9806      	ldr	r0, [sp, #24]
10051a3c:	2101      	movs	r1, #1
10051a3e:	9a01      	ldr	r2, [sp, #4]
10051a40:	7411      	strb	r1, [r2, #16]
10051a42:	4308      	orrs	r0, r1
10051a44:	7010      	strb	r0, [r2, #0]
10051a46:	f000 f815 	bl	10051a74 <GAP_reset_privacy_timer>
10051a4a:	ac03      	add	r4, sp, #12
10051a4c:	4620      	mov	r0, r4
10051a4e:	f7ff ff79 	bl	10051944 <GAP_get_default_le_event_mask>
10051a52:	4620      	mov	r0, r4
10051a54:	f003 fab6 	bl	10054fc4 <hci_le_set_event_mask>
10051a58:	43f8      	mvns	r0, r7
10051a5a:	9003      	str	r0, [sp, #12]
10051a5c:	4804      	ldr	r0, [pc, #16]	@ (10051a70 <__arm_cp.7_1>)
10051a5e:	9004      	str	r0, [sp, #16]
10051a60:	4620      	mov	r0, r4
10051a62:	f003 fa9f 	bl	10054fa4 <hci_set_event_mask>
10051a66:	4638      	mov	r0, r7
10051a68:	b007      	add	sp, #28
10051a6a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10051a6c <__arm_cp.7_0>:
10051a6c:	20000844 	.word	0x20000844

10051a70 <__arm_cp.7_1>:
10051a70:	20009fff 	.word	0x20009fff

10051a74 <GAP_reset_privacy_timer>:
10051a74:	4806      	ldr	r0, [pc, #24]	@ (10051a90 <__arm_cp.8_0>)
10051a76:	6800      	ldr	r0, [r0, #0]
10051a78:	215c      	movs	r1, #92	@ 0x5c
10051a7a:	5c41      	ldrb	r1, [r0, r1]
10051a7c:	0689      	lsls	r1, r1, #26
10051a7e:	0f89      	lsrs	r1, r1, #30
10051a80:	d004      	beq.n	10051a8c <GAP_reset_privacy_timer+0x18>
10051a82:	305c      	adds	r0, #92	@ 0x5c
10051a84:	78c1      	ldrb	r1, [r0, #3]
10051a86:	2202      	movs	r2, #2
10051a88:	430a      	orrs	r2, r1
10051a8a:	70c2      	strb	r2, [r0, #3]
10051a8c:	4770      	bx	lr
10051a8e:	46c0      	nop			@ (mov r8, r8)

10051a90 <__arm_cp.8_0>:
10051a90:	20000844 	.word	0x20000844

10051a94 <gap_coded_phy_supported>:
10051a94:	b580      	push	{r7, lr}
10051a96:	f003 fdc5 	bl	10055624 <phy_upd_csr_ucfg_weak>
10051a9a:	b2c0      	uxtb	r0, r0
10051a9c:	bd80      	pop	{r7, pc}

10051a9e <gap_2mbps_phy_supported>:
10051a9e:	b580      	push	{r7, lr}
10051aa0:	f003 fdc0 	bl	10055624 <phy_upd_csr_ucfg_weak>
10051aa4:	b2c0      	uxtb	r0, r0
10051aa6:	bd80      	pop	{r7, pc}

10051aa8 <GAP_internal_evt_handler>:
10051aa8:	b5b0      	push	{r4, r5, r7, lr}
10051aaa:	285c      	cmp	r0, #92	@ 0x5c
10051aac:	d106      	bne.n	10051abc <GAP_internal_evt_handler+0x14>
10051aae:	480c      	ldr	r0, [pc, #48]	@ (10051ae0 <__arm_cp.12_0>)
10051ab0:	6804      	ldr	r4, [r0, #0]
10051ab2:	345d      	adds	r4, #93	@ 0x5d
10051ab4:	2500      	movs	r5, #0
10051ab6:	5760      	ldrsb	r0, [r4, r5]
10051ab8:	2800      	cmp	r0, #0
10051aba:	d400      	bmi.n	10051abe <GAP_internal_evt_handler+0x16>
10051abc:	bdb0      	pop	{r4, r5, r7, pc}
10051abe:	7860      	ldrb	r0, [r4, #1]
10051ac0:	2802      	cmp	r0, #2
10051ac2:	d1fb      	bne.n	10051abc <GAP_internal_evt_handler+0x14>
10051ac4:	7055      	strb	r5, [r2, #1]
10051ac6:	2080      	movs	r0, #128	@ 0x80
10051ac8:	7010      	strb	r0, [r2, #0]
10051aca:	b2c8      	uxtb	r0, r1
10051acc:	4611      	mov	r1, r2
10051ace:	f000 f809 	bl	10051ae4 <aci_gap_proc_complete_event_wrapper>
10051ad2:	7065      	strb	r5, [r4, #1]
10051ad4:	7820      	ldrb	r0, [r4, #0]
10051ad6:	217f      	movs	r1, #127	@ 0x7f
10051ad8:	4001      	ands	r1, r0
10051ada:	7021      	strb	r1, [r4, #0]
10051adc:	bdb0      	pop	{r4, r5, r7, pc}
10051ade:	46c0      	nop			@ (mov r8, r8)

10051ae0 <__arm_cp.12_0>:
10051ae0:	20000844 	.word	0x20000844

10051ae4 <aci_gap_proc_complete_event_wrapper>:
10051ae4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051ae6:	2900      	cmp	r1, #0
10051ae8:	d016      	beq.n	10051b18 <aci_gap_proc_complete_event_wrapper+0x34>
10051aea:	460e      	mov	r6, r1
10051aec:	4605      	mov	r5, r0
10051aee:	7809      	ldrb	r1, [r1, #0]
10051af0:	2400      	movs	r4, #0
10051af2:	07c8      	lsls	r0, r1, #31
10051af4:	4620      	mov	r0, r4
10051af6:	d11f      	bne.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051af8:	0788      	lsls	r0, r1, #30
10051afa:	d40f      	bmi.n	10051b1c <aci_gap_proc_complete_event_wrapper+0x38>
10051afc:	0748      	lsls	r0, r1, #29
10051afe:	d40f      	bmi.n	10051b20 <aci_gap_proc_complete_event_wrapper+0x3c>
10051b00:	0708      	lsls	r0, r1, #28
10051b02:	d40f      	bmi.n	10051b24 <aci_gap_proc_complete_event_wrapper+0x40>
10051b04:	06c8      	lsls	r0, r1, #27
10051b06:	d40f      	bmi.n	10051b28 <aci_gap_proc_complete_event_wrapper+0x44>
10051b08:	0688      	lsls	r0, r1, #26
10051b0a:	d40f      	bmi.n	10051b2c <aci_gap_proc_complete_event_wrapper+0x48>
10051b0c:	0648      	lsls	r0, r1, #25
10051b0e:	d40f      	bmi.n	10051b30 <aci_gap_proc_complete_event_wrapper+0x4c>
10051b10:	0608      	lsls	r0, r1, #24
10051b12:	d50f      	bpl.n	10051b34 <aci_gap_proc_complete_event_wrapper+0x50>
10051b14:	2007      	movs	r0, #7
10051b16:	e00f      	b.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051b18:	2412      	movs	r4, #18
10051b1a:	e03c      	b.n	10051b96 <aci_gap_proc_complete_event_wrapper+0xb2>
10051b1c:	2001      	movs	r0, #1
10051b1e:	e00b      	b.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051b20:	2002      	movs	r0, #2
10051b22:	e009      	b.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051b24:	2003      	movs	r0, #3
10051b26:	e007      	b.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051b28:	2004      	movs	r0, #4
10051b2a:	e005      	b.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051b2c:	2005      	movs	r0, #5
10051b2e:	e003      	b.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051b30:	2006      	movs	r0, #6
10051b32:	e001      	b.n	10051b38 <aci_gap_proc_complete_event_wrapper+0x54>
10051b34:	2000      	movs	r0, #0
10051b36:	43c0      	mvns	r0, r0
10051b38:	7030      	strb	r0, [r6, #0]
10051b3a:	4818      	ldr	r0, [pc, #96]	@ (10051b9c <__arm_cp.13_0>)
10051b3c:	6800      	ldr	r0, [r0, #0]
10051b3e:	214e      	movs	r1, #78	@ 0x4e
10051b40:	5640      	ldrsb	r0, [r0, r1]
10051b42:	2800      	cmp	r0, #0
10051b44:	d527      	bpl.n	10051b96 <aci_gap_proc_complete_event_wrapper+0xb2>
10051b46:	4816      	ldr	r0, [pc, #88]	@ (10051ba0 <__arm_cp.13_1>)
10051b48:	1828      	adds	r0, r5, r0
10051b4a:	2103      	movs	r1, #3
10051b4c:	4301      	orrs	r1, r0
10051b4e:	310d      	adds	r1, #13
10051b50:	0888      	lsrs	r0, r1, #2
10051b52:	b283      	uxth	r3, r0
10051b54:	4813      	ldr	r0, [pc, #76]	@ (10051ba4 <__arm_cp.13_2>)
10051b56:	6800      	ldr	r0, [r0, #0]
10051b58:	6980      	ldr	r0, [r0, #24]
10051b5a:	2102      	movs	r1, #2
10051b5c:	2247      	movs	r2, #71	@ 0x47
10051b5e:	f7fe fbcf 	bl	10050300 <aci_event_fifo_push_header>
10051b62:	2800      	cmp	r0, #0
10051b64:	d016      	beq.n	10051b94 <aci_gap_proc_complete_event_wrapper+0xb0>
10051b66:	4607      	mov	r7, r0
10051b68:	1d00      	adds	r0, r0, #4
10051b6a:	4629      	mov	r1, r5
10051b6c:	4632      	mov	r2, r6
10051b6e:	f7fe ff68 	bl	10050a42 <aci_gap_proc_complete_event_copy>
10051b72:	2004      	movs	r0, #4
10051b74:	7278      	strb	r0, [r7, #9]
10051b76:	2007      	movs	r0, #7
10051b78:	7238      	strb	r0, [r7, #8]
10051b7a:	1ce8      	adds	r0, r5, #3
10051b7c:	0a01      	lsrs	r1, r0, #8
10051b7e:	71f9      	strb	r1, [r7, #7]
10051b80:	71b8      	strb	r0, [r7, #6]
10051b82:	20ff      	movs	r0, #255	@ 0xff
10051b84:	7178      	strb	r0, [r7, #5]
10051b86:	2082      	movs	r0, #130	@ 0x82
10051b88:	7138      	strb	r0, [r7, #4]
10051b8a:	2002      	movs	r0, #2
10051b8c:	4639      	mov	r1, r7
10051b8e:	f7fe fc54 	bl	1005043a <aci_event_fifo_push>
10051b92:	e000      	b.n	10051b96 <aci_gap_proc_complete_event_wrapper+0xb2>
10051b94:	2407      	movs	r4, #7
10051b96:	4620      	mov	r0, r4
10051b98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10051b9a:	46c0      	nop			@ (mov r8, r8)

10051b9c <__arm_cp.13_0>:
10051b9c:	20000894 	.word	0x20000894

10051ba0 <__arm_cp.13_1>:
10051ba0:	0003fffd 	.word	0x0003fffd

10051ba4 <__arm_cp.13_2>:
10051ba4:	20000840 	.word	0x20000840

10051ba8 <GAP_LimDiscTimeoutcb>:
10051ba8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10051baa:	4811      	ldr	r0, [pc, #68]	@ (10051bf0 <__arm_cp.15_0>)
10051bac:	6804      	ldr	r4, [r0, #0]
10051bae:	f7fd f960 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
10051bb2:	2800      	cmp	r0, #0
10051bb4:	d002      	beq.n	10051bbc <GAP_LimDiscTimeoutcb+0x14>
10051bb6:	480f      	ldr	r0, [pc, #60]	@ (10051bf4 <__arm_cp.15_1>)
10051bb8:	7e80      	ldrb	r0, [r0, #26]
10051bba:	e000      	b.n	10051bbe <GAP_LimDiscTimeoutcb+0x16>
10051bbc:	2001      	movs	r0, #1
10051bbe:	b2c5      	uxtb	r5, r0
10051bc0:	2600      	movs	r6, #0
10051bc2:	2712      	movs	r7, #18
10051bc4:	42b5      	cmp	r5, r6
10051bc6:	d011      	beq.n	10051bec <GAP_LimDiscTimeoutcb+0x44>
10051bc8:	6d60      	ldr	r0, [r4, #84]	@ 0x54
10051bca:	5dc1      	ldrb	r1, [r0, r7]
10051bcc:	2901      	cmp	r1, #1
10051bce:	d10a      	bne.n	10051be6 <GAP_LimDiscTimeoutcb+0x3e>
10051bd0:	19c0      	adds	r0, r0, r7
10051bd2:	3810      	subs	r0, #16
10051bd4:	7800      	ldrb	r0, [r0, #0]
10051bd6:	0780      	lsls	r0, r0, #30
10051bd8:	d505      	bpl.n	10051be6 <GAP_LimDiscTimeoutcb+0x3e>
10051bda:	aa01      	add	r2, sp, #4
10051bdc:	7016      	strb	r6, [r2, #0]
10051bde:	2000      	movs	r0, #0
10051be0:	2101      	movs	r1, #1
10051be2:	f7fc faa9 	bl	1004e138 <GAP_set_advertising_enable_ucfg>
10051be6:	3714      	adds	r7, #20
10051be8:	1c76      	adds	r6, r6, #1
10051bea:	e7eb      	b.n	10051bc4 <GAP_LimDiscTimeoutcb+0x1c>
10051bec:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10051bee:	46c0      	nop			@ (mov r8, r8)

10051bf0 <__arm_cp.15_0>:
10051bf0:	20000844 	.word	0x20000844

10051bf4 <__arm_cp.15_1>:
10051bf4:	200008a8 	.word	0x200008a8

10051bf8 <GAP_hci_le_advertising_set_terminated_evt_hndl>:
10051bf8:	b580      	push	{r7, lr}
10051bfa:	4608      	mov	r0, r1
10051bfc:	f000 f804 	bl	10051c08 <GAP_stop_discoverability>
10051c00:	f000 f85c 	bl	10051cbc <GAP_stop_privacy_timer>
10051c04:	bd80      	pop	{r7, pc}
	...

10051c08 <GAP_stop_discoverability>:
10051c08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051c0a:	4604      	mov	r4, r0
10051c0c:	2514      	movs	r5, #20
10051c0e:	436c      	muls	r4, r5
10051c10:	4826      	ldr	r0, [pc, #152]	@ (10051cac <__arm_cp.18_0>)
10051c12:	6806      	ldr	r6, [r0, #0]
10051c14:	6d70      	ldr	r0, [r6, #84]	@ 0x54
10051c16:	1900      	adds	r0, r0, r4
10051c18:	7881      	ldrb	r1, [r0, #2]
10051c1a:	0789      	lsls	r1, r1, #30
10051c1c:	d401      	bmi.n	10051c22 <GAP_stop_discoverability+0x1a>
10051c1e:	2700      	movs	r7, #0
10051c20:	e003      	b.n	10051c2a <GAP_stop_discoverability+0x22>
10051c22:	1c80      	adds	r0, r0, #2
10051c24:	2100      	movs	r1, #0
10051c26:	7001      	strb	r1, [r0, #0]
10051c28:	2701      	movs	r7, #1
10051c2a:	f7fd f922 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
10051c2e:	2800      	cmp	r0, #0
10051c30:	d002      	beq.n	10051c38 <GAP_stop_discoverability+0x30>
10051c32:	481f      	ldr	r0, [pc, #124]	@ (10051cb0 <__arm_cp.18_1>)
10051c34:	7e80      	ldrb	r0, [r0, #26]
10051c36:	e000      	b.n	10051c3a <GAP_stop_discoverability+0x32>
10051c38:	2001      	movs	r0, #1
10051c3a:	b2c0      	uxtb	r0, r0
10051c3c:	4345      	muls	r5, r0
10051c3e:	2000      	movs	r0, #0
10051c40:	4285      	cmp	r5, r0
10051c42:	d007      	beq.n	10051c54 <GAP_stop_discoverability+0x4c>
10051c44:	6d71      	ldr	r1, [r6, #84]	@ 0x54
10051c46:	1809      	adds	r1, r1, r0
10051c48:	7889      	ldrb	r1, [r1, #2]
10051c4a:	0789      	lsls	r1, r1, #30
10051c4c:	d500      	bpl.n	10051c50 <GAP_stop_discoverability+0x48>
10051c4e:	2700      	movs	r7, #0
10051c50:	3014      	adds	r0, #20
10051c52:	e7f5      	b.n	10051c40 <GAP_stop_discoverability+0x38>
10051c54:	2f01      	cmp	r7, #1
10051c56:	4f15      	ldr	r7, [pc, #84]	@ (10051cac <__arm_cp.18_0>)
10051c58:	d122      	bne.n	10051ca0 <GAP_stop_discoverability+0x98>
10051c5a:	6838      	ldr	r0, [r7, #0]
10051c5c:	2500      	movs	r5, #0
10051c5e:	4629      	mov	r1, r5
10051c60:	f013 fb59 	bl	10065316 <CST_stop>
10051c64:	4813      	ldr	r0, [pc, #76]	@ (10051cb4 <__arm_cp.18_2>)
10051c66:	6800      	ldr	r0, [r0, #0]
10051c68:	214e      	movs	r1, #78	@ 0x4e
10051c6a:	5c40      	ldrb	r0, [r0, r1]
10051c6c:	07c0      	lsls	r0, r0, #31
10051c6e:	d017      	beq.n	10051ca0 <GAP_stop_discoverability+0x98>
10051c70:	4811      	ldr	r0, [pc, #68]	@ (10051cb8 <__arm_cp.18_3>)
10051c72:	6800      	ldr	r0, [r0, #0]
10051c74:	6980      	ldr	r0, [r0, #24]
10051c76:	2244      	movs	r2, #68	@ 0x44
10051c78:	2602      	movs	r6, #2
10051c7a:	4631      	mov	r1, r6
10051c7c:	4633      	mov	r3, r6
10051c7e:	f7fe fb3f 	bl	10050300 <aci_event_fifo_push_header>
10051c82:	2800      	cmp	r0, #0
10051c84:	d00c      	beq.n	10051ca0 <GAP_stop_discoverability+0x98>
10051c86:	4601      	mov	r1, r0
10051c88:	7186      	strb	r6, [r0, #6]
10051c8a:	71c5      	strb	r5, [r0, #7]
10051c8c:	7205      	strb	r5, [r0, #8]
10051c8e:	20ff      	movs	r0, #255	@ 0xff
10051c90:	7148      	strb	r0, [r1, #5]
10051c92:	2082      	movs	r0, #130	@ 0x82
10051c94:	7108      	strb	r0, [r1, #4]
10051c96:	2004      	movs	r0, #4
10051c98:	7248      	strb	r0, [r1, #9]
10051c9a:	4630      	mov	r0, r6
10051c9c:	f7fe fbcd 	bl	1005043a <aci_event_fifo_push>
10051ca0:	6838      	ldr	r0, [r7, #0]
10051ca2:	6d40      	ldr	r0, [r0, #84]	@ 0x54
10051ca4:	1900      	adds	r0, r0, r4
10051ca6:	2100      	movs	r1, #0
10051ca8:	74c1      	strb	r1, [r0, #19]
10051caa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10051cac <__arm_cp.18_0>:
10051cac:	20000844 	.word	0x20000844

10051cb0 <__arm_cp.18_1>:
10051cb0:	200008a8 	.word	0x200008a8

10051cb4 <__arm_cp.18_2>:
10051cb4:	20000894 	.word	0x20000894

10051cb8 <__arm_cp.18_3>:
10051cb8:	20000840 	.word	0x20000840

10051cbc <GAP_stop_privacy_timer>:
10051cbc:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10051cbe:	4c0d      	ldr	r4, [pc, #52]	@ (10051cf4 <__arm_cp.19_0>)
10051cc0:	6825      	ldr	r5, [r4, #0]
10051cc2:	205c      	movs	r0, #92	@ 0x5c
10051cc4:	5c28      	ldrb	r0, [r5, r0]
10051cc6:	0680      	lsls	r0, r0, #26
10051cc8:	0f80      	lsrs	r0, r0, #30
10051cca:	d012      	beq.n	10051cf2 <GAP_stop_privacy_timer+0x36>
10051ccc:	355c      	adds	r5, #92	@ 0x5c
10051cce:	78e8      	ldrb	r0, [r5, #3]
10051cd0:	2602      	movs	r6, #2
10051cd2:	4030      	ands	r0, r6
10051cd4:	d10d      	bne.n	10051cf2 <GAP_stop_privacy_timer+0x36>
10051cd6:	a801      	add	r0, sp, #4
10051cd8:	4669      	mov	r1, sp
10051cda:	f000 fba9 	bl	10052430 <GAP_check_adv_status>
10051cde:	7869      	ldrb	r1, [r5, #1]
10051ce0:	4301      	orrs	r1, r0
10051ce2:	d106      	bne.n	10051cf2 <GAP_stop_privacy_timer+0x36>
10051ce4:	78e8      	ldrb	r0, [r5, #3]
10051ce6:	4330      	orrs	r0, r6
10051ce8:	70e8      	strb	r0, [r5, #3]
10051cea:	6820      	ldr	r0, [r4, #0]
10051cec:	2101      	movs	r1, #1
10051cee:	f013 fb12 	bl	10065316 <CST_stop>
10051cf2:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10051cf4 <__arm_cp.19_0>:
10051cf4:	20000844 	.word	0x20000844

10051cf8 <GAP_peripheral_connection_complete_handler>:
10051cf8:	4770      	bx	lr
	...

10051cfc <GAP_hci_le_advertising_report_evt_hndl>:
10051cfc:	b580      	push	{r7, lr}
10051cfe:	4a0b      	ldr	r2, [pc, #44]	@ (10051d2c <__arm_cp.22_0>)
10051d00:	6812      	ldr	r2, [r2, #0]
10051d02:	235d      	movs	r3, #93	@ 0x5d
10051d04:	5cd2      	ldrb	r2, [r2, r3]
10051d06:	0693      	lsls	r3, r2, #26
10051d08:	d405      	bmi.n	10051d16 <GAP_hci_le_advertising_report_evt_hndl+0x1a>
10051d0a:	06d3      	lsls	r3, r2, #27
10051d0c:	0f9b      	lsrs	r3, r3, #30
10051d0e:	d004      	beq.n	10051d1a <GAP_hci_le_advertising_report_evt_hndl+0x1e>
10051d10:	f7fc fad3 	bl	1004e2ba <GAP_parse_connectable_advertising_report_ucfg>
10051d14:	bd80      	pop	{r7, pc}
10051d16:	2001      	movs	r0, #1
10051d18:	bd80      	pop	{r7, pc}
10051d1a:	231b      	movs	r3, #27
10051d1c:	421a      	tst	r2, r3
10051d1e:	d002      	beq.n	10051d26 <GAP_hci_le_advertising_report_evt_hndl+0x2a>
10051d20:	f7fc fade 	bl	1004e2e0 <GAP_parse_advertising_report_ucfg>
10051d24:	bd80      	pop	{r7, pc}
10051d26:	2000      	movs	r0, #0
10051d28:	bd80      	pop	{r7, pc}
10051d2a:	46c0      	nop			@ (mov r8, r8)

10051d2c <__arm_cp.22_0>:
10051d2c:	20000844 	.word	0x20000844

10051d30 <GAP_hci_disconnection_complete_evt_hndl>:
10051d30:	4770      	bx	lr

10051d32 <GAP_hci_le_connection_complete_evt_hndl>:
10051d32:	b580      	push	{r7, lr}
10051d34:	2a00      	cmp	r2, #0
10051d36:	d003      	beq.n	10051d40 <GAP_hci_le_connection_complete_evt_hndl+0xe>
10051d38:	4608      	mov	r0, r1
10051d3a:	f7fc fb17 	bl	1004e36c <GAP_peripheral_connection_complete_handler_ucfg>
10051d3e:	bd80      	pop	{r7, pc}
10051d40:	f7fc faa6 	bl	1004e290 <GAP_central_connection_complete_handler_ucfg>
10051d44:	bd80      	pop	{r7, pc}
	...

10051d48 <GapIsPrivacySupported>:
10051d48:	4804      	ldr	r0, [pc, #16]	@ (10051d5c <__arm_cp.26_0>)
10051d4a:	6800      	ldr	r0, [r0, #0]
10051d4c:	215c      	movs	r1, #92	@ 0x5c
10051d4e:	5c41      	ldrb	r1, [r0, r1]
10051d50:	2030      	movs	r0, #48	@ 0x30
10051d52:	4008      	ands	r0, r1
10051d54:	1e41      	subs	r1, r0, #1
10051d56:	4188      	sbcs	r0, r1
10051d58:	4770      	bx	lr
10051d5a:	46c0      	nop			@ (mov r8, r8)

10051d5c <__arm_cp.26_0>:
10051d5c:	20000844 	.word	0x20000844

10051d60 <GAP_get_identity_address_type>:
10051d60:	4803      	ldr	r0, [pc, #12]	@ (10051d70 <__arm_cp.28_0>)
10051d62:	6800      	ldr	r0, [r0, #0]
10051d64:	215f      	movs	r1, #95	@ 0x5f
10051d66:	5c41      	ldrb	r1, [r0, r1]
10051d68:	2001      	movs	r0, #1
10051d6a:	4008      	ands	r0, r1
10051d6c:	4770      	bx	lr
10051d6e:	46c0      	nop			@ (mov r8, r8)

10051d70 <__arm_cp.28_0>:
10051d70:	20000844 	.word	0x20000844

10051d74 <GAP_get_own_address_type>:
10051d74:	4808      	ldr	r0, [pc, #32]	@ (10051d98 <__arm_cp.29_0>)
10051d76:	6800      	ldr	r0, [r0, #0]
10051d78:	215c      	movs	r1, #92	@ 0x5c
10051d7a:	5c41      	ldrb	r1, [r0, r1]
10051d7c:	06ca      	lsls	r2, r1, #27
10051d7e:	d406      	bmi.n	10051d8e <GAP_get_own_address_type+0x1a>
10051d80:	0689      	lsls	r1, r1, #26
10051d82:	d406      	bmi.n	10051d92 <GAP_get_own_address_type+0x1e>
10051d84:	305c      	adds	r0, #92	@ 0x5c
10051d86:	78c1      	ldrb	r1, [r0, #3]
10051d88:	2001      	movs	r0, #1
10051d8a:	4008      	ands	r0, r1
10051d8c:	4770      	bx	lr
10051d8e:	2001      	movs	r0, #1
10051d90:	4770      	bx	lr
10051d92:	2003      	movs	r0, #3
10051d94:	4770      	bx	lr
10051d96:	46c0      	nop			@ (mov r8, r8)

10051d98 <__arm_cp.29_0>:
10051d98:	20000844 	.word	0x20000844

10051d9c <GAP_enable_controller_privacy_ucfg_weak>:
10051d9c:	2012      	movs	r0, #18
10051d9e:	4770      	bx	lr

10051da0 <GAP_add_device_to_filter_accept_and_resolving_list_ucfg_weak>:
10051da0:	b580      	push	{r7, lr}
10051da2:	07c0      	lsls	r0, r0, #31
10051da4:	d101      	bne.n	10051daa <GAP_add_device_to_filter_accept_and_resolving_list_ucfg_weak+0xa>
10051da6:	2000      	movs	r0, #0
10051da8:	bd80      	pop	{r7, pc}
10051daa:	4608      	mov	r0, r1
10051dac:	4611      	mov	r1, r2
10051dae:	f003 fb56 	bl	1005545e <hci_le_add_device_to_filter_accept_list>
10051db2:	bd80      	pop	{r7, pc}

10051db4 <GAP_clear_filter_accept_and_resolving_list_ucfg_weak>:
10051db4:	b580      	push	{r7, lr}
10051db6:	07c0      	lsls	r0, r0, #31
10051db8:	d101      	bne.n	10051dbe <GAP_clear_filter_accept_and_resolving_list_ucfg_weak+0xa>
10051dba:	2000      	movs	r0, #0
10051dbc:	bd80      	pop	{r7, pc}
10051dbe:	f003 fb4a 	bl	10055456 <hci_le_clear_filter_accept_list>
10051dc2:	bd80      	pop	{r7, pc}

10051dc4 <GAP_configure_filter_accept_and_resolving_list>:
10051dc4:	b570      	push	{r4, r5, r6, lr}
10051dc6:	b094      	sub	sp, #80	@ 0x50
10051dc8:	4604      	mov	r4, r0
10051dca:	f7ff fff3 	bl	10051db4 <GAP_clear_filter_accept_and_resolving_list_ucfg_weak>
10051dce:	4606      	mov	r6, r0
10051dd0:	466d      	mov	r5, sp
10051dd2:	353e      	adds	r5, #62	@ 0x3e
10051dd4:	4668      	mov	r0, sp
10051dd6:	f011 fc75 	bl	100636c4 <sdb_sap_read_security_record_sequential>
10051dda:	2800      	cmp	r0, #0
10051ddc:	d10b      	bne.n	10051df6 <GAP_configure_filter_accept_and_resolving_list+0x32>
10051dde:	2e00      	cmp	r6, #0
10051de0:	d109      	bne.n	10051df6 <GAP_configure_filter_accept_and_resolving_list+0x32>
10051de2:	4668      	mov	r0, sp
10051de4:	7840      	ldrb	r0, [r0, #1]
10051de6:	2101      	movs	r1, #1
10051de8:	4001      	ands	r1, r0
10051dea:	4620      	mov	r0, r4
10051dec:	462a      	mov	r2, r5
10051dee:	f7ff ffd7 	bl	10051da0 <GAP_add_device_to_filter_accept_and_resolving_list_ucfg_weak>
10051df2:	4606      	mov	r6, r0
10051df4:	e7ee      	b.n	10051dd4 <GAP_configure_filter_accept_and_resolving_list+0x10>
10051df6:	b2f0      	uxtb	r0, r6
10051df8:	b014      	add	sp, #80	@ 0x50
10051dfa:	bd70      	pop	{r4, r5, r6, pc}

10051dfc <GAP_add_multiple_devices_to_filter_accept_and_resolving_list>:
10051dfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10051dfe:	461c      	mov	r4, r3
10051e00:	4615      	mov	r5, r2
10051e02:	4606      	mov	r6, r0
10051e04:	2900      	cmp	r1, #0
10051e06:	d002      	beq.n	10051e0e <GAP_add_multiple_devices_to_filter_accept_and_resolving_list+0x12>
10051e08:	4630      	mov	r0, r6
10051e0a:	f7ff ffd3 	bl	10051db4 <GAP_clear_filter_accept_and_resolving_list_ucfg_weak>
10051e0e:	2700      	movs	r7, #0
10051e10:	4638      	mov	r0, r7
10051e12:	42af      	cmp	r7, r5
10051e14:	d20d      	bcs.n	10051e32 <GAP_add_multiple_devices_to_filter_accept_and_resolving_list+0x36>
10051e16:	2800      	cmp	r0, #0
10051e18:	d10b      	bne.n	10051e32 <GAP_add_multiple_devices_to_filter_accept_and_resolving_list+0x36>
10051e1a:	7821      	ldrb	r1, [r4, #0]
10051e1c:	2901      	cmp	r1, #1
10051e1e:	d804      	bhi.n	10051e2a <GAP_add_multiple_devices_to_filter_accept_and_resolving_list+0x2e>
10051e20:	1c62      	adds	r2, r4, #1
10051e22:	4630      	mov	r0, r6
10051e24:	f7ff ffbc 	bl	10051da0 <GAP_add_device_to_filter_accept_and_resolving_list_ucfg_weak>
10051e28:	e000      	b.n	10051e2c <GAP_add_multiple_devices_to_filter_accept_and_resolving_list+0x30>
10051e2a:	2086      	movs	r0, #134	@ 0x86
10051e2c:	1de4      	adds	r4, r4, #7
10051e2e:	1c7f      	adds	r7, r7, #1
10051e30:	e7ef      	b.n	10051e12 <GAP_add_multiple_devices_to_filter_accept_and_resolving_list+0x16>
10051e32:	b2c0      	uxtb	r0, r0
10051e34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

10051e38 <GAP_init_advertising_sets>:
10051e38:	b570      	push	{r4, r5, r6, lr}
10051e3a:	b092      	sub	sp, #72	@ 0x48
10051e3c:	4604      	mov	r4, r0
10051e3e:	a811      	add	r0, sp, #68	@ 0x44
10051e40:	2500      	movs	r5, #0
10051e42:	7085      	strb	r5, [r0, #2]
10051e44:	2120      	movs	r1, #32
10051e46:	8001      	strh	r1, [r0, #0]
10051e48:	43e8      	mvns	r0, r5
10051e4a:	a910      	add	r1, sp, #64	@ 0x40
10051e4c:	7088      	strb	r0, [r1, #2]
10051e4e:	8008      	strh	r0, [r1, #0]
10051e50:	a80e      	add	r0, sp, #56	@ 0x38
10051e52:	8085      	strh	r5, [r0, #4]
10051e54:	950e      	str	r5, [sp, #56]	@ 0x38
10051e56:	4e11      	ldr	r6, [pc, #68]	@ (10051e9c <__arm_cp.44_0>)
10051e58:	4628      	mov	r0, r5
10051e5a:	7eb1      	ldrb	r1, [r6, #26]
10051e5c:	428d      	cmp	r5, r1
10051e5e:	d21a      	bcs.n	10051e96 <GAP_init_advertising_sets+0x5e>
10051e60:	2800      	cmp	r0, #0
10051e62:	d118      	bne.n	10051e96 <GAP_init_advertising_sets+0x5e>
10051e64:	a80d      	add	r0, sp, #52	@ 0x34
10051e66:	900b      	str	r0, [sp, #44]	@ 0x2c
10051e68:	2100      	movs	r1, #0
10051e6a:	910a      	str	r1, [sp, #40]	@ 0x28
10051e6c:	2001      	movs	r0, #1
10051e6e:	9008      	str	r0, [sp, #32]
10051e70:	9107      	str	r1, [sp, #28]
10051e72:	9006      	str	r0, [sp, #24]
10051e74:	207f      	movs	r0, #127	@ 0x7f
10051e76:	9005      	str	r0, [sp, #20]
10051e78:	9104      	str	r1, [sp, #16]
10051e7a:	a80e      	add	r0, sp, #56	@ 0x38
10051e7c:	9003      	str	r0, [sp, #12]
10051e7e:	9102      	str	r1, [sp, #8]
10051e80:	9401      	str	r4, [sp, #4]
10051e82:	2007      	movs	r0, #7
10051e84:	9000      	str	r0, [sp, #0]
10051e86:	b2e8      	uxtb	r0, r5
10051e88:	9009      	str	r0, [sp, #36]	@ 0x24
10051e8a:	aa11      	add	r2, sp, #68	@ 0x44
10051e8c:	ab10      	add	r3, sp, #64	@ 0x40
10051e8e:	f003 f9a8 	bl	100551e2 <hci_le_set_extended_advertising_parameters_api>
10051e92:	1c6d      	adds	r5, r5, #1
10051e94:	e7e1      	b.n	10051e5a <GAP_init_advertising_sets+0x22>
10051e96:	b2c0      	uxtb	r0, r0
10051e98:	b012      	add	sp, #72	@ 0x48
10051e9a:	bd70      	pop	{r4, r5, r6, pc}

10051e9c <__arm_cp.44_0>:
10051e9c:	200008a8 	.word	0x200008a8

10051ea0 <GAP_set_controller_random_address_extended>:
10051ea0:	b570      	push	{r4, r5, r6, lr}
10051ea2:	4604      	mov	r4, r0
10051ea4:	2000      	movs	r0, #0
10051ea6:	4d07      	ldr	r5, [pc, #28]	@ (10051ec4 <__arm_cp.46_0>)
10051ea8:	4606      	mov	r6, r0
10051eaa:	7ea9      	ldrb	r1, [r5, #26]
10051eac:	428e      	cmp	r6, r1
10051eae:	d207      	bcs.n	10051ec0 <GAP_set_controller_random_address_extended+0x20>
10051eb0:	2800      	cmp	r0, #0
10051eb2:	d105      	bne.n	10051ec0 <GAP_set_controller_random_address_extended+0x20>
10051eb4:	b2f0      	uxtb	r0, r6
10051eb6:	4621      	mov	r1, r4
10051eb8:	f003 fa68 	bl	1005538c <hci_le_set_advertising_set_random_address_api>
10051ebc:	1c76      	adds	r6, r6, #1
10051ebe:	e7f4      	b.n	10051eaa <GAP_set_controller_random_address_extended+0xa>
10051ec0:	b2c0      	uxtb	r0, r0
10051ec2:	bd70      	pop	{r4, r5, r6, pc}

10051ec4 <__arm_cp.46_0>:
10051ec4:	200008a8 	.word	0x200008a8

10051ec8 <GAP_start_privacy_timer>:
10051ec8:	b5b0      	push	{r4, r5, r7, lr}
10051eca:	4602      	mov	r2, r0
10051ecc:	4810      	ldr	r0, [pc, #64]	@ (10051f10 <__arm_cp.47_0>)
10051ece:	6800      	ldr	r0, [r0, #0]
10051ed0:	4605      	mov	r5, r0
10051ed2:	355a      	adds	r5, #90	@ 0x5a
10051ed4:	2900      	cmp	r1, #0
10051ed6:	d108      	bne.n	10051eea <GAP_start_privacy_timer+0x22>
10051ed8:	78a9      	ldrb	r1, [r5, #2]
10051eda:	0689      	lsls	r1, r1, #26
10051edc:	2400      	movs	r4, #0
10051ede:	0f89      	lsrs	r1, r1, #30
10051ee0:	d014      	beq.n	10051f0c <GAP_start_privacy_timer+0x44>
10051ee2:	7969      	ldrb	r1, [r5, #5]
10051ee4:	2302      	movs	r3, #2
10051ee6:	400b      	ands	r3, r1
10051ee8:	d010      	beq.n	10051f0c <GAP_start_privacy_timer+0x44>
10051eea:	2a00      	cmp	r2, #0
10051eec:	d001      	beq.n	10051ef2 <GAP_start_privacy_timer+0x2a>
10051eee:	4b09      	ldr	r3, [pc, #36]	@ (10051f14 <__arm_cp.47_1>)
10051ef0:	e003      	b.n	10051efa <GAP_start_privacy_timer+0x32>
10051ef2:	217d      	movs	r1, #125	@ 0x7d
10051ef4:	00c9      	lsls	r1, r1, #3
10051ef6:	882b      	ldrh	r3, [r5, #0]
10051ef8:	434b      	muls	r3, r1
10051efa:	2401      	movs	r4, #1
10051efc:	4621      	mov	r1, r4
10051efe:	4622      	mov	r2, r4
10051f00:	f013 fa3f 	bl	10065382 <CST_start>
10051f04:	7968      	ldrb	r0, [r5, #5]
10051f06:	21fd      	movs	r1, #253	@ 0xfd
10051f08:	4001      	ands	r1, r0
10051f0a:	7169      	strb	r1, [r5, #5]
10051f0c:	4620      	mov	r0, r4
10051f0e:	bdb0      	pop	{r4, r5, r7, pc}

10051f10 <__arm_cp.47_0>:
10051f10:	20000844 	.word	0x20000844

10051f14 <__arm_cp.47_1>:
10051f14:	00007530 	.word	0x00007530

10051f18 <GAP_generate_new_rpa>:
10051f18:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10051f1a:	4d0d      	ldr	r5, [pc, #52]	@ (10051f50 <__arm_cp.48_0>)
10051f1c:	6828      	ldr	r0, [r5, #0]
10051f1e:	215f      	movs	r1, #95	@ 0x5f
10051f20:	5c40      	ldrb	r0, [r0, r1]
10051f22:	0780      	lsls	r0, r0, #30
10051f24:	d401      	bmi.n	10051f2a <GAP_generate_new_rpa+0x12>
10051f26:	240c      	movs	r4, #12
10051f28:	e00f      	b.n	10051f4a <GAP_generate_new_rpa+0x32>
10051f2a:	466c      	mov	r4, sp
10051f2c:	4620      	mov	r0, r4
10051f2e:	f011 fcd9 	bl	100638e4 <smp_sap_crt_generate_rpa>
10051f32:	4620      	mov	r0, r4
10051f34:	f7fc fa29 	bl	1004e38a <GAP_set_controller_random_address_ucfg>
10051f38:	4604      	mov	r4, r0
10051f3a:	2800      	cmp	r0, #0
10051f3c:	d105      	bne.n	10051f4a <GAP_generate_new_rpa+0x32>
10051f3e:	6828      	ldr	r0, [r5, #0]
10051f40:	3066      	adds	r0, #102	@ 0x66
10051f42:	4669      	mov	r1, sp
10051f44:	2206      	movs	r2, #6
10051f46:	f7f2 fd2d 	bl	100449a4 <BLEPLAT_MemCpy>
10051f4a:	4620      	mov	r0, r4
10051f4c:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
10051f4e:	46c0      	nop			@ (mov r8, r8)

10051f50 <__arm_cp.48_0>:
10051f50:	20000844 	.word	0x20000844

10051f54 <GAP_get_current_address>:
10051f54:	b5b0      	push	{r4, r5, r7, lr}
10051f56:	460d      	mov	r5, r1
10051f58:	4604      	mov	r4, r0
10051f5a:	480f      	ldr	r0, [pc, #60]	@ (10051f98 <__arm_cp.49_0>)
10051f5c:	6800      	ldr	r0, [r0, #0]
10051f5e:	215c      	movs	r1, #92	@ 0x5c
10051f60:	5c40      	ldrb	r0, [r0, r1]
10051f62:	0680      	lsls	r0, r0, #26
10051f64:	0f80      	lsrs	r0, r0, #30
10051f66:	d005      	beq.n	10051f74 <GAP_get_current_address+0x20>
10051f68:	2001      	movs	r0, #1
10051f6a:	7028      	strb	r0, [r5, #0]
10051f6c:	4620      	mov	r0, r4
10051f6e:	f000 f815 	bl	10051f9c <GAP_get_rpa>
10051f72:	e00e      	b.n	10051f92 <GAP_get_current_address+0x3e>
10051f74:	f7ff fefe 	bl	10051d74 <GAP_get_own_address_type>
10051f78:	2800      	cmp	r0, #0
10051f7a:	d005      	beq.n	10051f88 <GAP_get_current_address+0x34>
10051f7c:	2001      	movs	r0, #1
10051f7e:	7028      	strb	r0, [r5, #0]
10051f80:	4620      	mov	r0, r4
10051f82:	f000 f81f 	bl	10051fc4 <GAP_get_static_random_address>
10051f86:	e004      	b.n	10051f92 <GAP_get_current_address+0x3e>
10051f88:	2000      	movs	r0, #0
10051f8a:	7028      	strb	r0, [r5, #0]
10051f8c:	4620      	mov	r0, r4
10051f8e:	f000 f80f 	bl	10051fb0 <GAP_get_public_address>
10051f92:	2000      	movs	r0, #0
10051f94:	bdb0      	pop	{r4, r5, r7, pc}
10051f96:	46c0      	nop			@ (mov r8, r8)

10051f98 <__arm_cp.49_0>:
10051f98:	20000844 	.word	0x20000844

10051f9c <GAP_get_rpa>:
10051f9c:	b580      	push	{r7, lr}
10051f9e:	4903      	ldr	r1, [pc, #12]	@ (10051fac <__arm_cp.50_0>)
10051fa0:	6809      	ldr	r1, [r1, #0]
10051fa2:	3166      	adds	r1, #102	@ 0x66
10051fa4:	2206      	movs	r2, #6
10051fa6:	f7f2 fcfd 	bl	100449a4 <BLEPLAT_MemCpy>
10051faa:	bd80      	pop	{r7, pc}

10051fac <__arm_cp.50_0>:
10051fac:	20000844 	.word	0x20000844

10051fb0 <GAP_get_public_address>:
10051fb0:	b580      	push	{r7, lr}
10051fb2:	4903      	ldr	r1, [pc, #12]	@ (10051fc0 <__arm_cp.51_0>)
10051fb4:	6809      	ldr	r1, [r1, #0]
10051fb6:	2206      	movs	r2, #6
10051fb8:	f7f2 fcf4 	bl	100449a4 <BLEPLAT_MemCpy>
10051fbc:	bd80      	pop	{r7, pc}
10051fbe:	46c0      	nop			@ (mov r8, r8)

10051fc0 <__arm_cp.51_0>:
10051fc0:	2000083c 	.word	0x2000083c

10051fc4 <GAP_get_static_random_address>:
10051fc4:	b580      	push	{r7, lr}
10051fc6:	4903      	ldr	r1, [pc, #12]	@ (10051fd4 <__arm_cp.52_0>)
10051fc8:	6809      	ldr	r1, [r1, #0]
10051fca:	3160      	adds	r1, #96	@ 0x60
10051fcc:	2206      	movs	r2, #6
10051fce:	f7f2 fce9 	bl	100449a4 <BLEPLAT_MemCpy>
10051fd2:	bd80      	pop	{r7, pc}

10051fd4 <__arm_cp.52_0>:
10051fd4:	20000844 	.word	0x20000844

10051fd8 <GAP_is_rpa_change_at_timeout_enabled>:
10051fd8:	4802      	ldr	r0, [pc, #8]	@ (10051fe4 <__arm_cp.54_0>)
10051fda:	6800      	ldr	r0, [r0, #0]
10051fdc:	216c      	movs	r1, #108	@ 0x6c
10051fde:	5c40      	ldrb	r0, [r0, r1]
10051fe0:	4770      	bx	lr
10051fe2:	46c0      	nop			@ (mov r8, r8)

10051fe4 <__arm_cp.54_0>:
10051fe4:	20000844 	.word	0x20000844

10051fe8 <GAP_check_discoverability_mode>:
10051fe8:	1e43      	subs	r3, r0, #1
10051fea:	2b02      	cmp	r3, #2
10051fec:	d309      	bcc.n	10052002 <GAP_check_discoverability_mode+0x1a>
10051fee:	2800      	cmp	r0, #0
10051ff0:	d00c      	beq.n	1005200c <GAP_check_discoverability_mode+0x24>
10051ff2:	2803      	cmp	r0, #3
10051ff4:	d109      	bne.n	1005200a <GAP_check_discoverability_mode+0x22>
10051ff6:	2001      	movs	r0, #1
10051ff8:	4001      	ands	r1, r0
10051ffa:	4249      	negs	r1, r1
10051ffc:	2012      	movs	r0, #18
10051ffe:	4008      	ands	r0, r1
10052000:	4770      	bx	lr
10052002:	2a00      	cmp	r2, #0
10052004:	d101      	bne.n	1005200a <GAP_check_discoverability_mode+0x22>
10052006:	4610      	mov	r0, r2
10052008:	4770      	bx	lr
1005200a:	2012      	movs	r0, #18
1005200c:	4770      	bx	lr
	...

10052010 <GAP_set_extended_advertising_configuration>:
10052010:	b5f0      	push	{r4, r5, r6, r7, lr}
10052012:	b09f      	sub	sp, #124	@ 0x7c
10052014:	4614      	mov	r4, r2
10052016:	4605      	mov	r5, r0
10052018:	931e      	str	r3, [sp, #120]	@ 0x78
1005201a:	4845      	ldr	r0, [pc, #276]	@ (10052130 <__arm_cp.3_1>)
1005201c:	7e82      	ldrb	r2, [r0, #26]
1005201e:	2012      	movs	r0, #18
10052020:	42aa      	cmp	r2, r5
10052022:	d800      	bhi.n	10052026 <GAP_set_extended_advertising_configuration+0x16>
10052024:	e080      	b.n	10052128 <GAP_set_extended_advertising_configuration+0x118>
10052026:	4a41      	ldr	r2, [pc, #260]	@ (1005212c <__arm_cp.3_0>)
10052028:	6817      	ldr	r7, [r2, #0]
1005202a:	2220      	movs	r2, #32
1005202c:	2903      	cmp	r1, #3
1005202e:	d002      	beq.n	10052036 <GAP_set_extended_advertising_configuration+0x26>
10052030:	4623      	mov	r3, r4
10052032:	4013      	ands	r3, r2
10052034:	d178      	bne.n	10052128 <GAP_set_extended_advertising_configuration+0x118>
10052036:	0060      	lsls	r0, r4, #1
10052038:	4010      	ands	r0, r2
1005203a:	00a2      	lsls	r2, r4, #2
1005203c:	2308      	movs	r3, #8
1005203e:	4013      	ands	r3, r2
10052040:	181b      	adds	r3, r3, r0
10052042:	2214      	movs	r2, #20
10052044:	436a      	muls	r2, r5
10052046:	6d7e      	ldr	r6, [r7, #84]	@ 0x54
10052048:	4610      	mov	r0, r2
1005204a:	9610      	str	r6, [sp, #64]	@ 0x40
1005204c:	18b2      	adds	r2, r6, r2
1005204e:	7053      	strb	r3, [r2, #1]
10052050:	1c52      	adds	r2, r2, #1
10052052:	0766      	lsls	r6, r4, #29
10052054:	970f      	str	r7, [sp, #60]	@ 0x3c
10052056:	d507      	bpl.n	10052068 <GAP_set_extended_advertising_configuration+0x58>
10052058:	2710      	movs	r7, #16
1005205a:	431f      	orrs	r7, r3
1005205c:	7017      	strb	r7, [r2, #0]
1005205e:	0726      	lsls	r6, r4, #28
10052060:	d503      	bpl.n	1005206a <GAP_set_extended_advertising_configuration+0x5a>
10052062:	2650      	movs	r6, #80	@ 0x50
10052064:	4333      	orrs	r3, r6
10052066:	7013      	strb	r3, [r2, #0]
10052068:	461f      	mov	r7, r3
1005206a:	9e2a      	ldr	r6, [sp, #168]	@ 0xa8
1005206c:	07e3      	lsls	r3, r4, #31
1005206e:	d002      	beq.n	10052076 <GAP_set_extended_advertising_configuration+0x66>
10052070:	2301      	movs	r3, #1
10052072:	431f      	orrs	r7, r3
10052074:	7017      	strb	r7, [r2, #0]
10052076:	9f2c      	ldr	r7, [sp, #176]	@ 0xb0
10052078:	2204      	movs	r2, #4
1005207a:	2e03      	cmp	r6, #3
1005207c:	4633      	mov	r3, r6
1005207e:	901c      	str	r0, [sp, #112]	@ 0x70
10052080:	920e      	str	r2, [sp, #56]	@ 0x38
10052082:	9712      	str	r7, [sp, #72]	@ 0x48
10052084:	d004      	beq.n	10052090 <GAP_set_extended_advertising_configuration+0x80>
10052086:	2b04      	cmp	r3, #4
10052088:	d104      	bne.n	10052094 <GAP_set_extended_advertising_configuration+0x84>
1005208a:	2303      	movs	r3, #3
1005208c:	9311      	str	r3, [sp, #68]	@ 0x44
1005208e:	e003      	b.n	10052098 <GAP_set_extended_advertising_configuration+0x88>
10052090:	9211      	str	r2, [sp, #68]	@ 0x44
10052092:	e001      	b.n	10052098 <GAP_set_extended_advertising_configuration+0x88>
10052094:	2000      	movs	r0, #0
10052096:	9011      	str	r0, [sp, #68]	@ 0x44
10052098:	982e      	ldr	r0, [sp, #184]	@ 0xb8
1005209a:	9015      	str	r0, [sp, #84]	@ 0x54
1005209c:	982d      	ldr	r0, [sp, #180]	@ 0xb4
1005209e:	9014      	str	r0, [sp, #80]	@ 0x50
100520a0:	9e2b      	ldr	r6, [sp, #172]	@ 0xac
100520a2:	9829      	ldr	r0, [sp, #164]	@ 0xa4
100520a4:	9019      	str	r0, [sp, #100]	@ 0x64
100520a6:	9828      	ldr	r0, [sp, #160]	@ 0xa0
100520a8:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
100520aa:	9217      	str	r2, [sp, #92]	@ 0x5c
100520ac:	9a26      	ldr	r2, [sp, #152]	@ 0x98
100520ae:	9f25      	ldr	r7, [sp, #148]	@ 0x94
100520b0:	9713      	str	r7, [sp, #76]	@ 0x4c
100520b2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
100520b4:	2f03      	cmp	r7, #3
100520b6:	931b      	str	r3, [sp, #108]	@ 0x6c
100520b8:	961a      	str	r6, [sp, #104]	@ 0x68
100520ba:	9018      	str	r0, [sp, #96]	@ 0x60
100520bc:	9216      	str	r2, [sp, #88]	@ 0x58
100520be:	d004      	beq.n	100520ca <GAP_set_extended_advertising_configuration+0xba>
100520c0:	2f04      	cmp	r7, #4
100520c2:	d104      	bne.n	100520ce <GAP_set_extended_advertising_configuration+0xbe>
100520c4:	2703      	movs	r7, #3
100520c6:	463e      	mov	r6, r7
100520c8:	e002      	b.n	100520d0 <GAP_set_extended_advertising_configuration+0xc0>
100520ca:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
100520cc:	e000      	b.n	100520d0 <GAP_set_extended_advertising_configuration+0xc0>
100520ce:	2600      	movs	r6, #0
100520d0:	981c      	ldr	r0, [sp, #112]	@ 0x70
100520d2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
100520d4:	5411      	strb	r1, [r2, r0]
100520d6:	f7ff fe4d 	bl	10051d74 <GAP_get_own_address_type>
100520da:	a91d      	add	r1, sp, #116	@ 0x74
100520dc:	9708      	str	r7, [sp, #32]
100520de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
100520e0:	9209      	str	r2, [sp, #36]	@ 0x24
100520e2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100520e4:	920a      	str	r2, [sp, #40]	@ 0x28
100520e6:	9a11      	ldr	r2, [sp, #68]	@ 0x44
100520e8:	920b      	str	r2, [sp, #44]	@ 0x2c
100520ea:	960c      	str	r6, [sp, #48]	@ 0x30
100520ec:	910d      	str	r1, [sp, #52]	@ 0x34
100520ee:	9913      	ldr	r1, [sp, #76]	@ 0x4c
100520f0:	9100      	str	r1, [sp, #0]
100520f2:	9001      	str	r0, [sp, #4]
100520f4:	9816      	ldr	r0, [sp, #88]	@ 0x58
100520f6:	9002      	str	r0, [sp, #8]
100520f8:	9817      	ldr	r0, [sp, #92]	@ 0x5c
100520fa:	9003      	str	r0, [sp, #12]
100520fc:	9818      	ldr	r0, [sp, #96]	@ 0x60
100520fe:	9004      	str	r0, [sp, #16]
10052100:	9819      	ldr	r0, [sp, #100]	@ 0x64
10052102:	9005      	str	r0, [sp, #20]
10052104:	981b      	ldr	r0, [sp, #108]	@ 0x6c
10052106:	9006      	str	r0, [sp, #24]
10052108:	981a      	ldr	r0, [sp, #104]	@ 0x68
1005210a:	9007      	str	r0, [sp, #28]
1005210c:	aa1e      	add	r2, sp, #120	@ 0x78
1005210e:	ab24      	add	r3, sp, #144	@ 0x90
10052110:	4628      	mov	r0, r5
10052112:	4621      	mov	r1, r4
10052114:	f003 f886 	bl	10055224 <hci_le_set_extended_advertising_parameters_v2_api>
10052118:	2800      	cmp	r0, #0
1005211a:	d105      	bne.n	10052128 <GAP_set_extended_advertising_configuration+0x118>
1005211c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
1005211e:	6d49      	ldr	r1, [r1, #84]	@ 0x54
10052120:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10052122:	1889      	adds	r1, r1, r2
10052124:	2201      	movs	r2, #1
10052126:	748a      	strb	r2, [r1, #18]
10052128:	b01f      	add	sp, #124	@ 0x7c
1005212a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005212c <__arm_cp.3_0>:
1005212c:	20000844 	.word	0x20000844

10052130 <__arm_cp.3_1>:
10052130:	200008a8 	.word	0x200008a8

10052134 <GAP_check_flags>:
10052134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10052136:	4a28      	ldr	r2, [pc, #160]	@ (100521d8 <__arm_cp.5_0>)
10052138:	7e92      	ldrb	r2, [r2, #26]
1005213a:	2512      	movs	r5, #18
1005213c:	428a      	cmp	r2, r1
1005213e:	d925      	bls.n	1005218c <GAP_check_flags+0x58>
10052140:	2800      	cmp	r0, #0
10052142:	d100      	bne.n	10052146 <GAP_check_flags+0x12>
10052144:	4601      	mov	r1, r0
10052146:	2214      	movs	r2, #20
10052148:	434a      	muls	r2, r1
1005214a:	4824      	ldr	r0, [pc, #144]	@ (100521dc <__arm_cp.5_1>)
1005214c:	6800      	ldr	r0, [r0, #0]
1005214e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
10052150:	1899      	adds	r1, r3, r2
10052152:	784c      	ldrb	r4, [r1, #1]
10052154:	06a0      	lsls	r0, r4, #26
10052156:	0fc6      	lsrs	r6, r0, #31
10052158:	2000      	movs	r0, #0
1005215a:	2e00      	cmp	r6, #0
1005215c:	d002      	beq.n	10052164 <GAP_check_flags+0x30>
1005215e:	2710      	movs	r7, #16
10052160:	4027      	ands	r7, r4
10052162:	d114      	bne.n	1005218e <GAP_check_flags+0x5a>
10052164:	2e00      	cmp	r6, #0
10052166:	d102      	bne.n	1005216e <GAP_check_flags+0x3a>
10052168:	2608      	movs	r6, #8
1005216a:	4034      	ands	r4, r6
1005216c:	d10f      	bne.n	1005218e <GAP_check_flags+0x5a>
1005216e:	5c9e      	ldrb	r6, [r3, r2]
10052170:	684c      	ldr	r4, [r1, #4]
10052172:	8908      	ldrh	r0, [r1, #8]
10052174:	4621      	mov	r1, r4
10052176:	f000 f943 	bl	10052400 <GAP_search_flags_index>
1005217a:	4919      	ldr	r1, [pc, #100]	@ (100521e0 <__arm_cp.5_2>)
1005217c:	4288      	cmp	r0, r1
1005217e:	d008      	beq.n	10052192 <GAP_check_flags+0x5e>
10052180:	1900      	adds	r0, r0, r4
10052182:	7881      	ldrb	r1, [r0, #2]
10052184:	0748      	lsls	r0, r1, #29
10052186:	d40b      	bmi.n	100521a0 <GAP_check_flags+0x6c>
10052188:	20d4      	movs	r0, #212	@ 0xd4
1005218a:	e000      	b.n	1005218e <GAP_check_flags+0x5a>
1005218c:	4628      	mov	r0, r5
1005218e:	b2c0      	uxtb	r0, r0
10052190:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052192:	2e03      	cmp	r6, #3
10052194:	4628      	mov	r0, r5
10052196:	d8fa      	bhi.n	1005218e <GAP_check_flags+0x5a>
10052198:	00f1      	lsls	r1, r6, #3
1005219a:	4812      	ldr	r0, [pc, #72]	@ (100521e4 <__arm_cp.5_3>)
1005219c:	40c8      	lsrs	r0, r1
1005219e:	e7f6      	b.n	1005218e <GAP_check_flags+0x5a>
100521a0:	2e03      	cmp	r6, #3
100521a2:	4628      	mov	r0, r5
100521a4:	d8f3      	bhi.n	1005218e <GAP_check_flags+0x5a>
100521a6:	46c0      	nop			@ (mov r8, r8)
100521a8:	447e      	add	r6, pc
100521aa:	7936      	ldrb	r6, [r6, #4]
100521ac:	0076      	lsls	r6, r6, #1
100521ae:	44b7      	add	pc, r6
100521b0:	010d0601 	.word	0x010d0601
100521b4:	2003      	movs	r0, #3
100521b6:	4001      	ands	r1, r0
100521b8:	d105      	bne.n	100521c6 <GAP_check_flags+0x92>
100521ba:	4608      	mov	r0, r1
100521bc:	e7e7      	b.n	1005218e <GAP_check_flags+0x5a>
100521be:	2003      	movs	r0, #3
100521c0:	4001      	ands	r1, r0
100521c2:	2901      	cmp	r1, #1
100521c4:	d006      	beq.n	100521d4 <GAP_check_flags+0xa0>
100521c6:	202b      	movs	r0, #43	@ 0x2b
100521c8:	43c0      	mvns	r0, r0
100521ca:	e7e0      	b.n	1005218e <GAP_check_flags+0x5a>
100521cc:	2003      	movs	r0, #3
100521ce:	4001      	ands	r1, r0
100521d0:	2902      	cmp	r1, #2
100521d2:	d1f8      	bne.n	100521c6 <GAP_check_flags+0x92>
100521d4:	2000      	movs	r0, #0
100521d6:	e7da      	b.n	1005218e <GAP_check_flags+0x5a>

100521d8 <__arm_cp.5_0>:
100521d8:	200008a8 	.word	0x200008a8

100521dc <__arm_cp.5_1>:
100521dc:	20000844 	.word	0x20000844

100521e0 <__arm_cp.5_2>:
100521e0:	0000ffff 	.word	0x0000ffff

100521e4 <__arm_cp.5_3>:
100521e4:	00d4d400 	.word	0x00d4d400

100521e8 <GAP_set_discoverability_mode>:
100521e8:	b570      	push	{r4, r5, r6, lr}
100521ea:	4603      	mov	r3, r0
100521ec:	2900      	cmp	r1, #0
100521ee:	d100      	bne.n	100521f2 <GAP_set_discoverability_mode+0xa>
100521f0:	460a      	mov	r2, r1
100521f2:	4829      	ldr	r0, [pc, #164]	@ (10052298 <__arm_cp.6_0>)
100521f4:	6800      	ldr	r0, [r0, #0]
100521f6:	6d41      	ldr	r1, [r0, #84]	@ 0x54
100521f8:	2b01      	cmp	r3, #1
100521fa:	d10c      	bne.n	10052216 <GAP_set_discoverability_mode+0x2e>
100521fc:	2314      	movs	r3, #20
100521fe:	4353      	muls	r3, r2
10052200:	5cca      	ldrb	r2, [r1, r3]
10052202:	2a01      	cmp	r2, #1
10052204:	d033      	beq.n	1005226e <GAP_set_discoverability_mode+0x86>
10052206:	2a02      	cmp	r2, #2
10052208:	d13e      	bne.n	10052288 <GAP_set_discoverability_mode+0xa0>
1005220a:	18ca      	adds	r2, r1, r3
1005220c:	7894      	ldrb	r4, [r2, #2]
1005220e:	2004      	movs	r0, #4
10052210:	4320      	orrs	r0, r4
10052212:	7090      	strb	r0, [r2, #2]
10052214:	e03a      	b.n	1005228c <GAP_set_discoverability_mode+0xa4>
10052216:	2314      	movs	r3, #20
10052218:	4353      	muls	r3, r2
1005221a:	18c9      	adds	r1, r1, r3
1005221c:	1c8e      	adds	r6, r1, #2
1005221e:	7889      	ldrb	r1, [r1, #2]
10052220:	0789      	lsls	r1, r1, #30
10052222:	d521      	bpl.n	10052268 <GAP_set_discoverability_mode+0x80>
10052224:	2400      	movs	r4, #0
10052226:	4621      	mov	r1, r4
10052228:	f013 f875 	bl	10065316 <CST_stop>
1005222c:	481b      	ldr	r0, [pc, #108]	@ (1005229c <__arm_cp.6_1>)
1005222e:	6800      	ldr	r0, [r0, #0]
10052230:	214e      	movs	r1, #78	@ 0x4e
10052232:	5c40      	ldrb	r0, [r0, r1]
10052234:	07c0      	lsls	r0, r0, #31
10052236:	d017      	beq.n	10052268 <GAP_set_discoverability_mode+0x80>
10052238:	4819      	ldr	r0, [pc, #100]	@ (100522a0 <__arm_cp.6_2>)
1005223a:	6800      	ldr	r0, [r0, #0]
1005223c:	6980      	ldr	r0, [r0, #24]
1005223e:	2244      	movs	r2, #68	@ 0x44
10052240:	2502      	movs	r5, #2
10052242:	4629      	mov	r1, r5
10052244:	462b      	mov	r3, r5
10052246:	f7fe f85b 	bl	10050300 <aci_event_fifo_push_header>
1005224a:	2800      	cmp	r0, #0
1005224c:	d00c      	beq.n	10052268 <GAP_set_discoverability_mode+0x80>
1005224e:	4601      	mov	r1, r0
10052250:	7185      	strb	r5, [r0, #6]
10052252:	71c4      	strb	r4, [r0, #7]
10052254:	7204      	strb	r4, [r0, #8]
10052256:	20ff      	movs	r0, #255	@ 0xff
10052258:	7148      	strb	r0, [r1, #5]
1005225a:	2082      	movs	r0, #130	@ 0x82
1005225c:	7108      	strb	r0, [r1, #4]
1005225e:	2004      	movs	r0, #4
10052260:	7248      	strb	r0, [r1, #9]
10052262:	4628      	mov	r0, r5
10052264:	f7fe f8e9 	bl	1005043a <aci_event_fifo_push>
10052268:	2000      	movs	r0, #0
1005226a:	7030      	strb	r0, [r6, #0]
1005226c:	bd70      	pop	{r4, r5, r6, pc}
1005226e:	18c9      	adds	r1, r1, r3
10052270:	784a      	ldrb	r2, [r1, #1]
10052272:	788b      	ldrb	r3, [r1, #2]
10052274:	4313      	orrs	r3, r2
10052276:	2202      	movs	r2, #2
10052278:	431a      	orrs	r2, r3
1005227a:	708a      	strb	r2, [r1, #2]
1005227c:	2100      	movs	r1, #0
1005227e:	2201      	movs	r2, #1
10052280:	4b08      	ldr	r3, [pc, #32]	@ (100522a4 <__arm_cp.6_3>)
10052282:	f013 f87e 	bl	10065382 <CST_start>
10052286:	bd70      	pop	{r4, r5, r6, pc}
10052288:	18c8      	adds	r0, r1, r3
1005228a:	7880      	ldrb	r0, [r0, #2]
1005228c:	18c9      	adds	r1, r1, r3
1005228e:	784a      	ldrb	r2, [r1, #1]
10052290:	4302      	orrs	r2, r0
10052292:	708a      	strb	r2, [r1, #2]
10052294:	bd70      	pop	{r4, r5, r6, pc}
10052296:	46c0      	nop			@ (mov r8, r8)

10052298 <__arm_cp.6_0>:
10052298:	20000844 	.word	0x20000844

1005229c <__arm_cp.6_1>:
1005229c:	20000894 	.word	0x20000894

100522a0 <__arm_cp.6_2>:
100522a0:	20000840 	.word	0x20000840

100522a4 <__arm_cp.6_3>:
100522a4:	0002bf20 	.word	0x0002bf20

100522a8 <GAP_set_extended_advertising_enable>:
100522a8:	b5f0      	push	{r4, r5, r6, r7, lr}
100522aa:	b085      	sub	sp, #20
100522ac:	4616      	mov	r6, r2
100522ae:	4602      	mov	r2, r0
100522b0:	483d      	ldr	r0, [pc, #244]	@ (100523a8 <__arm_cp.7_0>)
100522b2:	7e80      	ldrb	r0, [r0, #26]
100522b4:	4288      	cmp	r0, r1
100522b6:	d201      	bcs.n	100522bc <GAP_set_extended_advertising_enable+0x14>
100522b8:	2712      	movs	r7, #18
100522ba:	e072      	b.n	100523a2 <GAP_set_extended_advertising_enable+0xfa>
100522bc:	460c      	mov	r4, r1
100522be:	483b      	ldr	r0, [pc, #236]	@ (100523ac <__arm_cp.7_1>)
100522c0:	6800      	ldr	r0, [r0, #0]
100522c2:	9004      	str	r0, [sp, #16]
100522c4:	2a01      	cmp	r2, #1
100522c6:	9203      	str	r2, [sp, #12]
100522c8:	d115      	bne.n	100522f6 <GAP_set_extended_advertising_enable+0x4e>
100522ca:	9401      	str	r4, [sp, #4]
100522cc:	1c64      	adds	r4, r4, #1
100522ce:	4635      	mov	r5, r6
100522d0:	1e64      	subs	r4, r4, #1
100522d2:	d013      	beq.n	100522fc <GAP_set_extended_advertising_enable+0x54>
100522d4:	7829      	ldrb	r1, [r5, #0]
100522d6:	2014      	movs	r0, #20
100522d8:	4348      	muls	r0, r1
100522da:	9a04      	ldr	r2, [sp, #16]
100522dc:	6d52      	ldr	r2, [r2, #84]	@ 0x54
100522de:	1810      	adds	r0, r2, r0
100522e0:	7c80      	ldrb	r0, [r0, #18]
100522e2:	2800      	cmp	r0, #0
100522e4:	d039      	beq.n	1005235a <GAP_set_extended_advertising_enable+0xb2>
100522e6:	1dad      	adds	r5, r5, #6
100522e8:	2001      	movs	r0, #1
100522ea:	f7ff ff23 	bl	10052134 <GAP_check_flags>
100522ee:	2800      	cmp	r0, #0
100522f0:	d0ee      	beq.n	100522d0 <GAP_set_extended_advertising_enable+0x28>
100522f2:	4607      	mov	r7, r0
100522f4:	e055      	b.n	100523a2 <GAP_set_extended_advertising_enable+0xfa>
100522f6:	200c      	movs	r0, #12
100522f8:	9002      	str	r0, [sp, #8]
100522fa:	e004      	b.n	10052306 <GAP_set_extended_advertising_enable+0x5e>
100522fc:	f7ff fe0c 	bl	10051f18 <GAP_generate_new_rpa>
10052300:	9002      	str	r0, [sp, #8]
10052302:	9a03      	ldr	r2, [sp, #12]
10052304:	9c01      	ldr	r4, [sp, #4]
10052306:	4610      	mov	r0, r2
10052308:	4621      	mov	r1, r4
1005230a:	4632      	mov	r2, r6
1005230c:	f003 f842 	bl	10055394 <hci_le_set_extended_advertising_enable_api>
10052310:	4607      	mov	r7, r0
10052312:	2800      	cmp	r0, #0
10052314:	d145      	bne.n	100523a2 <GAP_set_extended_advertising_enable+0xfa>
10052316:	2c00      	cmp	r4, #0
10052318:	d021      	beq.n	1005235e <GAP_set_extended_advertising_enable+0xb6>
1005231a:	9803      	ldr	r0, [sp, #12]
1005231c:	2c00      	cmp	r4, #0
1005231e:	d032      	beq.n	10052386 <GAP_set_extended_advertising_enable+0xde>
10052320:	4625      	mov	r5, r4
10052322:	7837      	ldrb	r7, [r6, #0]
10052324:	7931      	ldrb	r1, [r6, #4]
10052326:	2900      	cmp	r1, #0
10052328:	d102      	bne.n	10052330 <GAP_set_extended_advertising_enable+0x88>
1005232a:	8871      	ldrh	r1, [r6, #2]
1005232c:	2900      	cmp	r1, #0
1005232e:	d012      	beq.n	10052356 <GAP_set_extended_advertising_enable+0xae>
10052330:	2402      	movs	r4, #2
10052332:	2101      	movs	r1, #1
10052334:	463a      	mov	r2, r7
10052336:	f7ff ff57 	bl	100521e8 <GAP_set_discoverability_mode>
1005233a:	9803      	ldr	r0, [sp, #12]
1005233c:	2801      	cmp	r0, #1
1005233e:	d000      	beq.n	10052342 <GAP_set_extended_advertising_enable+0x9a>
10052340:	2400      	movs	r4, #0
10052342:	2214      	movs	r2, #20
10052344:	437a      	muls	r2, r7
10052346:	9904      	ldr	r1, [sp, #16]
10052348:	6d49      	ldr	r1, [r1, #84]	@ 0x54
1005234a:	1889      	adds	r1, r1, r2
1005234c:	74cc      	strb	r4, [r1, #19]
1005234e:	1db6      	adds	r6, r6, #6
10052350:	462c      	mov	r4, r5
10052352:	1e6c      	subs	r4, r5, #1
10052354:	e7e2      	b.n	1005231c <GAP_set_extended_advertising_enable+0x74>
10052356:	2401      	movs	r4, #1
10052358:	e7eb      	b.n	10052332 <GAP_set_extended_advertising_enable+0x8a>
1005235a:	27d3      	movs	r7, #211	@ 0xd3
1005235c:	e021      	b.n	100523a2 <GAP_set_extended_advertising_enable+0xfa>
1005235e:	2400      	movs	r4, #0
10052360:	2613      	movs	r6, #19
10052362:	9803      	ldr	r0, [sp, #12]
10052364:	4f10      	ldr	r7, [pc, #64]	@ (100523a8 <__arm_cp.7_0>)
10052366:	7eb9      	ldrb	r1, [r7, #26]
10052368:	428c      	cmp	r4, r1
1005236a:	d20c      	bcs.n	10052386 <GAP_set_extended_advertising_enable+0xde>
1005236c:	b2e2      	uxtb	r2, r4
1005236e:	2500      	movs	r5, #0
10052370:	2101      	movs	r1, #1
10052372:	4628      	mov	r0, r5
10052374:	f7ff ff38 	bl	100521e8 <GAP_set_discoverability_mode>
10052378:	9804      	ldr	r0, [sp, #16]
1005237a:	6d40      	ldr	r0, [r0, #84]	@ 0x54
1005237c:	5585      	strb	r5, [r0, r6]
1005237e:	9803      	ldr	r0, [sp, #12]
10052380:	3614      	adds	r6, #20
10052382:	1c64      	adds	r4, r4, #1
10052384:	e7ef      	b.n	10052366 <GAP_set_extended_advertising_enable+0xbe>
10052386:	2801      	cmp	r0, #1
10052388:	d108      	bne.n	1005239c <GAP_set_extended_advertising_enable+0xf4>
1005238a:	9802      	ldr	r0, [sp, #8]
1005238c:	2800      	cmp	r0, #0
1005238e:	d107      	bne.n	100523a0 <GAP_set_extended_advertising_enable+0xf8>
10052390:	2700      	movs	r7, #0
10052392:	4638      	mov	r0, r7
10052394:	4639      	mov	r1, r7
10052396:	f7ff fd97 	bl	10051ec8 <GAP_start_privacy_timer>
1005239a:	e002      	b.n	100523a2 <GAP_set_extended_advertising_enable+0xfa>
1005239c:	f7ff fc8e 	bl	10051cbc <GAP_stop_privacy_timer>
100523a0:	2700      	movs	r7, #0
100523a2:	4638      	mov	r0, r7
100523a4:	b005      	add	sp, #20
100523a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100523a8 <__arm_cp.7_0>:
100523a8:	200008a8 	.word	0x200008a8

100523ac <__arm_cp.7_1>:
100523ac:	20000844 	.word	0x20000844

100523b0 <GAP_suspend_resume_active_advertising_sets_extended>:
100523b0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100523b2:	4604      	mov	r4, r0
100523b4:	4810      	ldr	r0, [pc, #64]	@ (100523f8 <__arm_cp.8_0>)
100523b6:	7e81      	ldrb	r1, [r0, #26]
100523b8:	4810      	ldr	r0, [pc, #64]	@ (100523fc <__arm_cp.8_1>)
100523ba:	6806      	ldr	r6, [r0, #0]
100523bc:	2700      	movs	r7, #0
100523be:	2513      	movs	r5, #19
100523c0:	4638      	mov	r0, r7
100523c2:	b2ca      	uxtb	r2, r1
100523c4:	4297      	cmp	r7, r2
100523c6:	d215      	bcs.n	100523f4 <GAP_suspend_resume_active_advertising_sets_extended+0x44>
100523c8:	2800      	cmp	r0, #0
100523ca:	d113      	bne.n	100523f4 <GAP_suspend_resume_active_advertising_sets_extended+0x44>
100523cc:	6d70      	ldr	r0, [r6, #84]	@ 0x54
100523ce:	5d40      	ldrb	r0, [r0, r5]
100523d0:	2801      	cmp	r0, #1
100523d2:	d10b      	bne.n	100523ec <GAP_suspend_resume_active_advertising_sets_extended+0x3c>
100523d4:	aa01      	add	r2, sp, #4
100523d6:	2000      	movs	r0, #0
100523d8:	7110      	strb	r0, [r2, #4]
100523da:	8050      	strh	r0, [r2, #2]
100523dc:	7017      	strb	r7, [r2, #0]
100523de:	2101      	movs	r1, #1
100523e0:	4620      	mov	r0, r4
100523e2:	f002 ffd7 	bl	10055394 <hci_le_set_extended_advertising_enable_api>
100523e6:	4904      	ldr	r1, [pc, #16]	@ (100523f8 <__arm_cp.8_0>)
100523e8:	7e89      	ldrb	r1, [r1, #26]
100523ea:	e000      	b.n	100523ee <GAP_suspend_resume_active_advertising_sets_extended+0x3e>
100523ec:	2000      	movs	r0, #0
100523ee:	3514      	adds	r5, #20
100523f0:	1c7f      	adds	r7, r7, #1
100523f2:	e7e6      	b.n	100523c2 <GAP_suspend_resume_active_advertising_sets_extended+0x12>
100523f4:	b2c0      	uxtb	r0, r0
100523f6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100523f8 <__arm_cp.8_0>:
100523f8:	200008a8 	.word	0x200008a8

100523fc <__arm_cp.8_1>:
100523fc:	20000844 	.word	0x20000844

10052400 <GAP_search_flags_index>:
10052400:	b5b0      	push	{r4, r5, r7, lr}
10052402:	4a0a      	ldr	r2, [pc, #40]	@ (1005242c <__arm_cp.15_0>)
10052404:	2803      	cmp	r0, #3
10052406:	d30f      	bcc.n	10052428 <GAP_search_flags_index+0x28>
10052408:	2300      	movs	r3, #0
1005240a:	b29d      	uxth	r5, r3
1005240c:	5d4c      	ldrb	r4, [r1, r5]
1005240e:	2c02      	cmp	r4, #2
10052410:	d103      	bne.n	1005241a <GAP_search_flags_index+0x1a>
10052412:	186d      	adds	r5, r5, r1
10052414:	786d      	ldrb	r5, [r5, #1]
10052416:	2d01      	cmp	r5, #1
10052418:	d005      	beq.n	10052426 <GAP_search_flags_index+0x26>
1005241a:	191b      	adds	r3, r3, r4
1005241c:	1c5b      	adds	r3, r3, #1
1005241e:	b29c      	uxth	r4, r3
10052420:	4284      	cmp	r4, r0
10052422:	d3f2      	bcc.n	1005240a <GAP_search_flags_index+0xa>
10052424:	e000      	b.n	10052428 <GAP_search_flags_index+0x28>
10052426:	461a      	mov	r2, r3
10052428:	b290      	uxth	r0, r2
1005242a:	bdb0      	pop	{r4, r5, r7, pc}

1005242c <__arm_cp.15_0>:
1005242c:	0000ffff 	.word	0x0000ffff

10052430 <GAP_check_adv_status>:
10052430:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10052432:	460c      	mov	r4, r1
10052434:	4605      	mov	r5, r0
10052436:	481c      	ldr	r0, [pc, #112]	@ (100524a8 <__arm_cp.16_0>)
10052438:	6806      	ldr	r6, [r0, #0]
1005243a:	f7ff fabb 	bl	100519b4 <gap_extended_adv_scan_supported>
1005243e:	491b      	ldr	r1, [pc, #108]	@ (100524ac <__arm_cp.16_1>)
10052440:	7e8a      	ldrb	r2, [r1, #26]
10052442:	2100      	movs	r1, #0
10052444:	9501      	str	r5, [sp, #4]
10052446:	7029      	strb	r1, [r5, #0]
10052448:	2301      	movs	r3, #1
1005244a:	9402      	str	r4, [sp, #8]
1005244c:	7023      	strb	r3, [r4, #0]
1005244e:	2800      	cmp	r0, #0
10052450:	d000      	beq.n	10052454 <GAP_check_adv_status+0x24>
10052452:	4613      	mov	r3, r2
10052454:	b2d8      	uxtb	r0, r3
10052456:	2714      	movs	r7, #20
10052458:	4347      	muls	r7, r0
1005245a:	4608      	mov	r0, r1
1005245c:	460b      	mov	r3, r1
1005245e:	460a      	mov	r2, r1
10052460:	428f      	cmp	r7, r1
10052462:	d011      	beq.n	10052488 <GAP_check_adv_status+0x58>
10052464:	6d74      	ldr	r4, [r6, #84]	@ 0x54
10052466:	1864      	adds	r4, r4, r1
10052468:	7ca5      	ldrb	r5, [r4, #18]
1005246a:	2d01      	cmp	r5, #1
1005246c:	d10a      	bne.n	10052484 <GAP_check_adv_status+0x54>
1005246e:	7ce5      	ldrb	r5, [r4, #19]
10052470:	2d00      	cmp	r5, #0
10052472:	d007      	beq.n	10052484 <GAP_check_adv_status+0x54>
10052474:	2d02      	cmp	r5, #2
10052476:	d100      	bne.n	1005247a <GAP_check_adv_status+0x4a>
10052478:	2301      	movs	r3, #1
1005247a:	78a4      	ldrb	r4, [r4, #2]
1005247c:	2001      	movs	r0, #1
1005247e:	07a4      	lsls	r4, r4, #30
10052480:	d500      	bpl.n	10052484 <GAP_check_adv_status+0x54>
10052482:	4602      	mov	r2, r0
10052484:	3114      	adds	r1, #20
10052486:	e7eb      	b.n	10052460 <GAP_check_adv_status+0x30>
10052488:	2801      	cmp	r0, #1
1005248a:	d102      	bne.n	10052492 <GAP_check_adv_status+0x62>
1005248c:	2101      	movs	r1, #1
1005248e:	9c01      	ldr	r4, [sp, #4]
10052490:	7021      	strb	r1, [r4, #0]
10052492:	2b01      	cmp	r3, #1
10052494:	d002      	beq.n	1005249c <GAP_check_adv_status+0x6c>
10052496:	b2d1      	uxtb	r1, r2
10052498:	2901      	cmp	r1, #1
1005249a:	d102      	bne.n	100524a2 <GAP_check_adv_status+0x72>
1005249c:	2100      	movs	r1, #0
1005249e:	9a02      	ldr	r2, [sp, #8]
100524a0:	7011      	strb	r1, [r2, #0]
100524a2:	b2c0      	uxtb	r0, r0
100524a4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100524a6:	46c0      	nop			@ (mov r8, r8)

100524a8 <__arm_cp.16_0>:
100524a8:	20000844 	.word	0x20000844

100524ac <__arm_cp.16_1>:
100524ac:	200008a8 	.word	0x200008a8

100524b0 <GAP_ResumeAdvertising>:
100524b0:	b580      	push	{r7, lr}
100524b2:	2001      	movs	r0, #1
100524b4:	f7ff ff7c 	bl	100523b0 <GAP_suspend_resume_active_advertising_sets_extended>
100524b8:	bd80      	pop	{r7, pc}
	...

100524bc <GAT_att_cmn_init>:
100524bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100524be:	2001      	movs	r0, #1
100524c0:	2198      	movs	r1, #152	@ 0x98
100524c2:	f010 fcb7 	bl	10062e34 <csmem_mem_0_assign>
100524c6:	4e2b      	ldr	r6, [pc, #172]	@ (10052574 <__arm_cp.1_0>)
100524c8:	6030      	str	r0, [r6, #0]
100524ca:	4f2b      	ldr	r7, [pc, #172]	@ (10052578 <__arm_cp.1_1>)
100524cc:	7af8      	ldrb	r0, [r7, #11]
100524ce:	7b39      	ldrb	r1, [r7, #12]
100524d0:	1808      	adds	r0, r1, r0
100524d2:	2414      	movs	r4, #20
100524d4:	4621      	mov	r1, r4
100524d6:	f010 fcad 	bl	10062e34 <csmem_mem_0_assign>
100524da:	6832      	ldr	r2, [r6, #0]
100524dc:	2500      	movs	r5, #0
100524de:	6355      	str	r5, [r2, #52]	@ 0x34
100524e0:	62d5      	str	r5, [r2, #44]	@ 0x2c
100524e2:	7af9      	ldrb	r1, [r7, #11]
100524e4:	4603      	mov	r3, r0
100524e6:	462f      	mov	r7, r5
100524e8:	42b9      	cmp	r1, r7
100524ea:	d00a      	beq.n	10052502 <GAT_att_cmn_init+0x46>
100524ec:	611d      	str	r5, [r3, #16]
100524ee:	705f      	strb	r7, [r3, #1]
100524f0:	701f      	strb	r7, [r3, #0]
100524f2:	6832      	ldr	r2, [r6, #0]
100524f4:	62d3      	str	r3, [r2, #44]	@ 0x2c
100524f6:	4625      	mov	r5, r4
100524f8:	437d      	muls	r5, r7
100524fa:	1945      	adds	r5, r0, r5
100524fc:	3314      	adds	r3, #20
100524fe:	1c7f      	adds	r7, r7, #1
10052500:	e7f2      	b.n	100524e8 <GAT_att_cmn_init+0x2c>
10052502:	2300      	movs	r3, #0
10052504:	6313      	str	r3, [r2, #48]	@ 0x30
10052506:	4a1c      	ldr	r2, [pc, #112]	@ (10052578 <__arm_cp.1_1>)
10052508:	7b12      	ldrb	r2, [r2, #12]
1005250a:	1852      	adds	r2, r2, r1
1005250c:	b2cd      	uxtb	r5, r1
1005250e:	42aa      	cmp	r2, r5
10052510:	d90a      	bls.n	10052528 <GAT_att_cmn_init+0x6c>
10052512:	4365      	muls	r5, r4
10052514:	27ff      	movs	r7, #255	@ 0xff
10052516:	5547      	strb	r7, [r0, r5]
10052518:	1945      	adds	r5, r0, r5
1005251a:	612b      	str	r3, [r5, #16]
1005251c:	7069      	strb	r1, [r5, #1]
1005251e:	6833      	ldr	r3, [r6, #0]
10052520:	631d      	str	r5, [r3, #48]	@ 0x30
10052522:	1c49      	adds	r1, r1, #1
10052524:	462b      	mov	r3, r5
10052526:	e7f1      	b.n	1005250c <GAT_att_cmn_init+0x50>
10052528:	0690      	lsls	r0, r2, #26
1005252a:	0e00      	lsrs	r0, r0, #24
1005252c:	1c41      	adds	r1, r0, #1
1005252e:	4c13      	ldr	r4, [pc, #76]	@ (1005257c <__arm_cp.1_2>)
10052530:	2201      	movs	r2, #1
10052532:	4620      	mov	r0, r4
10052534:	f010 fc6c 	bl	10062e10 <csmem_mem_assign>
10052538:	6831      	ldr	r1, [r6, #0]
1005253a:	6208      	str	r0, [r1, #32]
1005253c:	4d0e      	ldr	r5, [pc, #56]	@ (10052578 <__arm_cp.1_1>)
1005253e:	7ae8      	ldrb	r0, [r5, #11]
10052540:	7b29      	ldrb	r1, [r5, #12]
10052542:	1808      	adds	r0, r1, r0
10052544:	0680      	lsls	r0, r0, #26
10052546:	0e01      	lsrs	r1, r0, #24
10052548:	2202      	movs	r2, #2
1005254a:	4620      	mov	r0, r4
1005254c:	f010 fc60 	bl	10062e10 <csmem_mem_assign>
10052550:	6834      	ldr	r4, [r6, #0]
10052552:	6260      	str	r0, [r4, #36]	@ 0x24
10052554:	7ae8      	ldrb	r0, [r5, #11]
10052556:	7b29      	ldrb	r1, [r5, #12]
10052558:	1808      	adds	r0, r1, r0
1005255a:	0680      	lsls	r0, r0, #26
1005255c:	0e01      	lsrs	r1, r0, #24
1005255e:	4a08      	ldr	r2, [pc, #32]	@ (10052580 <__arm_cp.1_3>)
10052560:	2307      	movs	r3, #7
10052562:	4620      	mov	r0, r4
10052564:	f012 fec2 	bl	100652ec <CST_init>
10052568:	f000 fa06 	bl	10052978 <GAT_att_srv_init>
1005256c:	f014 fc36 	bl	10066ddc <GAT_att_clt_init>
10052570:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052572:	46c0      	nop			@ (mov r8, r8)

10052574 <__arm_cp.1_0>:
10052574:	20000848 	.word	0x20000848

10052578 <__arm_cp.1_1>:
10052578:	200008a8 	.word	0x200008a8

1005257c <__arm_cp.1_2>:
1005257c:	200008a4 	.word	0x200008a4

10052580 <__arm_cp.1_3>:
10052580:	10052585 	.word	0x10052585

10052584 <GAT_att_cmn_timeout_cb_wrapper>:
10052584:	b580      	push	{r7, lr}
10052586:	6940      	ldr	r0, [r0, #20]
10052588:	4901      	ldr	r1, [pc, #4]	@ (10052590 <__arm_cp.2_0>)
1005258a:	f012 ff88 	bl	1006549e <cst_sharedCallback>
1005258e:	bd80      	pop	{r7, pc}

10052590 <__arm_cp.2_0>:
10052590:	100528fd 	.word	0x100528fd

10052594 <GAT_att_cmn_timer_expire_tsk>:
10052594:	b5e0      	push	{r5, r6, r7, lr}
10052596:	2000      	movs	r0, #0
10052598:	9000      	str	r0, [sp, #0]
1005259a:	4b06      	ldr	r3, [pc, #24]	@ (100525b4 <__arm_cp.4_0>)
1005259c:	4601      	mov	r1, r0
1005259e:	4602      	mov	r2, r0
100525a0:	f000 f80a 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
100525a4:	2800      	cmp	r0, #0
100525a6:	d004      	beq.n	100525b2 <GAT_att_cmn_timer_expire_tsk+0x1e>
100525a8:	2007      	movs	r0, #7
100525aa:	f012 fe41 	bl	10065230 <tsk_notify_idx>
100525ae:	f7f0 f992 	bl	100428d6 <BLE_STACK_ProcessRequest>
100525b2:	bd8c      	pop	{r2, r3, r7, pc}

100525b4 <__arm_cp.4_0>:
100525b4:	10052615 	.word	0x10052615

100525b8 <GAT_att_cmn_for_each_ch_descr>:
100525b8:	b5f0      	push	{r4, r5, r6, r7, lr}
100525ba:	b085      	sub	sp, #20
100525bc:	9304      	str	r3, [sp, #16]
100525be:	9201      	str	r2, [sp, #4]
100525c0:	9102      	str	r1, [sp, #8]
100525c2:	4607      	mov	r7, r0
100525c4:	2002      	movs	r0, #2
100525c6:	4038      	ands	r0, r7
100525c8:	9003      	str	r0, [sp, #12]
100525ca:	2401      	movs	r4, #1
100525cc:	403c      	ands	r4, r7
100525ce:	4810      	ldr	r0, [pc, #64]	@ (10052610 <__arm_cp.5_0>)
100525d0:	6805      	ldr	r5, [r0, #0]
100525d2:	3534      	adds	r5, #52	@ 0x34
100525d4:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
100525d6:	682d      	ldr	r5, [r5, #0]
100525d8:	2d00      	cmp	r5, #0
100525da:	d016      	beq.n	1005260a <GAT_att_cmn_for_each_ch_descr+0x52>
100525dc:	2f00      	cmp	r7, #0
100525de:	d00c      	beq.n	100525fa <GAT_att_cmn_for_each_ch_descr+0x42>
100525e0:	2c00      	cmp	r4, #0
100525e2:	d003      	beq.n	100525ec <GAT_att_cmn_for_each_ch_descr+0x34>
100525e4:	8928      	ldrh	r0, [r5, #8]
100525e6:	9902      	ldr	r1, [sp, #8]
100525e8:	4288      	cmp	r0, r1
100525ea:	d10c      	bne.n	10052606 <GAT_att_cmn_for_each_ch_descr+0x4e>
100525ec:	9803      	ldr	r0, [sp, #12]
100525ee:	2800      	cmp	r0, #0
100525f0:	d003      	beq.n	100525fa <GAT_att_cmn_for_each_ch_descr+0x42>
100525f2:	8968      	ldrh	r0, [r5, #10]
100525f4:	9901      	ldr	r1, [sp, #4]
100525f6:	4288      	cmp	r0, r1
100525f8:	d105      	bne.n	10052606 <GAT_att_cmn_for_each_ch_descr+0x4e>
100525fa:	4628      	mov	r0, r5
100525fc:	4631      	mov	r1, r6
100525fe:	9a04      	ldr	r2, [sp, #16]
10052600:	4790      	blx	r2
10052602:	2800      	cmp	r0, #0
10052604:	d102      	bne.n	1005260c <GAT_att_cmn_for_each_ch_descr+0x54>
10052606:	3510      	adds	r5, #16
10052608:	e7e5      	b.n	100525d6 <GAT_att_cmn_for_each_ch_descr+0x1e>
1005260a:	2000      	movs	r0, #0
1005260c:	b005      	add	sp, #20
1005260e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10052610 <__arm_cp.5_0>:
10052610:	20000848 	.word	0x20000848

10052614 <GAT_att_cmn_handle_disconnec_iterate_f>:
10052614:	b5b0      	push	{r4, r5, r7, lr}
10052616:	4604      	mov	r4, r0
10052618:	8880      	ldrh	r0, [r0, #4]
1005261a:	2500      	movs	r5, #0
1005261c:	05c0      	lsls	r0, r0, #23
1005261e:	d401      	bmi.n	10052624 <GAT_att_cmn_handle_disconnec_iterate_f+0x10>
10052620:	4628      	mov	r0, r5
10052622:	e006      	b.n	10052632 <GAT_att_cmn_handle_disconnec_iterate_f+0x1e>
10052624:	8962      	ldrh	r2, [r4, #10]
10052626:	8921      	ldrh	r1, [r4, #8]
10052628:	2002      	movs	r0, #2
1005262a:	f013 fc6d 	bl	10065f08 <aci_gatt_proc_timeout_event_push_noinline>
1005262e:	2800      	cmp	r0, #0
10052630:	d000      	beq.n	10052634 <GAT_att_cmn_handle_disconnec_iterate_f+0x20>
10052632:	bdb0      	pop	{r4, r5, r7, pc}
10052634:	8920      	ldrh	r0, [r4, #8]
10052636:	8961      	ldrh	r1, [r4, #10]
10052638:	2904      	cmp	r1, #4
1005263a:	d102      	bne.n	10052642 <GAT_att_cmn_handle_disconnec_iterate_f+0x2e>
1005263c:	f000 f8ac 	bl	10052798 <GAT_att_cmn_disconnection>
10052640:	e7ee      	b.n	10052620 <GAT_att_cmn_handle_disconnec_iterate_f+0xc>
10052642:	f000 fb25 	bl	10052c90 <GAT_att_srv_bearer_close>
10052646:	8961      	ldrh	r1, [r4, #10]
10052648:	8920      	ldrh	r0, [r4, #8]
1005264a:	f014 fcb8 	bl	10066fbe <GAT_att_clt_bearer_close>
1005264e:	2000      	movs	r0, #0
10052650:	8120      	strh	r0, [r4, #8]
10052652:	4909      	ldr	r1, [pc, #36]	@ (10052678 <__arm_cp.6_0>)
10052654:	6809      	ldr	r1, [r1, #0]
10052656:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
10052658:	42a3      	cmp	r3, r4
1005265a:	d005      	beq.n	10052668 <GAT_att_cmn_handle_disconnec_iterate_f+0x54>
1005265c:	461a      	mov	r2, r3
1005265e:	691b      	ldr	r3, [r3, #16]
10052660:	42a3      	cmp	r3, r4
10052662:	d1fb      	bne.n	1005265c <GAT_att_cmn_handle_disconnec_iterate_f+0x48>
10052664:	3210      	adds	r2, #16
10052666:	e001      	b.n	1005266c <GAT_att_cmn_handle_disconnec_iterate_f+0x58>
10052668:	460a      	mov	r2, r1
1005266a:	3234      	adds	r2, #52	@ 0x34
1005266c:	6923      	ldr	r3, [r4, #16]
1005266e:	6013      	str	r3, [r2, #0]
10052670:	6b0a      	ldr	r2, [r1, #48]	@ 0x30
10052672:	6122      	str	r2, [r4, #16]
10052674:	630c      	str	r4, [r1, #48]	@ 0x30
10052676:	bdb0      	pop	{r4, r5, r7, pc}

10052678 <__arm_cp.6_0>:
10052678:	20000848 	.word	0x20000848

1005267c <GAT_att_cmn_tx_pool_evt_tsk>:
1005267c:	b580      	push	{r7, lr}
1005267e:	2000      	movs	r0, #0
10052680:	f7fd fc86 	bl	1004ff90 <ACL_pkt_get_available_mem_buffers>
10052684:	490d      	ldr	r1, [pc, #52]	@ (100526bc <__arm_cp.8_0>)
10052686:	8a09      	ldrh	r1, [r1, #16]
10052688:	3125      	adds	r1, #37	@ 0x25
1005268a:	0949      	lsrs	r1, r1, #5
1005268c:	4288      	cmp	r0, r1
1005268e:	d90f      	bls.n	100526b0 <GAT_att_cmn_tx_pool_evt_tsk+0x34>
10052690:	1c49      	adds	r1, r1, #1
10052692:	f7ed fdd5 	bl	10040240 <__udivsi3>
10052696:	4602      	mov	r2, r0
10052698:	2042      	movs	r0, #66	@ 0x42
1005269a:	2100      	movs	r1, #0
1005269c:	f013 fda4 	bl	100661e8 <aci_gatt_tx_pool_available_event_push_noinline>
100526a0:	2800      	cmp	r0, #0
100526a2:	d004      	beq.n	100526ae <GAT_att_cmn_tx_pool_evt_tsk+0x32>
100526a4:	2008      	movs	r0, #8
100526a6:	f012 fdc3 	bl	10065230 <tsk_notify_idx>
100526aa:	f7f0 f914 	bl	100428d6 <BLE_STACK_ProcessRequest>
100526ae:	bd80      	pop	{r7, pc}
100526b0:	2008      	movs	r0, #8
100526b2:	2100      	movs	r1, #0
100526b4:	f012 fdce 	bl	10065254 <tsk_wait_resource_idx>
100526b8:	bd80      	pop	{r7, pc}
100526ba:	46c0      	nop			@ (mov r8, r8)

100526bc <__arm_cp.8_0>:
100526bc:	200008a8 	.word	0x200008a8

100526c0 <GAT_att_cmn_rcv>:
100526c0:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
100526c2:	460c      	mov	r4, r1
100526c4:	2800      	cmp	r0, #0
100526c6:	d013      	beq.n	100526f0 <GAT_att_cmn_rcv+0x30>
100526c8:	8825      	ldrh	r5, [r4, #0]
100526ca:	4620      	mov	r0, r4
100526cc:	f003 f8d9 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
100526d0:	4601      	mov	r1, r0
100526d2:	4628      	mov	r0, r5
100526d4:	f000 f82e 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
100526d8:	2800      	cmp	r0, #0
100526da:	d009      	beq.n	100526f0 <GAT_att_cmn_rcv+0x30>
100526dc:	8860      	ldrh	r0, [r4, #2]
100526de:	2800      	cmp	r0, #0
100526e0:	d006      	beq.n	100526f0 <GAT_att_cmn_rcv+0x30>
100526e2:	89a1      	ldrh	r1, [r4, #12]
100526e4:	291f      	cmp	r1, #31
100526e6:	d808      	bhi.n	100526fa <GAT_att_cmn_rcv+0x3a>
100526e8:	a801      	add	r0, sp, #4
100526ea:	8001      	strh	r1, [r0, #0]
100526ec:	6860      	ldr	r0, [r4, #4]
100526ee:	e00a      	b.n	10052706 <GAT_att_cmn_rcv+0x46>
100526f0:	4620      	mov	r0, r4
100526f2:	f7fd fc53 	bl	1004ff9c <ACL_pkt_release>
100526f6:	2000      	movs	r0, #0
100526f8:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
100526fa:	6860      	ldr	r0, [r4, #4]
100526fc:	ad01      	add	r5, sp, #4
100526fe:	462a      	mov	r2, r5
10052700:	f010 fc37 	bl	10062f72 <Mem_Buff_get_buff_off>
10052704:	8829      	ldrh	r1, [r5, #0]
10052706:	1840      	adds	r0, r0, r1
10052708:	7900      	ldrb	r0, [r0, #4]
1005270a:	07c1      	lsls	r1, r0, #31
1005270c:	d104      	bne.n	10052718 <GAT_att_cmn_rcv+0x58>
1005270e:	281b      	cmp	r0, #27
10052710:	d008      	beq.n	10052724 <GAT_att_cmn_rcv+0x64>
10052712:	281d      	cmp	r0, #29
10052714:	d006      	beq.n	10052724 <GAT_att_cmn_rcv+0x64>
10052716:	e009      	b.n	1005272c <GAT_att_cmn_rcv+0x6c>
10052718:	281e      	cmp	r0, #30
1005271a:	d303      	bcc.n	10052724 <GAT_att_cmn_rcv+0x64>
1005271c:	2102      	movs	r1, #2
1005271e:	4308      	orrs	r0, r1
10052720:	2823      	cmp	r0, #35	@ 0x23
10052722:	d103      	bne.n	1005272c <GAT_att_cmn_rcv+0x6c>
10052724:	4620      	mov	r0, r4
10052726:	f014 fb5d 	bl	10066de4 <GAT_att_clt_rcv>
1005272a:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
1005272c:	4620      	mov	r0, r4
1005272e:	f000 f93b 	bl	100529a8 <GAT_att_srv_rcv>
10052732:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10052734 <GAT_att_cmn_get_channel_descr_p>:
10052734:	4a07      	ldr	r2, [pc, #28]	@ (10052754 <__arm_cp.10_0>)
10052736:	6812      	ldr	r2, [r2, #0]
10052738:	3234      	adds	r2, #52	@ 0x34
1005273a:	6812      	ldr	r2, [r2, #0]
1005273c:	2a00      	cmp	r2, #0
1005273e:	d007      	beq.n	10052750 <GAT_att_cmn_get_channel_descr_p+0x1c>
10052740:	8913      	ldrh	r3, [r2, #8]
10052742:	4283      	cmp	r3, r0
10052744:	d102      	bne.n	1005274c <GAT_att_cmn_get_channel_descr_p+0x18>
10052746:	8953      	ldrh	r3, [r2, #10]
10052748:	428b      	cmp	r3, r1
1005274a:	d001      	beq.n	10052750 <GAT_att_cmn_get_channel_descr_p+0x1c>
1005274c:	3210      	adds	r2, #16
1005274e:	e7f4      	b.n	1005273a <GAT_att_cmn_get_channel_descr_p+0x6>
10052750:	4610      	mov	r0, r2
10052752:	4770      	bx	lr

10052754 <__arm_cp.10_0>:
10052754:	20000848 	.word	0x20000848

10052758 <GAT_att_cmn_connection>:
10052758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005275a:	4604      	mov	r4, r0
1005275c:	4e0d      	ldr	r6, [pc, #52]	@ (10052794 <__arm_cp.11_0>)
1005275e:	6830      	ldr	r0, [r6, #0]
10052760:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
10052762:	6929      	ldr	r1, [r5, #16]
10052764:	62c1      	str	r1, [r0, #44]	@ 0x2c
10052766:	882f      	ldrh	r7, [r5, #0]
10052768:	2100      	movs	r1, #0
1005276a:	2214      	movs	r2, #20
1005276c:	4628      	mov	r0, r5
1005276e:	f7f2 f929 	bl	100449c4 <BLEPLAT_MemSet>
10052772:	2004      	movs	r0, #4
10052774:	8168      	strh	r0, [r5, #10]
10052776:	2017      	movs	r0, #23
10052778:	80e8      	strh	r0, [r5, #6]
1005277a:	812c      	strh	r4, [r5, #8]
1005277c:	802f      	strh	r7, [r5, #0]
1005277e:	6830      	ldr	r0, [r6, #0]
10052780:	6b41      	ldr	r1, [r0, #52]	@ 0x34
10052782:	6345      	str	r5, [r0, #52]	@ 0x34
10052784:	6129      	str	r1, [r5, #16]
10052786:	4620      	mov	r0, r4
10052788:	f000 fa7e 	bl	10052c88 <GAT_att_srv_connection>
1005278c:	4620      	mov	r0, r4
1005278e:	f014 fc12 	bl	10066fb6 <GAT_att_clt_connection>
10052792:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10052794 <__arm_cp.11_0>:
10052794:	20000848 	.word	0x20000848

10052798 <GAT_att_cmn_disconnection>:
10052798:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005279a:	4604      	mov	r4, r0
1005279c:	f012 fbf5 	bl	10064f8a <smp_sap_forget_device_upon_disconnection>
100527a0:	481c      	ldr	r0, [pc, #112]	@ (10052814 <__arm_cp.12_0>)
100527a2:	6800      	ldr	r0, [r0, #0]
100527a4:	6b46      	ldr	r6, [r0, #52]	@ 0x34
100527a6:	2e00      	cmp	r6, #0
100527a8:	d032      	beq.n	10052810 <GAT_att_cmn_disconnection+0x78>
100527aa:	4637      	mov	r7, r6
100527ac:	6936      	ldr	r6, [r6, #16]
100527ae:	8938      	ldrh	r0, [r7, #8]
100527b0:	42a0      	cmp	r0, r4
100527b2:	d1f8      	bne.n	100527a6 <GAT_att_cmn_disconnection+0xe>
100527b4:	2500      	movs	r5, #0
100527b6:	897a      	ldrh	r2, [r7, #10]
100527b8:	b2e8      	uxtb	r0, r5
100527ba:	2803      	cmp	r0, #3
100527bc:	d804      	bhi.n	100527c8 <GAT_att_cmn_disconnection+0x30>
100527be:	4621      	mov	r1, r4
100527c0:	f000 f82a 	bl	10052818 <GAT_att_cmn_stop_timer>
100527c4:	1c6d      	adds	r5, r5, #1
100527c6:	e7f6      	b.n	100527b6 <GAT_att_cmn_disconnection+0x1e>
100527c8:	4620      	mov	r0, r4
100527ca:	4611      	mov	r1, r2
100527cc:	f000 fa60 	bl	10052c90 <GAT_att_srv_bearer_close>
100527d0:	8979      	ldrh	r1, [r7, #10]
100527d2:	4620      	mov	r0, r4
100527d4:	f014 fbf3 	bl	10066fbe <GAT_att_clt_bearer_close>
100527d8:	2000      	movs	r0, #0
100527da:	8138      	strh	r0, [r7, #8]
100527dc:	480d      	ldr	r0, [pc, #52]	@ (10052814 <__arm_cp.12_0>)
100527de:	6800      	ldr	r0, [r0, #0]
100527e0:	6b42      	ldr	r2, [r0, #52]	@ 0x34
100527e2:	42ba      	cmp	r2, r7
100527e4:	d005      	beq.n	100527f2 <GAT_att_cmn_disconnection+0x5a>
100527e6:	4611      	mov	r1, r2
100527e8:	6912      	ldr	r2, [r2, #16]
100527ea:	42ba      	cmp	r2, r7
100527ec:	d1fb      	bne.n	100527e6 <GAT_att_cmn_disconnection+0x4e>
100527ee:	3110      	adds	r1, #16
100527f0:	e001      	b.n	100527f6 <GAT_att_cmn_disconnection+0x5e>
100527f2:	4601      	mov	r1, r0
100527f4:	3134      	adds	r1, #52	@ 0x34
100527f6:	693a      	ldr	r2, [r7, #16]
100527f8:	600a      	str	r2, [r1, #0]
100527fa:	8979      	ldrh	r1, [r7, #10]
100527fc:	2904      	cmp	r1, #4
100527fe:	d103      	bne.n	10052808 <GAT_att_cmn_disconnection+0x70>
10052800:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
10052802:	6139      	str	r1, [r7, #16]
10052804:	62c7      	str	r7, [r0, #44]	@ 0x2c
10052806:	e7ce      	b.n	100527a6 <GAT_att_cmn_disconnection+0xe>
10052808:	6b01      	ldr	r1, [r0, #48]	@ 0x30
1005280a:	6139      	str	r1, [r7, #16]
1005280c:	6307      	str	r7, [r0, #48]	@ 0x30
1005280e:	e7ca      	b.n	100527a6 <GAT_att_cmn_disconnection+0xe>
10052810:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10052812:	46c0      	nop			@ (mov r8, r8)

10052814 <__arm_cp.12_0>:
10052814:	20000848 	.word	0x20000848

10052818 <GAT_att_cmn_stop_timer>:
10052818:	b510      	push	{r4, lr}
1005281a:	4604      	mov	r4, r0
1005281c:	4608      	mov	r0, r1
1005281e:	4611      	mov	r1, r2
10052820:	f000 f858 	bl	100528d4 <GAT_att_cmn_get_timer_index>
10052824:	0080      	lsls	r0, r0, #2
10052826:	1900      	adds	r0, r0, r4
10052828:	b2c1      	uxtb	r1, r0
1005282a:	4802      	ldr	r0, [pc, #8]	@ (10052834 <__arm_cp.13_0>)
1005282c:	6800      	ldr	r0, [r0, #0]
1005282e:	f012 fd72 	bl	10065316 <CST_stop>
10052832:	bd10      	pop	{r4, pc}

10052834 <__arm_cp.13_0>:
10052834:	20000848 	.word	0x20000848

10052838 <GAT_att_cmn_send>:
10052838:	b5b0      	push	{r4, r5, r7, lr}
1005283a:	460c      	mov	r4, r1
1005283c:	4605      	mov	r5, r0
1005283e:	8848      	ldrh	r0, [r1, #2]
10052840:	1d00      	adds	r0, r0, #4
10052842:	b281      	uxth	r1, r0
10052844:	4620      	mov	r0, r4
10052846:	f7fd fbb2 	bl	1004ffae <ACL_pkt_resize>
1005284a:	4628      	mov	r0, r5
1005284c:	4621      	mov	r1, r4
1005284e:	f003 f943 	bl	10055ad8 <L2C_send_frame>
10052852:	2800      	cmp	r0, #0
10052854:	d004      	beq.n	10052860 <GAT_att_cmn_send+0x28>
10052856:	4620      	mov	r0, r4
10052858:	f7fd fba0 	bl	1004ff9c <ACL_pkt_release>
1005285c:	2081      	movs	r0, #129	@ 0x81
1005285e:	bdb0      	pop	{r4, r5, r7, pc}
10052860:	2000      	movs	r0, #0
10052862:	bdb0      	pop	{r4, r5, r7, pc}

10052864 <GAT_att_cmn_dscr_flag_check_is_not_set_f>:
10052864:	8809      	ldrh	r1, [r1, #0]
10052866:	8880      	ldrh	r0, [r0, #4]
10052868:	4008      	ands	r0, r1
1005286a:	d000      	beq.n	1005286e <GAT_att_cmn_dscr_flag_check_is_not_set_f+0xa>
1005286c:	2086      	movs	r0, #134	@ 0x86
1005286e:	4770      	bx	lr

10052870 <GAT_att_cmn_dscr_flag_set_f>:
10052870:	8809      	ldrh	r1, [r1, #0]
10052872:	8882      	ldrh	r2, [r0, #4]
10052874:	430a      	orrs	r2, r1
10052876:	8082      	strh	r2, [r0, #4]
10052878:	2000      	movs	r0, #0
1005287a:	4770      	bx	lr

1005287c <GAT_att_cmn_dscr_flag_clear_f>:
1005287c:	8809      	ldrh	r1, [r1, #0]
1005287e:	8882      	ldrh	r2, [r0, #4]
10052880:	438a      	bics	r2, r1
10052882:	8082      	strh	r2, [r0, #4]
10052884:	2000      	movs	r0, #0
10052886:	4770      	bx	lr

10052888 <GAT_att_cmn_get_conn_index>:
10052888:	4907      	ldr	r1, [pc, #28]	@ (100528a8 <__arm_cp.22_0>)
1005288a:	6809      	ldr	r1, [r1, #0]
1005288c:	3134      	adds	r1, #52	@ 0x34
1005288e:	6809      	ldr	r1, [r1, #0]
10052890:	2900      	cmp	r1, #0
10052892:	d004      	beq.n	1005289e <GAT_att_cmn_get_conn_index+0x16>
10052894:	890a      	ldrh	r2, [r1, #8]
10052896:	4282      	cmp	r2, r0
10052898:	d003      	beq.n	100528a2 <GAT_att_cmn_get_conn_index+0x1a>
1005289a:	3110      	adds	r1, #16
1005289c:	e7f7      	b.n	1005288e <GAT_att_cmn_get_conn_index+0x6>
1005289e:	20ff      	movs	r0, #255	@ 0xff
100528a0:	4770      	bx	lr
100528a2:	7808      	ldrb	r0, [r1, #0]
100528a4:	4770      	bx	lr
100528a6:	46c0      	nop			@ (mov r8, r8)

100528a8 <__arm_cp.22_0>:
100528a8:	20000848 	.word	0x20000848

100528ac <GAT_att_cmn_start_timer>:
100528ac:	b510      	push	{r4, lr}
100528ae:	4604      	mov	r4, r0
100528b0:	4608      	mov	r0, r1
100528b2:	4611      	mov	r1, r2
100528b4:	f000 f80e 	bl	100528d4 <GAT_att_cmn_get_timer_index>
100528b8:	0080      	lsls	r0, r0, #2
100528ba:	1900      	adds	r0, r0, r4
100528bc:	b2c1      	uxtb	r1, r0
100528be:	4803      	ldr	r0, [pc, #12]	@ (100528cc <__arm_cp.23_0>)
100528c0:	6800      	ldr	r0, [r0, #0]
100528c2:	2200      	movs	r2, #0
100528c4:	4b02      	ldr	r3, [pc, #8]	@ (100528d0 <__arm_cp.23_1>)
100528c6:	f012 fd5c 	bl	10065382 <CST_start>
100528ca:	bd10      	pop	{r4, pc}

100528cc <__arm_cp.23_0>:
100528cc:	20000848 	.word	0x20000848

100528d0 <__arm_cp.23_1>:
100528d0:	00007530 	.word	0x00007530

100528d4 <GAT_att_cmn_get_timer_index>:
100528d4:	4a08      	ldr	r2, [pc, #32]	@ (100528f8 <__arm_cp.24_0>)
100528d6:	6812      	ldr	r2, [r2, #0]
100528d8:	3234      	adds	r2, #52	@ 0x34
100528da:	6812      	ldr	r2, [r2, #0]
100528dc:	2a00      	cmp	r2, #0
100528de:	d007      	beq.n	100528f0 <GAT_att_cmn_get_timer_index+0x1c>
100528e0:	8913      	ldrh	r3, [r2, #8]
100528e2:	4283      	cmp	r3, r0
100528e4:	d102      	bne.n	100528ec <GAT_att_cmn_get_timer_index+0x18>
100528e6:	8953      	ldrh	r3, [r2, #10]
100528e8:	428b      	cmp	r3, r1
100528ea:	d003      	beq.n	100528f4 <GAT_att_cmn_get_timer_index+0x20>
100528ec:	3210      	adds	r2, #16
100528ee:	e7f4      	b.n	100528da <GAT_att_cmn_get_timer_index+0x6>
100528f0:	20ff      	movs	r0, #255	@ 0xff
100528f2:	4770      	bx	lr
100528f4:	7850      	ldrb	r0, [r2, #1]
100528f6:	4770      	bx	lr

100528f8 <__arm_cp.24_0>:
100528f8:	20000848 	.word	0x20000848

100528fc <GAT_att_cmn_timeout_cb>:
100528fc:	b580      	push	{r7, lr}
100528fe:	0881      	lsrs	r1, r0, #2
10052900:	480a      	ldr	r0, [pc, #40]	@ (1005292c <__arm_cp.25_0>)
10052902:	6800      	ldr	r0, [r0, #0]
10052904:	3034      	adds	r0, #52	@ 0x34
10052906:	6800      	ldr	r0, [r0, #0]
10052908:	2800      	cmp	r0, #0
1005290a:	d00e      	beq.n	1005292a <GAT_att_cmn_timeout_cb+0x2e>
1005290c:	7842      	ldrb	r2, [r0, #1]
1005290e:	428a      	cmp	r2, r1
10052910:	d001      	beq.n	10052916 <GAT_att_cmn_timeout_cb+0x1a>
10052912:	3010      	adds	r0, #16
10052914:	e7f7      	b.n	10052906 <GAT_att_cmn_timeout_cb+0xa>
10052916:	2101      	movs	r1, #1
10052918:	0209      	lsls	r1, r1, #8
1005291a:	8882      	ldrh	r2, [r0, #4]
1005291c:	430a      	orrs	r2, r1
1005291e:	8082      	strh	r2, [r0, #4]
10052920:	2007      	movs	r0, #7
10052922:	f012 fc85 	bl	10065230 <tsk_notify_idx>
10052926:	f7ef ffd6 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005292a:	bd80      	pop	{r7, pc}

1005292c <__arm_cp.25_0>:
1005292c:	20000848 	.word	0x20000848

10052930 <GAT_att_cmn_get_pckt>:
10052930:	b510      	push	{r4, lr}
10052932:	8944      	ldrh	r4, [r0, #10]
10052934:	2c04      	cmp	r4, #4
10052936:	d000      	beq.n	1005293a <GAT_att_cmn_get_pckt+0xa>
10052938:	2406      	movs	r4, #6
1005293a:	1861      	adds	r1, r4, r1
1005293c:	b28a      	uxth	r2, r1
1005293e:	8901      	ldrh	r1, [r0, #8]
10052940:	2000      	movs	r0, #0
10052942:	f7fd fb09 	bl	1004ff58 <ACL_pkt_get>
10052946:	2800      	cmp	r0, #0
10052948:	d000      	beq.n	1005294c <GAT_att_cmn_get_pckt+0x1c>
1005294a:	8184      	strh	r4, [r0, #12]
1005294c:	bd10      	pop	{r4, pc}
	...

10052950 <GAT_att_cmn_no_eatt_channels_are_active>:
10052950:	4908      	ldr	r1, [pc, #32]	@ (10052974 <__arm_cp.27_0>)
10052952:	6809      	ldr	r1, [r1, #0]
10052954:	3134      	adds	r1, #52	@ 0x34
10052956:	6809      	ldr	r1, [r1, #0]
10052958:	2900      	cmp	r1, #0
1005295a:	d007      	beq.n	1005296c <GAT_att_cmn_no_eatt_channels_are_active+0x1c>
1005295c:	890a      	ldrh	r2, [r1, #8]
1005295e:	4282      	cmp	r2, r0
10052960:	d102      	bne.n	10052968 <GAT_att_cmn_no_eatt_channels_are_active+0x18>
10052962:	894a      	ldrh	r2, [r1, #10]
10052964:	2a04      	cmp	r2, #4
10052966:	d101      	bne.n	1005296c <GAT_att_cmn_no_eatt_channels_are_active+0x1c>
10052968:	3110      	adds	r1, #16
1005296a:	e7f4      	b.n	10052956 <GAT_att_cmn_no_eatt_channels_are_active+0x6>
1005296c:	4248      	negs	r0, r1
1005296e:	4148      	adcs	r0, r1
10052970:	4770      	bx	lr
10052972:	46c0      	nop			@ (mov r8, r8)

10052974 <__arm_cp.27_0>:
10052974:	20000848 	.word	0x20000848

10052978 <GAT_att_srv_init>:
10052978:	b510      	push	{r4, lr}
1005297a:	4c08      	ldr	r4, [pc, #32]	@ (1005299c <__arm_cp.0_0>)
1005297c:	6820      	ldr	r0, [r4, #0]
1005297e:	3040      	adds	r0, #64	@ 0x40
10052980:	f012 fe48 	bl	10065614 <ACL_list_init>
10052984:	6820      	ldr	r0, [r4, #0]
10052986:	3038      	adds	r0, #56	@ 0x38
10052988:	f012 fe44 	bl	10065614 <ACL_list_init>
1005298c:	4804      	ldr	r0, [pc, #16]	@ (100529a0 <__arm_cp.0_1>)
1005298e:	4905      	ldr	r1, [pc, #20]	@ (100529a4 <__arm_cp.0_2>)
10052990:	223c      	movs	r2, #60	@ 0x3c
10052992:	f7f2 f807 	bl	100449a4 <BLEPLAT_MemCpy>
10052996:	f001 f8fd 	bl	10053b94 <GAT_srv_init>
1005299a:	bd10      	pop	{r4, pc}

1005299c <__arm_cp.0_0>:
1005299c:	20000848 	.word	0x20000848

100529a0 <__arm_cp.0_1>:
100529a0:	2000084c 	.word	0x2000084c

100529a4 <__arm_cp.0_2>:
100529a4:	1006e8e0 	.word	0x1006e8e0

100529a8 <GAT_att_srv_rcv>:
100529a8:	b5f0      	push	{r4, r5, r6, r7, lr}
100529aa:	b087      	sub	sp, #28
100529ac:	4604      	mov	r4, r0
100529ae:	8805      	ldrh	r5, [r0, #0]
100529b0:	f002 ff67 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
100529b4:	4601      	mov	r1, r0
100529b6:	4628      	mov	r0, r5
100529b8:	f7ff febc 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
100529bc:	4605      	mov	r5, r0
100529be:	4620      	mov	r0, r4
100529c0:	f000 f853 	bl	10052a6a <GAT_att_cmn_get_opcode>
100529c4:	4607      	mov	r7, r0
100529c6:	f000 f855 	bl	10052a74 <GAT_att_srv_get_exec_fn_id_by_op>
100529ca:	280f      	cmp	r0, #15
100529cc:	d114      	bne.n	100529f8 <GAT_att_srv_rcv+0x50>
100529ce:	2105      	movs	r1, #5
100529d0:	4628      	mov	r0, r5
100529d2:	f7ff ffad 	bl	10052930 <GAT_att_cmn_get_pckt>
100529d6:	2800      	cmp	r0, #0
100529d8:	d034      	beq.n	10052a44 <GAT_att_srv_rcv+0x9c>
100529da:	4606      	mov	r6, r0
100529dc:	2100      	movs	r1, #0
100529de:	2206      	movs	r2, #6
100529e0:	4638      	mov	r0, r7
100529e2:	4633      	mov	r3, r6
100529e4:	f000 faf6 	bl	10052fd4 <GAT_att_srv_write_err_packet>
100529e8:	8968      	ldrh	r0, [r5, #10]
100529ea:	4631      	mov	r1, r6
100529ec:	f7ff ff24 	bl	10052838 <GAT_att_cmn_send>
100529f0:	4606      	mov	r6, r0
100529f2:	2800      	cmp	r0, #0
100529f4:	d136      	bne.n	10052a64 <GAT_att_srv_rcv+0xbc>
100529f6:	e031      	b.n	10052a5c <GAT_att_srv_rcv+0xb4>
100529f8:	9501      	str	r5, [sp, #4]
100529fa:	2500      	movs	r5, #0
100529fc:	2f1e      	cmp	r7, #30
100529fe:	462e      	mov	r6, r5
10052a00:	d016      	beq.n	10052a30 <GAT_att_srv_rcv+0x88>
10052a02:	2040      	movs	r0, #64	@ 0x40
10052a04:	4007      	ands	r7, r0
10052a06:	462e      	mov	r6, r5
10052a08:	d112      	bne.n	10052a30 <GAT_att_srv_rcv+0x88>
10052a0a:	9b01      	ldr	r3, [sp, #4]
10052a0c:	8898      	ldrh	r0, [r3, #4]
10052a0e:	07c0      	lsls	r0, r0, #31
10052a10:	d11a      	bne.n	10052a48 <GAT_att_srv_rcv+0xa0>
10052a12:	895a      	ldrh	r2, [r3, #10]
10052a14:	8919      	ldrh	r1, [r3, #8]
10052a16:	2700      	movs	r7, #0
10052a18:	4638      	mov	r0, r7
10052a1a:	f7ff ff47 	bl	100528ac <GAT_att_cmn_start_timer>
10052a1e:	4606      	mov	r6, r0
10052a20:	2800      	cmp	r0, #0
10052a22:	d105      	bne.n	10052a30 <GAT_att_srv_rcv+0x88>
10052a24:	9a01      	ldr	r2, [sp, #4]
10052a26:	8890      	ldrh	r0, [r2, #4]
10052a28:	2101      	movs	r1, #1
10052a2a:	4301      	orrs	r1, r0
10052a2c:	8091      	strh	r1, [r2, #4]
10052a2e:	463e      	mov	r6, r7
10052a30:	a802      	add	r0, sp, #8
10052a32:	8005      	strh	r5, [r0, #0]
10052a34:	9506      	str	r5, [sp, #24]
10052a36:	9505      	str	r5, [sp, #20]
10052a38:	9901      	ldr	r1, [sp, #4]
10052a3a:	9104      	str	r1, [sp, #16]
10052a3c:	9403      	str	r4, [sp, #12]
10052a3e:	f000 f853 	bl	10052ae8 <GAT_att_srv_run>
10052a42:	e00f      	b.n	10052a64 <GAT_att_srv_rcv+0xbc>
10052a44:	2688      	movs	r6, #136	@ 0x88
10052a46:	e00d      	b.n	10052a64 <GAT_att_srv_rcv+0xbc>
10052a48:	3308      	adds	r3, #8
10052a4a:	2042      	movs	r0, #66	@ 0x42
10052a4c:	2103      	movs	r1, #3
10052a4e:	2202      	movs	r2, #2
10052a50:	f014 f8e2 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
10052a54:	2800      	cmp	r0, #0
10052a56:	d001      	beq.n	10052a5c <GAT_att_srv_rcv+0xb4>
10052a58:	2684      	movs	r6, #132	@ 0x84
10052a5a:	e003      	b.n	10052a64 <GAT_att_srv_rcv+0xbc>
10052a5c:	4620      	mov	r0, r4
10052a5e:	f7fd fa9d 	bl	1004ff9c <ACL_pkt_release>
10052a62:	2600      	movs	r6, #0
10052a64:	4630      	mov	r0, r6
10052a66:	b007      	add	sp, #28
10052a68:	bdf0      	pop	{r4, r5, r6, r7, pc}

10052a6a <GAT_att_cmn_get_opcode>:
10052a6a:	b580      	push	{r7, lr}
10052a6c:	8981      	ldrh	r1, [r0, #12]
10052a6e:	f001 f84c 	bl	10053b0a <ACL_pkt_read_8b>
10052a72:	bd80      	pop	{r7, pc}

10052a74 <GAT_att_srv_get_exec_fn_id_by_op>:
10052a74:	1e81      	subs	r1, r0, #2
10052a76:	291e      	cmp	r1, #30
10052a78:	d816      	bhi.n	10052aa8 <GAT_att_srv_get_exec_fn_id_by_op+0x34>
10052a7a:	2000      	movs	r0, #0
10052a7c:	4479      	add	r1, pc
10052a7e:	7909      	ldrb	r1, [r1, #4]
10052a80:	0049      	lsls	r1, r1, #1
10052a82:	448f      	add	pc, r1
10052a84:	170f1718 	.word	0x170f1718
10052a88:	171b1719 	.word	0x171b1719
10052a8c:	171f171d 	.word	0x171f171d
10052a90:	17231721 	.word	0x17231721
10052a94:	17171725 	.word	0x17171725
10052a98:	17291727 	.word	0x17291727
10052a9c:	17171717 	.word	0x17171717
10052aa0:	002d172b 	.word	0x002d172b
10052aa4:	2001      	movs	r0, #1
10052aa6:	4770      	bx	lr
10052aa8:	2852      	cmp	r0, #82	@ 0x52
10052aaa:	d01b      	beq.n	10052ae4 <GAT_att_srv_get_exec_fn_id_by_op+0x70>
10052aac:	28d2      	cmp	r0, #210	@ 0xd2
10052aae:	d101      	bne.n	10052ab4 <GAT_att_srv_get_exec_fn_id_by_op+0x40>
10052ab0:	200a      	movs	r0, #10
10052ab2:	4770      	bx	lr
10052ab4:	200f      	movs	r0, #15
10052ab6:	4770      	bx	lr
10052ab8:	2002      	movs	r0, #2
10052aba:	4770      	bx	lr
10052abc:	2003      	movs	r0, #3
10052abe:	4770      	bx	lr
10052ac0:	2004      	movs	r0, #4
10052ac2:	4770      	bx	lr
10052ac4:	2005      	movs	r0, #5
10052ac6:	4770      	bx	lr
10052ac8:	2006      	movs	r0, #6
10052aca:	4770      	bx	lr
10052acc:	2007      	movs	r0, #7
10052ace:	4770      	bx	lr
10052ad0:	2008      	movs	r0, #8
10052ad2:	4770      	bx	lr
10052ad4:	200b      	movs	r0, #11
10052ad6:	4770      	bx	lr
10052ad8:	200c      	movs	r0, #12
10052ada:	4770      	bx	lr
10052adc:	200d      	movs	r0, #13
10052ade:	4770      	bx	lr
10052ae0:	200e      	movs	r0, #14
10052ae2:	4770      	bx	lr
10052ae4:	2009      	movs	r0, #9
10052ae6:	4770      	bx	lr

10052ae8 <GAT_att_srv_run>:
10052ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
10052aea:	b085      	sub	sp, #20
10052aec:	4604      	mov	r4, r0
10052aee:	7800      	ldrb	r0, [r0, #0]
10052af0:	2800      	cmp	r0, #0
10052af2:	d107      	bne.n	10052b04 <GAT_att_srv_run+0x1c>
10052af4:	6860      	ldr	r0, [r4, #4]
10052af6:	f7ff ffb8 	bl	10052a6a <GAT_att_cmn_get_opcode>
10052afa:	7060      	strb	r0, [r4, #1]
10052afc:	68a5      	ldr	r5, [r4, #8]
10052afe:	68e8      	ldr	r0, [r5, #12]
10052b00:	2800      	cmp	r0, #0
10052b02:	d03c      	beq.n	10052b7e <GAT_att_srv_run+0x96>
10052b04:	7865      	ldrb	r5, [r4, #1]
10052b06:	4628      	mov	r0, r5
10052b08:	f7ff ffb4 	bl	10052a74 <GAT_att_srv_get_exec_fn_id_by_op>
10052b0c:	280e      	cmp	r0, #14
10052b0e:	d808      	bhi.n	10052b22 <GAT_att_srv_run+0x3a>
10052b10:	0080      	lsls	r0, r0, #2
10052b12:	495b      	ldr	r1, [pc, #364]	@ (10052c80 <__arm_cp.4_3>)
10052b14:	5809      	ldr	r1, [r1, r0]
10052b16:	2900      	cmp	r1, #0
10052b18:	d003      	beq.n	10052b22 <GAT_att_srv_run+0x3a>
10052b1a:	4620      	mov	r0, r4
10052b1c:	4788      	blx	r1
10052b1e:	4607      	mov	r7, r0
10052b20:	e007      	b.n	10052b32 <GAT_att_srv_run+0x4a>
10052b22:	68a0      	ldr	r0, [r4, #8]
10052b24:	68c3      	ldr	r3, [r0, #12]
10052b26:	2100      	movs	r1, #0
10052b28:	2206      	movs	r2, #6
10052b2a:	4628      	mov	r0, r5
10052b2c:	f000 fa52 	bl	10052fd4 <GAT_att_srv_write_err_packet>
10052b30:	2786      	movs	r7, #134	@ 0x86
10052b32:	6861      	ldr	r1, [r4, #4]
10052b34:	2900      	cmp	r1, #0
10052b36:	d019      	beq.n	10052b6c <GAT_att_srv_run+0x84>
10052b38:	2f88      	cmp	r7, #136	@ 0x88
10052b3a:	d003      	beq.n	10052b44 <GAT_att_srv_run+0x5c>
10052b3c:	2f84      	cmp	r7, #132	@ 0x84
10052b3e:	d00c      	beq.n	10052b5a <GAT_att_srv_run+0x72>
10052b40:	2f07      	cmp	r7, #7
10052b42:	d110      	bne.n	10052b66 <GAT_att_srv_run+0x7e>
10052b44:	484f      	ldr	r0, [pc, #316]	@ (10052c84 <__arm_cp.4_4>)
10052b46:	6800      	ldr	r0, [r0, #0]
10052b48:	3040      	adds	r0, #64	@ 0x40
10052b4a:	f012 fd67 	bl	1006561c <ACL_list_insert_tail>
10052b4e:	2009      	movs	r0, #9
10052b50:	f012 fb6e 	bl	10065230 <tsk_notify_idx>
10052b54:	f7ef febf 	bl	100428d6 <BLE_STACK_ProcessRequest>
10052b58:	e008      	b.n	10052b6c <GAT_att_srv_run+0x84>
10052b5a:	484a      	ldr	r0, [pc, #296]	@ (10052c84 <__arm_cp.4_4>)
10052b5c:	6800      	ldr	r0, [r0, #0]
10052b5e:	3038      	adds	r0, #56	@ 0x38
10052b60:	f012 fd5c 	bl	1006561c <ACL_list_insert_tail>
10052b64:	e009      	b.n	10052b7a <GAT_att_srv_run+0x92>
10052b66:	4608      	mov	r0, r1
10052b68:	f7fd fa18 	bl	1004ff9c <ACL_pkt_release>
10052b6c:	2f86      	cmp	r7, #134	@ 0x86
10052b6e:	d001      	beq.n	10052b74 <GAT_att_srv_run+0x8c>
10052b70:	2f00      	cmp	r7, #0
10052b72:	d102      	bne.n	10052b7a <GAT_att_srv_run+0x92>
10052b74:	68a0      	ldr	r0, [r4, #8]
10052b76:	f000 fa46 	bl	10053006 <GAT_att_srv_send_response>
10052b7a:	b005      	add	sp, #20
10052b7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052b7e:	6867      	ldr	r7, [r4, #4]
10052b80:	4638      	mov	r0, r7
10052b82:	f7ff ff72 	bl	10052a6a <GAT_att_cmn_get_opcode>
10052b86:	4606      	mov	r6, r0
10052b88:	f7ff ff74 	bl	10052a74 <GAT_att_srv_get_exec_fn_id_by_op>
10052b8c:	8879      	ldrh	r1, [r7, #2]
10052b8e:	88ea      	ldrh	r2, [r5, #6]
10052b90:	2304      	movs	r3, #4
10052b92:	9302      	str	r3, [sp, #8]
10052b94:	2300      	movs	r3, #0
10052b96:	4291      	cmp	r1, r2
10052b98:	d83e      	bhi.n	10052c18 <GAT_att_srv_run+0x130>
10052b9a:	280e      	cmp	r0, #14
10052b9c:	d83c      	bhi.n	10052c18 <GAT_att_srv_run+0x130>
10052b9e:	9301      	str	r3, [sp, #4]
10052ba0:	0042      	lsls	r2, r0, #1
10052ba2:	4b34      	ldr	r3, [pc, #208]	@ (10052c74 <__arm_cp.4_0>)
10052ba4:	5a9a      	ldrh	r2, [r3, r2]
10052ba6:	4b34      	ldr	r3, [pc, #208]	@ (10052c78 <__arm_cp.4_1>)
10052ba8:	40c3      	lsrs	r3, r0
10052baa:	07db      	lsls	r3, r3, #31
10052bac:	d105      	bne.n	10052bba <GAT_att_srv_run+0xd2>
10052bae:	2380      	movs	r3, #128	@ 0x80
10052bb0:	439a      	bics	r2, r3
10052bb2:	4291      	cmp	r1, r2
10052bb4:	9b01      	ldr	r3, [sp, #4]
10052bb6:	d003      	beq.n	10052bc0 <GAT_att_srv_run+0xd8>
10052bb8:	e02e      	b.n	10052c18 <GAT_att_srv_run+0x130>
10052bba:	4291      	cmp	r1, r2
10052bbc:	9b01      	ldr	r3, [sp, #4]
10052bbe:	d32b      	bcc.n	10052c18 <GAT_att_srv_run+0x130>
10052bc0:	1e41      	subs	r1, r0, #1
10052bc2:	2903      	cmp	r1, #3
10052bc4:	d301      	bcc.n	10052bca <GAT_att_srv_run+0xe2>
10052bc6:	2807      	cmp	r0, #7
10052bc8:	d10d      	bne.n	10052be6 <GAT_att_srv_run+0xfe>
10052bca:	a904      	add	r1, sp, #16
10052bcc:	aa03      	add	r2, sp, #12
10052bce:	9202      	str	r2, [sp, #8]
10052bd0:	4638      	mov	r0, r7
10052bd2:	460f      	mov	r7, r1
10052bd4:	f000 ff49 	bl	10053a6a <GAT_att_srv_get_handle_range>
10052bd8:	883b      	ldrh	r3, [r7, #0]
10052bda:	9802      	ldr	r0, [sp, #8]
10052bdc:	8800      	ldrh	r0, [r0, #0]
10052bde:	4283      	cmp	r3, r0
10052be0:	d818      	bhi.n	10052c14 <GAT_att_srv_run+0x12c>
10052be2:	2b00      	cmp	r3, #0
10052be4:	d016      	beq.n	10052c14 <GAT_att_srv_run+0x12c>
10052be6:	6866      	ldr	r6, [r4, #4]
10052be8:	4630      	mov	r0, r6
10052bea:	f7ff ff3e 	bl	10052a6a <GAT_att_cmn_get_opcode>
10052bee:	4607      	mov	r7, r0
10052bf0:	8835      	ldrh	r5, [r6, #0]
10052bf2:	4630      	mov	r0, r6
10052bf4:	f002 fe45 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10052bf8:	4601      	mov	r1, r0
10052bfa:	4628      	mov	r0, r5
10052bfc:	f7ff fd9a 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10052c00:	4605      	mov	r5, r0
10052c02:	2f1e      	cmp	r7, #30
10052c04:	d01d      	beq.n	10052c42 <GAT_att_srv_run+0x15a>
10052c06:	2040      	movs	r0, #64	@ 0x40
10052c08:	4038      	ands	r0, r7
10052c0a:	d11a      	bne.n	10052c42 <GAT_att_srv_run+0x15a>
10052c0c:	2f16      	cmp	r7, #22
10052c0e:	d11b      	bne.n	10052c48 <GAT_att_srv_run+0x160>
10052c10:	8871      	ldrh	r1, [r6, #2]
10052c12:	e026      	b.n	10052c62 <GAT_att_srv_run+0x17a>
10052c14:	2001      	movs	r0, #1
10052c16:	9002      	str	r0, [sp, #8]
10052c18:	2786      	movs	r7, #134	@ 0x86
10052c1a:	2e1e      	cmp	r6, #30
10052c1c:	d089      	beq.n	10052b32 <GAT_att_srv_run+0x4a>
10052c1e:	2040      	movs	r0, #64	@ 0x40
10052c20:	4030      	ands	r0, r6
10052c22:	d186      	bne.n	10052b32 <GAT_att_srv_run+0x4a>
10052c24:	9301      	str	r3, [sp, #4]
10052c26:	2105      	movs	r1, #5
10052c28:	4628      	mov	r0, r5
10052c2a:	f7ff fe81 	bl	10052930 <GAT_att_cmn_get_pckt>
10052c2e:	60e8      	str	r0, [r5, #12]
10052c30:	2800      	cmp	r0, #0
10052c32:	d01d      	beq.n	10052c70 <GAT_att_srv_run+0x188>
10052c34:	4603      	mov	r3, r0
10052c36:	4630      	mov	r0, r6
10052c38:	9901      	ldr	r1, [sp, #4]
10052c3a:	9a02      	ldr	r2, [sp, #8]
10052c3c:	f000 f9ca 	bl	10052fd4 <GAT_att_srv_write_err_packet>
10052c40:	e777      	b.n	10052b32 <GAT_att_srv_run+0x4a>
10052c42:	2000      	movs	r0, #0
10052c44:	60e8      	str	r0, [r5, #12]
10052c46:	e75d      	b.n	10052b04 <GAT_att_srv_run+0x1c>
10052c48:	4638      	mov	r0, r7
10052c4a:	f7ff ff13 	bl	10052a74 <GAT_att_srv_get_exec_fn_id_by_op>
10052c4e:	280e      	cmp	r0, #14
10052c50:	d900      	bls.n	10052c54 <GAT_att_srv_run+0x16c>
10052c52:	e76d      	b.n	10052b30 <GAT_att_srv_run+0x48>
10052c54:	0040      	lsls	r0, r0, #1
10052c56:	4909      	ldr	r1, [pc, #36]	@ (10052c7c <__arm_cp.4_2>)
10052c58:	5a09      	ldrh	r1, [r1, r0]
10052c5a:	88e8      	ldrh	r0, [r5, #6]
10052c5c:	4281      	cmp	r1, r0
10052c5e:	d300      	bcc.n	10052c62 <GAT_att_srv_run+0x17a>
10052c60:	4601      	mov	r1, r0
10052c62:	4628      	mov	r0, r5
10052c64:	f7ff fe64 	bl	10052930 <GAT_att_cmn_get_pckt>
10052c68:	60e8      	str	r0, [r5, #12]
10052c6a:	2800      	cmp	r0, #0
10052c6c:	d000      	beq.n	10052c70 <GAT_att_srv_run+0x188>
10052c6e:	e749      	b.n	10052b04 <GAT_att_srv_run+0x1c>
10052c70:	2788      	movs	r7, #136	@ 0x88
10052c72:	e75e      	b.n	10052b32 <GAT_att_srv_run+0x4a>

10052c74 <__arm_cp.4_0>:
10052c74:	1006e91c 	.word	0x1006e91c

10052c78 <__arm_cp.4_1>:
10052c78:	00004fcc 	.word	0x00004fcc

10052c7c <__arm_cp.4_2>:
10052c7c:	1006e93a 	.word	0x1006e93a

10052c80 <__arm_cp.4_3>:
10052c80:	2000084c 	.word	0x2000084c

10052c84 <__arm_cp.4_4>:
10052c84:	20000848 	.word	0x20000848

10052c88 <GAT_att_srv_connection>:
10052c88:	b580      	push	{r7, lr}
10052c8a:	f000 ff95 	bl	10053bb8 <GAT_srv_connection>
10052c8e:	bd80      	pop	{r7, pc}

10052c90 <GAT_att_srv_bearer_close>:
10052c90:	b570      	push	{r4, r5, r6, lr}
10052c92:	460c      	mov	r4, r1
10052c94:	4605      	mov	r5, r0
10052c96:	f001 f835 	bl	10053d04 <GAT_srv_bearer_close>
10052c9a:	4e07      	ldr	r6, [pc, #28]	@ (10052cb8 <__arm_cp.6_0>)
10052c9c:	6832      	ldr	r2, [r6, #0]
10052c9e:	3240      	adds	r2, #64	@ 0x40
10052ca0:	4628      	mov	r0, r5
10052ca2:	4621      	mov	r1, r4
10052ca4:	f000 f80a 	bl	10052cbc <GAT_att_srv_flush_rx_pckts>
10052ca8:	6832      	ldr	r2, [r6, #0]
10052caa:	3238      	adds	r2, #56	@ 0x38
10052cac:	4628      	mov	r0, r5
10052cae:	4621      	mov	r1, r4
10052cb0:	f000 f804 	bl	10052cbc <GAT_att_srv_flush_rx_pckts>
10052cb4:	bd70      	pop	{r4, r5, r6, pc}
10052cb6:	46c0      	nop			@ (mov r8, r8)

10052cb8 <__arm_cp.6_0>:
10052cb8:	20000848 	.word	0x20000848

10052cbc <GAT_att_srv_flush_rx_pckts>:
10052cbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10052cbe:	460d      	mov	r5, r1
10052cc0:	4606      	mov	r6, r0
10052cc2:	9200      	str	r2, [sp, #0]
10052cc4:	6814      	ldr	r4, [r2, #0]
10052cc6:	2c00      	cmp	r4, #0
10052cc8:	d011      	beq.n	10052cee <GAT_att_srv_flush_rx_pckts+0x32>
10052cca:	4627      	mov	r7, r4
10052ccc:	69e4      	ldr	r4, [r4, #28]
10052cce:	8838      	ldrh	r0, [r7, #0]
10052cd0:	42b0      	cmp	r0, r6
10052cd2:	d1f8      	bne.n	10052cc6 <GAT_att_srv_flush_rx_pckts+0xa>
10052cd4:	4638      	mov	r0, r7
10052cd6:	f002 fdd4 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10052cda:	42a8      	cmp	r0, r5
10052cdc:	d1f3      	bne.n	10052cc6 <GAT_att_srv_flush_rx_pckts+0xa>
10052cde:	9800      	ldr	r0, [sp, #0]
10052ce0:	4639      	mov	r1, r7
10052ce2:	f012 fcab 	bl	1006563c <ACL_list_remove>
10052ce6:	4638      	mov	r0, r7
10052ce8:	f7fd f958 	bl	1004ff9c <ACL_pkt_release>
10052cec:	e7eb      	b.n	10052cc6 <GAT_att_srv_flush_rx_pckts+0xa>
10052cee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10052cf0 <GAT_att_srv_process_rx_pckt_tsk>:
10052cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
10052cf2:	b085      	sub	sp, #20
10052cf4:	4f0f      	ldr	r7, [pc, #60]	@ (10052d34 <__arm_cp.9_0>)
10052cf6:	6838      	ldr	r0, [r7, #0]
10052cf8:	3040      	adds	r0, #64	@ 0x40
10052cfa:	f012 fcbf 	bl	1006567c <ACL_list_get_pckt_count>
10052cfe:	4604      	mov	r4, r0
10052d00:	0420      	lsls	r0, r4, #16
10052d02:	d014      	beq.n	10052d2e <GAT_att_srv_process_rx_pckt_tsk+0x3e>
10052d04:	466d      	mov	r5, sp
10052d06:	2000      	movs	r0, #0
10052d08:	7028      	strb	r0, [r5, #0]
10052d0a:	6838      	ldr	r0, [r7, #0]
10052d0c:	3040      	adds	r0, #64	@ 0x40
10052d0e:	f012 fcab 	bl	10065668 <ACL_list_remove_head>
10052d12:	9001      	str	r0, [sp, #4]
10052d14:	8806      	ldrh	r6, [r0, #0]
10052d16:	f002 fdb4 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10052d1a:	4601      	mov	r1, r0
10052d1c:	4630      	mov	r0, r6
10052d1e:	f7ff fd09 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10052d22:	9002      	str	r0, [sp, #8]
10052d24:	4628      	mov	r0, r5
10052d26:	f7ff fedf 	bl	10052ae8 <GAT_att_srv_run>
10052d2a:	1e64      	subs	r4, r4, #1
10052d2c:	e7e8      	b.n	10052d00 <GAT_att_srv_process_rx_pckt_tsk+0x10>
10052d2e:	b005      	add	sp, #20
10052d30:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052d32:	46c0      	nop			@ (mov r8, r8)

10052d34 <__arm_cp.9_0>:
10052d34:	20000848 	.word	0x20000848

10052d38 <GAT_att_srv_hvtx>:
10052d38:	b5f0      	push	{r4, r5, r6, r7, lr}
10052d3a:	b08b      	sub	sp, #44	@ 0x2c
10052d3c:	930a      	str	r3, [sp, #40]	@ 0x28
10052d3e:	4614      	mov	r4, r2
10052d40:	460d      	mov	r5, r1
10052d42:	4607      	mov	r7, r0
10052d44:	f7ff fcf6 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10052d48:	2800      	cmp	r0, #0
10052d4a:	d011      	beq.n	10052d70 <GAT_att_srv_hvtx+0x38>
10052d4c:	4606      	mov	r6, r0
10052d4e:	9704      	str	r7, [sp, #16]
10052d50:	8880      	ldrh	r0, [r0, #4]
10052d52:	270c      	movs	r7, #12
10052d54:	0741      	lsls	r1, r0, #29
10052d56:	d47f      	bmi.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052d58:	2c02      	cmp	r4, #2
10052d5a:	d101      	bne.n	10052d60 <GAT_att_srv_hvtx+0x28>
10052d5c:	0780      	lsls	r0, r0, #30
10052d5e:	d47b      	bmi.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052d60:	9502      	str	r5, [sp, #8]
10052d62:	9403      	str	r4, [sp, #12]
10052d64:	9c10      	ldr	r4, [sp, #64]	@ 0x40
10052d66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10052d68:	2b01      	cmp	r3, #1
10052d6a:	d803      	bhi.n	10052d74 <GAT_att_srv_hvtx+0x3c>
10052d6c:	2503      	movs	r5, #3
10052d6e:	e003      	b.n	10052d78 <GAT_att_srv_hvtx+0x40>
10052d70:	2712      	movs	r7, #18
10052d72:	e071      	b.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052d74:	0098      	lsls	r0, r3, #2
10052d76:	1c45      	adds	r5, r0, #1
10052d78:	1ca0      	adds	r0, r4, #2
10052d7a:	4619      	mov	r1, r3
10052d7c:	2900      	cmp	r1, #0
10052d7e:	d004      	beq.n	10052d8a <GAT_att_srv_hvtx+0x52>
10052d80:	8802      	ldrh	r2, [r0, #0]
10052d82:	1955      	adds	r5, r2, r5
10052d84:	3008      	adds	r0, #8
10052d86:	1e49      	subs	r1, r1, #1
10052d88:	e7f8      	b.n	10052d7c <GAT_att_srv_hvtx+0x44>
10052d8a:	88f0      	ldrh	r0, [r6, #6]
10052d8c:	2b02      	cmp	r3, #2
10052d8e:	d302      	bcc.n	10052d96 <GAT_att_srv_hvtx+0x5e>
10052d90:	b2a9      	uxth	r1, r5
10052d92:	4281      	cmp	r1, r0
10052d94:	d860      	bhi.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052d96:	b2a9      	uxth	r1, r5
10052d98:	4281      	cmp	r1, r0
10052d9a:	d300      	bcc.n	10052d9e <GAT_att_srv_hvtx+0x66>
10052d9c:	4605      	mov	r5, r0
10052d9e:	b2a9      	uxth	r1, r5
10052da0:	4630      	mov	r0, r6
10052da2:	9106      	str	r1, [sp, #24]
10052da4:	f7ff fdc4 	bl	10052930 <GAT_att_cmn_get_pckt>
10052da8:	2800      	cmp	r0, #0
10052daa:	d00e      	beq.n	10052dca <GAT_att_srv_hvtx+0x92>
10052dac:	4607      	mov	r7, r0
10052dae:	9803      	ldr	r0, [sp, #12]
10052db0:	2802      	cmp	r0, #2
10052db2:	9707      	str	r7, [sp, #28]
10052db4:	9601      	str	r6, [sp, #4]
10052db6:	d10f      	bne.n	10052dd8 <GAT_att_srv_hvtx+0xa0>
10052db8:	89b9      	ldrh	r1, [r7, #12]
10052dba:	221d      	movs	r2, #29
10052dbc:	4638      	mov	r0, r7
10052dbe:	f000 f889 	bl	10052ed4 <ACL_pkt_write_8b>
10052dc2:	980a      	ldr	r0, [sp, #40]	@ 0x28
10052dc4:	2801      	cmp	r0, #1
10052dc6:	d00f      	beq.n	10052de8 <GAT_att_srv_hvtx+0xb0>
10052dc8:	e04e      	b.n	10052e68 <GAT_att_srv_hvtx+0x130>
10052dca:	2008      	movs	r0, #8
10052dcc:	f012 fa30 	bl	10065230 <tsk_notify_idx>
10052dd0:	f7ef fd81 	bl	100428d6 <BLE_STACK_ProcessRequest>
10052dd4:	2788      	movs	r7, #136	@ 0x88
10052dd6:	e03f      	b.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052dd8:	89b9      	ldrh	r1, [r7, #12]
10052dda:	980a      	ldr	r0, [sp, #40]	@ 0x28
10052ddc:	2801      	cmp	r0, #1
10052dde:	d13e      	bne.n	10052e5e <GAT_att_srv_hvtx+0x126>
10052de0:	221b      	movs	r2, #27
10052de2:	4638      	mov	r0, r7
10052de4:	f000 f876 	bl	10052ed4 <ACL_pkt_write_8b>
10052de8:	8822      	ldrh	r2, [r4, #0]
10052dea:	89b8      	ldrh	r0, [r7, #12]
10052dec:	1c40      	adds	r0, r0, #1
10052dee:	b281      	uxth	r1, r0
10052df0:	4638      	mov	r0, r7
10052df2:	f7fd f908 	bl	10050006 <ACL_pkt_write_16b>
10052df6:	6863      	ldr	r3, [r4, #4]
10052df8:	89b8      	ldrh	r0, [r7, #12]
10052dfa:	1ee9      	subs	r1, r5, #3
10052dfc:	b28a      	uxth	r2, r1
10052dfe:	1cc0      	adds	r0, r0, #3
10052e00:	b281      	uxth	r1, r0
10052e02:	4638      	mov	r0, r7
10052e04:	f7fd f908 	bl	10050018 <ACL_pkt_write>
10052e08:	9807      	ldr	r0, [sp, #28]
10052e0a:	8045      	strh	r5, [r0, #2]
10052e0c:	9d03      	ldr	r5, [sp, #12]
10052e0e:	2d02      	cmp	r5, #2
10052e10:	d10c      	bne.n	10052e2c <GAT_att_srv_hvtx+0xf4>
10052e12:	2001      	movs	r0, #1
10052e14:	9904      	ldr	r1, [sp, #16]
10052e16:	9a02      	ldr	r2, [sp, #8]
10052e18:	f7ff fd48 	bl	100528ac <GAT_att_cmn_start_timer>
10052e1c:	2800      	cmp	r0, #0
10052e1e:	9c01      	ldr	r4, [sp, #4]
10052e20:	d00c      	beq.n	10052e3c <GAT_att_srv_hvtx+0x104>
10052e22:	4607      	mov	r7, r0
10052e24:	9807      	ldr	r0, [sp, #28]
10052e26:	f7fd f8b9 	bl	1004ff9c <ACL_pkt_release>
10052e2a:	e015      	b.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052e2c:	07e8      	lsls	r0, r5, #31
10052e2e:	9c01      	ldr	r4, [sp, #4]
10052e30:	d004      	beq.n	10052e3c <GAT_att_srv_hvtx+0x104>
10052e32:	9a07      	ldr	r2, [sp, #28]
10052e34:	7a10      	ldrb	r0, [r2, #8]
10052e36:	2108      	movs	r1, #8
10052e38:	4301      	orrs	r1, r0
10052e3a:	7211      	strb	r1, [r2, #8]
10052e3c:	9802      	ldr	r0, [sp, #8]
10052e3e:	9907      	ldr	r1, [sp, #28]
10052e40:	f7ff fcfa 	bl	10052838 <GAT_att_cmn_send>
10052e44:	4607      	mov	r7, r0
10052e46:	2d02      	cmp	r5, #2
10052e48:	d106      	bne.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052e4a:	2f00      	cmp	r7, #0
10052e4c:	d104      	bne.n	10052e58 <GAT_att_srv_hvtx+0x120>
10052e4e:	88a0      	ldrh	r0, [r4, #4]
10052e50:	2102      	movs	r1, #2
10052e52:	4301      	orrs	r1, r0
10052e54:	80a1      	strh	r1, [r4, #4]
10052e56:	2700      	movs	r7, #0
10052e58:	4638      	mov	r0, r7
10052e5a:	b00b      	add	sp, #44	@ 0x2c
10052e5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10052e5e:	2223      	movs	r2, #35	@ 0x23
10052e60:	4638      	mov	r0, r7
10052e62:	f000 f837 	bl	10052ed4 <ACL_pkt_write_8b>
10052e66:	980a      	ldr	r0, [sp, #40]	@ 0x28
10052e68:	1ca7      	adds	r7, r4, #2
10052e6a:	2101      	movs	r1, #1
10052e6c:	9505      	str	r5, [sp, #20]
10052e6e:	2800      	cmp	r0, #0
10052e70:	d0ca      	beq.n	10052e08 <GAT_att_srv_hvtx+0xd0>
10052e72:	900a      	str	r0, [sp, #40]	@ 0x28
10052e74:	9d07      	ldr	r5, [sp, #28]
10052e76:	89a8      	ldrh	r0, [r5, #12]
10052e78:	1840      	adds	r0, r0, r1
10052e7a:	9108      	str	r1, [sp, #32]
10052e7c:	b281      	uxth	r1, r0
10052e7e:	1ebb      	subs	r3, r7, #2
10052e80:	2402      	movs	r4, #2
10052e82:	4628      	mov	r0, r5
10052e84:	4622      	mov	r2, r4
10052e86:	4e12      	ldr	r6, [pc, #72]	@ (10052ed0 <__arm_cp.10_0>)
10052e88:	47b0      	blx	r6
10052e8a:	89a8      	ldrh	r0, [r5, #12]
10052e8c:	9e08      	ldr	r6, [sp, #32]
10052e8e:	1830      	adds	r0, r6, r0
10052e90:	1c80      	adds	r0, r0, #2
10052e92:	b281      	uxth	r1, r0
10052e94:	4628      	mov	r0, r5
10052e96:	9409      	str	r4, [sp, #36]	@ 0x24
10052e98:	4622      	mov	r2, r4
10052e9a:	463b      	mov	r3, r7
10052e9c:	4c0c      	ldr	r4, [pc, #48]	@ (10052ed0 <__arm_cp.10_0>)
10052e9e:	47a0      	blx	r4
10052ea0:	1d31      	adds	r1, r6, #4
10052ea2:	89a8      	ldrh	r0, [r5, #12]
10052ea4:	1840      	adds	r0, r0, r1
10052ea6:	b28e      	uxth	r6, r1
10052ea8:	9906      	ldr	r1, [sp, #24]
10052eaa:	1b8a      	subs	r2, r1, r6
10052eac:	8839      	ldrh	r1, [r7, #0]
10052eae:	428a      	cmp	r2, r1
10052eb0:	db00      	blt.n	10052eb4 <GAT_att_srv_hvtx+0x17c>
10052eb2:	460a      	mov	r2, r1
10052eb4:	9909      	ldr	r1, [sp, #36]	@ 0x24
10052eb6:	587b      	ldr	r3, [r7, r1]
10052eb8:	b281      	uxth	r1, r0
10052eba:	b294      	uxth	r4, r2
10052ebc:	4628      	mov	r0, r5
10052ebe:	4622      	mov	r2, r4
10052ec0:	4d03      	ldr	r5, [pc, #12]	@ (10052ed0 <__arm_cp.10_0>)
10052ec2:	47a8      	blx	r5
10052ec4:	19a1      	adds	r1, r4, r6
10052ec6:	3708      	adds	r7, #8
10052ec8:	980a      	ldr	r0, [sp, #40]	@ 0x28
10052eca:	1e40      	subs	r0, r0, #1
10052ecc:	9d05      	ldr	r5, [sp, #20]
10052ece:	e7ce      	b.n	10052e6e <GAT_att_srv_hvtx+0x136>

10052ed0 <__arm_cp.10_0>:
10052ed0:	10050019 	.word	0x10050019

10052ed4 <ACL_pkt_write_8b>:
10052ed4:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10052ed6:	4614      	mov	r4, r2
10052ed8:	6840      	ldr	r0, [r0, #4]
10052eda:	2920      	cmp	r1, #32
10052edc:	d304      	bcc.n	10052ee8 <ACL_pkt_write_8b+0x14>
10052ede:	ad01      	add	r5, sp, #4
10052ee0:	462a      	mov	r2, r5
10052ee2:	f010 f846 	bl	10062f72 <Mem_Buff_get_buff_off>
10052ee6:	8829      	ldrh	r1, [r5, #0]
10052ee8:	1840      	adds	r0, r0, r1
10052eea:	7104      	strb	r4, [r0, #4]
10052eec:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10052eee <GAT_att_srv_extract_write_packet_data>:
10052eee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10052ef0:	461d      	mov	r5, r3
10052ef2:	4614      	mov	r4, r2
10052ef4:	460f      	mov	r7, r1
10052ef6:	4606      	mov	r6, r0
10052ef8:	f7ff fdb7 	bl	10052a6a <GAT_att_cmn_get_opcode>
10052efc:	210e      	movs	r1, #14
10052efe:	43c9      	mvns	r1, r1
10052f00:	28d2      	cmp	r0, #210	@ 0xd2
10052f02:	d000      	beq.n	10052f06 <GAT_att_srv_extract_write_packet_data+0x18>
10052f04:	310c      	adds	r1, #12
10052f06:	8870      	ldrh	r0, [r6, #2]
10052f08:	1808      	adds	r0, r1, r0
10052f0a:	b282      	uxth	r2, r0
10052f0c:	9906      	ldr	r1, [sp, #24]
10052f0e:	42ba      	cmp	r2, r7
10052f10:	d905      	bls.n	10052f1e <GAT_att_srv_extract_write_packet_data+0x30>
10052f12:	200d      	movs	r0, #13
10052f14:	7008      	strb	r0, [r1, #0]
10052f16:	2000      	movs	r0, #0
10052f18:	8028      	strh	r0, [r5, #0]
10052f1a:	2786      	movs	r7, #134	@ 0x86
10052f1c:	e009      	b.n	10052f32 <GAT_att_srv_extract_write_packet_data+0x44>
10052f1e:	2700      	movs	r7, #0
10052f20:	700f      	strb	r7, [r1, #0]
10052f22:	8028      	strh	r0, [r5, #0]
10052f24:	89b0      	ldrh	r0, [r6, #12]
10052f26:	1cc0      	adds	r0, r0, #3
10052f28:	b281      	uxth	r1, r0
10052f2a:	4630      	mov	r0, r6
10052f2c:	4623      	mov	r3, r4
10052f2e:	f7fd f851 	bl	1004ffd4 <ACL_pkt_read>
10052f32:	4638      	mov	r0, r7
10052f34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

10052f38 <GAT_att_srv_resp>:
10052f38:	b5f0      	push	{r4, r5, r6, r7, lr}
10052f3a:	b089      	sub	sp, #36	@ 0x24
10052f3c:	9303      	str	r3, [sp, #12]
10052f3e:	4617      	mov	r7, r2
10052f40:	460e      	mov	r6, r1
10052f42:	4605      	mov	r5, r0
10052f44:	f7ff fbf6 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10052f48:	2800      	cmp	r0, #0
10052f4a:	d03f      	beq.n	10052fcc <GAT_att_srv_resp+0x94>
10052f4c:	4604      	mov	r4, r0
10052f4e:	68c0      	ldr	r0, [r0, #12]
10052f50:	2800      	cmp	r0, #0
10052f52:	d03b      	beq.n	10052fcc <GAT_att_srv_resp+0x94>
10052f54:	9702      	str	r7, [sp, #8]
10052f56:	980f      	ldr	r0, [sp, #60]	@ 0x3c
10052f58:	9001      	str	r0, [sp, #4]
10052f5a:	980e      	ldr	r0, [sp, #56]	@ 0x38
10052f5c:	9000      	str	r0, [sp, #0]
10052f5e:	481c      	ldr	r0, [pc, #112]	@ (10052fd0 <__arm_cp.13_0>)
10052f60:	6807      	ldr	r7, [r0, #0]
10052f62:	3738      	adds	r7, #56	@ 0x38
10052f64:	683f      	ldr	r7, [r7, #0]
10052f66:	2f00      	cmp	r7, #0
10052f68:	d00f      	beq.n	10052f8a <GAT_att_srv_resp+0x52>
10052f6a:	8838      	ldrh	r0, [r7, #0]
10052f6c:	42a8      	cmp	r0, r5
10052f6e:	d104      	bne.n	10052f7a <GAT_att_srv_resp+0x42>
10052f70:	4638      	mov	r0, r7
10052f72:	f002 fc86 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10052f76:	42b0      	cmp	r0, r6
10052f78:	d001      	beq.n	10052f7e <GAT_att_srv_resp+0x46>
10052f7a:	371c      	adds	r7, #28
10052f7c:	e7f2      	b.n	10052f64 <GAT_att_srv_resp+0x2c>
10052f7e:	4814      	ldr	r0, [pc, #80]	@ (10052fd0 <__arm_cp.13_0>)
10052f80:	6800      	ldr	r0, [r0, #0]
10052f82:	3038      	adds	r0, #56	@ 0x38
10052f84:	4639      	mov	r1, r7
10052f86:	f012 fb59 	bl	1006563c <ACL_list_remove>
10052f8a:	68e0      	ldr	r0, [r4, #12]
10052f8c:	f7ff fd6d 	bl	10052a6a <GAT_att_cmn_get_opcode>
10052f90:	1e41      	subs	r1, r0, #1
10052f92:	9a03      	ldr	r2, [sp, #12]
10052f94:	2a00      	cmp	r2, #0
10052f96:	d00d      	beq.n	10052fb4 <GAT_att_srv_resp+0x7c>
10052f98:	68e3      	ldr	r3, [r4, #12]
10052f9a:	b2c8      	uxtb	r0, r1
10052f9c:	9902      	ldr	r1, [sp, #8]
10052f9e:	f000 f819 	bl	10052fd4 <GAT_att_srv_write_err_packet>
10052fa2:	4620      	mov	r0, r4
10052fa4:	f000 f82f 	bl	10053006 <GAT_att_srv_send_response>
10052fa8:	2f00      	cmp	r7, #0
10052faa:	d00f      	beq.n	10052fcc <GAT_att_srv_resp+0x94>
10052fac:	4638      	mov	r0, r7
10052fae:	f7fc fff5 	bl	1004ff9c <ACL_pkt_release>
10052fb2:	e00b      	b.n	10052fcc <GAT_att_srv_resp+0x94>
10052fb4:	a804      	add	r0, sp, #16
10052fb6:	9a00      	ldr	r2, [sp, #0]
10052fb8:	8182      	strh	r2, [r0, #12]
10052fba:	7041      	strb	r1, [r0, #1]
10052fbc:	2101      	movs	r1, #1
10052fbe:	7001      	strb	r1, [r0, #0]
10052fc0:	9901      	ldr	r1, [sp, #4]
10052fc2:	9108      	str	r1, [sp, #32]
10052fc4:	9406      	str	r4, [sp, #24]
10052fc6:	9705      	str	r7, [sp, #20]
10052fc8:	f7ff fd8e 	bl	10052ae8 <GAT_att_srv_run>
10052fcc:	b009      	add	sp, #36	@ 0x24
10052fce:	bdf0      	pop	{r4, r5, r6, r7, pc}

10052fd0 <__arm_cp.13_0>:
10052fd0:	20000848 	.word	0x20000848

10052fd4 <GAT_att_srv_write_err_packet>:
10052fd4:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10052fd6:	281e      	cmp	r0, #30
10052fd8:	d014      	beq.n	10053004 <GAT_att_srv_write_err_packet+0x30>
10052fda:	461c      	mov	r4, r3
10052fdc:	2340      	movs	r3, #64	@ 0x40
10052fde:	4003      	ands	r3, r0
10052fe0:	d110      	bne.n	10053004 <GAT_att_srv_write_err_packet+0x30>
10052fe2:	2c00      	cmp	r4, #0
10052fe4:	d00e      	beq.n	10053004 <GAT_att_srv_write_err_packet+0x30>
10052fe6:	466b      	mov	r3, sp
10052fe8:	7099      	strb	r1, [r3, #2]
10052fea:	7058      	strb	r0, [r3, #1]
10052fec:	2001      	movs	r0, #1
10052fee:	7018      	strb	r0, [r3, #0]
10052ff0:	711a      	strb	r2, [r3, #4]
10052ff2:	0a08      	lsrs	r0, r1, #8
10052ff4:	70d8      	strb	r0, [r3, #3]
10052ff6:	89a1      	ldrh	r1, [r4, #12]
10052ff8:	2505      	movs	r5, #5
10052ffa:	4620      	mov	r0, r4
10052ffc:	462a      	mov	r2, r5
10052ffe:	f7fd f80b 	bl	10050018 <ACL_pkt_write>
10053002:	8065      	strh	r5, [r4, #2]
10053004:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10053006 <GAT_att_srv_send_response>:
10053006:	b510      	push	{r4, lr}
10053008:	4604      	mov	r4, r0
1005300a:	68c0      	ldr	r0, [r0, #12]
1005300c:	2800      	cmp	r0, #0
1005300e:	d015      	beq.n	1005303c <GAT_att_srv_send_response+0x36>
10053010:	8841      	ldrh	r1, [r0, #2]
10053012:	1d09      	adds	r1, r1, #4
10053014:	b289      	uxth	r1, r1
10053016:	f7fc ffca 	bl	1004ffae <ACL_pkt_resize>
1005301a:	68e1      	ldr	r1, [r4, #12]
1005301c:	8960      	ldrh	r0, [r4, #10]
1005301e:	f7ff fc0b 	bl	10052838 <GAT_att_cmn_send>
10053022:	2800      	cmp	r0, #0
10053024:	d108      	bne.n	10053038 <GAT_att_srv_send_response+0x32>
10053026:	8962      	ldrh	r2, [r4, #10]
10053028:	8921      	ldrh	r1, [r4, #8]
1005302a:	2000      	movs	r0, #0
1005302c:	f7ff fbf4 	bl	10052818 <GAT_att_cmn_stop_timer>
10053030:	88a0      	ldrh	r0, [r4, #4]
10053032:	2101      	movs	r1, #1
10053034:	4388      	bics	r0, r1
10053036:	80a0      	strh	r0, [r4, #4]
10053038:	2000      	movs	r0, #0
1005303a:	60e0      	str	r0, [r4, #12]
1005303c:	bd10      	pop	{r4, pc}
	...

10053040 <GAT_att_srv_confirmation_pending>:
10053040:	b5e0      	push	{r5, r6, r7, lr}
10053042:	a801      	add	r0, sp, #4
10053044:	2102      	movs	r1, #2
10053046:	8001      	strh	r1, [r0, #0]
10053048:	9000      	str	r0, [sp, #0]
1005304a:	2000      	movs	r0, #0
1005304c:	4b04      	ldr	r3, [pc, #16]	@ (10053060 <__arm_cp.16_0>)
1005304e:	4601      	mov	r1, r0
10053050:	4602      	mov	r2, r0
10053052:	f7ff fab1 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
10053056:	3886      	subs	r0, #134	@ 0x86
10053058:	4241      	negs	r1, r0
1005305a:	4148      	adcs	r0, r1
1005305c:	bd8c      	pop	{r2, r3, r7, pc}
1005305e:	46c0      	nop			@ (mov r8, r8)

10053060 <__arm_cp.16_0>:
10053060:	10052865 	.word	0x10052865

10053064 <GAT_att_srv_request_user_pending>:
10053064:	b510      	push	{r4, lr}
10053066:	480a      	ldr	r0, [pc, #40]	@ (10053090 <__arm_cp.17_0>)
10053068:	6804      	ldr	r4, [r0, #0]
1005306a:	3438      	adds	r4, #56	@ 0x38
1005306c:	6824      	ldr	r4, [r4, #0]
1005306e:	2c00      	cmp	r4, #0
10053070:	d009      	beq.n	10053086 <GAT_att_srv_request_user_pending+0x22>
10053072:	4620      	mov	r0, r4
10053074:	f7ff fcf9 	bl	10052a6a <GAT_att_cmn_get_opcode>
10053078:	281e      	cmp	r0, #30
1005307a:	d002      	beq.n	10053082 <GAT_att_srv_request_user_pending+0x1e>
1005307c:	2140      	movs	r1, #64	@ 0x40
1005307e:	4008      	ands	r0, r1
10053080:	d003      	beq.n	1005308a <GAT_att_srv_request_user_pending+0x26>
10053082:	341c      	adds	r4, #28
10053084:	e7f2      	b.n	1005306c <GAT_att_srv_request_user_pending+0x8>
10053086:	2000      	movs	r0, #0
10053088:	bd10      	pop	{r4, pc}
1005308a:	2001      	movs	r0, #1
1005308c:	bd10      	pop	{r4, pc}
1005308e:	46c0      	nop			@ (mov r8, r8)

10053090 <__arm_cp.17_0>:
10053090:	20000848 	.word	0x20000848

10053094 <GAT_att_srv_flush_user_pending_list>:
10053094:	b570      	push	{r4, r5, r6, lr}
10053096:	4d08      	ldr	r5, [pc, #32]	@ (100530b8 <__arm_cp.18_0>)
10053098:	6828      	ldr	r0, [r5, #0]
1005309a:	6b84      	ldr	r4, [r0, #56]	@ 0x38
1005309c:	2c00      	cmp	r4, #0
1005309e:	d00a      	beq.n	100530b6 <GAT_att_srv_flush_user_pending_list+0x22>
100530a0:	69e6      	ldr	r6, [r4, #28]
100530a2:	6828      	ldr	r0, [r5, #0]
100530a4:	3038      	adds	r0, #56	@ 0x38
100530a6:	4621      	mov	r1, r4
100530a8:	f012 fac8 	bl	1006563c <ACL_list_remove>
100530ac:	4620      	mov	r0, r4
100530ae:	f7fc ff75 	bl	1004ff9c <ACL_pkt_release>
100530b2:	4634      	mov	r4, r6
100530b4:	e7f2      	b.n	1005309c <GAT_att_srv_flush_user_pending_list+0x8>
100530b6:	bd70      	pop	{r4, r5, r6, pc}

100530b8 <__arm_cp.18_0>:
100530b8:	20000848 	.word	0x20000848

100530bc <GAT_att_srv_exchange_mtu_exc>:
100530bc:	b57c      	push	{r2, r3, r4, r5, r6, lr}
100530be:	4604      	mov	r4, r0
100530c0:	6880      	ldr	r0, [r0, #8]
100530c2:	8941      	ldrh	r1, [r0, #10]
100530c4:	2904      	cmp	r1, #4
100530c6:	d11a      	bne.n	100530fe <GAT_att_srv_exchange_mtu_exc+0x42>
100530c8:	6860      	ldr	r0, [r4, #4]
100530ca:	8981      	ldrh	r1, [r0, #12]
100530cc:	1c49      	adds	r1, r1, #1
100530ce:	b289      	uxth	r1, r1
100530d0:	f7fc ff89 	bl	1004ffe6 <ACL_pkt_read_16b>
100530d4:	4605      	mov	r5, r0
100530d6:	2817      	cmp	r0, #23
100530d8:	d800      	bhi.n	100530dc <GAT_att_srv_exchange_mtu_exc+0x20>
100530da:	2517      	movs	r5, #23
100530dc:	4e1d      	ldr	r6, [pc, #116]	@ (10053154 <__arm_cp.19_0>)
100530de:	8a30      	ldrh	r0, [r6, #16]
100530e0:	4285      	cmp	r5, r0
100530e2:	d300      	bcc.n	100530e6 <GAT_att_srv_exchange_mtu_exc+0x2a>
100530e4:	4605      	mov	r5, r0
100530e6:	68a3      	ldr	r3, [r4, #8]
100530e8:	8898      	ldrh	r0, [r3, #4]
100530ea:	0700      	lsls	r0, r0, #28
100530ec:	d40f      	bmi.n	1005310e <GAT_att_srv_exchange_mtu_exc+0x52>
100530ee:	8919      	ldrh	r1, [r3, #8]
100530f0:	2002      	movs	r0, #2
100530f2:	462a      	mov	r2, r5
100530f4:	f013 f976 	bl	100663e4 <aci_att_exchange_mtu_resp_event_push_noinline>
100530f8:	2800      	cmp	r0, #0
100530fa:	d014      	beq.n	10053126 <GAT_att_srv_exchange_mtu_exc+0x6a>
100530fc:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
100530fe:	68c3      	ldr	r3, [r0, #12]
10053100:	2002      	movs	r0, #2
10053102:	2100      	movs	r1, #0
10053104:	2206      	movs	r2, #6
10053106:	f7ff ff65 	bl	10052fd4 <GAT_att_srv_write_err_packet>
1005310a:	2086      	movs	r0, #134	@ 0x86
1005310c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005310e:	88d8      	ldrh	r0, [r3, #6]
10053110:	42a8      	cmp	r0, r5
10053112:	d00e      	beq.n	10053132 <GAT_att_srv_exchange_mtu_exc+0x76>
10053114:	3308      	adds	r3, #8
10053116:	2042      	movs	r0, #66	@ 0x42
10053118:	2103      	movs	r1, #3
1005311a:	2202      	movs	r2, #2
1005311c:	f013 fd7c 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
10053120:	2800      	cmp	r0, #0
10053122:	d1eb      	bne.n	100530fc <GAT_att_srv_exchange_mtu_exc+0x40>
10053124:	e005      	b.n	10053132 <GAT_att_srv_exchange_mtu_exc+0x76>
10053126:	68a0      	ldr	r0, [r4, #8]
10053128:	80c5      	strh	r5, [r0, #6]
1005312a:	8881      	ldrh	r1, [r0, #4]
1005312c:	2208      	movs	r2, #8
1005312e:	430a      	orrs	r2, r1
10053130:	8082      	strh	r2, [r0, #4]
10053132:	8a30      	ldrh	r0, [r6, #16]
10053134:	ab01      	add	r3, sp, #4
10053136:	7058      	strb	r0, [r3, #1]
10053138:	2503      	movs	r5, #3
1005313a:	701d      	strb	r5, [r3, #0]
1005313c:	0a00      	lsrs	r0, r0, #8
1005313e:	7098      	strb	r0, [r3, #2]
10053140:	68a0      	ldr	r0, [r4, #8]
10053142:	68c4      	ldr	r4, [r0, #12]
10053144:	89a1      	ldrh	r1, [r4, #12]
10053146:	4620      	mov	r0, r4
10053148:	462a      	mov	r2, r5
1005314a:	f7fc ff65 	bl	10050018 <ACL_pkt_write>
1005314e:	8065      	strh	r5, [r4, #2]
10053150:	2000      	movs	r0, #0
10053152:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10053154 <__arm_cp.19_0>:
10053154:	200008a8 	.word	0x200008a8

10053158 <GAT_att_srv_find_info_exc>:
10053158:	b5f0      	push	{r4, r5, r6, r7, lr}
1005315a:	b08f      	sub	sp, #60	@ 0x3c
1005315c:	4601      	mov	r1, r0
1005315e:	6840      	ldr	r0, [r0, #4]
10053160:	9101      	str	r1, [sp, #4]
10053162:	6889      	ldr	r1, [r1, #8]
10053164:	68cf      	ldr	r7, [r1, #12]
10053166:	ad0d      	add	r5, sp, #52	@ 0x34
10053168:	ac0e      	add	r4, sp, #56	@ 0x38
1005316a:	4629      	mov	r1, r5
1005316c:	4622      	mov	r2, r4
1005316e:	f000 fc7c 	bl	10053a6a <GAT_att_srv_get_handle_range>
10053172:	8828      	ldrh	r0, [r5, #0]
10053174:	9007      	str	r0, [sp, #28]
10053176:	f014 fa43 	bl	10067600 <GAT_att_db_find_from_handle>
1005317a:	4602      	mov	r2, r0
1005317c:	8820      	ldrh	r0, [r4, #0]
1005317e:	9002      	str	r0, [sp, #8]
10053180:	2500      	movs	r5, #0
10053182:	462b      	mov	r3, r5
10053184:	9500      	str	r5, [sp, #0]
10053186:	9503      	str	r5, [sp, #12]
10053188:	2a00      	cmp	r2, #0
1005318a:	9506      	str	r5, [sp, #24]
1005318c:	d050      	beq.n	10053230 <GAT_att_srv_find_info_exc+0xd8>
1005318e:	8850      	ldrh	r0, [r2, #2]
10053190:	9007      	str	r0, [sp, #28]
10053192:	9902      	ldr	r1, [sp, #8]
10053194:	4288      	cmp	r0, r1
10053196:	d84b      	bhi.n	10053230 <GAT_att_srv_find_info_exc+0xd8>
10053198:	b2a8      	uxth	r0, r5
1005319a:	18c0      	adds	r0, r0, r3
1005319c:	9901      	ldr	r1, [sp, #4]
1005319e:	6889      	ldr	r1, [r1, #8]
100531a0:	88c9      	ldrh	r1, [r1, #6]
100531a2:	4288      	cmp	r0, r1
100531a4:	d844      	bhi.n	10053230 <GAT_att_srv_find_info_exc+0xd8>
100531a6:	461c      	mov	r4, r3
100531a8:	ad08      	add	r5, sp, #32
100531aa:	9205      	str	r2, [sp, #20]
100531ac:	4610      	mov	r0, r2
100531ae:	4629      	mov	r1, r5
100531b0:	f000 ffce 	bl	10054150 <GAT_srv_get_attr_type>
100531b4:	7c2e      	ldrb	r6, [r5, #16]
100531b6:	9803      	ldr	r0, [sp, #12]
100531b8:	0600      	lsls	r0, r0, #24
100531ba:	d006      	beq.n	100531ca <GAT_att_srv_find_info_exc+0x72>
100531bc:	9800      	ldr	r0, [sp, #0]
100531be:	4286      	cmp	r6, r0
100531c0:	d139      	bne.n	10053236 <GAT_att_srv_find_info_exc+0xde>
100531c2:	08c0      	lsrs	r0, r0, #3
100531c4:	9004      	str	r0, [sp, #16]
100531c6:	9d06      	ldr	r5, [sp, #24]
100531c8:	e016      	b.n	100531f8 <GAT_att_srv_find_info_exc+0xa0>
100531ca:	89b9      	ldrh	r1, [r7, #12]
100531cc:	2205      	movs	r2, #5
100531ce:	4638      	mov	r0, r7
100531d0:	f7ff fe80 	bl	10052ed4 <ACL_pkt_write_8b>
100531d4:	2e10      	cmp	r6, #16
100531d6:	d001      	beq.n	100531dc <GAT_att_srv_find_info_exc+0x84>
100531d8:	2202      	movs	r2, #2
100531da:	e000      	b.n	100531de <GAT_att_srv_find_info_exc+0x86>
100531dc:	2201      	movs	r2, #1
100531de:	9d06      	ldr	r5, [sp, #24]
100531e0:	89b8      	ldrh	r0, [r7, #12]
100531e2:	1c40      	adds	r0, r0, #1
100531e4:	b281      	uxth	r1, r0
100531e6:	4638      	mov	r0, r7
100531e8:	9203      	str	r2, [sp, #12]
100531ea:	f7ff fe73 	bl	10052ed4 <ACL_pkt_write_8b>
100531ee:	1cad      	adds	r5, r5, #2
100531f0:	08f0      	lsrs	r0, r6, #3
100531f2:	9004      	str	r0, [sp, #16]
100531f4:	1c84      	adds	r4, r0, #2
100531f6:	9600      	str	r6, [sp, #0]
100531f8:	89b8      	ldrh	r0, [r7, #12]
100531fa:	1940      	adds	r0, r0, r5
100531fc:	b281      	uxth	r1, r0
100531fe:	4638      	mov	r0, r7
10053200:	9a07      	ldr	r2, [sp, #28]
10053202:	f7fc ff00 	bl	10050006 <ACL_pkt_write_16b>
10053206:	89b8      	ldrh	r0, [r7, #12]
10053208:	1828      	adds	r0, r5, r0
1005320a:	1c86      	adds	r6, r0, #2
1005320c:	a808      	add	r0, sp, #32
1005320e:	f012 f9fc 	bl	1006560a <UUID_get_value_p>
10053212:	4603      	mov	r3, r0
10053214:	b2b1      	uxth	r1, r6
10053216:	9804      	ldr	r0, [sp, #16]
10053218:	b2c2      	uxtb	r2, r0
1005321a:	4638      	mov	r0, r7
1005321c:	f7fc fefc 	bl	10050018 <ACL_pkt_write>
10053220:	b2e0      	uxtb	r0, r4
10053222:	182d      	adds	r5, r5, r0
10053224:	9805      	ldr	r0, [sp, #20]
10053226:	f014 fa4d 	bl	100676c4 <GAT_att_db_get_next>
1005322a:	4602      	mov	r2, r0
1005322c:	4623      	mov	r3, r4
1005322e:	e7ab      	b.n	10053188 <GAT_att_srv_find_info_exc+0x30>
10053230:	9803      	ldr	r0, [sp, #12]
10053232:	0600      	lsls	r0, r0, #24
10053234:	d003      	beq.n	1005323e <GAT_att_srv_find_info_exc+0xe6>
10053236:	9806      	ldr	r0, [sp, #24]
10053238:	8078      	strh	r0, [r7, #2]
1005323a:	2000      	movs	r0, #0
1005323c:	e007      	b.n	1005324e <GAT_att_srv_find_info_exc+0xf6>
1005323e:	9807      	ldr	r0, [sp, #28]
10053240:	b281      	uxth	r1, r0
10053242:	2004      	movs	r0, #4
10053244:	220a      	movs	r2, #10
10053246:	463b      	mov	r3, r7
10053248:	f7ff fec4 	bl	10052fd4 <GAT_att_srv_write_err_packet>
1005324c:	2086      	movs	r0, #134	@ 0x86
1005324e:	b00f      	add	sp, #60	@ 0x3c
10053250:	bdf0      	pop	{r4, r5, r6, r7, pc}

10053252 <GAT_att_srv_find_by_type_val_exc>:
10053252:	b5f0      	push	{r4, r5, r6, r7, lr}
10053254:	b091      	sub	sp, #68	@ 0x44
10053256:	4607      	mov	r7, r0
10053258:	ac09      	add	r4, sp, #36	@ 0x24
1005325a:	2010      	movs	r0, #16
1005325c:	7420      	strb	r0, [r4, #16]
1005325e:	6878      	ldr	r0, [r7, #4]
10053260:	8981      	ldrh	r1, [r0, #12]
10053262:	1d49      	adds	r1, r1, #5
10053264:	b289      	uxth	r1, r1
10053266:	f7fc febe 	bl	1004ffe6 <ACL_pkt_read_16b>
1005326a:	81a0      	strh	r0, [r4, #12]
1005326c:	6878      	ldr	r0, [r7, #4]
1005326e:	ae0f      	add	r6, sp, #60	@ 0x3c
10053270:	ad0e      	add	r5, sp, #56	@ 0x38
10053272:	4631      	mov	r1, r6
10053274:	462a      	mov	r2, r5
10053276:	f000 fbf8 	bl	10053a6a <GAT_att_srv_get_handle_range>
1005327a:	8836      	ldrh	r6, [r6, #0]
1005327c:	6878      	ldr	r0, [r7, #4]
1005327e:	9706      	str	r7, [sp, #24]
10053280:	68b9      	ldr	r1, [r7, #8]
10053282:	8844      	ldrh	r4, [r0, #2]
10053284:	68c8      	ldr	r0, [r1, #12]
10053286:	8981      	ldrh	r1, [r0, #12]
10053288:	2207      	movs	r2, #7
1005328a:	9002      	str	r0, [sp, #8]
1005328c:	f7ff fe22 	bl	10052ed4 <ACL_pkt_write_8b>
10053290:	1fe0      	subs	r0, r4, #7
10053292:	8829      	ldrh	r1, [r5, #0]
10053294:	9104      	str	r1, [sp, #16]
10053296:	2101      	movs	r1, #1
10053298:	9105      	str	r1, [sp, #20]
1005329a:	b280      	uxth	r0, r0
1005329c:	9003      	str	r0, [sp, #12]
1005329e:	9601      	str	r6, [sp, #4]
100532a0:	9805      	ldr	r0, [sp, #20]
100532a2:	b287      	uxth	r7, r0
100532a4:	1d3c      	adds	r4, r7, #4
100532a6:	9806      	ldr	r0, [sp, #24]
100532a8:	6880      	ldr	r0, [r0, #8]
100532aa:	88c0      	ldrh	r0, [r0, #6]
100532ac:	4284      	cmp	r4, r0
100532ae:	d83c      	bhi.n	1005332a <GAT_att_srv_find_by_type_val_exc+0xd8>
100532b0:	b2b0      	uxth	r0, r6
100532b2:	aa09      	add	r2, sp, #36	@ 0x24
100532b4:	9904      	ldr	r1, [sp, #16]
100532b6:	f001 fabb 	bl	10054830 <GAT_srv_find_by_type_attr_p>
100532ba:	2800      	cmp	r0, #0
100532bc:	d035      	beq.n	1005332a <GAT_att_srv_find_by_type_val_exc+0xd8>
100532be:	4605      	mov	r5, r0
100532c0:	a810      	add	r0, sp, #64	@ 0x40
100532c2:	9000      	str	r0, [sp, #0]
100532c4:	2200      	movs	r2, #0
100532c6:	ab08      	add	r3, sp, #32
100532c8:	9806      	ldr	r0, [sp, #24]
100532ca:	4629      	mov	r1, r5
100532cc:	f000 fbe0 	bl	10053a90 <GAT_att_srv_value_read>
100532d0:	2886      	cmp	r0, #134	@ 0x86
100532d2:	d028      	beq.n	10053326 <GAT_att_srv_find_by_type_val_exc+0xd4>
100532d4:	2800      	cmp	r0, #0
100532d6:	d136      	bne.n	10053346 <GAT_att_srv_find_by_type_val_exc+0xf4>
100532d8:	886e      	ldrh	r6, [r5, #2]
100532da:	9808      	ldr	r0, [sp, #32]
100532dc:	6843      	ldr	r3, [r0, #4]
100532de:	9806      	ldr	r0, [sp, #24]
100532e0:	6840      	ldr	r0, [r0, #4]
100532e2:	8981      	ldrh	r1, [r0, #12]
100532e4:	1dc9      	adds	r1, r1, #7
100532e6:	b289      	uxth	r1, r1
100532e8:	9f03      	ldr	r7, [sp, #12]
100532ea:	463a      	mov	r2, r7
100532ec:	f7fc fe69 	bl	1004ffc2 <ACL_pkt_cmp>
100532f0:	9908      	ldr	r1, [sp, #32]
100532f2:	8809      	ldrh	r1, [r1, #0]
100532f4:	42b9      	cmp	r1, r7
100532f6:	d116      	bne.n	10053326 <GAT_att_srv_find_by_type_val_exc+0xd4>
100532f8:	2800      	cmp	r0, #0
100532fa:	d114      	bne.n	10053326 <GAT_att_srv_find_by_type_val_exc+0xd4>
100532fc:	af07      	add	r7, sp, #28
100532fe:	703e      	strb	r6, [r7, #0]
10053300:	0a30      	lsrs	r0, r6, #8
10053302:	7078      	strb	r0, [r7, #1]
10053304:	4628      	mov	r0, r5
10053306:	f000 ff4b 	bl	100541a0 <GAT_srv_get_att_group_end_handle>
1005330a:	4606      	mov	r6, r0
1005330c:	70b8      	strb	r0, [r7, #2]
1005330e:	0a00      	lsrs	r0, r0, #8
10053310:	70f8      	strb	r0, [r7, #3]
10053312:	9802      	ldr	r0, [sp, #8]
10053314:	8981      	ldrh	r1, [r0, #12]
10053316:	9a05      	ldr	r2, [sp, #20]
10053318:	1889      	adds	r1, r1, r2
1005331a:	b289      	uxth	r1, r1
1005331c:	2204      	movs	r2, #4
1005331e:	463b      	mov	r3, r7
10053320:	f7fc fe7a 	bl	10050018 <ACL_pkt_write>
10053324:	9405      	str	r4, [sp, #20]
10053326:	1c76      	adds	r6, r6, #1
10053328:	e7ba      	b.n	100532a0 <GAT_att_srv_find_by_type_val_exc+0x4e>
1005332a:	2f01      	cmp	r7, #1
1005332c:	d107      	bne.n	1005333e <GAT_att_srv_find_by_type_val_exc+0xec>
1005332e:	2006      	movs	r0, #6
10053330:	220a      	movs	r2, #10
10053332:	9901      	ldr	r1, [sp, #4]
10053334:	9b02      	ldr	r3, [sp, #8]
10053336:	f7ff fe4d 	bl	10052fd4 <GAT_att_srv_write_err_packet>
1005333a:	2086      	movs	r0, #134	@ 0x86
1005333c:	e003      	b.n	10053346 <GAT_att_srv_find_by_type_val_exc+0xf4>
1005333e:	9802      	ldr	r0, [sp, #8]
10053340:	9905      	ldr	r1, [sp, #20]
10053342:	8041      	strh	r1, [r0, #2]
10053344:	2000      	movs	r0, #0
10053346:	b011      	add	sp, #68	@ 0x44
10053348:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005334a <GAT_att_srv_read_by_type_exc>:
1005334a:	b5f0      	push	{r4, r5, r6, r7, lr}
1005334c:	b097      	sub	sp, #92	@ 0x5c
1005334e:	4604      	mov	r4, r0
10053350:	6840      	ldr	r0, [r0, #4]
10053352:	a915      	add	r1, sp, #84	@ 0x54
10053354:	aa14      	add	r2, sp, #80	@ 0x50
10053356:	f000 fb88 	bl	10053a6a <GAT_att_srv_get_handle_range>
1005335a:	940a      	str	r4, [sp, #40]	@ 0x28
1005335c:	6860      	ldr	r0, [r4, #4]
1005335e:	8981      	ldrh	r1, [r0, #12]
10053360:	1d49      	adds	r1, r1, #5
10053362:	8842      	ldrh	r2, [r0, #2]
10053364:	b289      	uxth	r1, r1
10053366:	2a07      	cmp	r2, #7
10053368:	d105      	bne.n	10053376 <GAT_att_srv_read_by_type_exc+0x2c>
1005336a:	f7fc fe3c 	bl	1004ffe6 <ACL_pkt_read_16b>
1005336e:	a90f      	add	r1, sp, #60	@ 0x3c
10053370:	8188      	strh	r0, [r1, #12]
10053372:	2010      	movs	r0, #16
10053374:	e004      	b.n	10053380 <GAT_att_srv_read_by_type_exc+0x36>
10053376:	2210      	movs	r2, #16
10053378:	ab0f      	add	r3, sp, #60	@ 0x3c
1005337a:	f7fc fe2b 	bl	1004ffd4 <ACL_pkt_read>
1005337e:	2080      	movs	r0, #128	@ 0x80
10053380:	a90f      	add	r1, sp, #60	@ 0x3c
10053382:	7408      	strb	r0, [r1, #16]
10053384:	980a      	ldr	r0, [sp, #40]	@ 0x28
10053386:	7840      	ldrb	r0, [r0, #1]
10053388:	2810      	cmp	r0, #16
1005338a:	d001      	beq.n	10053390 <GAT_att_srv_read_by_type_exc+0x46>
1005338c:	2102      	movs	r1, #2
1005338e:	e000      	b.n	10053392 <GAT_att_srv_read_by_type_exc+0x48>
10053390:	2104      	movs	r1, #4
10053392:	9107      	str	r1, [sp, #28]
10053394:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10053396:	6891      	ldr	r1, [r2, #8]
10053398:	68cc      	ldr	r4, [r1, #12]
1005339a:	88cb      	ldrh	r3, [r1, #6]
1005339c:	9305      	str	r3, [sp, #20]
1005339e:	7812      	ldrb	r2, [r2, #0]
100533a0:	2a00      	cmp	r2, #0
100533a2:	9404      	str	r4, [sp, #16]
100533a4:	d00a      	beq.n	100533bc <GAT_att_srv_read_by_type_exc+0x72>
100533a6:	8865      	ldrh	r5, [r4, #2]
100533a8:	2d02      	cmp	r5, #2
100533aa:	d315      	bcc.n	100533d8 <GAT_att_srv_read_by_type_exc+0x8e>
100533ac:	89a0      	ldrh	r0, [r4, #12]
100533ae:	1c40      	adds	r0, r0, #1
100533b0:	b281      	uxth	r1, r0
100533b2:	4620      	mov	r0, r4
100533b4:	f000 fba9 	bl	10053b0a <ACL_pkt_read_8b>
100533b8:	4606      	mov	r6, r0
100533ba:	e00e      	b.n	100533da <GAT_att_srv_read_by_type_exc+0x90>
100533bc:	aa15      	add	r2, sp, #84	@ 0x54
100533be:	8815      	ldrh	r5, [r2, #0]
100533c0:	2810      	cmp	r0, #16
100533c2:	d112      	bne.n	100533ea <GAT_att_srv_read_by_type_exc+0xa0>
100533c4:	a80f      	add	r0, sp, #60	@ 0x3c
100533c6:	f001 f995 	bl	100546f4 <GAT_srv_is_supported_grouping_type>
100533ca:	2800      	cmp	r0, #0
100533cc:	d100      	bne.n	100533d0 <GAT_att_srv_read_by_type_exc+0x86>
100533ce:	e0b8      	b.n	10053542 <GAT_att_srv_read_by_type_exc+0x1f8>
100533d0:	9508      	str	r5, [sp, #32]
100533d2:	89a1      	ldrh	r1, [r4, #12]
100533d4:	2211      	movs	r2, #17
100533d6:	e01b      	b.n	10053410 <GAT_att_srv_read_by_type_exc+0xc6>
100533d8:	2600      	movs	r6, #0
100533da:	89a0      	ldrh	r0, [r4, #12]
100533dc:	1940      	adds	r0, r0, r5
100533de:	b281      	uxth	r1, r0
100533e0:	4620      	mov	r0, r4
100533e2:	f7fc fe00 	bl	1004ffe6 <ACL_pkt_read_16b>
100533e6:	9008      	str	r0, [sp, #32]
100533e8:	e018      	b.n	1005341c <GAT_att_srv_read_by_type_exc+0xd2>
100533ea:	a80b      	add	r0, sp, #44	@ 0x2c
100533ec:	8105      	strh	r5, [r0, #8]
100533ee:	2202      	movs	r2, #2
100533f0:	7102      	strb	r2, [r0, #4]
100533f2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
100533f4:	8142      	strh	r2, [r0, #10]
100533f6:	910b      	str	r1, [sp, #44]	@ 0x2c
100533f8:	a90f      	add	r1, sp, #60	@ 0x3c
100533fa:	910e      	str	r1, [sp, #56]	@ 0x38
100533fc:	f001 f9bc 	bl	10054778 <GAT_srv_check_change_aware>
10053400:	2886      	cmp	r0, #134	@ 0x86
10053402:	d102      	bne.n	1005340a <GAT_att_srv_read_by_type_exc+0xc0>
10053404:	a816      	add	r0, sp, #88	@ 0x58
10053406:	2212      	movs	r2, #18
10053408:	e09d      	b.n	10053546 <GAT_att_srv_read_by_type_exc+0x1fc>
1005340a:	9508      	str	r5, [sp, #32]
1005340c:	89a1      	ldrh	r1, [r4, #12]
1005340e:	2209      	movs	r2, #9
10053410:	4620      	mov	r0, r4
10053412:	f7ff fd5f 	bl	10052ed4 <ACL_pkt_write_8b>
10053416:	2501      	movs	r5, #1
10053418:	8065      	strh	r5, [r4, #2]
1005341a:	2600      	movs	r6, #0
1005341c:	9805      	ldr	r0, [sp, #20]
1005341e:	1e80      	subs	r0, r0, #2
10053420:	9001      	str	r0, [sp, #4]
10053422:	a814      	add	r0, sp, #80	@ 0x50
10053424:	8800      	ldrh	r0, [r0, #0]
10053426:	9003      	str	r0, [sp, #12]
10053428:	9609      	str	r6, [sp, #36]	@ 0x24
1005342a:	b2f6      	uxtb	r6, r6
1005342c:	9506      	str	r5, [sp, #24]
1005342e:	b2af      	uxth	r7, r5
10053430:	19b8      	adds	r0, r7, r6
10053432:	9905      	ldr	r1, [sp, #20]
10053434:	4288      	cmp	r0, r1
10053436:	d874      	bhi.n	10053522 <GAT_att_srv_read_by_type_exc+0x1d8>
10053438:	9808      	ldr	r0, [sp, #32]
1005343a:	b285      	uxth	r5, r0
1005343c:	aa0f      	add	r2, sp, #60	@ 0x3c
1005343e:	4628      	mov	r0, r5
10053440:	9903      	ldr	r1, [sp, #12]
10053442:	f001 f9f5 	bl	10054830 <GAT_srv_find_by_type_attr_p>
10053446:	2800      	cmp	r0, #0
10053448:	d06b      	beq.n	10053522 <GAT_att_srv_read_by_type_exc+0x1d8>
1005344a:	4604      	mov	r4, r0
1005344c:	9502      	str	r5, [sp, #8]
1005344e:	a816      	add	r0, sp, #88	@ 0x58
10053450:	9000      	str	r0, [sp, #0]
10053452:	2500      	movs	r5, #0
10053454:	ab0b      	add	r3, sp, #44	@ 0x2c
10053456:	980a      	ldr	r0, [sp, #40]	@ 0x28
10053458:	4621      	mov	r1, r4
1005345a:	462a      	mov	r2, r5
1005345c:	f000 fb18 	bl	10053a90 <GAT_att_srv_value_read>
10053460:	2800      	cmp	r0, #0
10053462:	d14f      	bne.n	10053504 <GAT_att_srv_read_by_type_exc+0x1ba>
10053464:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10053466:	8800      	ldrh	r0, [r0, #0]
10053468:	9907      	ldr	r1, [sp, #28]
1005346a:	1809      	adds	r1, r1, r0
1005346c:	2f01      	cmp	r7, #1
1005346e:	d111      	bne.n	10053494 <GAT_att_srv_read_by_type_exc+0x14a>
10053470:	29ff      	cmp	r1, #255	@ 0xff
10053472:	d300      	bcc.n	10053476 <GAT_att_srv_read_by_type_exc+0x12c>
10053474:	21ff      	movs	r1, #255	@ 0xff
10053476:	9801      	ldr	r0, [sp, #4]
10053478:	4281      	cmp	r1, r0
1005347a:	d300      	bcc.n	1005347e <GAT_att_srv_read_by_type_exc+0x134>
1005347c:	9901      	ldr	r1, [sp, #4]
1005347e:	9109      	str	r1, [sp, #36]	@ 0x24
10053480:	b2ca      	uxtb	r2, r1
10053482:	9e04      	ldr	r6, [sp, #16]
10053484:	89b0      	ldrh	r0, [r6, #12]
10053486:	1c40      	adds	r0, r0, #1
10053488:	b281      	uxth	r1, r0
1005348a:	4630      	mov	r0, r6
1005348c:	f7ff fd22 	bl	10052ed4 <ACL_pkt_write_8b>
10053490:	2702      	movs	r7, #2
10053492:	e003      	b.n	1005349c <GAT_att_srv_read_by_type_exc+0x152>
10053494:	42b1      	cmp	r1, r6
10053496:	9e04      	ldr	r6, [sp, #16]
10053498:	9f06      	ldr	r7, [sp, #24]
1005349a:	d15c      	bne.n	10053556 <GAT_att_srv_read_by_type_exc+0x20c>
1005349c:	8865      	ldrh	r5, [r4, #2]
1005349e:	4620      	mov	r0, r4
100534a0:	f000 fe7e 	bl	100541a0 <GAT_srv_get_att_group_end_handle>
100534a4:	9008      	str	r0, [sp, #32]
100534a6:	89b0      	ldrh	r0, [r6, #12]
100534a8:	19c0      	adds	r0, r0, r7
100534aa:	b281      	uxth	r1, r0
100534ac:	4630      	mov	r0, r6
100534ae:	462a      	mov	r2, r5
100534b0:	f7fc fda9 	bl	10050006 <ACL_pkt_write_16b>
100534b4:	9807      	ldr	r0, [sp, #28]
100534b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
100534b8:	1a0a      	subs	r2, r1, r0
100534ba:	463c      	mov	r4, r7
100534bc:	1cbf      	adds	r7, r7, #2
100534be:	980a      	ldr	r0, [sp, #40]	@ 0x28
100534c0:	7840      	ldrb	r0, [r0, #1]
100534c2:	2810      	cmp	r0, #16
100534c4:	d10a      	bne.n	100534dc <GAT_att_srv_read_by_type_exc+0x192>
100534c6:	89b0      	ldrh	r0, [r6, #12]
100534c8:	19c0      	adds	r0, r0, r7
100534ca:	b281      	uxth	r1, r0
100534cc:	4630      	mov	r0, r6
100534ce:	9d08      	ldr	r5, [sp, #32]
100534d0:	4617      	mov	r7, r2
100534d2:	462a      	mov	r2, r5
100534d4:	f7fc fd97 	bl	10050006 <ACL_pkt_write_16b>
100534d8:	463a      	mov	r2, r7
100534da:	1d27      	adds	r7, r4, #4
100534dc:	462c      	mov	r4, r5
100534de:	89b0      	ldrh	r0, [r6, #12]
100534e0:	19c0      	adds	r0, r0, r7
100534e2:	b281      	uxth	r1, r0
100534e4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
100534e6:	6843      	ldr	r3, [r0, #4]
100534e8:	b2d5      	uxtb	r5, r2
100534ea:	4630      	mov	r0, r6
100534ec:	462a      	mov	r2, r5
100534ee:	f7fc fd93 	bl	10050018 <ACL_pkt_write>
100534f2:	197d      	adds	r5, r7, r5
100534f4:	8075      	strh	r5, [r6, #2]
100534f6:	2002      	movs	r0, #2
100534f8:	990a      	ldr	r1, [sp, #40]	@ 0x28
100534fa:	7008      	strb	r0, [r1, #0]
100534fc:	1c60      	adds	r0, r4, #1
100534fe:	9008      	str	r0, [sp, #32]
10053500:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10053502:	e791      	b.n	10053428 <GAT_att_srv_read_by_type_exc+0xde>
10053504:	2886      	cmp	r0, #134	@ 0x86
10053506:	9a06      	ldr	r2, [sp, #24]
10053508:	d016      	beq.n	10053538 <GAT_att_srv_read_by_type_exc+0x1ee>
1005350a:	2884      	cmp	r0, #132	@ 0x84
1005350c:	4605      	mov	r5, r0
1005350e:	9804      	ldr	r0, [sp, #16]
10053510:	d121      	bne.n	10053556 <GAT_att_srv_read_by_type_exc+0x20c>
10053512:	8981      	ldrh	r1, [r0, #12]
10053514:	1889      	adds	r1, r1, r2
10053516:	b289      	uxth	r1, r1
10053518:	9a02      	ldr	r2, [sp, #8]
1005351a:	f7fc fd74 	bl	10050006 <ACL_pkt_write_16b>
1005351e:	2584      	movs	r5, #132	@ 0x84
10053520:	e019      	b.n	10053556 <GAT_att_srv_read_by_type_exc+0x20c>
10053522:	2f01      	cmp	r7, #1
10053524:	d106      	bne.n	10053534 <GAT_att_srv_read_by_type_exc+0x1ea>
10053526:	a816      	add	r0, sp, #88	@ 0x58
10053528:	220a      	movs	r2, #10
1005352a:	7002      	strb	r2, [r0, #0]
1005352c:	a815      	add	r0, sp, #84	@ 0x54
1005352e:	8805      	ldrh	r5, [r0, #0]
10053530:	9c04      	ldr	r4, [sp, #16]
10053532:	e009      	b.n	10053548 <GAT_att_srv_read_by_type_exc+0x1fe>
10053534:	2500      	movs	r5, #0
10053536:	e00e      	b.n	10053556 <GAT_att_srv_read_by_type_exc+0x20c>
10053538:	a816      	add	r0, sp, #88	@ 0x58
1005353a:	7802      	ldrb	r2, [r0, #0]
1005353c:	9c04      	ldr	r4, [sp, #16]
1005353e:	9d08      	ldr	r5, [sp, #32]
10053540:	e002      	b.n	10053548 <GAT_att_srv_read_by_type_exc+0x1fe>
10053542:	a816      	add	r0, sp, #88	@ 0x58
10053544:	2210      	movs	r2, #16
10053546:	7002      	strb	r2, [r0, #0]
10053548:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005354a:	7840      	ldrb	r0, [r0, #1]
1005354c:	b2a9      	uxth	r1, r5
1005354e:	4623      	mov	r3, r4
10053550:	f7ff fd40 	bl	10052fd4 <GAT_att_srv_write_err_packet>
10053554:	2586      	movs	r5, #134	@ 0x86
10053556:	4628      	mov	r0, r5
10053558:	b017      	add	sp, #92	@ 0x5c
1005355a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005355c <GAT_att_srv_read_exc>:
1005355c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005355e:	b08b      	sub	sp, #44	@ 0x2c
10053560:	4605      	mov	r5, r0
10053562:	6880      	ldr	r0, [r0, #8]
10053564:	68c4      	ldr	r4, [r0, #12]
10053566:	88c7      	ldrh	r7, [r0, #6]
10053568:	7828      	ldrb	r0, [r5, #0]
1005356a:	2800      	cmp	r0, #0
1005356c:	d024      	beq.n	100535b8 <GAT_att_srv_read_exc+0x5c>
1005356e:	462e      	mov	r6, r5
10053570:	360c      	adds	r6, #12
10053572:	9605      	str	r6, [sp, #20]
10053574:	6868      	ldr	r0, [r5, #4]
10053576:	8980      	ldrh	r0, [r0, #12]
10053578:	1c40      	adds	r0, r0, #1
1005357a:	b281      	uxth	r1, r0
1005357c:	2204      	movs	r2, #4
1005357e:	ab04      	add	r3, sp, #16
10053580:	4620      	mov	r0, r4
10053582:	f7fc fd27 	bl	1004ffd4 <ACL_pkt_read>
10053586:	8830      	ldrh	r0, [r6, #0]
10053588:	7869      	ldrb	r1, [r5, #1]
1005358a:	1e7f      	subs	r7, r7, #1
1005358c:	290c      	cmp	r1, #12
1005358e:	d103      	bne.n	10053598 <GAT_att_srv_read_exc+0x3c>
10053590:	4287      	cmp	r7, r0
10053592:	d253      	bcs.n	1005363c <GAT_att_srv_read_exc+0xe0>
10053594:	9904      	ldr	r1, [sp, #16]
10053596:	1a40      	subs	r0, r0, r1
10053598:	b280      	uxth	r0, r0
1005359a:	4287      	cmp	r7, r0
1005359c:	d300      	bcc.n	100535a0 <GAT_att_srv_read_exc+0x44>
1005359e:	4607      	mov	r7, r0
100535a0:	b2ba      	uxth	r2, r7
100535a2:	6873      	ldr	r3, [r6, #4]
100535a4:	89a0      	ldrh	r0, [r4, #12]
100535a6:	1c40      	adds	r0, r0, #1
100535a8:	b281      	uxth	r1, r0
100535aa:	4620      	mov	r0, r4
100535ac:	f7fc fd34 	bl	10050018 <ACL_pkt_write>
100535b0:	1c78      	adds	r0, r7, #1
100535b2:	8060      	strh	r0, [r4, #2]
100535b4:	2000      	movs	r0, #0
100535b6:	e04d      	b.n	10053654 <GAT_att_srv_read_exc+0xf8>
100535b8:	7868      	ldrb	r0, [r5, #1]
100535ba:	280c      	cmp	r0, #12
100535bc:	9702      	str	r7, [sp, #8]
100535be:	d107      	bne.n	100535d0 <GAT_att_srv_read_exc+0x74>
100535c0:	6868      	ldr	r0, [r5, #4]
100535c2:	8981      	ldrh	r1, [r0, #12]
100535c4:	1cc9      	adds	r1, r1, #3
100535c6:	b289      	uxth	r1, r1
100535c8:	f7fc fd0d 	bl	1004ffe6 <ACL_pkt_read_16b>
100535cc:	220d      	movs	r2, #13
100535ce:	e001      	b.n	100535d4 <GAT_att_srv_read_exc+0x78>
100535d0:	220b      	movs	r2, #11
100535d2:	2000      	movs	r0, #0
100535d4:	af04      	add	r7, sp, #16
100535d6:	9003      	str	r0, [sp, #12]
100535d8:	8038      	strh	r0, [r7, #0]
100535da:	89a1      	ldrh	r1, [r4, #12]
100535dc:	4620      	mov	r0, r4
100535de:	f7ff fc79 	bl	10052ed4 <ACL_pkt_write_8b>
100535e2:	6868      	ldr	r0, [r5, #4]
100535e4:	8981      	ldrh	r1, [r0, #12]
100535e6:	1c49      	adds	r1, r1, #1
100535e8:	b289      	uxth	r1, r1
100535ea:	f7fc fcfc 	bl	1004ffe6 <ACL_pkt_read_16b>
100535ee:	4606      	mov	r6, r0
100535f0:	8078      	strh	r0, [r7, #2]
100535f2:	a807      	add	r0, sp, #28
100535f4:	8106      	strh	r6, [r0, #8]
100535f6:	2701      	movs	r7, #1
100535f8:	7107      	strb	r7, [r0, #4]
100535fa:	68a9      	ldr	r1, [r5, #8]
100535fc:	9107      	str	r1, [sp, #28]
100535fe:	f001 f8bb 	bl	10054778 <GAT_srv_check_change_aware>
10053602:	2886      	cmp	r0, #134	@ 0x86
10053604:	d101      	bne.n	1005360a <GAT_att_srv_read_exc+0xae>
10053606:	2712      	movs	r7, #18
10053608:	e015      	b.n	10053636 <GAT_att_srv_read_exc+0xda>
1005360a:	4630      	mov	r0, r6
1005360c:	f013 ffd0 	bl	100675b0 <GAT_att_db_find_by_handle>
10053610:	2800      	cmp	r0, #0
10053612:	d010      	beq.n	10053636 <GAT_att_srv_read_exc+0xda>
10053614:	4601      	mov	r1, r0
10053616:	a806      	add	r0, sp, #24
10053618:	9000      	str	r0, [sp, #0]
1005361a:	ab05      	add	r3, sp, #20
1005361c:	4628      	mov	r0, r5
1005361e:	9a03      	ldr	r2, [sp, #12]
10053620:	f000 fa36 	bl	10053a90 <GAT_att_srv_value_read>
10053624:	2800      	cmp	r0, #0
10053626:	d017      	beq.n	10053658 <GAT_att_srv_read_exc+0xfc>
10053628:	2884      	cmp	r0, #132	@ 0x84
1005362a:	d018      	beq.n	1005365e <GAT_att_srv_read_exc+0x102>
1005362c:	2886      	cmp	r0, #134	@ 0x86
1005362e:	d111      	bne.n	10053654 <GAT_att_srv_read_exc+0xf8>
10053630:	a806      	add	r0, sp, #24
10053632:	7807      	ldrb	r7, [r0, #0]
10053634:	e007      	b.n	10053646 <GAT_att_srv_read_exc+0xea>
10053636:	a806      	add	r0, sp, #24
10053638:	7007      	strb	r7, [r0, #0]
1005363a:	e004      	b.n	10053646 <GAT_att_srv_read_exc+0xea>
1005363c:	a806      	add	r0, sp, #24
1005363e:	270b      	movs	r7, #11
10053640:	7007      	strb	r7, [r0, #0]
10053642:	a804      	add	r0, sp, #16
10053644:	8846      	ldrh	r6, [r0, #2]
10053646:	7868      	ldrb	r0, [r5, #1]
10053648:	4631      	mov	r1, r6
1005364a:	463a      	mov	r2, r7
1005364c:	4623      	mov	r3, r4
1005364e:	f7ff fcc1 	bl	10052fd4 <GAT_att_srv_write_err_packet>
10053652:	2086      	movs	r0, #134	@ 0x86
10053654:	b00b      	add	sp, #44	@ 0x2c
10053656:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053658:	9e05      	ldr	r6, [sp, #20]
1005365a:	9f02      	ldr	r7, [sp, #8]
1005365c:	e793      	b.n	10053586 <GAT_att_srv_read_exc+0x2a>
1005365e:	89a0      	ldrh	r0, [r4, #12]
10053660:	1c40      	adds	r0, r0, #1
10053662:	b281      	uxth	r1, r0
10053664:	2204      	movs	r2, #4
10053666:	ab04      	add	r3, sp, #16
10053668:	4620      	mov	r0, r4
1005366a:	f7fc fcd5 	bl	10050018 <ACL_pkt_write>
1005366e:	2084      	movs	r0, #132	@ 0x84
10053670:	e7f0      	b.n	10053654 <GAT_att_srv_read_exc+0xf8>

10053672 <GAT_att_srv_read_multi_exc>:
10053672:	b5f0      	push	{r4, r5, r6, r7, lr}
10053674:	b08d      	sub	sp, #52	@ 0x34
10053676:	6881      	ldr	r1, [r0, #8]
10053678:	68ce      	ldr	r6, [r1, #12]
1005367a:	88c9      	ldrh	r1, [r1, #6]
1005367c:	9106      	str	r1, [sp, #24]
1005367e:	7801      	ldrb	r1, [r0, #0]
10053680:	2900      	cmp	r1, #0
10053682:	9007      	str	r0, [sp, #28]
10053684:	d009      	beq.n	1005369a <GAT_att_srv_read_multi_exc+0x28>
10053686:	8877      	ldrh	r7, [r6, #2]
10053688:	89b0      	ldrh	r0, [r6, #12]
1005368a:	19c0      	adds	r0, r0, r7
1005368c:	b281      	uxth	r1, r0
1005368e:	4630      	mov	r0, r6
10053690:	f7fc fca9 	bl	1004ffe6 <ACL_pkt_read_16b>
10053694:	9907      	ldr	r1, [sp, #28]
10053696:	4602      	mov	r2, r0
10053698:	e00c      	b.n	100536b4 <GAT_att_srv_read_multi_exc+0x42>
1005369a:	7840      	ldrb	r0, [r0, #1]
1005369c:	280e      	cmp	r0, #14
1005369e:	d001      	beq.n	100536a4 <GAT_att_srv_read_multi_exc+0x32>
100536a0:	2221      	movs	r2, #33	@ 0x21
100536a2:	e000      	b.n	100536a6 <GAT_att_srv_read_multi_exc+0x34>
100536a4:	220f      	movs	r2, #15
100536a6:	89b1      	ldrh	r1, [r6, #12]
100536a8:	4630      	mov	r0, r6
100536aa:	f7ff fc13 	bl	10052ed4 <ACL_pkt_write_8b>
100536ae:	2201      	movs	r2, #1
100536b0:	4617      	mov	r7, r2
100536b2:	9907      	ldr	r1, [sp, #28]
100536b4:	6848      	ldr	r0, [r1, #4]
100536b6:	7880      	ldrb	r0, [r0, #2]
100536b8:	1a80      	subs	r0, r0, r2
100536ba:	b2c0      	uxtb	r0, r0
100536bc:	0845      	lsrs	r5, r0, #1
100536be:	7808      	ldrb	r0, [r1, #0]
100536c0:	2800      	cmp	r0, #0
100536c2:	9602      	str	r6, [sp, #8]
100536c4:	d066      	beq.n	10053794 <GAT_att_srv_read_multi_exc+0x122>
100536c6:	9907      	ldr	r1, [sp, #28]
100536c8:	4608      	mov	r0, r1
100536ca:	300c      	adds	r0, #12
100536cc:	9001      	str	r0, [sp, #4]
100536ce:	b2ed      	uxtb	r5, r5
100536d0:	35ff      	adds	r5, #255	@ 0xff
100536d2:	b2e8      	uxtb	r0, r5
100536d4:	2300      	movs	r3, #0
100536d6:	9303      	str	r3, [sp, #12]
100536d8:	42a8      	cmp	r0, r5
100536da:	d100      	bne.n	100536de <GAT_att_srv_read_multi_exc+0x6c>
100536dc:	e0b3      	b.n	10053846 <GAT_att_srv_read_multi_exc+0x1d4>
100536de:	b2bc      	uxth	r4, r7
100536e0:	9806      	ldr	r0, [sp, #24]
100536e2:	42a0      	cmp	r0, r4
100536e4:	d800      	bhi.n	100536e8 <GAT_att_srv_read_multi_exc+0x76>
100536e6:	e0ae      	b.n	10053846 <GAT_att_srv_read_multi_exc+0x1d4>
100536e8:	6848      	ldr	r0, [r1, #4]
100536ea:	8981      	ldrh	r1, [r0, #12]
100536ec:	9205      	str	r2, [sp, #20]
100536ee:	1889      	adds	r1, r1, r2
100536f0:	b289      	uxth	r1, r1
100536f2:	2202      	movs	r2, #2
100536f4:	ab0c      	add	r3, sp, #48	@ 0x30
100536f6:	9204      	str	r2, [sp, #16]
100536f8:	f7fc fc6c 	bl	1004ffd4 <ACL_pkt_read>
100536fc:	9907      	ldr	r1, [sp, #28]
100536fe:	7808      	ldrb	r0, [r1, #0]
10053700:	2801      	cmp	r0, #1
10053702:	d102      	bne.n	1005370a <GAT_att_srv_read_multi_exc+0x98>
10053704:	9801      	ldr	r0, [sp, #4]
10053706:	9008      	str	r0, [sp, #32]
10053708:	e00d      	b.n	10053726 <GAT_att_srv_read_multi_exc+0xb4>
1005370a:	a80c      	add	r0, sp, #48	@ 0x30
1005370c:	8800      	ldrh	r0, [r0, #0]
1005370e:	f013 ff4f 	bl	100675b0 <GAT_att_db_find_by_handle>
10053712:	4601      	mov	r1, r0
10053714:	9807      	ldr	r0, [sp, #28]
10053716:	6880      	ldr	r0, [r0, #8]
10053718:	8900      	ldrh	r0, [r0, #8]
1005371a:	aa08      	add	r2, sp, #32
1005371c:	f000 fdda 	bl	100542d4 <GAT_srv_get_attr_value>
10053720:	9907      	ldr	r1, [sp, #28]
10053722:	2884      	cmp	r0, #132	@ 0x84
10053724:	d065      	beq.n	100537f2 <GAT_att_srv_read_multi_exc+0x180>
10053726:	9806      	ldr	r0, [sp, #24]
10053728:	1b04      	subs	r4, r0, r4
1005372a:	7848      	ldrb	r0, [r1, #1]
1005372c:	280e      	cmp	r0, #14
1005372e:	d109      	bne.n	10053744 <GAT_att_srv_read_multi_exc+0xd2>
10053730:	89b0      	ldrh	r0, [r6, #12]
10053732:	19c1      	adds	r1, r0, r7
10053734:	9808      	ldr	r0, [sp, #32]
10053736:	8802      	ldrh	r2, [r0, #0]
10053738:	4294      	cmp	r4, r2
1005373a:	db00      	blt.n	1005373e <GAT_att_srv_read_multi_exc+0xcc>
1005373c:	4614      	mov	r4, r2
1005373e:	b289      	uxth	r1, r1
10053740:	b2a2      	uxth	r2, r4
10053742:	e013      	b.n	1005376c <GAT_att_srv_read_multi_exc+0xfa>
10053744:	89b0      	ldrh	r0, [r6, #12]
10053746:	19c0      	adds	r0, r0, r7
10053748:	b281      	uxth	r1, r0
1005374a:	9a08      	ldr	r2, [sp, #32]
1005374c:	4630      	mov	r0, r6
1005374e:	8816      	ldrh	r6, [r2, #0]
10053750:	4632      	mov	r2, r6
10053752:	f7fc fc58 	bl	10050006 <ACL_pkt_write_16b>
10053756:	1ea4      	subs	r4, r4, #2
10053758:	42b4      	cmp	r4, r6
1005375a:	d300      	bcc.n	1005375e <GAT_att_srv_read_multi_exc+0xec>
1005375c:	4634      	mov	r4, r6
1005375e:	b2a2      	uxth	r2, r4
10053760:	1cbf      	adds	r7, r7, #2
10053762:	9e02      	ldr	r6, [sp, #8]
10053764:	89b0      	ldrh	r0, [r6, #12]
10053766:	19c0      	adds	r0, r0, r7
10053768:	b281      	uxth	r1, r0
1005376a:	9808      	ldr	r0, [sp, #32]
1005376c:	6843      	ldr	r3, [r0, #4]
1005376e:	4630      	mov	r0, r6
10053770:	f7fc fc52 	bl	10050018 <ACL_pkt_write>
10053774:	193f      	adds	r7, r7, r4
10053776:	8077      	strh	r7, [r6, #2]
10053778:	9907      	ldr	r1, [sp, #28]
1005377a:	7848      	ldrb	r0, [r1, #1]
1005377c:	2820      	cmp	r0, #32
1005377e:	9a05      	ldr	r2, [sp, #20]
10053780:	d104      	bne.n	1005378c <GAT_att_srv_read_multi_exc+0x11a>
10053782:	9806      	ldr	r0, [sp, #24]
10053784:	1bc0      	subs	r0, r0, r7
10053786:	b280      	uxth	r0, r0
10053788:	2802      	cmp	r0, #2
1005378a:	d35c      	bcc.n	10053846 <GAT_att_srv_read_multi_exc+0x1d4>
1005378c:	9804      	ldr	r0, [sp, #16]
1005378e:	7008      	strb	r0, [r1, #0]
10053790:	1c92      	adds	r2, r2, #2
10053792:	e79c      	b.n	100536ce <GAT_att_srv_read_multi_exc+0x5c>
10053794:	2100      	movs	r1, #0
10053796:	9205      	str	r2, [sp, #20]
10053798:	9c07      	ldr	r4, [sp, #28]
1005379a:	b288      	uxth	r0, r1
1005379c:	42a8      	cmp	r0, r5
1005379e:	d292      	bcs.n	100536c6 <GAT_att_srv_read_multi_exc+0x54>
100537a0:	9104      	str	r1, [sp, #16]
100537a2:	0049      	lsls	r1, r1, #1
100537a4:	6860      	ldr	r0, [r4, #4]
100537a6:	8982      	ldrh	r2, [r0, #12]
100537a8:	1851      	adds	r1, r2, r1
100537aa:	1c49      	adds	r1, r1, #1
100537ac:	b289      	uxth	r1, r1
100537ae:	2202      	movs	r2, #2
100537b0:	ab0c      	add	r3, sp, #48	@ 0x30
100537b2:	f7fc fc0f 	bl	1004ffd4 <ACL_pkt_read>
100537b6:	a808      	add	r0, sp, #32
100537b8:	2601      	movs	r6, #1
100537ba:	7106      	strb	r6, [r0, #4]
100537bc:	990c      	ldr	r1, [sp, #48]	@ 0x30
100537be:	8101      	strh	r1, [r0, #8]
100537c0:	68a1      	ldr	r1, [r4, #8]
100537c2:	9108      	str	r1, [sp, #32]
100537c4:	f000 ffd8 	bl	10054778 <GAT_srv_check_change_aware>
100537c8:	2886      	cmp	r0, #134	@ 0x86
100537ca:	d02a      	beq.n	10053822 <GAT_att_srv_read_multi_exc+0x1b0>
100537cc:	a80c      	add	r0, sp, #48	@ 0x30
100537ce:	8800      	ldrh	r0, [r0, #0]
100537d0:	f013 feee 	bl	100675b0 <GAT_att_db_find_by_handle>
100537d4:	2800      	cmp	r0, #0
100537d6:	d027      	beq.n	10053828 <GAT_att_srv_read_multi_exc+0x1b6>
100537d8:	9907      	ldr	r1, [sp, #28]
100537da:	6889      	ldr	r1, [r1, #8]
100537dc:	8909      	ldrh	r1, [r1, #8]
100537de:	2201      	movs	r2, #1
100537e0:	f000 fd02 	bl	100541e8 <GAT_srv_check_perms>
100537e4:	2800      	cmp	r0, #0
100537e6:	d11e      	bne.n	10053826 <GAT_att_srv_read_multi_exc+0x1b4>
100537e8:	9904      	ldr	r1, [sp, #16]
100537ea:	1c49      	adds	r1, r1, #1
100537ec:	9e02      	ldr	r6, [sp, #8]
100537ee:	9a05      	ldr	r2, [sp, #20]
100537f0:	e7d3      	b.n	1005379a <GAT_att_srv_read_multi_exc+0x128>
100537f2:	a80c      	add	r0, sp, #48	@ 0x30
100537f4:	8803      	ldrh	r3, [r0, #0]
100537f6:	6888      	ldr	r0, [r1, #8]
100537f8:	8942      	ldrh	r2, [r0, #10]
100537fa:	8901      	ldrh	r1, [r0, #8]
100537fc:	2000      	movs	r0, #0
100537fe:	9000      	str	r0, [sp, #0]
10053800:	2002      	movs	r0, #2
10053802:	f012 fd55 	bl	100662b0 <aci_gatt_srv_read_event_push_noinline>
10053806:	9003      	str	r0, [sp, #12]
10053808:	2800      	cmp	r0, #0
1005380a:	9a05      	ldr	r2, [sp, #20]
1005380c:	d11b      	bne.n	10053846 <GAT_att_srv_read_multi_exc+0x1d4>
1005380e:	8077      	strh	r7, [r6, #2]
10053810:	89b0      	ldrh	r0, [r6, #12]
10053812:	19c0      	adds	r0, r0, r7
10053814:	b281      	uxth	r1, r0
10053816:	b292      	uxth	r2, r2
10053818:	4630      	mov	r0, r6
1005381a:	f7fc fbf4 	bl	10050006 <ACL_pkt_write_16b>
1005381e:	2084      	movs	r0, #132	@ 0x84
10053820:	e010      	b.n	10053844 <GAT_att_srv_read_multi_exc+0x1d2>
10053822:	2612      	movs	r6, #18
10053824:	e000      	b.n	10053828 <GAT_att_srv_read_multi_exc+0x1b6>
10053826:	4606      	mov	r6, r0
10053828:	a80c      	add	r0, sp, #48	@ 0x30
1005382a:	8801      	ldrh	r1, [r0, #0]
1005382c:	9807      	ldr	r0, [sp, #28]
1005382e:	7840      	ldrb	r0, [r0, #1]
10053830:	280e      	cmp	r0, #14
10053832:	d101      	bne.n	10053838 <GAT_att_srv_read_multi_exc+0x1c6>
10053834:	200e      	movs	r0, #14
10053836:	e000      	b.n	1005383a <GAT_att_srv_read_multi_exc+0x1c8>
10053838:	2020      	movs	r0, #32
1005383a:	4632      	mov	r2, r6
1005383c:	9b02      	ldr	r3, [sp, #8]
1005383e:	f7ff fbc9 	bl	10052fd4 <GAT_att_srv_write_err_packet>
10053842:	2086      	movs	r0, #134	@ 0x86
10053844:	9003      	str	r0, [sp, #12]
10053846:	9803      	ldr	r0, [sp, #12]
10053848:	b00d      	add	sp, #52	@ 0x34
1005384a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005384c <GAT_att_srv_write_exc>:
1005384c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005384e:	b089      	sub	sp, #36	@ 0x24
10053850:	4604      	mov	r4, r0
10053852:	7800      	ldrb	r0, [r0, #0]
10053854:	2800      	cmp	r0, #0
10053856:	d001      	beq.n	1005385c <GAT_att_srv_write_exc+0x10>
10053858:	2000      	movs	r0, #0
1005385a:	e03b      	b.n	100538d4 <GAT_att_srv_write_exc+0x88>
1005385c:	6860      	ldr	r0, [r4, #4]
1005385e:	68a1      	ldr	r1, [r4, #8]
10053860:	68c9      	ldr	r1, [r1, #12]
10053862:	9106      	str	r1, [sp, #24]
10053864:	8846      	ldrh	r6, [r0, #2]
10053866:	8981      	ldrh	r1, [r0, #12]
10053868:	1c49      	adds	r1, r1, #1
1005386a:	b289      	uxth	r1, r1
1005386c:	f7fc fbbb 	bl	1004ffe6 <ACL_pkt_read_16b>
10053870:	4605      	mov	r5, r0
10053872:	1ef1      	subs	r1, r6, #3
10053874:	7860      	ldrb	r0, [r4, #1]
10053876:	2700      	movs	r7, #0
10053878:	2852      	cmp	r0, #82	@ 0x52
1005387a:	d00c      	beq.n	10053896 <GAT_att_srv_write_exc+0x4a>
1005387c:	28d2      	cmp	r0, #210	@ 0xd2
1005387e:	d10e      	bne.n	1005389e <GAT_att_srv_write_exc+0x52>
10053880:	68a0      	ldr	r0, [r4, #8]
10053882:	8940      	ldrh	r0, [r0, #10]
10053884:	2804      	cmp	r0, #4
10053886:	d124      	bne.n	100538d2 <GAT_att_srv_write_exc+0x86>
10053888:	3e0f      	subs	r6, #15
1005388a:	2205      	movs	r2, #5
1005388c:	2701      	movs	r7, #1
1005388e:	2000      	movs	r0, #0
10053890:	9004      	str	r0, [sp, #16]
10053892:	9605      	str	r6, [sp, #20]
10053894:	e00e      	b.n	100538b4 <GAT_att_srv_write_exc+0x68>
10053896:	9105      	str	r1, [sp, #20]
10053898:	2204      	movs	r2, #4
1005389a:	9704      	str	r7, [sp, #16]
1005389c:	e00a      	b.n	100538b4 <GAT_att_srv_write_exc+0x68>
1005389e:	9105      	str	r1, [sp, #20]
100538a0:	9e06      	ldr	r6, [sp, #24]
100538a2:	89b1      	ldrh	r1, [r6, #12]
100538a4:	2213      	movs	r2, #19
100538a6:	4630      	mov	r0, r6
100538a8:	f7ff fb14 	bl	10052ed4 <ACL_pkt_write_8b>
100538ac:	2001      	movs	r0, #1
100538ae:	9004      	str	r0, [sp, #16]
100538b0:	8070      	strh	r0, [r6, #2]
100538b2:	2203      	movs	r2, #3
100538b4:	ab07      	add	r3, sp, #28
100538b6:	4620      	mov	r0, r4
100538b8:	4629      	mov	r1, r5
100538ba:	f000 f936 	bl	10053b2a <GAT_att_srv_set_attr_value_check>
100538be:	4602      	mov	r2, r0
100538c0:	a808      	add	r0, sp, #32
100538c2:	7002      	strb	r2, [r0, #0]
100538c4:	2a00      	cmp	r2, #0
100538c6:	d007      	beq.n	100538d8 <GAT_att_srv_write_exc+0x8c>
100538c8:	7860      	ldrb	r0, [r4, #1]
100538ca:	4629      	mov	r1, r5
100538cc:	9b06      	ldr	r3, [sp, #24]
100538ce:	f7ff fb81 	bl	10052fd4 <GAT_att_srv_write_err_packet>
100538d2:	2086      	movs	r0, #134	@ 0x86
100538d4:	b009      	add	sp, #36	@ 0x24
100538d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100538d8:	2f00      	cmp	r7, #0
100538da:	d008      	beq.n	100538ee <GAT_att_srv_write_exc+0xa2>
100538dc:	6861      	ldr	r1, [r4, #4]
100538de:	68a0      	ldr	r0, [r4, #8]
100538e0:	8900      	ldrh	r0, [r0, #8]
100538e2:	f011 fb90 	bl	10065006 <smp_sap_sm2_packet_data_signing_validate>
100538e6:	2800      	cmp	r0, #0
100538e8:	d001      	beq.n	100538ee <GAT_att_srv_write_exc+0xa2>
100538ea:	2200      	movs	r2, #0
100538ec:	e7ec      	b.n	100538c8 <GAT_att_srv_write_exc+0x7c>
100538ee:	6861      	ldr	r1, [r4, #4]
100538f0:	9807      	ldr	r0, [sp, #28]
100538f2:	aa08      	add	r2, sp, #32
100538f4:	f000 fdee 	bl	100544d4 <GAT_srv_attr_value_write>
100538f8:	2800      	cmp	r0, #0
100538fa:	d0eb      	beq.n	100538d4 <GAT_att_srv_write_exc+0x88>
100538fc:	2884      	cmp	r0, #132	@ 0x84
100538fe:	d112      	bne.n	10053926 <GAT_att_srv_write_exc+0xda>
10053900:	6860      	ldr	r0, [r4, #4]
10053902:	68a1      	ldr	r1, [r4, #8]
10053904:	894a      	ldrh	r2, [r1, #10]
10053906:	8909      	ldrh	r1, [r1, #8]
10053908:	9b05      	ldr	r3, [sp, #20]
1005390a:	b29b      	uxth	r3, r3
1005390c:	9500      	str	r5, [sp, #0]
1005390e:	9301      	str	r3, [sp, #4]
10053910:	9002      	str	r0, [sp, #8]
10053912:	200a      	movs	r0, #10
10053914:	9b04      	ldr	r3, [sp, #16]
10053916:	f012 fd05 	bl	10066324 <aci_gatt_srv_write_event_push_noinline>
1005391a:	2800      	cmp	r0, #0
1005391c:	d1da      	bne.n	100538d4 <GAT_att_srv_write_exc+0x88>
1005391e:	2000      	movs	r0, #0
10053920:	6060      	str	r0, [r4, #4]
10053922:	2084      	movs	r0, #132	@ 0x84
10053924:	e7d6      	b.n	100538d4 <GAT_att_srv_write_exc+0x88>
10053926:	a808      	add	r0, sp, #32
10053928:	7802      	ldrb	r2, [r0, #0]
1005392a:	e7cd      	b.n	100538c8 <GAT_att_srv_write_exc+0x7c>

1005392c <GAT_att_srv_prep_wr_exc>:
1005392c:	b570      	push	{r4, r5, r6, lr}
1005392e:	b086      	sub	sp, #24
10053930:	4604      	mov	r4, r0
10053932:	7800      	ldrb	r0, [r0, #0]
10053934:	2800      	cmp	r0, #0
10053936:	d014      	beq.n	10053962 <GAT_att_srv_prep_wr_exc+0x36>
10053938:	89a5      	ldrh	r5, [r4, #12]
1005393a:	68a0      	ldr	r0, [r4, #8]
1005393c:	88c1      	ldrh	r1, [r0, #6]
1005393e:	1f49      	subs	r1, r1, #5
10053940:	42a9      	cmp	r1, r5
10053942:	d800      	bhi.n	10053946 <GAT_att_srv_prep_wr_exc+0x1a>
10053944:	460d      	mov	r5, r1
10053946:	b2aa      	uxth	r2, r5
10053948:	6923      	ldr	r3, [r4, #16]
1005394a:	68c0      	ldr	r0, [r0, #12]
1005394c:	8981      	ldrh	r1, [r0, #12]
1005394e:	1d49      	adds	r1, r1, #5
10053950:	b289      	uxth	r1, r1
10053952:	f7fc fb61 	bl	10050018 <ACL_pkt_write>
10053956:	1d68      	adds	r0, r5, #5
10053958:	68a1      	ldr	r1, [r4, #8]
1005395a:	68c9      	ldr	r1, [r1, #12]
1005395c:	8048      	strh	r0, [r1, #2]
1005395e:	2000      	movs	r0, #0
10053960:	e040      	b.n	100539e4 <GAT_att_srv_prep_wr_exc+0xb8>
10053962:	6860      	ldr	r0, [r4, #4]
10053964:	8981      	ldrh	r1, [r0, #12]
10053966:	1c49      	adds	r1, r1, #1
10053968:	b289      	uxth	r1, r1
1005396a:	f7fc fb3c 	bl	1004ffe6 <ACL_pkt_read_16b>
1005396e:	4605      	mov	r5, r0
10053970:	2203      	movs	r2, #3
10053972:	ab05      	add	r3, sp, #20
10053974:	4620      	mov	r0, r4
10053976:	4629      	mov	r1, r5
10053978:	f000 f8d7 	bl	10053b2a <GAT_att_srv_set_attr_value_check>
1005397c:	2800      	cmp	r0, #0
1005397e:	d008      	beq.n	10053992 <GAT_att_srv_prep_wr_exc+0x66>
10053980:	4602      	mov	r2, r0
10053982:	68a0      	ldr	r0, [r4, #8]
10053984:	68c3      	ldr	r3, [r0, #12]
10053986:	2016      	movs	r0, #22
10053988:	4629      	mov	r1, r5
1005398a:	f7ff fb23 	bl	10052fd4 <GAT_att_srv_write_err_packet>
1005398e:	2086      	movs	r0, #134	@ 0x86
10053990:	e028      	b.n	100539e4 <GAT_att_srv_prep_wr_exc+0xb8>
10053992:	6860      	ldr	r0, [r4, #4]
10053994:	8981      	ldrh	r1, [r0, #12]
10053996:	1cc9      	adds	r1, r1, #3
10053998:	b289      	uxth	r1, r1
1005399a:	f7fc fb24 	bl	1004ffe6 <ACL_pkt_read_16b>
1005399e:	4606      	mov	r6, r0
100539a0:	6860      	ldr	r0, [r4, #4]
100539a2:	68a1      	ldr	r1, [r4, #8]
100539a4:	894a      	ldrh	r2, [r1, #10]
100539a6:	8909      	ldrh	r1, [r1, #8]
100539a8:	8843      	ldrh	r3, [r0, #2]
100539aa:	1f5b      	subs	r3, r3, #5
100539ac:	b29b      	uxth	r3, r3
100539ae:	9600      	str	r6, [sp, #0]
100539b0:	9301      	str	r3, [sp, #4]
100539b2:	9002      	str	r0, [sp, #8]
100539b4:	200a      	movs	r0, #10
100539b6:	462b      	mov	r3, r5
100539b8:	f012 ff1c 	bl	100667f4 <aci_att_srv_prepare_write_req_event_push_noinline>
100539bc:	2800      	cmp	r0, #0
100539be:	d111      	bne.n	100539e4 <GAT_att_srv_prep_wr_exc+0xb8>
100539c0:	ab03      	add	r3, sp, #12
100539c2:	705d      	strb	r5, [r3, #1]
100539c4:	0a28      	lsrs	r0, r5, #8
100539c6:	7098      	strb	r0, [r3, #2]
100539c8:	70de      	strb	r6, [r3, #3]
100539ca:	2017      	movs	r0, #23
100539cc:	7018      	strb	r0, [r3, #0]
100539ce:	0a30      	lsrs	r0, r6, #8
100539d0:	7118      	strb	r0, [r3, #4]
100539d2:	68a0      	ldr	r0, [r4, #8]
100539d4:	68c0      	ldr	r0, [r0, #12]
100539d6:	8981      	ldrh	r1, [r0, #12]
100539d8:	2205      	movs	r2, #5
100539da:	f7fc fb1d 	bl	10050018 <ACL_pkt_write>
100539de:	2000      	movs	r0, #0
100539e0:	6060      	str	r0, [r4, #4]
100539e2:	2084      	movs	r0, #132	@ 0x84
100539e4:	b006      	add	sp, #24
100539e6:	bd70      	pop	{r4, r5, r6, pc}

100539e8 <GAT_att_srv_exec_wr_exc>:
100539e8:	b510      	push	{r4, lr}
100539ea:	4604      	mov	r4, r0
100539ec:	7800      	ldrb	r0, [r0, #0]
100539ee:	2800      	cmp	r0, #0
100539f0:	d001      	beq.n	100539f6 <GAT_att_srv_exec_wr_exc+0xe>
100539f2:	2000      	movs	r0, #0
100539f4:	bd10      	pop	{r4, pc}
100539f6:	6860      	ldr	r0, [r4, #4]
100539f8:	8981      	ldrh	r1, [r0, #12]
100539fa:	1c49      	adds	r1, r1, #1
100539fc:	b289      	uxth	r1, r1
100539fe:	f000 f884 	bl	10053b0a <ACL_pkt_read_8b>
10053a02:	4603      	mov	r3, r0
10053a04:	68a0      	ldr	r0, [r4, #8]
10053a06:	8942      	ldrh	r2, [r0, #10]
10053a08:	8901      	ldrh	r1, [r0, #8]
10053a0a:	2002      	movs	r0, #2
10053a0c:	f012 ff20 	bl	10066850 <aci_att_srv_exec_write_req_event_push_noinline>
10053a10:	2800      	cmp	r0, #0
10053a12:	d000      	beq.n	10053a16 <GAT_att_srv_exec_wr_exc+0x2e>
10053a14:	bd10      	pop	{r4, pc}
10053a16:	68a0      	ldr	r0, [r4, #8]
10053a18:	68c0      	ldr	r0, [r0, #12]
10053a1a:	8981      	ldrh	r1, [r0, #12]
10053a1c:	2219      	movs	r2, #25
10053a1e:	f7ff fa59 	bl	10052ed4 <ACL_pkt_write_8b>
10053a22:	68a0      	ldr	r0, [r4, #8]
10053a24:	68c0      	ldr	r0, [r0, #12]
10053a26:	2101      	movs	r1, #1
10053a28:	8041      	strh	r1, [r0, #2]
10053a2a:	2084      	movs	r0, #132	@ 0x84
10053a2c:	bd10      	pop	{r4, pc}

10053a2e <GAT_att_srv_confirm_exc>:
10053a2e:	b5b0      	push	{r4, r5, r7, lr}
10053a30:	4605      	mov	r5, r0
10053a32:	6880      	ldr	r0, [r0, #8]
10053a34:	8942      	ldrh	r2, [r0, #10]
10053a36:	8901      	ldrh	r1, [r0, #8]
10053a38:	2042      	movs	r0, #66	@ 0x42
10053a3a:	f012 fc07 	bl	1006624c <aci_gatt_srv_confirmation_event_push_noinline>
10053a3e:	4604      	mov	r4, r0
10053a40:	2800      	cmp	r0, #0
10053a42:	d110      	bne.n	10053a66 <GAT_att_srv_confirm_exc+0x38>
10053a44:	68a8      	ldr	r0, [r5, #8]
10053a46:	8942      	ldrh	r2, [r0, #10]
10053a48:	8901      	ldrh	r1, [r0, #8]
10053a4a:	2001      	movs	r0, #1
10053a4c:	f7fe fee4 	bl	10052818 <GAT_att_cmn_stop_timer>
10053a50:	68a8      	ldr	r0, [r5, #8]
10053a52:	8881      	ldrh	r1, [r0, #4]
10053a54:	064a      	lsls	r2, r1, #25
10053a56:	d503      	bpl.n	10053a60 <GAT_att_srv_confirm_exc+0x32>
10053a58:	f000 fe80 	bl	1005475c <GAT_srv_set_change_aware>
10053a5c:	68a8      	ldr	r0, [r5, #8]
10053a5e:	8881      	ldrh	r1, [r0, #4]
10053a60:	2202      	movs	r2, #2
10053a62:	4391      	bics	r1, r2
10053a64:	8081      	strh	r1, [r0, #4]
10053a66:	4620      	mov	r0, r4
10053a68:	bdb0      	pop	{r4, r5, r7, pc}

10053a6a <GAT_att_srv_get_handle_range>:
10053a6a:	b570      	push	{r4, r5, r6, lr}
10053a6c:	4614      	mov	r4, r2
10053a6e:	460d      	mov	r5, r1
10053a70:	4606      	mov	r6, r0
10053a72:	8980      	ldrh	r0, [r0, #12]
10053a74:	1c40      	adds	r0, r0, #1
10053a76:	b281      	uxth	r1, r0
10053a78:	4630      	mov	r0, r6
10053a7a:	f7fc fab4 	bl	1004ffe6 <ACL_pkt_read_16b>
10053a7e:	8028      	strh	r0, [r5, #0]
10053a80:	89b0      	ldrh	r0, [r6, #12]
10053a82:	1cc0      	adds	r0, r0, #3
10053a84:	b281      	uxth	r1, r0
10053a86:	4630      	mov	r0, r6
10053a88:	f7fc faad 	bl	1004ffe6 <ACL_pkt_read_16b>
10053a8c:	8020      	strh	r0, [r4, #0]
10053a8e:	bd70      	pop	{r4, r5, r6, pc}

10053a90 <GAT_att_srv_value_read>:
10053a90:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10053a92:	461f      	mov	r7, r3
10053a94:	4606      	mov	r6, r0
10053a96:	9d08      	ldr	r5, [sp, #32]
10053a98:	2400      	movs	r4, #0
10053a9a:	702c      	strb	r4, [r5, #0]
10053a9c:	7800      	ldrb	r0, [r0, #0]
10053a9e:	2801      	cmp	r0, #1
10053aa0:	d107      	bne.n	10053ab2 <GAT_att_srv_value_read+0x22>
10053aa2:	6930      	ldr	r0, [r6, #16]
10053aa4:	2800      	cmp	r0, #0
10053aa6:	d01f      	beq.n	10053ae8 <GAT_att_srv_value_read+0x58>
10053aa8:	360c      	adds	r6, #12
10053aaa:	603e      	str	r6, [r7, #0]
10053aac:	2000      	movs	r0, #0
10053aae:	7028      	strb	r0, [r5, #0]
10053ab0:	e029      	b.n	10053b06 <GAT_att_srv_value_read+0x76>
10053ab2:	9202      	str	r2, [sp, #8]
10053ab4:	68b0      	ldr	r0, [r6, #8]
10053ab6:	8900      	ldrh	r0, [r0, #8]
10053ab8:	9101      	str	r1, [sp, #4]
10053aba:	463a      	mov	r2, r7
10053abc:	462b      	mov	r3, r5
10053abe:	f000 fb7a 	bl	100541b6 <GAT_srv_attr_value_read>
10053ac2:	2800      	cmp	r0, #0
10053ac4:	d012      	beq.n	10053aec <GAT_att_srv_value_read+0x5c>
10053ac6:	2884      	cmp	r0, #132	@ 0x84
10053ac8:	d11d      	bne.n	10053b06 <GAT_att_srv_value_read+0x76>
10053aca:	9801      	ldr	r0, [sp, #4]
10053acc:	8843      	ldrh	r3, [r0, #2]
10053ace:	68b0      	ldr	r0, [r6, #8]
10053ad0:	8942      	ldrh	r2, [r0, #10]
10053ad2:	8901      	ldrh	r1, [r0, #8]
10053ad4:	9802      	ldr	r0, [sp, #8]
10053ad6:	9000      	str	r0, [sp, #0]
10053ad8:	2002      	movs	r0, #2
10053ada:	f012 fbe9 	bl	100662b0 <aci_gatt_srv_read_event_push_noinline>
10053ade:	2800      	cmp	r0, #0
10053ae0:	d111      	bne.n	10053b06 <GAT_att_srv_value_read+0x76>
10053ae2:	207b      	movs	r0, #123	@ 0x7b
10053ae4:	43c0      	mvns	r0, r0
10053ae6:	e00e      	b.n	10053b06 <GAT_att_srv_value_read+0x76>
10053ae8:	200e      	movs	r0, #14
10053aea:	e005      	b.n	10053af8 <GAT_att_srv_value_read+0x68>
10053aec:	6838      	ldr	r0, [r7, #0]
10053aee:	8801      	ldrh	r1, [r0, #0]
10053af0:	9a02      	ldr	r2, [sp, #8]
10053af2:	4291      	cmp	r1, r2
10053af4:	d203      	bcs.n	10053afe <GAT_att_srv_value_read+0x6e>
10053af6:	2007      	movs	r0, #7
10053af8:	7028      	strb	r0, [r5, #0]
10053afa:	2086      	movs	r0, #134	@ 0x86
10053afc:	e003      	b.n	10053b06 <GAT_att_srv_value_read+0x76>
10053afe:	6841      	ldr	r1, [r0, #4]
10053b00:	1889      	adds	r1, r1, r2
10053b02:	6041      	str	r1, [r0, #4]
10053b04:	4620      	mov	r0, r4
10053b06:	b2c0      	uxtb	r0, r0
10053b08:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10053b0a <ACL_pkt_read_8b>:
10053b0a:	b51c      	push	{r2, r3, r4, lr}
10053b0c:	291f      	cmp	r1, #31
10053b0e:	d803      	bhi.n	10053b18 <ACL_pkt_read_8b+0xe>
10053b10:	aa01      	add	r2, sp, #4
10053b12:	8011      	strh	r1, [r2, #0]
10053b14:	6840      	ldr	r0, [r0, #4]
10053b16:	e005      	b.n	10053b24 <ACL_pkt_read_8b+0x1a>
10053b18:	6840      	ldr	r0, [r0, #4]
10053b1a:	ac01      	add	r4, sp, #4
10053b1c:	4622      	mov	r2, r4
10053b1e:	f00f fa28 	bl	10062f72 <Mem_Buff_get_buff_off>
10053b22:	8821      	ldrh	r1, [r4, #0]
10053b24:	1840      	adds	r0, r0, r1
10053b26:	7900      	ldrb	r0, [r0, #4]
10053b28:	bd1c      	pop	{r2, r3, r4, pc}

10053b2a <GAT_att_srv_set_attr_value_check>:
10053b2a:	b5f0      	push	{r4, r5, r6, r7, lr}
10053b2c:	b085      	sub	sp, #20
10053b2e:	461e      	mov	r6, r3
10053b30:	4614      	mov	r4, r2
10053b32:	460f      	mov	r7, r1
10053b34:	4605      	mov	r5, r0
10053b36:	a801      	add	r0, sp, #4
10053b38:	8101      	strh	r1, [r0, #8]
10053b3a:	7102      	strb	r2, [r0, #4]
10053b3c:	68a9      	ldr	r1, [r5, #8]
10053b3e:	9101      	str	r1, [sp, #4]
10053b40:	f000 fe1a 	bl	10054778 <GAT_srv_check_change_aware>
10053b44:	2886      	cmp	r0, #134	@ 0x86
10053b46:	d101      	bne.n	10053b4c <GAT_att_srv_set_attr_value_check+0x22>
10053b48:	2012      	movs	r0, #18
10053b4a:	e00c      	b.n	10053b66 <GAT_att_srv_set_attr_value_check+0x3c>
10053b4c:	4638      	mov	r0, r7
10053b4e:	f013 fd2f 	bl	100675b0 <GAT_att_db_find_by_handle>
10053b52:	6030      	str	r0, [r6, #0]
10053b54:	2800      	cmp	r0, #0
10053b56:	d005      	beq.n	10053b64 <GAT_att_srv_set_attr_value_check+0x3a>
10053b58:	68a9      	ldr	r1, [r5, #8]
10053b5a:	8909      	ldrh	r1, [r1, #8]
10053b5c:	4622      	mov	r2, r4
10053b5e:	f000 fb43 	bl	100541e8 <GAT_srv_check_perms>
10053b62:	e000      	b.n	10053b66 <GAT_att_srv_set_attr_value_check+0x3c>
10053b64:	2001      	movs	r0, #1
10053b66:	b005      	add	sp, #20
10053b68:	bdf0      	pop	{r4, r5, r6, r7, pc}

10053b6a <GAT_clt_read_chr_by_uuid>:
10053b6a:	b510      	push	{r4, lr}
10053b6c:	b08a      	sub	sp, #40	@ 0x28
10053b6e:	ac01      	add	r4, sp, #4
10053b70:	8163      	strh	r3, [r4, #10]
10053b72:	8122      	strh	r2, [r4, #8]
10053b74:	2209      	movs	r2, #9
10053b76:	71a2      	strb	r2, [r4, #6]
10053b78:	80a1      	strh	r1, [r4, #4]
10053b7a:	8060      	strh	r0, [r4, #2]
10053b7c:	4620      	mov	r0, r4
10053b7e:	300c      	adds	r0, #12
10053b80:	990c      	ldr	r1, [sp, #48]	@ 0x30
10053b82:	2214      	movs	r2, #20
10053b84:	f7f0 ff0e 	bl	100449a4 <BLEPLAT_MemCpy>
10053b88:	4620      	mov	r0, r4
10053b8a:	f014 f979 	bl	10067e80 <GAT_clt_start_proc>
10053b8e:	b00a      	add	sp, #40	@ 0x28
10053b90:	bd10      	pop	{r4, pc}
	...

10053b94 <GAT_srv_init>:
10053b94:	b580      	push	{r7, lr}
10053b96:	4806      	ldr	r0, [pc, #24]	@ (10053bb0 <__arm_cp.0_0>)
10053b98:	8900      	ldrh	r0, [r0, #8]
10053b9a:	3013      	adds	r0, #19
10053b9c:	b280      	uxth	r0, r0
10053b9e:	f013 fca3 	bl	100674e8 <GAT_att_db_init>
10053ba2:	4804      	ldr	r0, [pc, #16]	@ (10053bb4 <__arm_cp.0_1>)
10053ba4:	6800      	ldr	r0, [r0, #0]
10053ba6:	215c      	movs	r1, #92	@ 0x5c
10053ba8:	2201      	movs	r2, #1
10053baa:	5442      	strb	r2, [r0, r1]
10053bac:	bd80      	pop	{r7, pc}
10053bae:	46c0      	nop			@ (mov r8, r8)

10053bb0 <__arm_cp.0_0>:
10053bb0:	200008a8 	.word	0x200008a8

10053bb4 <__arm_cp.0_1>:
10053bb4:	20000848 	.word	0x20000848

10053bb8 <GAT_srv_connection>:
10053bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
10053bba:	b0a1      	sub	sp, #132	@ 0x84
10053bbc:	4604      	mov	r4, r0
10053bbe:	f000 f89b 	bl	10053cf8 <GAT_srv_is_bonded>
10053bc2:	2801      	cmp	r0, #1
10053bc4:	d114      	bne.n	10053bf0 <GAT_srv_connection+0x38>
10053bc6:	a807      	add	r0, sp, #28
10053bc8:	4945      	ldr	r1, [pc, #276]	@ (10053ce0 <__arm_cp.1_0>)
10053bca:	2514      	movs	r5, #20
10053bcc:	462a      	mov	r2, r5
10053bce:	f018 f874 	bl	1006bcba <__aeabi_memcpy>
10053bd2:	a802      	add	r0, sp, #8
10053bd4:	4943      	ldr	r1, [pc, #268]	@ (10053ce4 <__arm_cp.1_1>)
10053bd6:	462a      	mov	r2, r5
10053bd8:	f018 f86f 	bl	1006bcba <__aeabi_memcpy>
10053bdc:	2044      	movs	r0, #68	@ 0x44
10053bde:	900f      	str	r0, [sp, #60]	@ 0x3c
10053be0:	2101      	movs	r1, #1
10053be2:	aa0d      	add	r2, sp, #52	@ 0x34
10053be4:	ab0c      	add	r3, sp, #48	@ 0x30
10053be6:	4620      	mov	r0, r4
10053be8:	f011 f96f 	bl	10064eca <smp_sap_get_remote_address_check_addr_type>
10053bec:	2800      	cmp	r0, #0
10053bee:	d001      	beq.n	10053bf4 <GAT_srv_connection+0x3c>
10053bf0:	b021      	add	sp, #132	@ 0x84
10053bf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10053bf4:	a80c      	add	r0, sp, #48	@ 0x30
10053bf6:	7801      	ldrb	r1, [r0, #0]
10053bf8:	a80d      	add	r0, sp, #52	@ 0x34
10053bfa:	aa0f      	add	r2, sp, #60	@ 0x3c
10053bfc:	ab10      	add	r3, sp, #64	@ 0x40
10053bfe:	f00f fdda 	bl	100637b6 <SDB_sap_read_peer_bonded_gatt_client_data>
10053c02:	2800      	cmp	r0, #0
10053c04:	d1f4      	bne.n	10053bf0 <GAT_srv_connection+0x38>
10053c06:	980f      	ldr	r0, [sp, #60]	@ 0x3c
10053c08:	2844      	cmp	r0, #68	@ 0x44
10053c0a:	d8f1      	bhi.n	10053bf0 <GAT_srv_connection+0x38>
10053c0c:	2001      	movs	r0, #1
10053c0e:	4d36      	ldr	r5, [pc, #216]	@ (10053ce8 <__arm_cp.1_2>)
10053c10:	aa02      	add	r2, sp, #8
10053c12:	4629      	mov	r1, r5
10053c14:	f000 fe0c 	bl	10054830 <GAT_srv_find_by_type_attr_p>
10053c18:	2800      	cmp	r0, #0
10053c1a:	d010      	beq.n	10053c3e <GAT_srv_connection+0x86>
10053c1c:	4606      	mov	r6, r0
10053c1e:	4620      	mov	r0, r4
10053c20:	f7fe fe32 	bl	10052888 <GAT_att_cmn_get_conn_index>
10053c24:	a910      	add	r1, sp, #64	@ 0x40
10053c26:	7c0a      	ldrb	r2, [r1, #16]
10053c28:	4930      	ldr	r1, [pc, #192]	@ (10053cec <__arm_cp.1_3>)
10053c2a:	7ac9      	ldrb	r1, [r1, #11]
10053c2c:	6873      	ldr	r3, [r6, #4]
10053c2e:	6a1b      	ldr	r3, [r3, #32]
10053c30:	689b      	ldr	r3, [r3, #8]
10053c32:	9300      	str	r3, [sp, #0]
10053c34:	0849      	lsrs	r1, r1, #1
10053c36:	1c4b      	adds	r3, r1, #1
10053c38:	2104      	movs	r1, #4
10053c3a:	f000 fd08 	bl	1005464e <GAT_srv_set_zip_val>
10053c3e:	482c      	ldr	r0, [pc, #176]	@ (10053cf0 <__arm_cp.1_4>)
10053c40:	6801      	ldr	r1, [r0, #0]
10053c42:	3183      	adds	r1, #131	@ 0x83
10053c44:	a810      	add	r0, sp, #64	@ 0x40
10053c46:	2210      	movs	r2, #16
10053c48:	f7f0 fecc 	bl	100449e4 <BLEPLAT_MemCmp>
10053c4c:	2800      	cmp	r0, #0
10053c4e:	d01f      	beq.n	10053c90 <GAT_srv_connection+0xd8>
10053c50:	2001      	movs	r0, #1
10053c52:	aa07      	add	r2, sp, #28
10053c54:	4629      	mov	r1, r5
10053c56:	f000 fdeb 	bl	10054830 <GAT_srv_find_by_type_attr_p>
10053c5a:	2800      	cmp	r0, #0
10053c5c:	d0c8      	beq.n	10053bf0 <GAT_srv_connection+0x38>
10053c5e:	f000 fe3f 	bl	100548e0 <GAT_srv_get_cccd_attr_p>
10053c62:	2800      	cmp	r0, #0
10053c64:	d0c4      	beq.n	10053bf0 <GAT_srv_connection+0x38>
10053c66:	4605      	mov	r5, r0
10053c68:	2104      	movs	r1, #4
10053c6a:	4620      	mov	r0, r4
10053c6c:	f7fe fd62 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10053c70:	8881      	ldrh	r1, [r0, #4]
10053c72:	2240      	movs	r2, #64	@ 0x40
10053c74:	430a      	orrs	r2, r1
10053c76:	8082      	strh	r2, [r0, #4]
10053c78:	a810      	add	r0, sp, #64	@ 0x40
10053c7a:	7c42      	ldrb	r2, [r0, #17]
10053c7c:	4620      	mov	r0, r4
10053c7e:	4629      	mov	r1, r5
10053c80:	f000 fd26 	bl	100546d0 <GAT_srv_set_cccd_val>
10053c84:	200b      	movs	r0, #11
10053c86:	f011 fad3 	bl	10065230 <tsk_notify_idx>
10053c8a:	f7ee fe24 	bl	100428d6 <BLE_STACK_ProcessRequest>
10053c8e:	e7af      	b.n	10053bf0 <GAT_srv_connection+0x38>
10053c90:	2001      	movs	r0, #1
10053c92:	f013 fcb5 	bl	10067600 <GAT_att_db_find_from_handle>
10053c96:	4606      	mov	r6, r0
10053c98:	ad10      	add	r5, sp, #64	@ 0x40
10053c9a:	3512      	adds	r5, #18
10053c9c:	2700      	movs	r7, #0
10053c9e:	2e00      	cmp	r6, #0
10053ca0:	d0a6      	beq.n	10053bf0 <GAT_srv_connection+0x38>
10053ca2:	b2b8      	uxth	r0, r7
10053ca4:	2863      	cmp	r0, #99	@ 0x63
10053ca6:	d8a3      	bhi.n	10053bf0 <GAT_srv_connection+0x38>
10053ca8:	7831      	ldrb	r1, [r6, #0]
10053caa:	2904      	cmp	r1, #4
10053cac:	d112      	bne.n	10053cd4 <GAT_srv_connection+0x11c>
10053cae:	6871      	ldr	r1, [r6, #4]
10053cb0:	7d0a      	ldrb	r2, [r1, #20]
10053cb2:	2a10      	cmp	r2, #16
10053cb4:	d10e      	bne.n	10053cd4 <GAT_srv_connection+0x11c>
10053cb6:	8a09      	ldrh	r1, [r1, #16]
10053cb8:	4a0e      	ldr	r2, [pc, #56]	@ (10053cf4 <__arm_cp.1_5>)
10053cba:	4291      	cmp	r1, r2
10053cbc:	d10a      	bne.n	10053cd4 <GAT_srv_connection+0x11c>
10053cbe:	2102      	movs	r1, #2
10053cc0:	2232      	movs	r2, #50	@ 0x32
10053cc2:	462b      	mov	r3, r5
10053cc4:	f000 fcb0 	bl	10054628 <GAT_srv_get_zip_val>
10053cc8:	4602      	mov	r2, r0
10053cca:	4620      	mov	r0, r4
10053ccc:	4631      	mov	r1, r6
10053cce:	f000 fcff 	bl	100546d0 <GAT_srv_set_cccd_val>
10053cd2:	1c7f      	adds	r7, r7, #1
10053cd4:	4630      	mov	r0, r6
10053cd6:	f013 fcf5 	bl	100676c4 <GAT_att_db_get_next>
10053cda:	4606      	mov	r6, r0
10053cdc:	e7df      	b.n	10053c9e <GAT_srv_connection+0xe6>
10053cde:	46c0      	nop			@ (mov r8, r8)

10053ce0 <__arm_cp.1_0>:
10053ce0:	1006e958 	.word	0x1006e958

10053ce4 <__arm_cp.1_1>:
10053ce4:	1006e96c 	.word	0x1006e96c

10053ce8 <__arm_cp.1_2>:
10053ce8:	0000ffff 	.word	0x0000ffff

10053cec <__arm_cp.1_3>:
10053cec:	200008a8 	.word	0x200008a8

10053cf0 <__arm_cp.1_4>:
10053cf0:	20000848 	.word	0x20000848

10053cf4 <__arm_cp.1_5>:
10053cf4:	00002902 	.word	0x00002902

10053cf8 <GAT_srv_is_bonded>:
10053cf8:	b580      	push	{r7, lr}
10053cfa:	f011 f91c 	bl	10064f36 <smp_sap_check_is_peer_device_bonded>
10053cfe:	4241      	negs	r1, r0
10053d00:	4148      	adcs	r0, r1
10053d02:	bd80      	pop	{r7, pc}

10053d04 <GAT_srv_bearer_close>:
10053d04:	b5f0      	push	{r4, r5, r6, r7, lr}
10053d06:	b0a1      	sub	sp, #132	@ 0x84
10053d08:	2904      	cmp	r1, #4
10053d0a:	d000      	beq.n	10053d0e <GAT_srv_bearer_close+0xa>
10053d0c:	e0de      	b.n	10053ecc <GAT_srv_bearer_close+0x1c8>
10053d0e:	4607      	mov	r7, r0
10053d10:	f7ff fff2 	bl	10053cf8 <GAT_srv_is_bonded>
10053d14:	4c6e      	ldr	r4, [pc, #440]	@ (10053ed0 <__arm_cp.3_0>)
10053d16:	4e6f      	ldr	r6, [pc, #444]	@ (10053ed4 <__arm_cp.3_1>)
10053d18:	2801      	cmp	r0, #1
10053d1a:	d000      	beq.n	10053d1e <GAT_srv_bearer_close+0x1a>
10053d1c:	e0a0      	b.n	10053e60 <GAT_srv_bearer_close+0x15c>
10053d1e:	ad0b      	add	r5, sp, #44	@ 0x2c
10053d20:	496d      	ldr	r1, [pc, #436]	@ (10053ed8 <__arm_cp.3_2>)
10053d22:	2214      	movs	r2, #20
10053d24:	4628      	mov	r0, r5
10053d26:	f017 ffc8 	bl	1006bcba <__aeabi_memcpy>
10053d2a:	a810      	add	r0, sp, #64	@ 0x40
10053d2c:	4634      	mov	r4, r6
10053d2e:	2600      	movs	r6, #0
10053d30:	2244      	movs	r2, #68	@ 0x44
10053d32:	4631      	mov	r1, r6
10053d34:	f7f0 fe46 	bl	100449c4 <BLEPLAT_MemSet>
10053d38:	2001      	movs	r0, #1
10053d3a:	4621      	mov	r1, r4
10053d3c:	462a      	mov	r2, r5
10053d3e:	f000 fd77 	bl	10054830 <GAT_srv_find_by_type_attr_p>
10053d42:	2800      	cmp	r0, #0
10053d44:	d00f      	beq.n	10053d66 <GAT_srv_bearer_close+0x62>
10053d46:	4604      	mov	r4, r0
10053d48:	4638      	mov	r0, r7
10053d4a:	f7fe fd9d 	bl	10052888 <GAT_att_cmn_get_conn_index>
10053d4e:	6861      	ldr	r1, [r4, #4]
10053d50:	6a09      	ldr	r1, [r1, #32]
10053d52:	688b      	ldr	r3, [r1, #8]
10053d54:	4961      	ldr	r1, [pc, #388]	@ (10053edc <__arm_cp.3_3>)
10053d56:	7ac9      	ldrb	r1, [r1, #11]
10053d58:	0849      	lsrs	r1, r1, #1
10053d5a:	1c4a      	adds	r2, r1, #1
10053d5c:	2104      	movs	r1, #4
10053d5e:	f000 fc63 	bl	10054628 <GAT_srv_get_zip_val>
10053d62:	a910      	add	r1, sp, #64	@ 0x40
10053d64:	7408      	strb	r0, [r1, #16]
10053d66:	2104      	movs	r1, #4
10053d68:	9704      	str	r7, [sp, #16]
10053d6a:	4638      	mov	r0, r7
10053d6c:	f7fe fce2 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10053d70:	a910      	add	r1, sp, #64	@ 0x40
10053d72:	7c09      	ldrb	r1, [r1, #16]
10053d74:	2901      	cmp	r1, #1
10053d76:	d103      	bne.n	10053d80 <GAT_srv_bearer_close+0x7c>
10053d78:	8880      	ldrh	r0, [r0, #4]
10053d7a:	0600      	lsls	r0, r0, #24
10053d7c:	0f80      	lsrs	r0, r0, #30
10053d7e:	d106      	bne.n	10053d8e <GAT_srv_bearer_close+0x8a>
10053d80:	4857      	ldr	r0, [pc, #348]	@ (10053ee0 <__arm_cp.3_4>)
10053d82:	6801      	ldr	r1, [r0, #0]
10053d84:	3183      	adds	r1, #131	@ 0x83
10053d86:	a810      	add	r0, sp, #64	@ 0x40
10053d88:	2210      	movs	r2, #16
10053d8a:	f7f0 fe0b 	bl	100449a4 <BLEPLAT_MemCpy>
10053d8e:	2001      	movs	r0, #1
10053d90:	9003      	str	r0, [sp, #12]
10053d92:	f013 fc35 	bl	10067600 <GAT_att_db_find_from_handle>
10053d96:	4605      	mov	r5, r0
10053d98:	a810      	add	r0, sp, #64	@ 0x40
10053d9a:	3012      	adds	r0, #18
10053d9c:	9002      	str	r0, [sp, #8]
10053d9e:	9605      	str	r6, [sp, #20]
10053da0:	4c4b      	ldr	r4, [pc, #300]	@ (10053ed0 <__arm_cp.3_0>)
10053da2:	2d00      	cmp	r5, #0
10053da4:	d034      	beq.n	10053e10 <GAT_srv_bearer_close+0x10c>
10053da6:	b2b7      	uxth	r7, r6
10053da8:	2f63      	cmp	r7, #99	@ 0x63
10053daa:	d831      	bhi.n	10053e10 <GAT_srv_bearer_close+0x10c>
10053dac:	7828      	ldrb	r0, [r5, #0]
10053dae:	2804      	cmp	r0, #4
10053db0:	d00b      	beq.n	10053dca <GAT_srv_bearer_close+0xc6>
10053db2:	2802      	cmp	r0, #2
10053db4:	d127      	bne.n	10053e06 <GAT_srv_bearer_close+0x102>
10053db6:	6868      	ldr	r0, [r5, #4]
10053db8:	7d01      	ldrb	r1, [r0, #20]
10053dba:	2910      	cmp	r1, #16
10053dbc:	d121      	bne.n	10053e02 <GAT_srv_bearer_close+0xfe>
10053dbe:	8a00      	ldrh	r0, [r0, #16]
10053dc0:	4949      	ldr	r1, [pc, #292]	@ (10053ee8 <__arm_cp.3_6>)
10053dc2:	4288      	cmp	r0, r1
10053dc4:	d11d      	bne.n	10053e02 <GAT_srv_bearer_close+0xfe>
10053dc6:	9803      	ldr	r0, [sp, #12]
10053dc8:	e01c      	b.n	10053e04 <GAT_srv_bearer_close+0x100>
10053dca:	6868      	ldr	r0, [r5, #4]
10053dcc:	7d01      	ldrb	r1, [r0, #20]
10053dce:	2910      	cmp	r1, #16
10053dd0:	d119      	bne.n	10053e06 <GAT_srv_bearer_close+0x102>
10053dd2:	8a00      	ldrh	r0, [r0, #16]
10053dd4:	42a0      	cmp	r0, r4
10053dd6:	d116      	bne.n	10053e06 <GAT_srv_bearer_close+0x102>
10053dd8:	9804      	ldr	r0, [sp, #16]
10053dda:	4629      	mov	r1, r5
10053ddc:	f000 fdb0 	bl	10054940 <GAT_srv_get_cccd_val>
10053de0:	4604      	mov	r4, r0
10053de2:	9802      	ldr	r0, [sp, #8]
10053de4:	9000      	str	r0, [sp, #0]
10053de6:	b2e2      	uxtb	r2, r4
10053de8:	2102      	movs	r1, #2
10053dea:	2332      	movs	r3, #50	@ 0x32
10053dec:	4638      	mov	r0, r7
10053dee:	f000 fc2e 	bl	1005464e <GAT_srv_set_zip_val>
10053df2:	9805      	ldr	r0, [sp, #20]
10053df4:	2801      	cmp	r0, #1
10053df6:	d101      	bne.n	10053dfc <GAT_srv_bearer_close+0xf8>
10053df8:	a810      	add	r0, sp, #64	@ 0x40
10053dfa:	7444      	strb	r4, [r0, #17]
10053dfc:	1c76      	adds	r6, r6, #1
10053dfe:	4c34      	ldr	r4, [pc, #208]	@ (10053ed0 <__arm_cp.3_0>)
10053e00:	e001      	b.n	10053e06 <GAT_srv_bearer_close+0x102>
10053e02:	2000      	movs	r0, #0
10053e04:	9005      	str	r0, [sp, #20]
10053e06:	4628      	mov	r0, r5
10053e08:	f013 fc5c 	bl	100676c4 <GAT_att_db_get_next>
10053e0c:	4605      	mov	r5, r0
10053e0e:	e7c8      	b.n	10053da2 <GAT_srv_bearer_close+0x9e>
10053e10:	2101      	movs	r1, #1
10053e12:	aa09      	add	r2, sp, #36	@ 0x24
10053e14:	ab08      	add	r3, sp, #32
10053e16:	9f04      	ldr	r7, [sp, #16]
10053e18:	4638      	mov	r0, r7
10053e1a:	f011 f856 	bl	10064eca <smp_sap_get_remote_address_check_addr_type>
10053e1e:	2800      	cmp	r0, #0
10053e20:	d11c      	bne.n	10053e5c <GAT_srv_bearer_close+0x158>
10053e22:	b2b0      	uxth	r0, r6
10053e24:	0040      	lsls	r0, r0, #1
10053e26:	492f      	ldr	r1, [pc, #188]	@ (10053ee4 <__arm_cp.3_5>)
10053e28:	1840      	adds	r0, r0, r1
10053e2a:	0880      	lsrs	r0, r0, #2
10053e2c:	3013      	adds	r0, #19
10053e2e:	b282      	uxth	r2, r0
10053e30:	a808      	add	r0, sp, #32
10053e32:	7801      	ldrb	r1, [r0, #0]
10053e34:	a809      	add	r0, sp, #36	@ 0x24
10053e36:	ab10      	add	r3, sp, #64	@ 0x40
10053e38:	f00f fc8b 	bl	10063752 <SDB_sap_write_peer_bonded_gatt_client_data>
10053e3c:	2800      	cmp	r0, #0
10053e3e:	d00d      	beq.n	10053e5c <GAT_srv_bearer_close+0x158>
10053e40:	4604      	mov	r4, r0
10053e42:	ad06      	add	r5, sp, #24
10053e44:	a909      	add	r1, sp, #36	@ 0x24
10053e46:	2206      	movs	r2, #6
10053e48:	4628      	mov	r0, r5
10053e4a:	f7f0 fdab 	bl	100449a4 <BLEPLAT_MemCpy>
10053e4e:	71ac      	strb	r4, [r5, #6]
10053e50:	2042      	movs	r0, #66	@ 0x42
10053e52:	2104      	movs	r1, #4
10053e54:	2207      	movs	r2, #7
10053e56:	462b      	mov	r3, r5
10053e58:	f012 fede 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
10053e5c:	4e1d      	ldr	r6, [pc, #116]	@ (10053ed4 <__arm_cp.3_1>)
10053e5e:	4c1c      	ldr	r4, [pc, #112]	@ (10053ed0 <__arm_cp.3_0>)
10053e60:	2001      	movs	r0, #1
10053e62:	f013 fbcd 	bl	10067600 <GAT_att_db_find_from_handle>
10053e66:	4605      	mov	r5, r0
10053e68:	2800      	cmp	r0, #0
10053e6a:	d012      	beq.n	10053e92 <GAT_srv_bearer_close+0x18e>
10053e6c:	7828      	ldrb	r0, [r5, #0]
10053e6e:	2804      	cmp	r0, #4
10053e70:	d10b      	bne.n	10053e8a <GAT_srv_bearer_close+0x186>
10053e72:	6868      	ldr	r0, [r5, #4]
10053e74:	7d01      	ldrb	r1, [r0, #20]
10053e76:	2910      	cmp	r1, #16
10053e78:	d107      	bne.n	10053e8a <GAT_srv_bearer_close+0x186>
10053e7a:	8a00      	ldrh	r0, [r0, #16]
10053e7c:	42a0      	cmp	r0, r4
10053e7e:	d104      	bne.n	10053e8a <GAT_srv_bearer_close+0x186>
10053e80:	2200      	movs	r2, #0
10053e82:	4638      	mov	r0, r7
10053e84:	4629      	mov	r1, r5
10053e86:	f000 fc23 	bl	100546d0 <GAT_srv_set_cccd_val>
10053e8a:	4628      	mov	r0, r5
10053e8c:	f013 fc1a 	bl	100676c4 <GAT_att_db_get_next>
10053e90:	e7e9      	b.n	10053e66 <GAT_srv_bearer_close+0x162>
10053e92:	ac10      	add	r4, sp, #64	@ 0x40
10053e94:	4910      	ldr	r1, [pc, #64]	@ (10053ed8 <__arm_cp.3_2>)
10053e96:	2214      	movs	r2, #20
10053e98:	4620      	mov	r0, r4
10053e9a:	f017 ff0e 	bl	1006bcba <__aeabi_memcpy>
10053e9e:	2001      	movs	r0, #1
10053ea0:	4631      	mov	r1, r6
10053ea2:	4622      	mov	r2, r4
10053ea4:	f000 fcc4 	bl	10054830 <GAT_srv_find_by_type_attr_p>
10053ea8:	2800      	cmp	r0, #0
10053eaa:	d00f      	beq.n	10053ecc <GAT_srv_bearer_close+0x1c8>
10053eac:	4604      	mov	r4, r0
10053eae:	4638      	mov	r0, r7
10053eb0:	f7fe fcea 	bl	10052888 <GAT_att_cmn_get_conn_index>
10053eb4:	4909      	ldr	r1, [pc, #36]	@ (10053edc <__arm_cp.3_3>)
10053eb6:	7ac9      	ldrb	r1, [r1, #11]
10053eb8:	6862      	ldr	r2, [r4, #4]
10053eba:	6a12      	ldr	r2, [r2, #32]
10053ebc:	6892      	ldr	r2, [r2, #8]
10053ebe:	9200      	str	r2, [sp, #0]
10053ec0:	0849      	lsrs	r1, r1, #1
10053ec2:	1c4b      	adds	r3, r1, #1
10053ec4:	2104      	movs	r1, #4
10053ec6:	2200      	movs	r2, #0
10053ec8:	f000 fbc1 	bl	1005464e <GAT_srv_set_zip_val>
10053ecc:	b021      	add	sp, #132	@ 0x84
10053ece:	bdf0      	pop	{r4, r5, r6, r7, pc}

10053ed0 <__arm_cp.3_0>:
10053ed0:	00002902 	.word	0x00002902

10053ed4 <__arm_cp.3_1>:
10053ed4:	0000ffff 	.word	0x0000ffff

10053ed8 <__arm_cp.3_2>:
10053ed8:	1006e96c 	.word	0x1006e96c

10053edc <__arm_cp.3_3>:
10053edc:	200008a8 	.word	0x200008a8

10053ee0 <__arm_cp.3_4>:
10053ee0:	20000848 	.word	0x20000848

10053ee4 <__arm_cp.3_5>:
10053ee4:	0003fffe 	.word	0x0003fffe

10053ee8 <__arm_cp.3_6>:
10053ee8:	00002a05 	.word	0x00002a05

10053eec <GAT_srv_db_hash_tsk>:
10053eec:	b5f0      	push	{r4, r5, r6, r7, lr}
10053eee:	b0d3      	sub	sp, #332	@ 0x14c
10053ef0:	2500      	movs	r5, #0
10053ef2:	950c      	str	r5, [sp, #48]	@ 0x30
10053ef4:	950b      	str	r5, [sp, #44]	@ 0x2c
10053ef6:	950a      	str	r5, [sp, #40]	@ 0x28
10053ef8:	9509      	str	r5, [sp, #36]	@ 0x24
10053efa:	2041      	movs	r0, #65	@ 0x41
10053efc:	0082      	lsls	r2, r0, #2
10053efe:	ac0d      	add	r4, sp, #52	@ 0x34
10053f00:	4620      	mov	r0, r4
10053f02:	4629      	mov	r1, r5
10053f04:	f7f0 fd5e 	bl	100449c4 <BLEPLAT_MemSet>
10053f08:	7125      	strb	r5, [r4, #4]
10053f0a:	2010      	movs	r0, #16
10053f0c:	9044      	str	r0, [sp, #272]	@ 0x110
10053f0e:	9016      	str	r0, [sp, #88]	@ 0x58
10053f10:	a809      	add	r0, sp, #36	@ 0x24
10053f12:	900f      	str	r0, [sp, #60]	@ 0x3c
10053f14:	4620      	mov	r0, r4
10053f16:	f7f0 fda2 	bl	10044a5e <BLEPLAT_AesCMACEncryptInit>
10053f1a:	34dc      	adds	r4, #220	@ 0xdc
10053f1c:	9401      	str	r4, [sp, #4]
10053f1e:	2001      	movs	r0, #1
10053f20:	f013 fb6e 	bl	10067600 <GAT_att_db_find_from_handle>
10053f24:	4606      	mov	r6, r0
10053f26:	a84e      	add	r0, sp, #312	@ 0x138
10053f28:	300c      	adds	r0, #12
10053f2a:	9002      	str	r0, [sp, #8]
10053f2c:	4d48      	ldr	r5, [pc, #288]	@ (10054050 <__arm_cp.5_2>)
10053f2e:	2e00      	cmp	r6, #0
10053f30:	d041      	beq.n	10053fb6 <GAT_srv_db_hash_tsk+0xca>
10053f32:	7830      	ldrb	r0, [r6, #0]
10053f34:	2803      	cmp	r0, #3
10053f36:	d039      	beq.n	10053fac <GAT_srv_db_hash_tsk+0xc0>
10053f38:	af4e      	add	r7, sp, #312	@ 0x138
10053f3a:	4630      	mov	r0, r6
10053f3c:	4639      	mov	r1, r7
10053f3e:	f000 f907 	bl	10054150 <GAT_srv_get_attr_type>
10053f42:	7c38      	ldrb	r0, [r7, #16]
10053f44:	2810      	cmp	r0, #16
10053f46:	d131      	bne.n	10053fac <GAT_srv_db_hash_tsk+0xc0>
10053f48:	8870      	ldrh	r0, [r6, #2]
10053f4a:	a904      	add	r1, sp, #16
10053f4c:	8008      	strh	r0, [r1, #0]
10053f4e:	a84e      	add	r0, sp, #312	@ 0x138
10053f50:	8980      	ldrh	r0, [r0, #12]
10053f52:	493d      	ldr	r1, [pc, #244]	@ (10054048 <__arm_cp.5_0>)
10053f54:	1841      	adds	r1, r0, r1
10053f56:	2905      	cmp	r1, #5
10053f58:	d31c      	bcc.n	10053f94 <GAT_srv_db_hash_tsk+0xa8>
10053f5a:	493c      	ldr	r1, [pc, #240]	@ (1005404c <__arm_cp.5_1>)
10053f5c:	1841      	adds	r1, r0, r1
10053f5e:	2904      	cmp	r1, #4
10053f60:	d303      	bcc.n	10053f6a <GAT_srv_db_hash_tsk+0x7e>
10053f62:	2129      	movs	r1, #41	@ 0x29
10053f64:	0209      	lsls	r1, r1, #8
10053f66:	4288      	cmp	r0, r1
10053f68:	d120      	bne.n	10053fac <GAT_srv_db_hash_tsk+0xc0>
10053f6a:	af0d      	add	r7, sp, #52	@ 0x34
10053f6c:	2402      	movs	r4, #2
10053f6e:	aa04      	add	r2, sp, #16
10053f70:	4638      	mov	r0, r7
10053f72:	4621      	mov	r1, r4
10053f74:	47a8      	blx	r5
10053f76:	4638      	mov	r0, r7
10053f78:	4621      	mov	r1, r4
10053f7a:	9a02      	ldr	r2, [sp, #8]
10053f7c:	47a8      	blx	r5
10053f7e:	2000      	movs	r0, #0
10053f80:	aa05      	add	r2, sp, #20
10053f82:	4631      	mov	r1, r6
10053f84:	f000 f9a6 	bl	100542d4 <GAT_srv_get_attr_value>
10053f88:	9805      	ldr	r0, [sp, #20]
10053f8a:	6842      	ldr	r2, [r0, #4]
10053f8c:	8801      	ldrh	r1, [r0, #0]
10053f8e:	4638      	mov	r0, r7
10053f90:	47a8      	blx	r5
10053f92:	e00b      	b.n	10053fac <GAT_srv_db_hash_tsk+0xc0>
10053f94:	ac0d      	add	r4, sp, #52	@ 0x34
10053f96:	2702      	movs	r7, #2
10053f98:	aa04      	add	r2, sp, #16
10053f9a:	4620      	mov	r0, r4
10053f9c:	4639      	mov	r1, r7
10053f9e:	f000 fcdb 	bl	10054958 <GAT_srv_aes_cmac_append>
10053fa2:	4620      	mov	r0, r4
10053fa4:	4639      	mov	r1, r7
10053fa6:	9a02      	ldr	r2, [sp, #8]
10053fa8:	f000 fcd6 	bl	10054958 <GAT_srv_aes_cmac_append>
10053fac:	4630      	mov	r0, r6
10053fae:	f013 fb89 	bl	100676c4 <GAT_att_db_get_next>
10053fb2:	4606      	mov	r6, r0
10053fb4:	e7bb      	b.n	10053f2e <GAT_srv_db_hash_tsk+0x42>
10053fb6:	9801      	ldr	r0, [sp, #4]
10053fb8:	8c82      	ldrh	r2, [r0, #36]	@ 0x24
10053fba:	2a00      	cmp	r2, #0
10053fbc:	d006      	beq.n	10053fcc <GAT_srv_db_hash_tsk+0xe0>
10053fbe:	a80d      	add	r0, sp, #52	@ 0x34
10053fc0:	2120      	movs	r1, #32
10053fc2:	7101      	strb	r1, [r0, #4]
10053fc4:	4601      	mov	r1, r0
10053fc6:	31e0      	adds	r1, #224	@ 0xe0
10053fc8:	f7f0 fd56 	bl	10044a78 <BLEPLAT_AesCMACEncryptAppend>
10053fcc:	a80d      	add	r0, sp, #52	@ 0x34
10053fce:	ac4e      	add	r4, sp, #312	@ 0x138
10053fd0:	aa04      	add	r2, sp, #16
10053fd2:	4621      	mov	r1, r4
10053fd4:	f7f0 fd61 	bl	10044a9a <BLEPLAT_AesCMACEncryptFinish>
10053fd8:	ad05      	add	r5, sp, #20
10053fda:	2610      	movs	r6, #16
10053fdc:	2301      	movs	r3, #1
10053fde:	4628      	mov	r0, r5
10053fe0:	4621      	mov	r1, r4
10053fe2:	4632      	mov	r2, r6
10053fe4:	f011 fa8a 	bl	100654fc <copy_swap_buffer>
10053fe8:	4f1a      	ldr	r7, [pc, #104]	@ (10054054 <__arm_cp.5_3>)
10053fea:	6839      	ldr	r1, [r7, #0]
10053fec:	3183      	adds	r1, #131	@ 0x83
10053fee:	4628      	mov	r0, r5
10053ff0:	4632      	mov	r2, r6
10053ff2:	f7f0 fcf7 	bl	100449e4 <BLEPLAT_MemCmp>
10053ff6:	2800      	cmp	r0, #0
10053ff8:	d019      	beq.n	1005402e <GAT_srv_db_hash_tsk+0x142>
10053ffa:	6838      	ldr	r0, [r7, #0]
10053ffc:	3083      	adds	r0, #131	@ 0x83
10053ffe:	a905      	add	r1, sp, #20
10054000:	2210      	movs	r2, #16
10054002:	f7f0 fccf 	bl	100449a4 <BLEPLAT_MemCpy>
10054006:	ad03      	add	r5, sp, #12
10054008:	2082      	movs	r0, #130	@ 0x82
1005400a:	8028      	strh	r0, [r5, #0]
1005400c:	9500      	str	r5, [sp, #0]
1005400e:	2400      	movs	r4, #0
10054010:	4b11      	ldr	r3, [pc, #68]	@ (10054058 <__arm_cp.5_4>)
10054012:	4620      	mov	r0, r4
10054014:	4621      	mov	r1, r4
10054016:	4622      	mov	r2, r4
10054018:	f7fe face 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
1005401c:	2040      	movs	r0, #64	@ 0x40
1005401e:	8028      	strh	r0, [r5, #0]
10054020:	9500      	str	r5, [sp, #0]
10054022:	4b0e      	ldr	r3, [pc, #56]	@ (1005405c <__arm_cp.5_5>)
10054024:	4620      	mov	r0, r4
10054026:	4621      	mov	r1, r4
10054028:	4622      	mov	r2, r4
1005402a:	f7fe fac5 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
1005402e:	6838      	ldr	r0, [r7, #0]
10054030:	215c      	movs	r1, #92	@ 0x5c
10054032:	5c42      	ldrb	r2, [r0, r1]
10054034:	23fd      	movs	r3, #253	@ 0xfd
10054036:	4013      	ands	r3, r2
10054038:	5443      	strb	r3, [r0, r1]
1005403a:	200b      	movs	r0, #11
1005403c:	f011 f8f8 	bl	10065230 <tsk_notify_idx>
10054040:	f7ee fc49 	bl	100428d6 <BLE_STACK_ProcessRequest>
10054044:	b053      	add	sp, #332	@ 0x14c
10054046:	bdf0      	pop	{r4, r5, r6, r7, pc}

10054048 <__arm_cp.5_0>:
10054048:	ffffd6ff 	.word	0xffffd6ff

1005404c <__arm_cp.5_1>:
1005404c:	ffffd800 	.word	0xffffd800

10054050 <__arm_cp.5_2>:
10054050:	10054959 	.word	0x10054959

10054054 <__arm_cp.5_3>:
10054054:	20000848 	.word	0x20000848

10054058 <__arm_cp.5_4>:
10054058:	1005287d 	.word	0x1005287d

1005405c <__arm_cp.5_5>:
1005405c:	10052871 	.word	0x10052871

10054060 <GAT_srv_send_srv_change_tsk>:
10054060:	b5e0      	push	{r5, r6, r7, lr}
10054062:	2100      	movs	r1, #0
10054064:	9100      	str	r1, [sp, #0]
10054066:	2002      	movs	r0, #2
10054068:	2204      	movs	r2, #4
1005406a:	4b07      	ldr	r3, [pc, #28]	@ (10054088 <__arm_cp.7_0>)
1005406c:	f7fe faa4 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
10054070:	2800      	cmp	r0, #0
10054072:	d001      	beq.n	10054078 <GAT_srv_send_srv_change_tsk+0x18>
10054074:	2881      	cmp	r0, #129	@ 0x81
10054076:	d100      	bne.n	1005407a <GAT_srv_send_srv_change_tsk+0x1a>
10054078:	bd8c      	pop	{r2, r3, r7, pc}
1005407a:	200b      	movs	r0, #11
1005407c:	f011 f8d8 	bl	10065230 <tsk_notify_idx>
10054080:	f7ee fc29 	bl	100428d6 <BLE_STACK_ProcessRequest>
10054084:	bd8c      	pop	{r2, r3, r7, pc}
10054086:	46c0      	nop			@ (mov r8, r8)

10054088 <__arm_cp.7_0>:
10054088:	1005408d 	.word	0x1005408d

1005408c <GAT_srv_tx_service_change>:
1005408c:	b5b0      	push	{r4, r5, r7, lr}
1005408e:	b08a      	sub	sp, #40	@ 0x28
10054090:	4604      	mov	r4, r0
10054092:	8880      	ldrh	r0, [r0, #4]
10054094:	0640      	lsls	r0, r0, #25
10054096:	d401      	bmi.n	1005409c <GAT_srv_tx_service_change+0x10>
10054098:	2500      	movs	r5, #0
1005409a:	e04b      	b.n	10054134 <GAT_srv_tx_service_change+0xa8>
1005409c:	a809      	add	r0, sp, #36	@ 0x24
1005409e:	2180      	movs	r1, #128	@ 0x80
100540a0:	8001      	strh	r1, [r0, #0]
100540a2:	8921      	ldrh	r1, [r4, #8]
100540a4:	9000      	str	r0, [sp, #0]
100540a6:	2001      	movs	r0, #1
100540a8:	2500      	movs	r5, #0
100540aa:	4b24      	ldr	r3, [pc, #144]	@ (1005413c <__arm_cp.8_0>)
100540ac:	462a      	mov	r2, r5
100540ae:	f7fe fa83 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
100540b2:	88a1      	ldrh	r1, [r4, #4]
100540b4:	0789      	lsls	r1, r1, #30
100540b6:	d43d      	bmi.n	10054134 <GAT_srv_tx_service_change+0xa8>
100540b8:	2800      	cmp	r0, #0
100540ba:	d13b      	bne.n	10054134 <GAT_srv_tx_service_change+0xa8>
100540bc:	ad04      	add	r5, sp, #16
100540be:	4920      	ldr	r1, [pc, #128]	@ (10054140 <__arm_cp.8_1>)
100540c0:	2214      	movs	r2, #20
100540c2:	4628      	mov	r0, r5
100540c4:	f017 fdf9 	bl	1006bcba <__aeabi_memcpy>
100540c8:	2001      	movs	r0, #1
100540ca:	491e      	ldr	r1, [pc, #120]	@ (10054144 <__arm_cp.8_2>)
100540cc:	462a      	mov	r2, r5
100540ce:	f000 fbaf 	bl	10054830 <GAT_srv_find_by_type_attr_p>
100540d2:	2800      	cmp	r0, #0
100540d4:	d012      	beq.n	100540fc <GAT_srv_tx_service_change+0x70>
100540d6:	4605      	mov	r5, r0
100540d8:	f000 fc02 	bl	100548e0 <GAT_srv_get_cccd_attr_p>
100540dc:	2800      	cmp	r0, #0
100540de:	d00d      	beq.n	100540fc <GAT_srv_tx_service_change+0x70>
100540e0:	4601      	mov	r1, r0
100540e2:	8920      	ldrh	r0, [r4, #8]
100540e4:	f000 fc2c 	bl	10054940 <GAT_srv_get_cccd_val>
100540e8:	0780      	lsls	r0, r0, #30
100540ea:	d412      	bmi.n	10054112 <GAT_srv_tx_service_change+0x86>
100540ec:	8920      	ldrh	r0, [r4, #8]
100540ee:	2100      	movs	r1, #0
100540f0:	2201      	movs	r2, #1
100540f2:	f000 fbbd 	bl	10054870 <GAT_srv_check_client_support_feature>
100540f6:	4605      	mov	r5, r0
100540f8:	2881      	cmp	r0, #129	@ 0x81
100540fa:	d11b      	bne.n	10054134 <GAT_srv_tx_service_change+0xa8>
100540fc:	a809      	add	r0, sp, #36	@ 0x24
100540fe:	2140      	movs	r1, #64	@ 0x40
10054100:	8001      	strh	r1, [r0, #0]
10054102:	8921      	ldrh	r1, [r4, #8]
10054104:	9000      	str	r0, [sp, #0]
10054106:	2001      	movs	r0, #1
10054108:	2200      	movs	r2, #0
1005410a:	4b10      	ldr	r3, [pc, #64]	@ (1005414c <__arm_cp.8_4>)
1005410c:	f7fe fa54 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
10054110:	e00f      	b.n	10054132 <GAT_srv_tx_service_change+0xa6>
10054112:	480d      	ldr	r0, [pc, #52]	@ (10054148 <__arm_cp.8_3>)
10054114:	9003      	str	r0, [sp, #12]
10054116:	aa01      	add	r2, sp, #4
10054118:	2004      	movs	r0, #4
1005411a:	8050      	strh	r0, [r2, #2]
1005411c:	8868      	ldrh	r0, [r5, #2]
1005411e:	8010      	strh	r0, [r2, #0]
10054120:	a803      	add	r0, sp, #12
10054122:	9002      	str	r0, [sp, #8]
10054124:	8961      	ldrh	r1, [r4, #10]
10054126:	8920      	ldrh	r0, [r4, #8]
10054128:	9200      	str	r2, [sp, #0]
1005412a:	2202      	movs	r2, #2
1005412c:	2301      	movs	r3, #1
1005412e:	f7fe fe03 	bl	10052d38 <GAT_att_srv_hvtx>
10054132:	4605      	mov	r5, r0
10054134:	4628      	mov	r0, r5
10054136:	b00a      	add	sp, #40	@ 0x28
10054138:	bdb0      	pop	{r4, r5, r7, pc}
1005413a:	46c0      	nop			@ (mov r8, r8)

1005413c <__arm_cp.8_0>:
1005413c:	10052865 	.word	0x10052865

10054140 <__arm_cp.8_1>:
10054140:	1006e958 	.word	0x1006e958

10054144 <__arm_cp.8_2>:
10054144:	0000ffff 	.word	0x0000ffff

10054148 <__arm_cp.8_3>:
10054148:	ffff0001 	.word	0xffff0001

1005414c <__arm_cp.8_4>:
1005414c:	1005287d 	.word	0x1005287d

10054150 <GAT_srv_get_attr_type>:
10054150:	b580      	push	{r7, lr}
10054152:	2210      	movs	r2, #16
10054154:	740a      	strb	r2, [r1, #16]
10054156:	7802      	ldrb	r2, [r0, #0]
10054158:	2a04      	cmp	r2, #4
1005415a:	d80d      	bhi.n	10054178 <GAT_srv_get_attr_type+0x28>
1005415c:	447a      	add	r2, pc
1005415e:	7912      	ldrb	r2, [r2, #4]
10054160:	0052      	lsls	r2, r2, #1
10054162:	4497      	add	pc, r2
10054164:	0212160a 	.word	0x0212160a
10054168:	0002      	.short	0x0002
1005416a:	6840      	ldr	r0, [r0, #4]
1005416c:	1d03      	adds	r3, r0, #4
1005416e:	2214      	movs	r2, #20
10054170:	4608      	mov	r0, r1
10054172:	4619      	mov	r1, r3
10054174:	f7f0 fc16 	bl	100449a4 <BLEPLAT_MemCpy>
10054178:	bd80      	pop	{r7, pc}
1005417a:	2205      	movs	r2, #5
1005417c:	02d2      	lsls	r2, r2, #11
1005417e:	6840      	ldr	r0, [r0, #4]
10054180:	7d00      	ldrb	r0, [r0, #20]
10054182:	2801      	cmp	r0, #1
10054184:	d109      	bne.n	1005419a <GAT_srv_get_attr_type+0x4a>
10054186:	818a      	strh	r2, [r1, #12]
10054188:	bd80      	pop	{r7, pc}
1005418a:	2005      	movs	r0, #5
1005418c:	02c0      	lsls	r0, r0, #11
1005418e:	1cc0      	adds	r0, r0, #3
10054190:	e004      	b.n	1005419c <GAT_srv_get_attr_type+0x4c>
10054192:	2005      	movs	r0, #5
10054194:	02c0      	lsls	r0, r0, #11
10054196:	1c80      	adds	r0, r0, #2
10054198:	e000      	b.n	1005419c <GAT_srv_get_attr_type+0x4c>
1005419a:	1c50      	adds	r0, r2, #1
1005419c:	8188      	strh	r0, [r1, #12]
1005419e:	bd80      	pop	{r7, pc}

100541a0 <GAT_srv_get_att_group_end_handle>:
100541a0:	b580      	push	{r7, lr}
100541a2:	7801      	ldrb	r1, [r0, #0]
100541a4:	2202      	movs	r2, #2
100541a6:	430a      	orrs	r2, r1
100541a8:	2a02      	cmp	r2, #2
100541aa:	d102      	bne.n	100541b2 <GAT_srv_get_att_group_end_handle+0x12>
100541ac:	f013 fa9e 	bl	100676ec <GAT_att_db_get_last_group_handle>
100541b0:	bd80      	pop	{r7, pc}
100541b2:	8840      	ldrh	r0, [r0, #2]
100541b4:	bd80      	pop	{r7, pc}

100541b6 <GAT_srv_attr_value_read>:
100541b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100541b8:	461c      	mov	r4, r3
100541ba:	9200      	str	r2, [sp, #0]
100541bc:	460e      	mov	r6, r1
100541be:	4607      	mov	r7, r0
100541c0:	2201      	movs	r2, #1
100541c2:	4608      	mov	r0, r1
100541c4:	4639      	mov	r1, r7
100541c6:	f000 f80f 	bl	100541e8 <GAT_srv_check_perms>
100541ca:	7020      	strb	r0, [r4, #0]
100541cc:	2586      	movs	r5, #134	@ 0x86
100541ce:	2800      	cmp	r0, #0
100541d0:	d108      	bne.n	100541e4 <GAT_srv_attr_value_read+0x2e>
100541d2:	4638      	mov	r0, r7
100541d4:	4631      	mov	r1, r6
100541d6:	9a00      	ldr	r2, [sp, #0]
100541d8:	f000 f87c 	bl	100542d4 <GAT_srv_get_attr_value>
100541dc:	2886      	cmp	r0, #134	@ 0x86
100541de:	d102      	bne.n	100541e6 <GAT_srv_attr_value_read+0x30>
100541e0:	200e      	movs	r0, #14
100541e2:	7020      	strb	r0, [r4, #0]
100541e4:	4628      	mov	r0, r5
100541e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100541e8 <GAT_srv_check_perms>:
100541e8:	b5f0      	push	{r4, r5, r6, r7, lr}
100541ea:	b085      	sub	sp, #20
100541ec:	4615      	mov	r5, r2
100541ee:	9101      	str	r1, [sp, #4]
100541f0:	4601      	mov	r1, r0
100541f2:	7804      	ldrb	r4, [r0, #0]
100541f4:	2700      	movs	r7, #0
100541f6:	2302      	movs	r3, #2
100541f8:	200e      	movs	r0, #14
100541fa:	2c03      	cmp	r4, #3
100541fc:	461a      	mov	r2, r3
100541fe:	463e      	mov	r6, r7
10054200:	d312      	bcc.n	10054228 <GAT_srv_check_perms+0x40>
10054202:	d00b      	beq.n	1005421c <GAT_srv_check_perms+0x34>
10054204:	2c04      	cmp	r4, #4
10054206:	d158      	bne.n	100542ba <GAT_srv_check_perms+0xd2>
10054208:	6848      	ldr	r0, [r1, #4]
1005420a:	7801      	ldrb	r1, [r0, #0]
1005420c:	078c      	lsls	r4, r1, #30
1005420e:	07c9      	lsls	r1, r1, #31
10054210:	0f8a      	lsrs	r2, r1, #30
10054212:	2c00      	cmp	r4, #0
10054214:	d500      	bpl.n	10054218 <GAT_srv_check_perms+0x30>
10054216:	324c      	adds	r2, #76	@ 0x4c
10054218:	1c41      	adds	r1, r0, #1
1005421a:	e002      	b.n	10054222 <GAT_srv_check_perms+0x3a>
1005421c:	6848      	ldr	r0, [r1, #4]
1005421e:	1c41      	adds	r1, r0, #1
10054220:	7802      	ldrb	r2, [r0, #0]
10054222:	1c80      	adds	r0, r0, #2
10054224:	780e      	ldrb	r6, [r1, #0]
10054226:	7807      	ldrb	r7, [r0, #0]
10054228:	2d01      	cmp	r5, #1
1005422a:	d103      	bne.n	10054234 <GAT_srv_check_perms+0x4c>
1005422c:	4610      	mov	r0, r2
1005422e:	4018      	ands	r0, r3
10054230:	4618      	mov	r0, r3
10054232:	d042      	beq.n	100542ba <GAT_srv_check_perms+0xd2>
10054234:	2003      	movs	r0, #3
10054236:	2d03      	cmp	r5, #3
10054238:	d102      	bne.n	10054240 <GAT_srv_check_perms+0x58>
1005423a:	2108      	movs	r1, #8
1005423c:	4011      	ands	r1, r2
1005423e:	d03c      	beq.n	100542ba <GAT_srv_check_perms+0xd2>
10054240:	2d04      	cmp	r5, #4
10054242:	d102      	bne.n	1005424a <GAT_srv_check_perms+0x62>
10054244:	2104      	movs	r1, #4
10054246:	4011      	ands	r1, r2
10054248:	d037      	beq.n	100542ba <GAT_srv_check_perms+0xd2>
1005424a:	2d05      	cmp	r5, #5
1005424c:	d102      	bne.n	10054254 <GAT_srv_check_perms+0x6c>
1005424e:	2140      	movs	r1, #64	@ 0x40
10054250:	400a      	ands	r2, r1
10054252:	d032      	beq.n	100542ba <GAT_srv_check_perms+0xd2>
10054254:	a904      	add	r1, sp, #16
10054256:	aa03      	add	r2, sp, #12
10054258:	ab02      	add	r3, sp, #8
1005425a:	9c01      	ldr	r4, [sp, #4]
1005425c:	4620      	mov	r0, r4
1005425e:	f010 fe0e 	bl	10064e7e <smp_sap_get_security_level>
10054262:	2802      	cmp	r0, #2
10054264:	d102      	bne.n	1005426c <GAT_srv_check_perms+0x84>
10054266:	2f00      	cmp	r7, #0
10054268:	d10f      	bne.n	1005428a <GAT_srv_check_perms+0xa2>
1005426a:	e025      	b.n	100542b8 <GAT_srv_check_perms+0xd0>
1005426c:	2d01      	cmp	r5, #1
1005426e:	d000      	beq.n	10054272 <GAT_srv_check_perms+0x8a>
10054270:	08ff      	lsrs	r7, r7, #3
10054272:	2d05      	cmp	r5, #5
10054274:	d10b      	bne.n	1005428e <GAT_srv_check_perms+0xa6>
10054276:	a804      	add	r0, sp, #16
10054278:	7800      	ldrb	r0, [r0, #0]
1005427a:	2802      	cmp	r0, #2
1005427c:	d105      	bne.n	1005428a <GAT_srv_check_perms+0xa2>
1005427e:	a802      	add	r0, sp, #8
10054280:	7800      	ldrb	r0, [r0, #0]
10054282:	2802      	cmp	r0, #2
10054284:	d114      	bne.n	100542b0 <GAT_srv_check_perms+0xc8>
10054286:	2000      	movs	r0, #0
10054288:	e013      	b.n	100542b2 <GAT_srv_check_perms+0xca>
1005428a:	200e      	movs	r0, #14
1005428c:	e015      	b.n	100542ba <GAT_srv_check_perms+0xd2>
1005428e:	2000      	movs	r0, #0
10054290:	2f00      	cmp	r7, #0
10054292:	d012      	beq.n	100542ba <GAT_srv_check_perms+0xd2>
10054294:	a903      	add	r1, sp, #12
10054296:	7809      	ldrb	r1, [r1, #0]
10054298:	07fa      	lsls	r2, r7, #31
1005429a:	d003      	beq.n	100542a4 <GAT_srv_check_perms+0xbc>
1005429c:	2903      	cmp	r1, #3
1005429e:	d201      	bcs.n	100542a4 <GAT_srv_check_perms+0xbc>
100542a0:	2005      	movs	r0, #5
100542a2:	e00a      	b.n	100542ba <GAT_srv_check_perms+0xd2>
100542a4:	077a      	lsls	r2, r7, #29
100542a6:	d508      	bpl.n	100542ba <GAT_srv_check_perms+0xd2>
100542a8:	2902      	cmp	r1, #2
100542aa:	d208      	bcs.n	100542be <GAT_srv_check_perms+0xd6>
100542ac:	200f      	movs	r0, #15
100542ae:	e004      	b.n	100542ba <GAT_srv_check_perms+0xd2>
100542b0:	2005      	movs	r0, #5
100542b2:	2101      	movs	r1, #1
100542b4:	400f      	ands	r7, r1
100542b6:	d100      	bne.n	100542ba <GAT_srv_check_perms+0xd2>
100542b8:	4638      	mov	r0, r7
100542ba:	b005      	add	sp, #20
100542bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
100542be:	4620      	mov	r0, r4
100542c0:	4631      	mov	r1, r6
100542c2:	f010 fe52 	bl	10064f6a <smp_sap_check_encryption_key_size>
100542c6:	28b6      	cmp	r0, #182	@ 0xb6
100542c8:	d001      	beq.n	100542ce <GAT_srv_check_perms+0xe6>
100542ca:	2000      	movs	r0, #0
100542cc:	e7f5      	b.n	100542ba <GAT_srv_check_perms+0xd2>
100542ce:	200c      	movs	r0, #12
100542d0:	e7f3      	b.n	100542ba <GAT_srv_check_perms+0xd2>
	...

100542d4 <GAT_srv_get_attr_value>:
100542d4:	b5f0      	push	{r4, r5, r6, r7, lr}
100542d6:	b085      	sub	sp, #20
100542d8:	460d      	mov	r5, r1
100542da:	7809      	ldrb	r1, [r1, #0]
100542dc:	2904      	cmp	r1, #4
100542de:	d811      	bhi.n	10054304 <GAT_srv_get_attr_value+0x30>
100542e0:	4614      	mov	r4, r2
100542e2:	46c0      	nop			@ (mov r8, r8)
100542e4:	4479      	add	r1, pc
100542e6:	7909      	ldrb	r1, [r1, #4]
100542e8:	0049      	lsls	r1, r1, #1
100542ea:	448f      	add	pc, r1
100542ec:	694a0d02 	.word	0x694a0d02
100542f0:	007e      	.short	0x007e
100542f2:	4e73      	ldr	r6, [pc, #460]	@ (100544c0 <__arm_cp.13_0>)
100542f4:	6830      	ldr	r0, [r6, #0]
100542f6:	4601      	mov	r1, r0
100542f8:	3170      	adds	r1, #112	@ 0x70
100542fa:	66c1      	str	r1, [r0, #108]	@ 0x6c
100542fc:	6868      	ldr	r0, [r5, #4]
100542fe:	f011 f96f 	bl	100655e0 <UUID_write_to_flat>
10054302:	e057      	b.n	100543b4 <GAT_srv_get_attr_value+0xe0>
10054304:	2686      	movs	r6, #134	@ 0x86
10054306:	e0d3      	b.n	100544b0 <GAT_srv_get_attr_value+0x1dc>
10054308:	4f6d      	ldr	r7, [pc, #436]	@ (100544c0 <__arm_cp.13_0>)
1005430a:	6838      	ldr	r0, [r7, #0]
1005430c:	4601      	mov	r1, r0
1005430e:	3170      	adds	r1, #112	@ 0x70
10054310:	66c1      	str	r1, [r0, #108]	@ 0x6c
10054312:	686b      	ldr	r3, [r5, #4]
10054314:	2001      	movs	r0, #1
10054316:	496e      	ldr	r1, [pc, #440]	@ (100544d0 <__arm_cp.13_4>)
10054318:	2600      	movs	r6, #0
1005431a:	4632      	mov	r2, r6
1005431c:	f000 fad6 	bl	100548cc <GAT_srv_get_attribute_handle>
10054320:	a901      	add	r1, sp, #4
10054322:	8008      	strh	r0, [r1, #0]
10054324:	2800      	cmp	r0, #0
10054326:	d100      	bne.n	1005432a <GAT_srv_get_attr_value+0x56>
10054328:	e0ad      	b.n	10054486 <GAT_srv_get_attr_value+0x1b2>
1005432a:	f013 f941 	bl	100675b0 <GAT_att_db_find_by_handle>
1005432e:	f7ff ff37 	bl	100541a0 <GAT_srv_get_att_group_end_handle>
10054332:	a902      	add	r1, sp, #8
10054334:	9100      	str	r1, [sp, #0]
10054336:	8008      	strh	r0, [r1, #0]
10054338:	6838      	ldr	r0, [r7, #0]
1005433a:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
1005433c:	a901      	add	r1, sp, #4
1005433e:	2702      	movs	r7, #2
10054340:	463a      	mov	r2, r7
10054342:	f7f0 fb2f 	bl	100449a4 <BLEPLAT_MemCpy>
10054346:	485e      	ldr	r0, [pc, #376]	@ (100544c0 <__arm_cp.13_0>)
10054348:	6800      	ldr	r0, [r0, #0]
1005434a:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
1005434c:	1c80      	adds	r0, r0, #2
1005434e:	9900      	ldr	r1, [sp, #0]
10054350:	463a      	mov	r2, r7
10054352:	f7f0 fb27 	bl	100449a4 <BLEPLAT_MemCpy>
10054356:	485a      	ldr	r0, [pc, #360]	@ (100544c0 <__arm_cp.13_0>)
10054358:	6800      	ldr	r0, [r0, #0]
1005435a:	2768      	movs	r7, #104	@ 0x68
1005435c:	2104      	movs	r1, #4
1005435e:	53c1      	strh	r1, [r0, r7]
10054360:	6869      	ldr	r1, [r5, #4]
10054362:	7c0a      	ldrb	r2, [r1, #16]
10054364:	2a10      	cmp	r2, #16
10054366:	d000      	beq.n	1005436a <GAT_srv_get_attr_value+0x96>
10054368:	e091      	b.n	1005448e <GAT_srv_get_attr_value+0x1ba>
1005436a:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
1005436c:	310c      	adds	r1, #12
1005436e:	1d00      	adds	r0, r0, #4
10054370:	2202      	movs	r2, #2
10054372:	f7f0 fb17 	bl	100449a4 <BLEPLAT_MemCpy>
10054376:	4852      	ldr	r0, [pc, #328]	@ (100544c0 <__arm_cp.13_0>)
10054378:	6800      	ldr	r0, [r0, #0]
1005437a:	5bc1      	ldrh	r1, [r0, r7]
1005437c:	1c89      	adds	r1, r1, #2
1005437e:	53c1      	strh	r1, [r0, r7]
10054380:	e085      	b.n	1005448e <GAT_srv_get_attr_value+0x1ba>
10054382:	4e4f      	ldr	r6, [pc, #316]	@ (100544c0 <__arm_cp.13_0>)
10054384:	6830      	ldr	r0, [r6, #0]
10054386:	4601      	mov	r1, r0
10054388:	3170      	adds	r1, #112	@ 0x70
1005438a:	66c1      	str	r1, [r0, #108]	@ 0x6c
1005438c:	6869      	ldr	r1, [r5, #4]
1005438e:	7809      	ldrb	r1, [r1, #0]
10054390:	2270      	movs	r2, #112	@ 0x70
10054392:	5481      	strb	r1, [r0, r2]
10054394:	8869      	ldrh	r1, [r5, #2]
10054396:	1c4a      	adds	r2, r1, #1
10054398:	a903      	add	r1, sp, #12
1005439a:	800a      	strh	r2, [r1, #0]
1005439c:	3071      	adds	r0, #113	@ 0x71
1005439e:	2202      	movs	r2, #2
100543a0:	f7f0 fb00 	bl	100449a4 <BLEPLAT_MemCpy>
100543a4:	6830      	ldr	r0, [r6, #0]
100543a6:	6ec1      	ldr	r1, [r0, #108]	@ 0x6c
100543a8:	6868      	ldr	r0, [r5, #4]
100543aa:	1d00      	adds	r0, r0, #4
100543ac:	1cc9      	adds	r1, r1, #3
100543ae:	f011 f917 	bl	100655e0 <UUID_write_to_flat>
100543b2:	1cc0      	adds	r0, r0, #3
100543b4:	6831      	ldr	r1, [r6, #0]
100543b6:	2268      	movs	r2, #104	@ 0x68
100543b8:	5288      	strh	r0, [r1, r2]
100543ba:	3168      	adds	r1, #104	@ 0x68
100543bc:	6021      	str	r1, [r4, #0]
100543be:	e076      	b.n	100544ae <GAT_srv_get_attr_value+0x1da>
100543c0:	6869      	ldr	r1, [r5, #4]
100543c2:	7d0a      	ldrb	r2, [r1, #20]
100543c4:	2a10      	cmp	r2, #16
100543c6:	d132      	bne.n	1005442e <GAT_srv_get_attr_value+0x15a>
100543c8:	4a3f      	ldr	r2, [pc, #252]	@ (100544c8 <__arm_cp.13_2>)
100543ca:	1c52      	adds	r2, r2, #1
100543cc:	8a0b      	ldrh	r3, [r1, #16]
100543ce:	4293      	cmp	r3, r2
100543d0:	d12d      	bne.n	1005442e <GAT_srv_get_attr_value+0x15a>
100543d2:	483b      	ldr	r0, [pc, #236]	@ (100544c0 <__arm_cp.13_0>)
100543d4:	6801      	ldr	r1, [r0, #0]
100543d6:	3168      	adds	r1, #104	@ 0x68
100543d8:	6021      	str	r1, [r4, #0]
100543da:	6800      	ldr	r0, [r0, #0]
100543dc:	2168      	movs	r1, #104	@ 0x68
100543de:	2210      	movs	r2, #16
100543e0:	5242      	strh	r2, [r0, r1]
100543e2:	4601      	mov	r1, r0
100543e4:	3183      	adds	r1, #131	@ 0x83
100543e6:	66c1      	str	r1, [r0, #108]	@ 0x6c
100543e8:	e061      	b.n	100544ae <GAT_srv_get_attr_value+0x1da>
100543ea:	6869      	ldr	r1, [r5, #4]
100543ec:	6989      	ldr	r1, [r1, #24]
100543ee:	2900      	cmp	r1, #0
100543f0:	d045      	beq.n	1005447e <GAT_srv_get_attr_value+0x1aa>
100543f2:	4e33      	ldr	r6, [pc, #204]	@ (100544c0 <__arm_cp.13_0>)
100543f4:	6831      	ldr	r1, [r6, #0]
100543f6:	3168      	adds	r1, #104	@ 0x68
100543f8:	6021      	str	r1, [r4, #0]
100543fa:	6869      	ldr	r1, [r5, #4]
100543fc:	7d0a      	ldrb	r2, [r1, #20]
100543fe:	2a10      	cmp	r2, #16
10054400:	d13f      	bne.n	10054482 <GAT_srv_get_attr_value+0x1ae>
10054402:	8a0a      	ldrh	r2, [r1, #16]
10054404:	4b2f      	ldr	r3, [pc, #188]	@ (100544c4 <__arm_cp.13_1>)
10054406:	429a      	cmp	r2, r3
10054408:	d13b      	bne.n	10054482 <GAT_srv_get_attr_value+0x1ae>
1005440a:	6831      	ldr	r1, [r6, #0]
1005440c:	2268      	movs	r2, #104	@ 0x68
1005440e:	2402      	movs	r4, #2
10054410:	528c      	strh	r4, [r1, r2]
10054412:	460a      	mov	r2, r1
10054414:	3270      	adds	r2, #112	@ 0x70
10054416:	66ca      	str	r2, [r1, #108]	@ 0x6c
10054418:	4629      	mov	r1, r5
1005441a:	f000 fa91 	bl	10054940 <GAT_srv_get_cccd_val>
1005441e:	a904      	add	r1, sp, #16
10054420:	8008      	strh	r0, [r1, #0]
10054422:	6830      	ldr	r0, [r6, #0]
10054424:	6ec0      	ldr	r0, [r0, #108]	@ 0x6c
10054426:	4622      	mov	r2, r4
10054428:	f7f0 fabc 	bl	100449a4 <BLEPLAT_MemCpy>
1005442c:	e03f      	b.n	100544ae <GAT_srv_get_attr_value+0x1da>
1005442e:	6a09      	ldr	r1, [r1, #32]
10054430:	2900      	cmp	r1, #0
10054432:	d024      	beq.n	1005447e <GAT_srv_get_attr_value+0x1aa>
10054434:	4e22      	ldr	r6, [pc, #136]	@ (100544c0 <__arm_cp.13_0>)
10054436:	6831      	ldr	r1, [r6, #0]
10054438:	3168      	adds	r1, #104	@ 0x68
1005443a:	6021      	str	r1, [r4, #0]
1005443c:	6869      	ldr	r1, [r5, #4]
1005443e:	7d0a      	ldrb	r2, [r1, #20]
10054440:	2a10      	cmp	r2, #16
10054442:	d127      	bne.n	10054494 <GAT_srv_get_attr_value+0x1c0>
10054444:	8a0a      	ldrh	r2, [r1, #16]
10054446:	4b20      	ldr	r3, [pc, #128]	@ (100544c8 <__arm_cp.13_2>)
10054448:	429a      	cmp	r2, r3
1005444a:	d123      	bne.n	10054494 <GAT_srv_get_attr_value+0x1c0>
1005444c:	6831      	ldr	r1, [r6, #0]
1005444e:	2268      	movs	r2, #104	@ 0x68
10054450:	2301      	movs	r3, #1
10054452:	528b      	strh	r3, [r1, r2]
10054454:	460a      	mov	r2, r1
10054456:	3270      	adds	r2, #112	@ 0x70
10054458:	66ca      	str	r2, [r1, #108]	@ 0x6c
1005445a:	f7fe fa15 	bl	10052888 <GAT_att_cmn_get_conn_index>
1005445e:	28ff      	cmp	r0, #255	@ 0xff
10054460:	d029      	beq.n	100544b6 <GAT_srv_get_attr_value+0x1e2>
10054462:	6869      	ldr	r1, [r5, #4]
10054464:	6a09      	ldr	r1, [r1, #32]
10054466:	688b      	ldr	r3, [r1, #8]
10054468:	4918      	ldr	r1, [pc, #96]	@ (100544cc <__arm_cp.13_3>)
1005446a:	7ac9      	ldrb	r1, [r1, #11]
1005446c:	0849      	lsrs	r1, r1, #1
1005446e:	1c4a      	adds	r2, r1, #1
10054470:	2104      	movs	r1, #4
10054472:	f000 f8d9 	bl	10054628 <GAT_srv_get_zip_val>
10054476:	6831      	ldr	r1, [r6, #0]
10054478:	2270      	movs	r2, #112	@ 0x70
1005447a:	5488      	strb	r0, [r1, r2]
1005447c:	e017      	b.n	100544ae <GAT_srv_get_attr_value+0x1da>
1005447e:	2684      	movs	r6, #132	@ 0x84
10054480:	e016      	b.n	100544b0 <GAT_srv_get_attr_value+0x1dc>
10054482:	6988      	ldr	r0, [r1, #24]
10054484:	e007      	b.n	10054496 <GAT_srv_get_attr_value+0x1c2>
10054486:	6838      	ldr	r0, [r7, #0]
10054488:	2168      	movs	r1, #104	@ 0x68
1005448a:	2200      	movs	r2, #0
1005448c:	5242      	strh	r2, [r0, r1]
1005448e:	3068      	adds	r0, #104	@ 0x68
10054490:	6020      	str	r0, [r4, #0]
10054492:	e00d      	b.n	100544b0 <GAT_srv_get_attr_value+0x1dc>
10054494:	6a08      	ldr	r0, [r1, #32]
10054496:	7801      	ldrb	r1, [r0, #0]
10054498:	0789      	lsls	r1, r1, #30
1005449a:	d501      	bpl.n	100544a0 <GAT_srv_get_attr_value+0x1cc>
1005449c:	2102      	movs	r1, #2
1005449e:	e000      	b.n	100544a2 <GAT_srv_get_attr_value+0x1ce>
100544a0:	2104      	movs	r1, #4
100544a2:	5a41      	ldrh	r1, [r0, r1]
100544a4:	6880      	ldr	r0, [r0, #8]
100544a6:	6832      	ldr	r2, [r6, #0]
100544a8:	2368      	movs	r3, #104	@ 0x68
100544aa:	52d1      	strh	r1, [r2, r3]
100544ac:	66d0      	str	r0, [r2, #108]	@ 0x6c
100544ae:	2600      	movs	r6, #0
100544b0:	4630      	mov	r0, r6
100544b2:	b005      	add	sp, #20
100544b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100544b6:	6830      	ldr	r0, [r6, #0]
100544b8:	2170      	movs	r1, #112	@ 0x70
100544ba:	2600      	movs	r6, #0
100544bc:	5446      	strb	r6, [r0, r1]
100544be:	e7f7      	b.n	100544b0 <GAT_srv_get_attr_value+0x1dc>

100544c0 <__arm_cp.13_0>:
100544c0:	20000848 	.word	0x20000848

100544c4 <__arm_cp.13_1>:
100544c4:	00002902 	.word	0x00002902

100544c8 <__arm_cp.13_2>:
100544c8:	00002b29 	.word	0x00002b29

100544cc <__arm_cp.13_3>:
100544cc:	200008a8 	.word	0x200008a8

100544d0 <__arm_cp.13_4>:
100544d0:	0000ffff 	.word	0x0000ffff

100544d4 <GAT_srv_attr_value_write>:
100544d4:	b5f0      	push	{r4, r5, r6, r7, lr}
100544d6:	b089      	sub	sp, #36	@ 0x24
100544d8:	4617      	mov	r7, r2
100544da:	460d      	mov	r5, r1
100544dc:	4606      	mov	r6, r0
100544de:	7800      	ldrb	r0, [r0, #0]
100544e0:	8874      	ldrh	r4, [r6, #2]
100544e2:	2804      	cmp	r0, #4
100544e4:	d045      	beq.n	10054572 <GAT_srv_attr_value_write+0x9e>
100544e6:	2803      	cmp	r0, #3
100544e8:	d177      	bne.n	100545da <GAT_srv_attr_value_write+0x106>
100544ea:	6871      	ldr	r1, [r6, #4]
100544ec:	6a08      	ldr	r0, [r1, #32]
100544ee:	2800      	cmp	r0, #0
100544f0:	d07d      	beq.n	100545ee <GAT_srv_attr_value_write+0x11a>
100544f2:	7d0a      	ldrb	r2, [r1, #20]
100544f4:	2a10      	cmp	r2, #16
100544f6:	d174      	bne.n	100545e2 <GAT_srv_attr_value_write+0x10e>
100544f8:	8a09      	ldrh	r1, [r1, #16]
100544fa:	4a49      	ldr	r2, [pc, #292]	@ (10054620 <__arm_cp.14_1>)
100544fc:	4291      	cmp	r1, r2
100544fe:	d170      	bne.n	100545e2 <GAT_srv_attr_value_write+0x10e>
10054500:	9700      	str	r7, [sp, #0]
10054502:	2101      	movs	r1, #1
10054504:	aa07      	add	r2, sp, #28
10054506:	ab08      	add	r3, sp, #32
10054508:	4628      	mov	r0, r5
1005450a:	f7fe fcf0 	bl	10052eee <GAT_att_srv_extract_write_packet_data>
1005450e:	2800      	cmp	r0, #0
10054510:	d16e      	bne.n	100545f0 <GAT_srv_attr_value_write+0x11c>
10054512:	8828      	ldrh	r0, [r5, #0]
10054514:	f7fe f9b8 	bl	10052888 <GAT_att_cmn_get_conn_index>
10054518:	aa07      	add	r2, sp, #28
1005451a:	7811      	ldrb	r1, [r2, #0]
1005451c:	2307      	movs	r3, #7
1005451e:	400b      	ands	r3, r1
10054520:	9305      	str	r3, [sp, #20]
10054522:	7013      	strb	r3, [r2, #0]
10054524:	6871      	ldr	r1, [r6, #4]
10054526:	6a09      	ldr	r1, [r1, #32]
10054528:	688b      	ldr	r3, [r1, #8]
1005452a:	493e      	ldr	r1, [pc, #248]	@ (10054624 <__arm_cp.14_2>)
1005452c:	7ac9      	ldrb	r1, [r1, #11]
1005452e:	0849      	lsrs	r1, r1, #1
10054530:	1c4a      	adds	r2, r1, #1
10054532:	2104      	movs	r1, #4
10054534:	9004      	str	r0, [sp, #16]
10054536:	9203      	str	r2, [sp, #12]
10054538:	9302      	str	r3, [sp, #8]
1005453a:	f000 f875 	bl	10054628 <GAT_srv_get_zip_val>
1005453e:	9a05      	ldr	r2, [sp, #20]
10054540:	4601      	mov	r1, r0
10054542:	4011      	ands	r1, r2
10054544:	4281      	cmp	r1, r0
10054546:	d157      	bne.n	100545f8 <GAT_srv_attr_value_write+0x124>
10054548:	9802      	ldr	r0, [sp, #8]
1005454a:	9000      	str	r0, [sp, #0]
1005454c:	2104      	movs	r1, #4
1005454e:	9804      	ldr	r0, [sp, #16]
10054550:	9b03      	ldr	r3, [sp, #12]
10054552:	f000 f87c 	bl	1005464e <GAT_srv_set_zip_val>
10054556:	6870      	ldr	r0, [r6, #4]
10054558:	6a00      	ldr	r0, [r0, #32]
1005455a:	7800      	ldrb	r0, [r0, #0]
1005455c:	07c0      	lsls	r0, r0, #31
1005455e:	d03a      	beq.n	100545d6 <GAT_srv_attr_value_write+0x102>
10054560:	882e      	ldrh	r6, [r5, #0]
10054562:	4628      	mov	r0, r5
10054564:	f001 f98d 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10054568:	4602      	mov	r2, r0
1005456a:	a808      	add	r0, sp, #32
1005456c:	8800      	ldrh	r0, [r0, #0]
1005456e:	a907      	add	r1, sp, #28
10054570:	e04c      	b.n	1005460c <GAT_srv_attr_value_write+0x138>
10054572:	6871      	ldr	r1, [r6, #4]
10054574:	6988      	ldr	r0, [r1, #24]
10054576:	2800      	cmp	r0, #0
10054578:	d039      	beq.n	100545ee <GAT_srv_attr_value_write+0x11a>
1005457a:	7d0a      	ldrb	r2, [r1, #20]
1005457c:	2a10      	cmp	r2, #16
1005457e:	d130      	bne.n	100545e2 <GAT_srv_attr_value_write+0x10e>
10054580:	8a09      	ldrh	r1, [r1, #16]
10054582:	4a26      	ldr	r2, [pc, #152]	@ (1005461c <__arm_cp.14_0>)
10054584:	4291      	cmp	r1, r2
10054586:	d12c      	bne.n	100545e2 <GAT_srv_attr_value_write+0x10e>
10054588:	9700      	str	r7, [sp, #0]
1005458a:	2102      	movs	r1, #2
1005458c:	aa06      	add	r2, sp, #24
1005458e:	ab08      	add	r3, sp, #32
10054590:	4628      	mov	r0, r5
10054592:	f7fe fcac 	bl	10052eee <GAT_att_srv_extract_write_packet_data>
10054596:	2800      	cmp	r0, #0
10054598:	d12a      	bne.n	100545f0 <GAT_srv_attr_value_write+0x11c>
1005459a:	a806      	add	r0, sp, #24
1005459c:	8800      	ldrh	r0, [r0, #0]
1005459e:	9005      	str	r0, [sp, #20]
100545a0:	8870      	ldrh	r0, [r6, #2]
100545a2:	1e80      	subs	r0, r0, #2
100545a4:	b281      	uxth	r1, r0
100545a6:	2002      	movs	r0, #2
100545a8:	f013 f938 	bl	1006781c <GAT_att_db_reverse_find_attr_of_type>
100545ac:	2800      	cmp	r0, #0
100545ae:	d021      	beq.n	100545f4 <GAT_srv_attr_value_write+0x120>
100545b0:	9905      	ldr	r1, [sp, #20]
100545b2:	0789      	lsls	r1, r1, #30
100545b4:	0e89      	lsrs	r1, r1, #26
100545b6:	6840      	ldr	r0, [r0, #4]
100545b8:	7800      	ldrb	r0, [r0, #0]
100545ba:	4008      	ands	r0, r1
100545bc:	4288      	cmp	r0, r1
100545be:	d119      	bne.n	100545f4 <GAT_srv_attr_value_write+0x120>
100545c0:	a806      	add	r0, sp, #24
100545c2:	8802      	ldrh	r2, [r0, #0]
100545c4:	8828      	ldrh	r0, [r5, #0]
100545c6:	4631      	mov	r1, r6
100545c8:	f000 f882 	bl	100546d0 <GAT_srv_set_cccd_val>
100545cc:	6870      	ldr	r0, [r6, #4]
100545ce:	6980      	ldr	r0, [r0, #24]
100545d0:	7800      	ldrb	r0, [r0, #0]
100545d2:	07c0      	lsls	r0, r0, #31
100545d4:	d112      	bne.n	100545fc <GAT_srv_attr_value_write+0x128>
100545d6:	2000      	movs	r0, #0
100545d8:	e00a      	b.n	100545f0 <GAT_srv_attr_value_write+0x11c>
100545da:	2003      	movs	r0, #3
100545dc:	7038      	strb	r0, [r7, #0]
100545de:	2086      	movs	r0, #134	@ 0x86
100545e0:	e006      	b.n	100545f0 <GAT_srv_attr_value_write+0x11c>
100545e2:	4621      	mov	r1, r4
100545e4:	462a      	mov	r2, r5
100545e6:	463b      	mov	r3, r7
100545e8:	f000 f847 	bl	1005467a <GAT_srv_attr_direct_value_write>
100545ec:	e000      	b.n	100545f0 <GAT_srv_attr_value_write+0x11c>
100545ee:	2084      	movs	r0, #132	@ 0x84
100545f0:	b009      	add	sp, #36	@ 0x24
100545f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100545f4:	20fd      	movs	r0, #253	@ 0xfd
100545f6:	e7f1      	b.n	100545dc <GAT_srv_attr_value_write+0x108>
100545f8:	2013      	movs	r0, #19
100545fa:	e7ef      	b.n	100545dc <GAT_srv_attr_value_write+0x108>
100545fc:	882e      	ldrh	r6, [r5, #0]
100545fe:	4628      	mov	r0, r5
10054600:	f001 f93f 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10054604:	4602      	mov	r2, r0
10054606:	a808      	add	r0, sp, #32
10054608:	8800      	ldrh	r0, [r0, #0]
1005460a:	a906      	add	r1, sp, #24
1005460c:	9000      	str	r0, [sp, #0]
1005460e:	9101      	str	r1, [sp, #4]
10054610:	2002      	movs	r0, #2
10054612:	4631      	mov	r1, r6
10054614:	4623      	mov	r3, r4
10054616:	f011 fc21 	bl	10065e5c <aci_gatt_srv_attribute_modified_event_push_noinline>
1005461a:	e7e9      	b.n	100545f0 <GAT_srv_attr_value_write+0x11c>

1005461c <__arm_cp.14_0>:
1005461c:	00002902 	.word	0x00002902

10054620 <__arm_cp.14_1>:
10054620:	00002b29 	.word	0x00002b29

10054624 <__arm_cp.14_2>:
10054624:	200008a8 	.word	0x200008a8

10054628 <GAT_srv_get_zip_val>:
10054628:	b510      	push	{r4, lr}
1005462a:	4348      	muls	r0, r1
1005462c:	08c4      	lsrs	r4, r0, #3
1005462e:	b2a4      	uxth	r4, r4
10054630:	4294      	cmp	r4, r2
10054632:	d901      	bls.n	10054638 <GAT_srv_get_zip_val+0x10>
10054634:	2000      	movs	r0, #0
10054636:	bd10      	pop	{r4, pc}
10054638:	2207      	movs	r2, #7
1005463a:	4010      	ands	r0, r2
1005463c:	5d1a      	ldrb	r2, [r3, r4]
1005463e:	40c2      	lsrs	r2, r0
10054640:	2020      	movs	r0, #32
10054642:	1a41      	subs	r1, r0, r1
10054644:	2000      	movs	r0, #0
10054646:	43c0      	mvns	r0, r0
10054648:	40c8      	lsrs	r0, r1
1005464a:	4010      	ands	r0, r2
1005464c:	bd10      	pop	{r4, pc}

1005464e <GAT_srv_set_zip_val>:
1005464e:	b5b0      	push	{r4, r5, r7, lr}
10054650:	4348      	muls	r0, r1
10054652:	08c4      	lsrs	r4, r0, #3
10054654:	b2a4      	uxth	r4, r4
10054656:	429c      	cmp	r4, r3
10054658:	d80e      	bhi.n	10054678 <GAT_srv_set_zip_val+0x2a>
1005465a:	9b04      	ldr	r3, [sp, #16]
1005465c:	2507      	movs	r5, #7
1005465e:	4028      	ands	r0, r5
10054660:	2520      	movs	r5, #32
10054662:	1a69      	subs	r1, r5, r1
10054664:	2500      	movs	r5, #0
10054666:	43ed      	mvns	r5, r5
10054668:	40cd      	lsrs	r5, r1
1005466a:	402a      	ands	r2, r5
1005466c:	4082      	lsls	r2, r0
1005466e:	4085      	lsls	r5, r0
10054670:	5d18      	ldrb	r0, [r3, r4]
10054672:	43a8      	bics	r0, r5
10054674:	4310      	orrs	r0, r2
10054676:	5518      	strb	r0, [r3, r4]
10054678:	bdb0      	pop	{r4, r5, r7, pc}

1005467a <GAT_srv_attr_direct_value_write>:
1005467a:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005467c:	4616      	mov	r6, r2
1005467e:	460c      	mov	r4, r1
10054680:	4605      	mov	r5, r0
10054682:	6882      	ldr	r2, [r0, #8]
10054684:	8881      	ldrh	r1, [r0, #4]
10054686:	9300      	str	r3, [sp, #0]
10054688:	ab02      	add	r3, sp, #8
1005468a:	4630      	mov	r0, r6
1005468c:	f7fe fc2f 	bl	10052eee <GAT_att_srv_extract_write_packet_data>
10054690:	2800      	cmp	r0, #0
10054692:	d000      	beq.n	10054696 <GAT_srv_attr_direct_value_write+0x1c>
10054694:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10054696:	7828      	ldrb	r0, [r5, #0]
10054698:	0781      	lsls	r1, r0, #30
1005469a:	d403      	bmi.n	100546a4 <GAT_srv_attr_direct_value_write+0x2a>
1005469c:	88a9      	ldrh	r1, [r5, #4]
1005469e:	aa02      	add	r2, sp, #8
100546a0:	8011      	strh	r1, [r2, #0]
100546a2:	e001      	b.n	100546a8 <GAT_srv_attr_direct_value_write+0x2e>
100546a4:	9902      	ldr	r1, [sp, #8]
100546a6:	8069      	strh	r1, [r5, #2]
100546a8:	07c0      	lsls	r0, r0, #31
100546aa:	d101      	bne.n	100546b0 <GAT_srv_attr_direct_value_write+0x36>
100546ac:	2000      	movs	r0, #0
100546ae:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100546b0:	8837      	ldrh	r7, [r6, #0]
100546b2:	4630      	mov	r0, r6
100546b4:	f001 f8e5 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
100546b8:	4602      	mov	r2, r0
100546ba:	a802      	add	r0, sp, #8
100546bc:	8800      	ldrh	r0, [r0, #0]
100546be:	68a9      	ldr	r1, [r5, #8]
100546c0:	9000      	str	r0, [sp, #0]
100546c2:	9101      	str	r1, [sp, #4]
100546c4:	2002      	movs	r0, #2
100546c6:	4639      	mov	r1, r7
100546c8:	4623      	mov	r3, r4
100546ca:	f011 fbc7 	bl	10065e5c <aci_gatt_srv_attribute_modified_event_push_noinline>
100546ce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100546d0 <GAT_srv_set_cccd_val>:
100546d0:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
100546d2:	4614      	mov	r4, r2
100546d4:	460d      	mov	r5, r1
100546d6:	f7fe f8d7 	bl	10052888 <GAT_att_cmn_get_conn_index>
100546da:	6869      	ldr	r1, [r5, #4]
100546dc:	6989      	ldr	r1, [r1, #24]
100546de:	888b      	ldrh	r3, [r1, #4]
100546e0:	6889      	ldr	r1, [r1, #8]
100546e2:	9100      	str	r1, [sp, #0]
100546e4:	2103      	movs	r1, #3
100546e6:	400c      	ands	r4, r1
100546e8:	2102      	movs	r1, #2
100546ea:	4622      	mov	r2, r4
100546ec:	f7ff ffaf 	bl	1005464e <GAT_srv_set_zip_val>
100546f0:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
	...

100546f4 <GAT_srv_is_supported_grouping_type>:
100546f4:	b570      	push	{r4, r5, r6, lr}
100546f6:	b08a      	sub	sp, #40	@ 0x28
100546f8:	4604      	mov	r4, r0
100546fa:	ad05      	add	r5, sp, #20
100546fc:	a10d      	add	r1, pc, #52	@ (adr r1, 10054734 <GAT_srv_is_supported_grouping_type+0x40>)
100546fe:	2614      	movs	r6, #20
10054700:	4628      	mov	r0, r5
10054702:	4632      	mov	r2, r6
10054704:	f017 fad9 	bl	1006bcba <__aeabi_memcpy>
10054708:	4668      	mov	r0, sp
1005470a:	a10f      	add	r1, pc, #60	@ (adr r1, 10054748 <GAT_srv_is_supported_grouping_type+0x54>)
1005470c:	4632      	mov	r2, r6
1005470e:	f017 fad4 	bl	1006bcba <__aeabi_memcpy>
10054712:	4620      	mov	r0, r4
10054714:	4629      	mov	r1, r5
10054716:	f010 ff33 	bl	10065580 <UUID_cmp_128bits>
1005471a:	2800      	cmp	r0, #0
1005471c:	d007      	beq.n	1005472e <GAT_srv_is_supported_grouping_type+0x3a>
1005471e:	4669      	mov	r1, sp
10054720:	4620      	mov	r0, r4
10054722:	f010 ff2d 	bl	10065580 <UUID_cmp_128bits>
10054726:	4601      	mov	r1, r0
10054728:	4240      	negs	r0, r0
1005472a:	4148      	adcs	r0, r1
1005472c:	e000      	b.n	10054730 <GAT_srv_is_supported_grouping_type+0x3c>
1005472e:	2001      	movs	r0, #1
10054730:	b00a      	add	sp, #40	@ 0x28
10054732:	bd70      	pop	{r4, r5, r6, pc}
10054734:	5f9b34fb 	.word	0x5f9b34fb
10054738:	80000080 	.word	0x80000080
1005473c:	00001000 	.word	0x00001000
10054740:	00002800 	.word	0x00002800
10054744:	00000010 	.word	0x00000010
10054748:	5f9b34fb 	.word	0x5f9b34fb
1005474c:	80000080 	.word	0x80000080
10054750:	00001000 	.word	0x00001000
10054754:	00002801 	.word	0x00002801
10054758:	00000010 	.word	0x00000010

1005475c <GAT_srv_set_change_aware>:
1005475c:	b5e0      	push	{r5, r6, r7, lr}
1005475e:	aa01      	add	r2, sp, #4
10054760:	21c2      	movs	r1, #194	@ 0xc2
10054762:	8011      	strh	r1, [r2, #0]
10054764:	8901      	ldrh	r1, [r0, #8]
10054766:	9200      	str	r2, [sp, #0]
10054768:	2001      	movs	r0, #1
1005476a:	2200      	movs	r2, #0
1005476c:	4b01      	ldr	r3, [pc, #4]	@ (10054774 <__arm_cp.21_0>)
1005476e:	f7fd ff23 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
10054772:	bd8c      	pop	{r2, r3, r7, pc}

10054774 <__arm_cp.21_0>:
10054774:	1005287d 	.word	0x1005287d

10054778 <GAT_srv_check_change_aware>:
10054778:	b5f0      	push	{r4, r5, r6, r7, lr}
1005477a:	b087      	sub	sp, #28
1005477c:	4605      	mov	r5, r0
1005477e:	ac02      	add	r4, sp, #8
10054780:	4927      	ldr	r1, [pc, #156]	@ (10054820 <__arm_cp.22_0>)
10054782:	2214      	movs	r2, #20
10054784:	4620      	mov	r0, r4
10054786:	f017 fa98 	bl	1006bcba <__aeabi_memcpy>
1005478a:	2001      	movs	r0, #1
1005478c:	4e25      	ldr	r6, [pc, #148]	@ (10054824 <__arm_cp.22_1>)
1005478e:	4631      	mov	r1, r6
10054790:	4622      	mov	r2, r4
10054792:	f000 f84d 	bl	10054830 <GAT_srv_find_by_type_attr_p>
10054796:	2700      	movs	r7, #0
10054798:	2800      	cmp	r0, #0
1005479a:	d03c      	beq.n	10054816 <GAT_srv_check_change_aware+0x9e>
1005479c:	4601      	mov	r1, r0
1005479e:	6828      	ldr	r0, [r5, #0]
100547a0:	8882      	ldrh	r2, [r0, #4]
100547a2:	0652      	lsls	r2, r2, #25
100547a4:	d537      	bpl.n	10054816 <GAT_srv_check_change_aware+0x9e>
100547a6:	792a      	ldrb	r2, [r5, #4]
100547a8:	23fe      	movs	r3, #254	@ 0xfe
100547aa:	4013      	ands	r3, r2
100547ac:	2486      	movs	r4, #134	@ 0x86
100547ae:	2b04      	cmp	r3, #4
100547b0:	d032      	beq.n	10054818 <GAT_srv_check_change_aware+0xa0>
100547b2:	8900      	ldrh	r0, [r0, #8]
100547b4:	2201      	movs	r2, #1
100547b6:	f000 f85b 	bl	10054870 <GAT_srv_check_client_support_feature>
100547ba:	2881      	cmp	r0, #129	@ 0x81
100547bc:	d02b      	beq.n	10054816 <GAT_srv_check_change_aware+0x9e>
100547be:	6828      	ldr	r0, [r5, #0]
100547c0:	8881      	ldrh	r1, [r0, #4]
100547c2:	060a      	lsls	r2, r1, #24
100547c4:	d425      	bmi.n	10054812 <GAT_srv_check_change_aware+0x9a>
100547c6:	2780      	movs	r7, #128	@ 0x80
100547c8:	4339      	orrs	r1, r7
100547ca:	8081      	strh	r1, [r0, #4]
100547cc:	7928      	ldrb	r0, [r5, #4]
100547ce:	2802      	cmp	r0, #2
100547d0:	d122      	bne.n	10054818 <GAT_srv_check_change_aware+0xa0>
100547d2:	8928      	ldrh	r0, [r5, #8]
100547d4:	2801      	cmp	r0, #1
100547d6:	d11f      	bne.n	10054818 <GAT_srv_check_change_aware+0xa0>
100547d8:	8968      	ldrh	r0, [r5, #10]
100547da:	42b0      	cmp	r0, r6
100547dc:	d11c      	bne.n	10054818 <GAT_srv_check_change_aware+0xa0>
100547de:	68ea      	ldr	r2, [r5, #12]
100547e0:	7c10      	ldrb	r0, [r2, #16]
100547e2:	2810      	cmp	r0, #16
100547e4:	d118      	bne.n	10054818 <GAT_srv_check_change_aware+0xa0>
100547e6:	8990      	ldrh	r0, [r2, #12]
100547e8:	490f      	ldr	r1, [pc, #60]	@ (10054828 <__arm_cp.22_2>)
100547ea:	4288      	cmp	r0, r1
100547ec:	d114      	bne.n	10054818 <GAT_srv_check_change_aware+0xa0>
100547ee:	2001      	movs	r0, #1
100547f0:	4631      	mov	r1, r6
100547f2:	f000 f81d 	bl	10054830 <GAT_srv_find_by_type_attr_p>
100547f6:	2800      	cmp	r0, #0
100547f8:	d00e      	beq.n	10054818 <GAT_srv_check_change_aware+0xa0>
100547fa:	a801      	add	r0, sp, #4
100547fc:	8007      	strh	r7, [r0, #0]
100547fe:	6829      	ldr	r1, [r5, #0]
10054800:	8909      	ldrh	r1, [r1, #8]
10054802:	9000      	str	r0, [sp, #0]
10054804:	2001      	movs	r0, #1
10054806:	2400      	movs	r4, #0
10054808:	4b08      	ldr	r3, [pc, #32]	@ (1005482c <__arm_cp.22_3>)
1005480a:	4622      	mov	r2, r4
1005480c:	f7fd fed4 	bl	100525b8 <GAT_att_cmn_for_each_ch_descr>
10054810:	e002      	b.n	10054818 <GAT_srv_check_change_aware+0xa0>
10054812:	f7ff ffa3 	bl	1005475c <GAT_srv_set_change_aware>
10054816:	463c      	mov	r4, r7
10054818:	4620      	mov	r0, r4
1005481a:	b007      	add	sp, #28
1005481c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005481e:	46c0      	nop			@ (mov r8, r8)

10054820 <__arm_cp.22_0>:
10054820:	1006e96c 	.word	0x1006e96c

10054824 <__arm_cp.22_1>:
10054824:	0000ffff 	.word	0x0000ffff

10054828 <__arm_cp.22_2>:
10054828:	00002b2a 	.word	0x00002b2a

1005482c <__arm_cp.22_3>:
1005482c:	10052871 	.word	0x10052871

10054830 <GAT_srv_find_by_type_attr_p>:
10054830:	b5f0      	push	{r4, r5, r6, r7, lr}
10054832:	b085      	sub	sp, #20
10054834:	4614      	mov	r4, r2
10054836:	460d      	mov	r5, r1
10054838:	f012 fee2 	bl	10067600 <GAT_att_db_find_from_handle>
1005483c:	4606      	mov	r6, r0
1005483e:	2000      	movs	r0, #0
10054840:	2e00      	cmp	r6, #0
10054842:	d012      	beq.n	1005486a <GAT_srv_find_by_type_attr_p+0x3a>
10054844:	8871      	ldrh	r1, [r6, #2]
10054846:	42a9      	cmp	r1, r5
10054848:	d80f      	bhi.n	1005486a <GAT_srv_find_by_type_attr_p+0x3a>
1005484a:	466f      	mov	r7, sp
1005484c:	4630      	mov	r0, r6
1005484e:	4639      	mov	r1, r7
10054850:	f7ff fc7e 	bl	10054150 <GAT_srv_get_attr_type>
10054854:	4620      	mov	r0, r4
10054856:	4639      	mov	r1, r7
10054858:	f010 fe7b 	bl	10065552 <UUID_cmp>
1005485c:	2800      	cmp	r0, #0
1005485e:	d003      	beq.n	10054868 <GAT_srv_find_by_type_attr_p+0x38>
10054860:	4630      	mov	r0, r6
10054862:	f012 ff2f 	bl	100676c4 <GAT_att_db_get_next>
10054866:	e7e9      	b.n	1005483c <GAT_srv_find_by_type_attr_p+0xc>
10054868:	4630      	mov	r0, r6
1005486a:	b005      	add	sp, #20
1005486c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10054870 <GAT_srv_check_client_support_feature>:
10054870:	b570      	push	{r4, r5, r6, lr}
10054872:	b086      	sub	sp, #24
10054874:	4614      	mov	r4, r2
10054876:	460e      	mov	r6, r1
10054878:	4605      	mov	r5, r0
1005487a:	a801      	add	r0, sp, #4
1005487c:	4910      	ldr	r1, [pc, #64]	@ (100548c0 <__arm_cp.24_0>)
1005487e:	2214      	movs	r2, #20
10054880:	f017 fa1b 	bl	1006bcba <__aeabi_memcpy>
10054884:	2e00      	cmp	r6, #0
10054886:	d107      	bne.n	10054898 <GAT_srv_check_client_support_feature+0x28>
10054888:	2001      	movs	r0, #1
1005488a:	490e      	ldr	r1, [pc, #56]	@ (100548c4 <__arm_cp.24_1>)
1005488c:	aa01      	add	r2, sp, #4
1005488e:	f7ff ffcf 	bl	10054830 <GAT_srv_find_by_type_attr_p>
10054892:	4606      	mov	r6, r0
10054894:	2800      	cmp	r0, #0
10054896:	d010      	beq.n	100548ba <GAT_srv_check_client_support_feature+0x4a>
10054898:	4628      	mov	r0, r5
1005489a:	f7fd fff5 	bl	10052888 <GAT_att_cmn_get_conn_index>
1005489e:	6871      	ldr	r1, [r6, #4]
100548a0:	6a09      	ldr	r1, [r1, #32]
100548a2:	688b      	ldr	r3, [r1, #8]
100548a4:	4908      	ldr	r1, [pc, #32]	@ (100548c8 <__arm_cp.24_2>)
100548a6:	7ac9      	ldrb	r1, [r1, #11]
100548a8:	0849      	lsrs	r1, r1, #1
100548aa:	1c4a      	adds	r2, r1, #1
100548ac:	2104      	movs	r1, #4
100548ae:	f7ff febb 	bl	10054628 <GAT_srv_get_zip_val>
100548b2:	4220      	tst	r0, r4
100548b4:	d001      	beq.n	100548ba <GAT_srv_check_client_support_feature+0x4a>
100548b6:	2000      	movs	r0, #0
100548b8:	e000      	b.n	100548bc <GAT_srv_check_client_support_feature+0x4c>
100548ba:	2081      	movs	r0, #129	@ 0x81
100548bc:	b006      	add	sp, #24
100548be:	bd70      	pop	{r4, r5, r6, pc}

100548c0 <__arm_cp.24_0>:
100548c0:	1006e96c 	.word	0x1006e96c

100548c4 <__arm_cp.24_1>:
100548c4:	0000ffff 	.word	0x0000ffff

100548c8 <__arm_cp.24_2>:
100548c8:	200008a8 	.word	0x200008a8

100548cc <GAT_srv_get_attribute_handle>:
100548cc:	b580      	push	{r7, lr}
100548ce:	f012 fec1 	bl	10067654 <GAT_att_db_find_by_def>
100548d2:	2800      	cmp	r0, #0
100548d4:	d001      	beq.n	100548da <GAT_srv_get_attribute_handle+0xe>
100548d6:	8840      	ldrh	r0, [r0, #2]
100548d8:	bd80      	pop	{r7, pc}
100548da:	2000      	movs	r0, #0
100548dc:	bd80      	pop	{r7, pc}
	...

100548e0 <GAT_srv_get_cccd_attr_p>:
100548e0:	b570      	push	{r4, r5, r6, lr}
100548e2:	b08a      	sub	sp, #40	@ 0x28
100548e4:	4605      	mov	r5, r0
100548e6:	a805      	add	r0, sp, #20
100548e8:	a110      	add	r1, pc, #64	@ (adr r1, 1005492c <GAT_srv_get_cccd_attr_p+0x4c>)
100548ea:	2214      	movs	r2, #20
100548ec:	f017 f9e5 	bl	1006bcba <__aeabi_memcpy>
100548f0:	7828      	ldrb	r0, [r5, #0]
100548f2:	21fe      	movs	r1, #254	@ 0xfe
100548f4:	4001      	ands	r1, r0
100548f6:	2400      	movs	r4, #0
100548f8:	2902      	cmp	r1, #2
100548fa:	d114      	bne.n	10054926 <GAT_srv_get_cccd_attr_p+0x46>
100548fc:	4628      	mov	r0, r5
100548fe:	f012 fee1 	bl	100676c4 <GAT_att_db_get_next>
10054902:	4605      	mov	r5, r0
10054904:	2800      	cmp	r0, #0
10054906:	d00e      	beq.n	10054926 <GAT_srv_get_cccd_attr_p+0x46>
10054908:	7828      	ldrb	r0, [r5, #0]
1005490a:	2802      	cmp	r0, #2
1005490c:	d00b      	beq.n	10054926 <GAT_srv_get_cccd_attr_p+0x46>
1005490e:	466e      	mov	r6, sp
10054910:	4628      	mov	r0, r5
10054912:	4631      	mov	r1, r6
10054914:	f7ff fc1c 	bl	10054150 <GAT_srv_get_attr_type>
10054918:	a805      	add	r0, sp, #20
1005491a:	4631      	mov	r1, r6
1005491c:	f010 fe19 	bl	10065552 <UUID_cmp>
10054920:	2800      	cmp	r0, #0
10054922:	d1eb      	bne.n	100548fc <GAT_srv_get_cccd_attr_p+0x1c>
10054924:	462c      	mov	r4, r5
10054926:	4620      	mov	r0, r4
10054928:	b00a      	add	sp, #40	@ 0x28
1005492a:	bd70      	pop	{r4, r5, r6, pc}
1005492c:	5f9b34fb 	.word	0x5f9b34fb
10054930:	80000080 	.word	0x80000080
10054934:	00001000 	.word	0x00001000
10054938:	00002902 	.word	0x00002902
1005493c:	00000010 	.word	0x00000010

10054940 <GAT_srv_get_cccd_val>:
10054940:	b510      	push	{r4, lr}
10054942:	460c      	mov	r4, r1
10054944:	f7fd ffa0 	bl	10052888 <GAT_att_cmn_get_conn_index>
10054948:	6861      	ldr	r1, [r4, #4]
1005494a:	6989      	ldr	r1, [r1, #24]
1005494c:	688b      	ldr	r3, [r1, #8]
1005494e:	888a      	ldrh	r2, [r1, #4]
10054950:	2102      	movs	r1, #2
10054952:	f7ff fe69 	bl	10054628 <GAT_srv_get_zip_val>
10054956:	bd10      	pop	{r4, pc}

10054958 <GAT_srv_aes_cmac_append>:
10054958:	b5f0      	push	{r4, r5, r6, r7, lr}
1005495a:	b085      	sub	sp, #20
1005495c:	9203      	str	r2, [sp, #12]
1005495e:	460c      	mov	r4, r1
10054960:	2101      	movs	r1, #1
10054962:	0209      	lsls	r1, r1, #8
10054964:	1841      	adds	r1, r0, r1
10054966:	9104      	str	r1, [sp, #16]
10054968:	9002      	str	r0, [sp, #8]
1005496a:	30e0      	adds	r0, #224	@ 0xe0
1005496c:	9001      	str	r0, [sp, #4]
1005496e:	0420      	lsls	r0, r4, #16
10054970:	d023      	beq.n	100549ba <GAT_srv_aes_cmac_append+0x62>
10054972:	9804      	ldr	r0, [sp, #16]
10054974:	8800      	ldrh	r0, [r0, #0]
10054976:	2810      	cmp	r0, #16
10054978:	d107      	bne.n	1005498a <GAT_srv_aes_cmac_append+0x32>
1005497a:	2210      	movs	r2, #16
1005497c:	9802      	ldr	r0, [sp, #8]
1005497e:	9901      	ldr	r1, [sp, #4]
10054980:	f7f0 f87a 	bl	10044a78 <BLEPLAT_AesCMACEncryptAppend>
10054984:	2000      	movs	r0, #0
10054986:	9904      	ldr	r1, [sp, #16]
10054988:	8008      	strh	r0, [r1, #0]
1005498a:	2110      	movs	r1, #16
1005498c:	1a0d      	subs	r5, r1, r0
1005498e:	b2a9      	uxth	r1, r5
10054990:	b2a2      	uxth	r2, r4
10054992:	4291      	cmp	r1, r2
10054994:	d300      	bcc.n	10054998 <GAT_srv_aes_cmac_append+0x40>
10054996:	4625      	mov	r5, r4
10054998:	b2af      	uxth	r7, r5
1005499a:	9902      	ldr	r1, [sp, #8]
1005499c:	1808      	adds	r0, r1, r0
1005499e:	30e0      	adds	r0, #224	@ 0xe0
100549a0:	9e03      	ldr	r6, [sp, #12]
100549a2:	4631      	mov	r1, r6
100549a4:	463a      	mov	r2, r7
100549a6:	f7ef fffd 	bl	100449a4 <BLEPLAT_MemCpy>
100549aa:	9904      	ldr	r1, [sp, #16]
100549ac:	8808      	ldrh	r0, [r1, #0]
100549ae:	1828      	adds	r0, r5, r0
100549b0:	8008      	strh	r0, [r1, #0]
100549b2:	1b64      	subs	r4, r4, r5
100549b4:	19f6      	adds	r6, r6, r7
100549b6:	9603      	str	r6, [sp, #12]
100549b8:	e7d9      	b.n	1005496e <GAT_srv_aes_cmac_append+0x16>
100549ba:	b005      	add	sp, #20
100549bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

100549c0 <GAT_srv_add_service>:
100549c0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100549c2:	4604      	mov	r4, r0
100549c4:	f000 f89c 	bl	10054b00 <GAT_srv_db_update_allowed>
100549c8:	250c      	movs	r5, #12
100549ca:	2800      	cmp	r0, #0
100549cc:	d025      	beq.n	10054a1a <GAT_srv_add_service+0x5a>
100549ce:	2612      	movs	r6, #18
100549d0:	2c00      	cmp	r4, #0
100549d2:	d023      	beq.n	10054a1c <GAT_srv_add_service+0x5c>
100549d4:	7d20      	ldrb	r0, [r4, #20]
100549d6:	1e40      	subs	r0, r0, #1
100549d8:	2801      	cmp	r0, #1
100549da:	d81f      	bhi.n	10054a1c <GAT_srv_add_service+0x5c>
100549dc:	7c20      	ldrb	r0, [r4, #16]
100549de:	2880      	cmp	r0, #128	@ 0x80
100549e0:	d01e      	beq.n	10054a20 <GAT_srv_add_service+0x60>
100549e2:	2810      	cmp	r0, #16
100549e4:	d11a      	bne.n	10054a1c <GAT_srv_add_service+0x5c>
100549e6:	89a0      	ldrh	r0, [r4, #12]
100549e8:	2101      	movs	r1, #1
100549ea:	4388      	bics	r0, r1
100549ec:	2103      	movs	r1, #3
100549ee:	02c9      	lsls	r1, r1, #11
100549f0:	4288      	cmp	r0, r1
100549f2:	d115      	bne.n	10054a20 <GAT_srv_add_service+0x60>
100549f4:	2001      	movs	r0, #1
100549f6:	f012 fe03 	bl	10067600 <GAT_att_db_find_from_handle>
100549fa:	2800      	cmp	r0, #0
100549fc:	d010      	beq.n	10054a20 <GAT_srv_add_service+0x60>
100549fe:	7801      	ldrb	r1, [r0, #0]
10054a00:	2900      	cmp	r1, #0
10054a02:	d107      	bne.n	10054a14 <GAT_srv_add_service+0x54>
10054a04:	6841      	ldr	r1, [r0, #4]
10054a06:	7c0a      	ldrb	r2, [r1, #16]
10054a08:	2a10      	cmp	r2, #16
10054a0a:	d103      	bne.n	10054a14 <GAT_srv_add_service+0x54>
10054a0c:	8989      	ldrh	r1, [r1, #12]
10054a0e:	89a2      	ldrh	r2, [r4, #12]
10054a10:	428a      	cmp	r2, r1
10054a12:	d002      	beq.n	10054a1a <GAT_srv_add_service+0x5a>
10054a14:	f012 fe56 	bl	100676c4 <GAT_att_db_get_next>
10054a18:	e7ef      	b.n	100549fa <GAT_srv_add_service+0x3a>
10054a1a:	462e      	mov	r6, r5
10054a1c:	4630      	mov	r0, r6
10054a1e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10054a20:	2000      	movs	r0, #0
10054a22:	f012 fee5 	bl	100677f0 <GAT_att_db_find_last_attr_of_type>
10054a26:	2800      	cmp	r0, #0
10054a28:	d006      	beq.n	10054a38 <GAT_srv_add_service+0x78>
10054a2a:	6841      	ldr	r1, [r0, #4]
10054a2c:	8ac9      	ldrh	r1, [r1, #22]
10054a2e:	2900      	cmp	r1, #0
10054a30:	d004      	beq.n	10054a3c <GAT_srv_add_service+0x7c>
10054a32:	8840      	ldrh	r0, [r0, #2]
10054a34:	1840      	adds	r0, r0, r1
10054a36:	e004      	b.n	10054a42 <GAT_srv_add_service+0x82>
10054a38:	2001      	movs	r0, #1
10054a3a:	e002      	b.n	10054a42 <GAT_srv_add_service+0x82>
10054a3c:	f012 fe86 	bl	1006774c <GAT_att_db_get_last_handle>
10054a40:	1c40      	adds	r0, r0, #1
10054a42:	b282      	uxth	r2, r0
10054a44:	2600      	movs	r6, #0
10054a46:	4630      	mov	r0, r6
10054a48:	4631      	mov	r1, r6
10054a4a:	4623      	mov	r3, r4
10054a4c:	f012 fd5c 	bl	10067508 <GAT_att_db_insert>
10054a50:	2800      	cmp	r0, #0
10054a52:	d020      	beq.n	10054a96 <GAT_srv_add_service+0xd6>
10054a54:	43f7      	mvns	r7, r6
10054a56:	8ae1      	ldrh	r1, [r4, #22]
10054a58:	1e49      	subs	r1, r1, #1
10054a5a:	9102      	str	r1, [sp, #8]
10054a5c:	9000      	str	r0, [sp, #0]
10054a5e:	9401      	str	r4, [sp, #4]
10054a60:	1c7f      	adds	r7, r7, #1
10054a62:	7e21      	ldrb	r1, [r4, #24]
10054a64:	428f      	cmp	r7, r1
10054a66:	d218      	bcs.n	10054a9a <GAT_srv_add_service+0xda>
10054a68:	8ae1      	ldrh	r1, [r4, #22]
10054a6a:	2900      	cmp	r1, #0
10054a6c:	d004      	beq.n	10054a78 <GAT_srv_add_service+0xb8>
10054a6e:	9a02      	ldr	r2, [sp, #8]
10054a70:	0411      	lsls	r1, r2, #16
10054a72:	d03a      	beq.n	10054aea <GAT_srv_add_service+0x12a>
10054a74:	1e52      	subs	r2, r2, #1
10054a76:	9202      	str	r2, [sp, #8]
10054a78:	1d35      	adds	r5, r6, #4
10054a7a:	1c40      	adds	r0, r0, #1
10054a7c:	9c01      	ldr	r4, [sp, #4]
10054a7e:	69e1      	ldr	r1, [r4, #28]
10054a80:	598b      	ldr	r3, [r1, r6]
10054a82:	b282      	uxth	r2, r0
10054a84:	2001      	movs	r0, #1
10054a86:	2100      	movs	r1, #0
10054a88:	f012 fd3e 	bl	10067508 <GAT_att_db_insert>
10054a8c:	2800      	cmp	r0, #0
10054a8e:	462e      	mov	r6, r5
10054a90:	d1e6      	bne.n	10054a60 <GAT_srv_add_service+0xa0>
10054a92:	2687      	movs	r6, #135	@ 0x87
10054a94:	e02e      	b.n	10054af4 <GAT_srv_add_service+0x134>
10054a96:	2687      	movs	r6, #135	@ 0x87
10054a98:	e7c0      	b.n	10054a1c <GAT_srv_add_service+0x5c>
10054a9a:	4818      	ldr	r0, [pc, #96]	@ (10054afc <__arm_cp.0_0>)
10054a9c:	6800      	ldr	r0, [r0, #0]
10054a9e:	215c      	movs	r1, #92	@ 0x5c
10054aa0:	5c42      	ldrb	r2, [r0, r1]
10054aa2:	2302      	movs	r3, #2
10054aa4:	4313      	orrs	r3, r2
10054aa6:	5443      	strb	r3, [r0, r1]
10054aa8:	200a      	movs	r0, #10
10054aaa:	f010 fbc1 	bl	10065230 <tsk_notify_idx>
10054aae:	f7ed ff12 	bl	100428d6 <BLE_STACK_ProcessRequest>
10054ab2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
10054ab4:	2600      	movs	r6, #0
10054ab6:	2800      	cmp	r0, #0
10054ab8:	d0b0      	beq.n	10054a1c <GAT_srv_add_service+0x5c>
10054aba:	2020      	movs	r0, #32
10054abc:	5c20      	ldrb	r0, [r4, r0]
10054abe:	2800      	cmp	r0, #0
10054ac0:	d0ac      	beq.n	10054a1c <GAT_srv_add_service+0x5c>
10054ac2:	4621      	mov	r1, r4
10054ac4:	3120      	adds	r1, #32
10054ac6:	9102      	str	r1, [sp, #8]
10054ac8:	2500      	movs	r5, #0
10054aca:	462f      	mov	r7, r5
10054acc:	9501      	str	r5, [sp, #4]
10054ace:	4285      	cmp	r5, r0
10054ad0:	9900      	ldr	r1, [sp, #0]
10054ad2:	d20c      	bcs.n	10054aee <GAT_srv_add_service+0x12e>
10054ad4:	6a60      	ldr	r0, [r4, #36]	@ 0x24
10054ad6:	19c0      	adds	r0, r0, r7
10054ad8:	f000 f822 	bl	10054b20 <GAT_srv_add_characteristic>
10054adc:	2800      	cmp	r0, #0
10054ade:	d108      	bne.n	10054af2 <GAT_srv_add_service+0x132>
10054ae0:	3724      	adds	r7, #36	@ 0x24
10054ae2:	9802      	ldr	r0, [sp, #8]
10054ae4:	7800      	ldrb	r0, [r0, #0]
10054ae6:	1c6d      	adds	r5, r5, #1
10054ae8:	e7f1      	b.n	10054ace <GAT_srv_add_service+0x10e>
10054aea:	2612      	movs	r6, #18
10054aec:	e002      	b.n	10054af4 <GAT_srv_add_service+0x134>
10054aee:	9e01      	ldr	r6, [sp, #4]
10054af0:	e794      	b.n	10054a1c <GAT_srv_add_service+0x5c>
10054af2:	4606      	mov	r6, r0
10054af4:	9800      	ldr	r0, [sp, #0]
10054af6:	f000 f8a3 	bl	10054c40 <GAT_srv_rm_service>
10054afa:	e78f      	b.n	10054a1c <GAT_srv_add_service+0x5c>

10054afc <__arm_cp.0_0>:
10054afc:	20000848 	.word	0x20000848

10054b00 <GAT_srv_db_update_allowed>:
10054b00:	b510      	push	{r4, lr}
10054b02:	f7fe faaf 	bl	10053064 <GAT_att_srv_request_user_pending>
10054b06:	2400      	movs	r4, #0
10054b08:	2800      	cmp	r0, #0
10054b0a:	d106      	bne.n	10054b1a <GAT_srv_db_update_allowed+0x1a>
10054b0c:	f7fe fa98 	bl	10053040 <GAT_att_srv_confirmation_pending>
10054b10:	2800      	cmp	r0, #0
10054b12:	d102      	bne.n	10054b1a <GAT_srv_db_update_allowed+0x1a>
10054b14:	f7fe fabe 	bl	10053094 <GAT_att_srv_flush_user_pending_list>
10054b18:	2401      	movs	r4, #1
10054b1a:	4620      	mov	r0, r4
10054b1c:	bd10      	pop	{r4, pc}
	...

10054b20 <GAT_srv_add_characteristic>:
10054b20:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10054b22:	460e      	mov	r6, r1
10054b24:	4604      	mov	r4, r0
10054b26:	f7ff ffeb 	bl	10054b00 <GAT_srv_db_update_allowed>
10054b2a:	2800      	cmp	r0, #0
10054b2c:	d066      	beq.n	10054bfc <GAT_srv_add_characteristic+0xdc>
10054b2e:	2512      	movs	r5, #18
10054b30:	2c00      	cmp	r4, #0
10054b32:	d064      	beq.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b34:	7d20      	ldrb	r0, [r4, #20]
10054b36:	2880      	cmp	r0, #128	@ 0x80
10054b38:	d013      	beq.n	10054b62 <GAT_srv_add_characteristic+0x42>
10054b3a:	2810      	cmp	r0, #16
10054b3c:	d15f      	bne.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b3e:	8a20      	ldrh	r0, [r4, #16]
10054b40:	493c      	ldr	r1, [pc, #240]	@ (10054c34 <__arm_cp.2_0>)
10054b42:	4288      	cmp	r0, r1
10054b44:	d10d      	bne.n	10054b62 <GAT_srv_add_characteristic+0x42>
10054b46:	6a20      	ldr	r0, [r4, #32]
10054b48:	2800      	cmp	r0, #0
10054b4a:	d058      	beq.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b4c:	8882      	ldrh	r2, [r0, #4]
10054b4e:	493a      	ldr	r1, [pc, #232]	@ (10054c38 <__arm_cp.2_1>)
10054b50:	7ac9      	ldrb	r1, [r1, #11]
10054b52:	0849      	lsrs	r1, r1, #1
10054b54:	1c49      	adds	r1, r1, #1
10054b56:	428a      	cmp	r2, r1
10054b58:	d351      	bcc.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b5a:	6880      	ldr	r0, [r0, #8]
10054b5c:	2100      	movs	r1, #0
10054b5e:	f7ef ff31 	bl	100449c4 <BLEPLAT_MemSet>
10054b62:	78a0      	ldrb	r0, [r4, #2]
10054b64:	2124      	movs	r1, #36	@ 0x24
10054b66:	4208      	tst	r0, r1
10054b68:	d003      	beq.n	10054b72 <GAT_srv_add_characteristic+0x52>
10054b6a:	7860      	ldrb	r0, [r4, #1]
10054b6c:	1fc0      	subs	r0, r0, #7
10054b6e:	2809      	cmp	r0, #9
10054b70:	d845      	bhi.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b72:	4630      	mov	r0, r6
10054b74:	f012 fd1c 	bl	100675b0 <GAT_att_db_find_by_handle>
10054b78:	2800      	cmp	r0, #0
10054b7a:	d040      	beq.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b7c:	4606      	mov	r6, r0
10054b7e:	7800      	ldrb	r0, [r0, #0]
10054b80:	2800      	cmp	r0, #0
10054b82:	d13c      	bne.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b84:	7e20      	ldrb	r0, [r4, #24]
10054b86:	1c81      	adds	r1, r0, #2
10054b88:	4630      	mov	r0, r6
10054b8a:	f000 f883 	bl	10054c94 <GAT_srv_check_group_size>
10054b8e:	4605      	mov	r5, r0
10054b90:	2800      	cmp	r0, #0
10054b92:	d134      	bne.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054b94:	4630      	mov	r0, r6
10054b96:	f7ff fb03 	bl	100541a0 <GAT_srv_get_att_group_end_handle>
10054b9a:	4605      	mov	r5, r0
10054b9c:	f012 fd08 	bl	100675b0 <GAT_att_db_find_by_handle>
10054ba0:	4601      	mov	r1, r0
10054ba2:	1c68      	adds	r0, r5, #1
10054ba4:	b286      	uxth	r6, r0
10054ba6:	2702      	movs	r7, #2
10054ba8:	4638      	mov	r0, r7
10054baa:	4632      	mov	r2, r6
10054bac:	4623      	mov	r3, r4
10054bae:	f012 fcab 	bl	10067508 <GAT_att_db_insert>
10054bb2:	42b0      	cmp	r0, r6
10054bb4:	d125      	bne.n	10054c02 <GAT_srv_add_characteristic+0xe2>
10054bb6:	4630      	mov	r0, r6
10054bb8:	f012 fcfa 	bl	100675b0 <GAT_att_db_find_by_handle>
10054bbc:	4601      	mov	r1, r0
10054bbe:	1ca8      	adds	r0, r5, #2
10054bc0:	b282      	uxth	r2, r0
10054bc2:	2003      	movs	r0, #3
10054bc4:	4623      	mov	r3, r4
10054bc6:	f012 fc9f 	bl	10067508 <GAT_att_db_insert>
10054bca:	2800      	cmp	r0, #0
10054bcc:	d029      	beq.n	10054c22 <GAT_srv_add_characteristic+0x102>
10054bce:	9701      	str	r7, [sp, #4]
10054bd0:	9602      	str	r6, [sp, #8]
10054bd2:	69e0      	ldr	r0, [r4, #28]
10054bd4:	2800      	cmp	r0, #0
10054bd6:	d016      	beq.n	10054c06 <GAT_srv_add_characteristic+0xe6>
10054bd8:	7e20      	ldrb	r0, [r4, #24]
10054bda:	2800      	cmp	r0, #0
10054bdc:	d013      	beq.n	10054c06 <GAT_srv_add_characteristic+0xe6>
10054bde:	2600      	movs	r6, #0
10054be0:	4637      	mov	r7, r6
10054be2:	4287      	cmp	r7, r0
10054be4:	d20f      	bcs.n	10054c06 <GAT_srv_add_characteristic+0xe6>
10054be6:	69e0      	ldr	r0, [r4, #28]
10054be8:	1980      	adds	r0, r0, r6
10054bea:	9902      	ldr	r1, [sp, #8]
10054bec:	f000 f86c 	bl	10054cc8 <GAT_srv_add_char_descriptor>
10054bf0:	2800      	cmp	r0, #0
10054bf2:	d118      	bne.n	10054c26 <GAT_srv_add_characteristic+0x106>
10054bf4:	361c      	adds	r6, #28
10054bf6:	7e20      	ldrb	r0, [r4, #24]
10054bf8:	1c7f      	adds	r7, r7, #1
10054bfa:	e7f2      	b.n	10054be2 <GAT_srv_add_characteristic+0xc2>
10054bfc:	250c      	movs	r5, #12
10054bfe:	4628      	mov	r0, r5
10054c00:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10054c02:	2587      	movs	r5, #135	@ 0x87
10054c04:	e7fb      	b.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054c06:	480d      	ldr	r0, [pc, #52]	@ (10054c3c <__arm_cp.2_2>)
10054c08:	6800      	ldr	r0, [r0, #0]
10054c0a:	215c      	movs	r1, #92	@ 0x5c
10054c0c:	5c42      	ldrb	r2, [r0, r1]
10054c0e:	9b01      	ldr	r3, [sp, #4]
10054c10:	431a      	orrs	r2, r3
10054c12:	5442      	strb	r2, [r0, r1]
10054c14:	200a      	movs	r0, #10
10054c16:	f010 fb0b 	bl	10065230 <tsk_notify_idx>
10054c1a:	f7ed fe5c 	bl	100428d6 <BLE_STACK_ProcessRequest>
10054c1e:	2500      	movs	r5, #0
10054c20:	e7ed      	b.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054c22:	2587      	movs	r5, #135	@ 0x87
10054c24:	e001      	b.n	10054c2a <GAT_srv_add_characteristic+0x10a>
10054c26:	4605      	mov	r5, r0
10054c28:	9e02      	ldr	r6, [sp, #8]
10054c2a:	4630      	mov	r0, r6
10054c2c:	f000 f8d4 	bl	10054dd8 <GAT_srv_rm_characteristic>
10054c30:	e7e5      	b.n	10054bfe <GAT_srv_add_characteristic+0xde>
10054c32:	46c0      	nop			@ (mov r8, r8)

10054c34 <__arm_cp.2_0>:
10054c34:	00002b29 	.word	0x00002b29

10054c38 <__arm_cp.2_1>:
10054c38:	200008a8 	.word	0x200008a8

10054c3c <__arm_cp.2_2>:
10054c3c:	20000848 	.word	0x20000848

10054c40 <GAT_srv_rm_service>:
10054c40:	b510      	push	{r4, lr}
10054c42:	4604      	mov	r4, r0
10054c44:	f7ff ff5c 	bl	10054b00 <GAT_srv_db_update_allowed>
10054c48:	2800      	cmp	r0, #0
10054c4a:	d00a      	beq.n	10054c62 <GAT_srv_rm_service+0x22>
10054c4c:	4620      	mov	r0, r4
10054c4e:	f012 fcaf 	bl	100675b0 <GAT_att_db_find_by_handle>
10054c52:	4601      	mov	r1, r0
10054c54:	2012      	movs	r0, #18
10054c56:	2900      	cmp	r1, #0
10054c58:	d002      	beq.n	10054c60 <GAT_srv_rm_service+0x20>
10054c5a:	780a      	ldrb	r2, [r1, #0]
10054c5c:	2a00      	cmp	r2, #0
10054c5e:	d002      	beq.n	10054c66 <GAT_srv_rm_service+0x26>
10054c60:	bd10      	pop	{r4, pc}
10054c62:	200c      	movs	r0, #12
10054c64:	bd10      	pop	{r4, pc}
10054c66:	4608      	mov	r0, r1
10054c68:	f012 fd40 	bl	100676ec <GAT_att_db_get_last_group_handle>
10054c6c:	4601      	mov	r1, r0
10054c6e:	4620      	mov	r0, r4
10054c70:	f012 fd7c 	bl	1006776c <GAT_att_db_rm_att_range>
10054c74:	4806      	ldr	r0, [pc, #24]	@ (10054c90 <__arm_cp.3_0>)
10054c76:	6800      	ldr	r0, [r0, #0]
10054c78:	215c      	movs	r1, #92	@ 0x5c
10054c7a:	5c42      	ldrb	r2, [r0, r1]
10054c7c:	2302      	movs	r3, #2
10054c7e:	4313      	orrs	r3, r2
10054c80:	5443      	strb	r3, [r0, r1]
10054c82:	200a      	movs	r0, #10
10054c84:	f010 fad4 	bl	10065230 <tsk_notify_idx>
10054c88:	f7ed fe25 	bl	100428d6 <BLE_STACK_ProcessRequest>
10054c8c:	2000      	movs	r0, #0
10054c8e:	bd10      	pop	{r4, pc}

10054c90 <__arm_cp.3_0>:
10054c90:	20000848 	.word	0x20000848

10054c94 <GAT_srv_check_group_size>:
10054c94:	b5b0      	push	{r4, r5, r7, lr}
10054c96:	460d      	mov	r5, r1
10054c98:	4604      	mov	r4, r0
10054c9a:	f7ff fa81 	bl	100541a0 <GAT_srv_get_att_group_end_handle>
10054c9e:	6861      	ldr	r1, [r4, #4]
10054ca0:	8ac9      	ldrh	r1, [r1, #22]
10054ca2:	2900      	cmp	r1, #0
10054ca4:	d008      	beq.n	10054cb8 <GAT_srv_check_group_size+0x24>
10054ca6:	43c0      	mvns	r0, r0
10054ca8:	1808      	adds	r0, r1, r0
10054caa:	8861      	ldrh	r1, [r4, #2]
10054cac:	1840      	adds	r0, r0, r1
10054cae:	b280      	uxth	r0, r0
10054cb0:	42a8      	cmp	r0, r5
10054cb2:	d306      	bcc.n	10054cc2 <GAT_srv_check_group_size+0x2e>
10054cb4:	2000      	movs	r0, #0
10054cb6:	bdb0      	pop	{r4, r5, r7, pc}
10054cb8:	2000      	movs	r0, #0
10054cba:	f012 fd99 	bl	100677f0 <GAT_att_db_find_last_attr_of_type>
10054cbe:	42a0      	cmp	r0, r4
10054cc0:	d0f8      	beq.n	10054cb4 <GAT_srv_check_group_size+0x20>
10054cc2:	200c      	movs	r0, #12
10054cc4:	bdb0      	pop	{r4, r5, r7, pc}
	...

10054cc8 <GAT_srv_add_char_descriptor>:
10054cc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054cca:	460e      	mov	r6, r1
10054ccc:	4604      	mov	r4, r0
10054cce:	f7ff ff17 	bl	10054b00 <GAT_srv_db_update_allowed>
10054cd2:	2800      	cmp	r0, #0
10054cd4:	d075      	beq.n	10054dc2 <GAT_srv_add_char_descriptor+0xfa>
10054cd6:	2512      	movs	r5, #18
10054cd8:	2c00      	cmp	r4, #0
10054cda:	d073      	beq.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054cdc:	7d20      	ldrb	r0, [r4, #20]
10054cde:	2880      	cmp	r0, #128	@ 0x80
10054ce0:	d001      	beq.n	10054ce6 <GAT_srv_add_char_descriptor+0x1e>
10054ce2:	2810      	cmp	r0, #16
10054ce4:	d16e      	bne.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054ce6:	2810      	cmp	r0, #16
10054ce8:	d108      	bne.n	10054cfc <GAT_srv_add_char_descriptor+0x34>
10054cea:	8a21      	ldrh	r1, [r4, #16]
10054cec:	2229      	movs	r2, #41	@ 0x29
10054cee:	0212      	lsls	r2, r2, #8
10054cf0:	1c92      	adds	r2, r2, #2
10054cf2:	4291      	cmp	r1, r2
10054cf4:	d102      	bne.n	10054cfc <GAT_srv_add_char_descriptor+0x34>
10054cf6:	69a1      	ldr	r1, [r4, #24]
10054cf8:	2900      	cmp	r1, #0
10054cfa:	d063      	beq.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054cfc:	78a1      	ldrb	r1, [r4, #2]
10054cfe:	2224      	movs	r2, #36	@ 0x24
10054d00:	4211      	tst	r1, r2
10054d02:	d003      	beq.n	10054d0c <GAT_srv_add_char_descriptor+0x44>
10054d04:	7862      	ldrb	r2, [r4, #1]
10054d06:	1fd2      	subs	r2, r2, #7
10054d08:	2a09      	cmp	r2, #9
10054d0a:	d85b      	bhi.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054d0c:	2810      	cmp	r0, #16
10054d0e:	d115      	bne.n	10054d3c <GAT_srv_add_char_descriptor+0x74>
10054d10:	8a20      	ldrh	r0, [r4, #16]
10054d12:	4a2f      	ldr	r2, [pc, #188]	@ (10054dd0 <__arm_cp.7_0>)
10054d14:	1882      	adds	r2, r0, r2
10054d16:	2a05      	cmp	r2, #5
10054d18:	d810      	bhi.n	10054d3c <GAT_srv_add_char_descriptor+0x74>
10054d1a:	2301      	movs	r3, #1
10054d1c:	4093      	lsls	r3, r2
10054d1e:	2231      	movs	r2, #49	@ 0x31
10054d20:	4213      	tst	r3, r2
10054d22:	d00b      	beq.n	10054d3c <GAT_srv_add_char_descriptor+0x74>
10054d24:	7822      	ldrb	r2, [r4, #0]
10054d26:	2a01      	cmp	r2, #1
10054d28:	d14c      	bne.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054d2a:	2900      	cmp	r1, #0
10054d2c:	d14a      	bne.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054d2e:	2129      	movs	r1, #41	@ 0x29
10054d30:	0209      	lsls	r1, r1, #8
10054d32:	4288      	cmp	r0, r1
10054d34:	d102      	bne.n	10054d3c <GAT_srv_add_char_descriptor+0x74>
10054d36:	69a0      	ldr	r0, [r4, #24]
10054d38:	2800      	cmp	r0, #0
10054d3a:	d043      	beq.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054d3c:	4630      	mov	r0, r6
10054d3e:	f012 fc37 	bl	100675b0 <GAT_att_db_find_by_handle>
10054d42:	2800      	cmp	r0, #0
10054d44:	d03e      	beq.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054d46:	4607      	mov	r7, r0
10054d48:	7800      	ldrb	r0, [r0, #0]
10054d4a:	2802      	cmp	r0, #2
10054d4c:	d13a      	bne.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054d4e:	2500      	movs	r5, #0
10054d50:	4628      	mov	r0, r5
10054d52:	4631      	mov	r1, r6
10054d54:	f012 fd62 	bl	1006781c <GAT_att_db_reverse_find_attr_of_type>
10054d58:	2800      	cmp	r0, #0
10054d5a:	d035      	beq.n	10054dc8 <GAT_srv_add_char_descriptor+0x100>
10054d5c:	462e      	mov	r6, r5
10054d5e:	2101      	movs	r1, #1
10054d60:	f7ff ff98 	bl	10054c94 <GAT_srv_check_group_size>
10054d64:	4605      	mov	r5, r0
10054d66:	2800      	cmp	r0, #0
10054d68:	d12c      	bne.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054d6a:	4638      	mov	r0, r7
10054d6c:	f7ff fa18 	bl	100541a0 <GAT_srv_get_att_group_end_handle>
10054d70:	4605      	mov	r5, r0
10054d72:	f012 fc1d 	bl	100675b0 <GAT_att_db_find_by_handle>
10054d76:	4601      	mov	r1, r0
10054d78:	1c6d      	adds	r5, r5, #1
10054d7a:	b2aa      	uxth	r2, r5
10054d7c:	2004      	movs	r0, #4
10054d7e:	4623      	mov	r3, r4
10054d80:	f012 fbc2 	bl	10067508 <GAT_att_db_insert>
10054d84:	4285      	cmp	r5, r0
10054d86:	d121      	bne.n	10054dcc <GAT_srv_add_char_descriptor+0x104>
10054d88:	7d20      	ldrb	r0, [r4, #20]
10054d8a:	2810      	cmp	r0, #16
10054d8c:	d10b      	bne.n	10054da6 <GAT_srv_add_char_descriptor+0xde>
10054d8e:	8a20      	ldrh	r0, [r4, #16]
10054d90:	2129      	movs	r1, #41	@ 0x29
10054d92:	0209      	lsls	r1, r1, #8
10054d94:	1c89      	adds	r1, r1, #2
10054d96:	4288      	cmp	r0, r1
10054d98:	d105      	bne.n	10054da6 <GAT_srv_add_char_descriptor+0xde>
10054d9a:	69a0      	ldr	r0, [r4, #24]
10054d9c:	8882      	ldrh	r2, [r0, #4]
10054d9e:	6880      	ldr	r0, [r0, #8]
10054da0:	2100      	movs	r1, #0
10054da2:	f7ef fe0f 	bl	100449c4 <BLEPLAT_MemSet>
10054da6:	480b      	ldr	r0, [pc, #44]	@ (10054dd4 <__arm_cp.7_1>)
10054da8:	6800      	ldr	r0, [r0, #0]
10054daa:	215c      	movs	r1, #92	@ 0x5c
10054dac:	5c42      	ldrb	r2, [r0, r1]
10054dae:	2302      	movs	r3, #2
10054db0:	4313      	orrs	r3, r2
10054db2:	5443      	strb	r3, [r0, r1]
10054db4:	200a      	movs	r0, #10
10054db6:	f010 fa3b 	bl	10065230 <tsk_notify_idx>
10054dba:	f7ed fd8c 	bl	100428d6 <BLE_STACK_ProcessRequest>
10054dbe:	4635      	mov	r5, r6
10054dc0:	e000      	b.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054dc2:	250c      	movs	r5, #12
10054dc4:	4628      	mov	r0, r5
10054dc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10054dc8:	2586      	movs	r5, #134	@ 0x86
10054dca:	e7fb      	b.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>
10054dcc:	2587      	movs	r5, #135	@ 0x87
10054dce:	e7f9      	b.n	10054dc4 <GAT_srv_add_char_descriptor+0xfc>

10054dd0 <__arm_cp.7_0>:
10054dd0:	ffffd700 	.word	0xffffd700

10054dd4 <__arm_cp.7_1>:
10054dd4:	20000848 	.word	0x20000848

10054dd8 <GAT_srv_rm_characteristic>:
10054dd8:	b510      	push	{r4, lr}
10054dda:	4604      	mov	r4, r0
10054ddc:	f7ff fe90 	bl	10054b00 <GAT_srv_db_update_allowed>
10054de0:	2800      	cmp	r0, #0
10054de2:	d01e      	beq.n	10054e22 <GAT_srv_rm_characteristic+0x4a>
10054de4:	4620      	mov	r0, r4
10054de6:	f012 fbe3 	bl	100675b0 <GAT_att_db_find_by_handle>
10054dea:	4601      	mov	r1, r0
10054dec:	2012      	movs	r0, #18
10054dee:	2900      	cmp	r1, #0
10054df0:	d016      	beq.n	10054e20 <GAT_srv_rm_characteristic+0x48>
10054df2:	780a      	ldrb	r2, [r1, #0]
10054df4:	2a02      	cmp	r2, #2
10054df6:	d113      	bne.n	10054e20 <GAT_srv_rm_characteristic+0x48>
10054df8:	4608      	mov	r0, r1
10054dfa:	f012 fc77 	bl	100676ec <GAT_att_db_get_last_group_handle>
10054dfe:	4601      	mov	r1, r0
10054e00:	4620      	mov	r0, r4
10054e02:	f012 fcb3 	bl	1006776c <GAT_att_db_rm_att_range>
10054e06:	4808      	ldr	r0, [pc, #32]	@ (10054e28 <__arm_cp.8_0>)
10054e08:	6800      	ldr	r0, [r0, #0]
10054e0a:	215c      	movs	r1, #92	@ 0x5c
10054e0c:	5c42      	ldrb	r2, [r0, r1]
10054e0e:	2302      	movs	r3, #2
10054e10:	4313      	orrs	r3, r2
10054e12:	5443      	strb	r3, [r0, r1]
10054e14:	200a      	movs	r0, #10
10054e16:	f010 fa0b 	bl	10065230 <tsk_notify_idx>
10054e1a:	f7ed fd5c 	bl	100428d6 <BLE_STACK_ProcessRequest>
10054e1e:	2000      	movs	r0, #0
10054e20:	bd10      	pop	{r4, pc}
10054e22:	200c      	movs	r0, #12
10054e24:	bd10      	pop	{r4, pc}
10054e26:	46c0      	nop			@ (mov r8, r8)

10054e28 <__arm_cp.8_0>:
10054e28:	20000848 	.word	0x20000848

10054e2c <GAT_srv_resp>:
10054e2c:	b51c      	push	{r2, r3, r4, lr}
10054e2e:	9c05      	ldr	r4, [sp, #20]
10054e30:	9401      	str	r4, [sp, #4]
10054e32:	9c04      	ldr	r4, [sp, #16]
10054e34:	9400      	str	r4, [sp, #0]
10054e36:	f7fe f87f 	bl	10052f38 <GAT_att_srv_resp>
10054e3a:	bd1c      	pop	{r2, r3, r4, pc}

10054e3c <GAT_srv_get_service_handle>:
10054e3c:	b580      	push	{r7, lr}
10054e3e:	4603      	mov	r3, r0
10054e40:	2001      	movs	r0, #1
10054e42:	4902      	ldr	r1, [pc, #8]	@ (10054e4c <__arm_cp.14_0>)
10054e44:	2200      	movs	r2, #0
10054e46:	f7ff fd41 	bl	100548cc <GAT_srv_get_attribute_handle>
10054e4a:	bd80      	pop	{r7, pc}

10054e4c <__arm_cp.14_0>:
10054e4c:	0000ffff 	.word	0x0000ffff

10054e50 <GAT_srv_get_char_decl_handle>:
10054e50:	b580      	push	{r7, lr}
10054e52:	4603      	mov	r3, r0
10054e54:	2001      	movs	r0, #1
10054e56:	4902      	ldr	r1, [pc, #8]	@ (10054e60 <__arm_cp.16_0>)
10054e58:	2202      	movs	r2, #2
10054e5a:	f7ff fd37 	bl	100548cc <GAT_srv_get_attribute_handle>
10054e5e:	bd80      	pop	{r7, pc}

10054e60 <__arm_cp.16_0>:
10054e60:	0000ffff 	.word	0x0000ffff

10054e64 <hci_rx_acl_data>:
10054e64:	b5f0      	push	{r4, r5, r6, r7, lr}
10054e66:	b085      	sub	sp, #20
10054e68:	4604      	mov	r4, r0
10054e6a:	7887      	ldrb	r7, [r0, #2]
10054e6c:	1e78      	subs	r0, r7, #1
10054e6e:	2103      	movs	r1, #3
10054e70:	9104      	str	r1, [sp, #16]
10054e72:	4308      	orrs	r0, r1
10054e74:	3009      	adds	r0, #9
10054e76:	0880      	lsrs	r0, r0, #2
10054e78:	b283      	uxth	r3, r0
10054e7a:	7a20      	ldrb	r0, [r4, #8]
10054e7c:	9003      	str	r0, [sp, #12]
10054e7e:	8820      	ldrh	r0, [r4, #0]
10054e80:	9002      	str	r0, [sp, #8]
10054e82:	4811      	ldr	r0, [pc, #68]	@ (10054ec8 <__arm_cp.2_0>)
10054e84:	6800      	ldr	r0, [r0, #0]
10054e86:	6980      	ldr	r0, [r0, #24]
10054e88:	2502      	movs	r5, #2
10054e8a:	223e      	movs	r2, #62	@ 0x3e
10054e8c:	4629      	mov	r1, r5
10054e8e:	f7fb fa37 	bl	10050300 <aci_event_fifo_push_header>
10054e92:	2800      	cmp	r0, #0
10054e94:	d014      	beq.n	10054ec0 <hci_rx_acl_data+0x5c>
10054e96:	4606      	mov	r6, r0
10054e98:	9700      	str	r7, [sp, #0]
10054e9a:	9401      	str	r4, [sp, #4]
10054e9c:	9804      	ldr	r0, [sp, #16]
10054e9e:	9a03      	ldr	r2, [sp, #12]
10054ea0:	4002      	ands	r2, r0
10054ea2:	1d30      	adds	r0, r6, #4
10054ea4:	2700      	movs	r7, #0
10054ea6:	9902      	ldr	r1, [sp, #8]
10054ea8:	463b      	mov	r3, r7
10054eaa:	f7fb fff6 	bl	10050e9a <hci_rx_acl_data_event_copy>
10054eae:	7135      	strb	r5, [r6, #4]
10054eb0:	4628      	mov	r0, r5
10054eb2:	4631      	mov	r1, r6
10054eb4:	f7fb fac1 	bl	1005043a <aci_event_fifo_push>
10054eb8:	4620      	mov	r0, r4
10054eba:	f7fb f86f 	bl	1004ff9c <ACL_pkt_release>
10054ebe:	e000      	b.n	10054ec2 <hci_rx_acl_data+0x5e>
10054ec0:	2707      	movs	r7, #7
10054ec2:	4638      	mov	r0, r7
10054ec4:	b005      	add	sp, #20
10054ec6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10054ec8 <__arm_cp.2_0>:
10054ec8:	20000840 	.word	0x20000840

10054ecc <hci_tx_acl_data_done>:
10054ecc:	b5b0      	push	{r4, r5, r7, lr}
10054ece:	4604      	mov	r4, r0
10054ed0:	8801      	ldrh	r1, [r0, #0]
10054ed2:	2002      	movs	r0, #2
10054ed4:	f011 fe1e 	bl	10066b14 <hci_number_of_completed_packets_event_push_noinline>
10054ed8:	4605      	mov	r5, r0
10054eda:	2800      	cmp	r0, #0
10054edc:	d102      	bne.n	10054ee4 <hci_tx_acl_data_done+0x18>
10054ede:	4620      	mov	r0, r4
10054ee0:	f7fb f85c 	bl	1004ff9c <ACL_pkt_release>
10054ee4:	4628      	mov	r0, r5
10054ee6:	bdb0      	pop	{r4, r5, r7, pc}

10054ee8 <chc_csr_ucfg_weak>:
10054ee8:	2000      	movs	r0, #0
10054eea:	4770      	bx	lr

10054eec <HCI_Init>:
10054eec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10054eee:	4917      	ldr	r1, [pc, #92]	@ (10054f4c <__arm_cp.0_0>)
10054ef0:	6808      	ldr	r0, [r1, #0]
10054ef2:	460d      	mov	r5, r1
10054ef4:	2124      	movs	r1, #36	@ 0x24
10054ef6:	2400      	movs	r4, #0
10054ef8:	5444      	strb	r4, [r0, r1]
10054efa:	3025      	adds	r0, #37	@ 0x25
10054efc:	2211      	movs	r2, #17
10054efe:	4f14      	ldr	r7, [pc, #80]	@ (10054f50 <__arm_cp.0_1>)
10054f00:	4621      	mov	r1, r4
10054f02:	47b8      	blx	r7
10054f04:	6828      	ldr	r0, [r5, #0]
10054f06:	3036      	adds	r0, #54	@ 0x36
10054f08:	26ff      	movs	r6, #255	@ 0xff
10054f0a:	2205      	movs	r2, #5
10054f0c:	4631      	mov	r1, r6
10054f0e:	47b8      	blx	r7
10054f10:	6829      	ldr	r1, [r5, #0]
10054f12:	203b      	movs	r0, #59	@ 0x3b
10054f14:	231f      	movs	r3, #31
10054f16:	540b      	strb	r3, [r1, r0]
10054f18:	2201      	movs	r2, #1
10054f1a:	0355      	lsls	r5, r2, #13
10054f1c:	4608      	mov	r0, r1
10054f1e:	303b      	adds	r0, #59	@ 0x3b
10054f20:	5285      	strh	r5, [r0, r2]
10054f22:	72c3      	strb	r3, [r0, #11]
10054f24:	3147      	adds	r1, #71	@ 0x47
10054f26:	2207      	movs	r2, #7
10054f28:	4608      	mov	r0, r1
10054f2a:	4621      	mov	r1, r4
10054f2c:	47b8      	blx	r7
10054f2e:	4d07      	ldr	r5, [pc, #28]	@ (10054f4c <__arm_cp.0_0>)
10054f30:	6828      	ldr	r0, [r5, #0]
10054f32:	304e      	adds	r0, #78	@ 0x4e
10054f34:	2208      	movs	r2, #8
10054f36:	4631      	mov	r1, r6
10054f38:	47b8      	blx	r7
10054f3a:	4806      	ldr	r0, [pc, #24]	@ (10054f54 <__arm_cp.0_2>)
10054f3c:	6800      	ldr	r0, [r0, #0]
10054f3e:	2135      	movs	r1, #53	@ 0x35
10054f40:	5444      	strb	r4, [r0, r1]
10054f42:	6828      	ldr	r0, [r5, #0]
10054f44:	4904      	ldr	r1, [pc, #16]	@ (10054f58 <__arm_cp.0_3>)
10054f46:	6201      	str	r1, [r0, #32]
10054f48:	65c4      	str	r4, [r0, #92]	@ 0x5c
10054f4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10054f4c <__arm_cp.0_0>:
10054f4c:	20000894 	.word	0x20000894

10054f50 <__arm_cp.0_1>:
10054f50:	100449c5 	.word	0x100449c5

10054f54 <__arm_cp.0_2>:
10054f54:	2000083c 	.word	0x2000083c

10054f58 <__arm_cp.0_3>:
10054f58:	fffffdbe 	.word	0xfffffdbe

10054f5c <Controller_Process_Q>:
10054f5c:	b570      	push	{r4, r5, r6, lr}
10054f5e:	2500      	movs	r5, #0
10054f60:	4e07      	ldr	r6, [pc, #28]	@ (10054f80 <__arm_cp.2_0>)
10054f62:	7af0      	ldrb	r0, [r6, #11]
10054f64:	4285      	cmp	r5, r0
10054f66:	d20a      	bcs.n	10054f7e <Controller_Process_Q+0x22>
10054f68:	b2ec      	uxtb	r4, r5
10054f6a:	4620      	mov	r0, r4
10054f6c:	f008 f83c 	bl	1005cfe8 <LL_cpe_engine>
10054f70:	2800      	cmp	r0, #0
10054f72:	d002      	beq.n	10054f7a <Controller_Process_Q+0x1e>
10054f74:	4620      	mov	r0, r4
10054f76:	f008 f837 	bl	1005cfe8 <LL_cpe_engine>
10054f7a:	1c6d      	adds	r5, r5, #1
10054f7c:	e7f1      	b.n	10054f62 <Controller_Process_Q+0x6>
10054f7e:	bd70      	pop	{r4, r5, r6, pc}

10054f80 <__arm_cp.2_0>:
10054f80:	200008a8 	.word	0x200008a8

10054f84 <Get_Random_Addr>:
10054f84:	b580      	push	{r7, lr}
10054f86:	4903      	ldr	r1, [pc, #12]	@ (10054f94 <__arm_cp.5_0>)
10054f88:	6809      	ldr	r1, [r1, #0]
10054f8a:	3156      	adds	r1, #86	@ 0x56
10054f8c:	2206      	movs	r2, #6
10054f8e:	f7ef fd09 	bl	100449a4 <BLEPLAT_MemCpy>
10054f92:	bd80      	pop	{r7, pc}

10054f94 <__arm_cp.5_0>:
10054f94:	20000894 	.word	0x20000894

10054f98 <hci_le_read_remote_features_api>:
10054f98:	b580      	push	{r7, lr}
10054f9a:	4601      	mov	r1, r0
10054f9c:	2001      	movs	r0, #1
10054f9e:	f009 ff49 	bl	1005ee34 <LL_Read_Remote_Used_Features>
10054fa2:	bd80      	pop	{r7, pc}

10054fa4 <hci_set_event_mask>:
10054fa4:	b510      	push	{r4, lr}
10054fa6:	2136      	movs	r1, #54	@ 0x36
10054fa8:	4a05      	ldr	r2, [pc, #20]	@ (10054fc0 <__arm_cp.14_0>)
10054faa:	293e      	cmp	r1, #62	@ 0x3e
10054fac:	d006      	beq.n	10054fbc <hci_set_event_mask+0x18>
10054fae:	1843      	adds	r3, r0, r1
10054fb0:	3b36      	subs	r3, #54	@ 0x36
10054fb2:	781b      	ldrb	r3, [r3, #0]
10054fb4:	6814      	ldr	r4, [r2, #0]
10054fb6:	5463      	strb	r3, [r4, r1]
10054fb8:	1c49      	adds	r1, r1, #1
10054fba:	e7f6      	b.n	10054faa <hci_set_event_mask+0x6>
10054fbc:	2000      	movs	r0, #0
10054fbe:	bd10      	pop	{r4, pc}

10054fc0 <__arm_cp.14_0>:
10054fc0:	20000894 	.word	0x20000894

10054fc4 <hci_le_set_event_mask>:
10054fc4:	b510      	push	{r4, lr}
10054fc6:	2146      	movs	r1, #70	@ 0x46
10054fc8:	4a05      	ldr	r2, [pc, #20]	@ (10054fe0 <__arm_cp.16_0>)
10054fca:	294e      	cmp	r1, #78	@ 0x4e
10054fcc:	d006      	beq.n	10054fdc <hci_le_set_event_mask+0x18>
10054fce:	1843      	adds	r3, r0, r1
10054fd0:	3b46      	subs	r3, #70	@ 0x46
10054fd2:	781b      	ldrb	r3, [r3, #0]
10054fd4:	6814      	ldr	r4, [r2, #0]
10054fd6:	5463      	strb	r3, [r4, r1]
10054fd8:	1c49      	adds	r1, r1, #1
10054fda:	e7f6      	b.n	10054fca <hci_le_set_event_mask+0x6>
10054fdc:	2000      	movs	r0, #0
10054fde:	bd10      	pop	{r4, pc}

10054fe0 <__arm_cp.16_0>:
10054fe0:	20000894 	.word	0x20000894

10054fe4 <hci_get_set_legacy_ext_flag>:
10054fe4:	4a05      	ldr	r2, [pc, #20]	@ (10054ffc <__arm_cp.18_0>)
10054fe6:	6812      	ldr	r2, [r2, #0]
10054fe8:	2335      	movs	r3, #53	@ 0x35
10054fea:	5cd3      	ldrb	r3, [r2, r3]
10054fec:	4203      	tst	r3, r0
10054fee:	d001      	beq.n	10054ff4 <hci_get_set_legacy_ext_flag+0x10>
10054ff0:	200c      	movs	r0, #12
10054ff2:	4770      	bx	lr
10054ff4:	3235      	adds	r2, #53	@ 0x35
10054ff6:	7011      	strb	r1, [r2, #0]
10054ff8:	2000      	movs	r0, #0
10054ffa:	4770      	bx	lr

10054ffc <__arm_cp.18_0>:
10054ffc:	2000083c 	.word	0x2000083c

10055000 <hci_check_legacy_ext_flag>:
10055000:	4903      	ldr	r1, [pc, #12]	@ (10055010 <__arm_cp.25_0>)
10055002:	6809      	ldr	r1, [r1, #0]
10055004:	2235      	movs	r2, #53	@ 0x35
10055006:	5c89      	ldrb	r1, [r1, r2]
10055008:	4008      	ands	r0, r1
1005500a:	1e41      	subs	r1, r0, #1
1005500c:	4188      	sbcs	r0, r1
1005500e:	4770      	bx	lr

10055010 <__arm_cp.25_0>:
10055010:	2000083c 	.word	0x2000083c

10055014 <LLC_offline_control_procedures_processing>:
10055014:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10055016:	2400      	movs	r4, #0
10055018:	4620      	mov	r0, r4
1005501a:	f000 fff7 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005501e:	4605      	mov	r5, r0
10055020:	2201      	movs	r2, #1
10055022:	4b30      	ldr	r3, [pc, #192]	@ (100550e4 <__arm_cp.27_0>)
10055024:	4627      	mov	r7, r4
10055026:	9200      	str	r2, [sp, #0]
10055028:	6818      	ldr	r0, [r3, #0]
1005502a:	2134      	movs	r1, #52	@ 0x34
1005502c:	5c40      	ldrb	r0, [r0, r1]
1005502e:	4284      	cmp	r4, r0
10055030:	d250      	bcs.n	100550d4 <LLC_offline_control_procedures_processing+0xc0>
10055032:	202c      	movs	r0, #44	@ 0x2c
10055034:	5c28      	ldrb	r0, [r5, r0]
10055036:	21fe      	movs	r1, #254	@ 0xfe
10055038:	4001      	ands	r1, r0
1005503a:	2902      	cmp	r1, #2
1005503c:	d13e      	bne.n	100550bc <LLC_offline_control_procedures_processing+0xa8>
1005503e:	208c      	movs	r0, #140	@ 0x8c
10055040:	582e      	ldr	r6, [r5, r0]
10055042:	07f0      	lsls	r0, r6, #31
10055044:	d00d      	beq.n	10055062 <LLC_offline_control_procedures_processing+0x4e>
10055046:	8f69      	ldrh	r1, [r5, #58]	@ 0x3a
10055048:	2000      	movs	r0, #0
1005504a:	f009 fef3 	bl	1005ee34 <LL_Read_Remote_Used_Features>
1005504e:	283a      	cmp	r0, #58	@ 0x3a
10055050:	9a00      	ldr	r2, [sp, #0]
10055052:	4610      	mov	r0, r2
10055054:	d030      	beq.n	100550b8 <LLC_offline_control_procedures_processing+0xa4>
10055056:	4628      	mov	r0, r5
10055058:	308c      	adds	r0, #140	@ 0x8c
1005505a:	6801      	ldr	r1, [r0, #0]
1005505c:	2201      	movs	r2, #1
1005505e:	4391      	bics	r1, r2
10055060:	6001      	str	r1, [r0, #0]
10055062:	4628      	mov	r0, r5
10055064:	f007 fc94 	bl	1005c990 <llc_subrate_offline_processing_ucfg_weak>
10055068:	2800      	cmp	r0, #0
1005506a:	9a00      	ldr	r2, [sp, #0]
1005506c:	4610      	mov	r0, r2
1005506e:	d123      	bne.n	100550b8 <LLC_offline_control_procedures_processing+0xa4>
10055070:	4628      	mov	r0, r5
10055072:	4631      	mov	r1, r6
10055074:	f00c ff20 	bl	10061eb8 <Data_Len_Update_Offline_Processing_ucfg_weak>
10055078:	9a00      	ldr	r2, [sp, #0]
1005507a:	2800      	cmp	r0, #0
1005507c:	4610      	mov	r0, r2
1005507e:	d11b      	bne.n	100550b8 <LLC_offline_control_procedures_processing+0xa4>
10055080:	b2e6      	uxtb	r6, r4
10055082:	4630      	mov	r0, r6
10055084:	f7f9 fe0d 	bl	1004eca2 <LLC_channel_map_update_offline_processing_ucfg>
10055088:	9a00      	ldr	r2, [sp, #0]
1005508a:	2800      	cmp	r0, #0
1005508c:	4610      	mov	r0, r2
1005508e:	d113      	bne.n	100550b8 <LLC_offline_control_procedures_processing+0xa4>
10055090:	4630      	mov	r0, r6
10055092:	f008 ff97 	bl	1005dfc4 <LLC_chc_reporting_offline_processing_ucfg_weak>
10055096:	9a00      	ldr	r2, [sp, #0]
10055098:	2800      	cmp	r0, #0
1005509a:	4610      	mov	r0, r2
1005509c:	d10c      	bne.n	100550b8 <LLC_offline_control_procedures_processing+0xa4>
1005509e:	4628      	mov	r0, r5
100550a0:	f009 f950 	bl	1005e344 <LLC_cte_request_procedure_ucfg_weak>
100550a4:	9a00      	ldr	r2, [sp, #0]
100550a6:	2800      	cmp	r0, #0
100550a8:	4610      	mov	r0, r2
100550aa:	d105      	bne.n	100550b8 <LLC_offline_control_procedures_processing+0xa4>
100550ac:	4630      	mov	r0, r6
100550ae:	f00a fbec 	bl	1005f88a <LLC_pcl_offline_processing_ucfg_weak>
100550b2:	9a00      	ldr	r2, [sp, #0]
100550b4:	1e41      	subs	r1, r0, #1
100550b6:	4188      	sbcs	r0, r1
100550b8:	4b0a      	ldr	r3, [pc, #40]	@ (100550e4 <__arm_cp.27_0>)
100550ba:	e000      	b.n	100550be <LLC_offline_control_procedures_processing+0xaa>
100550bc:	2000      	movs	r0, #0
100550be:	1e41      	subs	r1, r0, #1
100550c0:	4188      	sbcs	r0, r1
100550c2:	0639      	lsls	r1, r7, #24
100550c4:	4617      	mov	r7, r2
100550c6:	d100      	bne.n	100550ca <LLC_offline_control_procedures_processing+0xb6>
100550c8:	4607      	mov	r7, r0
100550ca:	204d      	movs	r0, #77	@ 0x4d
100550cc:	0080      	lsls	r0, r0, #2
100550ce:	182d      	adds	r5, r5, r0
100550d0:	1c64      	adds	r4, r4, #1
100550d2:	e7a9      	b.n	10055028 <LLC_offline_control_procedures_processing+0x14>
100550d4:	0638      	lsls	r0, r7, #24
100550d6:	d003      	beq.n	100550e0 <LLC_offline_control_procedures_processing+0xcc>
100550d8:	2011      	movs	r0, #17
100550da:	2101      	movs	r1, #1
100550dc:	f010 f8ba 	bl	10065254 <tsk_wait_resource_idx>
100550e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100550e2:	46c0      	nop			@ (mov r8, r8)

100550e4 <__arm_cp.27_0>:
100550e4:	2000083c 	.word	0x2000083c

100550e8 <hci_le_create_connection_cancel_api>:
100550e8:	b580      	push	{r7, lr}
100550ea:	f001 ff63 	bl	10056fb4 <llc_conn_create_connection_cancel>
100550ee:	bd80      	pop	{r7, pc}

100550f0 <hci_le_extended_create_connection_api>:
100550f0:	b5f0      	push	{r4, r5, r6, r7, lr}
100550f2:	b085      	sub	sp, #20
100550f4:	9304      	str	r3, [sp, #16]
100550f6:	4615      	mov	r5, r2
100550f8:	460e      	mov	r6, r1
100550fa:	4607      	mov	r7, r0
100550fc:	2401      	movs	r4, #1
100550fe:	2102      	movs	r1, #2
10055100:	4620      	mov	r0, r4
10055102:	f7ff ff6f 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
10055106:	2800      	cmp	r0, #0
10055108:	d10a      	bne.n	10055120 <hci_le_extended_create_connection_api+0x30>
1005510a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005510c:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005510e:	9100      	str	r1, [sp, #0]
10055110:	9001      	str	r0, [sp, #4]
10055112:	9402      	str	r4, [sp, #8]
10055114:	4638      	mov	r0, r7
10055116:	4631      	mov	r1, r6
10055118:	462a      	mov	r2, r5
1005511a:	9b04      	ldr	r3, [sp, #16]
1005511c:	f001 fddd 	bl	10056cda <llc_conn_create_connection>
10055120:	b005      	add	sp, #20
10055122:	bdf0      	pop	{r4, r5, r6, r7, pc}

10055124 <cte_csr_ucfg_weak>:
10055124:	2000      	movs	r0, #0
10055126:	4770      	bx	lr

10055128 <hci_le_encrypt>:
10055128:	b5f0      	push	{r4, r5, r6, r7, lr}
1005512a:	b08f      	sub	sp, #60	@ 0x3c
1005512c:	9202      	str	r2, [sp, #8]
1005512e:	4607      	mov	r7, r0
10055130:	a807      	add	r0, sp, #28
10055132:	9001      	str	r0, [sp, #4]
10055134:	2510      	movs	r5, #16
10055136:	4e0c      	ldr	r6, [pc, #48]	@ (10055168 <__arm_cp.0_0>)
10055138:	462a      	mov	r2, r5
1005513a:	47b0      	blx	r6
1005513c:	ac0b      	add	r4, sp, #44	@ 0x2c
1005513e:	4620      	mov	r0, r4
10055140:	4639      	mov	r1, r7
10055142:	462a      	mov	r2, r5
10055144:	47b0      	blx	r6
10055146:	af03      	add	r7, sp, #12
10055148:	2600      	movs	r6, #0
1005514a:	9801      	ldr	r0, [sp, #4]
1005514c:	4621      	mov	r1, r4
1005514e:	463a      	mov	r2, r7
10055150:	4633      	mov	r3, r6
10055152:	f010 fb63 	bl	1006581c <BLEPLAT_aes128_encrypt>
10055156:	9802      	ldr	r0, [sp, #8]
10055158:	4639      	mov	r1, r7
1005515a:	462a      	mov	r2, r5
1005515c:	4b02      	ldr	r3, [pc, #8]	@ (10055168 <__arm_cp.0_0>)
1005515e:	4798      	blx	r3
10055160:	4630      	mov	r0, r6
10055162:	b00f      	add	sp, #60	@ 0x3c
10055164:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055166:	46c0      	nop			@ (mov r8, r8)

10055168 <__arm_cp.0_0>:
10055168:	100449a5 	.word	0x100449a5

1005516c <hci_le_enable_encryption_api>:
1005516c:	b57c      	push	{r2, r3, r4, r5, r6, lr}
1005516e:	461c      	mov	r4, r3
10055170:	460d      	mov	r5, r1
10055172:	4606      	mov	r6, r0
10055174:	a801      	add	r0, sp, #4
10055176:	8002      	strh	r2, [r0, #0]
10055178:	4630      	mov	r0, r6
1005517a:	f001 f9d7 	bl	1005652c <llc_conn_get_conn_idx>
1005517e:	4601      	mov	r1, r0
10055180:	0a32      	lsrs	r2, r6, #8
10055182:	2002      	movs	r0, #2
10055184:	2a0e      	cmp	r2, #14
10055186:	d80e      	bhi.n	100551a6 <hci_le_enable_encryption_api+0x3a>
10055188:	29ff      	cmp	r1, #255	@ 0xff
1005518a:	d00c      	beq.n	100551a6 <hci_le_enable_encryption_api+0x3a>
1005518c:	4630      	mov	r0, r6
1005518e:	f000 ff30 	bl	10055ff2 <llc_cig_cmn_is_active_cis_on_acl_ucfg_weak>
10055192:	2800      	cmp	r0, #0
10055194:	d001      	beq.n	1005519a <hci_le_enable_encryption_api+0x2e>
10055196:	200c      	movs	r0, #12
10055198:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
1005519a:	aa01      	add	r2, sp, #4
1005519c:	4630      	mov	r0, r6
1005519e:	4629      	mov	r1, r5
100551a0:	4623      	mov	r3, r4
100551a2:	f009 fc9f 	bl	1005eae4 <LL_Start_Encryption>
100551a6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

100551a8 <hci_le_long_term_key_request_reply_api>:
100551a8:	b5b0      	push	{r4, r5, r7, lr}
100551aa:	460c      	mov	r4, r1
100551ac:	4605      	mov	r5, r0
100551ae:	f001 f9bd 	bl	1005652c <llc_conn_get_conn_idx>
100551b2:	28ff      	cmp	r0, #255	@ 0xff
100551b4:	d005      	beq.n	100551c2 <hci_le_long_term_key_request_reply_api+0x1a>
100551b6:	2000      	movs	r0, #0
100551b8:	4629      	mov	r1, r5
100551ba:	4622      	mov	r2, r4
100551bc:	f009 fce6 	bl	1005eb8c <LL_Get_LTK>
100551c0:	bdb0      	pop	{r4, r5, r7, pc}
100551c2:	2002      	movs	r0, #2
100551c4:	bdb0      	pop	{r4, r5, r7, pc}

100551c6 <hci_le_long_term_key_request_negative_reply_api>:
100551c6:	b510      	push	{r4, lr}
100551c8:	4604      	mov	r4, r0
100551ca:	f001 f9af 	bl	1005652c <llc_conn_get_conn_idx>
100551ce:	28ff      	cmp	r0, #255	@ 0xff
100551d0:	d005      	beq.n	100551de <hci_le_long_term_key_request_negative_reply_api+0x18>
100551d2:	2081      	movs	r0, #129	@ 0x81
100551d4:	2200      	movs	r2, #0
100551d6:	4621      	mov	r1, r4
100551d8:	f009 fcd8 	bl	1005eb8c <LL_Get_LTK>
100551dc:	bd10      	pop	{r4, pc}
100551de:	2002      	movs	r0, #2
100551e0:	bd10      	pop	{r4, pc}

100551e2 <hci_le_set_extended_advertising_parameters_api>:
100551e2:	b510      	push	{r4, lr}
100551e4:	b08e      	sub	sp, #56	@ 0x38
100551e6:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
100551e8:	940d      	str	r4, [sp, #52]	@ 0x34
100551ea:	2400      	movs	r4, #0
100551ec:	940c      	str	r4, [sp, #48]	@ 0x30
100551ee:	940b      	str	r4, [sp, #44]	@ 0x2c
100551f0:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
100551f2:	940a      	str	r4, [sp, #40]	@ 0x28
100551f4:	9c19      	ldr	r4, [sp, #100]	@ 0x64
100551f6:	9409      	str	r4, [sp, #36]	@ 0x24
100551f8:	9c18      	ldr	r4, [sp, #96]	@ 0x60
100551fa:	9408      	str	r4, [sp, #32]
100551fc:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
100551fe:	9407      	str	r4, [sp, #28]
10055200:	9c16      	ldr	r4, [sp, #88]	@ 0x58
10055202:	9406      	str	r4, [sp, #24]
10055204:	9c15      	ldr	r4, [sp, #84]	@ 0x54
10055206:	9405      	str	r4, [sp, #20]
10055208:	9c14      	ldr	r4, [sp, #80]	@ 0x50
1005520a:	9404      	str	r4, [sp, #16]
1005520c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
1005520e:	9403      	str	r4, [sp, #12]
10055210:	9c12      	ldr	r4, [sp, #72]	@ 0x48
10055212:	9402      	str	r4, [sp, #8]
10055214:	9c11      	ldr	r4, [sp, #68]	@ 0x44
10055216:	9401      	str	r4, [sp, #4]
10055218:	9c10      	ldr	r4, [sp, #64]	@ 0x40
1005521a:	9400      	str	r4, [sp, #0]
1005521c:	f000 f802 	bl	10055224 <hci_le_set_extended_advertising_parameters_v2_api>
10055220:	b00e      	add	sp, #56	@ 0x38
10055222:	bd10      	pop	{r4, pc}

10055224 <hci_le_set_extended_advertising_parameters_v2_api>:
10055224:	b5f0      	push	{r4, r5, r6, r7, lr}
10055226:	b089      	sub	sp, #36	@ 0x24
10055228:	9300      	str	r3, [sp, #0]
1005522a:	4616      	mov	r6, r2
1005522c:	460f      	mov	r7, r1
1005522e:	4604      	mov	r4, r0
10055230:	2001      	movs	r0, #1
10055232:	2502      	movs	r5, #2
10055234:	4629      	mov	r1, r5
10055236:	f7ff fed5 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
1005523a:	2800      	cmp	r0, #0
1005523c:	d106      	bne.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
1005523e:	a801      	add	r0, sp, #4
10055240:	7004      	strb	r4, [r0, #0]
10055242:	0920      	lsrs	r0, r4, #4
10055244:	2412      	movs	r4, #18
10055246:	280e      	cmp	r0, #14
10055248:	d902      	bls.n	10055250 <hci_le_set_extended_advertising_parameters_v2_api+0x2c>
1005524a:	4620      	mov	r0, r4
1005524c:	b009      	add	sp, #36	@ 0x24
1005524e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055250:	f7f9 f91d 	bl	1004e48e <conn_supp_csr_ucfg>
10055254:	2800      	cmp	r0, #0
10055256:	d101      	bne.n	1005525c <hci_le_set_extended_advertising_parameters_v2_api+0x38>
10055258:	07f8      	lsls	r0, r7, #31
1005525a:	d15c      	bne.n	10055316 <hci_le_set_extended_advertising_parameters_v2_api+0xf2>
1005525c:	a801      	add	r0, sp, #4
1005525e:	8047      	strh	r7, [r0, #2]
10055260:	06f8      	lsls	r0, r7, #27
10055262:	d404      	bmi.n	1005526e <hci_le_set_extended_advertising_parameters_v2_api+0x4a>
10055264:	07f8      	lsls	r0, r7, #31
10055266:	d10e      	bne.n	10055286 <hci_le_set_extended_advertising_parameters_v2_api+0x62>
10055268:	0738      	lsls	r0, r7, #28
1005526a:	d4ee      	bmi.n	1005524a <hci_le_set_extended_advertising_parameters_v2_api+0x26>
1005526c:	e011      	b.n	10055292 <hci_le_set_extended_advertising_parameters_v2_api+0x6e>
1005526e:	2f13      	cmp	r7, #19
10055270:	d013      	beq.n	1005529a <hci_le_set_extended_advertising_parameters_v2_api+0x76>
10055272:	2008      	movs	r0, #8
10055274:	463a      	mov	r2, r7
10055276:	4382      	bics	r2, r0
10055278:	2a15      	cmp	r2, #21
1005527a:	d00a      	beq.n	10055292 <hci_le_set_extended_advertising_parameters_v2_api+0x6e>
1005527c:	4638      	mov	r0, r7
1005527e:	4328      	orrs	r0, r5
10055280:	2812      	cmp	r0, #18
10055282:	d006      	beq.n	10055292 <hci_le_set_extended_advertising_parameters_v2_api+0x6e>
10055284:	e7e1      	b.n	1005524a <hci_le_set_extended_advertising_parameters_v2_api+0x26>
10055286:	403d      	ands	r5, r7
10055288:	2008      	movs	r0, #8
1005528a:	463a      	mov	r2, r7
1005528c:	4002      	ands	r2, r0
1005528e:	1950      	adds	r0, r2, r5
10055290:	d1db      	bne.n	1005524a <hci_le_set_extended_advertising_parameters_v2_api+0x26>
10055292:	06b8      	lsls	r0, r7, #26
10055294:	d501      	bpl.n	1005529a <hci_le_set_extended_advertising_parameters_v2_api+0x76>
10055296:	07b8      	lsls	r0, r7, #30
10055298:	d1d7      	bne.n	1005524a <hci_le_set_extended_advertising_parameters_v2_api+0x26>
1005529a:	4627      	mov	r7, r4
1005529c:	ac01      	add	r4, sp, #4
1005529e:	1d20      	adds	r0, r4, #4
100552a0:	4631      	mov	r1, r6
100552a2:	f00a fcf5 	bl	1005fc90 <UTIL_Intervalconv>
100552a6:	3408      	adds	r4, #8
100552a8:	4620      	mov	r0, r4
100552aa:	9900      	ldr	r1, [sp, #0]
100552ac:	f00a fcf0 	bl	1005fc90 <UTIL_Intervalconv>
100552b0:	9802      	ldr	r0, [sp, #8]
100552b2:	2820      	cmp	r0, #32
100552b4:	d201      	bcs.n	100552ba <hci_le_set_extended_advertising_parameters_v2_api+0x96>
100552b6:	4638      	mov	r0, r7
100552b8:	e7c8      	b.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
100552ba:	9903      	ldr	r1, [sp, #12]
100552bc:	2920      	cmp	r1, #32
100552be:	463a      	mov	r2, r7
100552c0:	d327      	bcc.n	10055312 <hci_le_set_extended_advertising_parameters_v2_api+0xee>
100552c2:	4288      	cmp	r0, r1
100552c4:	d825      	bhi.n	10055312 <hci_le_set_extended_advertising_parameters_v2_api+0xee>
100552c6:	980e      	ldr	r0, [sp, #56]	@ 0x38
100552c8:	a901      	add	r1, sp, #4
100552ca:	7308      	strb	r0, [r1, #12]
100552cc:	0740      	lsls	r0, r0, #29
100552ce:	d020      	beq.n	10055312 <hci_le_set_extended_advertising_parameters_v2_api+0xee>
100552d0:	980f      	ldr	r0, [sp, #60]	@ 0x3c
100552d2:	ac01      	add	r4, sp, #4
100552d4:	7360      	strb	r0, [r4, #13]
100552d6:	f000 f8a4 	bl	10055422 <hci_le_check_own_address_type_max_value_ucfg_weak>
100552da:	7b61      	ldrb	r1, [r4, #13]
100552dc:	4281      	cmp	r1, r0
100552de:	d8ea      	bhi.n	100552b6 <hci_le_set_extended_advertising_parameters_v2_api+0x92>
100552e0:	9810      	ldr	r0, [sp, #64]	@ 0x40
100552e2:	a901      	add	r1, sp, #4
100552e4:	7388      	strb	r0, [r1, #14]
100552e6:	2801      	cmp	r0, #1
100552e8:	d8e5      	bhi.n	100552b6 <hci_le_set_extended_advertising_parameters_v2_api+0x92>
100552ea:	9c12      	ldr	r4, [sp, #72]	@ 0x48
100552ec:	9911      	ldr	r1, [sp, #68]	@ 0x44
100552ee:	ad01      	add	r5, sp, #4
100552f0:	4628      	mov	r0, r5
100552f2:	300f      	adds	r0, #15
100552f4:	2206      	movs	r2, #6
100552f6:	f7ef fb55 	bl	100449a4 <BLEPLAT_MemCpy>
100552fa:	756c      	strb	r4, [r5, #21]
100552fc:	2c03      	cmp	r4, #3
100552fe:	d8da      	bhi.n	100552b6 <hci_le_set_extended_advertising_parameters_v2_api+0x92>
10055300:	9c14      	ldr	r4, [sp, #80]	@ 0x50
10055302:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
10055304:	9813      	ldr	r0, [sp, #76]	@ 0x4c
10055306:	287f      	cmp	r0, #127	@ 0x7f
10055308:	d107      	bne.n	1005531a <hci_le_set_extended_advertising_parameters_v2_api+0xf6>
1005530a:	481f      	ldr	r0, [pc, #124]	@ (10055388 <__arm_cp.1_0>)
1005530c:	6800      	ldr	r0, [r0, #0]
1005530e:	7a40      	ldrb	r0, [r0, #9]
10055310:	e005      	b.n	1005531e <hci_le_set_extended_advertising_parameters_v2_api+0xfa>
10055312:	4610      	mov	r0, r2
10055314:	e79a      	b.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
10055316:	2011      	movs	r0, #17
10055318:	e798      	b.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
1005531a:	f7ef fbe7 	bl	10044aec <BLEPLAT_DBmToPALevel>
1005531e:	ae01      	add	r6, sp, #4
10055320:	75b0      	strb	r0, [r6, #22]
10055322:	f7ef fbf4 	bl	10044b0e <BLEPLAT_PALevelToDBm>
10055326:	7028      	strb	r0, [r5, #0]
10055328:	75f4      	strb	r4, [r6, #23]
1005532a:	21fd      	movs	r1, #253	@ 0xfd
1005532c:	4021      	ands	r1, r4
1005532e:	2011      	movs	r0, #17
10055330:	2901      	cmp	r1, #1
10055332:	d18b      	bne.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
10055334:	9916      	ldr	r1, [sp, #88]	@ 0x58
10055336:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10055338:	ab01      	add	r3, sp, #4
1005533a:	7699      	strb	r1, [r3, #26]
1005533c:	765a      	strb	r2, [r3, #25]
1005533e:	2900      	cmp	r1, #0
10055340:	d084      	beq.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
10055342:	2903      	cmp	r1, #3
10055344:	d882      	bhi.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
10055346:	981a      	ldr	r0, [sp, #104]	@ 0x68
10055348:	9919      	ldr	r1, [sp, #100]	@ 0x64
1005534a:	aa01      	add	r2, sp, #4
1005534c:	76d0      	strb	r0, [r2, #27]
1005534e:	7611      	strb	r1, [r2, #24]
10055350:	2904      	cmp	r1, #4
10055352:	d8b0      	bhi.n	100552b6 <hci_le_set_extended_advertising_parameters_v2_api+0x92>
10055354:	2804      	cmp	r0, #4
10055356:	d8ae      	bhi.n	100552b6 <hci_le_set_extended_advertising_parameters_v2_api+0x92>
10055358:	a801      	add	r0, sp, #4
1005535a:	2c01      	cmp	r4, #1
1005535c:	d003      	beq.n	10055366 <hci_le_set_extended_advertising_parameters_v2_api+0x142>
1005535e:	8840      	ldrh	r0, [r0, #2]
10055360:	2110      	movs	r1, #16
10055362:	4001      	ands	r1, r0
10055364:	d1a7      	bne.n	100552b6 <hci_le_set_extended_advertising_parameters_v2_api+0x92>
10055366:	9817      	ldr	r0, [sp, #92]	@ 0x5c
10055368:	a901      	add	r1, sp, #4
1005536a:	7708      	strb	r0, [r1, #28]
1005536c:	280f      	cmp	r0, #15
1005536e:	d8a2      	bhi.n	100552b6 <hci_le_set_extended_advertising_parameters_v2_api+0x92>
10055370:	9818      	ldr	r0, [sp, #96]	@ 0x60
10055372:	a901      	add	r1, sp, #4
10055374:	7748      	strb	r0, [r1, #29]
10055376:	2801      	cmp	r0, #1
10055378:	4638      	mov	r0, r7
1005537a:	d900      	bls.n	1005537e <hci_le_set_extended_advertising_parameters_v2_api+0x15a>
1005537c:	e766      	b.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
1005537e:	a801      	add	r0, sp, #4
10055380:	f00a ff28 	bl	100601d4 <LL_Set_Extented_Advertising_Parameters>
10055384:	e762      	b.n	1005524c <hci_le_set_extended_advertising_parameters_v2_api+0x28>
10055386:	46c0      	nop			@ (mov r8, r8)

10055388 <__arm_cp.1_0>:
10055388:	20000894 	.word	0x20000894

1005538c <hci_le_set_advertising_set_random_address_api>:
1005538c:	b580      	push	{r7, lr}
1005538e:	f00a fee5 	bl	1006015c <LL_Set_Extented_Advertising_Set_Random_Address>
10055392:	bd80      	pop	{r7, pc}

10055394 <hci_le_set_extended_advertising_enable_api>:
10055394:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10055396:	4614      	mov	r4, r2
10055398:	460d      	mov	r5, r1
1005539a:	4606      	mov	r6, r0
1005539c:	2001      	movs	r0, #1
1005539e:	2102      	movs	r1, #2
100553a0:	f7ff fe20 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
100553a4:	2800      	cmp	r0, #0
100553a6:	d13a      	bne.n	1005541e <hci_le_set_extended_advertising_enable_api+0x8a>
100553a8:	2012      	movs	r0, #18
100553aa:	2e01      	cmp	r6, #1
100553ac:	d837      	bhi.n	1005541e <hci_le_set_extended_advertising_enable_api+0x8a>
100553ae:	2d3f      	cmp	r5, #63	@ 0x3f
100553b0:	d835      	bhi.n	1005541e <hci_le_set_extended_advertising_enable_api+0x8a>
100553b2:	2e00      	cmp	r6, #0
100553b4:	d001      	beq.n	100553ba <hci_le_set_extended_advertising_enable_api+0x26>
100553b6:	2d00      	cmp	r5, #0
100553b8:	d031      	beq.n	1005541e <hci_le_set_extended_advertising_enable_api+0x8a>
100553ba:	9001      	str	r0, [sp, #4]
100553bc:	2700      	movs	r7, #0
100553be:	4630      	mov	r0, r6
100553c0:	4328      	orrs	r0, r5
100553c2:	4639      	mov	r1, r7
100553c4:	d107      	bne.n	100553d6 <hci_le_set_extended_advertising_enable_api+0x42>
100553c6:	2200      	movs	r2, #0
100553c8:	9200      	str	r2, [sp, #0]
100553ca:	4630      	mov	r0, r6
100553cc:	4629      	mov	r1, r5
100553ce:	4613      	mov	r3, r2
100553d0:	f00a fd5a 	bl	1005fe88 <LL_Set_Extented_Advertising_Enable>
100553d4:	4601      	mov	r1, r0
100553d6:	b2fb      	uxtb	r3, r7
100553d8:	42ab      	cmp	r3, r5
100553da:	4608      	mov	r0, r1
100553dc:	d21f      	bcs.n	1005541e <hci_le_set_extended_advertising_enable_api+0x8a>
100553de:	9702      	str	r7, [sp, #8]
100553e0:	2106      	movs	r1, #6
100553e2:	4608      	mov	r0, r1
100553e4:	4358      	muls	r0, r3
100553e6:	5c22      	ldrb	r2, [r4, r0]
100553e8:	0917      	lsrs	r7, r2, #4
100553ea:	2f0e      	cmp	r7, #14
100553ec:	d816      	bhi.n	1005541c <hci_le_set_extended_advertising_enable_api+0x88>
100553ee:	1c5b      	adds	r3, r3, #1
100553f0:	b2df      	uxtb	r7, r3
100553f2:	42af      	cmp	r7, r5
100553f4:	d204      	bcs.n	10055400 <hci_le_set_extended_advertising_enable_api+0x6c>
100553f6:	434f      	muls	r7, r1
100553f8:	5de7      	ldrb	r7, [r4, r7]
100553fa:	4297      	cmp	r7, r2
100553fc:	d1f7      	bne.n	100553ee <hci_le_set_extended_advertising_enable_api+0x5a>
100553fe:	e00d      	b.n	1005541c <hci_le_set_extended_advertising_enable_api+0x88>
10055400:	1820      	adds	r0, r4, r0
10055402:	8843      	ldrh	r3, [r0, #2]
10055404:	7900      	ldrb	r0, [r0, #4]
10055406:	9000      	str	r0, [sp, #0]
10055408:	4630      	mov	r0, r6
1005540a:	4629      	mov	r1, r5
1005540c:	f00a fd3c 	bl	1005fe88 <LL_Set_Extented_Advertising_Enable>
10055410:	9f02      	ldr	r7, [sp, #8]
10055412:	1c7f      	adds	r7, r7, #1
10055414:	2100      	movs	r1, #0
10055416:	2800      	cmp	r0, #0
10055418:	d0dd      	beq.n	100553d6 <hci_le_set_extended_advertising_enable_api+0x42>
1005541a:	e000      	b.n	1005541e <hci_le_set_extended_advertising_enable_api+0x8a>
1005541c:	9801      	ldr	r0, [sp, #4]
1005541e:	b2c0      	uxtb	r0, r0
10055420:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10055422 <hci_le_check_own_address_type_max_value_ucfg_weak>:
10055422:	2001      	movs	r0, #1
10055424:	4770      	bx	lr

10055426 <hci_le_periodic_advertising_set_info_transfer_api>:
10055426:	b570      	push	{r4, r5, r6, lr}
10055428:	4614      	mov	r4, r2
1005542a:	460d      	mov	r5, r1
1005542c:	4606      	mov	r6, r0
1005542e:	2001      	movs	r0, #1
10055430:	2102      	movs	r1, #2
10055432:	f7ff fdd7 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
10055436:	2800      	cmp	r0, #0
10055438:	d000      	beq.n	1005543c <hci_le_periodic_advertising_set_info_transfer_api+0x16>
1005543a:	bd70      	pop	{r4, r5, r6, pc}
1005543c:	0a31      	lsrs	r1, r6, #8
1005543e:	2012      	movs	r0, #18
10055440:	290e      	cmp	r1, #14
10055442:	d8fa      	bhi.n	1005543a <hci_le_periodic_advertising_set_info_transfer_api+0x14>
10055444:	0921      	lsrs	r1, r4, #4
10055446:	290e      	cmp	r1, #14
10055448:	d8f7      	bhi.n	1005543a <hci_le_periodic_advertising_set_info_transfer_api+0x14>
1005544a:	4630      	mov	r0, r6
1005544c:	4629      	mov	r1, r5
1005544e:	4622      	mov	r2, r4
10055450:	f00a f8d0 	bl	1005f5f4 <LL_Periodic_Advertising_Set_Info_Transfer>
10055454:	bd70      	pop	{r4, r5, r6, pc}

10055456 <hci_le_clear_filter_accept_list>:
10055456:	b580      	push	{r7, lr}
10055458:	f002 fc34 	bl	10057cc4 <llc_wl_clear_filter_accept_list>
1005545c:	bd80      	pop	{r7, pc}

1005545e <hci_le_add_device_to_filter_accept_list>:
1005545e:	b5e0      	push	{r5, r6, r7, lr}
10055460:	2802      	cmp	r0, #2
10055462:	d301      	bcc.n	10055468 <hci_le_add_device_to_filter_accept_list+0xa>
10055464:	28ff      	cmp	r0, #255	@ 0xff
10055466:	d10d      	bne.n	10055484 <hci_le_add_device_to_filter_accept_list+0x26>
10055468:	2200      	movs	r2, #0
1005546a:	9200      	str	r2, [sp, #0]
1005546c:	466b      	mov	r3, sp
1005546e:	7018      	strb	r0, [r3, #0]
10055470:	9201      	str	r2, [sp, #4]
10055472:	1c58      	adds	r0, r3, #1
10055474:	2206      	movs	r2, #6
10055476:	f7ef fa95 	bl	100449a4 <BLEPLAT_MemCpy>
1005547a:	9901      	ldr	r1, [sp, #4]
1005547c:	9800      	ldr	r0, [sp, #0]
1005547e:	f002 fc3b 	bl	10057cf8 <llc_wl_add_device_to_filter_accept_list>
10055482:	bd8c      	pop	{r2, r3, r7, pc}
10055484:	2012      	movs	r0, #18
10055486:	bd8c      	pop	{r2, r3, r7, pc}

10055488 <data_length_extension_csr_ucfg_weak>:
10055488:	2000      	movs	r0, #0
1005548a:	4770      	bx	lr

1005548c <hci_le_set_periodic_advertising_parameters_common_check>:
1005548c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005548e:	461c      	mov	r4, r3
10055490:	4615      	mov	r5, r2
10055492:	460e      	mov	r6, r1
10055494:	4607      	mov	r7, r0
10055496:	2001      	movs	r0, #1
10055498:	2102      	movs	r1, #2
1005549a:	f7ff fda3 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
1005549e:	2800      	cmp	r0, #0
100554a0:	d000      	beq.n	100554a4 <hci_le_set_periodic_advertising_parameters_common_check+0x18>
100554a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100554a4:	2100      	movs	r1, #0
100554a6:	22ef      	movs	r2, #239	@ 0xef
100554a8:	4638      	mov	r0, r7
100554aa:	f00c fcf9 	bl	10061ea0 <LL_link_is_arg_in_range>
100554ae:	2800      	cmp	r0, #0
100554b0:	d1f7      	bne.n	100554a2 <hci_le_set_periodic_advertising_parameters_common_check+0x16>
100554b2:	4f0a      	ldr	r7, [pc, #40]	@ (100554dc <__arm_cp.0_0>)
100554b4:	463a      	mov	r2, r7
100554b6:	3240      	adds	r2, #64	@ 0x40
100554b8:	2106      	movs	r1, #6
100554ba:	4628      	mov	r0, r5
100554bc:	f00c fcf0 	bl	10061ea0 <LL_link_is_arg_in_range>
100554c0:	2800      	cmp	r0, #0
100554c2:	d1ee      	bne.n	100554a2 <hci_le_set_periodic_advertising_parameters_common_check+0x16>
100554c4:	2106      	movs	r1, #6
100554c6:	4630      	mov	r0, r6
100554c8:	462a      	mov	r2, r5
100554ca:	f00c fce9 	bl	10061ea0 <LL_link_is_arg_in_range>
100554ce:	2800      	cmp	r0, #0
100554d0:	d1e7      	bne.n	100554a2 <hci_le_set_periodic_advertising_parameters_common_check+0x16>
100554d2:	4620      	mov	r0, r4
100554d4:	4639      	mov	r1, r7
100554d6:	f00c fceb 	bl	10061eb0 <LL_link_is_bitmap_valid>
100554da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100554dc <__arm_cp.0_0>:
100554dc:	0000ffbf 	.word	0x0000ffbf

100554e0 <hci_le_set_periodic_advertising_enable_api>:
100554e0:	b5b0      	push	{r4, r5, r7, lr}
100554e2:	460c      	mov	r4, r1
100554e4:	4605      	mov	r5, r0
100554e6:	2001      	movs	r0, #1
100554e8:	2102      	movs	r1, #2
100554ea:	f7ff fd7b 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
100554ee:	2800      	cmp	r0, #0
100554f0:	d000      	beq.n	100554f4 <hci_le_set_periodic_advertising_enable_api+0x14>
100554f2:	bdb0      	pop	{r4, r5, r7, pc}
100554f4:	2100      	movs	r1, #0
100554f6:	22ef      	movs	r2, #239	@ 0xef
100554f8:	4620      	mov	r0, r4
100554fa:	f00c fcd1 	bl	10061ea0 <LL_link_is_arg_in_range>
100554fe:	2800      	cmp	r0, #0
10055500:	d1f7      	bne.n	100554f2 <hci_le_set_periodic_advertising_enable_api+0x12>
10055502:	4905      	ldr	r1, [pc, #20]	@ (10055518 <__arm_cp.2_0>)
10055504:	4628      	mov	r0, r5
10055506:	f00c fcd3 	bl	10061eb0 <LL_link_is_bitmap_valid>
1005550a:	2800      	cmp	r0, #0
1005550c:	d1f1      	bne.n	100554f2 <hci_le_set_periodic_advertising_enable_api+0x12>
1005550e:	4628      	mov	r0, r5
10055510:	4621      	mov	r1, r4
10055512:	f002 fced 	bl	10057ef0 <llc_padv_set_periodic_advertising_enable>
10055516:	bdb0      	pop	{r4, r5, r7, pc}

10055518 <__arm_cp.2_0>:
10055518:	0000fffc 	.word	0x0000fffc

1005551c <hci_le_set_periodic_advertising_parameters_v2_api>:
1005551c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005551e:	b08f      	sub	sp, #60	@ 0x3c
10055520:	461f      	mov	r7, r3
10055522:	4616      	mov	r6, r2
10055524:	460d      	mov	r5, r1
10055526:	9007      	str	r0, [sp, #28]
10055528:	f7ff ffb0 	bl	1005548c <hci_le_set_periodic_advertising_parameters_common_check>
1005552c:	2800      	cmp	r0, #0
1005552e:	d16a      	bne.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
10055530:	9c14      	ldr	r4, [sp, #80]	@ 0x50
10055532:	2100      	movs	r1, #0
10055534:	2280      	movs	r2, #128	@ 0x80
10055536:	4620      	mov	r0, r4
10055538:	9106      	str	r1, [sp, #24]
1005553a:	f00c fcb1 	bl	10061ea0 <LL_link_is_arg_in_range>
1005553e:	2800      	cmp	r0, #0
10055540:	d161      	bne.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
10055542:	4836      	ldr	r0, [pc, #216]	@ (1005561c <__arm_cp.0_0>)
10055544:	7ec0      	ldrb	r0, [r0, #27]
10055546:	42a0      	cmp	r0, r4
10055548:	d201      	bcs.n	1005554e <hci_le_set_periodic_advertising_parameters_v2_api+0x32>
1005554a:	2007      	movs	r0, #7
1005554c:	e05b      	b.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
1005554e:	4621      	mov	r1, r4
10055550:	9818      	ldr	r0, [sp, #96]	@ 0x60
10055552:	9004      	str	r0, [sp, #16]
10055554:	9817      	ldr	r0, [sp, #92]	@ 0x5c
10055556:	9002      	str	r0, [sp, #8]
10055558:	9816      	ldr	r0, [sp, #88]	@ 0x58
1005555a:	9003      	str	r0, [sp, #12]
1005555c:	9815      	ldr	r0, [sp, #84]	@ 0x54
1005555e:	9005      	str	r0, [sp, #20]
10055560:	2c00      	cmp	r4, #0
10055562:	d02e      	beq.n	100555c2 <hci_le_set_periodic_advertising_parameters_v2_api+0xa6>
10055564:	4628      	mov	r0, r5
10055566:	460c      	mov	r4, r1
10055568:	f7ea fe6a 	bl	10040240 <__udivsi3>
1005556c:	4602      	mov	r2, r0
1005556e:	28ff      	cmp	r0, #255	@ 0xff
10055570:	d300      	bcc.n	10055574 <hci_le_set_periodic_advertising_parameters_v2_api+0x58>
10055572:	22ff      	movs	r2, #255	@ 0xff
10055574:	2106      	movs	r1, #6
10055576:	9805      	ldr	r0, [sp, #20]
10055578:	f00c fc92 	bl	10061ea0 <LL_link_is_arg_in_range>
1005557c:	2800      	cmp	r0, #0
1005557e:	d142      	bne.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
10055580:	2101      	movs	r1, #1
10055582:	22ff      	movs	r2, #255	@ 0xff
10055584:	9804      	ldr	r0, [sp, #16]
10055586:	9201      	str	r2, [sp, #4]
10055588:	f00c fc8a 	bl	10061ea0 <LL_link_is_arg_in_range>
1005558c:	2800      	cmp	r0, #0
1005558e:	d13a      	bne.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
10055590:	9805      	ldr	r0, [sp, #20]
10055592:	1e42      	subs	r2, r0, #1
10055594:	2101      	movs	r1, #1
10055596:	9803      	ldr	r0, [sp, #12]
10055598:	f00c fc82 	bl	10061ea0 <LL_link_is_arg_in_range>
1005559c:	2800      	cmp	r0, #0
1005559e:	d132      	bne.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
100555a0:	9805      	ldr	r0, [sp, #20]
100555a2:	9903      	ldr	r1, [sp, #12]
100555a4:	1a41      	subs	r1, r0, r1
100555a6:	200a      	movs	r0, #10
100555a8:	4348      	muls	r0, r1
100555aa:	9904      	ldr	r1, [sp, #16]
100555ac:	f7ea fe48 	bl	10040240 <__udivsi3>
100555b0:	0401      	lsls	r1, r0, #16
100555b2:	0e09      	lsrs	r1, r1, #24
100555b4:	d000      	beq.n	100555b8 <hci_le_set_periodic_advertising_parameters_v2_api+0x9c>
100555b6:	9801      	ldr	r0, [sp, #4]
100555b8:	9904      	ldr	r1, [sp, #16]
100555ba:	2901      	cmp	r1, #1
100555bc:	d125      	bne.n	1005560a <hci_le_set_periodic_advertising_parameters_v2_api+0xee>
100555be:	9002      	str	r0, [sp, #8]
100555c0:	e000      	b.n	100555c4 <hci_le_set_periodic_advertising_parameters_v2_api+0xa8>
100555c2:	460c      	mov	r4, r1
100555c4:	a80d      	add	r0, sp, #52	@ 0x34
100555c6:	80c7      	strh	r7, [r0, #6]
100555c8:	8086      	strh	r6, [r0, #4]
100555ca:	8045      	strh	r5, [r0, #2]
100555cc:	9907      	ldr	r1, [sp, #28]
100555ce:	7041      	strb	r1, [r0, #1]
100555d0:	7004      	strb	r4, [r0, #0]
100555d2:	9906      	ldr	r1, [sp, #24]
100555d4:	910c      	str	r1, [sp, #48]	@ 0x30
100555d6:	aa0b      	add	r2, sp, #44	@ 0x2c
100555d8:	7011      	strb	r1, [r2, #0]
100555da:	a90c      	add	r1, sp, #48	@ 0x30
100555dc:	f002 fc0c 	bl	10057df8 <llc_padv_set_periodic_advertising_parameters>
100555e0:	2c00      	cmp	r4, #0
100555e2:	d010      	beq.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
100555e4:	2800      	cmp	r0, #0
100555e6:	d10e      	bne.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
100555e8:	a808      	add	r0, sp, #32
100555ea:	9904      	ldr	r1, [sp, #16]
100555ec:	7101      	strb	r1, [r0, #4]
100555ee:	9902      	ldr	r1, [sp, #8]
100555f0:	70c1      	strb	r1, [r0, #3]
100555f2:	9903      	ldr	r1, [sp, #12]
100555f4:	7081      	strb	r1, [r0, #2]
100555f6:	9905      	ldr	r1, [sp, #20]
100555f8:	7041      	strb	r1, [r0, #1]
100555fa:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100555fc:	7001      	strb	r1, [r0, #0]
100555fe:	990c      	ldr	r1, [sp, #48]	@ 0x30
10055600:	910a      	str	r1, [sp, #40]	@ 0x28
10055602:	f003 fa11 	bl	10058a28 <llc_padv_wr_set_periodic_advertising_parameters>
10055606:	b00f      	add	sp, #60	@ 0x3c
10055608:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005560a:	b282      	uxth	r2, r0
1005560c:	2102      	movs	r1, #2
1005560e:	9802      	ldr	r0, [sp, #8]
10055610:	f00c fc46 	bl	10061ea0 <LL_link_is_arg_in_range>
10055614:	2800      	cmp	r0, #0
10055616:	d1f6      	bne.n	10055606 <hci_le_set_periodic_advertising_parameters_v2_api+0xea>
10055618:	e7d4      	b.n	100555c4 <hci_le_set_periodic_advertising_parameters_v2_api+0xa8>
1005561a:	46c0      	nop			@ (mov r8, r8)

1005561c <__arm_cp.0_0>:
1005561c:	200008a8 	.word	0x200008a8

10055620 <pcl_csr_ucfg_weak>:
10055620:	2000      	movs	r0, #0
10055622:	4770      	bx	lr

10055624 <phy_upd_csr_ucfg_weak>:
10055624:	2000      	movs	r0, #0
10055626:	4770      	bx	lr

10055628 <hci_le_set_extended_scan_parameters_api>:
10055628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005562a:	461c      	mov	r4, r3
1005562c:	4615      	mov	r5, r2
1005562e:	460e      	mov	r6, r1
10055630:	4607      	mov	r7, r0
10055632:	2001      	movs	r0, #1
10055634:	2102      	movs	r1, #2
10055636:	f7ff fcd5 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
1005563a:	2800      	cmp	r0, #0
1005563c:	d000      	beq.n	10055640 <hci_le_set_extended_scan_parameters_api+0x18>
1005563e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10055640:	2000      	movs	r0, #0
10055642:	9000      	str	r0, [sp, #0]
10055644:	4638      	mov	r0, r7
10055646:	4631      	mov	r1, r6
10055648:	462a      	mov	r2, r5
1005564a:	4623      	mov	r3, r4
1005564c:	f006 fee0 	bl	1005c410 <llc_scan_set_scanning_params>
10055650:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10055652 <hci_le_set_extended_scan_enable_api>:
10055652:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10055654:	461d      	mov	r5, r3
10055656:	4614      	mov	r4, r2
10055658:	460f      	mov	r7, r1
1005565a:	4606      	mov	r6, r0
1005565c:	2001      	movs	r0, #1
1005565e:	2102      	movs	r1, #2
10055660:	f7ff fcc0 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
10055664:	2800      	cmp	r0, #0
10055666:	d000      	beq.n	1005566a <hci_le_set_extended_scan_enable_api+0x18>
10055668:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005566a:	4668      	mov	r0, sp
1005566c:	2100      	movs	r1, #0
1005566e:	7281      	strb	r1, [r0, #10]
10055670:	7247      	strb	r7, [r0, #9]
10055672:	7206      	strb	r6, [r0, #8]
10055674:	9501      	str	r5, [sp, #4]
10055676:	9400      	str	r4, [sp, #0]
10055678:	f006 fd1a 	bl	1005c0b0 <llc_scan_enable>
1005567c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005567e <scan_csr>:
1005567e:	2001      	movs	r0, #1
10055680:	4770      	bx	lr

10055682 <conn_supp_csr>:
10055682:	2001      	movs	r0, #1
10055684:	4770      	bx	lr

10055686 <hci_le_connection_update_api>:
10055686:	b51f      	push	{r0, r1, r2, r3, r4, lr}
10055688:	9c08      	ldr	r4, [sp, #32]
1005568a:	9402      	str	r4, [sp, #8]
1005568c:	9c07      	ldr	r4, [sp, #28]
1005568e:	9401      	str	r4, [sp, #4]
10055690:	9c06      	ldr	r4, [sp, #24]
10055692:	9400      	str	r4, [sp, #0]
10055694:	f008 fdf7 	bl	1005e286 <LL_Start_Connection_Update>
10055698:	b004      	add	sp, #16
1005569a:	bd10      	pop	{r4, pc}

1005569c <subrate_csr_ucfg_weak>:
1005569c:	2000      	movs	r0, #0
1005569e:	4770      	bx	lr

100556a0 <L2C_build_connect_update_response>:
100556a0:	b5f0      	push	{r4, r5, r6, r7, lr}
100556a2:	b087      	sub	sp, #28
100556a4:	4616      	mov	r6, r2
100556a6:	460d      	mov	r5, r1
100556a8:	4607      	mov	r7, r0
100556aa:	2000      	movs	r0, #0
100556ac:	9006      	str	r0, [sp, #24]
100556ae:	8838      	ldrh	r0, [r7, #0]
100556b0:	2212      	movs	r2, #18
100556b2:	ab06      	add	r3, sp, #24
100556b4:	f000 f88b 	bl	100557ce <l2c_get_check_link_status_on_response_sending>
100556b8:	4604      	mov	r4, r0
100556ba:	2800      	cmp	r0, #0
100556bc:	d002      	beq.n	100556c4 <L2C_build_connect_update_response+0x24>
100556be:	4620      	mov	r0, r4
100556c0:	b007      	add	sp, #28
100556c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
100556c4:	9605      	str	r6, [sp, #20]
100556c6:	8839      	ldrh	r1, [r7, #0]
100556c8:	2400      	movs	r4, #0
100556ca:	220a      	movs	r2, #10
100556cc:	4620      	mov	r0, r4
100556ce:	f7fa fc43 	bl	1004ff58 <ACL_pkt_get>
100556d2:	2800      	cmp	r0, #0
100556d4:	d01d      	beq.n	10055712 <L2C_build_connect_update_response+0x72>
100556d6:	4606      	mov	r6, r0
100556d8:	2001      	movs	r0, #1
100556da:	9004      	str	r0, [sp, #16]
100556dc:	9805      	ldr	r0, [sp, #20]
100556de:	2800      	cmp	r0, #0
100556e0:	d019      	beq.n	10055716 <L2C_build_connect_update_response+0x76>
100556e2:	88f8      	ldrh	r0, [r7, #6]
100556e4:	9005      	str	r0, [sp, #20]
100556e6:	88bb      	ldrh	r3, [r7, #4]
100556e8:	887a      	ldrh	r2, [r7, #2]
100556ea:	8839      	ldrh	r1, [r7, #0]
100556ec:	893c      	ldrh	r4, [r7, #8]
100556ee:	8978      	ldrh	r0, [r7, #10]
100556f0:	89bf      	ldrh	r7, [r7, #12]
100556f2:	9400      	str	r4, [sp, #0]
100556f4:	9001      	str	r0, [sp, #4]
100556f6:	9702      	str	r7, [sp, #8]
100556f8:	4608      	mov	r0, r1
100556fa:	4611      	mov	r1, r2
100556fc:	461a      	mov	r2, r3
100556fe:	9b05      	ldr	r3, [sp, #20]
10055700:	f7ff ffc1 	bl	10055686 <hci_le_connection_update_api>
10055704:	4604      	mov	r4, r0
10055706:	283a      	cmp	r0, #58	@ 0x3a
10055708:	d001      	beq.n	1005570e <L2C_build_connect_update_response+0x6e>
1005570a:	2c00      	cmp	r4, #0
1005570c:	d103      	bne.n	10055716 <L2C_build_connect_update_response+0x76>
1005570e:	2700      	movs	r7, #0
10055710:	e002      	b.n	10055718 <L2C_build_connect_update_response+0x78>
10055712:	2488      	movs	r4, #136	@ 0x88
10055714:	e7d3      	b.n	100556be <L2C_build_connect_update_response+0x1e>
10055716:	9f04      	ldr	r7, [sp, #16]
10055718:	6870      	ldr	r0, [r6, #4]
1005571a:	2113      	movs	r1, #19
1005571c:	7201      	strb	r1, [r0, #8]
1005571e:	6870      	ldr	r0, [r6, #4]
10055720:	7245      	strb	r5, [r0, #9]
10055722:	2506      	movs	r5, #6
10055724:	2202      	movs	r2, #2
10055726:	4630      	mov	r0, r6
10055728:	4629      	mov	r1, r5
1005572a:	f7fa fc6c 	bl	10050006 <ACL_pkt_write_16b>
1005572e:	2108      	movs	r1, #8
10055730:	4630      	mov	r0, r6
10055732:	463a      	mov	r2, r7
10055734:	f7fa fc67 	bl	10050006 <ACL_pkt_write_16b>
10055738:	8075      	strh	r5, [r6, #2]
1005573a:	2005      	movs	r0, #5
1005573c:	4631      	mov	r1, r6
1005573e:	f000 f9cb 	bl	10055ad8 <L2C_send_frame>
10055742:	2800      	cmp	r0, #0
10055744:	d004      	beq.n	10055750 <L2C_build_connect_update_response+0xb0>
10055746:	4630      	mov	r0, r6
10055748:	f7fa fc28 	bl	1004ff9c <ACL_pkt_release>
1005574c:	2481      	movs	r4, #129	@ 0x81
1005574e:	e7b6      	b.n	100556be <L2C_build_connect_update_response+0x1e>
10055750:	9806      	ldr	r0, [sp, #24]
10055752:	f000 f85a 	bl	1005580a <l2c_post_process_outgoing_response_packet>
10055756:	e7b2      	b.n	100556be <L2C_build_connect_update_response+0x1e>

10055758 <l2c_get_link_control_block_ref>:
10055758:	b570      	push	{r4, r5, r6, lr}
1005575a:	490b      	ldr	r1, [pc, #44]	@ (10055788 <__arm_cp.0_0>)
1005575c:	7ac9      	ldrb	r1, [r1, #11]
1005575e:	2214      	movs	r2, #20
10055760:	434a      	muls	r2, r1
10055762:	3214      	adds	r2, #20
10055764:	4909      	ldr	r1, [pc, #36]	@ (1005578c <__arm_cp.0_1>)
10055766:	680b      	ldr	r3, [r1, #0]
10055768:	2100      	movs	r1, #0
1005576a:	460d      	mov	r5, r1
1005576c:	460c      	mov	r4, r1
1005576e:	3414      	adds	r4, #20
10055770:	42a2      	cmp	r2, r4
10055772:	d006      	beq.n	10055782 <l2c_get_link_control_block_ref+0x2a>
10055774:	6ade      	ldr	r6, [r3, #44]	@ 0x2c
10055776:	5b75      	ldrh	r5, [r6, r5]
10055778:	4285      	cmp	r5, r0
1005577a:	4625      	mov	r5, r4
1005577c:	d1f7      	bne.n	1005576e <l2c_get_link_control_block_ref+0x16>
1005577e:	1931      	adds	r1, r6, r4
10055780:	3914      	subs	r1, #20
10055782:	4608      	mov	r0, r1
10055784:	bd70      	pop	{r4, r5, r6, pc}
10055786:	46c0      	nop			@ (mov r8, r8)

10055788 <__arm_cp.0_0>:
10055788:	200008a8 	.word	0x200008a8

1005578c <__arm_cp.0_1>:
1005578c:	20000888 	.word	0x20000888

10055790 <l2c_get_link_control_block_index>:
10055790:	b5b0      	push	{r4, r5, r7, lr}
10055792:	4909      	ldr	r1, [pc, #36]	@ (100557b8 <__arm_cp.1_0>)
10055794:	7aca      	ldrb	r2, [r1, #11]
10055796:	4909      	ldr	r1, [pc, #36]	@ (100557bc <__arm_cp.1_1>)
10055798:	680b      	ldr	r3, [r1, #0]
1005579a:	2400      	movs	r4, #0
1005579c:	4621      	mov	r1, r4
1005579e:	428a      	cmp	r2, r1
100557a0:	d006      	beq.n	100557b0 <l2c_get_link_control_block_index+0x20>
100557a2:	6add      	ldr	r5, [r3, #44]	@ 0x2c
100557a4:	5b2d      	ldrh	r5, [r5, r4]
100557a6:	4285      	cmp	r5, r0
100557a8:	d003      	beq.n	100557b2 <l2c_get_link_control_block_index+0x22>
100557aa:	3414      	adds	r4, #20
100557ac:	1c49      	adds	r1, r1, #1
100557ae:	e7f6      	b.n	1005579e <l2c_get_link_control_block_index+0xe>
100557b0:	4611      	mov	r1, r2
100557b2:	b2c8      	uxtb	r0, r1
100557b4:	bdb0      	pop	{r4, r5, r7, pc}
100557b6:	46c0      	nop			@ (mov r8, r8)

100557b8 <__arm_cp.1_0>:
100557b8:	200008a8 	.word	0x200008a8

100557bc <__arm_cp.1_1>:
100557bc:	20000888 	.word	0x20000888

100557c0 <l2c_post_process_incoming_request_packet>:
100557c0:	7190      	strb	r0, [r2, #6]
100557c2:	7151      	strb	r1, [r2, #5]
100557c4:	7890      	ldrb	r0, [r2, #2]
100557c6:	2104      	movs	r1, #4
100557c8:	4301      	orrs	r1, r0
100557ca:	7091      	strb	r1, [r2, #2]
100557cc:	4770      	bx	lr

100557ce <l2c_get_check_link_status_on_response_sending>:
100557ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100557d0:	461e      	mov	r6, r3
100557d2:	4615      	mov	r5, r2
100557d4:	460c      	mov	r4, r1
100557d6:	4607      	mov	r7, r0
100557d8:	f7ff ffbe 	bl	10055758 <l2c_get_link_control_block_ref>
100557dc:	4601      	mov	r1, r0
100557de:	6030      	str	r0, [r6, #0]
100557e0:	2002      	movs	r0, #2
100557e2:	2f00      	cmp	r7, #0
100557e4:	d00e      	beq.n	10055804 <l2c_get_check_link_status_on_response_sending+0x36>
100557e6:	2900      	cmp	r1, #0
100557e8:	d00c      	beq.n	10055804 <l2c_get_check_link_status_on_response_sending+0x36>
100557ea:	788a      	ldrb	r2, [r1, #2]
100557ec:	200c      	movs	r0, #12
100557ee:	0793      	lsls	r3, r2, #30
100557f0:	d408      	bmi.n	10055804 <l2c_get_check_link_status_on_response_sending+0x36>
100557f2:	0752      	lsls	r2, r2, #29
100557f4:	d506      	bpl.n	10055804 <l2c_get_check_link_status_on_response_sending+0x36>
100557f6:	798a      	ldrb	r2, [r1, #6]
100557f8:	42aa      	cmp	r2, r5
100557fa:	d103      	bne.n	10055804 <l2c_get_check_link_status_on_response_sending+0x36>
100557fc:	7948      	ldrb	r0, [r1, #5]
100557fe:	42a0      	cmp	r0, r4
10055800:	d001      	beq.n	10055806 <l2c_get_check_link_status_on_response_sending+0x38>
10055802:	2012      	movs	r0, #18
10055804:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10055806:	2000      	movs	r0, #0
10055808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005580a <l2c_post_process_outgoing_response_packet>:
1005580a:	2100      	movs	r1, #0
1005580c:	7181      	strb	r1, [r0, #6]
1005580e:	7881      	ldrb	r1, [r0, #2]
10055810:	22fb      	movs	r2, #251	@ 0xfb
10055812:	400a      	ands	r2, r1
10055814:	7082      	strb	r2, [r0, #2]
10055816:	4770      	bx	lr

10055818 <l2c_pre_process_incoming_response_packet>:
10055818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005581a:	4604      	mov	r4, r0
1005581c:	2014      	movs	r0, #20
1005581e:	4360      	muls	r0, r4
10055820:	4b14      	ldr	r3, [pc, #80]	@ (10055874 <__arm_cp.7_0>)
10055822:	681b      	ldr	r3, [r3, #0]
10055824:	6add      	ldr	r5, [r3, #44]	@ 0x2c
10055826:	182d      	adds	r5, r5, r0
10055828:	78a8      	ldrb	r0, [r5, #2]
1005582a:	0746      	lsls	r6, r0, #29
1005582c:	2081      	movs	r0, #129	@ 0x81
1005582e:	2e00      	cmp	r6, #0
10055830:	d51f      	bpl.n	10055872 <l2c_pre_process_incoming_response_packet+0x5a>
10055832:	79ae      	ldrb	r6, [r5, #6]
10055834:	1c76      	adds	r6, r6, #1
10055836:	428e      	cmp	r6, r1
10055838:	d001      	beq.n	1005583e <l2c_pre_process_incoming_response_packet+0x26>
1005583a:	2901      	cmp	r1, #1
1005583c:	d119      	bne.n	10055872 <l2c_pre_process_incoming_response_packet+0x5a>
1005583e:	79e9      	ldrb	r1, [r5, #7]
10055840:	4291      	cmp	r1, r2
10055842:	d116      	bne.n	10055872 <l2c_pre_process_incoming_response_packet+0x5a>
10055844:	1cae      	adds	r6, r5, #2
10055846:	1daf      	adds	r7, r5, #6
10055848:	1de8      	adds	r0, r5, #7
1005584a:	9000      	str	r0, [sp, #0]
1005584c:	4618      	mov	r0, r3
1005584e:	4621      	mov	r1, r4
10055850:	f00f fd61 	bl	10065316 <CST_stop>
10055854:	2000      	movs	r0, #0
10055856:	7038      	strb	r0, [r7, #0]
10055858:	9900      	ldr	r1, [sp, #0]
1005585a:	7008      	strb	r0, [r1, #0]
1005585c:	7831      	ldrb	r1, [r6, #0]
1005585e:	22fb      	movs	r2, #251	@ 0xfb
10055860:	400a      	ands	r2, r1
10055862:	7032      	strb	r2, [r6, #0]
10055864:	7929      	ldrb	r1, [r5, #4]
10055866:	1c4a      	adds	r2, r1, #1
10055868:	b2d1      	uxtb	r1, r2
1005586a:	4291      	cmp	r1, r2
1005586c:	d000      	beq.n	10055870 <l2c_pre_process_incoming_response_packet+0x58>
1005586e:	2101      	movs	r1, #1
10055870:	7129      	strb	r1, [r5, #4]
10055872:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10055874 <__arm_cp.7_0>:
10055874:	20000888 	.word	0x20000888

10055878 <l2c_release_unexpected_acl_packet>:
10055878:	b580      	push	{r7, lr}
1005587a:	4608      	mov	r0, r1
1005587c:	f7fa fb8e 	bl	1004ff9c <ACL_pkt_release>
10055880:	bd80      	pop	{r7, pc}

10055882 <L2C_get_cid_from_basic_packet_header>:
10055882:	b580      	push	{r7, lr}
10055884:	2102      	movs	r1, #2
10055886:	f7fa fbae 	bl	1004ffe6 <ACL_pkt_read_16b>
1005588a:	bd80      	pop	{r7, pc}

1005588c <L2C_build_command_reject_pdu>:
1005588c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005588e:	b085      	sub	sp, #20
10055890:	461e      	mov	r6, r3
10055892:	9204      	str	r2, [sp, #16]
10055894:	460d      	mov	r5, r1
10055896:	4607      	mov	r7, r0
10055898:	f7ff ff5e 	bl	10055758 <l2c_get_link_control_block_ref>
1005589c:	2800      	cmp	r0, #0
1005589e:	d00f      	beq.n	100558c0 <L2C_build_command_reject_pdu+0x34>
100558a0:	4604      	mov	r4, r0
100558a2:	9603      	str	r6, [sp, #12]
100558a4:	7940      	ldrb	r0, [r0, #5]
100558a6:	2612      	movs	r6, #18
100558a8:	42a8      	cmp	r0, r5
100558aa:	d10a      	bne.n	100558c2 <L2C_build_command_reject_pdu+0x36>
100558ac:	9904      	ldr	r1, [sp, #16]
100558ae:	2902      	cmp	r1, #2
100558b0:	d807      	bhi.n	100558c2 <L2C_build_command_reject_pdu+0x36>
100558b2:	78a0      	ldrb	r0, [r4, #2]
100558b4:	0780      	lsls	r0, r0, #30
100558b6:	d407      	bmi.n	100558c8 <L2C_build_command_reject_pdu+0x3c>
100558b8:	2901      	cmp	r1, #1
100558ba:	d007      	beq.n	100558cc <L2C_build_command_reject_pdu+0x40>
100558bc:	2004      	movs	r0, #4
100558be:	e006      	b.n	100558ce <L2C_build_command_reject_pdu+0x42>
100558c0:	2602      	movs	r6, #2
100558c2:	4630      	mov	r0, r6
100558c4:	b005      	add	sp, #20
100558c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100558c8:	260c      	movs	r6, #12
100558ca:	e7fa      	b.n	100558c2 <L2C_build_command_reject_pdu+0x36>
100558cc:	2002      	movs	r0, #2
100558ce:	2900      	cmp	r1, #0
100558d0:	d100      	bne.n	100558d4 <L2C_build_command_reject_pdu+0x48>
100558d2:	4608      	mov	r0, r1
100558d4:	9002      	str	r0, [sp, #8]
100558d6:	1d82      	adds	r2, r0, #6
100558d8:	2600      	movs	r6, #0
100558da:	4630      	mov	r0, r6
100558dc:	4639      	mov	r1, r7
100558de:	9201      	str	r2, [sp, #4]
100558e0:	f7fa fb3a 	bl	1004ff58 <ACL_pkt_get>
100558e4:	2800      	cmp	r0, #0
100558e6:	d027      	beq.n	10055938 <L2C_build_command_reject_pdu+0xac>
100558e8:	4607      	mov	r7, r0
100558ea:	6840      	ldr	r0, [r0, #4]
100558ec:	2101      	movs	r1, #1
100558ee:	7201      	strb	r1, [r0, #8]
100558f0:	6878      	ldr	r0, [r7, #4]
100558f2:	7245      	strb	r5, [r0, #9]
100558f4:	9802      	ldr	r0, [sp, #8]
100558f6:	1c80      	adds	r0, r0, #2
100558f8:	b282      	uxth	r2, r0
100558fa:	2106      	movs	r1, #6
100558fc:	4638      	mov	r0, r7
100558fe:	f7fa fb82 	bl	10050006 <ACL_pkt_write_16b>
10055902:	2108      	movs	r1, #8
10055904:	4638      	mov	r0, r7
10055906:	9d04      	ldr	r5, [sp, #16]
10055908:	462a      	mov	r2, r5
1005590a:	f7fa fb7c 	bl	10050006 <ACL_pkt_write_16b>
1005590e:	2d00      	cmp	r5, #0
10055910:	d005      	beq.n	1005591e <L2C_build_command_reject_pdu+0x92>
10055912:	210a      	movs	r1, #10
10055914:	4638      	mov	r0, r7
10055916:	9a02      	ldr	r2, [sp, #8]
10055918:	9b03      	ldr	r3, [sp, #12]
1005591a:	f7fa fb7d 	bl	10050018 <ACL_pkt_write>
1005591e:	9801      	ldr	r0, [sp, #4]
10055920:	8078      	strh	r0, [r7, #2]
10055922:	2005      	movs	r0, #5
10055924:	4639      	mov	r1, r7
10055926:	f000 f8d7 	bl	10055ad8 <L2C_send_frame>
1005592a:	2800      	cmp	r0, #0
1005592c:	d006      	beq.n	1005593c <L2C_build_command_reject_pdu+0xb0>
1005592e:	4638      	mov	r0, r7
10055930:	f7fa fb34 	bl	1004ff9c <ACL_pkt_release>
10055934:	2681      	movs	r6, #129	@ 0x81
10055936:	e7c4      	b.n	100558c2 <L2C_build_command_reject_pdu+0x36>
10055938:	2688      	movs	r6, #136	@ 0x88
1005593a:	e7c2      	b.n	100558c2 <L2C_build_command_reject_pdu+0x36>
1005593c:	71a6      	strb	r6, [r4, #6]
1005593e:	78a0      	ldrb	r0, [r4, #2]
10055940:	21fb      	movs	r1, #251	@ 0xfb
10055942:	4001      	ands	r1, r0
10055944:	70a1      	strb	r1, [r4, #2]
10055946:	e7bc      	b.n	100558c2 <L2C_build_command_reject_pdu+0x36>

10055948 <l2c_cos_channel_descriptor_reset>:
10055948:	b570      	push	{r4, r5, r6, lr}
1005594a:	4604      	mov	r4, r0
1005594c:	2022      	movs	r0, #34	@ 0x22
1005594e:	4910      	ldr	r1, [pc, #64]	@ (10055990 <__arm_cp.4_0>)
10055950:	5c08      	ldrb	r0, [r1, r0]
10055952:	42a0      	cmp	r0, r4
10055954:	d91b      	bls.n	1005598e <l2c_cos_channel_descriptor_reset+0x46>
10055956:	4d0f      	ldr	r5, [pc, #60]	@ (10055994 <__arm_cp.4_1>)
10055958:	6829      	ldr	r1, [r5, #0]
1005595a:	2030      	movs	r0, #48	@ 0x30
1005595c:	5c0a      	ldrb	r2, [r1, r0]
1005595e:	1c52      	adds	r2, r2, #1
10055960:	540a      	strb	r2, [r1, r0]
10055962:	2234      	movs	r2, #52	@ 0x34
10055964:	4354      	muls	r4, r2
10055966:	3130      	adds	r1, #48	@ 0x30
10055968:	6848      	ldr	r0, [r1, #4]
1005596a:	1900      	adds	r0, r0, r4
1005596c:	7883      	ldrb	r3, [r0, #2]
1005596e:	071b      	lsls	r3, r3, #28
10055970:	d505      	bpl.n	1005597e <l2c_cos_channel_descriptor_reset+0x36>
10055972:	78c3      	ldrb	r3, [r0, #3]
10055974:	2b11      	cmp	r3, #17
10055976:	d302      	bcc.n	1005597e <l2c_cos_channel_descriptor_reset+0x36>
10055978:	784b      	ldrb	r3, [r1, #1]
1005597a:	1e5b      	subs	r3, r3, #1
1005597c:	704b      	strb	r3, [r1, #1]
1005597e:	8946      	ldrh	r6, [r0, #10]
10055980:	2100      	movs	r1, #0
10055982:	f7ef f81f 	bl	100449c4 <BLEPLAT_MemSet>
10055986:	6828      	ldr	r0, [r5, #0]
10055988:	6b40      	ldr	r0, [r0, #52]	@ 0x34
1005598a:	1900      	adds	r0, r0, r4
1005598c:	8146      	strh	r6, [r0, #10]
1005598e:	bd70      	pop	{r4, r5, r6, pc}

10055990 <__arm_cp.4_0>:
10055990:	200008a8 	.word	0x200008a8

10055994 <__arm_cp.4_1>:
10055994:	20000888 	.word	0x20000888

10055998 <L2C_cos_channel_descriptors_reset_pending>:
10055998:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005599a:	460c      	mov	r4, r1
1005599c:	4605      	mov	r5, r0
1005599e:	2022      	movs	r0, #34	@ 0x22
100559a0:	4912      	ldr	r1, [pc, #72]	@ (100559ec <__arm_cp.5_0>)
100559a2:	9002      	str	r0, [sp, #8]
100559a4:	5c08      	ldrb	r0, [r1, r0]
100559a6:	2700      	movs	r7, #0
100559a8:	2603      	movs	r6, #3
100559aa:	4b11      	ldr	r3, [pc, #68]	@ (100559f0 <__arm_cp.5_1>)
100559ac:	9501      	str	r5, [sp, #4]
100559ae:	b2c1      	uxtb	r1, r0
100559b0:	428f      	cmp	r7, r1
100559b2:	d219      	bcs.n	100559e8 <L2C_cos_channel_descriptors_reset_pending+0x50>
100559b4:	6819      	ldr	r1, [r3, #0]
100559b6:	6b49      	ldr	r1, [r1, #52]	@ 0x34
100559b8:	198a      	adds	r2, r1, r6
100559ba:	1ed2      	subs	r2, r2, #3
100559bc:	8812      	ldrh	r2, [r2, #0]
100559be:	42aa      	cmp	r2, r5
100559c0:	d10f      	bne.n	100559e2 <L2C_cos_channel_descriptors_reset_pending+0x4a>
100559c2:	2cff      	cmp	r4, #255	@ 0xff
100559c4:	d002      	beq.n	100559cc <L2C_cos_channel_descriptors_reset_pending+0x34>
100559c6:	5d89      	ldrb	r1, [r1, r6]
100559c8:	42a1      	cmp	r1, r4
100559ca:	d10a      	bne.n	100559e2 <L2C_cos_channel_descriptors_reset_pending+0x4a>
100559cc:	b2f8      	uxtb	r0, r7
100559ce:	4625      	mov	r5, r4
100559d0:	461c      	mov	r4, r3
100559d2:	f7ff ffb9 	bl	10055948 <l2c_cos_channel_descriptor_reset>
100559d6:	4623      	mov	r3, r4
100559d8:	462c      	mov	r4, r5
100559da:	9d01      	ldr	r5, [sp, #4]
100559dc:	9802      	ldr	r0, [sp, #8]
100559de:	4903      	ldr	r1, [pc, #12]	@ (100559ec <__arm_cp.5_0>)
100559e0:	5c08      	ldrb	r0, [r1, r0]
100559e2:	3634      	adds	r6, #52	@ 0x34
100559e4:	1c7f      	adds	r7, r7, #1
100559e6:	e7e2      	b.n	100559ae <L2C_cos_channel_descriptors_reset_pending+0x16>
100559e8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100559ea:	46c0      	nop			@ (mov r8, r8)

100559ec <__arm_cp.5_0>:
100559ec:	200008a8 	.word	0x200008a8

100559f0 <__arm_cp.5_1>:
100559f0:	20000888 	.word	0x20000888

100559f4 <l2c_cos_csr_ucfg_weak>:
100559f4:	2000      	movs	r0, #0
100559f6:	4770      	bx	lr

100559f8 <L2C_cos_cfc_init_ucfg_weak>:
100559f8:	2000      	movs	r0, #0
100559fa:	4770      	bx	lr

100559fc <l2c_cos_process_pending_actions_tsk_ucfg_weak>:
100559fc:	4770      	bx	lr

100559fe <L2C_cos_physical_link_disconnection_hndl_ucfg_weak>:
100559fe:	4770      	bx	lr

10055a00 <l2c_cos_sdu_enqueue_for_segmentation_ucfg_weak>:
10055a00:	2000      	movs	r0, #0
10055a02:	4770      	bx	lr

10055a04 <l2c_cos_sdu_segmentation_tsk_ucfg_weak>:
10055a04:	4770      	bx	lr

10055a06 <l2c_cos_transmit_pdu_packets_tsk_ucfg_weak>:
10055a06:	4770      	bx	lr

10055a08 <l2cap_timers_callback_wrapper>:
10055a08:	b580      	push	{r7, lr}
10055a0a:	6940      	ldr	r0, [r0, #20]
10055a0c:	4901      	ldr	r1, [pc, #4]	@ (10055a14 <__arm_cp.0_0>)
10055a0e:	f00f fd46 	bl	1006549e <cst_sharedCallback>
10055a12:	bd80      	pop	{r7, pc}

10055a14 <__arm_cp.0_0>:
10055a14:	10055a19 	.word	0x10055a19

10055a18 <l2cap_timers_callback>:
10055a18:	b580      	push	{r7, lr}
10055a1a:	4903      	ldr	r1, [pc, #12]	@ (10055a28 <__arm_cp.1_0>)
10055a1c:	7ac9      	ldrb	r1, [r1, #11]
10055a1e:	4281      	cmp	r1, r0
10055a20:	d301      	bcc.n	10055a26 <l2cap_timers_callback+0xe>
10055a22:	f000 fa77 	bl	10055f14 <L2C_timeout_handler_signalling>
10055a26:	bd80      	pop	{r7, pc}

10055a28 <__arm_cp.1_0>:
10055a28:	200008a8 	.word	0x200008a8

10055a2c <L2C_init>:
10055a2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10055a2e:	4605      	mov	r5, r0
10055a30:	2001      	movs	r0, #1
10055a32:	2168      	movs	r1, #104	@ 0x68
10055a34:	f00d f9fe 	bl	10062e34 <csmem_mem_0_assign>
10055a38:	4f23      	ldr	r7, [pc, #140]	@ (10055ac8 <__arm_cp.3_0>)
10055a3a:	6038      	str	r0, [r7, #0]
10055a3c:	4e23      	ldr	r6, [pc, #140]	@ (10055acc <__arm_cp.3_1>)
10055a3e:	7af0      	ldrb	r0, [r6, #11]
10055a40:	2414      	movs	r4, #20
10055a42:	4621      	mov	r1, r4
10055a44:	f00d f9f6 	bl	10062e34 <csmem_mem_0_assign>
10055a48:	4601      	mov	r1, r0
10055a4a:	6838      	ldr	r0, [r7, #0]
10055a4c:	62c1      	str	r1, [r0, #44]	@ 0x2c
10055a4e:	2d01      	cmp	r5, #1
10055a50:	d110      	bne.n	10055a74 <L2C_init+0x48>
10055a52:	305c      	adds	r0, #92	@ 0x5c
10055a54:	f00f fdde 	bl	10065614 <ACL_list_init>
10055a58:	2522      	movs	r5, #34	@ 0x22
10055a5a:	5d70      	ldrb	r0, [r6, r5]
10055a5c:	2134      	movs	r1, #52	@ 0x34
10055a5e:	f00d f9e9 	bl	10062e34 <csmem_mem_0_assign>
10055a62:	6839      	ldr	r1, [r7, #0]
10055a64:	6348      	str	r0, [r1, #52]	@ 0x34
10055a66:	5d70      	ldrb	r0, [r6, r5]
10055a68:	0040      	lsls	r0, r0, #1
10055a6a:	2110      	movs	r1, #16
10055a6c:	f00d f9e2 	bl	10062e34 <csmem_mem_0_assign>
10055a70:	6839      	ldr	r1, [r7, #0]
10055a72:	6488      	str	r0, [r1, #72]	@ 0x48
10055a74:	7af0      	ldrb	r0, [r6, #11]
10055a76:	1c41      	adds	r1, r0, #1
10055a78:	4d15      	ldr	r5, [pc, #84]	@ (10055ad0 <__arm_cp.3_2>)
10055a7a:	2201      	movs	r2, #1
10055a7c:	4628      	mov	r0, r5
10055a7e:	f00d f9c7 	bl	10062e10 <csmem_mem_assign>
10055a82:	6839      	ldr	r1, [r7, #0]
10055a84:	6208      	str	r0, [r1, #32]
10055a86:	7af1      	ldrb	r1, [r6, #11]
10055a88:	2202      	movs	r2, #2
10055a8a:	4628      	mov	r0, r5
10055a8c:	f00d f9c0 	bl	10062e10 <csmem_mem_assign>
10055a90:	683d      	ldr	r5, [r7, #0]
10055a92:	6268      	str	r0, [r5, #36]	@ 0x24
10055a94:	7af1      	ldrb	r1, [r6, #11]
10055a96:	4a0f      	ldr	r2, [pc, #60]	@ (10055ad4 <__arm_cp.3_3>)
10055a98:	2307      	movs	r3, #7
10055a9a:	4628      	mov	r0, r5
10055a9c:	f00f fc26 	bl	100652ec <CST_init>
10055aa0:	6838      	ldr	r0, [r7, #0]
10055aa2:	2117      	movs	r1, #23
10055aa4:	8501      	strh	r1, [r0, #40]	@ 0x28
10055aa6:	8c31      	ldrh	r1, [r6, #32]
10055aa8:	2917      	cmp	r1, #23
10055aaa:	d201      	bcs.n	10055ab0 <L2C_init+0x84>
10055aac:	2086      	movs	r0, #134	@ 0x86
10055aae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10055ab0:	8541      	strh	r1, [r0, #42]	@ 0x2a
10055ab2:	7af1      	ldrb	r1, [r6, #11]
10055ab4:	434c      	muls	r4, r1
10055ab6:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
10055ab8:	2100      	movs	r1, #0
10055aba:	4622      	mov	r2, r4
10055abc:	f7ee ff82 	bl	100449c4 <BLEPLAT_MemSet>
10055ac0:	f7ff ff9a 	bl	100559f8 <L2C_cos_cfc_init_ucfg_weak>
10055ac4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10055ac6:	46c0      	nop			@ (mov r8, r8)

10055ac8 <__arm_cp.3_0>:
10055ac8:	20000888 	.word	0x20000888

10055acc <__arm_cp.3_1>:
10055acc:	200008a8 	.word	0x200008a8

10055ad0 <__arm_cp.3_2>:
10055ad0:	200008a4 	.word	0x200008a4

10055ad4 <__arm_cp.3_3>:
10055ad4:	10055a09 	.word	0x10055a09

10055ad8 <L2C_send_frame>:
10055ad8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10055ada:	460c      	mov	r4, r1
10055adc:	1f01      	subs	r1, r0, #4
10055ade:	4606      	mov	r6, r0
10055ae0:	2902      	cmp	r1, #2
10055ae2:	d821      	bhi.n	10055b28 <L2C_send_frame+0x50>
10055ae4:	8862      	ldrh	r2, [r4, #2]
10055ae6:	2500      	movs	r5, #0
10055ae8:	4620      	mov	r0, r4
10055aea:	4629      	mov	r1, r5
10055aec:	f7fa fa8b 	bl	10050006 <ACL_pkt_write_16b>
10055af0:	2702      	movs	r7, #2
10055af2:	4620      	mov	r0, r4
10055af4:	4639      	mov	r1, r7
10055af6:	4632      	mov	r2, r6
10055af8:	f7fa fa85 	bl	10050006 <ACL_pkt_write_16b>
10055afc:	8225      	strh	r5, [r4, #16]
10055afe:	81e5      	strh	r5, [r4, #14]
10055b00:	7325      	strb	r5, [r4, #12]
10055b02:	6860      	ldr	r0, [r4, #4]
10055b04:	6160      	str	r0, [r4, #20]
10055b06:	61a0      	str	r0, [r4, #24]
10055b08:	8860      	ldrh	r0, [r4, #2]
10055b0a:	1d00      	adds	r0, r0, #4
10055b0c:	8060      	strh	r0, [r4, #2]
10055b0e:	7a20      	ldrb	r0, [r4, #8]
10055b10:	4338      	orrs	r0, r7
10055b12:	7220      	strb	r0, [r4, #8]
10055b14:	4620      	mov	r0, r4
10055b16:	f7fa f9ad 	bl	1004fe74 <Acl_Transmit_Data>
10055b1a:	2800      	cmp	r0, #0
10055b1c:	d014      	beq.n	10055b48 <L2C_send_frame+0x70>
10055b1e:	8860      	ldrh	r0, [r4, #2]
10055b20:	1f00      	subs	r0, r0, #4
10055b22:	8060      	strh	r0, [r4, #2]
10055b24:	2581      	movs	r5, #129	@ 0x81
10055b26:	e00f      	b.n	10055b48 <L2C_send_frame+0x70>
10055b28:	25a0      	movs	r5, #160	@ 0xa0
10055b2a:	283f      	cmp	r0, #63	@ 0x3f
10055b2c:	d00c      	beq.n	10055b48 <L2C_send_frame+0x70>
10055b2e:	3820      	subs	r0, #32
10055b30:	285f      	cmp	r0, #95	@ 0x5f
10055b32:	d809      	bhi.n	10055b48 <L2C_send_frame+0x70>
10055b34:	a801      	add	r0, sp, #4
10055b36:	8086      	strh	r6, [r0, #4]
10055b38:	2122      	movs	r1, #34	@ 0x22
10055b3a:	4a04      	ldr	r2, [pc, #16]	@ (10055b4c <__arm_cp.4_0>)
10055b3c:	5c51      	ldrb	r1, [r2, r1]
10055b3e:	7181      	strb	r1, [r0, #6]
10055b40:	9401      	str	r4, [sp, #4]
10055b42:	f7ff ff5d 	bl	10055a00 <l2c_cos_sdu_enqueue_for_segmentation_ucfg_weak>
10055b46:	4605      	mov	r5, r0
10055b48:	4628      	mov	r0, r5
10055b4a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10055b4c <__arm_cp.4_0>:
10055b4c:	200008a8 	.word	0x200008a8

10055b50 <L2C_receive_data>:
10055b50:	b5f0      	push	{r4, r5, r6, r7, lr}
10055b52:	b0c3      	sub	sp, #268	@ 0x10c
10055b54:	4604      	mov	r4, r0
10055b56:	8800      	ldrh	r0, [r0, #0]
10055b58:	f7ff fdfe 	bl	10055758 <l2c_get_link_control_block_ref>
10055b5c:	2800      	cmp	r0, #0
10055b5e:	d07c      	beq.n	10055c5a <L2C_receive_data+0x10a>
10055b60:	4605      	mov	r5, r0
10055b62:	7a20      	ldrb	r0, [r4, #8]
10055b64:	2703      	movs	r7, #3
10055b66:	4007      	ands	r7, r0
10055b68:	6928      	ldr	r0, [r5, #16]
10055b6a:	462a      	mov	r2, r5
10055b6c:	320c      	adds	r2, #12
10055b6e:	2f02      	cmp	r7, #2
10055b70:	9203      	str	r2, [sp, #12]
10055b72:	d108      	bne.n	10055b86 <L2C_receive_data+0x36>
10055b74:	2800      	cmp	r0, #0
10055b76:	d02f      	beq.n	10055bd8 <L2C_receive_data+0x88>
10055b78:	8811      	ldrh	r1, [r2, #0]
10055b7a:	2684      	movs	r6, #132	@ 0x84
10055b7c:	2904      	cmp	r1, #4
10055b7e:	d354      	bcc.n	10055c2a <L2C_receive_data+0xda>
10055b80:	2101      	movs	r1, #1
10055b82:	9102      	str	r1, [sp, #8]
10055b84:	e031      	b.n	10055bea <L2C_receive_data+0x9a>
10055b86:	2800      	cmp	r0, #0
10055b88:	d04a      	beq.n	10055c20 <L2C_receive_data+0xd0>
10055b8a:	8866      	ldrh	r6, [r4, #2]
10055b8c:	2e00      	cmp	r6, #0
10055b8e:	d026      	beq.n	10055bde <L2C_receive_data+0x8e>
10055b90:	2100      	movs	r1, #0
10055b92:	9101      	str	r1, [sp, #4]
10055b94:	a804      	add	r0, sp, #16
10055b96:	9002      	str	r0, [sp, #8]
10055b98:	4620      	mov	r0, r4
10055b9a:	4632      	mov	r2, r6
10055b9c:	9b02      	ldr	r3, [sp, #8]
10055b9e:	f7fa fa19 	bl	1004ffd4 <ACL_pkt_read>
10055ba2:	6928      	ldr	r0, [r5, #16]
10055ba4:	6840      	ldr	r0, [r0, #4]
10055ba6:	9000      	str	r0, [sp, #0]
10055ba8:	4620      	mov	r0, r4
10055baa:	f7fa fa3e 	bl	1005002a <ACL_pkt_extract_pdu>
10055bae:	4601      	mov	r1, r0
10055bb0:	9800      	ldr	r0, [sp, #0]
10055bb2:	f00d fad2 	bl	1006315a <Mem_Buff_append>
10055bb6:	89a9      	ldrh	r1, [r5, #12]
10055bb8:	6928      	ldr	r0, [r5, #16]
10055bba:	4632      	mov	r2, r6
10055bbc:	9b02      	ldr	r3, [sp, #8]
10055bbe:	f7fa fa2b 	bl	10050018 <ACL_pkt_write>
10055bc2:	89a8      	ldrh	r0, [r5, #12]
10055bc4:	1980      	adds	r0, r0, r6
10055bc6:	81a8      	strh	r0, [r5, #12]
10055bc8:	b281      	uxth	r1, r0
10055bca:	6928      	ldr	r0, [r5, #16]
10055bcc:	f7fa f9ef 	bl	1004ffae <ACL_pkt_resize>
10055bd0:	9a03      	ldr	r2, [sp, #12]
10055bd2:	9801      	ldr	r0, [sp, #4]
10055bd4:	8060      	strh	r0, [r4, #2]
10055bd6:	e002      	b.n	10055bde <L2C_receive_data+0x8e>
10055bd8:	612c      	str	r4, [r5, #16]
10055bda:	8860      	ldrh	r0, [r4, #2]
10055bdc:	81a8      	strh	r0, [r5, #12]
10055bde:	8810      	ldrh	r0, [r2, #0]
10055be0:	2804      	cmp	r0, #4
10055be2:	d31b      	bcc.n	10055c1c <L2C_receive_data+0xcc>
10055be4:	6928      	ldr	r0, [r5, #16]
10055be6:	2600      	movs	r6, #0
10055be8:	9602      	str	r6, [sp, #8]
10055bea:	2100      	movs	r1, #0
10055bec:	9101      	str	r1, [sp, #4]
10055bee:	f7fa f9fa 	bl	1004ffe6 <ACL_pkt_read_16b>
10055bf2:	1d00      	adds	r0, r0, #4
10055bf4:	b281      	uxth	r1, r0
10055bf6:	89aa      	ldrh	r2, [r5, #12]
10055bf8:	428a      	cmp	r2, r1
10055bfa:	d816      	bhi.n	10055c2a <L2C_receive_data+0xda>
10055bfc:	d112      	bne.n	10055c24 <L2C_receive_data+0xd4>
10055bfe:	6929      	ldr	r1, [r5, #16]
10055c00:	8048      	strh	r0, [r1, #2]
10055c02:	2001      	movs	r0, #1
10055c04:	f000 f832 	bl	10055c6c <L2C_mux_acl_packet>
10055c08:	2800      	cmp	r0, #0
10055c0a:	d02d      	beq.n	10055c68 <L2C_receive_data+0x118>
10055c0c:	6928      	ldr	r0, [r5, #16]
10055c0e:	2684      	movs	r6, #132	@ 0x84
10055c10:	42a0      	cmp	r0, r4
10055c12:	d126      	bne.n	10055c62 <L2C_receive_data+0x112>
10055c14:	9801      	ldr	r0, [sp, #4]
10055c16:	81a8      	strh	r0, [r5, #12]
10055c18:	6128      	str	r0, [r5, #16]
10055c1a:	e022      	b.n	10055c62 <L2C_receive_data+0x112>
10055c1c:	2600      	movs	r6, #0
10055c1e:	e018      	b.n	10055c52 <L2C_receive_data+0x102>
10055c20:	2600      	movs	r6, #0
10055c22:	e002      	b.n	10055c2a <L2C_receive_data+0xda>
10055c24:	9802      	ldr	r0, [sp, #8]
10055c26:	2800      	cmp	r0, #0
10055c28:	d013      	beq.n	10055c52 <L2C_receive_data+0x102>
10055c2a:	78a8      	ldrb	r0, [r5, #2]
10055c2c:	2110      	movs	r1, #16
10055c2e:	4301      	orrs	r1, r0
10055c30:	70a9      	strb	r1, [r5, #2]
10055c32:	2042      	movs	r0, #66	@ 0x42
10055c34:	2101      	movs	r1, #1
10055c36:	2202      	movs	r2, #2
10055c38:	462b      	mov	r3, r5
10055c3a:	f010 ffed 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
10055c3e:	6928      	ldr	r0, [r5, #16]
10055c40:	2800      	cmp	r0, #0
10055c42:	d006      	beq.n	10055c52 <L2C_receive_data+0x102>
10055c44:	f7fa f9aa 	bl	1004ff9c <ACL_pkt_release>
10055c48:	2000      	movs	r0, #0
10055c4a:	6128      	str	r0, [r5, #16]
10055c4c:	9903      	ldr	r1, [sp, #12]
10055c4e:	2000      	movs	r0, #0
10055c50:	8008      	strh	r0, [r1, #0]
10055c52:	2e00      	cmp	r6, #0
10055c54:	d105      	bne.n	10055c62 <L2C_receive_data+0x112>
10055c56:	2f01      	cmp	r7, #1
10055c58:	d103      	bne.n	10055c62 <L2C_receive_data+0x112>
10055c5a:	4620      	mov	r0, r4
10055c5c:	f7fa f99e 	bl	1004ff9c <ACL_pkt_release>
10055c60:	2600      	movs	r6, #0
10055c62:	4630      	mov	r0, r6
10055c64:	b043      	add	sp, #268	@ 0x10c
10055c66:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055c68:	9801      	ldr	r0, [sp, #4]
10055c6a:	e7ee      	b.n	10055c4a <L2C_receive_data+0xfa>

10055c6c <L2C_mux_acl_packet>:
10055c6c:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10055c6e:	460c      	mov	r4, r1
10055c70:	4605      	mov	r5, r0
10055c72:	8848      	ldrh	r0, [r1, #2]
10055c74:	1f00      	subs	r0, r0, #4
10055c76:	8048      	strh	r0, [r1, #2]
10055c78:	4608      	mov	r0, r1
10055c7a:	f7ff fe02 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10055c7e:	1f01      	subs	r1, r0, #4
10055c80:	2902      	cmp	r1, #2
10055c82:	d80c      	bhi.n	10055c9e <L2C_mux_acl_packet+0x32>
10055c84:	2806      	cmp	r0, #6
10055c86:	d01a      	beq.n	10055cbe <L2C_mux_acl_packet+0x52>
10055c88:	2805      	cmp	r0, #5
10055c8a:	d01d      	beq.n	10055cc8 <L2C_mux_acl_packet+0x5c>
10055c8c:	2804      	cmp	r0, #4
10055c8e:	d111      	bne.n	10055cb4 <L2C_mux_acl_packet+0x48>
10055c90:	2004      	movs	r0, #4
10055c92:	81a0      	strh	r0, [r4, #12]
10055c94:	4628      	mov	r0, r5
10055c96:	4621      	mov	r1, r4
10055c98:	f7fc fd12 	bl	100526c0 <GAT_att_cmn_rcv>
10055c9c:	e018      	b.n	10055cd0 <L2C_mux_acl_packet+0x64>
10055c9e:	283f      	cmp	r0, #63	@ 0x3f
10055ca0:	d008      	beq.n	10055cb4 <L2C_mux_acl_packet+0x48>
10055ca2:	3820      	subs	r0, #32
10055ca4:	285f      	cmp	r0, #95	@ 0x5f
10055ca6:	d805      	bhi.n	10055cb4 <L2C_mux_acl_packet+0x48>
10055ca8:	4668      	mov	r0, sp
10055caa:	7005      	strb	r5, [r0, #0]
10055cac:	9401      	str	r4, [sp, #4]
10055cae:	f012 fb33 	bl	10068318 <l2c_cos_hndl_incoming_le_frame_ucfg_weak>
10055cb2:	e00d      	b.n	10055cd0 <L2C_mux_acl_packet+0x64>
10055cb4:	4628      	mov	r0, r5
10055cb6:	4621      	mov	r1, r4
10055cb8:	f7ff fdde 	bl	10055878 <l2c_release_unexpected_acl_packet>
10055cbc:	e00e      	b.n	10055cdc <L2C_mux_acl_packet+0x70>
10055cbe:	4628      	mov	r0, r5
10055cc0:	4621      	mov	r1, r4
10055cc2:	f00f f87d 	bl	10064dc0 <smp_sap_l2c_acl_data_hndl>
10055cc6:	e003      	b.n	10055cd0 <L2C_mux_acl_packet+0x64>
10055cc8:	4628      	mov	r0, r5
10055cca:	4621      	mov	r1, r4
10055ccc:	f000 f808 	bl	10055ce0 <L2C_acl_cframe_signaling_hndl>
10055cd0:	2800      	cmp	r0, #0
10055cd2:	d003      	beq.n	10055cdc <L2C_mux_acl_packet+0x70>
10055cd4:	8861      	ldrh	r1, [r4, #2]
10055cd6:	1d09      	adds	r1, r1, #4
10055cd8:	8061      	strh	r1, [r4, #2]
10055cda:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
10055cdc:	2000      	movs	r0, #0
10055cde:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10055ce0 <L2C_acl_cframe_signaling_hndl>:
10055ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
10055ce2:	b085      	sub	sp, #20
10055ce4:	460c      	mov	r4, r1
10055ce6:	4606      	mov	r6, r0
10055ce8:	880f      	ldrh	r7, [r1, #0]
10055cea:	4638      	mov	r0, r7
10055cec:	f7ff fd50 	bl	10055790 <l2c_get_link_control_block_index>
10055cf0:	4605      	mov	r5, r0
10055cf2:	4880      	ldr	r0, [pc, #512]	@ (10055ef4 <__arm_cp.7_0>)
10055cf4:	7ac1      	ldrb	r1, [r0, #11]
10055cf6:	428d      	cmp	r5, r1
10055cf8:	d206      	bcs.n	10055d08 <L2C_acl_cframe_signaling_hndl+0x28>
10055cfa:	2014      	movs	r0, #20
10055cfc:	4368      	muls	r0, r5
10055cfe:	4a7e      	ldr	r2, [pc, #504]	@ (10055ef8 <__arm_cp.7_1>)
10055d00:	6812      	ldr	r2, [r2, #0]
10055d02:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
10055d04:	1810      	adds	r0, r2, r0
10055d06:	9002      	str	r0, [sp, #8]
10055d08:	6862      	ldr	r2, [r4, #4]
10055d0a:	7a10      	ldrb	r0, [r2, #8]
10055d0c:	2300      	movs	r3, #0
10055d0e:	2e01      	cmp	r6, #1
10055d10:	d01c      	beq.n	10055d4c <L2C_acl_cframe_signaling_hndl+0x6c>
10055d12:	2e00      	cmp	r6, #0
10055d14:	d13c      	bne.n	10055d90 <L2C_acl_cframe_signaling_hndl+0xb0>
10055d16:	461e      	mov	r6, r3
10055d18:	428d      	cmp	r5, r1
10055d1a:	d212      	bcs.n	10055d42 <L2C_acl_cframe_signaling_hndl+0x62>
10055d1c:	2819      	cmp	r0, #25
10055d1e:	d80b      	bhi.n	10055d38 <L2C_acl_cframe_signaling_hndl+0x58>
10055d20:	2101      	movs	r1, #1
10055d22:	4081      	lsls	r1, r0
10055d24:	4879      	ldr	r0, [pc, #484]	@ (10055f0c <__arm_cp.7_6>)
10055d26:	4201      	tst	r1, r0
10055d28:	d006      	beq.n	10055d38 <L2C_acl_cframe_signaling_hndl+0x58>
10055d2a:	4873      	ldr	r0, [pc, #460]	@ (10055ef8 <__arm_cp.7_1>)
10055d2c:	6800      	ldr	r0, [r0, #0]
10055d2e:	2201      	movs	r2, #1
10055d30:	4b77      	ldr	r3, [pc, #476]	@ (10055f10 <__arm_cp.7_7>)
10055d32:	4629      	mov	r1, r5
10055d34:	f00f fb25 	bl	10065382 <CST_start>
10055d38:	9a02      	ldr	r2, [sp, #8]
10055d3a:	7890      	ldrb	r0, [r2, #2]
10055d3c:	21fd      	movs	r1, #253	@ 0xfd
10055d3e:	4001      	ands	r1, r0
10055d40:	7091      	strb	r1, [r2, #2]
10055d42:	4620      	mov	r0, r4
10055d44:	f7fa f92a 	bl	1004ff9c <ACL_pkt_release>
10055d48:	4630      	mov	r0, r6
10055d4a:	e0d0      	b.n	10055eee <L2C_acl_cframe_signaling_hndl+0x20e>
10055d4c:	428d      	cmp	r5, r1
10055d4e:	d300      	bcc.n	10055d52 <L2C_acl_cframe_signaling_hndl+0x72>
10055d50:	e0c8      	b.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055d52:	7a56      	ldrb	r6, [r2, #9]
10055d54:	2813      	cmp	r0, #19
10055d56:	d81d      	bhi.n	10055d94 <L2C_acl_cframe_signaling_hndl+0xb4>
10055d58:	2101      	movs	r1, #1
10055d5a:	9100      	str	r1, [sp, #0]
10055d5c:	4081      	lsls	r1, r0
10055d5e:	4a67      	ldr	r2, [pc, #412]	@ (10055efc <__arm_cp.7_2>)
10055d60:	4211      	tst	r1, r2
10055d62:	d017      	beq.n	10055d94 <L2C_acl_cframe_signaling_hndl+0xb4>
10055d64:	2801      	cmp	r0, #1
10055d66:	d021      	beq.n	10055dac <L2C_acl_cframe_signaling_hndl+0xcc>
10055d68:	2114      	movs	r1, #20
10055d6a:	4a63      	ldr	r2, [pc, #396]	@ (10055ef8 <__arm_cp.7_1>)
10055d6c:	6812      	ldr	r2, [r2, #0]
10055d6e:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
10055d70:	2813      	cmp	r0, #19
10055d72:	d03e      	beq.n	10055df2 <L2C_acl_cframe_signaling_hndl+0x112>
10055d74:	2812      	cmp	r0, #18
10055d76:	d000      	beq.n	10055d7a <L2C_acl_cframe_signaling_hndl+0x9a>
10055d78:	e0b4      	b.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055d7a:	9301      	str	r3, [sp, #4]
10055d7c:	4608      	mov	r0, r1
10055d7e:	4368      	muls	r0, r5
10055d80:	1810      	adds	r0, r2, r0
10055d82:	7883      	ldrb	r3, [r0, #2]
10055d84:	07df      	lsls	r7, r3, #31
10055d86:	d166      	bne.n	10055e56 <L2C_acl_cframe_signaling_hndl+0x176>
10055d88:	7146      	strb	r6, [r0, #5]
10055d8a:	8820      	ldrh	r0, [r4, #0]
10055d8c:	2200      	movs	r2, #0
10055d8e:	e09d      	b.n	10055ecc <L2C_acl_cframe_signaling_hndl+0x1ec>
10055d90:	4618      	mov	r0, r3
10055d92:	e0ac      	b.n	10055eee <L2C_acl_cframe_signaling_hndl+0x20e>
10055d94:	9301      	str	r3, [sp, #4]
10055d96:	f012 fabd 	bl	10068314 <L2C_cos_is_pdu_cframe_cfc_command_opcode_ucfg_weak>
10055d9a:	2800      	cmp	r0, #0
10055d9c:	d100      	bne.n	10055da0 <L2C_acl_cframe_signaling_hndl+0xc0>
10055d9e:	e091      	b.n	10055ec4 <L2C_acl_cframe_signaling_hndl+0x1e4>
10055da0:	a803      	add	r0, sp, #12
10055da2:	7105      	strb	r5, [r0, #4]
10055da4:	9403      	str	r4, [sp, #12]
10055da6:	f012 fab3 	bl	10068310 <L2C_cos_process_cfc_mode_command_ucfg_weak>
10055daa:	e093      	b.n	10055ed4 <L2C_acl_cframe_signaling_hndl+0x1f4>
10055dac:	2701      	movs	r7, #1
10055dae:	4628      	mov	r0, r5
10055db0:	4639      	mov	r1, r7
10055db2:	4632      	mov	r2, r6
10055db4:	9301      	str	r3, [sp, #4]
10055db6:	f7ff fd2f 	bl	10055818 <l2c_pre_process_incoming_response_packet>
10055dba:	9b01      	ldr	r3, [sp, #4]
10055dbc:	2800      	cmp	r0, #0
10055dbe:	d000      	beq.n	10055dc2 <L2C_acl_cframe_signaling_hndl+0xe2>
10055dc0:	e090      	b.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055dc2:	8826      	ldrh	r6, [r4, #0]
10055dc4:	484e      	ldr	r0, [pc, #312]	@ (10055f00 <__arm_cp.7_3>)
10055dc6:	6800      	ldr	r0, [r0, #0]
10055dc8:	6980      	ldr	r0, [r0, #24]
10055dca:	2142      	movs	r1, #66	@ 0x42
10055dcc:	2252      	movs	r2, #82	@ 0x52
10055dce:	2303      	movs	r3, #3
10055dd0:	f7fa fa96 	bl	10050300 <aci_event_fifo_push_header>
10055dd4:	9b01      	ldr	r3, [sp, #4]
10055dd6:	2800      	cmp	r0, #0
10055dd8:	d100      	bne.n	10055ddc <L2C_acl_cframe_signaling_hndl+0xfc>
10055dda:	e083      	b.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055ddc:	4605      	mov	r5, r0
10055dde:	4631      	mov	r1, r6
10055de0:	1d06      	adds	r6, r0, #4
10055de2:	4630      	mov	r0, r6
10055de4:	4622      	mov	r2, r4
10055de6:	f7fa fe81 	bl	10050aec <aci_l2cap_command_reject_event_copy>
10055dea:	02f8      	lsls	r0, r7, #11
10055dec:	300a      	adds	r0, #10
10055dee:	2108      	movs	r1, #8
10055df0:	e058      	b.n	10055ea4 <L2C_acl_cframe_signaling_hndl+0x1c4>
10055df2:	4369      	muls	r1, r5
10055df4:	1850      	adds	r0, r2, r1
10055df6:	7880      	ldrb	r0, [r0, #2]
10055df8:	07c0      	lsls	r0, r0, #31
10055dfa:	d173      	bne.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055dfc:	2113      	movs	r1, #19
10055dfe:	4628      	mov	r0, r5
10055e00:	4632      	mov	r2, r6
10055e02:	9301      	str	r3, [sp, #4]
10055e04:	f7ff fd08 	bl	10055818 <l2c_pre_process_incoming_response_packet>
10055e08:	9b01      	ldr	r3, [sp, #4]
10055e0a:	2800      	cmp	r0, #0
10055e0c:	d16a      	bne.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055e0e:	2108      	movs	r1, #8
10055e10:	4620      	mov	r0, r4
10055e12:	f7fa f8e8 	bl	1004ffe6 <ACL_pkt_read_16b>
10055e16:	9b01      	ldr	r3, [sp, #4]
10055e18:	4606      	mov	r6, r0
10055e1a:	483a      	ldr	r0, [pc, #232]	@ (10055f04 <__arm_cp.7_4>)
10055e1c:	6800      	ldr	r0, [r0, #0]
10055e1e:	214f      	movs	r1, #79	@ 0x4f
10055e20:	5c40      	ldrb	r0, [r0, r1]
10055e22:	0780      	lsls	r0, r0, #30
10055e24:	d55e      	bpl.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055e26:	8827      	ldrh	r7, [r4, #0]
10055e28:	4835      	ldr	r0, [pc, #212]	@ (10055f00 <__arm_cp.7_3>)
10055e2a:	6800      	ldr	r0, [r0, #0]
10055e2c:	6980      	ldr	r0, [r0, #24]
10055e2e:	2142      	movs	r1, #66	@ 0x42
10055e30:	224c      	movs	r2, #76	@ 0x4c
10055e32:	2303      	movs	r3, #3
10055e34:	f7fa fa64 	bl	10050300 <aci_event_fifo_push_header>
10055e38:	9b01      	ldr	r3, [sp, #4]
10055e3a:	2800      	cmp	r0, #0
10055e3c:	d052      	beq.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055e3e:	4605      	mov	r5, r0
10055e40:	7306      	strb	r6, [r0, #12]
10055e42:	7287      	strb	r7, [r0, #10]
10055e44:	0a30      	lsrs	r0, r6, #8
10055e46:	7368      	strb	r0, [r5, #13]
10055e48:	0a38      	lsrs	r0, r7, #8
10055e4a:	72e8      	strb	r0, [r5, #11]
10055e4c:	1d2e      	adds	r6, r5, #4
10055e4e:	9800      	ldr	r0, [sp, #0]
10055e50:	02c0      	lsls	r0, r0, #11
10055e52:	2106      	movs	r1, #6
10055e54:	e026      	b.n	10055ea4 <L2C_acl_cframe_signaling_hndl+0x1c4>
10055e56:	0758      	lsls	r0, r3, #29
10055e58:	9b01      	ldr	r3, [sp, #4]
10055e5a:	d443      	bmi.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055e5c:	4369      	muls	r1, r5
10055e5e:	1852      	adds	r2, r2, r1
10055e60:	2012      	movs	r0, #18
10055e62:	4631      	mov	r1, r6
10055e64:	f7ff fcac 	bl	100557c0 <l2c_post_process_incoming_request_packet>
10055e68:	9b01      	ldr	r3, [sp, #4]
10055e6a:	4826      	ldr	r0, [pc, #152]	@ (10055f04 <__arm_cp.7_4>)
10055e6c:	6800      	ldr	r0, [r0, #0]
10055e6e:	214f      	movs	r1, #79	@ 0x4f
10055e70:	5c40      	ldrb	r0, [r0, r1]
10055e72:	07c0      	lsls	r0, r0, #31
10055e74:	d036      	beq.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055e76:	8827      	ldrh	r7, [r4, #0]
10055e78:	4821      	ldr	r0, [pc, #132]	@ (10055f00 <__arm_cp.7_3>)
10055e7a:	6800      	ldr	r0, [r0, #0]
10055e7c:	6980      	ldr	r0, [r0, #24]
10055e7e:	2142      	movs	r1, #66	@ 0x42
10055e80:	224d      	movs	r2, #77	@ 0x4d
10055e82:	2305      	movs	r3, #5
10055e84:	f7fa fa3c 	bl	10050300 <aci_event_fifo_push_header>
10055e88:	9b01      	ldr	r3, [sp, #4]
10055e8a:	2800      	cmp	r0, #0
10055e8c:	d02a      	beq.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055e8e:	4605      	mov	r5, r0
10055e90:	1d06      	adds	r6, r0, #4
10055e92:	4630      	mov	r0, r6
10055e94:	4639      	mov	r1, r7
10055e96:	4622      	mov	r2, r4
10055e98:	f7fa fde0 	bl	10050a5c <aci_l2cap_connection_update_req_event_copy>
10055e9c:	9800      	ldr	r0, [sp, #0]
10055e9e:	02c0      	lsls	r0, r0, #11
10055ea0:	1c80      	adds	r0, r0, #2
10055ea2:	210f      	movs	r1, #15
10055ea4:	22ff      	movs	r2, #255	@ 0xff
10055ea6:	7072      	strb	r2, [r6, #1]
10055ea8:	2282      	movs	r2, #130	@ 0x82
10055eaa:	7032      	strb	r2, [r6, #0]
10055eac:	0a02      	lsrs	r2, r0, #8
10055eae:	726a      	strb	r2, [r5, #9]
10055eb0:	7228      	strb	r0, [r5, #8]
10055eb2:	2000      	movs	r0, #0
10055eb4:	71e8      	strb	r0, [r5, #7]
10055eb6:	71a9      	strb	r1, [r5, #6]
10055eb8:	2042      	movs	r0, #66	@ 0x42
10055eba:	4629      	mov	r1, r5
10055ebc:	f7fa fabd 	bl	1005043a <aci_event_fifo_push>
10055ec0:	9b01      	ldr	r3, [sp, #4]
10055ec2:	e00f      	b.n	10055ee4 <L2C_acl_cframe_signaling_hndl+0x204>
10055ec4:	9802      	ldr	r0, [sp, #8]
10055ec6:	7146      	strb	r6, [r0, #5]
10055ec8:	2200      	movs	r2, #0
10055eca:	4638      	mov	r0, r7
10055ecc:	4631      	mov	r1, r6
10055ece:	4613      	mov	r3, r2
10055ed0:	f7ff fcdc 	bl	1005588c <L2C_build_command_reject_pdu>
10055ed4:	9b01      	ldr	r3, [sp, #4]
10055ed6:	2812      	cmp	r0, #18
10055ed8:	d809      	bhi.n	10055eee <L2C_acl_cframe_signaling_hndl+0x20e>
10055eda:	2101      	movs	r1, #1
10055edc:	4081      	lsls	r1, r0
10055ede:	4a0a      	ldr	r2, [pc, #40]	@ (10055f08 <__arm_cp.7_5>)
10055ee0:	4211      	tst	r1, r2
10055ee2:	d004      	beq.n	10055eee <L2C_acl_cframe_signaling_hndl+0x20e>
10055ee4:	4620      	mov	r0, r4
10055ee6:	461c      	mov	r4, r3
10055ee8:	f7fa f858 	bl	1004ff9c <ACL_pkt_release>
10055eec:	4620      	mov	r0, r4
10055eee:	b005      	add	sp, #20
10055ef0:	bdf0      	pop	{r4, r5, r6, r7, pc}
10055ef2:	46c0      	nop			@ (mov r8, r8)

10055ef4 <__arm_cp.7_0>:
10055ef4:	200008a8 	.word	0x200008a8

10055ef8 <__arm_cp.7_1>:
10055ef8:	20000888 	.word	0x20000888

10055efc <__arm_cp.7_2>:
10055efc:	000c0002 	.word	0x000c0002

10055f00 <__arm_cp.7_3>:
10055f00:	20000840 	.word	0x20000840

10055f04 <__arm_cp.7_4>:
10055f04:	20000894 	.word	0x20000894

10055f08 <__arm_cp.7_5>:
10055f08:	00040005 	.word	0x00040005

10055f0c <__arm_cp.7_6>:
10055f0c:	02940040 	.word	0x02940040

10055f10 <__arm_cp.7_7>:
10055f10:	00007530 	.word	0x00007530

10055f14 <L2C_timeout_handler_signalling>:
10055f14:	b570      	push	{r4, r5, r6, lr}
10055f16:	2414      	movs	r4, #20
10055f18:	4344      	muls	r4, r0
10055f1a:	4d14      	ldr	r5, [pc, #80]	@ (10055f6c <__arm_cp.8_0>)
10055f1c:	4814      	ldr	r0, [pc, #80]	@ (10055f70 <__arm_cp.8_1>)
10055f1e:	6800      	ldr	r0, [r0, #0]
10055f20:	214f      	movs	r1, #79	@ 0x4f
10055f22:	5c40      	ldrb	r0, [r0, r1]
10055f24:	0700      	lsls	r0, r0, #28
10055f26:	d513      	bpl.n	10055f50 <L2C_timeout_handler_signalling+0x3c>
10055f28:	6828      	ldr	r0, [r5, #0]
10055f2a:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
10055f2c:	5b06      	ldrh	r6, [r0, r4]
10055f2e:	4811      	ldr	r0, [pc, #68]	@ (10055f74 <__arm_cp.8_2>)
10055f30:	6800      	ldr	r0, [r0, #0]
10055f32:	6980      	ldr	r0, [r0, #24]
10055f34:	2206      	movs	r2, #6
10055f36:	2102      	movs	r1, #2
10055f38:	460b      	mov	r3, r1
10055f3a:	f7fa f9e1 	bl	10050300 <aci_event_fifo_push_header>
10055f3e:	2800      	cmp	r0, #0
10055f40:	d006      	beq.n	10055f50 <L2C_timeout_handler_signalling+0x3c>
10055f42:	4601      	mov	r1, r0
10055f44:	480c      	ldr	r0, [pc, #48]	@ (10055f78 <__arm_cp.8_3>)
10055f46:	6048      	str	r0, [r1, #4]
10055f48:	810e      	strh	r6, [r1, #8]
10055f4a:	2002      	movs	r0, #2
10055f4c:	f7fa fa75 	bl	1005043a <aci_event_fifo_push>
10055f50:	6828      	ldr	r0, [r5, #0]
10055f52:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
10055f54:	1901      	adds	r1, r0, r4
10055f56:	2200      	movs	r2, #0
10055f58:	718a      	strb	r2, [r1, #6]
10055f5a:	788a      	ldrb	r2, [r1, #2]
10055f5c:	23f9      	movs	r3, #249	@ 0xf9
10055f5e:	4013      	ands	r3, r2
10055f60:	708b      	strb	r3, [r1, #2]
10055f62:	5b00      	ldrh	r0, [r0, r4]
10055f64:	21ff      	movs	r1, #255	@ 0xff
10055f66:	f7ff fd17 	bl	10055998 <L2C_cos_channel_descriptors_reset_pending>
10055f6a:	bd70      	pop	{r4, r5, r6, pc}

10055f6c <__arm_cp.8_0>:
10055f6c:	20000888 	.word	0x20000888

10055f70 <__arm_cp.8_1>:
10055f70:	20000894 	.word	0x20000894

10055f74 <__arm_cp.8_2>:
10055f74:	20000840 	.word	0x20000840

10055f78 <__arm_cp.8_3>:
10055f78:	10066be1 	.word	0x10066be1

10055f7c <l2c_sap_hci_le_connection_complete_evt_hndl>:
10055f7c:	b5b0      	push	{r4, r5, r7, lr}
10055f7e:	460c      	mov	r4, r1
10055f80:	4605      	mov	r5, r0
10055f82:	2000      	movs	r0, #0
10055f84:	f7ff fbe8 	bl	10055758 <l2c_get_link_control_block_ref>
10055f88:	2800      	cmp	r0, #0
10055f8a:	d005      	beq.n	10055f98 <l2c_sap_hci_le_connection_complete_evt_hndl+0x1c>
10055f8c:	2101      	movs	r1, #1
10055f8e:	8081      	strh	r1, [r0, #4]
10055f90:	8005      	strh	r5, [r0, #0]
10055f92:	4261      	negs	r1, r4
10055f94:	4161      	adcs	r1, r4
10055f96:	7081      	strb	r1, [r0, #2]
10055f98:	bdb0      	pop	{r4, r5, r7, pc}
	...

10055f9c <l2c_sap_hci_disconnection_complete_evt_hndl>:
10055f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10055f9e:	4604      	mov	r4, r0
10055fa0:	f7ff fbf6 	bl	10055790 <l2c_get_link_control_block_index>
10055fa4:	4605      	mov	r5, r0
10055fa6:	4810      	ldr	r0, [pc, #64]	@ (10055fe8 <__arm_cp.1_0>)
10055fa8:	7ac0      	ldrb	r0, [r0, #11]
10055faa:	4285      	cmp	r5, r0
10055fac:	d21b      	bcs.n	10055fe6 <l2c_sap_hci_disconnection_complete_evt_hndl+0x4a>
10055fae:	4e0f      	ldr	r6, [pc, #60]	@ (10055fec <__arm_cp.1_1>)
10055fb0:	6830      	ldr	r0, [r6, #0]
10055fb2:	4629      	mov	r1, r5
10055fb4:	f00f f9af 	bl	10065316 <CST_stop>
10055fb8:	2714      	movs	r7, #20
10055fba:	436f      	muls	r7, r5
10055fbc:	6830      	ldr	r0, [r6, #0]
10055fbe:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
10055fc0:	2500      	movs	r5, #0
10055fc2:	53c5      	strh	r5, [r0, r7]
10055fc4:	19c0      	adds	r0, r0, r7
10055fc6:	6900      	ldr	r0, [r0, #16]
10055fc8:	2800      	cmp	r0, #0
10055fca:	d009      	beq.n	10055fe0 <l2c_sap_hci_disconnection_complete_evt_hndl+0x44>
10055fcc:	f7f9 ffe6 	bl	1004ff9c <ACL_pkt_release>
10055fd0:	6830      	ldr	r0, [r6, #0]
10055fd2:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
10055fd4:	19c0      	adds	r0, r0, r7
10055fd6:	6105      	str	r5, [r0, #16]
10055fd8:	6830      	ldr	r0, [r6, #0]
10055fda:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
10055fdc:	19c0      	adds	r0, r0, r7
10055fde:	8185      	strh	r5, [r0, #12]
10055fe0:	4620      	mov	r0, r4
10055fe2:	f7ff fd0c 	bl	100559fe <L2C_cos_physical_link_disconnection_hndl_ucfg_weak>
10055fe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10055fe8 <__arm_cp.1_0>:
10055fe8:	200008a8 	.word	0x200008a8

10055fec <__arm_cp.1_1>:
10055fec:	20000888 	.word	0x20000888

10055ff0 <llc_cig_cmn_start_cis_ucfg_weak>:
10055ff0:	4770      	bx	lr

10055ff2 <llc_cig_cmn_is_active_cis_on_acl_ucfg_weak>:
10055ff2:	2000      	movs	r0, #0
10055ff4:	4770      	bx	lr

10055ff6 <llc_cig_cmn_terminate_cises_on_acl_ucfg_weak>:
10055ff6:	4770      	bx	lr

10055ff8 <llc_conn_get_cntxt_p>:
10055ff8:	4803      	ldr	r0, [pc, #12]	@ (10056008 <__arm_cp.0_0>)
10055ffa:	6800      	ldr	r0, [r0, #0]
10055ffc:	219c      	movs	r1, #156	@ 0x9c
10055ffe:	5840      	ldr	r0, [r0, r1]
10056000:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
10056002:	6800      	ldr	r0, [r0, #0]
10056004:	4770      	bx	lr
10056006:	46c0      	nop			@ (mov r8, r8)

10056008 <__arm_cp.0_0>:
10056008:	20000894 	.word	0x20000894

1005600c <llc_conn_get_cntxt_per_p>:
1005600c:	214d      	movs	r1, #77	@ 0x4d
1005600e:	0089      	lsls	r1, r1, #2
10056010:	4341      	muls	r1, r0
10056012:	4804      	ldr	r0, [pc, #16]	@ (10056024 <__arm_cp.1_0>)
10056014:	6800      	ldr	r0, [r0, #0]
10056016:	229c      	movs	r2, #156	@ 0x9c
10056018:	5880      	ldr	r0, [r0, r2]
1005601a:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
1005601c:	6840      	ldr	r0, [r0, #4]
1005601e:	1840      	adds	r0, r0, r1
10056020:	4770      	bx	lr
10056022:	46c0      	nop			@ (mov r8, r8)

10056024 <__arm_cp.1_0>:
10056024:	20000894 	.word	0x20000894

10056028 <llc_conn_get_cntxt_per_p_from_handle>:
10056028:	b510      	push	{r4, lr}
1005602a:	4601      	mov	r1, r0
1005602c:	2000      	movs	r0, #0
1005602e:	4a0d      	ldr	r2, [pc, #52]	@ (10056064 <__arm_cp.2_0>)
10056030:	4291      	cmp	r1, r2
10056032:	d015      	beq.n	10056060 <llc_conn_get_cntxt_per_p_from_handle+0x38>
10056034:	4a0c      	ldr	r2, [pc, #48]	@ (10056068 <__arm_cp.2_1>)
10056036:	6812      	ldr	r2, [r2, #0]
10056038:	2334      	movs	r3, #52	@ 0x34
1005603a:	5cd2      	ldrb	r2, [r2, r3]
1005603c:	1c52      	adds	r2, r2, #1
1005603e:	4b0b      	ldr	r3, [pc, #44]	@ (1005606c <__arm_cp.2_2>)
10056040:	681b      	ldr	r3, [r3, #0]
10056042:	249c      	movs	r4, #156	@ 0x9c
10056044:	591b      	ldr	r3, [r3, r4]
10056046:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
10056048:	685b      	ldr	r3, [r3, #4]
1005604a:	1e52      	subs	r2, r2, #1
1005604c:	d008      	beq.n	10056060 <llc_conn_get_cntxt_per_p_from_handle+0x38>
1005604e:	244d      	movs	r4, #77	@ 0x4d
10056050:	00a4      	lsls	r4, r4, #2
10056052:	191c      	adds	r4, r3, r4
10056054:	8f5b      	ldrh	r3, [r3, #58]	@ 0x3a
10056056:	428b      	cmp	r3, r1
10056058:	4623      	mov	r3, r4
1005605a:	d1f6      	bne.n	1005604a <llc_conn_get_cntxt_per_p_from_handle+0x22>
1005605c:	4804      	ldr	r0, [pc, #16]	@ (10056070 <__arm_cp.2_3>)
1005605e:	1820      	adds	r0, r4, r0
10056060:	bd10      	pop	{r4, pc}
10056062:	46c0      	nop			@ (mov r8, r8)

10056064 <__arm_cp.2_0>:
10056064:	0000ffff 	.word	0x0000ffff

10056068 <__arm_cp.2_1>:
10056068:	2000083c 	.word	0x2000083c

1005606c <__arm_cp.2_2>:
1005606c:	20000894 	.word	0x20000894

10056070 <__arm_cp.2_3>:
10056070:	fffffecc 	.word	0xfffffecc

10056074 <llc_conn_init>:
10056074:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10056076:	4c3e      	ldr	r4, [pc, #248]	@ (10056170 <__arm_cp.8_0>)
10056078:	6820      	ldr	r0, [r4, #0]
1005607a:	259c      	movs	r5, #156	@ 0x9c
1005607c:	5940      	ldr	r0, [r0, r5]
1005607e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
10056080:	6803      	ldr	r3, [r0, #0]
10056082:	2136      	movs	r1, #54	@ 0x36
10056084:	2600      	movs	r6, #0
10056086:	545e      	strb	r6, [r3, r1]
10056088:	493a      	ldr	r1, [pc, #232]	@ (10056174 <__arm_cp.8_1>)
1005608a:	6949      	ldr	r1, [r1, #20]
1005608c:	0c0a      	lsrs	r2, r1, #16
1005608e:	2a19      	cmp	r2, #25
10056090:	d301      	bcc.n	10056096 <llc_conn_init+0x22>
10056092:	2119      	movs	r1, #25
10056094:	0409      	lsls	r1, r1, #16
10056096:	6059      	str	r1, [r3, #4]
10056098:	6019      	str	r1, [r3, #0]
1005609a:	6900      	ldr	r0, [r0, #16]
1005609c:	9302      	str	r3, [sp, #8]
1005609e:	6098      	str	r0, [r3, #8]
100560a0:	f000 fafa 	bl	10056698 <llc_conn_list_reset>
100560a4:	6820      	ldr	r0, [r4, #0]
100560a6:	5940      	ldr	r0, [r0, r5]
100560a8:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
100560aa:	6807      	ldr	r7, [r0, #0]
100560ac:	f7ff f9ec 	bl	10055488 <data_length_extension_csr_ucfg_weak>
100560b0:	2801      	cmp	r0, #1
100560b2:	d001      	beq.n	100560b8 <llc_conn_init+0x44>
100560b4:	201b      	movs	r0, #27
100560b6:	e000      	b.n	100560ba <llc_conn_init+0x46>
100560b8:	20fb      	movs	r0, #251	@ 0xfb
100560ba:	82b8      	strh	r0, [r7, #20]
100560bc:	f7ff f9e4 	bl	10055488 <data_length_extension_csr_ucfg_weak>
100560c0:	4604      	mov	r4, r0
100560c2:	2029      	movs	r0, #41	@ 0x29
100560c4:	00c0      	lsls	r0, r0, #3
100560c6:	9000      	str	r0, [sp, #0]
100560c8:	20a9      	movs	r0, #169	@ 0xa9
100560ca:	0105      	lsls	r5, r0, #4
100560cc:	f7ff faaa 	bl	10055624 <phy_upd_csr_ucfg_weak>
100560d0:	2c01      	cmp	r4, #1
100560d2:	9501      	str	r5, [sp, #4]
100560d4:	d107      	bne.n	100560e6 <llc_conn_init+0x72>
100560d6:	2801      	cmp	r0, #1
100560d8:	4d27      	ldr	r5, [pc, #156]	@ (10056178 <__arm_cp.8_2>)
100560da:	9c00      	ldr	r4, [sp, #0]
100560dc:	d00c      	beq.n	100560f8 <llc_conn_init+0x84>
100560de:	4d27      	ldr	r5, [pc, #156]	@ (1005617c <__arm_cp.8_3>)
100560e0:	f7ff f820 	bl	10055124 <cte_csr_ucfg_weak>
100560e4:	e005      	b.n	100560f2 <llc_conn_init+0x7e>
100560e6:	2801      	cmp	r0, #1
100560e8:	9c00      	ldr	r4, [sp, #0]
100560ea:	d005      	beq.n	100560f8 <llc_conn_init+0x84>
100560ec:	f7ff f81a 	bl	10055124 <cte_csr_ucfg_weak>
100560f0:	4625      	mov	r5, r4
100560f2:	2801      	cmp	r0, #1
100560f4:	d100      	bne.n	100560f8 <llc_conn_init+0x84>
100560f6:	3508      	adds	r5, #8
100560f8:	82fd      	strh	r5, [r7, #22]
100560fa:	f7ff f9c5 	bl	10055488 <data_length_extension_csr_ucfg_weak>
100560fe:	2801      	cmp	r0, #1
10056100:	d001      	beq.n	10056106 <llc_conn_init+0x92>
10056102:	201b      	movs	r0, #27
10056104:	e000      	b.n	10056108 <llc_conn_init+0x94>
10056106:	20fb      	movs	r0, #251	@ 0xfb
10056108:	8338      	strh	r0, [r7, #24]
1005610a:	f7ff f9bd 	bl	10055488 <data_length_extension_csr_ucfg_weak>
1005610e:	4605      	mov	r5, r0
10056110:	f7ff fa88 	bl	10055624 <phy_upd_csr_ucfg_weak>
10056114:	2d01      	cmp	r5, #1
10056116:	d107      	bne.n	10056128 <llc_conn_init+0xb4>
10056118:	2801      	cmp	r0, #1
1005611a:	9d01      	ldr	r5, [sp, #4]
1005611c:	4916      	ldr	r1, [pc, #88]	@ (10056178 <__arm_cp.8_2>)
1005611e:	d00d      	beq.n	1005613c <llc_conn_init+0xc8>
10056120:	f7ff f800 	bl	10055124 <cte_csr_ucfg_weak>
10056124:	4915      	ldr	r1, [pc, #84]	@ (1005617c <__arm_cp.8_3>)
10056126:	e006      	b.n	10056136 <llc_conn_init+0xc2>
10056128:	2801      	cmp	r0, #1
1005612a:	9d01      	ldr	r5, [sp, #4]
1005612c:	4629      	mov	r1, r5
1005612e:	d005      	beq.n	1005613c <llc_conn_init+0xc8>
10056130:	f7fe fff8 	bl	10055124 <cte_csr_ucfg_weak>
10056134:	4621      	mov	r1, r4
10056136:	2801      	cmp	r0, #1
10056138:	d100      	bne.n	1005613c <llc_conn_init+0xc8>
1005613a:	3108      	adds	r1, #8
1005613c:	83fc      	strh	r4, [r7, #30]
1005613e:	201b      	movs	r0, #27
10056140:	83b8      	strh	r0, [r7, #28]
10056142:	827d      	strh	r5, [r7, #18]
10056144:	823c      	strh	r4, [r7, #16]
10056146:	81fc      	strh	r4, [r7, #14]
10056148:	81b8      	strh	r0, [r7, #12]
1005614a:	8379      	strh	r1, [r7, #26]
1005614c:	f009 fba1 	bl	1005f892 <LL_phy_update_init_ucfg_weak>
10056150:	9802      	ldr	r0, [sp, #8]
10056152:	f006 fbfb 	bl	1005c94c <llc_subrate_init_acceptable>
10056156:	4c0a      	ldr	r4, [pc, #40]	@ (10056180 <__arm_cp.8_4>)
10056158:	6820      	ldr	r0, [r4, #0]
1005615a:	2134      	movs	r1, #52	@ 0x34
1005615c:	5c41      	ldrb	r1, [r0, r1]
1005615e:	b2f0      	uxtb	r0, r6
10056160:	4288      	cmp	r0, r1
10056162:	d203      	bcs.n	1005616c <llc_conn_init+0xf8>
10056164:	f000 f80e 	bl	10056184 <llc_conn_per_init>
10056168:	1c76      	adds	r6, r6, #1
1005616a:	e7f5      	b.n	10056158 <llc_conn_init+0xe4>
1005616c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005616e:	46c0      	nop			@ (mov r8, r8)

10056170 <__arm_cp.8_0>:
10056170:	20000894 	.word	0x20000894

10056174 <__arm_cp.8_1>:
10056174:	200008a8 	.word	0x200008a8

10056178 <__arm_cp.8_2>:
10056178:	00004290 	.word	0x00004290

1005617c <__arm_cp.8_3>:
1005617c:	00000848 	.word	0x00000848

10056180 <__arm_cp.8_4>:
10056180:	2000083c 	.word	0x2000083c

10056184 <llc_conn_per_init>:
10056184:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056186:	4605      	mov	r5, r0
10056188:	204d      	movs	r0, #77	@ 0x4d
1005618a:	0080      	lsls	r0, r0, #2
1005618c:	4368      	muls	r0, r5
1005618e:	492d      	ldr	r1, [pc, #180]	@ (10056244 <__arm_cp.9_0>)
10056190:	6809      	ldr	r1, [r1, #0]
10056192:	279c      	movs	r7, #156	@ 0x9c
10056194:	59c9      	ldr	r1, [r1, r7]
10056196:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
10056198:	6849      	ldr	r1, [r1, #4]
1005619a:	180c      	adds	r4, r1, r0
1005619c:	f7f8 fad4 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
100561a0:	4606      	mov	r6, r0
100561a2:	f001 fde9 	bl	10057d78 <cis_csr_ucfg_weak>
100561a6:	4330      	orrs	r0, r6
100561a8:	b2c0      	uxtb	r0, r0
100561aa:	f00c f87d 	bl	100622a8 <LL_get_control_pdu_size>
100561ae:	2200      	movs	r2, #0
100561b0:	51e2      	str	r2, [r4, r7]
100561b2:	212e      	movs	r1, #46	@ 0x2e
100561b4:	231f      	movs	r3, #31
100561b6:	5463      	strb	r3, [r4, r1]
100561b8:	85a2      	strh	r2, [r4, #44]	@ 0x2c
100561ba:	0880      	lsrs	r0, r0, #2
100561bc:	4368      	muls	r0, r5
100561be:	0080      	lsls	r0, r0, #2
100561c0:	4920      	ldr	r1, [pc, #128]	@ (10056244 <__arm_cp.9_0>)
100561c2:	6809      	ldr	r1, [r1, #0]
100561c4:	460b      	mov	r3, r1
100561c6:	3394      	adds	r3, #148	@ 0x94
100561c8:	685b      	ldr	r3, [r3, #4]
100561ca:	181b      	adds	r3, r3, r0
100561cc:	2690      	movs	r6, #144	@ 0x90
100561ce:	51a3      	str	r3, [r4, r6]
100561d0:	238c      	movs	r3, #140	@ 0x8c
100561d2:	50e2      	str	r2, [r4, r3]
100561d4:	2388      	movs	r3, #136	@ 0x88
100561d6:	50e2      	str	r2, [r4, r3]
100561d8:	2330      	movs	r3, #48	@ 0x30
100561da:	54e5      	strb	r5, [r4, r3]
100561dc:	239a      	movs	r3, #154	@ 0x9a
100561de:	52e2      	strh	r2, [r4, r3]
100561e0:	23ff      	movs	r3, #255	@ 0xff
100561e2:	461d      	mov	r5, r3
100561e4:	3508      	adds	r5, #8
100561e6:	5562      	strb	r2, [r4, r5]
100561e8:	2241      	movs	r2, #65	@ 0x41
100561ea:	54a3      	strb	r3, [r4, r2]
100561ec:	222f      	movs	r2, #47	@ 0x2f
100561ee:	2307      	movs	r3, #7
100561f0:	54a3      	strb	r3, [r4, r2]
100561f2:	227d      	movs	r2, #125	@ 0x7d
100561f4:	0452      	lsls	r2, r2, #17
100561f6:	66e2      	str	r2, [r4, #108]	@ 0x6c
100561f8:	6722      	str	r2, [r4, #112]	@ 0x70
100561fa:	2201      	movs	r2, #1
100561fc:	8522      	strh	r2, [r4, #40]	@ 0x28
100561fe:	4a12      	ldr	r2, [pc, #72]	@ (10056248 <__arm_cp.9_1>)
10056200:	8762      	strh	r2, [r4, #58]	@ 0x3a
10056202:	2219      	movs	r2, #25
10056204:	0412      	lsls	r2, r2, #16
10056206:	65a2      	str	r2, [r4, #88]	@ 0x58
10056208:	65e2      	str	r2, [r4, #92]	@ 0x5c
1005620a:	6622      	str	r2, [r4, #96]	@ 0x60
1005620c:	4622      	mov	r2, r4
1005620e:	32b4      	adds	r2, #180	@ 0xb4
10056210:	2394      	movs	r3, #148	@ 0x94
10056212:	58c9      	ldr	r1, [r1, r3]
10056214:	231b      	movs	r3, #27
10056216:	8053      	strh	r3, [r2, #2]
10056218:	1808      	adds	r0, r1, r0
1005621a:	4621      	mov	r1, r4
1005621c:	3190      	adds	r1, #144	@ 0x90
1005621e:	6048      	str	r0, [r1, #4]
10056220:	20b4      	movs	r0, #180	@ 0xb4
10056222:	5223      	strh	r3, [r4, r0]
10056224:	4809      	ldr	r0, [pc, #36]	@ (1005624c <__arm_cp.9_2>)
10056226:	490a      	ldr	r1, [pc, #40]	@ (10056250 <__arm_cp.9_3>)
10056228:	6050      	str	r0, [r2, #4]
1005622a:	6091      	str	r1, [r2, #8]
1005622c:	2029      	movs	r0, #41	@ 0x29
1005622e:	00c0      	lsls	r0, r0, #3
10056230:	8190      	strh	r0, [r2, #12]
10056232:	4620      	mov	r0, r4
10056234:	f006 fb9f 	bl	1005c976 <llc_subrate_reset_params>
10056238:	3480      	adds	r4, #128	@ 0x80
1005623a:	4620      	mov	r0, r4
1005623c:	f00f f9ea 	bl	10065614 <ACL_list_init>
10056240:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10056242:	46c0      	nop			@ (mov r8, r8)

10056244 <__arm_cp.9_0>:
10056244:	20000894 	.word	0x20000894

10056248 <__arm_cp.9_1>:
10056248:	0000ffff 	.word	0x0000ffff

1005624c <__arm_cp.9_2>:
1005624c:	0148001b 	.word	0x0148001b

10056250 <__arm_cp.9_3>:
10056250:	001b0148 	.word	0x001b0148

10056254 <llc_conn_mem_allocate>:
10056254:	b5f0      	push	{r4, r5, r6, r7, lr}
10056256:	b085      	sub	sp, #20
10056258:	2b01      	cmp	r3, #1
1005625a:	d000      	beq.n	1005625e <llc_conn_mem_allocate+0xa>
1005625c:	e082      	b.n	10056364 <llc_conn_mem_allocate+0x110>
1005625e:	ab02      	add	r3, sp, #8
10056260:	c307      	stmia	r3!, {r0, r1, r2}
10056262:	4841      	ldr	r0, [pc, #260]	@ (10056368 <__arm_cp.10_0>)
10056264:	7fc1      	ldrb	r1, [r0, #31]
10056266:	9101      	str	r1, [sp, #4]
10056268:	7ac4      	ldrb	r4, [r0, #11]
1005626a:	9400      	str	r4, [sp, #0]
1005626c:	2601      	movs	r6, #1
1005626e:	2124      	movs	r1, #36	@ 0x24
10056270:	4a3e      	ldr	r2, [pc, #248]	@ (1005636c <__arm_cp.10_1>)
10056272:	4630      	mov	r0, r6
10056274:	4790      	blx	r2
10056276:	493e      	ldr	r1, [pc, #248]	@ (10056370 <__arm_cp.10_2>)
10056278:	6809      	ldr	r1, [r1, #0]
1005627a:	279c      	movs	r7, #156	@ 0x9c
1005627c:	59c9      	ldr	r1, [r1, r7]
1005627e:	63c8      	str	r0, [r1, #60]	@ 0x3c
10056280:	2538      	movs	r5, #56	@ 0x38
10056282:	4630      	mov	r0, r6
10056284:	4629      	mov	r1, r5
10056286:	4a39      	ldr	r2, [pc, #228]	@ (1005636c <__arm_cp.10_1>)
10056288:	4790      	blx	r2
1005628a:	4939      	ldr	r1, [pc, #228]	@ (10056370 <__arm_cp.10_2>)
1005628c:	6809      	ldr	r1, [r1, #0]
1005628e:	59c9      	ldr	r1, [r1, r7]
10056290:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
10056292:	6008      	str	r0, [r1, #0]
10056294:	204d      	movs	r0, #77	@ 0x4d
10056296:	0081      	lsls	r1, r0, #2
10056298:	4620      	mov	r0, r4
1005629a:	4c34      	ldr	r4, [pc, #208]	@ (1005636c <__arm_cp.10_1>)
1005629c:	47a0      	blx	r4
1005629e:	4934      	ldr	r1, [pc, #208]	@ (10056370 <__arm_cp.10_2>)
100562a0:	6809      	ldr	r1, [r1, #0]
100562a2:	59c9      	ldr	r1, [r1, r7]
100562a4:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
100562a6:	6048      	str	r0, [r1, #4]
100562a8:	9801      	ldr	r0, [sp, #4]
100562aa:	4086      	lsls	r6, r0
100562ac:	b2f0      	uxtb	r0, r6
100562ae:	2108      	movs	r1, #8
100562b0:	47a0      	blx	r4
100562b2:	492f      	ldr	r1, [pc, #188]	@ (10056370 <__arm_cp.10_2>)
100562b4:	6809      	ldr	r1, [r1, #0]
100562b6:	59c9      	ldr	r1, [r1, r7]
100562b8:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
100562ba:	6809      	ldr	r1, [r1, #0]
100562bc:	2228      	movs	r2, #40	@ 0x28
100562be:	2300      	movs	r3, #0
100562c0:	548b      	strb	r3, [r1, r2]
100562c2:	6248      	str	r0, [r1, #36]	@ 0x24
100562c4:	3128      	adds	r1, #40	@ 0x28
100562c6:	704e      	strb	r6, [r1, #1]
100562c8:	9c00      	ldr	r4, [sp, #0]
100562ca:	2013      	movs	r0, #19
100562cc:	2104      	movs	r1, #4
100562ce:	4e27      	ldr	r6, [pc, #156]	@ (1005636c <__arm_cp.10_1>)
100562d0:	47b0      	blx	r6
100562d2:	4927      	ldr	r1, [pc, #156]	@ (10056370 <__arm_cp.10_2>)
100562d4:	6809      	ldr	r1, [r1, #0]
100562d6:	59c9      	ldr	r1, [r1, r7]
100562d8:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
100562da:	6108      	str	r0, [r1, #16]
100562dc:	4620      	mov	r0, r4
100562de:	4629      	mov	r1, r5
100562e0:	47b0      	blx	r6
100562e2:	4633      	mov	r3, r6
100562e4:	4a22      	ldr	r2, [pc, #136]	@ (10056370 <__arm_cp.10_2>)
100562e6:	6811      	ldr	r1, [r2, #0]
100562e8:	59c9      	ldr	r1, [r1, r7]
100562ea:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
100562ec:	6088      	str	r0, [r1, #8]
100562ee:	4626      	mov	r6, r4
100562f0:	4620      	mov	r0, r4
100562f2:	4629      	mov	r1, r5
100562f4:	4615      	mov	r5, r2
100562f6:	4798      	blx	r3
100562f8:	6829      	ldr	r1, [r5, #0]
100562fa:	59c9      	ldr	r1, [r1, r7]
100562fc:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
100562fe:	60c8      	str	r0, [r1, #12]
10056300:	9802      	ldr	r0, [sp, #8]
10056302:	2801      	cmp	r0, #1
10056304:	d107      	bne.n	10056316 <llc_conn_mem_allocate+0xc2>
10056306:	210e      	movs	r1, #14
10056308:	4630      	mov	r0, r6
1005630a:	f00c fd93 	bl	10062e34 <csmem_mem_0_assign>
1005630e:	6829      	ldr	r1, [r5, #0]
10056310:	59c9      	ldr	r1, [r1, r7]
10056312:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
10056314:	6148      	str	r0, [r1, #20]
10056316:	9803      	ldr	r0, [sp, #12]
10056318:	2801      	cmp	r0, #1
1005631a:	d107      	bne.n	1005632c <llc_conn_mem_allocate+0xd8>
1005631c:	2108      	movs	r1, #8
1005631e:	4630      	mov	r0, r6
10056320:	f00c fd88 	bl	10062e34 <csmem_mem_0_assign>
10056324:	6829      	ldr	r1, [r5, #0]
10056326:	59c9      	ldr	r1, [r1, r7]
10056328:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
1005632a:	6188      	str	r0, [r1, #24]
1005632c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
1005632e:	9804      	ldr	r0, [sp, #16]
10056330:	2801      	cmp	r0, #1
10056332:	d10d      	bne.n	10056350 <llc_conn_mem_allocate+0xfc>
10056334:	2120      	movs	r1, #32
10056336:	4630      	mov	r0, r6
10056338:	f00c fd7c 	bl	10062e34 <csmem_mem_0_assign>
1005633c:	6829      	ldr	r1, [r5, #0]
1005633e:	59c9      	ldr	r1, [r1, r7]
10056340:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
10056342:	61c8      	str	r0, [r1, #28]
10056344:	2001      	movs	r0, #1
10056346:	2111      	movs	r1, #17
10056348:	f00c fd74 	bl	10062e34 <csmem_mem_0_assign>
1005634c:	6829      	ldr	r1, [r5, #0]
1005634e:	6648      	str	r0, [r1, #100]	@ 0x64
10056350:	2c01      	cmp	r4, #1
10056352:	d107      	bne.n	10056364 <llc_conn_mem_allocate+0x110>
10056354:	211c      	movs	r1, #28
10056356:	4630      	mov	r0, r6
10056358:	f00c fd6c 	bl	10062e34 <csmem_mem_0_assign>
1005635c:	6829      	ldr	r1, [r5, #0]
1005635e:	59c9      	ldr	r1, [r1, r7]
10056360:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
10056362:	6208      	str	r0, [r1, #32]
10056364:	b005      	add	sp, #20
10056366:	bdf0      	pop	{r4, r5, r6, r7, pc}

10056368 <__arm_cp.10_0>:
10056368:	200008a8 	.word	0x200008a8

1005636c <__arm_cp.10_1>:
1005636c:	10062e35 	.word	0x10062e35

10056370 <__arm_cp.10_2>:
10056370:	20000894 	.word	0x20000894

10056374 <llc_conn_ce_length_min_needed>:
10056374:	b5b0      	push	{r4, r5, r7, lr}
10056376:	2804      	cmp	r0, #4
10056378:	d001      	beq.n	1005637e <llc_conn_ce_length_min_needed+0xa>
1005637a:	4c0c      	ldr	r4, [pc, #48]	@ (100563ac <__arm_cp.0_1>)
1005637c:	e000      	b.n	10056380 <llc_conn_ce_length_min_needed+0xc>
1005637e:	4c0a      	ldr	r4, [pc, #40]	@ (100563a8 <__arm_cp.0_0>)
10056380:	2804      	cmp	r0, #4
10056382:	d002      	beq.n	1005638a <llc_conn_ce_length_min_needed+0x16>
10056384:	2029      	movs	r0, #41	@ 0x29
10056386:	0105      	lsls	r5, r0, #4
10056388:	e001      	b.n	1005638e <llc_conn_ce_length_min_needed+0x1a>
1005638a:	20a9      	movs	r0, #169	@ 0xa9
1005638c:	0145      	lsls	r5, r0, #5
1005638e:	f7ff f87b 	bl	10055488 <data_length_extension_csr_ucfg_weak>
10056392:	2801      	cmp	r0, #1
10056394:	d000      	beq.n	10056398 <llc_conn_ce_length_min_needed+0x24>
10056396:	462c      	mov	r4, r5
10056398:	3496      	adds	r4, #150	@ 0x96
1005639a:	b2a0      	uxth	r0, r4
1005639c:	4904      	ldr	r1, [pc, #16]	@ (100563b0 <__arm_cp.0_2>)
1005639e:	f7e9 ff4f 	bl	10040240 <__udivsi3>
100563a2:	1c40      	adds	r0, r0, #1
100563a4:	bdb0      	pop	{r4, r5, r7, pc}
100563a6:	46c0      	nop			@ (mov r8, r8)

100563a8 <__arm_cp.0_0>:
100563a8:	ffff8520 	.word	0xffff8520

100563ac <__arm_cp.0_1>:
100563ac:	00001090 	.word	0x00001090

100563b0 <__arm_cp.0_2>:
100563b0:	00000271 	.word	0x00000271

100563b4 <llc_conn_clr_chan_map_upd_pending>:
100563b4:	21b3      	movs	r1, #179	@ 0xb3
100563b6:	5c42      	ldrb	r2, [r0, r1]
100563b8:	23fe      	movs	r3, #254	@ 0xfe
100563ba:	4013      	ands	r3, r2
100563bc:	5443      	strb	r3, [r0, r1]
100563be:	4770      	bx	lr

100563c0 <llc_conn_clr_instant_reached_passed>:
100563c0:	219a      	movs	r1, #154	@ 0x9a
100563c2:	5a42      	ldrh	r2, [r0, r1]
100563c4:	2304      	movs	r3, #4
100563c6:	439a      	bics	r2, r3
100563c8:	5242      	strh	r2, [r0, r1]
100563ca:	5a42      	ldrh	r2, [r0, r1]
100563cc:	2302      	movs	r3, #2
100563ce:	439a      	bics	r2, r3
100563d0:	5242      	strh	r2, [r0, r1]
100563d2:	4770      	bx	lr

100563d4 <llc_conn_clr_rx_acl_blocked>:
100563d4:	2194      	movs	r1, #148	@ 0x94
100563d6:	5840      	ldr	r0, [r0, r1]
100563d8:	8801      	ldrh	r1, [r0, #0]
100563da:	4a02      	ldr	r2, [pc, #8]	@ (100563e4 <__arm_cp.5_0>)
100563dc:	400a      	ands	r2, r1
100563de:	8002      	strh	r2, [r0, #0]
100563e0:	4770      	bx	lr
100563e2:	46c0      	nop			@ (mov r8, r8)

100563e4 <__arm_cp.5_0>:
100563e4:	0000feff 	.word	0x0000feff

100563e8 <llc_conn_clr_rx_ctrl_pdu_full>:
100563e8:	2190      	movs	r1, #144	@ 0x90
100563ea:	5840      	ldr	r0, [r0, r1]
100563ec:	8801      	ldrh	r1, [r0, #0]
100563ee:	2201      	movs	r2, #1
100563f0:	4391      	bics	r1, r2
100563f2:	8001      	strh	r1, [r0, #0]
100563f4:	4770      	bx	lr

100563f6 <llc_conn_clr_tx_acl_blocked>:
100563f6:	2194      	movs	r1, #148	@ 0x94
100563f8:	5840      	ldr	r0, [r0, r1]
100563fa:	8801      	ldrh	r1, [r0, #0]
100563fc:	2280      	movs	r2, #128	@ 0x80
100563fe:	4391      	bics	r1, r2
10056400:	8001      	strh	r1, [r0, #0]
10056402:	4770      	bx	lr

10056404 <llc_conn_copy_tx_data_packet>:
10056404:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10056406:	460c      	mov	r4, r1
10056408:	2188      	movs	r1, #136	@ 0x88
1005640a:	5c41      	ldrb	r1, [r0, r1]
1005640c:	0649      	lsls	r1, r1, #25
1005640e:	d40c      	bmi.n	1005642a <llc_conn_copy_tx_data_packet+0x26>
10056410:	3088      	adds	r0, #136	@ 0x88
10056412:	8a21      	ldrh	r1, [r4, #16]
10056414:	8862      	ldrh	r2, [r4, #2]
10056416:	1a52      	subs	r2, r2, r1
10056418:	b293      	uxth	r3, r2
1005641a:	8dc5      	ldrh	r5, [r0, #46]	@ 0x2e
1005641c:	42ab      	cmp	r3, r5
1005641e:	d909      	bls.n	10056434 <llc_conn_copy_tx_data_packet+0x30>
10056420:	7a20      	ldrb	r0, [r4, #8]
10056422:	22f7      	movs	r2, #247	@ 0xf7
10056424:	4002      	ands	r2, r0
10056426:	7222      	strb	r2, [r4, #8]
10056428:	e001      	b.n	1005642e <llc_conn_copy_tx_data_packet+0x2a>
1005642a:	8a21      	ldrh	r1, [r4, #16]
1005642c:	7b25      	ldrb	r5, [r4, #12]
1005642e:	2010      	movs	r0, #16
10056430:	9001      	str	r0, [sp, #4]
10056432:	e005      	b.n	10056440 <llc_conn_copy_tx_data_packet+0x3c>
10056434:	69e0      	ldr	r0, [r4, #28]
10056436:	1e43      	subs	r3, r0, #1
10056438:	4198      	sbcs	r0, r3
1005643a:	0100      	lsls	r0, r0, #4
1005643c:	9001      	str	r0, [sp, #4]
1005643e:	4615      	mov	r5, r2
10056440:	2900      	cmp	r1, #0
10056442:	d102      	bne.n	1005644a <llc_conn_copy_tx_data_packet+0x46>
10056444:	7a20      	ldrb	r0, [r4, #8]
10056446:	0780      	lsls	r0, r0, #30
10056448:	d401      	bmi.n	1005644e <llc_conn_copy_tx_data_packet+0x4a>
1005644a:	2001      	movs	r0, #1
1005644c:	e000      	b.n	10056450 <llc_conn_copy_tx_data_packet+0x4c>
1005644e:	2002      	movs	r0, #2
10056450:	9002      	str	r0, [sp, #8]
10056452:	480e      	ldr	r0, [pc, #56]	@ (1005648c <__arm_cp.8_0>)
10056454:	6800      	ldr	r0, [r0, #0]
10056456:	278c      	movs	r7, #140	@ 0x8c
10056458:	59c0      	ldr	r0, [r0, r7]
1005645a:	1d00      	adds	r0, r0, #4
1005645c:	89e2      	ldrh	r2, [r4, #14]
1005645e:	1851      	adds	r1, r2, r1
10056460:	261f      	movs	r6, #31
10056462:	400e      	ands	r6, r1
10056464:	19a9      	adds	r1, r5, r6
10056466:	b28a      	uxth	r2, r1
10056468:	69a1      	ldr	r1, [r4, #24]
1005646a:	f00c fe44 	bl	100630f6 <Mem_Buff_block_copy>
1005646e:	6160      	str	r0, [r4, #20]
10056470:	7325      	strb	r5, [r4, #12]
10056472:	4b06      	ldr	r3, [pc, #24]	@ (1005648c <__arm_cp.8_0>)
10056474:	6818      	ldr	r0, [r3, #0]
10056476:	59c0      	ldr	r0, [r0, r7]
10056478:	1830      	adds	r0, r6, r0
1005647a:	9901      	ldr	r1, [sp, #4]
1005647c:	9a02      	ldr	r2, [sp, #8]
1005647e:	4311      	orrs	r1, r2
10056480:	7081      	strb	r1, [r0, #2]
10056482:	6818      	ldr	r0, [r3, #0]
10056484:	59c0      	ldr	r0, [r0, r7]
10056486:	1830      	adds	r0, r6, r0
10056488:	70c5      	strb	r5, [r0, #3]
1005648a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005648c <__arm_cp.8_0>:
1005648c:	20000894 	.word	0x20000894

10056490 <llc_conn_enhanced_get_latency>:
10056490:	b570      	push	{r4, r5, r6, lr}
10056492:	4605      	mov	r5, r0
10056494:	202c      	movs	r0, #44	@ 0x2c
10056496:	5c28      	ldrb	r0, [r5, r0]
10056498:	2401      	movs	r4, #1
1005649a:	2803      	cmp	r0, #3
1005649c:	d13f      	bne.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
1005649e:	8f28      	ldrh	r0, [r5, #56]	@ 0x38
100564a0:	2800      	cmp	r0, #0
100564a2:	d03c      	beq.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
100564a4:	4628      	mov	r0, r5
100564a6:	f7ef fc7e 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
100564aa:	4629      	mov	r1, r5
100564ac:	3128      	adds	r1, #40	@ 0x28
100564ae:	4288      	cmp	r0, r1
100564b0:	d135      	bne.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
100564b2:	462e      	mov	r6, r5
100564b4:	362c      	adds	r6, #44	@ 0x2c
100564b6:	205c      	movs	r0, #92	@ 0x5c
100564b8:	5c30      	ldrb	r0, [r6, r0]
100564ba:	0600      	lsls	r0, r0, #24
100564bc:	0f80      	lsrs	r0, r0, #30
100564be:	d12e      	bne.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
100564c0:	20ff      	movs	r0, #255	@ 0xff
100564c2:	3008      	adds	r0, #8
100564c4:	1828      	adds	r0, r5, r0
100564c6:	7800      	ldrb	r0, [r0, #0]
100564c8:	0780      	lsls	r0, r0, #30
100564ca:	d428      	bmi.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
100564cc:	208f      	movs	r0, #143	@ 0x8f
100564ce:	0040      	lsls	r0, r0, #1
100564d0:	1828      	adds	r0, r5, r0
100564d2:	8800      	ldrh	r0, [r0, #0]
100564d4:	2800      	cmp	r0, #0
100564d6:	d122      	bne.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
100564d8:	7930      	ldrb	r0, [r6, #4]
100564da:	2401      	movs	r4, #1
100564dc:	4621      	mov	r1, r4
100564de:	f006 fcf4 	bl	1005ceca <LL_cpe_get_active_status>
100564e2:	2800      	cmp	r0, #0
100564e4:	d105      	bne.n	100564f2 <llc_conn_enhanced_get_latency+0x62>
100564e6:	7930      	ldrb	r0, [r6, #4]
100564e8:	2100      	movs	r1, #0
100564ea:	f006 fcee 	bl	1005ceca <LL_cpe_get_active_status>
100564ee:	2800      	cmp	r0, #0
100564f0:	d013      	beq.n	1005651a <llc_conn_enhanced_get_latency+0x8a>
100564f2:	4628      	mov	r0, r5
100564f4:	3098      	adds	r0, #152	@ 0x98
100564f6:	8841      	ldrh	r1, [r0, #2]
100564f8:	07c9      	lsls	r1, r1, #31
100564fa:	d010      	beq.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
100564fc:	8af1      	ldrh	r1, [r6, #22]
100564fe:	8800      	ldrh	r0, [r0, #0]
10056500:	1a40      	subs	r0, r0, r1
10056502:	b281      	uxth	r1, r0
10056504:	2902      	cmp	r1, #2
10056506:	d30a      	bcc.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
10056508:	1e44      	subs	r4, r0, #1
1005650a:	b2a1      	uxth	r1, r4
1005650c:	8f28      	ldrh	r0, [r5, #56]	@ 0x38
1005650e:	1c40      	adds	r0, r0, #1
10056510:	b282      	uxth	r2, r0
10056512:	4291      	cmp	r1, r2
10056514:	d303      	bcc.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
10056516:	4604      	mov	r4, r0
10056518:	e001      	b.n	1005651e <llc_conn_enhanced_get_latency+0x8e>
1005651a:	8f28      	ldrh	r0, [r5, #56]	@ 0x38
1005651c:	1c44      	adds	r4, r0, #1
1005651e:	b2a0      	uxth	r0, r4
10056520:	bd70      	pop	{r4, r5, r6, pc}

10056522 <llc_conn_get_chan_map_upd_pending>:
10056522:	21b3      	movs	r1, #179	@ 0xb3
10056524:	5c41      	ldrb	r1, [r0, r1]
10056526:	2001      	movs	r0, #1
10056528:	4008      	ands	r0, r1
1005652a:	4770      	bx	lr

1005652c <llc_conn_get_conn_idx>:
1005652c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005652e:	4604      	mov	r4, r0
10056530:	25ff      	movs	r5, #255	@ 0xff
10056532:	480a      	ldr	r0, [pc, #40]	@ (1005655c <__arm_cp.13_0>)
10056534:	4284      	cmp	r4, r0
10056536:	d00f      	beq.n	10056558 <llc_conn_get_conn_idx+0x2c>
10056538:	2600      	movs	r6, #0
1005653a:	4f09      	ldr	r7, [pc, #36]	@ (10056560 <__arm_cp.13_1>)
1005653c:	6838      	ldr	r0, [r7, #0]
1005653e:	2134      	movs	r1, #52	@ 0x34
10056540:	5c41      	ldrb	r1, [r0, r1]
10056542:	b2f0      	uxtb	r0, r6
10056544:	4288      	cmp	r0, r1
10056546:	d207      	bcs.n	10056558 <llc_conn_get_conn_idx+0x2c>
10056548:	f7ff fd60 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005654c:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
1005654e:	42a0      	cmp	r0, r4
10056550:	d001      	beq.n	10056556 <llc_conn_get_conn_idx+0x2a>
10056552:	1c76      	adds	r6, r6, #1
10056554:	e7f2      	b.n	1005653c <llc_conn_get_conn_idx+0x10>
10056556:	4635      	mov	r5, r6
10056558:	b2e8      	uxtb	r0, r5
1005655a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005655c <__arm_cp.13_0>:
1005655c:	0000ffff 	.word	0x0000ffff

10056560 <__arm_cp.13_1>:
10056560:	2000083c 	.word	0x2000083c

10056564 <llc_conn_get_ctrl_pdu_data_p>:
10056564:	0089      	lsls	r1, r1, #2
10056566:	1840      	adds	r0, r0, r1
10056568:	2190      	movs	r1, #144	@ 0x90
1005656a:	5840      	ldr	r0, [r0, r1]
1005656c:	1c80      	adds	r0, r0, #2
1005656e:	4770      	bx	lr

10056570 <llc_conn_get_enc_on>:
10056570:	2900      	cmp	r1, #0
10056572:	d001      	beq.n	10056578 <llc_conn_get_enc_on+0x8>
10056574:	2102      	movs	r1, #2
10056576:	e000      	b.n	1005657a <llc_conn_get_enc_on+0xa>
10056578:	2103      	movs	r1, #3
1005657a:	2288      	movs	r2, #136	@ 0x88
1005657c:	5882      	ldr	r2, [r0, r2]
1005657e:	40ca      	lsrs	r2, r1
10056580:	2001      	movs	r0, #1
10056582:	4010      	ands	r0, r2
10056584:	4770      	bx	lr

10056586 <llc_conn_get_instant_passed>:
10056586:	219a      	movs	r1, #154	@ 0x9a
10056588:	5a40      	ldrh	r0, [r0, r1]
1005658a:	0740      	lsls	r0, r0, #29
1005658c:	0fc0      	lsrs	r0, r0, #31
1005658e:	4770      	bx	lr

10056590 <llc_conn_get_instant_reached>:
10056590:	219a      	movs	r1, #154	@ 0x9a
10056592:	5a40      	ldrh	r0, [r0, r1]
10056594:	0780      	lsls	r0, r0, #30
10056596:	0fc0      	lsrs	r0, r0, #31
10056598:	4770      	bx	lr

1005659a <llc_conn_get_rx_ctrl_pdu_full>:
1005659a:	2190      	movs	r1, #144	@ 0x90
1005659c:	5840      	ldr	r0, [r0, r1]
1005659e:	8801      	ldrh	r1, [r0, #0]
100565a0:	2001      	movs	r0, #1
100565a2:	4008      	ands	r0, r1
100565a4:	4770      	bx	lr

100565a6 <llc_conn_get_rx_acl_blocked>:
100565a6:	2194      	movs	r1, #148	@ 0x94
100565a8:	5840      	ldr	r0, [r0, r1]
100565aa:	8800      	ldrh	r0, [r0, #0]
100565ac:	05c0      	lsls	r0, r0, #23
100565ae:	0fc0      	lsrs	r0, r0, #31
100565b0:	4770      	bx	lr

100565b2 <llc_conn_get_tx_acl_blocked>:
100565b2:	2194      	movs	r1, #148	@ 0x94
100565b4:	5840      	ldr	r0, [r0, r1]
100565b6:	8800      	ldrh	r0, [r0, #0]
100565b8:	b2c0      	uxtb	r0, r0
100565ba:	09c0      	lsrs	r0, r0, #7
100565bc:	4770      	bx	lr

100565be <llc_conn_get_tx_ctrl_pdu_state>:
100565be:	2194      	movs	r1, #148	@ 0x94
100565c0:	5840      	ldr	r0, [r0, r1]
100565c2:	8801      	ldrh	r1, [r0, #0]
100565c4:	2003      	movs	r0, #3
100565c6:	4008      	ands	r0, r1
100565c8:	4770      	bx	lr
	...

100565cc <llc_conn_guard_time_for_close_conn_event>:
100565cc:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100565ce:	4607      	mov	r7, r0
100565d0:	2441      	movs	r4, #65	@ 0x41
100565d2:	5d00      	ldrb	r0, [r0, r4]
100565d4:	f7ef fe74 	bl	100462c0 <BLEPLAT_CNTR_SmGetTxPhy>
100565d8:	4605      	mov	r5, r0
100565da:	5d38      	ldrb	r0, [r7, r4]
100565dc:	f7ef fe5f 	bl	1004629e <BLEPLAT_CNTR_SmGetRxPhy>
100565e0:	23b6      	movs	r3, #182	@ 0xb6
100565e2:	1e6c      	subs	r4, r5, #1
100565e4:	b2e1      	uxtb	r1, r4
100565e6:	9702      	str	r7, [sp, #8]
100565e8:	37b6      	adds	r7, #182	@ 0xb6
100565ea:	2570      	movs	r5, #112	@ 0x70
100565ec:	2603      	movs	r6, #3
100565ee:	2905      	cmp	r1, #5
100565f0:	4632      	mov	r2, r6
100565f2:	9501      	str	r5, [sp, #4]
100565f4:	4629      	mov	r1, r5
100565f6:	d805      	bhi.n	10056604 <llc_conn_guard_time_for_close_conn_event+0x38>
100565f8:	b261      	sxtb	r1, r4
100565fa:	008a      	lsls	r2, r1, #2
100565fc:	4919      	ldr	r1, [pc, #100]	@ (10056664 <__arm_cp.22_0>)
100565fe:	5889      	ldr	r1, [r1, r2]
10056600:	4c19      	ldr	r4, [pc, #100]	@ (10056668 <__arm_cp.22_1>)
10056602:	58a2      	ldr	r2, [r4, r2]
10056604:	9c02      	ldr	r4, [sp, #8]
10056606:	5ae3      	ldrh	r3, [r4, r3]
10056608:	887c      	ldrh	r4, [r7, #2]
1005660a:	1e40      	subs	r0, r0, #1
1005660c:	b2c5      	uxtb	r5, r0
1005660e:	2d05      	cmp	r5, #5
10056610:	d806      	bhi.n	10056620 <llc_conn_guard_time_for_close_conn_event+0x54>
10056612:	b240      	sxtb	r0, r0
10056614:	0080      	lsls	r0, r0, #2
10056616:	4d13      	ldr	r5, [pc, #76]	@ (10056664 <__arm_cp.22_0>)
10056618:	582d      	ldr	r5, [r5, r0]
1005661a:	9501      	str	r5, [sp, #4]
1005661c:	4d12      	ldr	r5, [pc, #72]	@ (10056668 <__arm_cp.22_1>)
1005661e:	582e      	ldr	r6, [r5, r0]
10056620:	4093      	lsls	r3, r2
10056622:	1858      	adds	r0, r3, r1
10056624:	0200      	lsls	r0, r0, #8
10056626:	2147      	movs	r1, #71	@ 0x47
10056628:	00cd      	lsls	r5, r1, #3
1005662a:	1940      	adds	r0, r0, r5
1005662c:	490f      	ldr	r1, [pc, #60]	@ (1005666c <__arm_cp.22_2>)
1005662e:	f7e9 fe07 	bl	10040240 <__udivsi3>
10056632:	9000      	str	r0, [sp, #0]
10056634:	40b4      	lsls	r4, r6
10056636:	9801      	ldr	r0, [sp, #4]
10056638:	1820      	adds	r0, r4, r0
1005663a:	0200      	lsls	r0, r0, #8
1005663c:	1940      	adds	r0, r0, r5
1005663e:	490b      	ldr	r1, [pc, #44]	@ (1005666c <__arm_cp.22_2>)
10056640:	f7e9 fdfe 	bl	10040240 <__udivsi3>
10056644:	4606      	mov	r6, r0
10056646:	88fc      	ldrh	r4, [r7, #6]
10056648:	f00b fe88 	bl	1006235c <LL_sched_engine_return_actual_scheduler_margin>
1005664c:	9900      	ldr	r1, [sp, #0]
1005664e:	1808      	adds	r0, r1, r0
10056650:	b2b1      	uxth	r1, r6
10056652:	428c      	cmp	r4, r1
10056654:	d800      	bhi.n	10056658 <llc_conn_guard_time_for_close_conn_event+0x8c>
10056656:	4621      	mov	r1, r4
10056658:	1840      	adds	r0, r0, r1
1005665a:	30cd      	adds	r0, #205	@ 0xcd
1005665c:	9902      	ldr	r1, [sp, #8]
1005665e:	6748      	str	r0, [r1, #116]	@ 0x74
10056660:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10056662:	46c0      	nop			@ (mov r8, r8)

10056664 <__arm_cp.22_0>:
10056664:	1006e998 	.word	0x1006e998

10056668 <__arm_cp.22_1>:
10056668:	1006e980 	.word	0x1006e980

1005666c <__arm_cp.22_2>:
1005666c:	00000271 	.word	0x00000271

10056670 <llc_conn_list_add_address>:
10056670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056672:	460a      	mov	r2, r1
10056674:	4601      	mov	r1, r0
10056676:	4807      	ldr	r0, [pc, #28]	@ (10056694 <__arm_cp.23_0>)
10056678:	6800      	ldr	r0, [r0, #0]
1005667a:	239c      	movs	r3, #156	@ 0x9c
1005667c:	58c0      	ldr	r0, [r0, r3]
1005667e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
10056680:	6800      	ldr	r0, [r0, #0]
10056682:	ab02      	add	r3, sp, #8
10056684:	9301      	str	r3, [sp, #4]
10056686:	ab03      	add	r3, sp, #12
10056688:	9300      	str	r3, [sp, #0]
1005668a:	3024      	adds	r0, #36	@ 0x24
1005668c:	2300      	movs	r3, #0
1005668e:	f00f f843 	bl	10065718 <addr8_list_add>
10056692:	bd8f      	pop	{r0, r1, r2, r3, r7, pc}

10056694 <__arm_cp.23_0>:
10056694:	20000894 	.word	0x20000894

10056698 <llc_conn_list_reset>:
10056698:	b580      	push	{r7, lr}
1005669a:	4805      	ldr	r0, [pc, #20]	@ (100566b0 <__arm_cp.24_0>)
1005669c:	6800      	ldr	r0, [r0, #0]
1005669e:	219c      	movs	r1, #156	@ 0x9c
100566a0:	5840      	ldr	r0, [r0, r1]
100566a2:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
100566a4:	6800      	ldr	r0, [r0, #0]
100566a6:	3024      	adds	r0, #36	@ 0x24
100566a8:	f00f f8b5 	bl	10065816 <addr8_list_clear>
100566ac:	bd80      	pop	{r7, pc}
100566ae:	46c0      	nop			@ (mov r8, r8)

100566b0 <__arm_cp.24_0>:
100566b0:	20000894 	.word	0x20000894

100566b4 <llc_conn_list_remove_address>:
100566b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100566b6:	460a      	mov	r2, r1
100566b8:	4601      	mov	r1, r0
100566ba:	4807      	ldr	r0, [pc, #28]	@ (100566d8 <__arm_cp.25_0>)
100566bc:	6800      	ldr	r0, [r0, #0]
100566be:	239c      	movs	r3, #156	@ 0x9c
100566c0:	58c0      	ldr	r0, [r0, r3]
100566c2:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
100566c4:	6800      	ldr	r0, [r0, #0]
100566c6:	ab02      	add	r3, sp, #8
100566c8:	9301      	str	r3, [sp, #4]
100566ca:	ab03      	add	r3, sp, #12
100566cc:	9300      	str	r3, [sp, #0]
100566ce:	3024      	adds	r0, #36	@ 0x24
100566d0:	2300      	movs	r3, #0
100566d2:	f00f f864 	bl	1006579e <addr8_list_remove_by_addr>
100566d6:	bd8f      	pop	{r0, r1, r2, r3, r7, pc}

100566d8 <__arm_cp.25_0>:
100566d8:	20000894 	.word	0x20000894

100566dc <llc_conn_list_search_address>:
100566dc:	b5bf      	push	{r0, r1, r2, r3, r4, r5, r7, lr}
100566de:	460c      	mov	r4, r1
100566e0:	4605      	mov	r5, r0
100566e2:	f7ff fc89 	bl	10055ff8 <llc_conn_get_cntxt_p>
100566e6:	2136      	movs	r1, #54	@ 0x36
100566e8:	5c40      	ldrb	r0, [r0, r1]
100566ea:	2800      	cmp	r0, #0
100566ec:	d001      	beq.n	100566f2 <llc_conn_list_search_address+0x16>
100566ee:	2000      	movs	r0, #0
100566f0:	e011      	b.n	10056716 <llc_conn_list_search_address+0x3a>
100566f2:	480a      	ldr	r0, [pc, #40]	@ (1005671c <__arm_cp.26_0>)
100566f4:	6800      	ldr	r0, [r0, #0]
100566f6:	219c      	movs	r1, #156	@ 0x9c
100566f8:	5840      	ldr	r0, [r0, r1]
100566fa:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
100566fc:	6801      	ldr	r1, [r0, #0]
100566fe:	6a48      	ldr	r0, [r1, #36]	@ 0x24
10056700:	6a89      	ldr	r1, [r1, #40]	@ 0x28
10056702:	aa03      	add	r2, sp, #12
10056704:	2300      	movs	r3, #0
10056706:	9300      	str	r3, [sp, #0]
10056708:	9201      	str	r2, [sp, #4]
1005670a:	22fe      	movs	r2, #254	@ 0xfe
1005670c:	4395      	bics	r5, r2
1005670e:	462a      	mov	r2, r5
10056710:	4623      	mov	r3, r4
10056712:	f00e ffbd 	bl	10065690 <addr8_list_search>
10056716:	b004      	add	sp, #16
10056718:	bdb0      	pop	{r4, r5, r7, pc}
1005671a:	46c0      	nop			@ (mov r8, r8)

1005671c <__arm_cp.26_0>:
1005671c:	20000894 	.word	0x20000894

10056720 <llc_conn_push_adv_set_terminated_event>:
10056720:	b570      	push	{r4, r5, r6, lr}
10056722:	460d      	mov	r5, r1
10056724:	4604      	mov	r4, r0
10056726:	481a      	ldr	r0, [pc, #104]	@ (10056790 <__arm_cp.27_0>)
10056728:	6800      	ldr	r0, [r0, #0]
1005672a:	212c      	movs	r1, #44	@ 0x2c
1005672c:	5c40      	ldrb	r0, [r0, r1]
1005672e:	07c0      	lsls	r0, r0, #31
10056730:	0ec1      	lsrs	r1, r0, #27
10056732:	d101      	bne.n	10056738 <llc_conn_push_adv_set_terminated_event+0x18>
10056734:	2211      	movs	r2, #17
10056736:	e00a      	b.n	1005674e <llc_conn_push_adv_set_terminated_event+0x2e>
10056738:	4816      	ldr	r0, [pc, #88]	@ (10056794 <__arm_cp.27_1>)
1005673a:	6800      	ldr	r0, [r0, #0]
1005673c:	223d      	movs	r2, #61	@ 0x3d
1005673e:	5c82      	ldrb	r2, [r0, r2]
10056740:	0692      	lsls	r2, r2, #26
10056742:	d524      	bpl.n	1005678e <llc_conn_push_adv_set_terminated_event+0x6e>
10056744:	303d      	adds	r0, #61	@ 0x3d
10056746:	7ac0      	ldrb	r0, [r0, #11]
10056748:	0780      	lsls	r0, r0, #30
1005674a:	d520      	bpl.n	1005678e <llc_conn_push_adv_set_terminated_event+0x6e>
1005674c:	221f      	movs	r2, #31
1005674e:	204e      	movs	r0, #78	@ 0x4e
10056750:	43c0      	mvns	r0, r0
10056752:	4041      	eors	r1, r0
10056754:	4810      	ldr	r0, [pc, #64]	@ (10056798 <__arm_cp.27_2>)
10056756:	6800      	ldr	r0, [r0, #0]
10056758:	6940      	ldr	r0, [r0, #20]
1005675a:	b2ce      	uxtb	r6, r1
1005675c:	2303      	movs	r3, #3
1005675e:	4631      	mov	r1, r6
10056760:	f7f9 fdce 	bl	10050300 <aci_event_fifo_push_header>
10056764:	2800      	cmp	r0, #0
10056766:	d012      	beq.n	1005678e <llc_conn_push_adv_set_terminated_event+0x6e>
10056768:	4601      	mov	r1, r0
1005676a:	7284      	strb	r4, [r0, #10]
1005676c:	2000      	movs	r0, #0
1005676e:	7308      	strb	r0, [r1, #12]
10056770:	724d      	strb	r5, [r1, #9]
10056772:	7208      	strb	r0, [r1, #8]
10056774:	2012      	movs	r0, #18
10056776:	71c8      	strb	r0, [r1, #7]
10056778:	2006      	movs	r0, #6
1005677a:	7188      	strb	r0, [r1, #6]
1005677c:	203e      	movs	r0, #62	@ 0x3e
1005677e:	7148      	strb	r0, [r1, #5]
10056780:	2004      	movs	r0, #4
10056782:	7108      	strb	r0, [r1, #4]
10056784:	0a20      	lsrs	r0, r4, #8
10056786:	72c8      	strb	r0, [r1, #11]
10056788:	4630      	mov	r0, r6
1005678a:	f7f9 fe56 	bl	1005043a <aci_event_fifo_push>
1005678e:	bd70      	pop	{r4, r5, r6, pc}

10056790 <__arm_cp.27_0>:
10056790:	2000083c 	.word	0x2000083c

10056794 <__arm_cp.27_1>:
10056794:	20000894 	.word	0x20000894

10056798 <__arm_cp.27_2>:
10056798:	20000840 	.word	0x20000840

1005679c <llc_conn_push_connection_complete_event>:
1005679c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005679e:	b08d      	sub	sp, #52	@ 0x34
100567a0:	4604      	mov	r4, r0
100567a2:	4895      	ldr	r0, [pc, #596]	@ (100569f8 <__arm_cp.28_0>)
100567a4:	6800      	ldr	r0, [r0, #0]
100567a6:	212c      	movs	r1, #44	@ 0x2c
100567a8:	5c40      	ldrb	r0, [r0, r1]
100567aa:	07c0      	lsls	r0, r0, #31
100567ac:	0ec5      	lsrs	r5, r0, #27
100567ae:	206f      	movs	r0, #111	@ 0x6f
100567b0:	43c6      	mvns	r6, r0
100567b2:	406e      	eors	r6, r5
100567b4:	f7f8 f827 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
100567b8:	4990      	ldr	r1, [pc, #576]	@ (100569fc <__arm_cp.28_1>)
100567ba:	6809      	ldr	r1, [r1, #0]
100567bc:	223d      	movs	r2, #61	@ 0x3d
100567be:	5c8b      	ldrb	r3, [r1, r2]
100567c0:	2220      	movs	r2, #32
100567c2:	4013      	ands	r3, r2
100567c4:	313d      	adds	r1, #61	@ 0x3d
100567c6:	2800      	cmp	r0, #0
100567c8:	d066      	beq.n	10056898 <llc_conn_push_connection_complete_event+0xfc>
100567ca:	2b00      	cmp	r3, #0
100567cc:	d100      	bne.n	100567d0 <llc_conn_push_connection_complete_event+0x34>
100567ce:	e110      	b.n	100569f2 <llc_conn_push_connection_complete_event+0x256>
100567d0:	7b88      	ldrb	r0, [r1, #14]
100567d2:	07c0      	lsls	r0, r0, #31
100567d4:	d063      	beq.n	1005689e <llc_conn_push_connection_complete_event+0x102>
100567d6:	2d00      	cmp	r5, #0
100567d8:	d100      	bne.n	100567dc <llc_conn_push_connection_complete_event+0x40>
100567da:	2212      	movs	r2, #18
100567dc:	8aa0      	ldrh	r0, [r4, #20]
100567de:	900c      	str	r0, [sp, #48]	@ 0x30
100567e0:	7da7      	ldrb	r7, [r4, #22]
100567e2:	7de0      	ldrb	r0, [r4, #23]
100567e4:	9008      	str	r0, [sp, #32]
100567e6:	8a60      	ldrh	r0, [r4, #18]
100567e8:	900b      	str	r0, [sp, #44]	@ 0x2c
100567ea:	8a20      	ldrh	r0, [r4, #16]
100567ec:	9009      	str	r0, [sp, #36]	@ 0x24
100567ee:	89a0      	ldrh	r0, [r4, #12]
100567f0:	900a      	str	r0, [sp, #40]	@ 0x28
100567f2:	6820      	ldr	r0, [r4, #0]
100567f4:	9005      	str	r0, [sp, #20]
100567f6:	6860      	ldr	r0, [r4, #4]
100567f8:	9007      	str	r0, [sp, #28]
100567fa:	68a0      	ldr	r0, [r4, #8]
100567fc:	9006      	str	r0, [sp, #24]
100567fe:	7e20      	ldrb	r0, [r4, #24]
10056800:	9003      	str	r0, [sp, #12]
10056802:	7e60      	ldrb	r0, [r4, #25]
10056804:	9004      	str	r0, [sp, #16]
10056806:	89e5      	ldrh	r5, [r4, #14]
10056808:	7ea0      	ldrb	r0, [r4, #26]
1005680a:	9002      	str	r0, [sp, #8]
1005680c:	487c      	ldr	r0, [pc, #496]	@ (10056a00 <__arm_cp.28_2>)
1005680e:	6800      	ldr	r0, [r0, #0]
10056810:	6900      	ldr	r0, [r0, #16]
10056812:	b2f1      	uxtb	r1, r6
10056814:	230a      	movs	r3, #10
10056816:	f7f9 fd73 	bl	10050300 <aci_event_fifo_push_header>
1005681a:	2800      	cmp	r0, #0
1005681c:	d100      	bne.n	10056820 <llc_conn_push_connection_complete_event+0x84>
1005681e:	e0e8      	b.n	100569f2 <llc_conn_push_connection_complete_event+0x256>
10056820:	4604      	mov	r4, r0
10056822:	9701      	str	r7, [sp, #4]
10056824:	4607      	mov	r7, r0
10056826:	371f      	adds	r7, #31
10056828:	7245      	strb	r5, [r0, #9]
1005682a:	9803      	ldr	r0, [sp, #12]
1005682c:	7320      	strb	r0, [r4, #12]
1005682e:	9804      	ldr	r0, [sp, #16]
10056830:	72e0      	strb	r0, [r4, #11]
10056832:	9802      	ldr	r0, [sp, #8]
10056834:	7220      	strb	r0, [r4, #8]
10056836:	0a28      	lsrs	r0, r5, #8
10056838:	72a0      	strb	r0, [r4, #10]
1005683a:	4620      	mov	r0, r4
1005683c:	300d      	adds	r0, #13
1005683e:	2506      	movs	r5, #6
10056840:	9905      	ldr	r1, [sp, #20]
10056842:	462a      	mov	r2, r5
10056844:	4b6f      	ldr	r3, [pc, #444]	@ (10056a04 <__arm_cp.28_3>)
10056846:	4798      	blx	r3
10056848:	4620      	mov	r0, r4
1005684a:	3013      	adds	r0, #19
1005684c:	9906      	ldr	r1, [sp, #24]
1005684e:	462a      	mov	r2, r5
10056850:	4b6c      	ldr	r3, [pc, #432]	@ (10056a04 <__arm_cp.28_3>)
10056852:	4798      	blx	r3
10056854:	4b6b      	ldr	r3, [pc, #428]	@ (10056a04 <__arm_cp.28_3>)
10056856:	4620      	mov	r0, r4
10056858:	3019      	adds	r0, #25
1005685a:	9907      	ldr	r1, [sp, #28]
1005685c:	462a      	mov	r2, r5
1005685e:	4798      	blx	r3
10056860:	2021      	movs	r0, #33	@ 0x21
10056862:	9909      	ldr	r1, [sp, #36]	@ 0x24
10056864:	5421      	strb	r1, [r4, r0]
10056866:	2025      	movs	r0, #37	@ 0x25
10056868:	9a08      	ldr	r2, [sp, #32]
1005686a:	5422      	strb	r2, [r4, r0]
1005686c:	4620      	mov	r0, r4
1005686e:	3021      	adds	r0, #33	@ 0x21
10056870:	0a09      	lsrs	r1, r1, #8
10056872:	7041      	strb	r1, [r0, #1]
10056874:	990a      	ldr	r1, [sp, #40]	@ 0x28
10056876:	0a08      	lsrs	r0, r1, #8
10056878:	7078      	strb	r0, [r7, #1]
1005687a:	7039      	strb	r1, [r7, #0]
1005687c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1005687e:	0a08      	lsrs	r0, r1, #8
10056880:	7178      	strb	r0, [r7, #5]
10056882:	7139      	strb	r1, [r7, #4]
10056884:	990c      	ldr	r1, [sp, #48]	@ 0x30
10056886:	0a08      	lsrs	r0, r1, #8
10056888:	7278      	strb	r0, [r7, #9]
1005688a:	7239      	strb	r1, [r7, #8]
1005688c:	9801      	ldr	r0, [sp, #4]
1005688e:	71f8      	strb	r0, [r7, #7]
10056890:	1d20      	adds	r0, r4, #4
10056892:	2129      	movs	r1, #41	@ 0x29
10056894:	2222      	movs	r2, #34	@ 0x22
10056896:	e0a2      	b.n	100569de <llc_conn_push_connection_complete_event+0x242>
10056898:	2b00      	cmp	r3, #0
1005689a:	d100      	bne.n	1005689e <llc_conn_push_connection_complete_event+0x102>
1005689c:	e0a9      	b.n	100569f2 <llc_conn_push_connection_complete_event+0x256>
1005689e:	7a88      	ldrb	r0, [r1, #10]
100568a0:	0780      	lsls	r0, r0, #30
100568a2:	d445      	bmi.n	10056930 <llc_conn_push_connection_complete_event+0x194>
100568a4:	7a48      	ldrb	r0, [r1, #9]
100568a6:	07c0      	lsls	r0, r0, #31
100568a8:	d100      	bne.n	100568ac <llc_conn_push_connection_complete_event+0x110>
100568aa:	e0a2      	b.n	100569f2 <llc_conn_push_connection_complete_event+0x256>
100568ac:	2008      	movs	r0, #8
100568ae:	4305      	orrs	r5, r0
100568b0:	7de0      	ldrb	r0, [r4, #23]
100568b2:	900c      	str	r0, [sp, #48]	@ 0x30
100568b4:	8a60      	ldrh	r0, [r4, #18]
100568b6:	900b      	str	r0, [sp, #44]	@ 0x2c
100568b8:	8a20      	ldrh	r0, [r4, #16]
100568ba:	9009      	str	r0, [sp, #36]	@ 0x24
100568bc:	89a0      	ldrh	r0, [r4, #12]
100568be:	900a      	str	r0, [sp, #40]	@ 0x28
100568c0:	6820      	ldr	r0, [r4, #0]
100568c2:	9008      	str	r0, [sp, #32]
100568c4:	7e20      	ldrb	r0, [r4, #24]
100568c6:	9006      	str	r0, [sp, #24]
100568c8:	7e60      	ldrb	r0, [r4, #25]
100568ca:	9007      	str	r0, [sp, #28]
100568cc:	89e7      	ldrh	r7, [r4, #14]
100568ce:	7ea0      	ldrb	r0, [r4, #26]
100568d0:	9005      	str	r0, [sp, #20]
100568d2:	484b      	ldr	r0, [pc, #300]	@ (10056a00 <__arm_cp.28_2>)
100568d4:	6800      	ldr	r0, [r0, #0]
100568d6:	6900      	ldr	r0, [r0, #16]
100568d8:	b2f1      	uxtb	r1, r6
100568da:	2306      	movs	r3, #6
100568dc:	462a      	mov	r2, r5
100568de:	f7f9 fd0f 	bl	10050300 <aci_event_fifo_push_header>
100568e2:	2800      	cmp	r0, #0
100568e4:	d100      	bne.n	100568e8 <llc_conn_push_connection_complete_event+0x14c>
100568e6:	e084      	b.n	100569f2 <llc_conn_push_connection_complete_event+0x256>
100568e8:	4604      	mov	r4, r0
100568ea:	4605      	mov	r5, r0
100568ec:	3513      	adds	r5, #19
100568ee:	7247      	strb	r7, [r0, #9]
100568f0:	9806      	ldr	r0, [sp, #24]
100568f2:	7320      	strb	r0, [r4, #12]
100568f4:	9807      	ldr	r0, [sp, #28]
100568f6:	72e0      	strb	r0, [r4, #11]
100568f8:	9805      	ldr	r0, [sp, #20]
100568fa:	7220      	strb	r0, [r4, #8]
100568fc:	0a38      	lsrs	r0, r7, #8
100568fe:	72a0      	strb	r0, [r4, #10]
10056900:	4620      	mov	r0, r4
10056902:	300d      	adds	r0, #13
10056904:	2206      	movs	r2, #6
10056906:	9908      	ldr	r1, [sp, #32]
10056908:	f7ee f84c 	bl	100449a4 <BLEPLAT_MemCpy>
1005690c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005690e:	0a08      	lsrs	r0, r1, #8
10056910:	75a0      	strb	r0, [r4, #22]
10056912:	7561      	strb	r1, [r4, #21]
10056914:	990a      	ldr	r1, [sp, #40]	@ 0x28
10056916:	0a08      	lsrs	r0, r1, #8
10056918:	7068      	strb	r0, [r5, #1]
1005691a:	7029      	strb	r1, [r5, #0]
1005691c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1005691e:	0a08      	lsrs	r0, r1, #8
10056920:	7168      	strb	r0, [r5, #5]
10056922:	7129      	strb	r1, [r5, #4]
10056924:	980c      	ldr	r0, [sp, #48]	@ 0x30
10056926:	7660      	strb	r0, [r4, #25]
10056928:	1d20      	adds	r0, r4, #4
1005692a:	2101      	movs	r1, #1
1005692c:	2213      	movs	r2, #19
1005692e:	e056      	b.n	100569de <llc_conn_push_connection_complete_event+0x242>
10056930:	2d00      	cmp	r5, #0
10056932:	d001      	beq.n	10056938 <llc_conn_push_connection_complete_event+0x19c>
10056934:	221c      	movs	r2, #28
10056936:	e000      	b.n	1005693a <llc_conn_push_connection_complete_event+0x19e>
10056938:	220d      	movs	r2, #13
1005693a:	7de0      	ldrb	r0, [r4, #23]
1005693c:	900a      	str	r0, [sp, #40]	@ 0x28
1005693e:	8a67      	ldrh	r7, [r4, #18]
10056940:	8a20      	ldrh	r0, [r4, #16]
10056942:	900b      	str	r0, [sp, #44]	@ 0x2c
10056944:	89a0      	ldrh	r0, [r4, #12]
10056946:	900c      	str	r0, [sp, #48]	@ 0x30
10056948:	6820      	ldr	r0, [r4, #0]
1005694a:	9007      	str	r0, [sp, #28]
1005694c:	6860      	ldr	r0, [r4, #4]
1005694e:	9009      	str	r0, [sp, #36]	@ 0x24
10056950:	68a0      	ldr	r0, [r4, #8]
10056952:	9008      	str	r0, [sp, #32]
10056954:	7e20      	ldrb	r0, [r4, #24]
10056956:	9005      	str	r0, [sp, #20]
10056958:	7e60      	ldrb	r0, [r4, #25]
1005695a:	9006      	str	r0, [sp, #24]
1005695c:	89e5      	ldrh	r5, [r4, #14]
1005695e:	7ea0      	ldrb	r0, [r4, #26]
10056960:	9004      	str	r0, [sp, #16]
10056962:	4827      	ldr	r0, [pc, #156]	@ (10056a00 <__arm_cp.28_2>)
10056964:	6800      	ldr	r0, [r0, #0]
10056966:	6900      	ldr	r0, [r0, #16]
10056968:	b2f1      	uxtb	r1, r6
1005696a:	2309      	movs	r3, #9
1005696c:	f7f9 fcc8 	bl	10050300 <aci_event_fifo_push_header>
10056970:	2800      	cmp	r0, #0
10056972:	d03e      	beq.n	100569f2 <llc_conn_push_connection_complete_event+0x256>
10056974:	4604      	mov	r4, r0
10056976:	9703      	str	r7, [sp, #12]
10056978:	4607      	mov	r7, r0
1005697a:	371f      	adds	r7, #31
1005697c:	7245      	strb	r5, [r0, #9]
1005697e:	9805      	ldr	r0, [sp, #20]
10056980:	7320      	strb	r0, [r4, #12]
10056982:	9806      	ldr	r0, [sp, #24]
10056984:	72e0      	strb	r0, [r4, #11]
10056986:	9804      	ldr	r0, [sp, #16]
10056988:	7220      	strb	r0, [r4, #8]
1005698a:	0a28      	lsrs	r0, r5, #8
1005698c:	72a0      	strb	r0, [r4, #10]
1005698e:	4620      	mov	r0, r4
10056990:	300d      	adds	r0, #13
10056992:	2506      	movs	r5, #6
10056994:	9907      	ldr	r1, [sp, #28]
10056996:	462a      	mov	r2, r5
10056998:	4b1a      	ldr	r3, [pc, #104]	@ (10056a04 <__arm_cp.28_3>)
1005699a:	4798      	blx	r3
1005699c:	4620      	mov	r0, r4
1005699e:	3013      	adds	r0, #19
100569a0:	9908      	ldr	r1, [sp, #32]
100569a2:	462a      	mov	r2, r5
100569a4:	4b17      	ldr	r3, [pc, #92]	@ (10056a04 <__arm_cp.28_3>)
100569a6:	4798      	blx	r3
100569a8:	4b16      	ldr	r3, [pc, #88]	@ (10056a04 <__arm_cp.28_3>)
100569aa:	4620      	mov	r0, r4
100569ac:	3019      	adds	r0, #25
100569ae:	9909      	ldr	r1, [sp, #36]	@ 0x24
100569b0:	462a      	mov	r2, r5
100569b2:	4798      	blx	r3
100569b4:	2021      	movs	r0, #33	@ 0x21
100569b6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100569b8:	5422      	strb	r2, [r4, r0]
100569ba:	2025      	movs	r0, #37	@ 0x25
100569bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
100569be:	5421      	strb	r1, [r4, r0]
100569c0:	1d20      	adds	r0, r4, #4
100569c2:	4621      	mov	r1, r4
100569c4:	3121      	adds	r1, #33	@ 0x21
100569c6:	0a12      	lsrs	r2, r2, #8
100569c8:	704a      	strb	r2, [r1, #1]
100569ca:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
100569cc:	0a11      	lsrs	r1, r2, #8
100569ce:	7079      	strb	r1, [r7, #1]
100569d0:	703a      	strb	r2, [r7, #0]
100569d2:	9a03      	ldr	r2, [sp, #12]
100569d4:	0a11      	lsrs	r1, r2, #8
100569d6:	7179      	strb	r1, [r7, #5]
100569d8:	713a      	strb	r2, [r7, #4]
100569da:	210a      	movs	r1, #10
100569dc:	221f      	movs	r2, #31
100569de:	2304      	movs	r3, #4
100569e0:	7123      	strb	r3, [r4, #4]
100569e2:	233e      	movs	r3, #62	@ 0x3e
100569e4:	7043      	strb	r3, [r0, #1]
100569e6:	71e1      	strb	r1, [r4, #7]
100569e8:	71a2      	strb	r2, [r4, #6]
100569ea:	b2f0      	uxtb	r0, r6
100569ec:	4621      	mov	r1, r4
100569ee:	f7f9 fd24 	bl	1005043a <aci_event_fifo_push>
100569f2:	b00d      	add	sp, #52	@ 0x34
100569f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100569f6:	46c0      	nop			@ (mov r8, r8)

100569f8 <__arm_cp.28_0>:
100569f8:	2000083c 	.word	0x2000083c

100569fc <__arm_cp.28_1>:
100569fc:	20000894 	.word	0x20000894

10056a00 <__arm_cp.28_2>:
10056a00:	20000840 	.word	0x20000840

10056a04 <__arm_cp.28_3>:
10056a04:	100449a5 	.word	0x100449a5

10056a08 <llc_conn_push_csa_event>:
10056a08:	b5b0      	push	{r4, r5, r7, lr}
10056a0a:	460d      	mov	r5, r1
10056a0c:	4604      	mov	r4, r0
10056a0e:	4812      	ldr	r0, [pc, #72]	@ (10056a58 <__arm_cp.29_0>)
10056a10:	6800      	ldr	r0, [r0, #0]
10056a12:	213d      	movs	r1, #61	@ 0x3d
10056a14:	5c41      	ldrb	r1, [r0, r1]
10056a16:	0689      	lsls	r1, r1, #26
10056a18:	d51c      	bpl.n	10056a54 <llc_conn_push_csa_event+0x4c>
10056a1a:	303d      	adds	r0, #61	@ 0x3d
10056a1c:	7ac0      	ldrb	r0, [r0, #11]
10056a1e:	0700      	lsls	r0, r0, #28
10056a20:	d518      	bpl.n	10056a54 <llc_conn_push_csa_event+0x4c>
10056a22:	480e      	ldr	r0, [pc, #56]	@ (10056a5c <__arm_cp.29_1>)
10056a24:	6800      	ldr	r0, [r0, #0]
10056a26:	6940      	ldr	r0, [r0, #20]
10056a28:	21a1      	movs	r1, #161	@ 0xa1
10056a2a:	222c      	movs	r2, #44	@ 0x2c
10056a2c:	2302      	movs	r3, #2
10056a2e:	f7f9 fc67 	bl	10050300 <aci_event_fifo_push_header>
10056a32:	2800      	cmp	r0, #0
10056a34:	d00e      	beq.n	10056a54 <llc_conn_push_csa_event+0x4c>
10056a36:	4601      	mov	r1, r0
10056a38:	7204      	strb	r4, [r0, #8]
10056a3a:	7285      	strb	r5, [r0, #10]
10056a3c:	2014      	movs	r0, #20
10056a3e:	71c8      	strb	r0, [r1, #7]
10056a40:	2004      	movs	r0, #4
10056a42:	7188      	strb	r0, [r1, #6]
10056a44:	223e      	movs	r2, #62	@ 0x3e
10056a46:	714a      	strb	r2, [r1, #5]
10056a48:	7108      	strb	r0, [r1, #4]
10056a4a:	0a20      	lsrs	r0, r4, #8
10056a4c:	7248      	strb	r0, [r1, #9]
10056a4e:	20a1      	movs	r0, #161	@ 0xa1
10056a50:	f7f9 fcf3 	bl	1005043a <aci_event_fifo_push>
10056a54:	bdb0      	pop	{r4, r5, r7, pc}
10056a56:	46c0      	nop			@ (mov r8, r8)

10056a58 <__arm_cp.29_0>:
10056a58:	20000894 	.word	0x20000894

10056a5c <__arm_cp.29_1>:
10056a5c:	20000840 	.word	0x20000840

10056a60 <llc_conn_set_chan_map_upd_pending>:
10056a60:	21b3      	movs	r1, #179	@ 0xb3
10056a62:	5c42      	ldrb	r2, [r0, r1]
10056a64:	2301      	movs	r3, #1
10056a66:	4313      	orrs	r3, r2
10056a68:	5443      	strb	r3, [r0, r1]
10056a6a:	4770      	bx	lr

10056a6c <llc_conn_set_chmap_params>:
10056a6c:	2398      	movs	r3, #152	@ 0x98
10056a6e:	52c2      	strh	r2, [r0, r3]
10056a70:	3098      	adds	r0, #152	@ 0x98
10056a72:	6341      	str	r1, [r0, #52]	@ 0x34
10056a74:	8841      	ldrh	r1, [r0, #2]
10056a76:	2220      	movs	r2, #32
10056a78:	430a      	orrs	r2, r1
10056a7a:	8042      	strh	r2, [r0, #2]
10056a7c:	4770      	bx	lr

10056a7e <llc_conn_set_conn_update_params>:
10056a7e:	2398      	movs	r3, #152	@ 0x98
10056a80:	52c2      	strh	r2, [r0, r3]
10056a82:	3098      	adds	r0, #152	@ 0x98
10056a84:	6301      	str	r1, [r0, #48]	@ 0x30
10056a86:	8841      	ldrh	r1, [r0, #2]
10056a88:	2208      	movs	r2, #8
10056a8a:	430a      	orrs	r2, r1
10056a8c:	8042      	strh	r2, [r0, #2]
10056a8e:	4770      	bx	lr

10056a90 <llc_conn_set_rx_acl_blocked>:
10056a90:	2194      	movs	r1, #148	@ 0x94
10056a92:	5840      	ldr	r0, [r0, r1]
10056a94:	8801      	ldrh	r1, [r0, #0]
10056a96:	2201      	movs	r2, #1
10056a98:	0212      	lsls	r2, r2, #8
10056a9a:	430a      	orrs	r2, r1
10056a9c:	8002      	strh	r2, [r0, #0]
10056a9e:	4770      	bx	lr

10056aa0 <llc_conn_set_start_enc>:
10056aa0:	2294      	movs	r2, #148	@ 0x94
10056aa2:	5880      	ldr	r0, [r0, r2]
10056aa4:	2900      	cmp	r1, #0
10056aa6:	d007      	beq.n	10056ab8 <llc_conn_set_start_enc+0x18>
10056aa8:	2901      	cmp	r1, #1
10056aaa:	d003      	beq.n	10056ab4 <llc_conn_set_start_enc+0x14>
10056aac:	8801      	ldrh	r1, [r0, #0]
10056aae:	2210      	movs	r2, #16
10056ab0:	430a      	orrs	r2, r1
10056ab2:	8002      	strh	r2, [r0, #0]
10056ab4:	2108      	movs	r1, #8
10056ab6:	e000      	b.n	10056aba <llc_conn_set_start_enc+0x1a>
10056ab8:	2110      	movs	r1, #16
10056aba:	8802      	ldrh	r2, [r0, #0]
10056abc:	430a      	orrs	r2, r1
10056abe:	8002      	strh	r2, [r0, #0]
10056ac0:	4770      	bx	lr

10056ac2 <llc_conn_set_stop_enc>:
10056ac2:	2294      	movs	r2, #148	@ 0x94
10056ac4:	5880      	ldr	r0, [r0, r2]
10056ac6:	2900      	cmp	r1, #0
10056ac8:	d007      	beq.n	10056ada <llc_conn_set_stop_enc+0x18>
10056aca:	2901      	cmp	r1, #1
10056acc:	d003      	beq.n	10056ad6 <llc_conn_set_stop_enc+0x14>
10056ace:	8801      	ldrh	r1, [r0, #0]
10056ad0:	2240      	movs	r2, #64	@ 0x40
10056ad2:	430a      	orrs	r2, r1
10056ad4:	8002      	strh	r2, [r0, #0]
10056ad6:	2120      	movs	r1, #32
10056ad8:	e000      	b.n	10056adc <llc_conn_set_stop_enc+0x1a>
10056ada:	2140      	movs	r1, #64	@ 0x40
10056adc:	8802      	ldrh	r2, [r0, #0]
10056ade:	430a      	orrs	r2, r1
10056ae0:	8002      	strh	r2, [r0, #0]
10056ae2:	4770      	bx	lr

10056ae4 <llc_conn_set_tx_acl_blocked>:
10056ae4:	2194      	movs	r1, #148	@ 0x94
10056ae6:	5840      	ldr	r0, [r0, r1]
10056ae8:	8801      	ldrh	r1, [r0, #0]
10056aea:	2280      	movs	r2, #128	@ 0x80
10056aec:	430a      	orrs	r2, r1
10056aee:	8002      	strh	r2, [r0, #0]
10056af0:	4770      	bx	lr

10056af2 <llc_conn_set_tx_ctrl_pdu_has_instant>:
10056af2:	2194      	movs	r1, #148	@ 0x94
10056af4:	5840      	ldr	r0, [r0, r1]
10056af6:	8801      	ldrh	r1, [r0, #0]
10056af8:	2204      	movs	r2, #4
10056afa:	430a      	orrs	r2, r1
10056afc:	8002      	strh	r2, [r0, #0]
10056afe:	4770      	bx	lr

10056b00 <llc_conn_set_tx_ctrl_pdu_state>:
10056b00:	b580      	push	{r7, lr}
10056b02:	2294      	movs	r2, #148	@ 0x94
10056b04:	5880      	ldr	r0, [r0, r2]
10056b06:	8802      	ldrh	r2, [r0, #0]
10056b08:	2303      	movs	r3, #3
10056b0a:	439a      	bics	r2, r3
10056b0c:	8002      	strh	r2, [r0, #0]
10056b0e:	4019      	ands	r1, r3
10056b10:	8802      	ldrh	r2, [r0, #0]
10056b12:	430a      	orrs	r2, r1
10056b14:	8002      	strh	r2, [r0, #0]
10056b16:	2015      	movs	r0, #21
10056b18:	f00e fb8a 	bl	10065230 <tsk_notify_idx>
10056b1c:	f7eb fedb 	bl	100428d6 <BLE_STACK_ProcessRequest>
10056b20:	bd80      	pop	{r7, pc}

10056b22 <llc_conn_calc_skip_ucfg_weak>:
10056b22:	4610      	mov	r0, r2
10056b24:	4770      	bx	lr

10056b26 <llc_conn_check_ctrl_proc_rsp_timer>:
10056b26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10056b28:	460d      	mov	r5, r1
10056b2a:	4604      	mov	r4, r0
10056b2c:	2030      	movs	r0, #48	@ 0x30
10056b2e:	5c20      	ldrb	r0, [r4, r0]
10056b30:	2101      	movs	r1, #1
10056b32:	f006 f9ca 	bl	1005ceca <LL_cpe_get_active_status>
10056b36:	4627      	mov	r7, r4
10056b38:	3730      	adds	r7, #48	@ 0x30
10056b3a:	2801      	cmp	r0, #1
10056b3c:	d10e      	bne.n	10056b5c <llc_conn_check_ctrl_proc_rsp_timer+0x36>
10056b3e:	7838      	ldrb	r0, [r7, #0]
10056b40:	2101      	movs	r1, #1
10056b42:	f006 ffd3 	bl	1005daec <LL_cpe_conn_exception_opcode_from_sm>
10056b46:	2800      	cmp	r0, #0
10056b48:	d108      	bne.n	10056b5c <llc_conn_check_ctrl_proc_rsp_timer+0x36>
10056b4a:	6f20      	ldr	r0, [r4, #112]	@ 0x70
10056b4c:	1e41      	subs	r1, r0, #1
10056b4e:	d41d      	bmi.n	10056b8c <llc_conn_check_ctrl_proc_rsp_timer+0x66>
10056b50:	217d      	movs	r1, #125	@ 0x7d
10056b52:	0449      	lsls	r1, r1, #17
10056b54:	4288      	cmp	r0, r1
10056b56:	d800      	bhi.n	10056b5a <llc_conn_check_ctrl_proc_rsp_timer+0x34>
10056b58:	1b41      	subs	r1, r0, r5
10056b5a:	6721      	str	r1, [r4, #112]	@ 0x70
10056b5c:	7838      	ldrb	r0, [r7, #0]
10056b5e:	2600      	movs	r6, #0
10056b60:	4631      	mov	r1, r6
10056b62:	f006 f9b2 	bl	1005ceca <LL_cpe_get_active_status>
10056b66:	2801      	cmp	r0, #1
10056b68:	d111      	bne.n	10056b8e <llc_conn_check_ctrl_proc_rsp_timer+0x68>
10056b6a:	7838      	ldrb	r0, [r7, #0]
10056b6c:	2600      	movs	r6, #0
10056b6e:	4631      	mov	r1, r6
10056b70:	f006 ffbc 	bl	1005daec <LL_cpe_conn_exception_opcode_from_sm>
10056b74:	2800      	cmp	r0, #0
10056b76:	d10a      	bne.n	10056b8e <llc_conn_check_ctrl_proc_rsp_timer+0x68>
10056b78:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
10056b7a:	1e41      	subs	r1, r0, #1
10056b7c:	d406      	bmi.n	10056b8c <llc_conn_check_ctrl_proc_rsp_timer+0x66>
10056b7e:	217d      	movs	r1, #125	@ 0x7d
10056b80:	0449      	lsls	r1, r1, #17
10056b82:	4288      	cmp	r0, r1
10056b84:	d800      	bhi.n	10056b88 <llc_conn_check_ctrl_proc_rsp_timer+0x62>
10056b86:	1b41      	subs	r1, r0, r5
10056b88:	66e1      	str	r1, [r4, #108]	@ 0x6c
10056b8a:	e000      	b.n	10056b8e <llc_conn_check_ctrl_proc_rsp_timer+0x68>
10056b8c:	2622      	movs	r6, #34	@ 0x22
10056b8e:	4630      	mov	r0, r6
10056b90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

10056b94 <llc_conn_check_instant_and_set_params>:
10056b94:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10056b96:	4604      	mov	r4, r0
10056b98:	209a      	movs	r0, #154	@ 0x9a
10056b9a:	5a20      	ldrh	r0, [r4, r0]
10056b9c:	07c2      	lsls	r2, r0, #31
10056b9e:	4625      	mov	r5, r4
10056ba0:	352c      	adds	r5, #44	@ 0x2c
10056ba2:	2a00      	cmp	r2, #0
10056ba4:	d100      	bne.n	10056ba8 <llc_conn_check_instant_and_set_params+0x14>
10056ba6:	e081      	b.n	10056cac <llc_conn_check_instant_and_set_params+0x118>
10056ba8:	4626      	mov	r6, r4
10056baa:	3698      	adds	r6, #152	@ 0x98
10056bac:	8832      	ldrh	r2, [r6, #0]
10056bae:	1a51      	subs	r1, r2, r1
10056bb0:	040b      	lsls	r3, r1, #16
10056bb2:	d004      	beq.n	10056bbe <llc_conn_check_instant_and_set_params+0x2a>
10056bb4:	b208      	sxth	r0, r1
10056bb6:	2800      	cmp	r0, #0
10056bb8:	d578      	bpl.n	10056cac <llc_conn_check_instant_and_set_params+0x118>
10056bba:	2028      	movs	r0, #40	@ 0x28
10056bbc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10056bbe:	0541      	lsls	r1, r0, #21
10056bc0:	d40f      	bmi.n	10056be2 <llc_conn_check_instant_and_set_params+0x4e>
10056bc2:	0701      	lsls	r1, r0, #28
10056bc4:	d416      	bmi.n	10056bf4 <llc_conn_check_instant_and_set_params+0x60>
10056bc6:	0680      	lsls	r0, r0, #26
10056bc8:	d438      	bmi.n	10056c3c <llc_conn_check_instant_and_set_params+0xa8>
10056bca:	7928      	ldrb	r0, [r5, #4]
10056bcc:	f008 fe5f 	bl	1005f88e <LL_phy_upd_pending_ucfg_weak>
10056bd0:	2800      	cmp	r0, #0
10056bd2:	d060      	beq.n	10056c96 <llc_conn_check_instant_and_set_params+0x102>
10056bd4:	7928      	ldrb	r0, [r5, #4]
10056bd6:	2101      	movs	r1, #1
10056bd8:	2200      	movs	r2, #0
10056bda:	4613      	mov	r3, r2
10056bdc:	f008 fe54 	bl	1005f888 <LLC_pcl_set_radio_tx_power_and_eval_indication_ucfg_weak>
10056be0:	e059      	b.n	10056c96 <llc_conn_check_instant_and_set_params+0x102>
10056be2:	7928      	ldrb	r0, [r5, #4]
10056be4:	4611      	mov	r1, r2
10056be6:	f7ff fa03 	bl	10055ff0 <llc_cig_cmn_start_cis_ucfg_weak>
10056bea:	8870      	ldrh	r0, [r6, #2]
10056bec:	4932      	ldr	r1, [pc, #200]	@ (10056cb8 <__arm_cp.2_0>)
10056bee:	4001      	ands	r1, r0
10056bf0:	8071      	strh	r1, [r6, #2]
10056bf2:	e050      	b.n	10056c96 <llc_conn_check_instant_and_set_params+0x102>
10056bf4:	6c60      	ldr	r0, [r4, #68]	@ 0x44
10056bf6:	6b37      	ldr	r7, [r6, #48]	@ 0x30
10056bf8:	6879      	ldr	r1, [r7, #4]
10056bfa:	1840      	adds	r0, r0, r1
10056bfc:	6460      	str	r0, [r4, #68]	@ 0x44
10056bfe:	68b9      	ldr	r1, [r7, #8]
10056c00:	683a      	ldr	r2, [r7, #0]
10056c02:	7828      	ldrb	r0, [r5, #0]
10056c04:	2802      	cmp	r0, #2
10056c06:	9102      	str	r1, [sp, #8]
10056c08:	9201      	str	r2, [sp, #4]
10056c0a:	d129      	bne.n	10056c60 <llc_conn_check_instant_and_set_params+0xcc>
10056c0c:	7d68      	ldrb	r0, [r5, #21]
10056c0e:	f7ef fb57 	bl	100462c0 <BLEPLAT_CNTR_SmGetTxPhy>
10056c12:	2804      	cmp	r0, #4
10056c14:	d001      	beq.n	10056c1a <llc_conn_check_instant_and_set_params+0x86>
10056c16:	2806      	cmp	r0, #6
10056c18:	d100      	bne.n	10056c1c <llc_conn_check_instant_and_set_params+0x88>
10056c1a:	2002      	movs	r0, #2
10056c1c:	9b02      	ldr	r3, [sp, #8]
10056c1e:	6979      	ldr	r1, [r7, #20]
10056c20:	4299      	cmp	r1, r3
10056c22:	460a      	mov	r2, r1
10056c24:	d300      	bcc.n	10056c28 <llc_conn_check_instant_and_set_params+0x94>
10056c26:	461a      	mov	r2, r3
10056c28:	6522      	str	r2, [r4, #80]	@ 0x50
10056c2a:	0080      	lsls	r0, r0, #2
10056c2c:	1820      	adds	r0, r4, r0
10056c2e:	6581      	str	r1, [r0, #88]	@ 0x58
10056c30:	9801      	ldr	r0, [sp, #4]
10056c32:	0840      	lsrs	r0, r0, #1
10056c34:	6c61      	ldr	r1, [r4, #68]	@ 0x44
10056c36:	1808      	adds	r0, r1, r0
10056c38:	6460      	str	r0, [r4, #68]	@ 0x44
10056c3a:	e01b      	b.n	10056c74 <llc_conn_check_instant_and_set_params+0xe0>
10056c3c:	2083      	movs	r0, #131	@ 0x83
10056c3e:	0040      	lsls	r0, r0, #1
10056c40:	1827      	adds	r7, r4, r0
10056c42:	6b71      	ldr	r1, [r6, #52]	@ 0x34
10056c44:	7d68      	ldrb	r0, [r5, #21]
10056c46:	f7ef fba1 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
10056c4a:	7838      	ldrb	r0, [r7, #0]
10056c4c:	2801      	cmp	r0, #1
10056c4e:	d104      	bne.n	10056c5a <llc_conn_check_instant_and_set_params+0xc6>
10056c50:	6b71      	ldr	r1, [r6, #52]	@ 0x34
10056c52:	34e0      	adds	r4, #224	@ 0xe0
10056c54:	4620      	mov	r0, r4
10056c56:	f000 ff57 	bl	10057b08 <llc_mngm_csa2_update_remapping_table>
10056c5a:	8870      	ldrh	r0, [r6, #2]
10056c5c:	2120      	movs	r1, #32
10056c5e:	e018      	b.n	10056c92 <llc_conn_check_instant_and_set_params+0xfe>
10056c60:	f7ff f9ca 	bl	10055ff8 <llc_conn_get_cntxt_p>
10056c64:	9b02      	ldr	r3, [sp, #8]
10056c66:	9901      	ldr	r1, [sp, #4]
10056c68:	6361      	str	r1, [r4, #52]	@ 0x34
10056c6a:	6840      	ldr	r0, [r0, #4]
10056c6c:	4298      	cmp	r0, r3
10056c6e:	d300      	bcc.n	10056c72 <llc_conn_check_instant_and_set_params+0xde>
10056c70:	4618      	mov	r0, r3
10056c72:	6520      	str	r0, [r4, #80]	@ 0x50
10056c74:	68f8      	ldr	r0, [r7, #12]
10056c76:	8720      	strh	r0, [r4, #56]	@ 0x38
10056c78:	6938      	ldr	r0, [r7, #16]
10056c7a:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
10056c7c:	180a      	adds	r2, r1, r0
10056c7e:	6662      	str	r2, [r4, #100]	@ 0x64
10056c80:	66a0      	str	r0, [r4, #104]	@ 0x68
10056c82:	4299      	cmp	r1, r3
10056c84:	d003      	beq.n	10056c8e <llc_conn_check_instant_and_set_params+0xfa>
10056c86:	64e3      	str	r3, [r4, #76]	@ 0x4c
10056c88:	4620      	mov	r0, r4
10056c8a:	f005 fe74 	bl	1005c976 <llc_subrate_reset_params>
10056c8e:	8870      	ldrh	r0, [r6, #2]
10056c90:	2108      	movs	r1, #8
10056c92:	4388      	bics	r0, r1
10056c94:	8070      	strh	r0, [r6, #2]
10056c96:	8870      	ldrh	r0, [r6, #2]
10056c98:	2102      	movs	r1, #2
10056c9a:	4301      	orrs	r1, r0
10056c9c:	2001      	movs	r0, #1
10056c9e:	4381      	bics	r1, r0
10056ca0:	8071      	strh	r1, [r6, #2]
10056ca2:	2015      	movs	r0, #21
10056ca4:	f00e fac4 	bl	10065230 <tsk_notify_idx>
10056ca8:	f7eb fe15 	bl	100428d6 <BLE_STACK_ProcessRequest>
10056cac:	7928      	ldrb	r0, [r5, #4]
10056cae:	f008 fdf4 	bl	1005f89a <LL_phy_upd_evt_pending_check_isr_ucfg_weak>
10056cb2:	2000      	movs	r0, #0
10056cb4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10056cb6:	46c0      	nop			@ (mov r8, r8)

10056cb8 <__arm_cp.2_0>:
10056cb8:	0000fbff 	.word	0x0000fbff

10056cbc <llc_conn_check_supervision_timer>:
10056cbc:	6e42      	ldr	r2, [r0, #100]	@ 0x64
10056cbe:	1a51      	subs	r1, r2, r1
10056cc0:	6641      	str	r1, [r0, #100]	@ 0x64
10056cc2:	1e49      	subs	r1, r1, #1
10056cc4:	d401      	bmi.n	10056cca <llc_conn_check_supervision_timer+0xe>
10056cc6:	2000      	movs	r0, #0
10056cc8:	4770      	bx	lr
10056cca:	2188      	movs	r1, #136	@ 0x88
10056ccc:	5c40      	ldrb	r0, [r0, r1]
10056cce:	0680      	lsls	r0, r0, #26
10056cd0:	d501      	bpl.n	10056cd6 <llc_conn_check_supervision_timer+0x1a>
10056cd2:	2008      	movs	r0, #8
10056cd4:	4770      	bx	lr
10056cd6:	203e      	movs	r0, #62	@ 0x3e
10056cd8:	4770      	bx	lr

10056cda <llc_conn_create_connection>:
10056cda:	b5f0      	push	{r4, r5, r6, r7, lr}
10056cdc:	b095      	sub	sp, #84	@ 0x54
10056cde:	460e      	mov	r6, r1
10056ce0:	991c      	ldr	r1, [sp, #112]	@ 0x70
10056ce2:	2401      	movs	r4, #1
10056ce4:	9110      	str	r1, [sp, #64]	@ 0x40
10056ce6:	2900      	cmp	r1, #0
10056ce8:	930a      	str	r3, [sp, #40]	@ 0x28
10056cea:	d001      	beq.n	10056cf0 <llc_conn_create_connection+0x16>
10056cec:	4621      	mov	r1, r4
10056cee:	e000      	b.n	10056cf2 <llc_conn_create_connection+0x18>
10056cf0:	2103      	movs	r1, #3
10056cf2:	2700      	movs	r7, #0
10056cf4:	4291      	cmp	r1, r2
10056cf6:	4621      	mov	r1, r4
10056cf8:	d300      	bcc.n	10056cfc <llc_conn_create_connection+0x22>
10056cfa:	4639      	mov	r1, r7
10056cfc:	9209      	str	r2, [sp, #36]	@ 0x24
10056cfe:	9007      	str	r0, [sp, #28]
10056d00:	2801      	cmp	r0, #1
10056d02:	4620      	mov	r0, r4
10056d04:	d800      	bhi.n	10056d08 <llc_conn_create_connection+0x2e>
10056d06:	4638      	mov	r0, r7
10056d08:	4308      	orrs	r0, r1
10056d0a:	900d      	str	r0, [sp, #52]	@ 0x34
10056d0c:	981a      	ldr	r0, [sp, #104]	@ 0x68
10056d0e:	4602      	mov	r2, r0
10056d10:	4022      	ands	r2, r4
10056d12:	0781      	lsls	r1, r0, #30
10056d14:	0fc9      	lsrs	r1, r1, #31
10056d16:	9208      	str	r2, [sp, #32]
10056d18:	1889      	adds	r1, r1, r2
10056d1a:	0742      	lsls	r2, r0, #29
10056d1c:	9205      	str	r2, [sp, #20]
10056d1e:	0fd2      	lsrs	r2, r2, #31
10056d20:	1889      	adds	r1, r1, r2
10056d22:	910e      	str	r1, [sp, #56]	@ 0x38
10056d24:	9d1b      	ldr	r5, [sp, #108]	@ 0x6c
10056d26:	9506      	str	r5, [sp, #24]
10056d28:	3508      	adds	r5, #8
10056d2a:	900f      	str	r0, [sp, #60]	@ 0x3c
10056d2c:	4601      	mov	r1, r0
10056d2e:	3908      	subs	r1, #8
10056d30:	2219      	movs	r2, #25
10056d32:	01d3      	lsls	r3, r2, #7
10056d34:	b2c8      	uxtb	r0, r1
10056d36:	900c      	str	r0, [sp, #48]	@ 0x30
10056d38:	9311      	str	r3, [sp, #68]	@ 0x44
10056d3a:	07e0      	lsls	r0, r4, #31
10056d3c:	d035      	beq.n	10056daa <llc_conn_create_connection+0xd0>
10056d3e:	2412      	movs	r4, #18
10056d40:	980d      	ldr	r0, [sp, #52]	@ 0x34
10056d42:	2800      	cmp	r0, #0
10056d44:	d000      	beq.n	10056d48 <llc_conn_create_connection+0x6e>
10056d46:	e131      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056d48:	f002 fa4d 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
10056d4c:	2801      	cmp	r0, #1
10056d4e:	d001      	beq.n	10056d54 <llc_conn_create_connection+0x7a>
10056d50:	2001      	movs	r0, #1
10056d52:	e000      	b.n	10056d56 <llc_conn_create_connection+0x7c>
10056d54:	2003      	movs	r0, #3
10056d56:	42b0      	cmp	r0, r6
10056d58:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10056d5a:	d200      	bcs.n	10056d5e <llc_conn_create_connection+0x84>
10056d5c:	e126      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056d5e:	2002      	movs	r0, #2
10056d60:	4330      	orrs	r0, r6
10056d62:	2803      	cmp	r0, #3
10056d64:	d10c      	bne.n	10056d80 <llc_conn_create_connection+0xa6>
10056d66:	960b      	str	r6, [sp, #44]	@ 0x2c
10056d68:	ae12      	add	r6, sp, #72	@ 0x48
10056d6a:	4630      	mov	r0, r6
10056d6c:	f7fe f90a 	bl	10054f84 <Get_Random_Addr>
10056d70:	4630      	mov	r0, r6
10056d72:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10056d74:	f00b fa64 	bl	10062240 <Is_Address_Initialized>
10056d78:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10056d7a:	2800      	cmp	r0, #0
10056d7c:	d100      	bne.n	10056d80 <llc_conn_create_connection+0xa6>
10056d7e:	e115      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056d80:	980f      	ldr	r0, [sp, #60]	@ 0x3c
10056d82:	2801      	cmp	r0, #1
10056d84:	d011      	beq.n	10056daa <llc_conn_create_connection+0xd0>
10056d86:	980c      	ldr	r0, [sp, #48]	@ 0x30
10056d88:	28f9      	cmp	r0, #249	@ 0xf9
10056d8a:	d301      	bcc.n	10056d90 <llc_conn_create_connection+0xb6>
10056d8c:	2400      	movs	r4, #0
10056d8e:	e000      	b.n	10056d92 <llc_conn_create_connection+0xb8>
10056d90:	2401      	movs	r4, #1
10056d92:	f7fe fc47 	bl	10055624 <phy_upd_csr_ucfg_weak>
10056d96:	4241      	negs	r1, r0
10056d98:	4141      	adcs	r1, r0
10056d9a:	4321      	orrs	r1, r4
10056d9c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10056d9e:	d000      	beq.n	10056da2 <llc_conn_create_connection+0xc8>
10056da0:	e0ff      	b.n	10056fa2 <llc_conn_create_connection+0x2c8>
10056da2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
10056da4:	2802      	cmp	r0, #2
10056da6:	d100      	bne.n	10056daa <llc_conn_create_connection+0xd0>
10056da8:	e0fb      	b.n	10056fa2 <llc_conn_create_connection+0x2c8>
10056daa:	4628      	mov	r0, r5
10056dac:	3808      	subs	r0, #8
10056dae:	8800      	ldrh	r0, [r0, #0]
10056db0:	9910      	ldr	r1, [sp, #64]	@ 0x40
10056db2:	2900      	cmp	r1, #0
10056db4:	d10a      	bne.n	10056dcc <llc_conn_create_connection+0xf2>
10056db6:	2101      	movs	r1, #1
10056db8:	0389      	lsls	r1, r1, #14
10056dba:	2412      	movs	r4, #18
10056dbc:	4288      	cmp	r0, r1
10056dbe:	d900      	bls.n	10056dc2 <llc_conn_create_connection+0xe8>
10056dc0:	e0f4      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056dc2:	1faa      	subs	r2, r5, #6
10056dc4:	8812      	ldrh	r2, [r2, #0]
10056dc6:	428a      	cmp	r2, r1
10056dc8:	d900      	bls.n	10056dcc <llc_conn_create_connection+0xf2>
10056dca:	e0ef      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056dcc:	2412      	movs	r4, #18
10056dce:	2804      	cmp	r0, #4
10056dd0:	d200      	bcs.n	10056dd4 <llc_conn_create_connection+0xfa>
10056dd2:	e0eb      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056dd4:	1fa9      	subs	r1, r5, #6
10056dd6:	8809      	ldrh	r1, [r1, #0]
10056dd8:	2904      	cmp	r1, #4
10056dda:	d200      	bcs.n	10056dde <llc_conn_create_connection+0x104>
10056ddc:	e0e6      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056dde:	4281      	cmp	r1, r0
10056de0:	d900      	bls.n	10056de4 <llc_conn_create_connection+0x10a>
10056de2:	e0e3      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056de4:	1f28      	subs	r0, r5, #4
10056de6:	8801      	ldrh	r1, [r0, #0]
10056de8:	2906      	cmp	r1, #6
10056dea:	d200      	bcs.n	10056dee <llc_conn_create_connection+0x114>
10056dec:	e0de      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056dee:	4299      	cmp	r1, r3
10056df0:	d900      	bls.n	10056df4 <llc_conn_create_connection+0x11a>
10056df2:	e0db      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056df4:	1ea8      	subs	r0, r5, #2
10056df6:	8800      	ldrh	r0, [r0, #0]
10056df8:	2806      	cmp	r0, #6
10056dfa:	d200      	bcs.n	10056dfe <llc_conn_create_connection+0x124>
10056dfc:	e0d6      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056dfe:	4298      	cmp	r0, r3
10056e00:	d900      	bls.n	10056e04 <llc_conn_create_connection+0x12a>
10056e02:	e0d3      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e04:	4281      	cmp	r1, r0
10056e06:	d900      	bls.n	10056e0a <llc_conn_create_connection+0x130>
10056e08:	e0d0      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e0a:	8829      	ldrh	r1, [r5, #0]
10056e0c:	088a      	lsrs	r2, r1, #2
10056e0e:	2a7c      	cmp	r2, #124	@ 0x7c
10056e10:	d900      	bls.n	10056e14 <llc_conn_create_connection+0x13a>
10056e12:	e0cb      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e14:	886a      	ldrh	r2, [r5, #2]
10056e16:	2a0a      	cmp	r2, #10
10056e18:	d200      	bcs.n	10056e1c <llc_conn_create_connection+0x142>
10056e1a:	e0c7      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e1c:	429a      	cmp	r2, r3
10056e1e:	d900      	bls.n	10056e22 <llc_conn_create_connection+0x148>
10056e20:	e0c4      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e22:	1c49      	adds	r1, r1, #1
10056e24:	4348      	muls	r0, r1
10056e26:	0880      	lsrs	r0, r0, #2
10056e28:	4282      	cmp	r2, r0
10056e2a:	d800      	bhi.n	10056e2e <llc_conn_create_connection+0x154>
10056e2c:	e0be      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e2e:	88e8      	ldrh	r0, [r5, #6]
10056e30:	88a9      	ldrh	r1, [r5, #4]
10056e32:	4281      	cmp	r1, r0
10056e34:	d900      	bls.n	10056e38 <llc_conn_create_connection+0x15e>
10056e36:	e0b9      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e38:	3510      	adds	r5, #16
10056e3a:	1c7f      	adds	r7, r7, #1
10056e3c:	2400      	movs	r4, #0
10056e3e:	980e      	ldr	r0, [sp, #56]	@ 0x38
10056e40:	4287      	cmp	r7, r0
10056e42:	d200      	bcs.n	10056e46 <llc_conn_create_connection+0x16c>
10056e44:	e779      	b.n	10056d3a <llc_conn_create_connection+0x60>
10056e46:	2700      	movs	r7, #0
10056e48:	9712      	str	r7, [sp, #72]	@ 0x48
10056e4a:	a812      	add	r0, sp, #72	@ 0x48
10056e4c:	9909      	ldr	r1, [sp, #36]	@ 0x24
10056e4e:	7001      	strb	r1, [r0, #0]
10056e50:	9713      	str	r7, [sp, #76]	@ 0x4c
10056e52:	1c40      	adds	r0, r0, #1
10056e54:	2206      	movs	r2, #6
10056e56:	990a      	ldr	r1, [sp, #40]	@ 0x28
10056e58:	f7ed fda4 	bl	100449a4 <BLEPLAT_MemCpy>
10056e5c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
10056e5e:	9812      	ldr	r0, [sp, #72]	@ 0x48
10056e60:	f7ff fc3c 	bl	100566dc <llc_conn_list_search_address>
10056e64:	2801      	cmp	r0, #1
10056e66:	d101      	bne.n	10056e6c <llc_conn_create_connection+0x192>
10056e68:	240b      	movs	r4, #11
10056e6a:	e09f      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e6c:	f004 fc22 	bl	1005b6b4 <llc_scan_get_cntxt_p>
10056e70:	4605      	mov	r5, r0
10056e72:	20eb      	movs	r0, #235	@ 0xeb
10056e74:	5c28      	ldrb	r0, [r5, r0]
10056e76:	240c      	movs	r4, #12
10056e78:	07c0      	lsls	r0, r0, #31
10056e7a:	d000      	beq.n	10056e7e <llc_conn_create_connection+0x1a4>
10056e7c:	e096      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e7e:	9710      	str	r7, [sp, #64]	@ 0x40
10056e80:	462f      	mov	r7, r5
10056e82:	37b0      	adds	r7, #176	@ 0xb0
10056e84:	f000 fc86 	bl	10057794 <llc_conn_reserve_conn_idx>
10056e88:	9711      	str	r7, [sp, #68]	@ 0x44
10056e8a:	7038      	strb	r0, [r7, #0]
10056e8c:	28ff      	cmp	r0, #255	@ 0xff
10056e8e:	d100      	bne.n	10056e92 <llc_conn_create_connection+0x1b8>
10056e90:	e08c      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056e92:	4628      	mov	r0, r5
10056e94:	306c      	adds	r0, #108	@ 0x6c
10056e96:	900e      	str	r0, [sp, #56]	@ 0x38
10056e98:	4628      	mov	r0, r5
10056e9a:	30ea      	adds	r0, #234	@ 0xea
10056e9c:	9004      	str	r0, [sp, #16]
10056e9e:	950c      	str	r5, [sp, #48]	@ 0x30
10056ea0:	9f06      	ldr	r7, [sp, #24]
10056ea2:	89b8      	ldrh	r0, [r7, #12]
10056ea4:	9003      	str	r0, [sp, #12]
10056ea6:	89f8      	ldrh	r0, [r7, #14]
10056ea8:	9002      	str	r0, [sp, #8]
10056eaa:	893c      	ldrh	r4, [r7, #8]
10056eac:	897b      	ldrh	r3, [r7, #10]
10056eae:	88ba      	ldrh	r2, [r7, #4]
10056eb0:	88f9      	ldrh	r1, [r7, #6]
10056eb2:	8838      	ldrh	r0, [r7, #0]
10056eb4:	960b      	str	r6, [sp, #44]	@ 0x2c
10056eb6:	887e      	ldrh	r6, [r7, #2]
10056eb8:	2501      	movs	r5, #1
10056eba:	950d      	str	r5, [sp, #52]	@ 0x34
10056ebc:	9500      	str	r5, [sp, #0]
10056ebe:	0436      	lsls	r6, r6, #16
10056ec0:	1830      	adds	r0, r6, r0
10056ec2:	0409      	lsls	r1, r1, #16
10056ec4:	1889      	adds	r1, r1, r2
10056ec6:	041a      	lsls	r2, r3, #16
10056ec8:	1912      	adds	r2, r2, r4
10056eca:	9b02      	ldr	r3, [sp, #8]
10056ecc:	041b      	lsls	r3, r3, #16
10056ece:	9c03      	ldr	r4, [sp, #12]
10056ed0:	191b      	adds	r3, r3, r4
10056ed2:	f005 fc4a 	bl	1005c76a <llc_scan_set_conn_params>
10056ed6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10056ed8:	0868      	lsrs	r0, r5, #1
10056eda:	9908      	ldr	r1, [sp, #32]
10056edc:	4008      	ands	r0, r1
10056ede:	0100      	lsls	r0, r0, #4
10056ee0:	1839      	adds	r1, r7, r0
10056ee2:	898a      	ldrh	r2, [r1, #12]
10056ee4:	9203      	str	r2, [sp, #12]
10056ee6:	89ca      	ldrh	r2, [r1, #14]
10056ee8:	9202      	str	r2, [sp, #8]
10056eea:	890a      	ldrh	r2, [r1, #8]
10056eec:	9201      	str	r2, [sp, #4]
10056eee:	894e      	ldrh	r6, [r1, #10]
10056ef0:	888b      	ldrh	r3, [r1, #4]
10056ef2:	88ca      	ldrh	r2, [r1, #6]
10056ef4:	5a38      	ldrh	r0, [r7, r0]
10056ef6:	8849      	ldrh	r1, [r1, #2]
10056ef8:	2402      	movs	r4, #2
10056efa:	9400      	str	r4, [sp, #0]
10056efc:	0409      	lsls	r1, r1, #16
10056efe:	1808      	adds	r0, r1, r0
10056f00:	0411      	lsls	r1, r2, #16
10056f02:	18c9      	adds	r1, r1, r3
10056f04:	0432      	lsls	r2, r6, #16
10056f06:	9b01      	ldr	r3, [sp, #4]
10056f08:	18d2      	adds	r2, r2, r3
10056f0a:	9b02      	ldr	r3, [sp, #8]
10056f0c:	041b      	lsls	r3, r3, #16
10056f0e:	9e03      	ldr	r6, [sp, #12]
10056f10:	199b      	adds	r3, r3, r6
10056f12:	f7f7 fe77 	bl	1004ec04 <llc_scan_set_conn_params_ucfg>
10056f16:	402c      	ands	r4, r5
10056f18:	0860      	lsrs	r0, r4, #1
10056f1a:	9908      	ldr	r1, [sp, #32]
10056f1c:	1808      	adds	r0, r1, r0
10056f1e:	9905      	ldr	r1, [sp, #20]
10056f20:	17c9      	asrs	r1, r1, #31
10056f22:	4001      	ands	r1, r0
10056f24:	0108      	lsls	r0, r1, #4
10056f26:	1839      	adds	r1, r7, r0
10056f28:	898a      	ldrh	r2, [r1, #12]
10056f2a:	9208      	str	r2, [sp, #32]
10056f2c:	89ca      	ldrh	r2, [r1, #14]
10056f2e:	9205      	str	r2, [sp, #20]
10056f30:	890a      	ldrh	r2, [r1, #8]
10056f32:	9203      	str	r2, [sp, #12]
10056f34:	894e      	ldrh	r6, [r1, #10]
10056f36:	888b      	ldrh	r3, [r1, #4]
10056f38:	88ca      	ldrh	r2, [r1, #6]
10056f3a:	5a38      	ldrh	r0, [r7, r0]
10056f3c:	8849      	ldrh	r1, [r1, #2]
10056f3e:	2404      	movs	r4, #4
10056f40:	9400      	str	r4, [sp, #0]
10056f42:	0409      	lsls	r1, r1, #16
10056f44:	1808      	adds	r0, r1, r0
10056f46:	0411      	lsls	r1, r2, #16
10056f48:	18c9      	adds	r1, r1, r3
10056f4a:	0432      	lsls	r2, r6, #16
10056f4c:	9b03      	ldr	r3, [sp, #12]
10056f4e:	18d2      	adds	r2, r2, r3
10056f50:	9b05      	ldr	r3, [sp, #20]
10056f52:	041b      	lsls	r3, r3, #16
10056f54:	9c08      	ldr	r4, [sp, #32]
10056f56:	191b      	adds	r3, r3, r4
10056f58:	f7f7 fe54 	bl	1004ec04 <llc_scan_set_conn_params_ucfg>
10056f5c:	9904      	ldr	r1, [sp, #16]
10056f5e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10056f60:	70c8      	strb	r0, [r1, #3]
10056f62:	718d      	strb	r5, [r1, #6]
10056f64:	9807      	ldr	r0, [sp, #28]
10056f66:	9a11      	ldr	r2, [sp, #68]	@ 0x44
10056f68:	7050      	strb	r0, [r2, #1]
10056f6a:	7008      	strb	r0, [r1, #0]
10056f6c:	460c      	mov	r4, r1
10056f6e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
10056f70:	7095      	strb	r5, [r2, #2]
10056f72:	980c      	ldr	r0, [sp, #48]	@ 0x30
10056f74:	66c5      	str	r5, [r0, #108]	@ 0x6c
10056f76:	6705      	str	r5, [r0, #112]	@ 0x70
10056f78:	9809      	ldr	r0, [sp, #36]	@ 0x24
10056f7a:	990e      	ldr	r1, [sp, #56]	@ 0x38
10056f7c:	7008      	strb	r0, [r1, #0]
10056f7e:	1c48      	adds	r0, r1, #1
10056f80:	2206      	movs	r2, #6
10056f82:	990a      	ldr	r1, [sp, #40]	@ 0x28
10056f84:	f7ed fd0e 	bl	100449a4 <BLEPLAT_MemCpy>
10056f88:	a812      	add	r0, sp, #72	@ 0x48
10056f8a:	990d      	ldr	r1, [sp, #52]	@ 0x34
10056f8c:	8101      	strh	r1, [r0, #8]
10056f8e:	7861      	ldrb	r1, [r4, #1]
10056f90:	0789      	lsls	r1, r1, #30
10056f92:	0fc9      	lsrs	r1, r1, #31
10056f94:	7281      	strb	r1, [r0, #10]
10056f96:	9513      	str	r5, [sp, #76]	@ 0x4c
10056f98:	9512      	str	r5, [sp, #72]	@ 0x48
10056f9a:	f005 f889 	bl	1005c0b0 <llc_scan_enable>
10056f9e:	4604      	mov	r4, r0
10056fa0:	e004      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056fa2:	2900      	cmp	r1, #0
10056fa4:	d101      	bne.n	10056faa <llc_conn_create_connection+0x2d0>
10056fa6:	2412      	movs	r4, #18
10056fa8:	e000      	b.n	10056fac <llc_conn_create_connection+0x2d2>
10056faa:	2411      	movs	r4, #17
10056fac:	4620      	mov	r0, r4
10056fae:	b015      	add	sp, #84	@ 0x54
10056fb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10056fb4 <llc_conn_create_connection_cancel>:
10056fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
10056fb6:	b089      	sub	sp, #36	@ 0x24
10056fb8:	a802      	add	r0, sp, #8
10056fba:	2102      	movs	r1, #2
10056fbc:	7681      	strb	r1, [r0, #26]
10056fbe:	2400      	movs	r4, #0
10056fc0:	8304      	strh	r4, [r0, #24]
10056fc2:	4668      	mov	r0, sp
10056fc4:	8084      	strh	r4, [r0, #4]
10056fc6:	9004      	str	r0, [sp, #16]
10056fc8:	9003      	str	r0, [sp, #12]
10056fca:	9002      	str	r0, [sp, #8]
10056fcc:	481f      	ldr	r0, [pc, #124]	@ (1005704c <__arm_cp.6_0>)
10056fce:	9007      	str	r0, [sp, #28]
10056fd0:	9406      	str	r4, [sp, #24]
10056fd2:	9405      	str	r4, [sp, #20]
10056fd4:	9400      	str	r4, [sp, #0]
10056fd6:	f004 fb6d 	bl	1005b6b4 <llc_scan_get_cntxt_p>
10056fda:	4605      	mov	r5, r0
10056fdc:	f3ef 8010 	mrs	r0, PRIMASK
10056fe0:	b672      	cpsid	i
10056fe2:	20b2      	movs	r0, #178	@ 0xb2
10056fe4:	5c28      	ldrb	r0, [r5, r0]
10056fe6:	2800      	cmp	r0, #0
10056fe8:	d104      	bne.n	10056ff4 <llc_conn_create_connection_cancel+0x40>
10056fea:	4628      	mov	r0, r5
10056fec:	30eb      	adds	r0, #235	@ 0xeb
10056fee:	7800      	ldrb	r0, [r0, #0]
10056ff0:	07c0      	lsls	r0, r0, #31
10056ff2:	d11c      	bne.n	1005702e <llc_conn_create_connection_cancel+0x7a>
10056ff4:	b662      	cpsie	i
10056ff6:	43e6      	mvns	r6, r4
10056ff8:	f00b f962 	bl	100622c0 <llc_get_linkms_cntxt_p>
10056ffc:	4605      	mov	r5, r0
10056ffe:	6800      	ldr	r0, [r0, #0]
10057000:	354d      	adds	r5, #77	@ 0x4d
10057002:	30be      	adds	r0, #190	@ 0xbe
10057004:	1c76      	adds	r6, r6, #1
10057006:	7829      	ldrb	r1, [r5, #0]
10057008:	428e      	cmp	r6, r1
1005700a:	d20e      	bcs.n	1005702a <llc_conn_create_connection_cancel+0x76>
1005700c:	2101      	movs	r1, #1
1005700e:	0209      	lsls	r1, r1, #8
10057010:	1847      	adds	r7, r0, r1
10057012:	7801      	ldrb	r1, [r0, #0]
10057014:	2400      	movs	r4, #0
10057016:	4620      	mov	r0, r4
10057018:	f7f7 fb9e 	bl	1004e758 <llc_padv_wr_create_connection_cancel_ucfg>
1005701c:	2800      	cmp	r0, #0
1005701e:	4638      	mov	r0, r7
10057020:	d0f0      	beq.n	10057004 <llc_conn_create_connection_cancel+0x50>
10057022:	a802      	add	r0, sp, #8
10057024:	f7ff fbba 	bl	1005679c <llc_conn_push_connection_complete_event>
10057028:	e00d      	b.n	10057046 <llc_conn_create_connection_cancel+0x92>
1005702a:	240c      	movs	r4, #12
1005702c:	e00b      	b.n	10057046 <llc_conn_create_connection_cancel+0x92>
1005702e:	462e      	mov	r6, r5
10057030:	36b0      	adds	r6, #176	@ 0xb0
10057032:	b662      	cpsie	i
10057034:	a802      	add	r0, sp, #8
10057036:	f7ff fbb1 	bl	1005679c <llc_conn_push_connection_complete_event>
1005703a:	7830      	ldrb	r0, [r6, #0]
1005703c:	f000 f808 	bl	10057050 <llc_conn_release_conn_idx>
10057040:	4628      	mov	r0, r5
10057042:	f7f7 fdf6 	bl	1004ec32 <llc_scan_disable_ucfg>
10057046:	4620      	mov	r0, r4
10057048:	b009      	add	sp, #36	@ 0x24
1005704a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005704c <__arm_cp.6_0>:
1005704c:	00ffffff 	.word	0x00ffffff

10057050 <llc_conn_release_conn_idx>:
10057050:	b580      	push	{r7, lr}
10057052:	f7fe ffdb 	bl	1005600c <llc_conn_get_cntxt_per_p>
10057056:	212c      	movs	r1, #44	@ 0x2c
10057058:	2200      	movs	r2, #0
1005705a:	5442      	strb	r2, [r0, r1]
1005705c:	bd80      	pop	{r7, pc}

1005705e <llc_conn_disconnect_link_from_cpf>:
1005705e:	b510      	push	{r4, lr}
10057060:	4604      	mov	r4, r0
10057062:	202d      	movs	r0, #45	@ 0x2d
10057064:	5421      	strb	r1, [r4, r0]
10057066:	342d      	adds	r4, #45	@ 0x2d
10057068:	7d20      	ldrb	r0, [r4, #20]
1005706a:	f00b fcd7 	bl	10062a1c <LL_sched_delete_taskslot>
1005706e:	7d20      	ldrb	r0, [r4, #20]
10057070:	f00b fd30 	bl	10062ad4 <LL_sched_check_and_wait_sched>
10057074:	bd10      	pop	{r4, pc}
	...

10057078 <llc_conn_go_to_connect>:
10057078:	b5f0      	push	{r4, r5, r6, r7, lr}
1005707a:	b0ad      	sub	sp, #180	@ 0xb4
1005707c:	4605      	mov	r5, r0
1005707e:	7ac0      	ldrb	r0, [r0, #11]
10057080:	f7fe ffc4 	bl	1005600c <llc_conn_get_cntxt_per_p>
10057084:	4606      	mov	r6, r0
10057086:	f7fe ffb7 	bl	10055ff8 <llc_conn_get_cntxt_p>
1005708a:	9020      	str	r0, [sp, #128]	@ 0x80
1005708c:	682c      	ldr	r4, [r5, #0]
1005708e:	2023      	movs	r0, #35	@ 0x23
10057090:	5c20      	ldrb	r0, [r4, r0]
10057092:	9018      	str	r0, [sp, #96]	@ 0x60
10057094:	7d60      	ldrb	r0, [r4, #21]
10057096:	9011      	str	r0, [sp, #68]	@ 0x44
10057098:	7820      	ldrb	r0, [r4, #0]
1005709a:	901d      	str	r0, [sp, #116]	@ 0x74
1005709c:	7ba0      	ldrb	r0, [r4, #14]
1005709e:	9021      	str	r0, [sp, #132]	@ 0x84
100570a0:	7be0      	ldrb	r0, [r4, #15]
100570a2:	900e      	str	r0, [sp, #56]	@ 0x38
100570a4:	7c20      	ldrb	r0, [r4, #16]
100570a6:	9019      	str	r0, [sp, #100]	@ 0x64
100570a8:	7c60      	ldrb	r0, [r4, #17]
100570aa:	901b      	str	r0, [sp, #108]	@ 0x6c
100570ac:	7ca0      	ldrb	r0, [r4, #18]
100570ae:	901c      	str	r0, [sp, #112]	@ 0x70
100570b0:	7ce0      	ldrb	r0, [r4, #19]
100570b2:	9014      	str	r0, [sp, #80]	@ 0x50
100570b4:	7d20      	ldrb	r0, [r4, #20]
100570b6:	9017      	str	r0, [sp, #92]	@ 0x5c
100570b8:	7da0      	ldrb	r0, [r4, #22]
100570ba:	9009      	str	r0, [sp, #36]	@ 0x24
100570bc:	7de0      	ldrb	r0, [r4, #23]
100570be:	9010      	str	r0, [sp, #64]	@ 0x40
100570c0:	7e20      	ldrb	r0, [r4, #24]
100570c2:	9016      	str	r0, [sp, #88]	@ 0x58
100570c4:	7e60      	ldrb	r0, [r4, #25]
100570c6:	900a      	str	r0, [sp, #40]	@ 0x28
100570c8:	7ea0      	ldrb	r0, [r4, #26]
100570ca:	9012      	str	r0, [sp, #72]	@ 0x48
100570cc:	7ee0      	ldrb	r0, [r4, #27]
100570ce:	900c      	str	r0, [sp, #48]	@ 0x30
100570d0:	7f20      	ldrb	r0, [r4, #28]
100570d2:	9015      	str	r0, [sp, #84]	@ 0x54
100570d4:	7f60      	ldrb	r0, [r4, #29]
100570d6:	900b      	str	r0, [sp, #44]	@ 0x2c
100570d8:	7ba8      	ldrb	r0, [r5, #14]
100570da:	f7ef f8f1 	bl	100462c0 <BLEPLAT_CNTR_SmGetTxPhy>
100570de:	901f      	str	r0, [sp, #124]	@ 0x7c
100570e0:	f00a fba6 	bl	10061830 <llc_get_channel_sel_algo2_enabled>
100570e4:	900d      	str	r0, [sp, #52]	@ 0x34
100570e6:	2094      	movs	r0, #148	@ 0x94
100570e8:	5830      	ldr	r0, [r6, r0]
100570ea:	2300      	movs	r3, #0
100570ec:	6003      	str	r3, [r0, #0]
100570ee:	2090      	movs	r0, #144	@ 0x90
100570f0:	5830      	ldr	r0, [r6, r0]
100570f2:	6003      	str	r3, [r0, #0]
100570f4:	20a8      	movs	r0, #168	@ 0xa8
100570f6:	5233      	strh	r3, [r6, r0]
100570f8:	2042      	movs	r0, #66	@ 0x42
100570fa:	5233      	strh	r3, [r6, r0]
100570fc:	202d      	movs	r0, #45	@ 0x2d
100570fe:	5433      	strb	r3, [r6, r0]
10057100:	2045      	movs	r0, #69	@ 0x45
10057102:	0080      	lsls	r0, r0, #2
10057104:	5033      	str	r3, [r6, r0]
10057106:	2111      	movs	r1, #17
10057108:	0109      	lsls	r1, r1, #4
1005710a:	5473      	strb	r3, [r6, r1]
1005710c:	2121      	movs	r1, #33	@ 0x21
1005710e:	00c9      	lsls	r1, r1, #3
10057110:	227f      	movs	r2, #127	@ 0x7f
10057112:	5472      	strb	r2, [r6, r1]
10057114:	212f      	movs	r1, #47	@ 0x2f
10057116:	2207      	movs	r2, #7
10057118:	5472      	strb	r2, [r6, r1]
1005711a:	2188      	movs	r1, #136	@ 0x88
1005711c:	5073      	str	r3, [r6, r1]
1005711e:	218c      	movs	r1, #140	@ 0x8c
10057120:	5073      	str	r3, [r6, r1]
10057122:	4631      	mov	r1, r6
10057124:	31a8      	adds	r1, #168	@ 0xa8
10057126:	810b      	strh	r3, [r1, #8]
10057128:	9122      	str	r1, [sp, #136]	@ 0x88
1005712a:	728b      	strb	r3, [r1, #10]
1005712c:	1830      	adds	r0, r6, r0
1005712e:	931e      	str	r3, [sp, #120]	@ 0x78
10057130:	900f      	str	r0, [sp, #60]	@ 0x3c
10057132:	6043      	str	r3, [r0, #4]
10057134:	2701      	movs	r7, #1
10057136:	8537      	strh	r7, [r6, #40]	@ 0x28
10057138:	9523      	str	r5, [sp, #140]	@ 0x8c
1005713a:	7ba8      	ldrb	r0, [r5, #14]
1005713c:	2141      	movs	r1, #65	@ 0x41
1005713e:	5470      	strb	r0, [r6, r1]
10057140:	201f      	movs	r0, #31
10057142:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10057144:	9008      	str	r0, [sp, #32]
10057146:	4002      	ands	r2, r0
10057148:	7ae8      	ldrb	r0, [r5, #11]
1005714a:	2131      	movs	r1, #49	@ 0x31
1005714c:	921a      	str	r2, [sp, #104]	@ 0x68
1005714e:	5472      	strb	r2, [r6, r1]
10057150:	2130      	movs	r1, #48	@ 0x30
10057152:	9113      	str	r1, [sp, #76]	@ 0x4c
10057154:	5470      	strb	r0, [r6, r1]
10057156:	980a      	ldr	r0, [sp, #40]	@ 0x28
10057158:	0200      	lsls	r0, r0, #8
1005715a:	9916      	ldr	r1, [sp, #88]	@ 0x58
1005715c:	1840      	adds	r0, r0, r1
1005715e:	9016      	str	r0, [sp, #88]	@ 0x58
10057160:	b280      	uxth	r0, r0
10057162:	0241      	lsls	r1, r0, #9
10057164:	64f1      	str	r1, [r6, #76]	@ 0x4c
10057166:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10057168:	0209      	lsls	r1, r1, #8
1005716a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1005716c:	1889      	adds	r1, r1, r2
1005716e:	9115      	str	r1, [sp, #84]	@ 0x54
10057170:	b289      	uxth	r1, r1
10057172:	0309      	lsls	r1, r1, #12
10057174:	2203      	movs	r2, #3
10057176:	920b      	str	r2, [sp, #44]	@ 0x2c
10057178:	0292      	lsls	r2, r2, #10
1005717a:	4342      	muls	r2, r0
1005717c:	6672      	str	r2, [r6, #100]	@ 0x64
1005717e:	66b1      	str	r1, [r6, #104]	@ 0x68
10057180:	9814      	ldr	r0, [sp, #80]	@ 0x50
10057182:	0200      	lsls	r0, r0, #8
10057184:	991c      	ldr	r1, [sp, #112]	@ 0x70
10057186:	1840      	adds	r0, r0, r1
10057188:	9917      	ldr	r1, [sp, #92]	@ 0x5c
1005718a:	0409      	lsls	r1, r1, #16
1005718c:	1840      	adds	r0, r0, r1
1005718e:	9017      	str	r0, [sp, #92]	@ 0x5c
10057190:	6570      	str	r0, [r6, #84]	@ 0x54
10057192:	980c      	ldr	r0, [sp, #48]	@ 0x30
10057194:	0200      	lsls	r0, r0, #8
10057196:	9912      	ldr	r1, [sp, #72]	@ 0x48
10057198:	1840      	adds	r0, r0, r1
1005719a:	9012      	str	r0, [sp, #72]	@ 0x48
1005719c:	8730      	strh	r0, [r6, #56]	@ 0x38
1005719e:	25ff      	movs	r5, #255	@ 0xff
100571a0:	950c      	str	r5, [sp, #48]	@ 0x30
100571a2:	3512      	adds	r5, #18
100571a4:	f00b f894 	bl	100622d0 <llc_get_next_free_conn_handle>
100571a8:	971c      	str	r7, [sp, #112]	@ 0x70
100571aa:	5577      	strb	r7, [r6, r5]
100571ac:	9f23      	ldr	r7, [sp, #140]	@ 0x8c
100571ae:	8770      	strh	r0, [r6, #58]	@ 0x3a
100571b0:	207d      	movs	r0, #125	@ 0x7d
100571b2:	0440      	lsls	r0, r0, #17
100571b4:	66f0      	str	r0, [r6, #108]	@ 0x6c
100571b6:	6730      	str	r0, [r6, #112]	@ 0x70
100571b8:	2083      	movs	r0, #131	@ 0x83
100571ba:	0040      	lsls	r0, r0, #1
100571bc:	1833      	adds	r3, r6, r0
100571be:	980e      	ldr	r0, [sp, #56]	@ 0x38
100571c0:	0200      	lsls	r0, r0, #8
100571c2:	9921      	ldr	r1, [sp, #132]	@ 0x84
100571c4:	1840      	adds	r0, r0, r1
100571c6:	9919      	ldr	r1, [sp, #100]	@ 0x64
100571c8:	0409      	lsls	r1, r1, #16
100571ca:	1840      	adds	r0, r0, r1
100571cc:	991b      	ldr	r1, [sp, #108]	@ 0x6c
100571ce:	0609      	lsls	r1, r1, #24
100571d0:	1840      	adds	r0, r0, r1
100571d2:	9019      	str	r0, [sp, #100]	@ 0x64
100571d4:	4632      	mov	r2, r6
100571d6:	322c      	adds	r2, #44	@ 0x2c
100571d8:	341e      	adds	r4, #30
100571da:	941b      	str	r4, [sp, #108]	@ 0x6c
100571dc:	980d      	ldr	r0, [sp, #52]	@ 0x34
100571de:	2801      	cmp	r0, #1
100571e0:	9221      	str	r2, [sp, #132]	@ 0x84
100571e2:	9314      	str	r3, [sp, #80]	@ 0x50
100571e4:	d106      	bne.n	100571f4 <llc_conn_go_to_connect+0x17c>
100571e6:	7c38      	ldrb	r0, [r7, #16]
100571e8:	2801      	cmp	r0, #1
100571ea:	d103      	bne.n	100571f4 <llc_conn_go_to_connect+0x17c>
100571ec:	2020      	movs	r0, #32
100571ee:	991d      	ldr	r1, [sp, #116]	@ 0x74
100571f0:	4008      	ands	r0, r1
100571f2:	d104      	bne.n	100571fe <llc_conn_go_to_connect+0x186>
100571f4:	7b38      	ldrb	r0, [r7, #12]
100571f6:	21fe      	movs	r1, #254	@ 0xfe
100571f8:	4001      	ands	r1, r0
100571fa:	2902      	cmp	r1, #2
100571fc:	d11b      	bne.n	10057236 <llc_conn_go_to_connect+0x1be>
100571fe:	2001      	movs	r0, #1
10057200:	7018      	strb	r0, [r3, #0]
10057202:	7bb8      	ldrb	r0, [r7, #14]
10057204:	9c1b      	ldr	r4, [sp, #108]	@ 0x6c
10057206:	4621      	mov	r1, r4
10057208:	f7ef f8c0 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
1005720c:	4635      	mov	r5, r6
1005720e:	35e0      	adds	r5, #224	@ 0xe0
10057210:	4628      	mov	r0, r5
10057212:	4621      	mov	r1, r4
10057214:	f000 fc78 	bl	10057b08 <llc_mngm_csa2_update_remapping_table>
10057218:	9821      	ldr	r0, [sp, #132]	@ 0x84
1005721a:	7d40      	ldrb	r0, [r0, #21]
1005721c:	2200      	movs	r2, #0
1005721e:	9200      	str	r2, [sp, #0]
10057220:	9919      	ldr	r1, [sp, #100]	@ 0x64
10057222:	9101      	str	r1, [sp, #4]
10057224:	9202      	str	r2, [sp, #8]
10057226:	4629      	mov	r1, r5
10057228:	921a      	str	r2, [sp, #104]	@ 0x68
1005722a:	4613      	mov	r3, r2
1005722c:	f000 fc87 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
10057230:	9a21      	ldr	r2, [sp, #132]	@ 0x84
10057232:	901e      	str	r0, [sp, #120]	@ 0x78
10057234:	e001      	b.n	1005723a <llc_conn_go_to_connect+0x1c2>
10057236:	981e      	ldr	r0, [sp, #120]	@ 0x78
10057238:	7018      	strb	r0, [r3, #0]
1005723a:	209f      	movs	r0, #159	@ 0x9f
1005723c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
1005723e:	7788      	strb	r0, [r1, #30]
10057240:	48f5      	ldr	r0, [pc, #980]	@ (10057618 <__arm_cp.10_0>)
10057242:	8388      	strh	r0, [r1, #28]
10057244:	48f5      	ldr	r0, [pc, #980]	@ (1005761c <__arm_cp.10_1>)
10057246:	8348      	strh	r0, [r1, #26]
10057248:	6e10      	ldr	r0, [r2, #96]	@ 0x60
1005724a:	991c      	ldr	r1, [sp, #112]	@ 0x70
1005724c:	4388      	bics	r0, r1
1005724e:	6610      	str	r0, [r2, #96]	@ 0x60
10057250:	7af8      	ldrb	r0, [r7, #11]
10057252:	f008 fb20 	bl	1005f896 <LL_phy_update_init_per_st_data_ucfg_weak>
10057256:	2029      	movs	r0, #41	@ 0x29
10057258:	00c5      	lsls	r5, r0, #3
1005725a:	20a9      	movs	r0, #169	@ 0xa9
1005725c:	0107      	lsls	r7, r0, #4
1005725e:	f7fe f913 	bl	10055488 <data_length_extension_csr_ucfg_weak>
10057262:	2801      	cmp	r0, #1
10057264:	9c1f      	ldr	r4, [sp, #124]	@ 0x7c
10057266:	d117      	bne.n	10057298 <llc_conn_go_to_connect+0x220>
10057268:	9820      	ldr	r0, [sp, #128]	@ 0x80
1005726a:	8980      	ldrh	r0, [r0, #12]
1005726c:	281b      	cmp	r0, #27
1005726e:	d10e      	bne.n	1005728e <llc_conn_go_to_connect+0x216>
10057270:	2c04      	cmp	r4, #4
10057272:	d108      	bne.n	10057286 <llc_conn_go_to_connect+0x20e>
10057274:	9820      	ldr	r0, [sp, #128]	@ 0x80
10057276:	8a40      	ldrh	r0, [r0, #18]
10057278:	42b8      	cmp	r0, r7
1005727a:	d108      	bne.n	1005728e <llc_conn_go_to_connect+0x216>
1005727c:	201b      	movs	r0, #27
1005727e:	9922      	ldr	r1, [sp, #136]	@ 0x88
10057280:	8208      	strh	r0, [r1, #16]
10057282:	8188      	strh	r0, [r1, #12]
10057284:	e00f      	b.n	100572a6 <llc_conn_go_to_connect+0x22e>
10057286:	9820      	ldr	r0, [sp, #128]	@ 0x80
10057288:	8a00      	ldrh	r0, [r0, #16]
1005728a:	42a8      	cmp	r0, r5
1005728c:	d004      	beq.n	10057298 <llc_conn_go_to_connect+0x220>
1005728e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
10057290:	6e10      	ldr	r0, [r2, #96]	@ 0x60
10057292:	2104      	movs	r1, #4
10057294:	4301      	orrs	r1, r0
10057296:	6611      	str	r1, [r2, #96]	@ 0x60
10057298:	201b      	movs	r0, #27
1005729a:	9922      	ldr	r1, [sp, #136]	@ 0x88
1005729c:	8208      	strh	r0, [r1, #16]
1005729e:	8188      	strh	r0, [r1, #12]
100572a0:	2c04      	cmp	r4, #4
100572a2:	d000      	beq.n	100572a6 <llc_conn_go_to_connect+0x22e>
100572a4:	462f      	mov	r7, r5
100572a6:	9810      	ldr	r0, [sp, #64]	@ 0x40
100572a8:	0200      	lsls	r0, r0, #8
100572aa:	9010      	str	r0, [sp, #64]	@ 0x40
100572ac:	9922      	ldr	r1, [sp, #136]	@ 0x88
100572ae:	828f      	strh	r7, [r1, #20]
100572b0:	824f      	strh	r7, [r1, #18]
100572b2:	830f      	strh	r7, [r1, #24]
100572b4:	201b      	movs	r0, #27
100572b6:	82c8      	strh	r0, [r1, #22]
100572b8:	81c8      	strh	r0, [r1, #14]
100572ba:	83cf      	strh	r7, [r1, #30]
100572bc:	838f      	strh	r7, [r1, #28]
100572be:	9d20      	ldr	r5, [sp, #128]	@ 0x80
100572c0:	8b68      	ldrh	r0, [r5, #26]
100572c2:	8348      	strh	r0, [r1, #26]
100572c4:	9f23      	ldr	r7, [sp, #140]	@ 0x8c
100572c6:	7af8      	ldrb	r0, [r7, #11]
100572c8:	f007 f83b 	bl	1005e342 <llc_conn_init_cte_ctxt_ucfg_weak>
100572cc:	7af8      	ldrb	r0, [r7, #11]
100572ce:	f008 fac9 	bl	1005f864 <llc_conn_init_pcl_ctxt_ucfg_weak>
100572d2:	7af8      	ldrb	r0, [r7, #11]
100572d4:	f006 fe74 	bl	1005dfc0 <LLC_conn_init_chc_ctxt_ucfg_weak>
100572d8:	4628      	mov	r0, r5
100572da:	4631      	mov	r1, r6
100572dc:	f005 fb40 	bl	1005c960 <llc_subrate_init_acceptable_per>
100572e0:	7af8      	ldrb	r0, [r7, #11]
100572e2:	f008 fac3 	bl	1005f86c <LLC_pcl_set_radio_tx_power_conn_start_ucfg_weak>
100572e6:	7af8      	ldrb	r0, [r7, #11]
100572e8:	f7f7 fd5d 	bl	1004eda6 <LL_past_default_params_ucfg>
100572ec:	4630      	mov	r0, r6
100572ee:	f007 fe05 	bl	1005eefc <LLC_init_le_ping_params>
100572f2:	7af8      	ldrb	r0, [r7, #11]
100572f4:	f006 fc16 	bl	1005db24 <llc_cpe_init_sm_ctxt>
100572f8:	4620      	mov	r0, r4
100572fa:	f7ef f9f4 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
100572fe:	7b39      	ldrb	r1, [r7, #12]
10057300:	4ac7      	ldr	r2, [pc, #796]	@ (10057620 <__arm_cp.10_2>)
10057302:	6812      	ldr	r2, [r2, #0]
10057304:	6817      	ldr	r7, [r2, #0]
10057306:	2903      	cmp	r1, #3
10057308:	d009      	beq.n	1005731e <llc_conn_go_to_connect+0x2a6>
1005730a:	2902      	cmp	r1, #2
1005730c:	d00b      	beq.n	10057326 <llc_conn_go_to_connect+0x2ae>
1005730e:	9923      	ldr	r1, [sp, #140]	@ 0x8c
10057310:	7b49      	ldrb	r1, [r1, #13]
10057312:	1a38      	subs	r0, r7, r0
10057314:	2900      	cmp	r1, #0
10057316:	d100      	bne.n	1005731a <llc_conn_go_to_connect+0x2a2>
10057318:	e0a5      	b.n	10057466 <llc_conn_go_to_connect+0x3ee>
1005731a:	3090      	adds	r0, #144	@ 0x90
1005731c:	e005      	b.n	1005732a <llc_conn_go_to_connect+0x2b2>
1005731e:	210e      	movs	r1, #14
10057320:	4620      	mov	r0, r4
10057322:	f00a fd81 	bl	10061e28 <LL_link_calc_packetlength>
10057326:	1a38      	subs	r0, r7, r0
10057328:	383e      	subs	r0, #62	@ 0x3e
1005732a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
1005732c:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005732e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
10057330:	4627      	mov	r7, r4
10057332:	065a      	lsls	r2, r3, #25
10057334:	9c10      	ldr	r4, [sp, #64]	@ 0x40
10057336:	1861      	adds	r1, r4, r1
10057338:	2f04      	cmp	r7, #4
1005733a:	463c      	mov	r4, r7
1005733c:	9f23      	ldr	r7, [sp, #140]	@ 0x8c
1005733e:	d007      	beq.n	10057350 <llc_conn_go_to_connect+0x2d8>
10057340:	7b3d      	ldrb	r5, [r7, #12]
10057342:	23fe      	movs	r3, #254	@ 0xfe
10057344:	402b      	ands	r3, r5
10057346:	2b02      	cmp	r3, #2
10057348:	d100      	bne.n	1005734c <llc_conn_go_to_connect+0x2d4>
1005734a:	931c      	str	r3, [sp, #112]	@ 0x70
1005734c:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
1005734e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10057350:	09db      	lsrs	r3, r3, #7
10057352:	930e      	str	r3, [sp, #56]	@ 0x38
10057354:	0fd2      	lsrs	r2, r2, #31
10057356:	920f      	str	r2, [sp, #60]	@ 0x3c
10057358:	1869      	adds	r1, r5, r1
1005735a:	024d      	lsls	r5, r1, #9
1005735c:	1828      	adds	r0, r5, r0
1005735e:	901c      	str	r0, [sp, #112]	@ 0x70
10057360:	683b      	ldr	r3, [r7, #0]
10057362:	7b78      	ldrb	r0, [r7, #13]
10057364:	2800      	cmp	r0, #0
10057366:	d028      	beq.n	100573ba <llc_conn_go_to_connect+0x342>
10057368:	9310      	str	r3, [sp, #64]	@ 0x40
1005736a:	9818      	ldr	r0, [sp, #96]	@ 0x60
1005736c:	0944      	lsrs	r4, r0, #5
1005736e:	f00a fd77 	bl	10061e60 <LL_link_get_own_sca_ppm>
10057372:	4607      	mov	r7, r0
10057374:	941d      	str	r4, [sp, #116]	@ 0x74
10057376:	4620      	mov	r0, r4
10057378:	f005 fb16 	bl	1005c9a8 <llc_convert_sca_to_ppm>
1005737c:	2103      	movs	r1, #3
1005737e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
10057380:	7011      	strb	r1, [r2, #0]
10057382:	9911      	ldr	r1, [sp, #68]	@ 0x44
10057384:	0249      	lsls	r1, r1, #9
10057386:	6371      	str	r1, [r6, #52]	@ 0x34
10057388:	19c0      	adds	r0, r0, r7
1005738a:	8570      	strh	r0, [r6, #42]	@ 0x2a
1005738c:	6cf1      	ldr	r1, [r6, #76]	@ 0x4c
1005738e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
10057390:	6852      	ldr	r2, [r2, #4]
10057392:	4291      	cmp	r1, r2
10057394:	d300      	bcc.n	10057398 <llc_conn_go_to_connect+0x320>
10057396:	4611      	mov	r1, r2
10057398:	6531      	str	r1, [r6, #80]	@ 0x50
1005739a:	b280      	uxth	r0, r0
1005739c:	4629      	mov	r1, r5
1005739e:	f00a fcd0 	bl	10061d42 <LL_link_calculate_window_widening_from_ppm>
100573a2:	300d      	adds	r0, #13
100573a4:	0041      	lsls	r1, r0, #1
100573a6:	6b72      	ldr	r2, [r6, #52]	@ 0x34
100573a8:	188a      	adds	r2, r1, r2
100573aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100573ac:	1c9b      	adds	r3, r3, #2
100573ae:	2102      	movs	r1, #2
100573b0:	9118      	str	r1, [sp, #96]	@ 0x60
100573b2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100573b4:	9f23      	ldr	r7, [sp, #140]	@ 0x8c
100573b6:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
100573b8:	e018      	b.n	100573ec <llc_conn_go_to_connect+0x374>
100573ba:	2102      	movs	r1, #2
100573bc:	9821      	ldr	r0, [sp, #132]	@ 0x84
100573be:	7001      	strb	r1, [r0, #0]
100573c0:	2000      	movs	r0, #0
100573c2:	8570      	strh	r0, [r6, #42]	@ 0x2a
100573c4:	2c04      	cmp	r4, #4
100573c6:	d000      	beq.n	100573ca <llc_conn_go_to_connect+0x352>
100573c8:	4621      	mov	r1, r4
100573ca:	0089      	lsls	r1, r1, #2
100573cc:	1871      	adds	r1, r6, r1
100573ce:	6d89      	ldr	r1, [r1, #88]	@ 0x58
100573d0:	6cf2      	ldr	r2, [r6, #76]	@ 0x4c
100573d2:	428a      	cmp	r2, r1
100573d4:	d300      	bcc.n	100573d8 <llc_conn_go_to_connect+0x360>
100573d6:	460a      	mov	r2, r1
100573d8:	6532      	str	r2, [r6, #80]	@ 0x50
100573da:	9911      	ldr	r1, [sp, #68]	@ 0x44
100573dc:	0209      	lsls	r1, r1, #8
100573de:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
100573e0:	1864      	adds	r4, r4, r1
100573e2:	3308      	adds	r3, #8
100573e4:	2185      	movs	r1, #133	@ 0x85
100573e6:	9118      	str	r1, [sp, #96]	@ 0x60
100573e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100573ea:	901d      	str	r0, [sp, #116]	@ 0x74
100573ec:	6474      	str	r4, [r6, #68]	@ 0x44
100573ee:	64b0      	str	r0, [r6, #72]	@ 0x48
100573f0:	a824      	add	r0, sp, #144	@ 0x90
100573f2:	2400      	movs	r4, #0
100573f4:	8084      	strh	r4, [r0, #4]
100573f6:	9424      	str	r4, [sp, #144]	@ 0x90
100573f8:	4889      	ldr	r0, [pc, #548]	@ (10057620 <__arm_cp.10_2>)
100573fa:	6800      	ldr	r0, [r0, #0]
100573fc:	213d      	movs	r1, #61	@ 0x3d
100573fe:	5c41      	ldrb	r1, [r0, r1]
10057400:	0689      	lsls	r1, r1, #26
10057402:	9220      	str	r2, [sp, #128]	@ 0x80
10057404:	d543      	bpl.n	1005748e <llc_conn_go_to_connect+0x416>
10057406:	303d      	adds	r0, #61	@ 0x3d
10057408:	7b81      	ldrb	r1, [r0, #14]
1005740a:	07c9      	lsls	r1, r1, #31
1005740c:	d102      	bne.n	10057414 <llc_conn_go_to_connect+0x39c>
1005740e:	7a80      	ldrb	r0, [r0, #10]
10057410:	0780      	lsls	r0, r0, #30
10057412:	d53c      	bpl.n	1005748e <llc_conn_go_to_connect+0x416>
10057414:	6878      	ldr	r0, [r7, #4]
10057416:	6801      	ldr	r1, [r0, #0]
10057418:	461d      	mov	r5, r3
1005741a:	23fe      	movs	r3, #254	@ 0xfe
1005741c:	400b      	ands	r3, r1
1005741e:	aa24      	add	r2, sp, #144	@ 0x90
10057420:	2b02      	cmp	r3, #2
10057422:	462b      	mov	r3, r5
10057424:	d000      	beq.n	10057428 <llc_conn_go_to_connect+0x3b0>
10057426:	4613      	mov	r3, r2
10057428:	b2cd      	uxtb	r5, r1
1005742a:	7b79      	ldrb	r1, [r7, #13]
1005742c:	2900      	cmp	r1, #0
1005742e:	9310      	str	r3, [sp, #64]	@ 0x40
10057430:	d00c      	beq.n	1005744c <llc_conn_go_to_connect+0x3d4>
10057432:	a924      	add	r1, sp, #144	@ 0x90
10057434:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10057436:	2a00      	cmp	r2, #0
10057438:	d01a      	beq.n	10057470 <llc_conn_go_to_connect+0x3f8>
1005743a:	6839      	ldr	r1, [r7, #0]
1005743c:	7b4a      	ldrb	r2, [r1, #13]
1005743e:	23c0      	movs	r3, #192	@ 0xc0
10057440:	4013      	ands	r3, r2
10057442:	aa24      	add	r2, sp, #144	@ 0x90
10057444:	2b40      	cmp	r3, #64	@ 0x40
10057446:	d012      	beq.n	1005746e <llc_conn_go_to_connect+0x3f6>
10057448:	4611      	mov	r1, r2
1005744a:	e011      	b.n	10057470 <llc_conn_go_to_connect+0x3f8>
1005744c:	a924      	add	r1, sp, #144	@ 0x90
1005744e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10057450:	2a00      	cmp	r2, #0
10057452:	d00d      	beq.n	10057470 <llc_conn_go_to_connect+0x3f8>
10057454:	683a      	ldr	r2, [r7, #0]
10057456:	79d1      	ldrb	r1, [r2, #7]
10057458:	23c0      	movs	r3, #192	@ 0xc0
1005745a:	400b      	ands	r3, r1
1005745c:	a924      	add	r1, sp, #144	@ 0x90
1005745e:	2b40      	cmp	r3, #64	@ 0x40
10057460:	d106      	bne.n	10057470 <llc_conn_go_to_connect+0x3f8>
10057462:	1c91      	adds	r1, r2, #2
10057464:	e004      	b.n	10057470 <llc_conn_go_to_connect+0x3f8>
10057466:	2181      	movs	r1, #129	@ 0x81
10057468:	0049      	lsls	r1, r1, #1
1005746a:	1840      	adds	r0, r0, r1
1005746c:	e75d      	b.n	1005732a <llc_conn_go_to_connect+0x2b2>
1005746e:	3108      	adds	r1, #8
10057470:	7aba      	ldrb	r2, [r7, #10]
10057472:	ab26      	add	r3, sp, #152	@ 0x98
10057474:	759a      	strb	r2, [r3, #22]
10057476:	893a      	ldrh	r2, [r7, #8]
10057478:	829a      	strh	r2, [r3, #20]
1005747a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1005747c:	9227      	str	r2, [sp, #156]	@ 0x9c
1005747e:	9128      	str	r1, [sp, #160]	@ 0xa0
10057480:	2dfe      	cmp	r5, #254	@ 0xfe
10057482:	d002      	beq.n	1005748a <llc_conn_go_to_connect+0x412>
10057484:	2103      	movs	r1, #3
10057486:	400d      	ands	r5, r1
10057488:	e000      	b.n	1005748c <llc_conn_go_to_connect+0x414>
1005748a:	2501      	movs	r5, #1
1005748c:	1c43      	adds	r3, r0, #1
1005748e:	9922      	ldr	r1, [sp, #136]	@ 0x88
10057490:	630c      	str	r4, [r1, #48]	@ 0x30
10057492:	2001      	movs	r0, #1
10057494:	4028      	ands	r0, r5
10057496:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10057498:	5488      	strb	r0, [r1, r2]
1005749a:	634c      	str	r4, [r1, #52]	@ 0x34
1005749c:	4608      	mov	r0, r1
1005749e:	3030      	adds	r0, #48	@ 0x30
100574a0:	1c40      	adds	r0, r0, #1
100574a2:	2206      	movs	r2, #6
100574a4:	4619      	mov	r1, r3
100574a6:	461f      	mov	r7, r3
100574a8:	f7ed fa7c 	bl	100449a4 <BLEPLAT_MemCpy>
100574ac:	a826      	add	r0, sp, #152	@ 0x98
100574ae:	941c      	str	r4, [sp, #112]	@ 0x70
100574b0:	7684      	strb	r4, [r0, #26]
100574b2:	7605      	strb	r5, [r0, #24]
100574b4:	991d      	ldr	r1, [sp, #116]	@ 0x74
100574b6:	75c1      	strb	r1, [r0, #23]
100574b8:	9915      	ldr	r1, [sp, #84]	@ 0x54
100574ba:	8241      	strh	r1, [r0, #18]
100574bc:	9912      	ldr	r1, [sp, #72]	@ 0x48
100574be:	8201      	strh	r1, [r0, #16]
100574c0:	9916      	ldr	r1, [sp, #88]	@ 0x58
100574c2:	8181      	strh	r1, [r0, #12]
100574c4:	8f71      	ldrh	r1, [r6, #58]	@ 0x3a
100574c6:	81c1      	strh	r1, [r0, #14]
100574c8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
100574ca:	7b51      	ldrb	r1, [r2, #13]
100574cc:	7641      	strb	r1, [r0, #25]
100574ce:	9726      	str	r7, [sp, #152]	@ 0x98
100574d0:	4617      	mov	r7, r2
100574d2:	f7ff f963 	bl	1005679c <llc_conn_push_connection_complete_event>
100574d6:	7bf8      	ldrb	r0, [r7, #15]
100574d8:	2800      	cmp	r0, #0
100574da:	d003      	beq.n	100574e4 <llc_conn_go_to_connect+0x46c>
100574dc:	7ab9      	ldrb	r1, [r7, #10]
100574de:	8f70      	ldrh	r0, [r6, #58]	@ 0x3a
100574e0:	f7ff f91e 	bl	10056720 <llc_conn_push_adv_set_terminated_event>
100574e4:	9814      	ldr	r0, [sp, #80]	@ 0x50
100574e6:	7801      	ldrb	r1, [r0, #0]
100574e8:	8f70      	ldrh	r0, [r6, #58]	@ 0x3a
100574ea:	f7ff fa8d 	bl	10056a08 <llc_conn_push_csa_event>
100574ee:	9922      	ldr	r1, [sp, #136]	@ 0x88
100574f0:	6b08      	ldr	r0, [r1, #48]	@ 0x30
100574f2:	6b49      	ldr	r1, [r1, #52]	@ 0x34
100574f4:	f7ff f8bc 	bl	10056670 <llc_conn_list_add_address>
100574f8:	7b7c      	ldrb	r4, [r7, #13]
100574fa:	7bbf      	ldrb	r7, [r7, #14]
100574fc:	4638      	mov	r0, r7
100574fe:	f7ee fef0 	bl	100462e2 <BLEPLAT_CNTR_SmGetTxPwr>
10057502:	9022      	str	r0, [sp, #136]	@ 0x88
10057504:	4638      	mov	r0, r7
10057506:	f7ee ff11 	bl	1004632c <BLEPLAT_CNTR_SmInitTo0>
1005750a:	4638      	mov	r0, r7
1005750c:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
1005750e:	4629      	mov	r1, r5
10057510:	f7ef f889 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
10057514:	4638      	mov	r0, r7
10057516:	4629      	mov	r1, r5
10057518:	f7ef f819 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
1005751c:	4638      	mov	r0, r7
1005751e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10057520:	f7ee ff34 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
10057524:	4638      	mov	r0, r7
10057526:	9919      	ldr	r1, [sp, #100]	@ 0x64
10057528:	f7ee ff1e 	bl	10046368 <BLEPLAT_CNTR_SmSetAccessAddr>
1005752c:	4638      	mov	r0, r7
1005752e:	991e      	ldr	r1, [sp, #120]	@ 0x78
10057530:	f7ef f8b5 	bl	1004669e <BLEPLAT_CNTR_SmSetUnmappedChan>
10057534:	4638      	mov	r0, r7
10057536:	991a      	ldr	r1, [sp, #104]	@ 0x68
10057538:	f7ee ff80 	bl	1004643c <BLEPLAT_CNTR_SmSetHopIncr>
1005753c:	4638      	mov	r0, r7
1005753e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
10057540:	f7ee ff55 	bl	100463ee <BLEPLAT_CNTR_SmSetCrcInit>
10057544:	4638      	mov	r0, r7
10057546:	4631      	mov	r1, r6
10057548:	f7ef f85b 	bl	10046602 <BLEPLAT_CNTR_SmSetTxPacketPtr>
1005754c:	4635      	mov	r5, r6
1005754e:	3514      	adds	r5, #20
10057550:	4638      	mov	r0, r7
10057552:	4629      	mov	r1, r5
10057554:	f7ee ffe9 	bl	1004652a <BLEPLAT_CNTR_SmSetRxPacketPtr>
10057558:	4638      	mov	r0, r7
1005755a:	9922      	ldr	r1, [sp, #136]	@ 0x88
1005755c:	f7ef f878 	bl	10046650 <BLEPLAT_CNTR_SmSetTxPwr>
10057560:	f7fd fde0 	bl	10055124 <cte_csr_ucfg_weak>
10057564:	2800      	cmp	r0, #0
10057566:	d102      	bne.n	1005756e <llc_conn_go_to_connect+0x4f6>
10057568:	4638      	mov	r0, r7
1005756a:	f7ee fd73 	bl	10046054 <BLEPLAT_CNTR_SmCteOff>
1005756e:	4638      	mov	r0, r7
10057570:	2c00      	cmp	r4, #0
10057572:	d002      	beq.n	1005757a <llc_conn_go_to_connect+0x502>
10057574:	f7ee ffca 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
10057578:	e001      	b.n	1005757e <llc_conn_go_to_connect+0x506>
1005757a:	f7ef f833 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
1005757e:	4634      	mov	r4, r6
10057580:	3428      	adds	r4, #40	@ 0x28
10057582:	f7fd ff81 	bl	10055488 <data_length_extension_csr_ucfg_weak>
10057586:	2801      	cmp	r0, #1
10057588:	d101      	bne.n	1005758e <llc_conn_go_to_connect+0x516>
1005758a:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005758c:	e00c      	b.n	100575a8 <llc_conn_go_to_connect+0x530>
1005758e:	f7f7 f8db 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
10057592:	2801      	cmp	r0, #1
10057594:	980c      	ldr	r0, [sp, #48]	@ 0x30
10057596:	d007      	beq.n	100575a8 <llc_conn_go_to_connect+0x530>
10057598:	f000 fbee 	bl	10057d78 <cis_csr_ucfg_weak>
1005759c:	2801      	cmp	r0, #1
1005759e:	d001      	beq.n	100575a4 <llc_conn_go_to_connect+0x52c>
100575a0:	9808      	ldr	r0, [sp, #32]
100575a2:	e001      	b.n	100575a8 <llc_conn_go_to_connect+0x530>
100575a4:	981c      	ldr	r0, [sp, #112]	@ 0x70
100575a6:	43c0      	mvns	r0, r0
100575a8:	b2c1      	uxtb	r1, r0
100575aa:	4638      	mov	r0, r7
100575ac:	f7ee ff31 	bl	10046412 <BLEPLAT_CNTR_SmSetDataLength>
100575b0:	4630      	mov	r0, r6
100575b2:	4621      	mov	r1, r4
100575b4:	463a      	mov	r2, r7
100575b6:	f000 fa3d 	bl	10057a34 <llc_conn_set_blue_packets>
100575ba:	2100      	movs	r1, #0
100575bc:	4628      	mov	r0, r5
100575be:	463a      	mov	r2, r7
100575c0:	f000 fa38 	bl	10057a34 <llc_conn_set_blue_packets>
100575c4:	4630      	mov	r0, r6
100575c6:	f7ee fd24 	bl	10046012 <BLEPLAT_CNTR_PacketSetTxReady>
100575ca:	4628      	mov	r0, r5
100575cc:	f7ee fcdf 	bl	10045f8e <BLEPLAT_CNTR_PacketSetRxReady>
100575d0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
100575d2:	7b81      	ldrb	r1, [r0, #14]
100575d4:	9122      	str	r1, [sp, #136]	@ 0x88
100575d6:	7c40      	ldrb	r0, [r0, #17]
100575d8:	4634      	mov	r4, r6
100575da:	3444      	adds	r4, #68	@ 0x44
100575dc:	cc1c      	ldmia	r4, {r2, r3, r4}
100575de:	9921      	ldr	r1, [sp, #132]	@ 0x84
100575e0:	788d      	ldrb	r5, [r1, #2]
100575e2:	78cf      	ldrb	r7, [r1, #3]
100575e4:	490f      	ldr	r1, [pc, #60]	@ (10057624 <__arm_cp.10_3>)
100575e6:	9107      	str	r1, [sp, #28]
100575e8:	490f      	ldr	r1, [pc, #60]	@ (10057628 <__arm_cp.10_4>)
100575ea:	9106      	str	r1, [sp, #24]
100575ec:	490f      	ldr	r1, [pc, #60]	@ (1005762c <__arm_cp.10_5>)
100575ee:	9105      	str	r1, [sp, #20]
100575f0:	490f      	ldr	r1, [pc, #60]	@ (10057630 <__arm_cp.10_6>)
100575f2:	9104      	str	r1, [sp, #16]
100575f4:	9703      	str	r7, [sp, #12]
100575f6:	9502      	str	r5, [sp, #8]
100575f8:	1ad1      	subs	r1, r2, r3
100575fa:	9101      	str	r1, [sp, #4]
100575fc:	9400      	str	r4, [sp, #0]
100575fe:	2800      	cmp	r0, #0
10057600:	d001      	beq.n	10057606 <llc_conn_go_to_connect+0x58e>
10057602:	4c0d      	ldr	r4, [pc, #52]	@ (10057638 <__arm_cp.10_8>)
10057604:	e000      	b.n	10057608 <llc_conn_go_to_connect+0x590>
10057606:	4c0b      	ldr	r4, [pc, #44]	@ (10057634 <__arm_cp.10_7>)
10057608:	9b20      	ldr	r3, [sp, #128]	@ 0x80
1005760a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1005760c:	9822      	ldr	r0, [sp, #136]	@ 0x88
1005760e:	4631      	mov	r1, r6
10057610:	47a0      	blx	r4
10057612:	b02d      	add	sp, #180	@ 0xb4
10057614:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057616:	46c0      	nop			@ (mov r8, r8)

10057618 <__arm_cp.10_0>:
10057618:	000004ff 	.word	0x000004ff

1005761c <__arm_cp.10_1>:
1005761c:	0000f7fb 	.word	0x0000f7fb

10057620 <__arm_cp.10_2>:
10057620:	20000894 	.word	0x20000894

10057624 <__arm_cp.10_3>:
10057624:	10068349 	.word	0x10068349

10057628 <__arm_cp.10_4>:
10057628:	100684d5 	.word	0x100684d5

1005762c <__arm_cp.10_5>:
1005762c:	10068381 	.word	0x10068381

10057630 <__arm_cp.10_6>:
10057630:	1006840b 	.word	0x1006840b

10057634 <__arm_cp.10_7>:
10057634:	10062849 	.word	0x10062849

10057638 <__arm_cp.10_8>:
10057638:	100623e5 	.word	0x100623e5

1005763c <llc_conn_peripheral_roll_back_params>:
1005763c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005763e:	b089      	sub	sp, #36	@ 0x24
10057640:	4604      	mov	r4, r0
10057642:	2091      	movs	r0, #145	@ 0x91
10057644:	0040      	lsls	r0, r0, #1
10057646:	5a25      	ldrh	r5, [r4, r0]
10057648:	6ce7      	ldr	r7, [r4, #76]	@ 0x4c
1005764a:	26ff      	movs	r6, #255	@ 0xff
1005764c:	3608      	adds	r6, #8
1005764e:	f7ed fa9d 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10057652:	5da1      	ldrb	r1, [r4, r6]
10057654:	22fe      	movs	r2, #254	@ 0xfe
10057656:	400a      	ands	r2, r1
10057658:	55a2      	strb	r2, [r4, r6]
1005765a:	2135      	movs	r1, #53	@ 0x35
1005765c:	0109      	lsls	r1, r1, #4
1005765e:	1846      	adds	r6, r0, r1
10057660:	437d      	muls	r5, r7
10057662:	0068      	lsls	r0, r5, #1
10057664:	1830      	adds	r0, r6, r0
10057666:	f3ef 8110 	mrs	r1, PRIMASK
1005766a:	b672      	cpsid	i
1005766c:	6c61      	ldr	r1, [r4, #68]	@ 0x44
1005766e:	43c9      	mvns	r1, r1
10057670:	1840      	adds	r0, r0, r1
10057672:	d400      	bmi.n	10057676 <llc_conn_peripheral_roll_back_params+0x3a>
10057674:	e089      	b.n	1005778a <llc_conn_peripheral_roll_back_params+0x14e>
10057676:	2083      	movs	r0, #131	@ 0x83
10057678:	0040      	lsls	r0, r0, #1
1005767a:	1820      	adds	r0, r4, r0
1005767c:	9008      	str	r0, [sp, #32]
1005767e:	4630      	mov	r0, r6
10057680:	f00a feec 	bl	1006245c <LL_sched_is_scheduler_call_pending>
10057684:	2800      	cmp	r0, #0
10057686:	d004      	beq.n	10057692 <llc_conn_peripheral_roll_back_params+0x56>
10057688:	4941      	ldr	r1, [pc, #260]	@ (10057790 <__arm_cp.13_0>)
1005768a:	6809      	ldr	r1, [r1, #0]
1005768c:	7bc9      	ldrb	r1, [r1, #15]
1005768e:	2903      	cmp	r1, #3
10057690:	d171      	bne.n	10057776 <llc_conn_peripheral_roll_back_params+0x13a>
10057692:	9706      	str	r7, [sp, #24]
10057694:	9004      	str	r0, [sp, #16]
10057696:	4620      	mov	r0, r4
10057698:	3031      	adds	r0, #49	@ 0x31
1005769a:	9007      	str	r0, [sp, #28]
1005769c:	4620      	mov	r0, r4
1005769e:	3042      	adds	r0, #66	@ 0x42
100576a0:	9005      	str	r0, [sp, #20]
100576a2:	6c60      	ldr	r0, [r4, #68]	@ 0x44
100576a4:	1b80      	subs	r0, r0, r6
100576a6:	2700      	movs	r7, #0
100576a8:	2108      	movs	r1, #8
100576aa:	b24a      	sxtb	r2, r1
100576ac:	2a00      	cmp	r2, #0
100576ae:	d40c      	bmi.n	100576ca <llc_conn_peripheral_roll_back_params+0x8e>
100576b0:	b2cb      	uxtb	r3, r1
100576b2:	462a      	mov	r2, r5
100576b4:	409a      	lsls	r2, r3
100576b6:	4290      	cmp	r0, r2
100576b8:	d302      	bcc.n	100576c0 <llc_conn_peripheral_roll_back_params+0x84>
100576ba:	2601      	movs	r6, #1
100576bc:	409e      	lsls	r6, r3
100576be:	19bf      	adds	r7, r7, r6
100576c0:	1a82      	subs	r2, r0, r2
100576c2:	d300      	bcc.n	100576c6 <llc_conn_peripheral_roll_back_params+0x8a>
100576c4:	4610      	mov	r0, r2
100576c6:	1e49      	subs	r1, r1, #1
100576c8:	e7ef      	b.n	100576aa <llc_conn_peripheral_roll_back_params+0x6e>
100576ca:	9908      	ldr	r1, [sp, #32]
100576cc:	8b88      	ldrh	r0, [r1, #28]
100576ce:	4347      	muls	r7, r0
100576d0:	9a05      	ldr	r2, [sp, #20]
100576d2:	8810      	ldrh	r0, [r2, #0]
100576d4:	1bc0      	subs	r0, r0, r7
100576d6:	8010      	strh	r0, [r2, #0]
100576d8:	b2be      	uxth	r6, r7
100576da:	9d07      	ldr	r5, [sp, #28]
100576dc:	7c28      	ldrb	r0, [r5, #16]
100576de:	7809      	ldrb	r1, [r1, #0]
100576e0:	2901      	cmp	r1, #1
100576e2:	d10f      	bne.n	10057704 <llc_conn_peripheral_roll_back_params+0xc8>
100576e4:	4617      	mov	r7, r2
100576e6:	f7ee fd06 	bl	100460f6 <BLEPLAT_CNTR_SmGetAccessAddr>
100576ea:	883f      	ldrh	r7, [r7, #0]
100576ec:	7c2a      	ldrb	r2, [r5, #16]
100576ee:	2300      	movs	r3, #0
100576f0:	9300      	str	r3, [sp, #0]
100576f2:	9001      	str	r0, [sp, #4]
100576f4:	9302      	str	r3, [sp, #8]
100576f6:	4621      	mov	r1, r4
100576f8:	31e0      	adds	r1, #224	@ 0xe0
100576fa:	4610      	mov	r0, r2
100576fc:	463a      	mov	r2, r7
100576fe:	f000 fa1e 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
10057702:	e010      	b.n	10057726 <llc_conn_peripheral_roll_back_params+0xea>
10057704:	f7ee fd6e 	bl	100461e4 <BLEPLAT_CNTR_SmGetHopIncr>
10057708:	2125      	movs	r1, #37	@ 0x25
1005770a:	1a08      	subs	r0, r1, r0
1005770c:	9008      	str	r0, [sp, #32]
1005770e:	4347      	muls	r7, r0
10057710:	7828      	ldrb	r0, [r5, #0]
10057712:	1838      	adds	r0, r7, r0
10057714:	b280      	uxth	r0, r0
10057716:	f000 f9e7 	bl	10057ae8 <llc_mngm_mod_37>
1005771a:	7028      	strb	r0, [r5, #0]
1005771c:	9908      	ldr	r1, [sp, #32]
1005771e:	1808      	adds	r0, r1, r0
10057720:	b280      	uxth	r0, r0
10057722:	f000 f9e1 	bl	10057ae8 <llc_mngm_mod_37>
10057726:	4601      	mov	r1, r0
10057728:	462f      	mov	r7, r5
1005772a:	7c28      	ldrb	r0, [r5, #16]
1005772c:	f7ee ffb7 	bl	1004669e <BLEPLAT_CNTR_SmSetUnmappedChan>
10057730:	9806      	ldr	r0, [sp, #24]
10057732:	4346      	muls	r6, r0
10057734:	6c60      	ldr	r0, [r4, #68]	@ 0x44
10057736:	1b80      	subs	r0, r0, r6
10057738:	6460      	str	r0, [r4, #68]	@ 0x44
1005773a:	8d60      	ldrh	r0, [r4, #42]	@ 0x2a
1005773c:	4631      	mov	r1, r6
1005773e:	f00a fb00 	bl	10061d42 <LL_link_calculate_window_widening_from_ppm>
10057742:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
10057744:	4282      	cmp	r2, r0
10057746:	d904      	bls.n	10057752 <llc_conn_peripheral_roll_back_params+0x116>
10057748:	1a12      	subs	r2, r2, r0
1005774a:	2a0d      	cmp	r2, #13
1005774c:	d800      	bhi.n	10057750 <llc_conn_peripheral_roll_back_params+0x114>
1005774e:	220d      	movs	r2, #13
10057750:	64a2      	str	r2, [r4, #72]	@ 0x48
10057752:	9d04      	ldr	r5, [sp, #16]
10057754:	6e60      	ldr	r0, [r4, #100]	@ 0x64
10057756:	1980      	adds	r0, r0, r6
10057758:	6660      	str	r0, [r4, #100]	@ 0x64
1005775a:	6f60      	ldr	r0, [r4, #116]	@ 0x74
1005775c:	0051      	lsls	r1, r2, #1
1005775e:	1809      	adds	r1, r1, r0
10057760:	6c60      	ldr	r0, [r4, #68]	@ 0x44
10057762:	1a82      	subs	r2, r0, r2
10057764:	7c38      	ldrb	r0, [r7, #16]
10057766:	f00a fe21 	bl	100623ac <LL_sched_set_taskslot_length_anchor>
1005776a:	2d00      	cmp	r5, #0
1005776c:	d10d      	bne.n	1005778a <llc_conn_peripheral_roll_back_params+0x14e>
1005776e:	7c38      	ldrb	r0, [r7, #16]
10057770:	f00a fe96 	bl	100624a0 <LL_sched_engine>
10057774:	e009      	b.n	1005778a <llc_conn_peripheral_roll_back_params+0x14e>
10057776:	9a08      	ldr	r2, [sp, #32]
10057778:	7850      	ldrb	r0, [r2, #1]
1005777a:	2101      	movs	r1, #1
1005777c:	4301      	orrs	r1, r0
1005777e:	7051      	strb	r1, [r2, #1]
10057780:	2013      	movs	r0, #19
10057782:	f00d fd55 	bl	10065230 <tsk_notify_idx>
10057786:	f7eb f8a6 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005778a:	b662      	cpsie	i
1005778c:	b009      	add	sp, #36	@ 0x24
1005778e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10057790 <__arm_cp.13_0>:
10057790:	20000898 	.word	0x20000898

10057794 <llc_conn_reserve_conn_idx>:
10057794:	b510      	push	{r4, lr}
10057796:	2400      	movs	r4, #0
10057798:	4620      	mov	r0, r4
1005779a:	f7fe fc37 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005779e:	490a      	ldr	r1, [pc, #40]	@ (100577c8 <__arm_cp.14_0>)
100577a0:	6809      	ldr	r1, [r1, #0]
100577a2:	2234      	movs	r2, #52	@ 0x34
100577a4:	5c89      	ldrb	r1, [r1, r2]
100577a6:	302c      	adds	r0, #44	@ 0x2c
100577a8:	42a1      	cmp	r1, r4
100577aa:	d007      	beq.n	100577bc <llc_conn_reserve_conn_idx+0x28>
100577ac:	7802      	ldrb	r2, [r0, #0]
100577ae:	2a00      	cmp	r2, #0
100577b0:	d006      	beq.n	100577c0 <llc_conn_reserve_conn_idx+0x2c>
100577b2:	224d      	movs	r2, #77	@ 0x4d
100577b4:	0092      	lsls	r2, r2, #2
100577b6:	1880      	adds	r0, r0, r2
100577b8:	1c64      	adds	r4, r4, #1
100577ba:	e7f5      	b.n	100577a8 <llc_conn_reserve_conn_idx+0x14>
100577bc:	24ff      	movs	r4, #255	@ 0xff
100577be:	e001      	b.n	100577c4 <llc_conn_reserve_conn_idx+0x30>
100577c0:	2101      	movs	r1, #1
100577c2:	7001      	strb	r1, [r0, #0]
100577c4:	b2e0      	uxtb	r0, r4
100577c6:	bd10      	pop	{r4, pc}

100577c8 <__arm_cp.14_0>:
100577c8:	2000083c 	.word	0x2000083c

100577cc <llc_conn_send_acl_data>:
100577cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100577ce:	4606      	mov	r6, r0
100577d0:	8800      	ldrh	r0, [r0, #0]
100577d2:	f7fe fc29 	bl	10056028 <llc_conn_get_cntxt_per_p_from_handle>
100577d6:	2800      	cmp	r0, #0
100577d8:	d012      	beq.n	10057800 <llc_conn_send_acl_data+0x34>
100577da:	4604      	mov	r4, r0
100577dc:	4607      	mov	r7, r0
100577de:	372c      	adds	r7, #44	@ 0x2c
100577e0:	f3ef 8010 	mrs	r0, PRIMASK
100577e4:	b672      	cpsid	i
100577e6:	463d      	mov	r5, r7
100577e8:	3554      	adds	r5, #84	@ 0x54
100577ea:	4628      	mov	r0, r5
100577ec:	4631      	mov	r1, r6
100577ee:	f00d ff15 	bl	1006561c <ACL_list_insert_tail>
100577f2:	7838      	ldrb	r0, [r7, #0]
100577f4:	2803      	cmp	r0, #3
100577f6:	d105      	bne.n	10057804 <llc_conn_send_acl_data+0x38>
100577f8:	4620      	mov	r0, r4
100577fa:	f7ff ff1f 	bl	1005763c <llc_conn_peripheral_roll_back_params>
100577fe:	e01a      	b.n	10057836 <llc_conn_send_acl_data+0x6a>
10057800:	2002      	movs	r0, #2
10057802:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10057804:	7d78      	ldrb	r0, [r7, #21]
10057806:	4e28      	ldr	r6, [pc, #160]	@ (100578a8 <__arm_cp.15_0>)
10057808:	6831      	ldr	r1, [r6, #0]
1005780a:	7b49      	ldrb	r1, [r1, #13]
1005780c:	4288      	cmp	r0, r1
1005780e:	d112      	bne.n	10057836 <llc_conn_send_acl_data+0x6a>
10057810:	f7ed f9bc 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10057814:	6831      	ldr	r1, [r6, #0]
10057816:	6809      	ldr	r1, [r1, #0]
10057818:	43c9      	mvns	r1, r1
1005781a:	1840      	adds	r0, r0, r1
1005781c:	2101      	movs	r1, #1
1005781e:	0289      	lsls	r1, r1, #10
10057820:	1840      	adds	r0, r0, r1
10057822:	d508      	bpl.n	10057836 <llc_conn_send_acl_data+0x6a>
10057824:	205c      	movs	r0, #92	@ 0x5c
10057826:	5c38      	ldrb	r0, [r7, r0]
10057828:	0640      	lsls	r0, r0, #25
1005782a:	d404      	bmi.n	10057836 <llc_conn_send_acl_data+0x6a>
1005782c:	4620      	mov	r0, r4
1005782e:	f7fe fec0 	bl	100565b2 <llc_conn_get_tx_acl_blocked>
10057832:	2800      	cmp	r0, #0
10057834:	d002      	beq.n	1005783c <llc_conn_send_acl_data+0x70>
10057836:	b662      	cpsie	i
10057838:	2084      	movs	r0, #132	@ 0x84
1005783a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005783c:	4620      	mov	r0, r4
1005783e:	f7ee fab2 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
10057842:	4606      	mov	r6, r0
10057844:	4620      	mov	r0, r4
10057846:	3028      	adds	r0, #40	@ 0x28
10057848:	4286      	cmp	r6, r0
1005784a:	d00a      	beq.n	10057862 <llc_conn_send_acl_data+0x96>
1005784c:	2101      	movs	r1, #1
1005784e:	4620      	mov	r0, r4
10057850:	f7fe fe88 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
10057854:	4286      	cmp	r6, r0
10057856:	d0ee      	beq.n	10057836 <llc_conn_send_acl_data+0x6a>
10057858:	7830      	ldrb	r0, [r6, #0]
1005785a:	2110      	movs	r1, #16
1005785c:	4301      	orrs	r1, r0
1005785e:	7031      	strb	r1, [r6, #0]
10057860:	e7e9      	b.n	10057836 <llc_conn_send_acl_data+0x6a>
10057862:	4812      	ldr	r0, [pc, #72]	@ (100578ac <__arm_cp.15_1>)
10057864:	6800      	ldr	r0, [r0, #0]
10057866:	218c      	movs	r1, #140	@ 0x8c
10057868:	5840      	ldr	r0, [r0, r1]
1005786a:	682e      	ldr	r6, [r5, #0]
1005786c:	8a31      	ldrh	r1, [r6, #16]
1005786e:	89f2      	ldrh	r2, [r6, #14]
10057870:	1851      	adds	r1, r2, r1
10057872:	221f      	movs	r2, #31
10057874:	400a      	ands	r2, r1
10057876:	1817      	adds	r7, r2, r0
10057878:	1cbd      	adds	r5, r7, #2
1005787a:	4620      	mov	r0, r4
1005787c:	4629      	mov	r1, r5
1005787e:	f7ee fad4 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
10057882:	4620      	mov	r0, r4
10057884:	4631      	mov	r1, r6
10057886:	f7fe fdbd 	bl	10056404 <llc_conn_copy_tx_data_packet>
1005788a:	67e6      	str	r6, [r4, #124]	@ 0x7c
1005788c:	78f8      	ldrb	r0, [r7, #3]
1005788e:	2800      	cmp	r0, #0
10057890:	d0d1      	beq.n	10057836 <llc_conn_send_acl_data+0x6a>
10057892:	2101      	movs	r1, #1
10057894:	4620      	mov	r0, r4
10057896:	f7fe fe6b 	bl	10056570 <llc_conn_get_enc_on>
1005789a:	2801      	cmp	r0, #1
1005789c:	d1cb      	bne.n	10057836 <llc_conn_send_acl_data+0x6a>
1005789e:	7868      	ldrb	r0, [r5, #1]
100578a0:	1d00      	adds	r0, r0, #4
100578a2:	7068      	strb	r0, [r5, #1]
100578a4:	e7c7      	b.n	10057836 <llc_conn_send_acl_data+0x6a>
100578a6:	46c0      	nop			@ (mov r8, r8)

100578a8 <__arm_cp.15_0>:
100578a8:	20000898 	.word	0x20000898

100578ac <__arm_cp.15_1>:
100578ac:	20000894 	.word	0x20000894

100578b0 <llc_conn_set_taskslot_params>:
100578b0:	b5f0      	push	{r4, r5, r6, r7, lr}
100578b2:	b085      	sub	sp, #20
100578b4:	460f      	mov	r7, r1
100578b6:	4604      	mov	r4, r0
100578b8:	2041      	movs	r0, #65	@ 0x41
100578ba:	5c20      	ldrb	r0, [r4, r0]
100578bc:	2183      	movs	r1, #131	@ 0x83
100578be:	0049      	lsls	r1, r1, #1
100578c0:	5c61      	ldrb	r1, [r4, r1]
100578c2:	4625      	mov	r5, r4
100578c4:	352c      	adds	r5, #44	@ 0x2c
100578c6:	2901      	cmp	r1, #1
100578c8:	d10d      	bne.n	100578e6 <llc_conn_set_taskslot_params+0x36>
100578ca:	f7ee fc14 	bl	100460f6 <BLEPLAT_CNTR_SmGetAccessAddr>
100578ce:	8aea      	ldrh	r2, [r5, #22]
100578d0:	7d6e      	ldrb	r6, [r5, #21]
100578d2:	2300      	movs	r3, #0
100578d4:	9300      	str	r3, [sp, #0]
100578d6:	9001      	str	r0, [sp, #4]
100578d8:	9302      	str	r3, [sp, #8]
100578da:	4621      	mov	r1, r4
100578dc:	31e0      	adds	r1, #224	@ 0xe0
100578de:	4630      	mov	r0, r6
100578e0:	f000 f92d 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
100578e4:	e010      	b.n	10057908 <llc_conn_set_taskslot_params+0x58>
100578e6:	4616      	mov	r6, r2
100578e8:	f7ee fc7c 	bl	100461e4 <BLEPLAT_CNTR_SmGetHopIncr>
100578ec:	9704      	str	r7, [sp, #16]
100578ee:	4607      	mov	r7, r0
100578f0:	4346      	muls	r6, r0
100578f2:	7968      	ldrb	r0, [r5, #5]
100578f4:	1836      	adds	r6, r6, r0
100578f6:	b2b0      	uxth	r0, r6
100578f8:	f000 f8f6 	bl	10057ae8 <llc_mngm_mod_37>
100578fc:	7168      	strb	r0, [r5, #5]
100578fe:	1bf0      	subs	r0, r6, r7
10057900:	9f04      	ldr	r7, [sp, #16]
10057902:	b280      	uxth	r0, r0
10057904:	f000 f8f0 	bl	10057ae8 <llc_mngm_mod_37>
10057908:	4601      	mov	r1, r0
1005790a:	7d68      	ldrb	r0, [r5, #21]
1005790c:	f7ee fec7 	bl	1004669e <BLEPLAT_CNTR_SmSetUnmappedChan>
10057910:	7828      	ldrb	r0, [r5, #0]
10057912:	2802      	cmp	r0, #2
10057914:	d10c      	bne.n	10057930 <llc_conn_set_taskslot_params+0x80>
10057916:	4620      	mov	r0, r4
10057918:	f7ee fb2c 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005791c:	4620      	mov	r0, r4
1005791e:	f7ee fa93 	bl	10045e48 <BLEPLAT_CNTR_PacketSetIncChan>
10057922:	7d68      	ldrb	r0, [r5, #21]
10057924:	f7ee fe5e 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
10057928:	6c62      	ldr	r2, [r4, #68]	@ 0x44
1005792a:	6d21      	ldr	r1, [r4, #80]	@ 0x50
1005792c:	7d68      	ldrb	r0, [r5, #21]
1005792e:	e02d      	b.n	1005798c <llc_conn_set_taskslot_params+0xdc>
10057930:	6ca6      	ldr	r6, [r4, #72]	@ 0x48
10057932:	8d60      	ldrh	r0, [r4, #42]	@ 0x2a
10057934:	4639      	mov	r1, r7
10057936:	f00a fa04 	bl	10061d42 <LL_link_calculate_window_widening_from_ppm>
1005793a:	1980      	adds	r0, r0, r6
1005793c:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
1005793e:	2900      	cmp	r1, #0
10057940:	d100      	bne.n	10057944 <llc_conn_set_taskslot_params+0x94>
10057942:	300d      	adds	r0, #13
10057944:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
10057946:	0849      	lsrs	r1, r1, #1
10057948:	393e      	subs	r1, #62	@ 0x3e
1005794a:	4288      	cmp	r0, r1
1005794c:	d901      	bls.n	10057952 <llc_conn_set_taskslot_params+0xa2>
1005794e:	2008      	movs	r0, #8
10057950:	e022      	b.n	10057998 <llc_conn_set_taskslot_params+0xe8>
10057952:	64a0      	str	r0, [r4, #72]	@ 0x48
10057954:	6b61      	ldr	r1, [r4, #52]	@ 0x34
10057956:	0040      	lsls	r0, r0, #1
10057958:	2900      	cmp	r1, #0
1005795a:	d001      	beq.n	10057960 <llc_conn_set_taskslot_params+0xb0>
1005795c:	180f      	adds	r7, r1, r0
1005795e:	e005      	b.n	1005796c <llc_conn_set_taskslot_params+0xbc>
10057960:	6f61      	ldr	r1, [r4, #116]	@ 0x74
10057962:	1808      	adds	r0, r1, r0
10057964:	6d27      	ldr	r7, [r4, #80]	@ 0x50
10057966:	42b8      	cmp	r0, r7
10057968:	d800      	bhi.n	1005796c <llc_conn_set_taskslot_params+0xbc>
1005796a:	4607      	mov	r7, r0
1005796c:	4626      	mov	r6, r4
1005796e:	3614      	adds	r6, #20
10057970:	4630      	mov	r0, r6
10057972:	f7ee faff 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10057976:	4630      	mov	r0, r6
10057978:	f7ee fa66 	bl	10045e48 <BLEPLAT_CNTR_PacketSetIncChan>
1005797c:	7d68      	ldrb	r0, [r5, #21]
1005797e:	f7ee fdc5 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
10057982:	6c60      	ldr	r0, [r4, #68]	@ 0x44
10057984:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
10057986:	1a42      	subs	r2, r0, r1
10057988:	7d68      	ldrb	r0, [r5, #21]
1005798a:	4639      	mov	r1, r7
1005798c:	f00a fd0e 	bl	100623ac <LL_sched_set_taskslot_length_anchor>
10057990:	8e60      	ldrh	r0, [r4, #50]	@ 0x32
10057992:	1c40      	adds	r0, r0, #1
10057994:	8660      	strh	r0, [r4, #50]	@ 0x32
10057996:	2000      	movs	r0, #0
10057998:	b005      	add	sp, #20
1005799a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005799c <llc_conn_update_receive_window>:
1005799c:	b570      	push	{r4, r5, r6, lr}
1005799e:	4604      	mov	r4, r0
100579a0:	4606      	mov	r6, r0
100579a2:	362c      	adds	r6, #44	@ 0x2c
100579a4:	4605      	mov	r5, r0
100579a6:	35d0      	adds	r5, #208	@ 0xd0
100579a8:	f7fd fe3c 	bl	10055624 <phy_upd_csr_ucfg_weak>
100579ac:	2801      	cmp	r0, #1
100579ae:	d10b      	bne.n	100579c8 <llc_conn_update_receive_window+0x2c>
100579b0:	7930      	ldrb	r0, [r6, #4]
100579b2:	210e      	movs	r1, #14
100579b4:	4341      	muls	r1, r0
100579b6:	480e      	ldr	r0, [pc, #56]	@ (100579f0 <__arm_cp.17_0>)
100579b8:	6800      	ldr	r0, [r0, #0]
100579ba:	229c      	movs	r2, #156	@ 0x9c
100579bc:	5880      	ldr	r0, [r0, r2]
100579be:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
100579c0:	6940      	ldr	r0, [r0, #20]
100579c2:	1840      	adds	r0, r0, r1
100579c4:	79c0      	ldrb	r0, [r0, #7]
100579c6:	e000      	b.n	100579ca <llc_conn_update_receive_window+0x2e>
100579c8:	2001      	movs	r0, #1
100579ca:	f7ee fe8c 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
100579ce:	4909      	ldr	r1, [pc, #36]	@ (100579f4 <__arm_cp.17_1>)
100579d0:	4348      	muls	r0, r1
100579d2:	0a00      	lsrs	r0, r0, #8
100579d4:	3010      	adds	r0, #16
100579d6:	6028      	str	r0, [r5, #0]
100579d8:	7832      	ldrb	r2, [r6, #0]
100579da:	2a03      	cmp	r2, #3
100579dc:	d107      	bne.n	100579ee <llc_conn_update_receive_window+0x52>
100579de:	6b62      	ldr	r2, [r4, #52]	@ 0x34
100579e0:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
100579e2:	005b      	lsls	r3, r3, #1
100579e4:	189a      	adds	r2, r3, r2
100579e6:	4351      	muls	r1, r2
100579e8:	0a09      	lsrs	r1, r1, #8
100579ea:	1808      	adds	r0, r1, r0
100579ec:	6028      	str	r0, [r5, #0]
100579ee:	bd70      	pop	{r4, r5, r6, pc}

100579f0 <__arm_cp.17_0>:
100579f0:	20000894 	.word	0x20000894

100579f4 <__arm_cp.17_1>:
100579f4:	00000271 	.word	0x00000271

100579f8 <llc_conn_peripheral_roll_back_params_tsk>:
100579f8:	b570      	push	{r4, r5, r6, lr}
100579fa:	2400      	movs	r4, #0
100579fc:	4620      	mov	r0, r4
100579fe:	f7fe fb05 	bl	1005600c <llc_conn_get_cntxt_per_p>
10057a02:	4605      	mov	r5, r0
10057a04:	4e0a      	ldr	r6, [pc, #40]	@ (10057a30 <__arm_cp.19_0>)
10057a06:	6830      	ldr	r0, [r6, #0]
10057a08:	2134      	movs	r1, #52	@ 0x34
10057a0a:	5c41      	ldrb	r1, [r0, r1]
10057a0c:	428c      	cmp	r4, r1
10057a0e:	d20d      	bcs.n	10057a2c <llc_conn_peripheral_roll_back_params_tsk+0x34>
10057a10:	21ff      	movs	r1, #255	@ 0xff
10057a12:	3108      	adds	r1, #8
10057a14:	5c69      	ldrb	r1, [r5, r1]
10057a16:	07c9      	lsls	r1, r1, #31
10057a18:	d003      	beq.n	10057a22 <llc_conn_peripheral_roll_back_params_tsk+0x2a>
10057a1a:	4628      	mov	r0, r5
10057a1c:	f7ff fe0e 	bl	1005763c <llc_conn_peripheral_roll_back_params>
10057a20:	6830      	ldr	r0, [r6, #0]
10057a22:	214d      	movs	r1, #77	@ 0x4d
10057a24:	0089      	lsls	r1, r1, #2
10057a26:	186d      	adds	r5, r5, r1
10057a28:	1c64      	adds	r4, r4, #1
10057a2a:	e7ed      	b.n	10057a08 <llc_conn_peripheral_roll_back_params_tsk+0x10>
10057a2c:	bd70      	pop	{r4, r5, r6, pc}
10057a2e:	46c0      	nop			@ (mov r8, r8)

10057a30 <__arm_cp.19_0>:
10057a30:	2000083c 	.word	0x2000083c

10057a34 <llc_conn_set_blue_packets>:
10057a34:	b570      	push	{r4, r5, r6, lr}
10057a36:	4616      	mov	r6, r2
10057a38:	460d      	mov	r5, r1
10057a3a:	4604      	mov	r4, r0
10057a3c:	f7ee f9c0 	bl	10045dc0 <BLEPLAT_CNTR_PacketInitTo0>
10057a40:	4620      	mov	r0, r4
10057a42:	f7ee f9d8 	bl	10045df6 <BLEPLAT_CNTR_PacketSetCrcinitSel>
10057a46:	4620      	mov	r0, r4
10057a48:	f7ee fa16 	bl	10045e78 <BLEPLAT_CNTR_PacketSetIntDone>
10057a4c:	4620      	mov	r0, r4
10057a4e:	4621      	mov	r1, r4
10057a50:	f7ee fa50 	bl	10045ef4 <BLEPLAT_CNTR_PacketSetNextPtr>
10057a54:	4620      	mov	r0, r4
10057a56:	f7ee fa81 	bl	10045f5c <BLEPLAT_CNTR_PacketSetNsEn>
10057a5a:	4620      	mov	r0, r4
10057a5c:	4631      	mov	r1, r6
10057a5e:	f7ee fa65 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
10057a62:	4620      	mov	r0, r4
10057a64:	f7ee faaf 	bl	10045fc6 <BLEPLAT_CNTR_PacketSetTimer2Active>
10057a68:	4620      	mov	r0, r4
10057a6a:	f7ee fa83 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10057a6e:	4620      	mov	r0, r4
10057a70:	f7ee f9ea 	bl	10045e48 <BLEPLAT_CNTR_PacketSetIncChan>
10057a74:	4620      	mov	r0, r4
10057a76:	f7ee fa30 	bl	10045eda <BLEPLAT_CNTR_PacketSetKeepsemareq>
10057a7a:	2d00      	cmp	r5, #0
10057a7c:	d00d      	beq.n	10057a9a <llc_conn_set_blue_packets+0x66>
10057a7e:	2094      	movs	r0, #148	@ 0x94
10057a80:	2100      	movs	r1, #0
10057a82:	460a      	mov	r2, r1
10057a84:	f7ee f823 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
10057a88:	4601      	mov	r1, r0
10057a8a:	4620      	mov	r0, r4
10057a8c:	f7ee fa8c 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
10057a90:	4620      	mov	r0, r4
10057a92:	4629      	mov	r1, r5
10057a94:	f7ee f9c9 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
10057a98:	bd70      	pop	{r4, r5, r6, pc}
10057a9a:	4812      	ldr	r0, [pc, #72]	@ (10057ae4 <__arm_cp.20_0>)
10057a9c:	6800      	ldr	r0, [r0, #0]
10057a9e:	2190      	movs	r1, #144	@ 0x90
10057aa0:	5845      	ldr	r5, [r0, r1]
10057aa2:	2096      	movs	r0, #150	@ 0x96
10057aa4:	2101      	movs	r1, #1
10057aa6:	2200      	movs	r2, #0
10057aa8:	f7ee f811 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
10057aac:	4601      	mov	r1, r0
10057aae:	4620      	mov	r0, r4
10057ab0:	f7ee fa7a 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
10057ab4:	4620      	mov	r0, r4
10057ab6:	f7ee f9eb 	bl	10045e90 <BLEPLAT_CNTR_PacketSetIntRcvOk>
10057aba:	4620      	mov	r0, r4
10057abc:	f7ee fa00 	bl	10045ec0 <BLEPLAT_CNTR_PacketSetIntTxOk>
10057ac0:	4620      	mov	r0, r4
10057ac2:	f7ee f9f1 	bl	10045ea8 <BLEPLAT_CNTR_PacketSetIntTimeout>
10057ac6:	4620      	mov	r0, r4
10057ac8:	f7ee f9ca 	bl	10045e60 <BLEPLAT_CNTR_PacketSetIntCrcErr>
10057acc:	1ca9      	adds	r1, r5, #2
10057ace:	4620      	mov	r0, r4
10057ad0:	f7ee f9ab 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
10057ad4:	4620      	mov	r0, r4
10057ad6:	f7ee fa34 	bl	10045f42 <BLEPLAT_CNTR_PacketSetNextTxMode>
10057ada:	4620      	mov	r0, r4
10057adc:	f7ee fa8c 	bl	10045ff8 <BLEPLAT_CNTR_PacketSetTimerTrigRcv>
10057ae0:	bd70      	pop	{r4, r5, r6, pc}
10057ae2:	46c0      	nop			@ (mov r8, r8)

10057ae4 <__arm_cp.20_0>:
10057ae4:	20000894 	.word	0x20000894

10057ae8 <llc_mngm_mod_37>:
10057ae8:	4906      	ldr	r1, [pc, #24]	@ (10057b04 <__arm_cp.0_0>)
10057aea:	4341      	muls	r1, r0
10057aec:	0c09      	lsrs	r1, r1, #16
10057aee:	2224      	movs	r2, #36	@ 0x24
10057af0:	43d2      	mvns	r2, r2
10057af2:	434a      	muls	r2, r1
10057af4:	1810      	adds	r0, r2, r0
10057af6:	b281      	uxth	r1, r0
10057af8:	2924      	cmp	r1, #36	@ 0x24
10057afa:	d900      	bls.n	10057afe <llc_mngm_mod_37+0x16>
10057afc:	3825      	subs	r0, #37	@ 0x25
10057afe:	b2c0      	uxtb	r0, r0
10057b00:	4770      	bx	lr
10057b02:	46c0      	nop			@ (mov r8, r8)

10057b04 <__arm_cp.0_0>:
10057b04:	000006eb 	.word	0x000006eb

10057b08 <llc_mngm_csa2_update_remapping_table>:
10057b08:	b570      	push	{r4, r5, r6, lr}
10057b0a:	460d      	mov	r5, r1
10057b0c:	4604      	mov	r4, r0
10057b0e:	1c40      	adds	r0, r0, #1
10057b10:	2600      	movs	r6, #0
10057b12:	2225      	movs	r2, #37	@ 0x25
10057b14:	4631      	mov	r1, r6
10057b16:	f7ec ff55 	bl	100449c4 <BLEPLAT_MemSet>
10057b1a:	4630      	mov	r0, r6
10057b1c:	2e25      	cmp	r6, #37	@ 0x25
10057b1e:	d20c      	bcs.n	10057b3a <llc_mngm_csa2_update_remapping_table+0x32>
10057b20:	2107      	movs	r1, #7
10057b22:	4031      	ands	r1, r6
10057b24:	08f2      	lsrs	r2, r6, #3
10057b26:	5caa      	ldrb	r2, [r5, r2]
10057b28:	40ca      	lsrs	r2, r1
10057b2a:	07d1      	lsls	r1, r2, #31
10057b2c:	d003      	beq.n	10057b36 <llc_mngm_csa2_update_remapping_table+0x2e>
10057b2e:	b2c1      	uxtb	r1, r0
10057b30:	1861      	adds	r1, r4, r1
10057b32:	704e      	strb	r6, [r1, #1]
10057b34:	1c40      	adds	r0, r0, #1
10057b36:	1c76      	adds	r6, r6, #1
10057b38:	e7f0      	b.n	10057b1c <llc_mngm_csa2_update_remapping_table+0x14>
10057b3a:	7020      	strb	r0, [r4, #0]
10057b3c:	bd70      	pop	{r4, r5, r6, pc}

10057b3e <llc_mngm_csa2_select_channel_for_task>:
10057b3e:	b5f0      	push	{r4, r5, r6, r7, lr}
10057b40:	b08b      	sub	sp, #44	@ 0x2c
10057b42:	9305      	str	r3, [sp, #20]
10057b44:	4617      	mov	r7, r2
10057b46:	460d      	mov	r5, r1
10057b48:	a909      	add	r1, sp, #36	@ 0x24
10057b4a:	f7ee fae4 	bl	10046116 <BLEPLAT_CNTR_SmGetChannelMap>
10057b4e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
10057b50:	9810      	ldr	r0, [sp, #64]	@ 0x40
10057b52:	9006      	str	r0, [sp, #24]
10057b54:	2800      	cmp	r0, #0
10057b56:	d018      	beq.n	10057b8a <llc_mngm_csa2_select_channel_for_task+0x4c>
10057b58:	9504      	str	r5, [sp, #16]
10057b5a:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10057b5c:	2500      	movs	r5, #0
10057b5e:	9806      	ldr	r0, [sp, #24]
10057b60:	42a8      	cmp	r0, r5
10057b62:	d010      	beq.n	10057b86 <llc_mngm_csa2_select_channel_for_task+0x48>
10057b64:	9804      	ldr	r0, [sp, #16]
10057b66:	9003      	str	r0, [sp, #12]
10057b68:	a809      	add	r0, sp, #36	@ 0x24
10057b6a:	9002      	str	r0, [sp, #8]
10057b6c:	a808      	add	r0, sp, #32
10057b6e:	9001      	str	r0, [sp, #4]
10057b70:	a807      	add	r0, sp, #28
10057b72:	9000      	str	r0, [sp, #0]
10057b74:	b2eb      	uxtb	r3, r5
10057b76:	4620      	mov	r0, r4
10057b78:	4639      	mov	r1, r7
10057b7a:	9a05      	ldr	r2, [sp, #20]
10057b7c:	f000 f812 	bl	10057ba4 <llc_mngm_csa2_select_channel>
10057b80:	5570      	strb	r0, [r6, r5]
10057b82:	1c6d      	adds	r5, r5, #1
10057b84:	e7eb      	b.n	10057b5e <llc_mngm_csa2_select_channel_for_task+0x20>
10057b86:	7830      	ldrb	r0, [r6, #0]
10057b88:	e00a      	b.n	10057ba0 <llc_mngm_csa2_select_channel_for_task+0x62>
10057b8a:	9503      	str	r5, [sp, #12]
10057b8c:	a809      	add	r0, sp, #36	@ 0x24
10057b8e:	9002      	str	r0, [sp, #8]
10057b90:	2200      	movs	r2, #0
10057b92:	9201      	str	r2, [sp, #4]
10057b94:	9200      	str	r2, [sp, #0]
10057b96:	4620      	mov	r0, r4
10057b98:	4639      	mov	r1, r7
10057b9a:	4613      	mov	r3, r2
10057b9c:	f000 f802 	bl	10057ba4 <llc_mngm_csa2_select_channel>
10057ba0:	b00b      	add	sp, #44	@ 0x2c
10057ba2:	bdf0      	pop	{r4, r5, r6, r7, pc}

10057ba4 <llc_mngm_csa2_select_channel>:
10057ba4:	b5f0      	push	{r4, r5, r6, r7, lr}
10057ba6:	b089      	sub	sp, #36	@ 0x24
10057ba8:	4615      	mov	r5, r2
10057baa:	aa08      	add	r2, sp, #32
10057bac:	2600      	movs	r6, #0
10057bae:	7016      	strb	r6, [r2, #0]
10057bb0:	2d00      	cmp	r5, #0
10057bb2:	9306      	str	r3, [sp, #24]
10057bb4:	461a      	mov	r2, r3
10057bb6:	d100      	bne.n	10057bba <llc_mngm_csa2_select_channel+0x16>
10057bb8:	462a      	mov	r2, r5
10057bba:	0c07      	lsrs	r7, r0, #16
10057bbc:	4047      	eors	r7, r0
10057bbe:	9811      	ldr	r0, [sp, #68]	@ 0x44
10057bc0:	9007      	str	r0, [sp, #28]
10057bc2:	2d00      	cmp	r5, #0
10057bc4:	d104      	bne.n	10057bd0 <llc_mngm_csa2_select_channel+0x2c>
10057bc6:	2300      	movs	r3, #0
10057bc8:	9806      	ldr	r0, [sp, #24]
10057bca:	2801      	cmp	r0, #1
10057bcc:	461c      	mov	r4, r3
10057bce:	d838      	bhi.n	10057c42 <llc_mngm_csa2_select_channel+0x9e>
10057bd0:	9810      	ldr	r0, [sp, #64]	@ 0x40
10057bd2:	9005      	str	r0, [sp, #20]
10057bd4:	4079      	eors	r1, r7
10057bd6:	4051      	eors	r1, r2
10057bd8:	460c      	mov	r4, r1
10057bda:	2e02      	cmp	r6, #2
10057bdc:	d807      	bhi.n	10057bee <llc_mngm_csa2_select_channel+0x4a>
10057bde:	b2a0      	uxth	r0, r4
10057be0:	f000 f84e 	bl	10057c80 <llc_mngm_csa2_permutation>
10057be4:	2111      	movs	r1, #17
10057be6:	4341      	muls	r1, r0
10057be8:	19cc      	adds	r4, r1, r7
10057bea:	1c76      	adds	r6, r6, #1
10057bec:	e7f5      	b.n	10057bda <llc_mngm_csa2_select_channel+0x36>
10057bee:	4620      	mov	r0, r4
10057bf0:	4078      	eors	r0, r7
10057bf2:	b286      	uxth	r6, r0
10057bf4:	4630      	mov	r0, r6
10057bf6:	f7ff ff77 	bl	10057ae8 <llc_mngm_mod_37>
10057bfa:	2824      	cmp	r0, #36	@ 0x24
10057bfc:	d815      	bhi.n	10057c2a <llc_mngm_csa2_select_channel+0x86>
10057bfe:	08c1      	lsrs	r1, r0, #3
10057c00:	9a05      	ldr	r2, [sp, #20]
10057c02:	5c52      	ldrb	r2, [r2, r1]
10057c04:	00c9      	lsls	r1, r1, #3
10057c06:	1a41      	subs	r1, r0, r1
10057c08:	b2c9      	uxtb	r1, r1
10057c0a:	40ca      	lsrs	r2, r1
10057c0c:	07d1      	lsls	r1, r2, #31
10057c0e:	d00c      	beq.n	10057c2a <llc_mngm_csa2_select_channel+0x86>
10057c10:	a908      	add	r1, sp, #32
10057c12:	7008      	strb	r0, [r1, #0]
10057c14:	9a07      	ldr	r2, [sp, #28]
10057c16:	1c51      	adds	r1, r2, #1
10057c18:	7812      	ldrb	r2, [r2, #0]
10057c1a:	2300      	movs	r3, #0
10057c1c:	429a      	cmp	r2, r3
10057c1e:	d00d      	beq.n	10057c3c <llc_mngm_csa2_select_channel+0x98>
10057c20:	5cce      	ldrb	r6, [r1, r3]
10057c22:	4286      	cmp	r6, r0
10057c24:	d00b      	beq.n	10057c3e <llc_mngm_csa2_select_channel+0x9a>
10057c26:	1c5b      	adds	r3, r3, #1
10057c28:	e7f8      	b.n	10057c1c <llc_mngm_csa2_select_channel+0x78>
10057c2a:	9907      	ldr	r1, [sp, #28]
10057c2c:	7808      	ldrb	r0, [r1, #0]
10057c2e:	4346      	muls	r6, r0
10057c30:	0c33      	lsrs	r3, r6, #16
10057c32:	18c8      	adds	r0, r1, r3
10057c34:	7840      	ldrb	r0, [r0, #1]
10057c36:	a908      	add	r1, sp, #32
10057c38:	7008      	strb	r0, [r1, #0]
10057c3a:	e000      	b.n	10057c3e <llc_mngm_csa2_select_channel+0x9a>
10057c3c:	2325      	movs	r3, #37	@ 0x25
10057c3e:	2d00      	cmp	r5, #0
10057c40:	d10e      	bne.n	10057c60 <llc_mngm_csa2_select_channel+0xbc>
10057c42:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10057c44:	980e      	ldr	r0, [sp, #56]	@ 0x38
10057c46:	ad08      	add	r5, sp, #32
10057c48:	b2ba      	uxth	r2, r7
10057c4a:	9000      	str	r0, [sp, #0]
10057c4c:	9201      	str	r2, [sp, #4]
10057c4e:	9807      	ldr	r0, [sp, #28]
10057c50:	9002      	str	r0, [sp, #8]
10057c52:	9503      	str	r5, [sp, #12]
10057c54:	b2a2      	uxth	r2, r4
10057c56:	b2db      	uxtb	r3, r3
10057c58:	9806      	ldr	r0, [sp, #24]
10057c5a:	f000 f80f 	bl	10057c7c <llc_mngm_csa2_select_subevent_channel_ucfg_weak>
10057c5e:	7828      	ldrb	r0, [r5, #0]
10057c60:	b009      	add	sp, #36	@ 0x24
10057c62:	bdf0      	pop	{r4, r5, r6, r7, pc}

10057c64 <llc_mngm_csa2_select_random_channel>:
10057c64:	b510      	push	{r4, lr}
10057c66:	4604      	mov	r4, r0
10057c68:	2001      	movs	r0, #1
10057c6a:	f00d fddb 	bl	10065824 <Hal_Get_Random_Number>
10057c6e:	b2c0      	uxtb	r0, r0
10057c70:	7821      	ldrb	r1, [r4, #0]
10057c72:	f7e8 fb6b 	bl	1004034c <__aeabi_uidivmod>
10057c76:	1860      	adds	r0, r4, r1
10057c78:	7840      	ldrb	r0, [r0, #1]
10057c7a:	bd10      	pop	{r4, pc}

10057c7c <llc_mngm_csa2_select_subevent_channel_ucfg_weak>:
10057c7c:	4770      	bx	lr
	...

10057c80 <llc_mngm_csa2_permutation>:
10057c80:	0041      	lsls	r1, r0, #1
10057c82:	4a0a      	ldr	r2, [pc, #40]	@ (10057cac <__arm_cp.7_0>)
10057c84:	400a      	ands	r2, r1
10057c86:	0840      	lsrs	r0, r0, #1
10057c88:	4909      	ldr	r1, [pc, #36]	@ (10057cb0 <__arm_cp.7_1>)
10057c8a:	4001      	ands	r1, r0
10057c8c:	1888      	adds	r0, r1, r2
10057c8e:	0081      	lsls	r1, r0, #2
10057c90:	4a08      	ldr	r2, [pc, #32]	@ (10057cb4 <__arm_cp.7_2>)
10057c92:	400a      	ands	r2, r1
10057c94:	0880      	lsrs	r0, r0, #2
10057c96:	4908      	ldr	r1, [pc, #32]	@ (10057cb8 <__arm_cp.7_3>)
10057c98:	4001      	ands	r1, r0
10057c9a:	1888      	adds	r0, r1, r2
10057c9c:	0101      	lsls	r1, r0, #4
10057c9e:	4a07      	ldr	r2, [pc, #28]	@ (10057cbc <__arm_cp.7_4>)
10057ca0:	400a      	ands	r2, r1
10057ca2:	0900      	lsrs	r0, r0, #4
10057ca4:	4906      	ldr	r1, [pc, #24]	@ (10057cc0 <__arm_cp.7_5>)
10057ca6:	4001      	ands	r1, r0
10057ca8:	1888      	adds	r0, r1, r2
10057caa:	4770      	bx	lr

10057cac <__arm_cp.7_0>:
10057cac:	0001aaaa 	.word	0x0001aaaa

10057cb0 <__arm_cp.7_1>:
10057cb0:	00005555 	.word	0x00005555

10057cb4 <__arm_cp.7_2>:
10057cb4:	0007cccc 	.word	0x0007cccc

10057cb8 <__arm_cp.7_3>:
10057cb8:	00003333 	.word	0x00003333

10057cbc <__arm_cp.7_4>:
10057cbc:	0000f0f0 	.word	0x0000f0f0

10057cc0 <__arm_cp.7_5>:
10057cc0:	00000f0f 	.word	0x00000f0f

10057cc4 <llc_wl_clear_filter_accept_list>:
10057cc4:	b5b0      	push	{r4, r5, r7, lr}
10057cc6:	2401      	movs	r4, #1
10057cc8:	4620      	mov	r0, r4
10057cca:	f008 f843 	bl	1005fd54 <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list>
10057cce:	4605      	mov	r5, r0
10057cd0:	4620      	mov	r0, r4
10057cd2:	f004 fc39 	bl	1005c548 <llc_scan_any_scan_enabled_and_use_of_filter_accept_list>
10057cd6:	4328      	orrs	r0, r5
10057cd8:	d10a      	bne.n	10057cf0 <llc_wl_clear_filter_accept_list+0x2c>
10057cda:	4806      	ldr	r0, [pc, #24]	@ (10057cf4 <__arm_cp.1_0>)
10057cdc:	6800      	ldr	r0, [r0, #0]
10057cde:	219c      	movs	r1, #156	@ 0x9c
10057ce0:	5840      	ldr	r0, [r0, r1]
10057ce2:	300c      	adds	r0, #12
10057ce4:	f00d fd97 	bl	10065816 <addr8_list_clear>
10057ce8:	f001 fa80 	bl	100591ec <llc_priv_clr_all_filter_accept_list_flags_in_resolving_list_ucfg_weak>
10057cec:	2000      	movs	r0, #0
10057cee:	bdb0      	pop	{r4, r5, r7, pc}
10057cf0:	200c      	movs	r0, #12
10057cf2:	bdb0      	pop	{r4, r5, r7, pc}

10057cf4 <__arm_cp.1_0>:
10057cf4:	20000894 	.word	0x20000894

10057cf8 <llc_wl_add_device_to_filter_accept_list>:
10057cf8:	b5f0      	push	{r4, r5, r6, r7, lr}
10057cfa:	b087      	sub	sp, #28
10057cfc:	460c      	mov	r4, r1
10057cfe:	4605      	mov	r5, r0
10057d00:	9106      	str	r1, [sp, #24]
10057d02:	9005      	str	r0, [sp, #20]
10057d04:	2601      	movs	r6, #1
10057d06:	4630      	mov	r0, r6
10057d08:	f008 f824 	bl	1005fd54 <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list>
10057d0c:	4607      	mov	r7, r0
10057d0e:	4630      	mov	r0, r6
10057d10:	f004 fc1a 	bl	1005c548 <llc_scan_any_scan_enabled_and_use_of_filter_accept_list>
10057d14:	4338      	orrs	r0, r7
10057d16:	d11e      	bne.n	10057d56 <llc_wl_add_device_to_filter_accept_list+0x5e>
10057d18:	b2e8      	uxtb	r0, r5
10057d1a:	28ff      	cmp	r0, #255	@ 0xff
10057d1c:	d105      	bne.n	10057d2a <llc_wl_add_device_to_filter_accept_list+0x32>
10057d1e:	9005      	str	r0, [sp, #20]
10057d20:	21ff      	movs	r1, #255	@ 0xff
10057d22:	0609      	lsls	r1, r1, #24
10057d24:	400c      	ands	r4, r1
10057d26:	9406      	str	r4, [sp, #24]
10057d28:	4605      	mov	r5, r0
10057d2a:	4811      	ldr	r0, [pc, #68]	@ (10057d70 <__arm_cp.2_0>)
10057d2c:	6800      	ldr	r0, [r0, #0]
10057d2e:	219c      	movs	r1, #156	@ 0x9c
10057d30:	5840      	ldr	r0, [r0, r1]
10057d32:	a903      	add	r1, sp, #12
10057d34:	9101      	str	r1, [sp, #4]
10057d36:	a904      	add	r1, sp, #16
10057d38:	9100      	str	r1, [sp, #0]
10057d3a:	300c      	adds	r0, #12
10057d3c:	2600      	movs	r6, #0
10057d3e:	4629      	mov	r1, r5
10057d40:	4622      	mov	r2, r4
10057d42:	4633      	mov	r3, r6
10057d44:	f00d fce8 	bl	10065718 <addr8_list_add>
10057d48:	2800      	cmp	r0, #0
10057d4a:	d008      	beq.n	10057d5e <llc_wl_add_device_to_filter_accept_list+0x66>
10057d4c:	a805      	add	r0, sp, #20
10057d4e:	2101      	movs	r1, #1
10057d50:	f001 fa4b 	bl	100591ea <llc_priv_set_filter_accept_list_flag_in_resolving_list_ucfg_weak>
10057d54:	e000      	b.n	10057d58 <llc_wl_add_device_to_filter_accept_list+0x60>
10057d56:	260c      	movs	r6, #12
10057d58:	4630      	mov	r0, r6
10057d5a:	b007      	add	sp, #28
10057d5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057d5e:	a803      	add	r0, sp, #12
10057d60:	7800      	ldrb	r0, [r0, #0]
10057d62:	2800      	cmp	r0, #0
10057d64:	d001      	beq.n	10057d6a <llc_wl_add_device_to_filter_accept_list+0x72>
10057d66:	2600      	movs	r6, #0
10057d68:	e7f6      	b.n	10057d58 <llc_wl_add_device_to_filter_accept_list+0x60>
10057d6a:	2607      	movs	r6, #7
10057d6c:	e7f4      	b.n	10057d58 <llc_wl_add_device_to_filter_accept_list+0x60>
10057d6e:	46c0      	nop			@ (mov r8, r8)

10057d70 <__arm_cp.2_0>:
10057d70:	20000894 	.word	0x20000894

10057d74 <bis_csr_ucfg_weak>:
10057d74:	2000      	movs	r0, #0
10057d76:	4770      	bx	lr

10057d78 <cis_csr_ucfg_weak>:
10057d78:	2000      	movs	r0, #0
10057d7a:	4770      	bx	lr

10057d7c <llc_isoal_mem_alloc_ucfg_weak>:
10057d7c:	4770      	bx	lr

10057d7e <iso_rx_bn_pdu_event_int_cb_ucfg_weak>:
10057d7e:	2000      	movs	r0, #0
10057d80:	4770      	bx	lr

10057d82 <iso_terminate_event_int_cb_ucfg_weak>:
10057d82:	2000      	movs	r0, #0
10057d84:	4770      	bx	lr

10057d86 <iso_tx_bn_pdu_event_int_cb_ucfg_weak>:
10057d86:	2000      	movs	r0, #0
10057d88:	4770      	bx	lr

10057d8a <llc_iso_cmn_mem_alloc_ucfg_weak>:
10057d8a:	4770      	bx	lr

10057d8c <llc_padv_init>:
10057d8c:	b580      	push	{r7, lr}
10057d8e:	f00a fa97 	bl	100622c0 <llc_get_linkms_cntxt_p>
10057d92:	214d      	movs	r1, #77	@ 0x4d
10057d94:	5c41      	ldrb	r1, [r0, r1]
10057d96:	6800      	ldr	r0, [r0, #0]
10057d98:	3050      	adds	r0, #80	@ 0x50
10057d9a:	2900      	cmp	r1, #0
10057d9c:	d009      	beq.n	10057db2 <llc_padv_init+0x26>
10057d9e:	6802      	ldr	r2, [r0, #0]
10057da0:	6d52      	ldr	r2, [r2, #84]	@ 0x54
10057da2:	2300      	movs	r3, #0
10057da4:	67d3      	str	r3, [r2, #124]	@ 0x7c
10057da6:	7213      	strb	r3, [r2, #8]
10057da8:	2201      	movs	r2, #1
10057daa:	0212      	lsls	r2, r2, #8
10057dac:	1880      	adds	r0, r0, r2
10057dae:	1e49      	subs	r1, r1, #1
10057db0:	e7f3      	b.n	10057d9a <llc_padv_init+0xe>
10057db2:	bd80      	pop	{r7, pc}

10057db4 <llc_padv_init_per>:
10057db4:	2900      	cmp	r1, #0
10057db6:	d001      	beq.n	10057dbc <llc_padv_init_per+0x8>
10057db8:	2100      	movs	r1, #0
10057dba:	67c1      	str	r1, [r0, #124]	@ 0x7c
10057dbc:	2100      	movs	r1, #0
10057dbe:	7201      	strb	r1, [r0, #8]
10057dc0:	4770      	bx	lr

10057dc2 <llc_padv_is_periodic_advertising_context_allocated>:
10057dc2:	2800      	cmp	r0, #0
10057dc4:	d007      	beq.n	10057dd6 <llc_padv_is_periodic_advertising_context_allocated+0x14>
10057dc6:	6d00      	ldr	r0, [r0, #80]	@ 0x50
10057dc8:	2800      	cmp	r0, #0
10057dca:	d004      	beq.n	10057dd6 <llc_padv_is_periodic_advertising_context_allocated+0x14>
10057dcc:	6d40      	ldr	r0, [r0, #84]	@ 0x54
10057dce:	6008      	str	r0, [r1, #0]
10057dd0:	1e41      	subs	r1, r0, #1
10057dd2:	4188      	sbcs	r0, r1
10057dd4:	4770      	bx	lr
10057dd6:	2000      	movs	r0, #0
10057dd8:	6008      	str	r0, [r1, #0]
10057dda:	4770      	bx	lr

10057ddc <llc_padv_is_periodic_advertising_context_configured>:
10057ddc:	b510      	push	{r4, lr}
10057dde:	460c      	mov	r4, r1
10057de0:	f7ff ffef 	bl	10057dc2 <llc_padv_is_periodic_advertising_context_allocated>
10057de4:	2800      	cmp	r0, #0
10057de6:	d004      	beq.n	10057df2 <llc_padv_is_periodic_advertising_context_configured+0x16>
10057de8:	6820      	ldr	r0, [r4, #0]
10057dea:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
10057dec:	1e41      	subs	r1, r0, #1
10057dee:	4188      	sbcs	r0, r1
10057df0:	bd10      	pop	{r4, pc}
10057df2:	2000      	movs	r0, #0
10057df4:	bd10      	pop	{r4, pc}
	...

10057df8 <llc_padv_set_periodic_advertising_parameters>:
10057df8:	b5f0      	push	{r4, r5, r6, r7, lr}
10057dfa:	b085      	sub	sp, #20
10057dfc:	4616      	mov	r6, r2
10057dfe:	460f      	mov	r7, r1
10057e00:	4605      	mov	r5, r0
10057e02:	7840      	ldrb	r0, [r0, #1]
10057e04:	f007 ff4e 	bl	1005fca4 <llc_get_advertising_set_index>
10057e08:	4604      	mov	r4, r0
10057e0a:	482d      	ldr	r0, [pc, #180]	@ (10057ec0 <__arm_cp.0_1>)
10057e0c:	4284      	cmp	r4, r0
10057e0e:	d101      	bne.n	10057e14 <llc_padv_set_periodic_advertising_parameters+0x1c>
10057e10:	2142      	movs	r1, #66	@ 0x42
10057e12:	e04f      	b.n	10057eb4 <llc_padv_set_periodic_advertising_parameters+0xbc>
10057e14:	9702      	str	r7, [sp, #8]
10057e16:	9603      	str	r6, [sp, #12]
10057e18:	0227      	lsls	r7, r4, #8
10057e1a:	f00a fa51 	bl	100622c0 <llc_get_linkms_cntxt_p>
10057e1e:	6806      	ldr	r6, [r0, #0]
10057e20:	19f7      	adds	r7, r6, r7
10057e22:	a904      	add	r1, sp, #16
10057e24:	4638      	mov	r0, r7
10057e26:	f7ff ffcc 	bl	10057dc2 <llc_padv_is_periodic_advertising_context_allocated>
10057e2a:	210c      	movs	r1, #12
10057e2c:	2800      	cmp	r0, #0
10057e2e:	d041      	beq.n	10057eb4 <llc_padv_set_periodic_advertising_parameters+0xbc>
10057e30:	0220      	lsls	r0, r4, #8
10057e32:	1830      	adds	r0, r6, r0
10057e34:	22b8      	movs	r2, #184	@ 0xb8
10057e36:	5a80      	ldrh	r0, [r0, r2]
10057e38:	2233      	movs	r2, #51	@ 0x33
10057e3a:	4210      	tst	r0, r2
10057e3c:	d001      	beq.n	10057e42 <llc_padv_set_periodic_advertising_parameters+0x4a>
10057e3e:	2112      	movs	r1, #18
10057e40:	e038      	b.n	10057eb4 <llc_padv_set_periodic_advertising_parameters+0xbc>
10057e42:	9804      	ldr	r0, [sp, #16]
10057e44:	7a02      	ldrb	r2, [r0, #8]
10057e46:	2a00      	cmp	r2, #0
10057e48:	d134      	bne.n	10057eb4 <llc_padv_set_periodic_advertising_parameters+0xbc>
10057e4a:	6fc3      	ldr	r3, [r0, #124]	@ 0x7c
10057e4c:	2b00      	cmp	r3, #0
10057e4e:	d001      	beq.n	10057e54 <llc_padv_set_periodic_advertising_parameters+0x5c>
10057e50:	2600      	movs	r6, #0
10057e52:	e006      	b.n	10057e62 <llc_padv_set_periodic_advertising_parameters+0x6a>
10057e54:	4601      	mov	r1, r0
10057e56:	316e      	adds	r1, #110	@ 0x6e
10057e58:	2200      	movs	r2, #0
10057e5a:	72c2      	strb	r2, [r0, #11]
10057e5c:	67c7      	str	r7, [r0, #124]	@ 0x7c
10057e5e:	800a      	strh	r2, [r1, #0]
10057e60:	2601      	movs	r6, #1
10057e62:	7829      	ldrb	r1, [r5, #0]
10057e64:	88aa      	ldrh	r2, [r5, #4]
10057e66:	0257      	lsls	r7, r2, #9
10057e68:	2900      	cmp	r1, #0
10057e6a:	d001      	beq.n	10057e70 <llc_padv_set_periodic_advertising_parameters+0x78>
10057e6c:	463b      	mov	r3, r7
10057e6e:	e015      	b.n	10057e9c <llc_padv_set_periodic_advertising_parameters+0xa4>
10057e70:	9301      	str	r3, [sp, #4]
10057e72:	4912      	ldr	r1, [pc, #72]	@ (10057ebc <__arm_cp.0_0>)
10057e74:	2400      	movs	r4, #0
10057e76:	9400      	str	r4, [sp, #0]
10057e78:	b20a      	sxth	r2, r1
10057e7a:	4621      	mov	r1, r4
10057e7c:	4623      	mov	r3, r4
10057e7e:	f000 f821 	bl	10057ec4 <llc_padv_get_adv_event_length>
10057e82:	4287      	cmp	r7, r0
10057e84:	d206      	bcs.n	10057e94 <llc_padv_set_periodic_advertising_parameters+0x9c>
10057e86:	2145      	movs	r1, #69	@ 0x45
10057e88:	9801      	ldr	r0, [sp, #4]
10057e8a:	2800      	cmp	r0, #0
10057e8c:	d112      	bne.n	10057eb4 <llc_padv_set_periodic_advertising_parameters+0xbc>
10057e8e:	9804      	ldr	r0, [sp, #16]
10057e90:	67c4      	str	r4, [r0, #124]	@ 0x7c
10057e92:	e00f      	b.n	10057eb4 <llc_padv_set_periodic_advertising_parameters+0xbc>
10057e94:	7829      	ldrb	r1, [r5, #0]
10057e96:	88aa      	ldrh	r2, [r5, #4]
10057e98:	0253      	lsls	r3, r2, #9
10057e9a:	9804      	ldr	r0, [sp, #16]
10057e9c:	245a      	movs	r4, #90	@ 0x5a
10057e9e:	5302      	strh	r2, [r0, r4]
10057ea0:	6007      	str	r7, [r0, #0]
10057ea2:	6503      	str	r3, [r0, #80]	@ 0x50
10057ea4:	7241      	strb	r1, [r0, #9]
10057ea6:	9902      	ldr	r1, [sp, #8]
10057ea8:	6008      	str	r0, [r1, #0]
10057eaa:	88e9      	ldrh	r1, [r5, #6]
10057eac:	8081      	strh	r1, [r0, #4]
10057eae:	9803      	ldr	r0, [sp, #12]
10057eb0:	7006      	strb	r6, [r0, #0]
10057eb2:	2100      	movs	r1, #0
10057eb4:	4608      	mov	r0, r1
10057eb6:	b005      	add	sp, #20
10057eb8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10057eba:	46c0      	nop			@ (mov r8, r8)

10057ebc <__arm_cp.0_0>:
10057ebc:	0000ff81 	.word	0x0000ff81

10057ec0 <__arm_cp.0_1>:
10057ec0:	0000ffff 	.word	0x0000ffff

10057ec4 <llc_padv_get_adv_event_length>:
10057ec4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10057ec6:	4615      	mov	r5, r2
10057ec8:	460a      	mov	r2, r1
10057eca:	4604      	mov	r4, r0
10057ecc:	a803      	add	r0, sp, #12
10057ece:	9002      	str	r0, [sp, #8]
10057ed0:	9e08      	ldr	r6, [sp, #32]
10057ed2:	9601      	str	r6, [sp, #4]
10057ed4:	9300      	str	r3, [sp, #0]
10057ed6:	2001      	movs	r0, #1
10057ed8:	4621      	mov	r1, r4
10057eda:	462b      	mov	r3, r5
10057edc:	f004 fefa 	bl	1005ccd4 <llc_get_adv_event_length>
10057ee0:	2e00      	cmp	r6, #0
10057ee2:	d002      	beq.n	10057eea <llc_padv_get_adv_event_length+0x26>
10057ee4:	2173      	movs	r1, #115	@ 0x73
10057ee6:	9a03      	ldr	r2, [sp, #12]
10057ee8:	5462      	strb	r2, [r4, r1]
10057eea:	b004      	add	sp, #16
10057eec:	bd70      	pop	{r4, r5, r6, pc}
	...

10057ef0 <llc_padv_set_periodic_advertising_enable>:
10057ef0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10057ef2:	4605      	mov	r5, r0
10057ef4:	4608      	mov	r0, r1
10057ef6:	f007 fed5 	bl	1005fca4 <llc_get_advertising_set_index>
10057efa:	4606      	mov	r6, r0
10057efc:	483a      	ldr	r0, [pc, #232]	@ (10057fe8 <__arm_cp.2_1>)
10057efe:	4286      	cmp	r6, r0
10057f00:	d101      	bne.n	10057f06 <llc_padv_set_periodic_advertising_enable+0x16>
10057f02:	2442      	movs	r4, #66	@ 0x42
10057f04:	e02c      	b.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057f06:	0234      	lsls	r4, r6, #8
10057f08:	f00a f9da 	bl	100622c0 <llc_get_linkms_cntxt_p>
10057f0c:	6807      	ldr	r7, [r0, #0]
10057f0e:	1938      	adds	r0, r7, r4
10057f10:	a902      	add	r1, sp, #8
10057f12:	f7ff ff63 	bl	10057ddc <llc_padv_is_periodic_advertising_context_configured>
10057f16:	240c      	movs	r4, #12
10057f18:	2800      	cmp	r0, #0
10057f1a:	d021      	beq.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057f1c:	07e8      	lsls	r0, r5, #31
10057f1e:	d113      	bne.n	10057f48 <llc_padv_set_periodic_advertising_enable+0x58>
10057f20:	9d02      	ldr	r5, [sp, #8]
10057f22:	7a28      	ldrb	r0, [r5, #8]
10057f24:	2400      	movs	r4, #0
10057f26:	2800      	cmp	r0, #0
10057f28:	d01a      	beq.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057f2a:	722c      	strb	r4, [r5, #8]
10057f2c:	206c      	movs	r0, #108	@ 0x6c
10057f2e:	5c2e      	ldrb	r6, [r5, r0]
10057f30:	2eff      	cmp	r6, #255	@ 0xff
10057f32:	d015      	beq.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057f34:	4630      	mov	r0, r6
10057f36:	f00a fa43 	bl	100623c0 <LL_sched_set_cancel_request>
10057f3a:	4628      	mov	r0, r5
10057f3c:	f7f6 fc6b 	bl	1004e816 <llc_padv_wr_disable_ext_ucfg>
10057f40:	4630      	mov	r0, r6
10057f42:	f00a fdc7 	bl	10062ad4 <LL_sched_check_and_wait_sched>
10057f46:	e00b      	b.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057f48:	0230      	lsls	r0, r6, #8
10057f4a:	1838      	adds	r0, r7, r0
10057f4c:	21b8      	movs	r1, #184	@ 0xb8
10057f4e:	5a40      	ldrh	r0, [r0, r1]
10057f50:	2133      	movs	r1, #51	@ 0x33
10057f52:	4208      	tst	r0, r1
10057f54:	d104      	bne.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057f56:	9802      	ldr	r0, [sp, #8]
10057f58:	7a01      	ldrb	r1, [r0, #8]
10057f5a:	2400      	movs	r4, #0
10057f5c:	2900      	cmp	r1, #0
10057f5e:	d001      	beq.n	10057f64 <llc_padv_set_periodic_advertising_enable+0x74>
10057f60:	4620      	mov	r0, r4
10057f62:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10057f64:	7a47      	ldrb	r7, [r0, #9]
10057f66:	2607      	movs	r6, #7
10057f68:	f00a fd76 	bl	10062a58 <LL_sched_reserve_taskslot>
10057f6c:	28ff      	cmp	r0, #255	@ 0xff
10057f6e:	d00c      	beq.n	10057f8a <llc_padv_set_periodic_advertising_enable+0x9a>
10057f70:	9601      	str	r6, [sp, #4]
10057f72:	9902      	ldr	r1, [sp, #8]
10057f74:	4606      	mov	r6, r0
10057f76:	2f00      	cmp	r7, #0
10057f78:	d009      	beq.n	10057f8e <llc_padv_set_periodic_advertising_enable+0x9e>
10057f7a:	6f8f      	ldr	r7, [r1, #120]	@ 0x78
10057f7c:	f00a fd6c 	bl	10062a58 <LL_sched_reserve_taskslot>
10057f80:	28ff      	cmp	r0, #255	@ 0xff
10057f82:	d029      	beq.n	10057fd8 <llc_padv_set_periodic_advertising_enable+0xe8>
10057f84:	218c      	movs	r1, #140	@ 0x8c
10057f86:	5478      	strb	r0, [r7, r1]
10057f88:	e018      	b.n	10057fbc <llc_padv_set_periodic_advertising_enable+0xcc>
10057f8a:	4634      	mov	r4, r6
10057f8c:	e7e8      	b.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057f8e:	6f88      	ldr	r0, [r1, #120]	@ 0x78
10057f90:	3008      	adds	r0, #8
10057f92:	f007 fdbd 	bl	1005fb10 <LL_eadv_data_struc_are_data_present>
10057f96:	2800      	cmp	r0, #0
10057f98:	d010      	beq.n	10057fbc <llc_padv_set_periodic_advertising_enable+0xcc>
10057f9a:	4a12      	ldr	r2, [pc, #72]	@ (10057fe4 <__arm_cp.2_0>)
10057f9c:	9802      	ldr	r0, [sp, #8]
10057f9e:	2100      	movs	r1, #0
10057fa0:	9100      	str	r1, [sp, #0]
10057fa2:	b212      	sxth	r2, r2
10057fa4:	460b      	mov	r3, r1
10057fa6:	f7ff ff8d 	bl	10057ec4 <llc_padv_get_adv_event_length>
10057faa:	9902      	ldr	r1, [sp, #8]
10057fac:	6d09      	ldr	r1, [r1, #80]	@ 0x50
10057fae:	4281      	cmp	r1, r0
10057fb0:	d204      	bcs.n	10057fbc <llc_padv_set_periodic_advertising_enable+0xcc>
10057fb2:	4630      	mov	r0, r6
10057fb4:	f00a fd72 	bl	10062a9c <LL_sched_release_taskslot>
10057fb8:	2445      	movs	r4, #69	@ 0x45
10057fba:	e7d1      	b.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057fbc:	206c      	movs	r0, #108	@ 0x6c
10057fbe:	9902      	ldr	r1, [sp, #8]
10057fc0:	540e      	strb	r6, [r1, r0]
10057fc2:	2001      	movs	r0, #1
10057fc4:	7208      	strb	r0, [r1, #8]
10057fc6:	4608      	mov	r0, r1
10057fc8:	306c      	adds	r0, #108	@ 0x6c
10057fca:	07aa      	lsls	r2, r5, #30
10057fcc:	0fd2      	lsrs	r2, r2, #31
10057fce:	7042      	strb	r2, [r0, #1]
10057fd0:	1d88      	adds	r0, r1, #6
10057fd2:	f008 f9e5 	bl	100603a0 <LL_eadv_update_did>
10057fd6:	e7c3      	b.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057fd8:	4630      	mov	r0, r6
10057fda:	f00a fd5f 	bl	10062a9c <LL_sched_release_taskslot>
10057fde:	9c01      	ldr	r4, [sp, #4]
10057fe0:	e7be      	b.n	10057f60 <llc_padv_set_periodic_advertising_enable+0x70>
10057fe2:	46c0      	nop			@ (mov r8, r8)

10057fe4 <__arm_cp.2_0>:
10057fe4:	0000ff81 	.word	0x0000ff81

10057fe8 <__arm_cp.2_1>:
10057fe8:	0000ffff 	.word	0x0000ffff

10057fec <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising>:
10057fec:	b5f0      	push	{r4, r5, r6, r7, lr}
10057fee:	b0b9      	sub	sp, #228	@ 0xe4
10057ff0:	4604      	mov	r4, r0
10057ff2:	a915      	add	r1, sp, #84	@ 0x54
10057ff4:	f7ff fef2 	bl	10057ddc <llc_padv_is_periodic_advertising_context_configured>
10057ff8:	2100      	movs	r1, #0
10057ffa:	2800      	cmp	r0, #0
10057ffc:	d100      	bne.n	10058000 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x14>
10057ffe:	e180      	b.n	10058302 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x316>
10058000:	9815      	ldr	r0, [sp, #84]	@ 0x54
10058002:	7a00      	ldrb	r0, [r0, #8]
10058004:	2800      	cmp	r0, #0
10058006:	d100      	bne.n	1005800a <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x1e>
10058008:	e17b      	b.n	10058302 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x316>
1005800a:	20a0      	movs	r0, #160	@ 0xa0
1005800c:	5825      	ldr	r5, [r4, r0]
1005800e:	4620      	mov	r0, r4
10058010:	f000 f986 	bl	10058320 <llc_padv_get_min_aux_adv_ind_to_aux_sync_ind_offset>
10058014:	1940      	adds	r0, r0, r5
10058016:	9915      	ldr	r1, [sp, #84]	@ 0x54
10058018:	7a0a      	ldrb	r2, [r1, #8]
1005801a:	2a01      	cmp	r2, #1
1005801c:	4607      	mov	r7, r0
1005801e:	d000      	beq.n	10058022 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x36>
10058020:	6d4f      	ldr	r7, [r1, #84]	@ 0x54
10058022:	43fa      	mvns	r2, r7
10058024:	1882      	adds	r2, r0, r2
10058026:	d407      	bmi.n	10058038 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x4c>
10058028:	6d0c      	ldr	r4, [r1, #80]	@ 0x50
1005802a:	1bc0      	subs	r0, r0, r7
1005802c:	4621      	mov	r1, r4
1005802e:	f7e8 f907 	bl	10040240 <__udivsi3>
10058032:	1c40      	adds	r0, r0, #1
10058034:	4360      	muls	r0, r4
10058036:	19c7      	adds	r7, r0, r7
10058038:	1b78      	subs	r0, r7, r5
1005803a:	a914      	add	r1, sp, #80	@ 0x50
1005803c:	aa13      	add	r2, sp, #76	@ 0x4c
1005803e:	f009 f8a3 	bl	10061188 <llc_eadv_calculate_aux_ptr_offset>
10058042:	9814      	ldr	r0, [sp, #80]	@ 0x50
10058044:	0b40      	lsrs	r0, r0, #13
10058046:	4241      	negs	r1, r0
10058048:	4141      	adcs	r1, r0
1005804a:	910b      	str	r1, [sp, #44]	@ 0x2c
1005804c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
1005804e:	7a28      	ldrb	r0, [r5, #8]
10058050:	2801      	cmp	r0, #1
10058052:	d000      	beq.n	10058056 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x6a>
10058054:	e154      	b.n	10058300 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x314>
10058056:	462e      	mov	r6, r5
10058058:	3660      	adds	r6, #96	@ 0x60
1005805a:	48ab      	ldr	r0, [pc, #684]	@ (10058308 <__arm_cp.6_0>)
1005805c:	2101      	movs	r1, #1
1005805e:	9112      	str	r1, [sp, #72]	@ 0x48
10058060:	7001      	strb	r1, [r0, #0]
10058062:	2002      	movs	r0, #2
10058064:	900f      	str	r0, [sp, #60]	@ 0x3c
10058066:	7228      	strb	r0, [r5, #8]
10058068:	656f      	str	r7, [r5, #84]	@ 0x54
1005806a:	48a8      	ldr	r0, [pc, #672]	@ (1005830c <__arm_cp.6_1>)
1005806c:	6800      	ldr	r0, [r0, #0]
1005806e:	219c      	movs	r1, #156	@ 0x9c
10058070:	5844      	ldr	r4, [r0, r1]
10058072:	3448      	adds	r4, #72	@ 0x48
10058074:	4628      	mov	r0, r5
10058076:	300e      	adds	r0, #14
10058078:	9010      	str	r0, [sp, #64]	@ 0x40
1005807a:	2705      	movs	r7, #5
1005807c:	4621      	mov	r1, r4
1005807e:	463a      	mov	r2, r7
10058080:	f7ec fc90 	bl	100449a4 <BLEPLAT_MemCpy>
10058084:	4628      	mov	r0, r5
10058086:	305c      	adds	r0, #92	@ 0x5c
10058088:	4621      	mov	r1, r4
1005808a:	463a      	mov	r2, r7
1005808c:	f7ec fc8a 	bl	100449a4 <BLEPLAT_MemCpy>
10058090:	4628      	mov	r0, r5
10058092:	3014      	adds	r0, #20
10058094:	9009      	str	r0, [sp, #36]	@ 0x24
10058096:	4621      	mov	r1, r4
10058098:	f7ff fd36 	bl	10057b08 <llc_mngm_csa2_update_remapping_table>
1005809c:	f009 fee6 	bl	10061e6c <LL_link_get_own_sca_bitfield>
100580a0:	7831      	ldrb	r1, [r6, #0]
100580a2:	0140      	lsls	r0, r0, #5
100580a4:	4308      	orrs	r0, r1
100580a6:	7030      	strb	r0, [r6, #0]
100580a8:	f009 fe62 	bl	10061d70 <llc_generate_access_address>
100580ac:	7070      	strb	r0, [r6, #1]
100580ae:	0a01      	lsrs	r1, r0, #8
100580b0:	70b1      	strb	r1, [r6, #2]
100580b2:	0c01      	lsrs	r1, r0, #16
100580b4:	70f1      	strb	r1, [r6, #3]
100580b6:	0e00      	lsrs	r0, r0, #24
100580b8:	7130      	strb	r0, [r6, #4]
100580ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
100580bc:	f00d fbb9 	bl	10065832 <Hal_Get_Random_Number32>
100580c0:	7170      	strb	r0, [r6, #5]
100580c2:	0a01      	lsrs	r1, r0, #8
100580c4:	71b1      	strb	r1, [r6, #6]
100580c6:	2700      	movs	r7, #0
100580c8:	8177      	strh	r7, [r6, #10]
100580ca:	8137      	strh	r7, [r6, #8]
100580cc:	0c00      	lsrs	r0, r0, #16
100580ce:	71f0      	strb	r0, [r6, #7]
100580d0:	7870      	ldrb	r0, [r6, #1]
100580d2:	78b1      	ldrb	r1, [r6, #2]
100580d4:	78f2      	ldrb	r2, [r6, #3]
100580d6:	7933      	ldrb	r3, [r6, #4]
100580d8:	9738      	str	r7, [sp, #224]	@ 0xe0
100580da:	0209      	lsls	r1, r1, #8
100580dc:	1808      	adds	r0, r1, r0
100580de:	0411      	lsls	r1, r2, #16
100580e0:	1840      	adds	r0, r0, r1
100580e2:	0619      	lsls	r1, r3, #24
100580e4:	1840      	adds	r0, r0, r1
100580e6:	9008      	str	r0, [sp, #32]
100580e8:	9037      	str	r0, [sp, #220]	@ 0xdc
100580ea:	7970      	ldrb	r0, [r6, #5]
100580ec:	9011      	str	r0, [sp, #68]	@ 0x44
100580ee:	79b0      	ldrb	r0, [r6, #6]
100580f0:	900d      	str	r0, [sp, #52]	@ 0x34
100580f2:	79f0      	ldrb	r0, [r6, #7]
100580f4:	900e      	str	r0, [sp, #56]	@ 0x38
100580f6:	7b34      	ldrb	r4, [r6, #12]
100580f8:	a935      	add	r1, sp, #212	@ 0xd4
100580fa:	20ff      	movs	r0, #255	@ 0xff
100580fc:	7048      	strb	r0, [r1, #1]
100580fe:	910a      	str	r1, [sp, #40]	@ 0x28
10058100:	700c      	strb	r4, [r1, #0]
10058102:	f00a f8c1 	bl	10062288 <LL_get_tx_common_buffer_p>
10058106:	9734      	str	r7, [sp, #208]	@ 0xd0
10058108:	9033      	str	r0, [sp, #204]	@ 0xcc
1005810a:	9732      	str	r7, [sp, #200]	@ 0xc8
1005810c:	950c      	str	r5, [sp, #48]	@ 0x30
1005810e:	4628      	mov	r0, r5
10058110:	303c      	adds	r0, #60	@ 0x3c
10058112:	9031      	str	r0, [sp, #196]	@ 0xc4
10058114:	972c      	str	r7, [sp, #176]	@ 0xb0
10058116:	6d68      	ldr	r0, [r5, #84]	@ 0x54
10058118:	902b      	str	r0, [sp, #172]	@ 0xac
1005811a:	7a6d      	ldrb	r5, [r5, #9]
1005811c:	4620      	mov	r0, r4
1005811e:	9910      	ldr	r1, [sp, #64]	@ 0x40
10058120:	f7ee f934 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
10058124:	980d      	ldr	r0, [sp, #52]	@ 0x34
10058126:	0200      	lsls	r0, r0, #8
10058128:	9911      	ldr	r1, [sp, #68]	@ 0x44
1005812a:	1840      	adds	r0, r0, r1
1005812c:	9011      	str	r0, [sp, #68]	@ 0x44
1005812e:	980e      	ldr	r0, [sp, #56]	@ 0x38
10058130:	0400      	lsls	r0, r0, #16
10058132:	900d      	str	r0, [sp, #52]	@ 0x34
10058134:	a82b      	add	r0, sp, #172	@ 0xac
10058136:	a931      	add	r1, sp, #196	@ 0xc4
10058138:	aa33      	add	r2, sp, #204	@ 0xcc
1005813a:	950e      	str	r5, [sp, #56]	@ 0x38
1005813c:	2d00      	cmp	r5, #0
1005813e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10058140:	d01c      	beq.n	1005817c <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x190>
10058142:	1d03      	adds	r3, r0, #4
10058144:	1d09      	adds	r1, r1, #4
10058146:	1d10      	adds	r0, r2, #4
10058148:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1005814a:	1c52      	adds	r2, r2, #1
1005814c:	ac23      	add	r4, sp, #140	@ 0x8c
1005814e:	9422      	str	r4, [sp, #136]	@ 0x88
10058150:	ac25      	add	r4, sp, #148	@ 0x94
10058152:	9421      	str	r4, [sp, #132]	@ 0x84
10058154:	ac27      	add	r4, sp, #156	@ 0x9c
10058156:	9420      	str	r4, [sp, #128]	@ 0x80
10058158:	ac29      	add	r4, sp, #164	@ 0xa4
1005815a:	941f      	str	r4, [sp, #124]	@ 0x7c
1005815c:	ac36      	add	r4, sp, #216	@ 0xd8
1005815e:	941e      	str	r4, [sp, #120]	@ 0x78
10058160:	931d      	str	r3, [sp, #116]	@ 0x74
10058162:	ab2d      	add	r3, sp, #180	@ 0xb4
10058164:	931c      	str	r3, [sp, #112]	@ 0x70
10058166:	ab2f      	add	r3, sp, #188	@ 0xbc
10058168:	ac18      	add	r4, sp, #96	@ 0x60
1005816a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1005816c:	a837      	add	r0, sp, #220	@ 0xdc
1005816e:	9017      	str	r0, [sp, #92]	@ 0x5c
10058170:	9516      	str	r5, [sp, #88]	@ 0x58
10058172:	a816      	add	r0, sp, #88	@ 0x58
10058174:	f7f6 fb03 	bl	1004e77e <llc_padv_wr_set_start_parameters_ucfg>
10058178:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
1005817a:	e024      	b.n	100581c6 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x1da>
1005817c:	2400      	movs	r4, #0
1005817e:	9400      	str	r4, [sp, #0]
10058180:	207e      	movs	r0, #126	@ 0x7e
10058182:	43c2      	mvns	r2, r0
10058184:	4628      	mov	r0, r5
10058186:	4621      	mov	r1, r4
10058188:	4623      	mov	r3, r4
1005818a:	f7ff fe9b 	bl	10057ec4 <llc_padv_get_adv_event_length>
1005818e:	6fa9      	ldr	r1, [r5, #120]	@ 0x78
10058190:	2201      	movs	r2, #1
10058192:	920f      	str	r2, [sp, #60]	@ 0x3c
10058194:	700a      	strb	r2, [r1, #0]
10058196:	902f      	str	r0, [sp, #188]	@ 0xbc
10058198:	485d      	ldr	r0, [pc, #372]	@ (10058310 <__arm_cp.6_2>)
1005819a:	9029      	str	r0, [sp, #164]	@ 0xa4
1005819c:	485d      	ldr	r0, [pc, #372]	@ (10058314 <__arm_cp.6_3>)
1005819e:	9027      	str	r0, [sp, #156]	@ 0x9c
100581a0:	485d      	ldr	r0, [pc, #372]	@ (10058318 <__arm_cp.6_4>)
100581a2:	9025      	str	r0, [sp, #148]	@ 0x94
100581a4:	485d      	ldr	r0, [pc, #372]	@ (1005831c <__arm_cp.6_5>)
100581a6:	9023      	str	r0, [sp, #140]	@ 0x8c
100581a8:	6d28      	ldr	r0, [r5, #80]	@ 0x50
100581aa:	902d      	str	r0, [sp, #180]	@ 0xb4
100581ac:	8972      	ldrh	r2, [r6, #10]
100581ae:	7b30      	ldrb	r0, [r6, #12]
100581b0:	9400      	str	r4, [sp, #0]
100581b2:	9908      	ldr	r1, [sp, #32]
100581b4:	9101      	str	r1, [sp, #4]
100581b6:	9402      	str	r4, [sp, #8]
100581b8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100581ba:	4623      	mov	r3, r4
100581bc:	f7ff fcbf 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
100581c0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
100581c2:	a936      	add	r1, sp, #216	@ 0xd8
100581c4:	7008      	strb	r0, [r1, #0]
100581c6:	9811      	ldr	r0, [sp, #68]	@ 0x44
100581c8:	990d      	ldr	r1, [sp, #52]	@ 0x34
100581ca:	1844      	adds	r4, r0, r1
100581cc:	920f      	str	r2, [sp, #60]	@ 0x3c
100581ce:	0090      	lsls	r0, r2, #2
100581d0:	9011      	str	r0, [sp, #68]	@ 0x44
100581d2:	ae35      	add	r6, sp, #212	@ 0xd4
100581d4:	9811      	ldr	r0, [sp, #68]	@ 0x44
100581d6:	42b8      	cmp	r0, r7
100581d8:	d021      	beq.n	1005821e <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x232>
100581da:	2f00      	cmp	r7, #0
100581dc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
100581de:	d000      	beq.n	100581e2 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x1f6>
100581e0:	2502      	movs	r5, #2
100581e2:	a837      	add	r0, sp, #220	@ 0xdc
100581e4:	59c2      	ldr	r2, [r0, r7]
100581e6:	7830      	ldrb	r0, [r6, #0]
100581e8:	4948      	ldr	r1, [pc, #288]	@ (1005830c <__arm_cp.6_1>)
100581ea:	6809      	ldr	r1, [r1, #0]
100581ec:	7a49      	ldrb	r1, [r1, #9]
100581ee:	2300      	movs	r3, #0
100581f0:	9305      	str	r3, [sp, #20]
100581f2:	9506      	str	r5, [sp, #24]
100581f4:	2f00      	cmp	r7, #0
100581f6:	d001      	beq.n	100581fc <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x210>
100581f8:	2509      	movs	r5, #9
100581fa:	e000      	b.n	100581fe <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x212>
100581fc:	250e      	movs	r5, #14
100581fe:	9504      	str	r5, [sp, #16]
10058200:	ad31      	add	r5, sp, #196	@ 0xc4
10058202:	19ed      	adds	r5, r5, r7
10058204:	9503      	str	r5, [sp, #12]
10058206:	ad33      	add	r5, sp, #204	@ 0xcc
10058208:	19ed      	adds	r5, r5, r7
1005820a:	9502      	str	r5, [sp, #8]
1005820c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
1005820e:	9501      	str	r5, [sp, #4]
10058210:	9300      	str	r3, [sp, #0]
10058212:	4623      	mov	r3, r4
10058214:	f004 fbe7 	bl	1005c9e6 <llc_config_blue_sm>
10058218:	1c76      	adds	r6, r6, #1
1005821a:	1d3f      	adds	r7, r7, #4
1005821c:	e7da      	b.n	100581d4 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x1e8>
1005821e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10058220:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
10058222:	21c7      	movs	r1, #199	@ 0xc7
10058224:	5c40      	ldrb	r0, [r0, r1]
10058226:	f004 fcd5 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
1005822a:	4604      	mov	r4, r0
1005822c:	a835      	add	r0, sp, #212	@ 0xd4
1005822e:	7800      	ldrb	r0, [r0, #0]
10058230:	4621      	mov	r1, r4
10058232:	f7ee f9f8 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
10058236:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
10058238:	2f00      	cmp	r7, #0
1005823a:	d007      	beq.n	1005824c <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x260>
1005823c:	a835      	add	r0, sp, #212	@ 0xd4
1005823e:	7840      	ldrb	r0, [r0, #1]
10058240:	4621      	mov	r1, r4
10058242:	f7ee f984 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
10058246:	4628      	mov	r0, r5
10058248:	f000 fbba 	bl	100589c0 <llc_padv_wr_set_rx_data_length>
1005824c:	9836      	ldr	r0, [sp, #216]	@ 0xd8
1005824e:	72a8      	strb	r0, [r5, #10]
10058250:	ac35      	add	r4, sp, #212	@ 0xd4
10058252:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
10058254:	2e00      	cmp	r6, #0
10058256:	d007      	beq.n	10058268 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x27c>
10058258:	a836      	add	r0, sp, #216	@ 0xd8
1005825a:	7801      	ldrb	r1, [r0, #0]
1005825c:	7820      	ldrb	r0, [r4, #0]
1005825e:	f7ee f902 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
10058262:	1c64      	adds	r4, r4, #1
10058264:	1e76      	subs	r6, r6, #1
10058266:	e7f5      	b.n	10058254 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x268>
10058268:	4628      	mov	r0, r5
1005826a:	f007 fc25 	bl	1005fab8 <LLC_blueapi_cte_ucfg_weak>
1005826e:	2f00      	cmp	r7, #0
10058270:	d001      	beq.n	10058276 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x28a>
10058272:	250b      	movs	r5, #11
10058274:	e000      	b.n	10058278 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x28c>
10058276:	251b      	movs	r5, #27
10058278:	2f00      	cmp	r7, #0
1005827a:	d001      	beq.n	10058280 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x294>
1005827c:	2608      	movs	r6, #8
1005827e:	e000      	b.n	10058282 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x296>
10058280:	2607      	movs	r6, #7
10058282:	2488      	movs	r4, #136	@ 0x88
10058284:	2700      	movs	r7, #0
10058286:	a835      	add	r0, sp, #212	@ 0xd4
10058288:	9012      	str	r0, [sp, #72]	@ 0x48
1005828a:	9811      	ldr	r0, [sp, #68]	@ 0x44
1005828c:	42b8      	cmp	r0, r7
1005828e:	d037      	beq.n	10058300 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x314>
10058290:	940d      	str	r4, [sp, #52]	@ 0x34
10058292:	960e      	str	r6, [sp, #56]	@ 0x38
10058294:	950f      	str	r5, [sp, #60]	@ 0x3c
10058296:	a82f      	add	r0, sp, #188	@ 0xbc
10058298:	59c3      	ldr	r3, [r0, r7]
1005829a:	a82d      	add	r0, sp, #180	@ 0xb4
1005829c:	59c2      	ldr	r2, [r0, r7]
1005829e:	a82b      	add	r0, sp, #172	@ 0xac
100582a0:	59c0      	ldr	r0, [r0, r7]
100582a2:	9010      	str	r0, [sp, #64]	@ 0x40
100582a4:	a829      	add	r0, sp, #164	@ 0xa4
100582a6:	59c5      	ldr	r5, [r0, r7]
100582a8:	a827      	add	r0, sp, #156	@ 0x9c
100582aa:	59c6      	ldr	r6, [r0, r7]
100582ac:	a825      	add	r0, sp, #148	@ 0x94
100582ae:	59c4      	ldr	r4, [r0, r7]
100582b0:	a823      	add	r0, sp, #140	@ 0x8c
100582b2:	59c1      	ldr	r1, [r0, r7]
100582b4:	9812      	ldr	r0, [sp, #72]	@ 0x48
100582b6:	7800      	ldrb	r0, [r0, #0]
100582b8:	9504      	str	r5, [sp, #16]
100582ba:	9605      	str	r6, [sp, #20]
100582bc:	9406      	str	r4, [sp, #24]
100582be:	9107      	str	r1, [sp, #28]
100582c0:	2f04      	cmp	r7, #4
100582c2:	d003      	beq.n	100582cc <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x2e0>
100582c4:	990c      	ldr	r1, [sp, #48]	@ 0x30
100582c6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100582c8:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
100582ca:	e002      	b.n	100582d2 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x2e6>
100582cc:	2607      	movs	r6, #7
100582ce:	990c      	ldr	r1, [sp, #48]	@ 0x30
100582d0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100582d2:	b2f4      	uxtb	r4, r6
100582d4:	9403      	str	r4, [sp, #12]
100582d6:	2f04      	cmp	r7, #4
100582d8:	d100      	bne.n	100582dc <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x2f0>
100582da:	250a      	movs	r5, #10
100582dc:	b2ec      	uxtb	r4, r5
100582de:	9200      	str	r2, [sp, #0]
100582e0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
100582e2:	9201      	str	r2, [sp, #4]
100582e4:	9402      	str	r4, [sp, #8]
100582e6:	2f04      	cmp	r7, #4
100582e8:	d001      	beq.n	100582ee <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x302>
100582ea:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
100582ec:	e000      	b.n	100582f0 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x304>
100582ee:	2408      	movs	r4, #8
100582f0:	b2e2      	uxtb	r2, r4
100582f2:	f00a f877 	bl	100623e4 <LL_sched_enable_taskslot>
100582f6:	9812      	ldr	r0, [sp, #72]	@ 0x48
100582f8:	1c40      	adds	r0, r0, #1
100582fa:	9012      	str	r0, [sp, #72]	@ 0x48
100582fc:	1d3f      	adds	r7, r7, #4
100582fe:	e7c4      	b.n	1005828a <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising+0x29e>
10058300:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10058302:	4608      	mov	r0, r1
10058304:	b039      	add	sp, #228	@ 0xe4
10058306:	bdf0      	pop	{r4, r5, r6, r7, pc}

10058308 <__arm_cp.6_0>:
10058308:	2000088c 	.word	0x2000088c

1005830c <__arm_cp.6_1>:
1005830c:	20000894 	.word	0x20000894

10058310 <__arm_cp.6_2>:
10058310:	10069141 	.word	0x10069141

10058314 <__arm_cp.6_3>:
10058314:	1006922f 	.word	0x1006922f

10058318 <__arm_cp.6_4>:
10058318:	100692d9 	.word	0x100692d9

1005831c <__arm_cp.6_5>:
1005831c:	100692cd 	.word	0x100692cd

10058320 <llc_padv_get_min_aux_adv_ind_to_aux_sync_ind_offset>:
10058320:	b5b0      	push	{r4, r5, r7, lr}
10058322:	4604      	mov	r4, r0
10058324:	8dc5      	ldrh	r5, [r0, #46]	@ 0x2e
10058326:	20fb      	movs	r0, #251	@ 0xfb
10058328:	85e0      	strh	r0, [r4, #46]	@ 0x2e
1005832a:	2100      	movs	r1, #0
1005832c:	4620      	mov	r0, r4
1005832e:	f007 fd03 	bl	1005fd38 <llc_eadv_get_adv_event_length>
10058332:	85e5      	strh	r5, [r4, #46]	@ 0x2e
10058334:	3080      	adds	r0, #128	@ 0x80
10058336:	bdb0      	pop	{r4, r5, r7, pc}

10058338 <llc_padv_update_sync_info>:
10058338:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005833a:	4604      	mov	r4, r0
1005833c:	7a00      	ldrb	r0, [r0, #8]
1005833e:	2802      	cmp	r0, #2
10058340:	d135      	bne.n	100583ae <llc_padv_update_sync_info+0x76>
10058342:	460d      	mov	r5, r1
10058344:	4627      	mov	r7, r4
10058346:	3768      	adds	r7, #104	@ 0x68
10058348:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
1005834a:	f7ff ffe9 	bl	10058320 <llc_padv_get_min_aux_adv_ind_to_aux_sync_ind_offset>
1005834e:	8879      	ldrh	r1, [r7, #2]
10058350:	9102      	str	r1, [sp, #8]
10058352:	6d66      	ldr	r6, [r4, #84]	@ 0x54
10058354:	4917      	ldr	r1, [pc, #92]	@ (100583b4 <__arm_cp.9_0>)
10058356:	7809      	ldrb	r1, [r1, #0]
10058358:	2900      	cmp	r1, #0
1005835a:	d10f      	bne.n	1005837c <llc_padv_update_sync_info+0x44>
1005835c:	1940      	adds	r0, r0, r5
1005835e:	43f1      	mvns	r1, r6
10058360:	1841      	adds	r1, r0, r1
10058362:	d40b      	bmi.n	1005837c <llc_padv_update_sync_info+0x44>
10058364:	1b80      	subs	r0, r0, r6
10058366:	6d21      	ldr	r1, [r4, #80]	@ 0x50
10058368:	9101      	str	r1, [sp, #4]
1005836a:	f7e7 ff69 	bl	10040240 <__udivsi3>
1005836e:	1c40      	adds	r0, r0, #1
10058370:	9902      	ldr	r1, [sp, #8]
10058372:	1809      	adds	r1, r1, r0
10058374:	9102      	str	r1, [sp, #8]
10058376:	9901      	ldr	r1, [sp, #4]
10058378:	4341      	muls	r1, r0
1005837a:	198e      	adds	r6, r1, r6
1005837c:	1b71      	subs	r1, r6, r5
1005837e:	4620      	mov	r0, r4
10058380:	3058      	adds	r0, #88	@ 0x58
10058382:	2501      	movs	r5, #1
10058384:	462a      	mov	r2, r5
10058386:	f000 f817 	bl	100583b8 <llc_padv_set_sync_info_offset>
1005838a:	4e0a      	ldr	r6, [pc, #40]	@ (100583b4 <__arm_cp.9_0>)
1005838c:	7831      	ldrb	r1, [r6, #0]
1005838e:	2901      	cmp	r1, #1
10058390:	d10a      	bne.n	100583a8 <llc_padv_update_sync_info+0x70>
10058392:	6d61      	ldr	r1, [r4, #84]	@ 0x54
10058394:	1a09      	subs	r1, r1, r0
10058396:	6561      	str	r1, [r4, #84]	@ 0x54
10058398:	7938      	ldrb	r0, [r7, #4]
1005839a:	f009 ffff 	bl	1006239c <LL_sched_set_anchor>
1005839e:	2000      	movs	r0, #0
100583a0:	7030      	strb	r0, [r6, #0]
100583a2:	4620      	mov	r0, r4
100583a4:	f7f6 fa23 	bl	1004e7ee <llc_padv_wr_init_anchors_and_counters_ucfg>
100583a8:	9802      	ldr	r0, [sp, #8]
100583aa:	8038      	strh	r0, [r7, #0]
100583ac:	e000      	b.n	100583b0 <llc_padv_update_sync_info+0x78>
100583ae:	2500      	movs	r5, #0
100583b0:	4628      	mov	r0, r5
100583b2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100583b4 <__arm_cp.9_0>:
100583b4:	2000088c 	.word	0x2000088c

100583b8 <llc_padv_set_sync_info_offset>:
100583b8:	b57c      	push	{r2, r3, r4, r5, r6, lr}
100583ba:	4615      	mov	r5, r2
100583bc:	4604      	mov	r4, r0
100583be:	2200      	movs	r2, #0
100583c0:	9201      	str	r2, [sp, #4]
100583c2:	4668      	mov	r0, sp
100583c4:	7002      	strb	r2, [r0, #0]
100583c6:	480f      	ldr	r0, [pc, #60]	@ (10058404 <__arm_cp.10_0>)
100583c8:	4281      	cmp	r1, r0
100583ca:	4613      	mov	r3, r2
100583cc:	4610      	mov	r0, r2
100583ce:	d808      	bhi.n	100583e2 <llc_padv_set_sync_info_offset+0x2a>
100583d0:	aa01      	add	r2, sp, #4
100583d2:	466e      	mov	r6, sp
100583d4:	4608      	mov	r0, r1
100583d6:	4611      	mov	r1, r2
100583d8:	4632      	mov	r2, r6
100583da:	f008 fed5 	bl	10061188 <llc_eadv_calculate_aux_ptr_offset>
100583de:	7832      	ldrb	r2, [r6, #0]
100583e0:	9b01      	ldr	r3, [sp, #4]
100583e2:	7023      	strb	r3, [r4, #0]
100583e4:	0151      	lsls	r1, r2, #5
100583e6:	04db      	lsls	r3, r3, #19
100583e8:	0edb      	lsrs	r3, r3, #27
100583ea:	18c9      	adds	r1, r1, r3
100583ec:	2a00      	cmp	r2, #0
100583ee:	d101      	bne.n	100583f4 <llc_padv_set_sync_info_offset+0x3c>
100583f0:	460a      	mov	r2, r1
100583f2:	e001      	b.n	100583f8 <llc_padv_set_sync_info_offset+0x40>
100583f4:	2240      	movs	r2, #64	@ 0x40
100583f6:	430a      	orrs	r2, r1
100583f8:	2d00      	cmp	r5, #0
100583fa:	d000      	beq.n	100583fe <llc_padv_set_sync_info_offset+0x46>
100583fc:	460a      	mov	r2, r1
100583fe:	7062      	strb	r2, [r4, #1]
10058400:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10058402:	46c0      	nop			@ (mov r8, r8)

10058404 <__arm_cp.10_0>:
10058404:	000f5bae 	.word	0x000f5bae

10058408 <llc_padv_prepare_periodic_advertising_payload>:
10058408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005840a:	460e      	mov	r6, r1
1005840c:	4604      	mov	r4, r0
1005840e:	6fc7      	ldr	r7, [r0, #124]	@ 0x7c
10058410:	0748      	lsls	r0, r1, #29
10058412:	d401      	bmi.n	10058418 <llc_padv_prepare_periodic_advertising_payload+0x10>
10058414:	2500      	movs	r5, #0
10058416:	e003      	b.n	10058420 <llc_padv_prepare_periodic_advertising_payload+0x18>
10058418:	2075      	movs	r0, #117	@ 0x75
1005841a:	5c20      	ldrb	r0, [r4, r0]
1005841c:	7010      	strb	r0, [r2, #0]
1005841e:	2501      	movs	r5, #1
10058420:	0730      	lsls	r0, r6, #28
10058422:	9200      	str	r2, [sp, #0]
10058424:	d506      	bpl.n	10058434 <llc_padv_prepare_periodic_advertising_payload+0x2c>
10058426:	1951      	adds	r1, r2, r5
10058428:	88e3      	ldrh	r3, [r4, #6]
1005842a:	2201      	movs	r2, #1
1005842c:	4638      	mov	r0, r7
1005842e:	f009 fb08 	bl	10061a42 <llc_eadv_set_adi>
10058432:	1cad      	adds	r5, r5, #2
10058434:	37c4      	adds	r7, #196	@ 0xc4
10058436:	06f0      	lsls	r0, r6, #27
10058438:	d508      	bpl.n	1005844c <llc_padv_prepare_periodic_advertising_payload+0x44>
1005843a:	9800      	ldr	r0, [sp, #0]
1005843c:	1940      	adds	r0, r0, r5
1005843e:	78fb      	ldrb	r3, [r7, #3]
10058440:	7aa2      	ldrb	r2, [r4, #10]
10058442:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
10058444:	6849      	ldr	r1, [r1, #4]
10058446:	f009 fb0a 	bl	10061a5e <llc_eadv_set_auxptr>
1005844a:	1ced      	adds	r5, r5, #3
1005844c:	0670      	lsls	r0, r6, #25
1005844e:	d401      	bmi.n	10058454 <llc_padv_prepare_periodic_advertising_payload+0x4c>
10058450:	9900      	ldr	r1, [sp, #0]
10058452:	e005      	b.n	10058460 <llc_padv_prepare_periodic_advertising_payload+0x58>
10058454:	7838      	ldrb	r0, [r7, #0]
10058456:	f009 fc6b 	bl	10061d30 <convert_power>
1005845a:	9900      	ldr	r1, [sp, #0]
1005845c:	5548      	strb	r0, [r1, r5]
1005845e:	1c6d      	adds	r5, r5, #1
10058460:	b270      	sxtb	r0, r6
10058462:	2800      	cmp	r0, #0
10058464:	d400      	bmi.n	10058468 <llc_padv_prepare_periodic_advertising_payload+0x60>
10058466:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10058468:	7ae0      	ldrb	r0, [r4, #11]
1005846a:	2800      	cmp	r0, #0
1005846c:	d013      	beq.n	10058496 <llc_padv_prepare_periodic_advertising_payload+0x8e>
1005846e:	2008      	movs	r0, #8
10058470:	5548      	strb	r0, [r1, r5]
10058472:	460f      	mov	r7, r1
10058474:	194e      	adds	r6, r1, r5
10058476:	2028      	movs	r0, #40	@ 0x28
10058478:	7070      	strb	r0, [r6, #1]
1005847a:	1cb0      	adds	r0, r6, #2
1005847c:	4621      	mov	r1, r4
1005847e:	310e      	adds	r1, #14
10058480:	2205      	movs	r2, #5
10058482:	f7ec fa8f 	bl	100449a4 <BLEPLAT_MemCpy>
10058486:	1df0      	adds	r0, r6, #7
10058488:	4621      	mov	r1, r4
1005848a:	310c      	adds	r1, #12
1005848c:	2202      	movs	r2, #2
1005848e:	f7ec fa89 	bl	100449a4 <BLEPLAT_MemCpy>
10058492:	3509      	adds	r5, #9
10058494:	e000      	b.n	10058498 <llc_padv_prepare_periodic_advertising_payload+0x90>
10058496:	460f      	mov	r7, r1
10058498:	4620      	mov	r0, r4
1005849a:	f00f ff47 	bl	1006832c <llc_big_brc_is_big_enabled>
1005849e:	2800      	cmp	r0, #0
100584a0:	d0e1      	beq.n	10058466 <llc_padv_prepare_periodic_advertising_payload+0x5e>
100584a2:	1979      	adds	r1, r7, r5
100584a4:	4620      	mov	r0, r4
100584a6:	f00f ff40 	bl	1006832a <llc_big_brc_add_biginfo_to_periodic_sync_packet_ucfg_weak>
100584aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100584ac <llc_padv_periodic_adv_sync_csr>:
100584ac:	2001      	movs	r0, #1
100584ae:	4770      	bx	lr

100584b0 <llc_padv_get_configured_context>:
100584b0:	b51c      	push	{r2, r3, r4, lr}
100584b2:	f007 fbf7 	bl	1005fca4 <llc_get_advertising_set_index>
100584b6:	4907      	ldr	r1, [pc, #28]	@ (100584d4 <__arm_cp.16_0>)
100584b8:	4288      	cmp	r0, r1
100584ba:	d009      	beq.n	100584d0 <llc_padv_get_configured_context+0x20>
100584bc:	0204      	lsls	r4, r0, #8
100584be:	f009 feff 	bl	100622c0 <llc_get_linkms_cntxt_p>
100584c2:	6800      	ldr	r0, [r0, #0]
100584c4:	1900      	adds	r0, r0, r4
100584c6:	a901      	add	r1, sp, #4
100584c8:	f7ff fc88 	bl	10057ddc <llc_padv_is_periodic_advertising_context_configured>
100584cc:	9801      	ldr	r0, [sp, #4]
100584ce:	bd1c      	pop	{r2, r3, r4, pc}
100584d0:	2000      	movs	r0, #0
100584d2:	bd1c      	pop	{r2, r3, r4, pc}

100584d4 <__arm_cp.16_0>:
100584d4:	0000ffff 	.word	0x0000ffff

100584d8 <llc_padv_wr_mem_allocate>:
100584d8:	b5f0      	push	{r4, r5, r6, r7, lr}
100584da:	b08f      	sub	sp, #60	@ 0x3c
100584dc:	2801      	cmp	r0, #1
100584de:	d000      	beq.n	100584e2 <llc_padv_wr_mem_allocate+0xa>
100584e0:	e080      	b.n	100585e4 <llc_padv_wr_mem_allocate+0x10c>
100584e2:	2901      	cmp	r1, #1
100584e4:	d17e      	bne.n	100585e4 <llc_padv_wr_mem_allocate+0x10c>
100584e6:	461d      	mov	r5, r3
100584e8:	4617      	mov	r7, r2
100584ea:	f009 fee9 	bl	100622c0 <llc_get_linkms_cntxt_p>
100584ee:	2800      	cmp	r0, #0
100584f0:	d078      	beq.n	100585e4 <llc_padv_wr_mem_allocate+0x10c>
100584f2:	6800      	ldr	r0, [r0, #0]
100584f4:	900a      	str	r0, [sp, #40]	@ 0x28
100584f6:	2800      	cmp	r0, #0
100584f8:	d074      	beq.n	100585e4 <llc_padv_wr_mem_allocate+0x10c>
100584fa:	7828      	ldrb	r0, [r5, #0]
100584fc:	2801      	cmp	r0, #1
100584fe:	d171      	bne.n	100585e4 <llc_padv_wr_mem_allocate+0x10c>
10058500:	7868      	ldrb	r0, [r5, #1]
10058502:	2801      	cmp	r0, #1
10058504:	d16e      	bne.n	100585e4 <llc_padv_wr_mem_allocate+0x10c>
10058506:	2180      	movs	r1, #128	@ 0x80
10058508:	4c37      	ldr	r4, [pc, #220]	@ (100585e8 <__arm_cp.0_0>)
1005850a:	4638      	mov	r0, r7
1005850c:	47a0      	blx	r4
1005850e:	4622      	mov	r2, r4
10058510:	9008      	str	r0, [sp, #32]
10058512:	78ae      	ldrb	r6, [r5, #2]
10058514:	78ec      	ldrb	r4, [r5, #3]
10058516:	2190      	movs	r1, #144	@ 0x90
10058518:	4638      	mov	r0, r7
1005851a:	9106      	str	r1, [sp, #24]
1005851c:	4615      	mov	r5, r2
1005851e:	4790      	blx	r2
10058520:	9005      	str	r0, [sp, #20]
10058522:	2110      	movs	r1, #16
10058524:	4638      	mov	r0, r7
10058526:	47a8      	blx	r5
10058528:	900d      	str	r0, [sp, #52]	@ 0x34
1005852a:	0121      	lsls	r1, r4, #4
1005852c:	4638      	mov	r0, r7
1005852e:	47a8      	blx	r5
10058530:	9004      	str	r0, [sp, #16]
10058532:	00b1      	lsls	r1, r6, #2
10058534:	4638      	mov	r0, r7
10058536:	47a8      	blx	r5
10058538:	9003      	str	r0, [sp, #12]
1005853a:	4638      	mov	r0, r7
1005853c:	4631      	mov	r1, r6
1005853e:	47a8      	blx	r5
10058540:	9002      	str	r0, [sp, #8]
10058542:	00e1      	lsls	r1, r4, #3
10058544:	0060      	lsls	r0, r4, #1
10058546:	9001      	str	r0, [sp, #4]
10058548:	9607      	str	r6, [sp, #28]
1005854a:	0073      	lsls	r3, r6, #1
1005854c:	2500      	movs	r5, #0
1005854e:	950e      	str	r5, [sp, #56]	@ 0x38
10058550:	9709      	str	r7, [sp, #36]	@ 0x24
10058552:	980e      	ldr	r0, [sp, #56]	@ 0x38
10058554:	42b8      	cmp	r0, r7
10058556:	d045      	beq.n	100585e4 <llc_padv_wr_mem_allocate+0x10c>
10058558:	980e      	ldr	r0, [sp, #56]	@ 0x38
1005855a:	0200      	lsls	r0, r0, #8
1005855c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1005855e:	1810      	adds	r0, r2, r0
10058560:	6d00      	ldr	r0, [r0, #80]	@ 0x50
10058562:	2800      	cmp	r0, #0
10058564:	d039      	beq.n	100585da <llc_padv_wr_mem_allocate+0x102>
10058566:	247f      	movs	r4, #127	@ 0x7f
10058568:	950c      	str	r5, [sp, #48]	@ 0x30
1005856a:	402c      	ands	r4, r5
1005856c:	900b      	str	r0, [sp, #44]	@ 0x2c
1005856e:	0120      	lsls	r0, r4, #4
10058570:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10058572:	1810      	adds	r0, r2, r0
10058574:	4625      	mov	r5, r4
10058576:	9a01      	ldr	r2, [sp, #4]
10058578:	4355      	muls	r5, r2
1005857a:	00ed      	lsls	r5, r5, #3
1005857c:	9a04      	ldr	r2, [sp, #16]
1005857e:	1957      	adds	r7, r2, r5
10058580:	435c      	muls	r4, r3
10058582:	0064      	lsls	r4, r4, #1
10058584:	9a03      	ldr	r2, [sp, #12]
10058586:	1915      	adds	r5, r2, r4
10058588:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
1005858a:	01f4      	lsls	r4, r6, #7
1005858c:	9a08      	ldr	r2, [sp, #32]
1005858e:	1914      	adds	r4, r2, r4
10058590:	9a06      	ldr	r2, [sp, #24]
10058592:	4372      	muls	r2, r6
10058594:	9e05      	ldr	r6, [sp, #20]
10058596:	18b6      	adds	r6, r6, r2
10058598:	67a6      	str	r6, [r4, #120]	@ 0x78
1005859a:	22ff      	movs	r2, #255	@ 0xff
1005859c:	7262      	strb	r2, [r4, #9]
1005859e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100585a0:	6554      	str	r4, [r2, #84]	@ 0x54
100585a2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100585a4:	0652      	lsls	r2, r2, #25
100585a6:	0d52      	lsrs	r2, r2, #21
100585a8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
100585aa:	18a2      	adds	r2, r4, r2
100585ac:	61b2      	str	r2, [r6, #24]
100585ae:	3208      	adds	r2, #8
100585b0:	960b      	str	r6, [sp, #44]	@ 0x2c
100585b2:	61f2      	str	r2, [r6, #28]
100585b4:	2200      	movs	r2, #0
100585b6:	2a10      	cmp	r2, #16
100585b8:	d006      	beq.n	100585c8 <llc_padv_wr_mem_allocate+0xf0>
100585ba:	5087      	str	r7, [r0, r2]
100585bc:	1884      	adds	r4, r0, r2
100585be:	6065      	str	r5, [r4, #4]
100585c0:	187f      	adds	r7, r7, r1
100585c2:	18ed      	adds	r5, r5, r3
100585c4:	3208      	adds	r2, #8
100585c6:	e7f6      	b.n	100585b6 <llc_padv_wr_mem_allocate+0xde>
100585c8:	9807      	ldr	r0, [sp, #28]
100585ca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100585cc:	4350      	muls	r0, r2
100585ce:	9a02      	ldr	r2, [sp, #8]
100585d0:	1810      	adds	r0, r2, r0
100585d2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100585d4:	6390      	str	r0, [r2, #56]	@ 0x38
100585d6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
100585d8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100585da:	1c6d      	adds	r5, r5, #1
100585dc:	980e      	ldr	r0, [sp, #56]	@ 0x38
100585de:	1c40      	adds	r0, r0, #1
100585e0:	900e      	str	r0, [sp, #56]	@ 0x38
100585e2:	e7b6      	b.n	10058552 <llc_padv_wr_mem_allocate+0x7a>
100585e4:	b00f      	add	sp, #60	@ 0x3c
100585e6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100585e8 <__arm_cp.0_0>:
100585e8:	10062e35 	.word	0x10062e35

100585ec <llc_padv_wr_fetch_subevent_data>:
100585ec:	b5f0      	push	{r4, r5, r6, r7, lr}
100585ee:	b08b      	sub	sp, #44	@ 0x2c
100585f0:	461d      	mov	r5, r3
100585f2:	9002      	str	r0, [sp, #8]
100585f4:	486f      	ldr	r0, [pc, #444]	@ (100587b4 <__arm_cp.0_0>)
100585f6:	7f06      	ldrb	r6, [r0, #28]
100585f8:	428e      	cmp	r6, r1
100585fa:	d300      	bcc.n	100585fe <llc_padv_wr_fetch_subevent_data+0x12>
100585fc:	460e      	mov	r6, r1
100585fe:	69e8      	ldr	r0, [r5, #28]
10058600:	9009      	str	r0, [sp, #36]	@ 0x24
10058602:	4628      	mov	r0, r5
10058604:	3022      	adds	r0, #34	@ 0x22
10058606:	9006      	str	r0, [sp, #24]
10058608:	2000      	movs	r0, #0
1005860a:	2a00      	cmp	r2, #0
1005860c:	4602      	mov	r2, r0
1005860e:	9007      	str	r0, [sp, #28]
10058610:	4607      	mov	r7, r0
10058612:	4604      	mov	r4, r0
10058614:	9608      	str	r6, [sp, #32]
10058616:	d13a      	bne.n	1005868e <llc_padv_wr_fetch_subevent_data+0xa2>
10058618:	9806      	ldr	r0, [sp, #24]
1005861a:	7802      	ldrb	r2, [r0, #0]
1005861c:	7843      	ldrb	r3, [r0, #1]
1005861e:	20ff      	movs	r0, #255	@ 0xff
10058620:	4058      	eors	r0, r3
10058622:	4010      	ands	r0, r2
10058624:	2200      	movs	r2, #0
10058626:	4603      	mov	r3, r0
10058628:	07dc      	lsls	r4, r3, #31
1005862a:	d105      	bne.n	10058638 <llc_padv_wr_fetch_subevent_data+0x4c>
1005862c:	b2d4      	uxtb	r4, r2
1005862e:	42b4      	cmp	r4, r6
10058630:	d202      	bcs.n	10058638 <llc_padv_wr_fetch_subevent_data+0x4c>
10058632:	085b      	lsrs	r3, r3, #1
10058634:	1c52      	adds	r2, r2, #1
10058636:	e7f7      	b.n	10058628 <llc_padv_wr_fetch_subevent_data+0x3c>
10058638:	b2d3      	uxtb	r3, r2
1005863a:	9307      	str	r3, [sp, #28]
1005863c:	2b00      	cmp	r3, #0
1005863e:	d100      	bne.n	10058642 <llc_padv_wr_fetch_subevent_data+0x56>
10058640:	e0ad      	b.n	1005879e <llc_padv_wr_fetch_subevent_data+0x1b2>
10058642:	7deb      	ldrb	r3, [r5, #23]
10058644:	247f      	movs	r4, #127	@ 0x7f
10058646:	401c      	ands	r4, r3
10058648:	7dab      	ldrb	r3, [r5, #22]
1005864a:	191b      	adds	r3, r3, r4
1005864c:	1c5b      	adds	r3, r3, #1
1005864e:	9305      	str	r3, [sp, #20]
10058650:	b2db      	uxtb	r3, r3
10058652:	2700      	movs	r7, #0
10058654:	428b      	cmp	r3, r1
10058656:	d300      	bcc.n	1005865a <llc_padv_wr_fetch_subevent_data+0x6e>
10058658:	9705      	str	r7, [sp, #20]
1005865a:	428b      	cmp	r3, r1
1005865c:	d300      	bcc.n	10058660 <llc_padv_wr_fetch_subevent_data+0x74>
1005865e:	2701      	movs	r7, #1
10058660:	2800      	cmp	r0, #0
10058662:	9c05      	ldr	r4, [sp, #20]
10058664:	d001      	beq.n	1005866a <llc_padv_wr_fetch_subevent_data+0x7e>
10058666:	7d2b      	ldrb	r3, [r5, #20]
10058668:	189c      	adds	r4, r3, r2
1005866a:	1a62      	subs	r2, r4, r1
1005866c:	9203      	str	r2, [sp, #12]
1005866e:	b2d2      	uxtb	r2, r2
10058670:	9204      	str	r2, [sp, #16]
10058672:	9a05      	ldr	r2, [sp, #20]
10058674:	b2d6      	uxtb	r6, r2
10058676:	9b04      	ldr	r3, [sp, #16]
10058678:	42b3      	cmp	r3, r6
1005867a:	d800      	bhi.n	1005867e <llc_padv_wr_fetch_subevent_data+0x92>
1005867c:	9a03      	ldr	r2, [sp, #12]
1005867e:	b2e3      	uxtb	r3, r4
10058680:	428b      	cmp	r3, r1
10058682:	9e08      	ldr	r6, [sp, #32]
10058684:	d300      	bcc.n	10058688 <llc_padv_wr_fetch_subevent_data+0x9c>
10058686:	4614      	mov	r4, r2
10058688:	9a07      	ldr	r2, [sp, #28]
1005868a:	40d0      	lsrs	r0, r2
1005868c:	9a05      	ldr	r2, [sp, #20]
1005868e:	756a      	strb	r2, [r5, #21]
10058690:	752c      	strb	r4, [r5, #20]
10058692:	ab0a      	add	r3, sp, #40	@ 0x28
10058694:	7018      	strb	r0, [r3, #0]
10058696:	1930      	adds	r0, r6, r4
10058698:	4616      	mov	r6, r2
1005869a:	1e42      	subs	r2, r0, #1
1005869c:	b2d0      	uxtb	r0, r2
1005869e:	4288      	cmp	r0, r1
100586a0:	4610      	mov	r0, r2
100586a2:	d300      	bcc.n	100586a6 <llc_padv_wr_fetch_subevent_data+0xba>
100586a4:	1a50      	subs	r0, r2, r1
100586a6:	9605      	str	r6, [sp, #20]
100586a8:	b2f6      	uxtb	r6, r6
100586aa:	b2e4      	uxtb	r4, r4
100586ac:	42b4      	cmp	r4, r6
100586ae:	d800      	bhi.n	100586b2 <llc_padv_wr_fetch_subevent_data+0xc6>
100586b0:	4610      	mov	r0, r2
100586b2:	9703      	str	r7, [sp, #12]
100586b4:	9504      	str	r5, [sp, #16]
100586b6:	b2c2      	uxtb	r2, r0
100586b8:	428a      	cmp	r2, r1
100586ba:	9d08      	ldr	r5, [sp, #32]
100586bc:	d300      	bcc.n	100586c0 <llc_padv_wr_fetch_subevent_data+0xd4>
100586be:	1e48      	subs	r0, r1, #1
100586c0:	2201      	movs	r2, #1
100586c2:	9c05      	ldr	r4, [sp, #20]
100586c4:	1b14      	subs	r4, r2, r4
100586c6:	9401      	str	r4, [sp, #4]
100586c8:	1824      	adds	r4, r4, r0
100586ca:	b2e7      	uxtb	r7, r4
100586cc:	1b7e      	subs	r6, r7, r5
100586ce:	2400      	movs	r4, #0
100586d0:	42af      	cmp	r7, r5
100586d2:	d200      	bcs.n	100586d6 <llc_padv_wr_fetch_subevent_data+0xea>
100586d4:	4626      	mov	r6, r4
100586d6:	1b86      	subs	r6, r0, r6
100586d8:	9804      	ldr	r0, [sp, #16]
100586da:	9600      	str	r6, [sp, #0]
100586dc:	7586      	strb	r6, [r0, #22]
100586de:	f000 f86f 	bl	100587c0 <llc_padv_wr_set_conn_req_bit_in_map>
100586e2:	980a      	ldr	r0, [sp, #40]	@ 0x28
100586e4:	9906      	ldr	r1, [sp, #24]
100586e6:	7008      	strb	r0, [r1, #0]
100586e8:	704c      	strb	r4, [r1, #1]
100586ea:	9807      	ldr	r0, [sp, #28]
100586ec:	1a28      	subs	r0, r5, r0
100586ee:	9006      	str	r0, [sp, #24]
100586f0:	9f09      	ldr	r7, [sp, #36]	@ 0x24
100586f2:	b2e6      	uxtb	r6, r4
100586f4:	9806      	ldr	r0, [sp, #24]
100586f6:	42b0      	cmp	r0, r6
100586f8:	dd14      	ble.n	10058724 <llc_padv_wr_fetch_subevent_data+0x138>
100586fa:	00f0      	lsls	r0, r6, #3
100586fc:	6839      	ldr	r1, [r7, #0]
100586fe:	1808      	adds	r0, r1, r0
10058700:	9a07      	ldr	r2, [sp, #28]
10058702:	18a2      	adds	r2, r4, r2
10058704:	b2d5      	uxtb	r5, r2
10058706:	00ea      	lsls	r2, r5, #3
10058708:	1889      	adds	r1, r1, r2
1005870a:	2208      	movs	r2, #8
1005870c:	f7ec f94a 	bl	100449a4 <BLEPLAT_MemCpy>
10058710:	0070      	lsls	r0, r6, #1
10058712:	6879      	ldr	r1, [r7, #4]
10058714:	1808      	adds	r0, r1, r0
10058716:	006a      	lsls	r2, r5, #1
10058718:	1889      	adds	r1, r1, r2
1005871a:	2202      	movs	r2, #2
1005871c:	f7ec f942 	bl	100449a4 <BLEPLAT_MemCpy>
10058720:	1c64      	adds	r4, r4, #1
10058722:	e7e6      	b.n	100586f2 <llc_padv_wr_fetch_subevent_data+0x106>
10058724:	b2e0      	uxtb	r0, r4
10058726:	00c4      	lsls	r4, r0, #3
10058728:	9d04      	ldr	r5, [sp, #16]
1005872a:	9f03      	ldr	r7, [sp, #12]
1005872c:	9808      	ldr	r0, [sp, #32]
1005872e:	4286      	cmp	r6, r0
10058730:	d209      	bcs.n	10058746 <llc_padv_wr_fetch_subevent_data+0x15a>
10058732:	9809      	ldr	r0, [sp, #36]	@ 0x24
10058734:	6800      	ldr	r0, [r0, #0]
10058736:	1900      	adds	r0, r0, r4
10058738:	2100      	movs	r1, #0
1005873a:	2208      	movs	r2, #8
1005873c:	f7ec f942 	bl	100449c4 <BLEPLAT_MemSet>
10058740:	3408      	adds	r4, #8
10058742:	1c76      	adds	r6, r6, #1
10058744:	e7f2      	b.n	1005872c <llc_padv_wr_fetch_subevent_data+0x140>
10058746:	481c      	ldr	r0, [pc, #112]	@ (100587b8 <__arm_cp.0_1>)
10058748:	6800      	ldr	r0, [r0, #0]
1005874a:	213d      	movs	r1, #61	@ 0x3d
1005874c:	5c41      	ldrb	r1, [r0, r1]
1005874e:	0689      	lsls	r1, r1, #26
10058750:	d520      	bpl.n	10058794 <llc_padv_wr_fetch_subevent_data+0x1a8>
10058752:	303d      	adds	r0, #61	@ 0x3d
10058754:	7b40      	ldrb	r0, [r0, #13]
10058756:	0640      	lsls	r0, r0, #25
10058758:	d51c      	bpl.n	10058794 <llc_padv_wr_fetch_subevent_data+0x1a8>
1005875a:	4818      	ldr	r0, [pc, #96]	@ (100587bc <__arm_cp.0_2>)
1005875c:	6800      	ldr	r0, [r0, #0]
1005875e:	6940      	ldr	r0, [r0, #20]
10058760:	21a1      	movs	r1, #161	@ 0xa1
10058762:	223d      	movs	r2, #61	@ 0x3d
10058764:	2302      	movs	r3, #2
10058766:	f7f7 fdcb 	bl	10050300 <aci_event_fifo_push_header>
1005876a:	2800      	cmp	r0, #0
1005876c:	d012      	beq.n	10058794 <llc_padv_wr_fetch_subevent_data+0x1a8>
1005876e:	4601      	mov	r1, r0
10058770:	9801      	ldr	r0, [sp, #4]
10058772:	9a00      	ldr	r2, [sp, #0]
10058774:	1880      	adds	r0, r0, r2
10058776:	7288      	strb	r0, [r1, #10]
10058778:	9805      	ldr	r0, [sp, #20]
1005877a:	7248      	strb	r0, [r1, #9]
1005877c:	9802      	ldr	r0, [sp, #8]
1005877e:	7208      	strb	r0, [r1, #8]
10058780:	2027      	movs	r0, #39	@ 0x27
10058782:	71c8      	strb	r0, [r1, #7]
10058784:	2004      	movs	r0, #4
10058786:	7188      	strb	r0, [r1, #6]
10058788:	223e      	movs	r2, #62	@ 0x3e
1005878a:	714a      	strb	r2, [r1, #5]
1005878c:	7108      	strb	r0, [r1, #4]
1005878e:	20a1      	movs	r0, #161	@ 0xa1
10058790:	f7f7 fe53 	bl	1005043a <aci_event_fifo_push>
10058794:	2080      	movs	r0, #128	@ 0x80
10058796:	75e8      	strb	r0, [r5, #23]
10058798:	4638      	mov	r0, r7
1005879a:	b00b      	add	sp, #44	@ 0x2c
1005879c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005879e:	7de9      	ldrb	r1, [r5, #23]
100587a0:	207f      	movs	r0, #127	@ 0x7f
100587a2:	4001      	ands	r1, r0
100587a4:	1c49      	adds	r1, r1, #1
100587a6:	b24a      	sxtb	r2, r1
100587a8:	2a00      	cmp	r2, #0
100587aa:	da00      	bge.n	100587ae <llc_padv_wr_fetch_subevent_data+0x1c2>
100587ac:	4601      	mov	r1, r0
100587ae:	75e9      	strb	r1, [r5, #23]
100587b0:	2700      	movs	r7, #0
100587b2:	e7f1      	b.n	10058798 <llc_padv_wr_fetch_subevent_data+0x1ac>

100587b4 <__arm_cp.0_0>:
100587b4:	200008a8 	.word	0x200008a8

100587b8 <__arm_cp.0_1>:
100587b8:	20000894 	.word	0x20000894

100587bc <__arm_cp.0_2>:
100587bc:	20000840 	.word	0x20000840

100587c0 <llc_padv_wr_set_conn_req_bit_in_map>:
100587c0:	b5ff      	push	{r0, r1, r2, r3, r4, r5, r6, r7, lr}
100587c2:	9302      	str	r3, [sp, #8]
100587c4:	9203      	str	r2, [sp, #12]
100587c6:	2242      	movs	r2, #66	@ 0x42
100587c8:	4604      	mov	r4, r0
100587ca:	5c80      	ldrb	r0, [r0, r2]
100587cc:	28ff      	cmp	r0, #255	@ 0xff
100587ce:	d02b      	beq.n	10058828 <llc_padv_wr_set_conn_req_bit_in_map+0x68>
100587d0:	7d26      	ldrb	r6, [r4, #20]
100587d2:	2301      	movs	r3, #1
100587d4:	7d62      	ldrb	r2, [r4, #21]
100587d6:	4296      	cmp	r6, r2
100587d8:	9300      	str	r3, [sp, #0]
100587da:	d801      	bhi.n	100587e0 <llc_padv_wr_set_conn_req_bit_in_map+0x20>
100587dc:	1b9a      	subs	r2, r3, r6
100587de:	e001      	b.n	100587e4 <llc_padv_wr_set_conn_req_bit_in_map+0x24>
100587e0:	18b2      	adds	r2, r6, r2
100587e2:	1a8a      	subs	r2, r1, r2
100587e4:	7da3      	ldrb	r3, [r4, #22]
100587e6:	3422      	adds	r4, #34	@ 0x22
100587e8:	9401      	str	r4, [sp, #4]
100587ea:	18d2      	adds	r2, r2, r3
100587ec:	2400      	movs	r4, #0
100587ee:	b2d2      	uxtb	r2, r2
100587f0:	b2e7      	uxtb	r7, r4
100587f2:	4297      	cmp	r7, r2
100587f4:	d218      	bcs.n	10058828 <llc_padv_wr_set_conn_req_bit_in_map+0x68>
100587f6:	19a3      	adds	r3, r4, r6
100587f8:	b2dd      	uxtb	r5, r3
100587fa:	428d      	cmp	r5, r1
100587fc:	d300      	bcc.n	10058800 <llc_padv_wr_set_conn_req_bit_in_map+0x40>
100587fe:	1a5b      	subs	r3, r3, r1
10058800:	b2db      	uxtb	r3, r3
10058802:	4283      	cmp	r3, r0
10058804:	d001      	beq.n	1005880a <llc_padv_wr_set_conn_req_bit_in_map+0x4a>
10058806:	1c64      	adds	r4, r4, #1
10058808:	e7f2      	b.n	100587f0 <llc_padv_wr_set_conn_req_bit_in_map+0x30>
1005880a:	9902      	ldr	r1, [sp, #8]
1005880c:	2900      	cmp	r1, #0
1005880e:	9801      	ldr	r0, [sp, #4]
10058810:	d000      	beq.n	10058814 <llc_padv_wr_set_conn_req_bit_in_map+0x54>
10058812:	4608      	mov	r0, r1
10058814:	9b00      	ldr	r3, [sp, #0]
10058816:	40bb      	lsls	r3, r7
10058818:	7801      	ldrb	r1, [r0, #0]
1005881a:	9a03      	ldr	r2, [sp, #12]
1005881c:	2a00      	cmp	r2, #0
1005881e:	d001      	beq.n	10058824 <llc_padv_wr_set_conn_req_bit_in_map+0x64>
10058820:	4319      	orrs	r1, r3
10058822:	e000      	b.n	10058826 <llc_padv_wr_set_conn_req_bit_in_map+0x66>
10058824:	4399      	bics	r1, r3
10058826:	7001      	strb	r1, [r0, #0]
10058828:	bdff      	pop	{r0, r1, r2, r3, r4, r5, r6, r7, pc}

1005882a <llc_padv_wr_get_subevent_data>:
1005882a:	b510      	push	{r4, lr}
1005882c:	6f84      	ldr	r4, [r0, #120]	@ 0x78
1005882e:	f000 f809 	bl	10058844 <llc_padv_wr_get_used_subevent_data_offset>
10058832:	28ff      	cmp	r0, #255	@ 0xff
10058834:	d004      	beq.n	10058840 <llc_padv_wr_get_subevent_data+0x16>
10058836:	00c0      	lsls	r0, r0, #3
10058838:	69e1      	ldr	r1, [r4, #28]
1005883a:	6809      	ldr	r1, [r1, #0]
1005883c:	1808      	adds	r0, r1, r0
1005883e:	bd10      	pop	{r4, pc}
10058840:	2000      	movs	r0, #0
10058842:	bd10      	pop	{r4, pc}

10058844 <llc_padv_wr_get_used_subevent_data_offset>:
10058844:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10058846:	6f84      	ldr	r4, [r0, #120]	@ 0x78
10058848:	7d26      	ldrb	r6, [r4, #20]
1005884a:	1b8a      	subs	r2, r1, r6
1005884c:	7a45      	ldrb	r5, [r0, #9]
1005884e:	d200      	bcs.n	10058852 <llc_padv_wr_get_used_subevent_data_offset+0xe>
10058850:	1952      	adds	r2, r2, r5
10058852:	b2d3      	uxtb	r3, r2
10058854:	4f17      	ldr	r7, [pc, #92]	@ (100588b4 <__arm_cp.3_0>)
10058856:	7f3f      	ldrb	r7, [r7, #28]
10058858:	42af      	cmp	r7, r5
1005885a:	d300      	bcc.n	1005885e <llc_padv_wr_get_used_subevent_data_offset+0x1a>
1005885c:	462f      	mov	r7, r5
1005885e:	42bb      	cmp	r3, r7
10058860:	d224      	bcs.n	100588ac <llc_padv_wr_get_used_subevent_data_offset+0x68>
10058862:	9302      	str	r3, [sp, #8]
10058864:	4625      	mov	r5, r4
10058866:	3522      	adds	r5, #34	@ 0x22
10058868:	460f      	mov	r7, r1
1005886a:	4623      	mov	r3, r4
1005886c:	3342      	adds	r3, #66	@ 0x42
1005886e:	7829      	ldrb	r1, [r5, #0]
10058870:	9101      	str	r1, [sp, #4]
10058872:	7869      	ldrb	r1, [r5, #1]
10058874:	9100      	str	r1, [sp, #0]
10058876:	781b      	ldrb	r3, [r3, #0]
10058878:	4639      	mov	r1, r7
1005887a:	2501      	movs	r5, #1
1005887c:	42be      	cmp	r6, r7
1005887e:	462e      	mov	r6, r5
10058880:	d908      	bls.n	10058894 <llc_padv_wr_get_used_subevent_data_offset+0x50>
10058882:	4619      	mov	r1, r3
10058884:	236a      	movs	r3, #106	@ 0x6a
10058886:	5ac0      	ldrh	r0, [r0, r3]
10058888:	8c23      	ldrh	r3, [r4, #32]
1005888a:	1ac0      	subs	r0, r0, r3
1005888c:	460b      	mov	r3, r1
1005888e:	4639      	mov	r1, r7
10058890:	4246      	negs	r6, r0
10058892:	4146      	adcs	r6, r0
10058894:	9802      	ldr	r0, [sp, #8]
10058896:	4085      	lsls	r5, r0
10058898:	9801      	ldr	r0, [sp, #4]
1005889a:	4205      	tst	r5, r0
1005889c:	d006      	beq.n	100588ac <llc_padv_wr_get_used_subevent_data_offset+0x68>
1005889e:	9800      	ldr	r0, [sp, #0]
100588a0:	4005      	ands	r5, r0
100588a2:	d103      	bne.n	100588ac <llc_padv_wr_get_used_subevent_data_offset+0x68>
100588a4:	428b      	cmp	r3, r1
100588a6:	d001      	beq.n	100588ac <llc_padv_wr_get_used_subevent_data_offset+0x68>
100588a8:	2e00      	cmp	r6, #0
100588aa:	d100      	bne.n	100588ae <llc_padv_wr_get_used_subevent_data_offset+0x6a>
100588ac:	22ff      	movs	r2, #255	@ 0xff
100588ae:	b2d0      	uxtb	r0, r2
100588b0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100588b2:	46c0      	nop			@ (mov r8, r8)

100588b4 <__arm_cp.3_0>:
100588b4:	200008a8 	.word	0x200008a8

100588b8 <llc_padv_wr_discard_subevent_data>:
100588b8:	b5b0      	push	{r4, r5, r7, lr}
100588ba:	6f85      	ldr	r5, [r0, #120]	@ 0x78
100588bc:	f7ff ffc2 	bl	10058844 <llc_padv_wr_get_used_subevent_data_offset>
100588c0:	28ff      	cmp	r0, #255	@ 0xff
100588c2:	d00f      	beq.n	100588e4 <llc_padv_wr_discard_subevent_data+0x2c>
100588c4:	4604      	mov	r4, r0
100588c6:	00c0      	lsls	r0, r0, #3
100588c8:	69e9      	ldr	r1, [r5, #28]
100588ca:	6809      	ldr	r1, [r1, #0]
100588cc:	1808      	adds	r0, r1, r0
100588ce:	6841      	ldr	r1, [r0, #4]
100588d0:	20a1      	movs	r0, #161	@ 0xa1
100588d2:	2200      	movs	r2, #0
100588d4:	f00e fa14 	bl	10066d00 <aci_hal_pawr_data_free_event_push_noinline>
100588d8:	2001      	movs	r0, #1
100588da:	40a0      	lsls	r0, r4
100588dc:	2123      	movs	r1, #35	@ 0x23
100588de:	5c6a      	ldrb	r2, [r5, r1]
100588e0:	4302      	orrs	r2, r0
100588e2:	546a      	strb	r2, [r5, r1]
100588e4:	bdb0      	pop	{r4, r5, r7, pc}
	...

100588e8 <llc_padv_wr_process_response_data>:
100588e8:	b5f0      	push	{r4, r5, r6, r7, lr}
100588ea:	b097      	sub	sp, #92	@ 0x5c
100588ec:	4617      	mov	r7, r2
100588ee:	2a00      	cmp	r2, #0
100588f0:	910c      	str	r1, [sp, #48]	@ 0x30
100588f2:	900b      	str	r0, [sp, #44]	@ 0x2c
100588f4:	930a      	str	r3, [sp, #40]	@ 0x28
100588f6:	d01b      	beq.n	10058930 <llc_padv_wr_process_response_data+0x48>
100588f8:	f009 fcce 	bl	10062298 <LL_get_rx_common_buffer_p>
100588fc:	4604      	mov	r4, r0
100588fe:	ad0d      	add	r5, sp, #52	@ 0x34
10058900:	4629      	mov	r1, r5
10058902:	f003 f87d 	bl	1005ba00 <llc_scan_parse_ext_adv_pdu>
10058906:	7d28      	ldrb	r0, [r5, #20]
10058908:	9009      	str	r0, [sp, #36]	@ 0x24
1005890a:	f7ec f92f 	bl	10044b6c <BLEPLAT_CalculateRSSI>
1005890e:	4606      	mov	r6, r0
10058910:	f009 fcae 	bl	10062270 <get_rf_rx_path_compensation_db>
10058914:	1836      	adds	r6, r6, r0
10058916:	7b68      	ldrb	r0, [r5, #13]
10058918:	1823      	adds	r3, r4, r0
1005891a:	203f      	movs	r0, #63	@ 0x3f
1005891c:	43c0      	mvns	r0, r0
1005891e:	78a1      	ldrb	r1, [r4, #2]
10058920:	43c9      	mvns	r1, r1
10058922:	4301      	orrs	r1, r0
10058924:	7860      	ldrb	r0, [r4, #1]
10058926:	1840      	adds	r0, r0, r1
10058928:	7c2d      	ldrb	r5, [r5, #16]
1005892a:	2100      	movs	r1, #0
1005892c:	9108      	str	r1, [sp, #32]
1005892e:	e005      	b.n	1005893c <llc_padv_wr_process_response_data+0x54>
10058930:	2000      	movs	r0, #0
10058932:	25ff      	movs	r5, #255	@ 0xff
10058934:	267f      	movs	r6, #127	@ 0x7f
10058936:	9508      	str	r5, [sp, #32]
10058938:	4603      	mov	r3, r0
1005893a:	9609      	str	r6, [sp, #36]	@ 0x24
1005893c:	427c      	negs	r4, r7
1005893e:	417c      	adcs	r4, r7
10058940:	491c      	ldr	r1, [pc, #112]	@ (100589b4 <__arm_cp.5_0>)
10058942:	6809      	ldr	r1, [r1, #0]
10058944:	223d      	movs	r2, #61	@ 0x3d
10058946:	5c8a      	ldrb	r2, [r1, r2]
10058948:	0692      	lsls	r2, r2, #26
1005894a:	d530      	bpl.n	100589ae <llc_padv_wr_process_response_data+0xc6>
1005894c:	313d      	adds	r1, #61	@ 0x3d
1005894e:	220d      	movs	r2, #13
10058950:	5689      	ldrsb	r1, [r1, r2]
10058952:	2900      	cmp	r1, #0
10058954:	d52b      	bpl.n	100589ae <llc_padv_wr_process_response_data+0xc6>
10058956:	b2c0      	uxtb	r0, r0
10058958:	9007      	str	r0, [sp, #28]
1005895a:	1e40      	subs	r0, r0, #1
1005895c:	2103      	movs	r1, #3
1005895e:	4301      	orrs	r1, r0
10058960:	3115      	adds	r1, #21
10058962:	0888      	lsrs	r0, r1, #2
10058964:	461f      	mov	r7, r3
10058966:	b283      	uxth	r3, r0
10058968:	4813      	ldr	r0, [pc, #76]	@ (100589b8 <__arm_cp.5_1>)
1005896a:	6800      	ldr	r0, [r0, #0]
1005896c:	6940      	ldr	r0, [r0, #20]
1005896e:	21a1      	movs	r1, #161	@ 0xa1
10058970:	2205      	movs	r2, #5
10058972:	f7f7 fcc5 	bl	10050300 <aci_event_fifo_push_header>
10058976:	2800      	cmp	r0, #0
10058978:	d019      	beq.n	100589ae <llc_padv_wr_process_response_data+0xc6>
1005897a:	463a      	mov	r2, r7
1005897c:	4607      	mov	r7, r0
1005897e:	b2f0      	uxtb	r0, r6
10058980:	9909      	ldr	r1, [sp, #36]	@ 0x24
10058982:	9100      	str	r1, [sp, #0]
10058984:	9001      	str	r0, [sp, #4]
10058986:	9502      	str	r5, [sp, #8]
10058988:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005898a:	9003      	str	r0, [sp, #12]
1005898c:	9808      	ldr	r0, [sp, #32]
1005898e:	9004      	str	r0, [sp, #16]
10058990:	9807      	ldr	r0, [sp, #28]
10058992:	9005      	str	r0, [sp, #20]
10058994:	9206      	str	r2, [sp, #24]
10058996:	1d38      	adds	r0, r7, #4
10058998:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1005899a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005899c:	4623      	mov	r3, r4
1005899e:	f7f8 faaa 	bl	10050ef6 <hci_le_periodic_advertising_response_report_event_copy>
100589a2:	4806      	ldr	r0, [pc, #24]	@ (100589bc <__arm_cp.5_2>)
100589a4:	6078      	str	r0, [r7, #4]
100589a6:	20a1      	movs	r0, #161	@ 0xa1
100589a8:	4639      	mov	r1, r7
100589aa:	f7f7 fd46 	bl	1005043a <aci_event_fifo_push>
100589ae:	b017      	add	sp, #92	@ 0x5c
100589b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100589b2:	46c0      	nop			@ (mov r8, r8)

100589b4 <__arm_cp.5_0>:
100589b4:	20000894 	.word	0x20000894

100589b8 <__arm_cp.5_1>:
100589b8:	20000840 	.word	0x20000840

100589bc <__arm_cp.5_2>:
100589bc:	10066a81 	.word	0x10066a81

100589c0 <llc_padv_wr_set_rx_data_length>:
100589c0:	b510      	push	{r4, lr}
100589c2:	6f84      	ldr	r4, [r0, #120]	@ 0x78
100589c4:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
100589c6:	21c7      	movs	r1, #199	@ 0xc7
100589c8:	5c40      	ldrb	r0, [r0, r1]
100589ca:	68e1      	ldr	r1, [r4, #12]
100589cc:	393e      	subs	r1, #62	@ 0x3e
100589ce:	f004 f94b 	bl	1005cc68 <llc_calculate_max_data_length_in_time_window_stu>
100589d2:	4601      	mov	r1, r0
100589d4:	208c      	movs	r0, #140	@ 0x8c
100589d6:	5c20      	ldrb	r0, [r4, r0]
100589d8:	f7ed fd1b 	bl	10046412 <BLEPLAT_CNTR_SmSetDataLength>
100589dc:	bd10      	pop	{r4, pc}

100589de <llc_padv_wr_calc_aux_sync_subevent_rsp_interval>:
100589de:	b570      	push	{r4, r5, r6, lr}
100589e0:	2a01      	cmp	r2, #1
100589e2:	d11d      	bne.n	10058a20 <llc_padv_wr_calc_aux_sync_subevent_rsp_interval+0x42>
100589e4:	4606      	mov	r6, r0
100589e6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
100589e8:	21c7      	movs	r1, #199	@ 0xc7
100589ea:	5c44      	ldrb	r4, [r0, r1]
100589ec:	88b0      	ldrh	r0, [r6, #4]
100589ee:	2140      	movs	r1, #64	@ 0x40
100589f0:	4301      	orrs	r1, r0
100589f2:	208b      	movs	r0, #139	@ 0x8b
100589f4:	2500      	movs	r5, #0
100589f6:	4622      	mov	r2, r4
100589f8:	462b      	mov	r3, r5
100589fa:	f009 f853 	bl	10061aa4 <llc_eadv_get_extended_header_flags_with_data_ind>
100589fe:	b2c0      	uxtb	r0, r0
10058a00:	2101      	movs	r1, #1
10058a02:	4632      	mov	r2, r6
10058a04:	f008 ffdc 	bl	100619c0 <llc_eadv_calculate_extended_header_length>
10058a08:	3808      	subs	r0, #8
10058a0a:	b2c1      	uxtb	r1, r0
10058a0c:	2c03      	cmp	r4, #3
10058a0e:	d000      	beq.n	10058a12 <llc_padv_wr_calc_aux_sync_subevent_rsp_interval+0x34>
10058a10:	2514      	movs	r5, #20
10058a12:	4620      	mov	r0, r4
10058a14:	462a      	mov	r2, r5
10058a16:	f004 f8eb 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
10058a1a:	4602      	mov	r2, r0
10058a1c:	323e      	adds	r2, #62	@ 0x3e
10058a1e:	e001      	b.n	10058a24 <llc_padv_wr_calc_aux_sync_subevent_rsp_interval+0x46>
10058a20:	68c8      	ldr	r0, [r1, #12]
10058a22:	4342      	muls	r2, r0
10058a24:	4610      	mov	r0, r2
10058a26:	bd70      	pop	{r4, r5, r6, pc}

10058a28 <llc_padv_wr_set_periodic_advertising_parameters>:
10058a28:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10058a2a:	4605      	mov	r5, r0
10058a2c:	6884      	ldr	r4, [r0, #8]
10058a2e:	6fa6      	ldr	r6, [r4, #120]	@ 0x78
10058a30:	6870      	ldr	r0, [r6, #4]
10058a32:	9002      	str	r0, [sp, #8]
10058a34:	7868      	ldrb	r0, [r5, #1]
10058a36:	0240      	lsls	r0, r0, #9
10058a38:	6070      	str	r0, [r6, #4]
10058a3a:	68b0      	ldr	r0, [r6, #8]
10058a3c:	9001      	str	r0, [sp, #4]
10058a3e:	78a8      	ldrb	r0, [r5, #2]
10058a40:	0240      	lsls	r0, r0, #9
10058a42:	60b0      	str	r0, [r6, #8]
10058a44:	7c30      	ldrb	r0, [r6, #16]
10058a46:	9000      	str	r0, [sp, #0]
10058a48:	7928      	ldrb	r0, [r5, #4]
10058a4a:	7430      	strb	r0, [r6, #16]
10058a4c:	78e8      	ldrb	r0, [r5, #3]
10058a4e:	0200      	lsls	r0, r0, #8
10058a50:	1d40      	adds	r0, r0, #5
10058a52:	2105      	movs	r1, #5
10058a54:	f7e7 fbf4 	bl	10040240 <__udivsi3>
10058a58:	68f7      	ldr	r7, [r6, #12]
10058a5a:	60f0      	str	r0, [r6, #12]
10058a5c:	4620      	mov	r0, r4
10058a5e:	f000 f833 	bl	10058ac8 <llc_padv_wr_get_adv_event_length>
10058a62:	7a61      	ldrb	r1, [r4, #9]
10058a64:	2203      	movs	r2, #3
10058a66:	434a      	muls	r2, r1
10058a68:	6823      	ldr	r3, [r4, #0]
10058a6a:	18d2      	adds	r2, r2, r3
10058a6c:	4282      	cmp	r2, r0
10058a6e:	d20d      	bcs.n	10058a8c <llc_padv_wr_set_periodic_advertising_parameters+0x64>
10058a70:	9800      	ldr	r0, [sp, #0]
10058a72:	7430      	strb	r0, [r6, #16]
10058a74:	9802      	ldr	r0, [sp, #8]
10058a76:	6070      	str	r0, [r6, #4]
10058a78:	9801      	ldr	r0, [sp, #4]
10058a7a:	60b0      	str	r0, [r6, #8]
10058a7c:	60f7      	str	r7, [r6, #12]
10058a7e:	7829      	ldrb	r1, [r5, #0]
10058a80:	2012      	movs	r0, #18
10058a82:	2900      	cmp	r1, #0
10058a84:	d001      	beq.n	10058a8a <llc_padv_wr_set_periodic_advertising_parameters+0x62>
10058a86:	2100      	movs	r1, #0
10058a88:	67e1      	str	r1, [r4, #124]	@ 0x7c
10058a8a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10058a8c:	7828      	ldrb	r0, [r5, #0]
10058a8e:	2800      	cmp	r0, #0
10058a90:	d009      	beq.n	10058aa6 <llc_padv_wr_set_periodic_advertising_parameters+0x7e>
10058a92:	4630      	mov	r0, r6
10058a94:	3022      	adds	r0, #34	@ 0x22
10058a96:	4632      	mov	r2, r6
10058a98:	3242      	adds	r2, #66	@ 0x42
10058a9a:	2300      	movs	r3, #0
10058a9c:	75f3      	strb	r3, [r6, #23]
10058a9e:	24ff      	movs	r4, #255	@ 0xff
10058aa0:	7004      	strb	r4, [r0, #0]
10058aa2:	7043      	strb	r3, [r0, #1]
10058aa4:	7014      	strb	r4, [r2, #0]
10058aa6:	7c32      	ldrb	r2, [r6, #16]
10058aa8:	2a00      	cmp	r2, #0
10058aaa:	d000      	beq.n	10058aae <llc_padv_wr_set_periodic_advertising_parameters+0x86>
10058aac:	1e52      	subs	r2, r2, #1
10058aae:	0049      	lsls	r1, r1, #1
10058ab0:	2000      	movs	r0, #0
10058ab2:	4603      	mov	r3, r0
10058ab4:	4299      	cmp	r1, r3
10058ab6:	d0e8      	beq.n	10058a8a <llc_padv_wr_set_periodic_advertising_parameters+0x62>
10058ab8:	69f4      	ldr	r4, [r6, #28]
10058aba:	6864      	ldr	r4, [r4, #4]
10058abc:	2500      	movs	r5, #0
10058abe:	54e5      	strb	r5, [r4, r3]
10058ac0:	18e4      	adds	r4, r4, r3
10058ac2:	7062      	strb	r2, [r4, #1]
10058ac4:	1c9b      	adds	r3, r3, #2
10058ac6:	e7f5      	b.n	10058ab4 <llc_padv_wr_set_periodic_advertising_parameters+0x8c>

10058ac8 <llc_padv_wr_get_adv_event_length>:
10058ac8:	b5b0      	push	{r4, r5, r7, lr}
10058aca:	4604      	mov	r4, r0
10058acc:	6f85      	ldr	r5, [r0, #120]	@ 0x78
10058ace:	7c2a      	ldrb	r2, [r5, #16]
10058ad0:	4629      	mov	r1, r5
10058ad2:	f7ff ff84 	bl	100589de <llc_padv_wr_calc_aux_sync_subevent_rsp_interval>
10058ad6:	68a9      	ldr	r1, [r5, #8]
10058ad8:	1809      	adds	r1, r1, r0
10058ada:	7a60      	ldrb	r0, [r4, #9]
10058adc:	4348      	muls	r0, r1
10058ade:	bdb0      	pop	{r4, r5, r7, pc}

10058ae0 <ll_set_periodic_advertising_subevent_data_ptr>:
10058ae0:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10058ae2:	4614      	mov	r4, r2
10058ae4:	460d      	mov	r5, r1
10058ae6:	4606      	mov	r6, r0
10058ae8:	2001      	movs	r0, #1
10058aea:	2102      	movs	r1, #2
10058aec:	f7fc fa7a 	bl	10054fe4 <hci_get_set_legacy_ext_flag>
10058af0:	2800      	cmp	r0, #0
10058af2:	d000      	beq.n	10058af6 <ll_set_periodic_advertising_subevent_data_ptr+0x16>
10058af4:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10058af6:	2101      	movs	r1, #1
10058af8:	220f      	movs	r2, #15
10058afa:	4628      	mov	r0, r5
10058afc:	f009 f9d0 	bl	10061ea0 <LL_link_is_arg_in_range>
10058b00:	2800      	cmp	r0, #0
10058b02:	d1f7      	bne.n	10058af4 <ll_set_periodic_advertising_subevent_data_ptr+0x14>
10058b04:	4668      	mov	r0, sp
10058b06:	7046      	strb	r6, [r0, #1]
10058b08:	7005      	strb	r5, [r0, #0]
10058b0a:	9401      	str	r4, [sp, #4]
10058b0c:	f7f5 fe43 	bl	1004e796 <llc_padv_wr_set_periodic_advertising_subevent_data_ucfg>
10058b10:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10058b12 <llc_padv_wr_create_connection_cancel>:
10058b12:	b570      	push	{r4, r5, r6, lr}
10058b14:	2800      	cmp	r0, #0
10058b16:	d102      	bne.n	10058b1e <llc_padv_wr_create_connection_cancel+0xc>
10058b18:	4608      	mov	r0, r1
10058b1a:	f7ff fcc9 	bl	100584b0 <llc_padv_get_configured_context>
10058b1e:	4604      	mov	r4, r0
10058b20:	2000      	movs	r0, #0
10058b22:	2c00      	cmp	r4, #0
10058b24:	d019      	beq.n	10058b5a <llc_padv_wr_create_connection_cancel+0x48>
10058b26:	6fa5      	ldr	r5, [r4, #120]	@ 0x78
10058b28:	2142      	movs	r1, #66	@ 0x42
10058b2a:	5c69      	ldrb	r1, [r5, r1]
10058b2c:	29ff      	cmp	r1, #255	@ 0xff
10058b2e:	d014      	beq.n	10058b5a <llc_padv_wr_create_connection_cancel+0x48>
10058b30:	462e      	mov	r6, r5
10058b32:	3640      	adds	r6, #64	@ 0x40
10058b34:	7830      	ldrb	r0, [r6, #0]
10058b36:	f7fe fa8b 	bl	10057050 <llc_conn_release_conn_idx>
10058b3a:	7870      	ldrb	r0, [r6, #1]
10058b3c:	f009 fc40 	bl	100623c0 <LL_sched_set_cancel_request>
10058b40:	f3ef 8010 	mrs	r0, PRIMASK
10058b44:	b672      	cpsid	i
10058b46:	7a61      	ldrb	r1, [r4, #9]
10058b48:	2200      	movs	r2, #0
10058b4a:	4628      	mov	r0, r5
10058b4c:	4613      	mov	r3, r2
10058b4e:	f7ff fe37 	bl	100587c0 <llc_padv_wr_set_conn_req_bit_in_map>
10058b52:	b662      	cpsie	i
10058b54:	20ff      	movs	r0, #255	@ 0xff
10058b56:	70b0      	strb	r0, [r6, #2]
10058b58:	2001      	movs	r0, #1
10058b5a:	bd70      	pop	{r4, r5, r6, pc}

10058b5c <llc_padv_wr_set_start_parameters>:
10058b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
10058b5e:	b08f      	sub	sp, #60	@ 0x3c
10058b60:	6805      	ldr	r5, [r0, #0]
10058b62:	6841      	ldr	r1, [r0, #4]
10058b64:	9108      	str	r1, [sp, #32]
10058b66:	6881      	ldr	r1, [r0, #8]
10058b68:	910a      	str	r1, [sp, #40]	@ 0x28
10058b6a:	68c1      	ldr	r1, [r0, #12]
10058b6c:	910b      	str	r1, [sp, #44]	@ 0x2c
10058b6e:	6901      	ldr	r1, [r0, #16]
10058b70:	9107      	str	r1, [sp, #28]
10058b72:	6941      	ldr	r1, [r0, #20]
10058b74:	9106      	str	r1, [sp, #24]
10058b76:	6981      	ldr	r1, [r0, #24]
10058b78:	910e      	str	r1, [sp, #56]	@ 0x38
10058b7a:	69c1      	ldr	r1, [r0, #28]
10058b7c:	6a02      	ldr	r2, [r0, #32]
10058b7e:	9209      	str	r2, [sp, #36]	@ 0x24
10058b80:	6a47      	ldr	r7, [r0, #36]	@ 0x24
10058b82:	9703      	str	r7, [sp, #12]
10058b84:	6a86      	ldr	r6, [r0, #40]	@ 0x28
10058b86:	9604      	str	r6, [sp, #16]
10058b88:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
10058b8a:	9205      	str	r2, [sp, #20]
10058b8c:	6b00      	ldr	r0, [r0, #48]	@ 0x30
10058b8e:	900d      	str	r0, [sp, #52]	@ 0x34
10058b90:	6fac      	ldr	r4, [r5, #120]	@ 0x78
10058b92:	6860      	ldr	r0, [r4, #4]
10058b94:	900c      	str	r0, [sp, #48]	@ 0x30
10058b96:	4628      	mov	r0, r5
10058b98:	f010 fd5a 	bl	10069650 <llc_padv_wr_calc_rx_start_and_timeout>
10058b9c:	21f9      	movs	r1, #249	@ 0xf9
10058b9e:	4628      	mov	r0, r5
10058ba0:	f000 f858 	bl	10058c54 <llc_padv_wr_calc_aux_sync_subevent_ind_duration>
10058ba4:	4924      	ldr	r1, [pc, #144]	@ (10058c38 <__arm_cp.7_0>)
10058ba6:	6039      	str	r1, [r7, #0]
10058ba8:	4924      	ldr	r1, [pc, #144]	@ (10058c3c <__arm_cp.7_1>)
10058baa:	6031      	str	r1, [r6, #0]
10058bac:	303e      	adds	r0, #62	@ 0x3e
10058bae:	9e06      	ldr	r6, [sp, #24]
10058bb0:	6030      	str	r0, [r6, #0]
10058bb2:	4823      	ldr	r0, [pc, #140]	@ (10058c40 <__arm_cp.7_2>)
10058bb4:	9f05      	ldr	r7, [sp, #20]
10058bb6:	6038      	str	r0, [r7, #0]
10058bb8:	980e      	ldr	r0, [sp, #56]	@ 0x38
10058bba:	990c      	ldr	r1, [sp, #48]	@ 0x30
10058bbc:	6001      	str	r1, [r0, #0]
10058bbe:	4921      	ldr	r1, [pc, #132]	@ (10058c44 <__arm_cp.7_3>)
10058bc0:	980d      	ldr	r0, [sp, #52]	@ 0x34
10058bc2:	6001      	str	r1, [r0, #0]
10058bc4:	7c22      	ldrb	r2, [r4, #16]
10058bc6:	4628      	mov	r0, r5
10058bc8:	4621      	mov	r1, r4
10058bca:	f7ff ff08 	bl	100589de <llc_padv_wr_calc_aux_sync_subevent_rsp_interval>
10058bce:	491e      	ldr	r1, [pc, #120]	@ (10058c48 <__arm_cp.7_4>)
10058bd0:	9a03      	ldr	r2, [sp, #12]
10058bd2:	6051      	str	r1, [r2, #4]
10058bd4:	491d      	ldr	r1, [pc, #116]	@ (10058c4c <__arm_cp.7_5>)
10058bd6:	9a04      	ldr	r2, [sp, #16]
10058bd8:	6051      	str	r1, [r2, #4]
10058bda:	6070      	str	r0, [r6, #4]
10058bdc:	481c      	ldr	r0, [pc, #112]	@ (10058c50 <__arm_cp.7_6>)
10058bde:	6078      	str	r0, [r7, #4]
10058be0:	980e      	ldr	r0, [sp, #56]	@ 0x38
10058be2:	990c      	ldr	r1, [sp, #48]	@ 0x30
10058be4:	6041      	str	r1, [r0, #4]
10058be6:	980d      	ldr	r0, [sp, #52]	@ 0x34
10058be8:	4916      	ldr	r1, [pc, #88]	@ (10058c44 <__arm_cp.7_3>)
10058bea:	6041      	str	r1, [r0, #4]
10058bec:	208c      	movs	r0, #140	@ 0x8c
10058bee:	5c20      	ldrb	r0, [r4, r0]
10058bf0:	9907      	ldr	r1, [sp, #28]
10058bf2:	7008      	strb	r0, [r1, #0]
10058bf4:	206a      	movs	r0, #106	@ 0x6a
10058bf6:	5a2a      	ldrh	r2, [r5, r0]
10058bf8:	4628      	mov	r0, r5
10058bfa:	306a      	adds	r0, #106	@ 0x6a
10058bfc:	7880      	ldrb	r0, [r0, #2]
10058bfe:	7a69      	ldrb	r1, [r5, #9]
10058c00:	9f08      	ldr	r7, [sp, #32]
10058c02:	683b      	ldr	r3, [r7, #0]
10058c04:	6ba6      	ldr	r6, [r4, #56]	@ 0x38
10058c06:	9100      	str	r1, [sp, #0]
10058c08:	9301      	str	r3, [sp, #4]
10058c0a:	9602      	str	r6, [sp, #8]
10058c0c:	3514      	adds	r5, #20
10058c0e:	2301      	movs	r3, #1
10058c10:	4629      	mov	r1, r5
10058c12:	f7fe ff94 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
10058c16:	9909      	ldr	r1, [sp, #36]	@ 0x24
10058c18:	7008      	strb	r0, [r1, #0]
10058c1a:	f009 fb3d 	bl	10062298 <LL_get_rx_common_buffer_p>
10058c1e:	990a      	ldr	r1, [sp, #40]	@ 0x28
10058c20:	6008      	str	r0, [r1, #0]
10058c22:	4620      	mov	r0, r4
10058c24:	3024      	adds	r0, #36	@ 0x24
10058c26:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10058c28:	6008      	str	r0, [r1, #0]
10058c2a:	f009 f8a1 	bl	10061d70 <llc_generate_access_address>
10058c2e:	6020      	str	r0, [r4, #0]
10058c30:	6078      	str	r0, [r7, #4]
10058c32:	b00f      	add	sp, #60	@ 0x3c
10058c34:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058c36:	46c0      	nop			@ (mov r8, r8)

10058c38 <__arm_cp.7_0>:
10058c38:	10069371 	.word	0x10069371

10058c3c <__arm_cp.7_1>:
10058c3c:	100694af 	.word	0x100694af

10058c40 <__arm_cp.7_2>:
10058c40:	100696d9 	.word	0x100696d9

10058c44 <__arm_cp.7_3>:
10058c44:	100694d5 	.word	0x100694d5

10058c48 <__arm_cp.7_4>:
10058c48:	100694dd 	.word	0x100694dd

10058c4c <__arm_cp.7_5>:
10058c4c:	100696b1 	.word	0x100696b1

10058c50 <__arm_cp.7_6>:
10058c50:	10069709 	.word	0x10069709

10058c54 <llc_padv_wr_calc_aux_sync_subevent_ind_duration>:
10058c54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10058c56:	460d      	mov	r5, r1
10058c58:	4607      	mov	r7, r0
10058c5a:	206d      	movs	r0, #109	@ 0x6d
10058c5c:	5c3b      	ldrb	r3, [r7, r0]
10058c5e:	6ff8      	ldr	r0, [r7, #124]	@ 0x7c
10058c60:	21c7      	movs	r1, #199	@ 0xc7
10058c62:	5c44      	ldrb	r4, [r0, r1]
10058c64:	88b9      	ldrh	r1, [r7, #4]
10058c66:	200a      	movs	r0, #10
10058c68:	4622      	mov	r2, r4
10058c6a:	f008 ff1b 	bl	10061aa4 <llc_eadv_get_extended_header_flags_with_data_ind>
10058c6e:	b2c0      	uxtb	r0, r0
10058c70:	2101      	movs	r1, #1
10058c72:	463a      	mov	r2, r7
10058c74:	f008 fea4 	bl	100619c0 <llc_eadv_calculate_extended_header_length>
10058c78:	4606      	mov	r6, r0
10058c7a:	2d00      	cmp	r5, #0
10058c7c:	d107      	bne.n	10058c8e <llc_padv_wr_calc_aux_sync_subevent_ind_duration+0x3a>
10058c7e:	2500      	movs	r5, #0
10058c80:	4638      	mov	r0, r7
10058c82:	4629      	mov	r1, r5
10058c84:	f7ff fdd1 	bl	1005882a <llc_padv_wr_get_subevent_data>
10058c88:	2800      	cmp	r0, #0
10058c8a:	d000      	beq.n	10058c8e <llc_padv_wr_calc_aux_sync_subevent_ind_duration+0x3a>
10058c8c:	7805      	ldrb	r5, [r0, #0]
10058c8e:	2c03      	cmp	r4, #3
10058c90:	d001      	beq.n	10058c96 <llc_padv_wr_calc_aux_sync_subevent_ind_duration+0x42>
10058c92:	2214      	movs	r2, #20
10058c94:	e000      	b.n	10058c98 <llc_padv_wr_calc_aux_sync_subevent_ind_duration+0x44>
10058c96:	2200      	movs	r2, #0
10058c98:	1970      	adds	r0, r6, r5
10058c9a:	1c40      	adds	r0, r0, #1
10058c9c:	b2c1      	uxtb	r1, r0
10058c9e:	4620      	mov	r0, r4
10058ca0:	f003 ffa6 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
10058ca4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

10058ca8 <llc_padv_wr_set_periodic_advertising_subevent_data>:
10058ca8:	b5f0      	push	{r4, r5, r6, r7, lr}
10058caa:	b095      	sub	sp, #84	@ 0x54
10058cac:	4607      	mov	r7, r0
10058cae:	7840      	ldrb	r0, [r0, #1]
10058cb0:	f006 fff8 	bl	1005fca4 <llc_get_advertising_set_index>
10058cb4:	4994      	ldr	r1, [pc, #592]	@ (10058f08 <__arm_cp.10_0>)
10058cb6:	4288      	cmp	r0, r1
10058cb8:	d051      	beq.n	10058d5e <llc_padv_wr_set_periodic_advertising_subevent_data+0xb6>
10058cba:	0204      	lsls	r4, r0, #8
10058cbc:	f009 fb00 	bl	100622c0 <llc_get_linkms_cntxt_p>
10058cc0:	6800      	ldr	r0, [r0, #0]
10058cc2:	1900      	adds	r0, r0, r4
10058cc4:	a914      	add	r1, sp, #80	@ 0x50
10058cc6:	f7ff f889 	bl	10057ddc <llc_padv_is_periodic_advertising_context_configured>
10058cca:	230c      	movs	r3, #12
10058ccc:	2800      	cmp	r0, #0
10058cce:	d047      	beq.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058cd0:	9814      	ldr	r0, [sp, #80]	@ 0x50
10058cd2:	7a42      	ldrb	r2, [r0, #9]
10058cd4:	9212      	str	r2, [sp, #72]	@ 0x48
10058cd6:	2a00      	cmp	r2, #0
10058cd8:	d042      	beq.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058cda:	9307      	str	r3, [sp, #28]
10058cdc:	6f80      	ldr	r0, [r0, #120]	@ 0x78
10058cde:	7c05      	ldrb	r5, [r0, #16]
10058ce0:	6981      	ldr	r1, [r0, #24]
10058ce2:	910d      	str	r1, [sp, #52]	@ 0x34
10058ce4:	69c1      	ldr	r1, [r0, #28]
10058ce6:	9104      	str	r1, [sp, #16]
10058ce8:	4601      	mov	r1, r0
10058cea:	3122      	adds	r1, #34	@ 0x22
10058cec:	9105      	str	r1, [sp, #20]
10058cee:	9010      	str	r0, [sp, #64]	@ 0x40
10058cf0:	308c      	adds	r0, #140	@ 0x8c
10058cf2:	9006      	str	r0, [sp, #24]
10058cf4:	7838      	ldrb	r0, [r7, #0]
10058cf6:	00c0      	lsls	r0, r0, #3
10058cf8:	900e      	str	r0, [sp, #56]	@ 0x38
10058cfa:	3008      	adds	r0, #8
10058cfc:	9011      	str	r0, [sp, #68]	@ 0x44
10058cfe:	2600      	movs	r6, #0
10058d00:	4634      	mov	r4, r6
10058d02:	9713      	str	r7, [sp, #76]	@ 0x4c
10058d04:	950f      	str	r5, [sp, #60]	@ 0x3c
10058d06:	3408      	adds	r4, #8
10058d08:	9811      	ldr	r0, [sp, #68]	@ 0x44
10058d0a:	42a0      	cmp	r0, r4
10058d0c:	d02b      	beq.n	10058d66 <llc_padv_wr_set_periodic_advertising_subevent_data+0xbe>
10058d0e:	687f      	ldr	r7, [r7, #4]
10058d10:	5dbd      	ldrb	r5, [r7, r6]
10058d12:	2100      	movs	r1, #0
10058d14:	227f      	movs	r2, #127	@ 0x7f
10058d16:	4628      	mov	r0, r5
10058d18:	f009 f8c2 	bl	10061ea0 <LL_link_is_arg_in_range>
10058d1c:	2800      	cmp	r0, #0
10058d1e:	d000      	beq.n	10058d22 <llc_padv_wr_set_periodic_advertising_subevent_data+0x7a>
10058d20:	e0f0      	b.n	10058f04 <llc_padv_wr_set_periodic_advertising_subevent_data+0x25c>
10058d22:	9812      	ldr	r0, [sp, #72]	@ 0x48
10058d24:	4285      	cmp	r5, r0
10058d26:	d300      	bcc.n	10058d2a <llc_padv_wr_set_periodic_advertising_subevent_data+0x82>
10058d28:	e0ea      	b.n	10058f00 <llc_padv_wr_set_periodic_advertising_subevent_data+0x258>
10058d2a:	19b8      	adds	r0, r7, r6
10058d2c:	78c1      	ldrb	r1, [r0, #3]
10058d2e:	084a      	lsrs	r2, r1, #1
10058d30:	2312      	movs	r3, #18
10058d32:	2a7c      	cmp	r2, #124	@ 0x7c
10058d34:	d814      	bhi.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058d36:	7842      	ldrb	r2, [r0, #1]
10058d38:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10058d3a:	4295      	cmp	r5, r2
10058d3c:	d910      	bls.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058d3e:	1aaa      	subs	r2, r5, r2
10058d40:	7880      	ldrb	r0, [r0, #2]
10058d42:	4282      	cmp	r2, r0
10058d44:	9f13      	ldr	r7, [sp, #76]	@ 0x4c
10058d46:	db0b      	blt.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058d48:	9814      	ldr	r0, [sp, #80]	@ 0x50
10058d4a:	f7ff ff83 	bl	10058c54 <llc_padv_wr_calc_aux_sync_subevent_ind_duration>
10058d4e:	9910      	ldr	r1, [sp, #64]	@ 0x40
10058d50:	6889      	ldr	r1, [r1, #8]
10058d52:	393e      	subs	r1, #62	@ 0x3e
10058d54:	4288      	cmp	r0, r1
10058d56:	4626      	mov	r6, r4
10058d58:	d9d5      	bls.n	10058d06 <llc_padv_wr_set_periodic_advertising_subevent_data+0x5e>
10058d5a:	2345      	movs	r3, #69	@ 0x45
10058d5c:	e000      	b.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058d5e:	2342      	movs	r3, #66	@ 0x42
10058d60:	4618      	mov	r0, r3
10058d62:	b015      	add	sp, #84	@ 0x54
10058d64:	bdf0      	pop	{r4, r5, r6, r7, pc}
10058d66:	2000      	movs	r0, #0
10058d68:	2101      	movs	r1, #1
10058d6a:	9109      	str	r1, [sp, #36]	@ 0x24
10058d6c:	f3ef 8110 	mrs	r1, PRIMASK
10058d70:	b672      	cpsid	i
10058d72:	07c0      	lsls	r0, r0, #31
10058d74:	d108      	bne.n	10058d88 <llc_padv_wr_set_periodic_advertising_subevent_data+0xe0>
10058d76:	206a      	movs	r0, #106	@ 0x6a
10058d78:	9914      	ldr	r1, [sp, #80]	@ 0x50
10058d7a:	5a08      	ldrh	r0, [r1, r0]
10058d7c:	9910      	ldr	r1, [sp, #64]	@ 0x40
10058d7e:	8c09      	ldrh	r1, [r1, #32]
10058d80:	4288      	cmp	r0, r1
10058d82:	d001      	beq.n	10058d88 <llc_padv_wr_set_periodic_advertising_subevent_data+0xe0>
10058d84:	2000      	movs	r0, #0
10058d86:	9009      	str	r0, [sp, #36]	@ 0x24
10058d88:	9d10      	ldr	r5, [sp, #64]	@ 0x40
10058d8a:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
10058d8c:	9002      	str	r0, [sp, #8]
10058d8e:	7c68      	ldrb	r0, [r5, #17]
10058d90:	9008      	str	r0, [sp, #32]
10058d92:	9805      	ldr	r0, [sp, #20]
10058d94:	7800      	ldrb	r0, [r0, #0]
10058d96:	9011      	str	r0, [sp, #68]	@ 0x44
10058d98:	7d2e      	ldrb	r6, [r5, #20]
10058d9a:	7d6c      	ldrb	r4, [r5, #21]
10058d9c:	7da8      	ldrb	r0, [r5, #22]
10058d9e:	900b      	str	r0, [sp, #44]	@ 0x2c
10058da0:	2208      	movs	r2, #8
10058da2:	980d      	ldr	r0, [sp, #52]	@ 0x34
10058da4:	9904      	ldr	r1, [sp, #16]
10058da6:	f7eb fdfd 	bl	100449a4 <BLEPLAT_MemCpy>
10058daa:	7de8      	ldrb	r0, [r5, #23]
10058dac:	217f      	movs	r1, #127	@ 0x7f
10058dae:	4001      	ands	r1, r0
10058db0:	75e9      	strb	r1, [r5, #23]
10058db2:	b662      	cpsie	i
10058db4:	2100      	movs	r1, #0
10058db6:	940c      	str	r4, [sp, #48]	@ 0x30
10058db8:	42b4      	cmp	r4, r6
10058dba:	4608      	mov	r0, r1
10058dbc:	d004      	beq.n	10058dc8 <llc_padv_wr_set_periodic_advertising_subevent_data+0x120>
10058dbe:	d901      	bls.n	10058dc4 <llc_padv_wr_set_periodic_advertising_subevent_data+0x11c>
10058dc0:	980c      	ldr	r0, [sp, #48]	@ 0x30
10058dc2:	e000      	b.n	10058dc6 <llc_padv_wr_set_periodic_advertising_subevent_data+0x11e>
10058dc4:	9812      	ldr	r0, [sp, #72]	@ 0x48
10058dc6:	1b80      	subs	r0, r0, r6
10058dc8:	9001      	str	r0, [sp, #4]
10058dca:	b2c0      	uxtb	r0, r0
10058dcc:	900a      	str	r0, [sp, #40]	@ 0x28
10058dce:	20ff      	movs	r0, #255	@ 0xff
10058dd0:	9003      	str	r0, [sp, #12]
10058dd2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
10058dd4:	9611      	str	r6, [sp, #68]	@ 0x44
10058dd6:	980e      	ldr	r0, [sp, #56]	@ 0x38
10058dd8:	4288      	cmp	r0, r1
10058dda:	910f      	str	r1, [sp, #60]	@ 0x3c
10058ddc:	d040      	beq.n	10058e60 <llc_padv_wr_set_periodic_advertising_subevent_data+0x1b8>
10058dde:	6878      	ldr	r0, [r7, #4]
10058de0:	5c45      	ldrb	r5, [r0, r1]
10058de2:	4628      	mov	r0, r5
10058de4:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
10058de6:	4621      	mov	r1, r4
10058de8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10058dea:	f009 f859 	bl	10061ea0 <LL_link_is_arg_in_range>
10058dee:	2800      	cmp	r0, #0
10058df0:	d000      	beq.n	10058df4 <llc_padv_wr_set_periodic_advertising_subevent_data+0x14c>
10058df2:	e085      	b.n	10058f00 <llc_padv_wr_set_periodic_advertising_subevent_data+0x258>
10058df4:	1b28      	subs	r0, r5, r4
10058df6:	b2c0      	uxtb	r0, r0
10058df8:	990a      	ldr	r1, [sp, #40]	@ 0x28
10058dfa:	1840      	adds	r0, r0, r1
10058dfc:	2401      	movs	r4, #1
10058dfe:	4084      	lsls	r4, r0
10058e00:	9e11      	ldr	r6, [sp, #68]	@ 0x44
10058e02:	4630      	mov	r0, r6
10058e04:	4020      	ands	r0, r4
10058e06:	0600      	lsls	r0, r0, #24
10058e08:	d17a      	bne.n	10058f00 <llc_padv_wr_set_periodic_advertising_subevent_data+0x258>
10058e0a:	9809      	ldr	r0, [sp, #36]	@ 0x24
10058e0c:	0600      	lsls	r0, r0, #24
10058e0e:	d023      	beq.n	10058e58 <llc_padv_wr_set_periodic_advertising_subevent_data+0x1b0>
10058e10:	2346      	movs	r3, #70	@ 0x46
10058e12:	9808      	ldr	r0, [sp, #32]
10058e14:	4285      	cmp	r5, r0
10058e16:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10058e18:	d3a2      	bcc.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058e1a:	d11e      	bne.n	10058e5a <llc_padv_wr_set_periodic_advertising_subevent_data+0x1b2>
10058e1c:	206c      	movs	r0, #108	@ 0x6c
10058e1e:	9914      	ldr	r1, [sp, #80]	@ 0x50
10058e20:	5c09      	ldrb	r1, [r1, r0]
10058e22:	483a      	ldr	r0, [pc, #232]	@ (10058f0c <__arm_cp.10_1>)
10058e24:	6800      	ldr	r0, [r0, #0]
10058e26:	7b40      	ldrb	r0, [r0, #13]
10058e28:	4288      	cmp	r0, r1
10058e2a:	d003      	beq.n	10058e34 <llc_padv_wr_set_periodic_advertising_subevent_data+0x18c>
10058e2c:	9906      	ldr	r1, [sp, #24]
10058e2e:	7809      	ldrb	r1, [r1, #0]
10058e30:	4288      	cmp	r0, r1
10058e32:	d195      	bne.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058e34:	461e      	mov	r6, r3
10058e36:	f7eb fea9 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10058e3a:	4605      	mov	r5, r0
10058e3c:	f009 fa8e 	bl	1006235c <LL_sched_engine_return_actual_scheduler_margin>
10058e40:	4633      	mov	r3, r6
10058e42:	1940      	adds	r0, r0, r5
10058e44:	3064      	adds	r0, #100	@ 0x64
10058e46:	43c0      	mvns	r0, r0
10058e48:	9902      	ldr	r1, [sp, #8]
10058e4a:	1808      	adds	r0, r1, r0
10058e4c:	9808      	ldr	r0, [sp, #32]
10058e4e:	9003      	str	r0, [sp, #12]
10058e50:	9e11      	ldr	r6, [sp, #68]	@ 0x44
10058e52:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10058e54:	d501      	bpl.n	10058e5a <llc_padv_wr_set_periodic_advertising_subevent_data+0x1b2>
10058e56:	e783      	b.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058e58:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10058e5a:	4326      	orrs	r6, r4
10058e5c:	3108      	adds	r1, #8
10058e5e:	e7b9      	b.n	10058dd4 <llc_padv_wr_set_periodic_advertising_subevent_data+0x12c>
10058e60:	980c      	ldr	r0, [sp, #48]	@ 0x30
10058e62:	9901      	ldr	r1, [sp, #4]
10058e64:	1a08      	subs	r0, r1, r0
10058e66:	900c      	str	r0, [sp, #48]	@ 0x30
10058e68:	2100      	movs	r1, #0
10058e6a:	980e      	ldr	r0, [sp, #56]	@ 0x38
10058e6c:	4288      	cmp	r0, r1
10058e6e:	d01d      	beq.n	10058eac <llc_padv_wr_set_periodic_advertising_subevent_data+0x204>
10058e70:	687b      	ldr	r3, [r7, #4]
10058e72:	185a      	adds	r2, r3, r1
10058e74:	78d4      	ldrb	r4, [r2, #3]
10058e76:	5c5b      	ldrb	r3, [r3, r1]
10058e78:	980c      	ldr	r0, [sp, #48]	@ 0x30
10058e7a:	18c3      	adds	r3, r0, r3
10058e7c:	b2dd      	uxtb	r5, r3
10058e7e:	00ef      	lsls	r7, r5, #3
10058e80:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10058e82:	6830      	ldr	r0, [r6, #0]
10058e84:	55c4      	strb	r4, [r0, r7]
10058e86:	7853      	ldrb	r3, [r2, #1]
10058e88:	006c      	lsls	r4, r5, #1
10058e8a:	6875      	ldr	r5, [r6, #4]
10058e8c:	552b      	strb	r3, [r5, r4]
10058e8e:	19c0      	adds	r0, r0, r7
10058e90:	6857      	ldr	r7, [r2, #4]
10058e92:	6047      	str	r7, [r0, #4]
10058e94:	192c      	adds	r4, r5, r4
10058e96:	7063      	strb	r3, [r4, #1]
10058e98:	7892      	ldrb	r2, [r2, #2]
10058e9a:	2a00      	cmp	r2, #0
10058e9c:	d003      	beq.n	10058ea6 <llc_padv_wr_set_periodic_advertising_subevent_data+0x1fe>
10058e9e:	1c60      	adds	r0, r4, #1
10058ea0:	189a      	adds	r2, r3, r2
10058ea2:	1e52      	subs	r2, r2, #1
10058ea4:	7002      	strb	r2, [r0, #0]
10058ea6:	3108      	adds	r1, #8
10058ea8:	9f13      	ldr	r7, [sp, #76]	@ 0x4c
10058eaa:	e7de      	b.n	10058e6a <llc_padv_wr_set_periodic_advertising_subevent_data+0x1c2>
10058eac:	2300      	movs	r3, #0
10058eae:	980e      	ldr	r0, [sp, #56]	@ 0x38
10058eb0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10058eb2:	4288      	cmp	r0, r1
10058eb4:	d000      	beq.n	10058eb8 <llc_padv_wr_set_periodic_advertising_subevent_data+0x210>
10058eb6:	e753      	b.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058eb8:	2017      	movs	r0, #23
10058eba:	9910      	ldr	r1, [sp, #64]	@ 0x40
10058ebc:	5609      	ldrsb	r1, [r1, r0]
10058ebe:	2001      	movs	r0, #1
10058ec0:	2900      	cmp	r1, #0
10058ec2:	d500      	bpl.n	10058ec6 <llc_padv_wr_set_periodic_advertising_subevent_data+0x21e>
10058ec4:	e752      	b.n	10058d6c <llc_padv_wr_set_periodic_advertising_subevent_data+0xc4>
10058ec6:	9910      	ldr	r1, [sp, #64]	@ 0x40
10058ec8:	7c49      	ldrb	r1, [r1, #17]
10058eca:	9a08      	ldr	r2, [sp, #32]
10058ecc:	428a      	cmp	r2, r1
10058ece:	d000      	beq.n	10058ed2 <llc_padv_wr_set_periodic_advertising_subevent_data+0x22a>
10058ed0:	e74c      	b.n	10058d6c <llc_padv_wr_set_periodic_advertising_subevent_data+0xc4>
10058ed2:	f3ef 8010 	mrs	r0, PRIMASK
10058ed6:	b672      	cpsid	i
10058ed8:	9805      	ldr	r0, [sp, #20]
10058eda:	9911      	ldr	r1, [sp, #68]	@ 0x44
10058edc:	7001      	strb	r1, [r0, #0]
10058ede:	9810      	ldr	r0, [sp, #64]	@ 0x40
10058ee0:	990d      	ldr	r1, [sp, #52]	@ 0x34
10058ee2:	61c1      	str	r1, [r0, #28]
10058ee4:	7c40      	ldrb	r0, [r0, #17]
10058ee6:	9a03      	ldr	r2, [sp, #12]
10058ee8:	b2d1      	uxtb	r1, r2
10058eea:	4281      	cmp	r1, r0
10058eec:	d106      	bne.n	10058efc <llc_padv_wr_set_periodic_advertising_subevent_data+0x254>
10058eee:	320a      	adds	r2, #10
10058ef0:	b2d1      	uxtb	r1, r2
10058ef2:	9814      	ldr	r0, [sp, #80]	@ 0x50
10058ef4:	461c      	mov	r4, r3
10058ef6:	f010 f9ab 	bl	10069250 <llc_padv_prepare_periodic_advertising_packet>
10058efa:	4623      	mov	r3, r4
10058efc:	b662      	cpsie	i
10058efe:	e72f      	b.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058f00:	9b07      	ldr	r3, [sp, #28]
10058f02:	e72d      	b.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>
10058f04:	4603      	mov	r3, r0
10058f06:	e72b      	b.n	10058d60 <llc_padv_wr_set_periodic_advertising_subevent_data+0xb8>

10058f08 <__arm_cp.10_0>:
10058f08:	0000ffff 	.word	0x0000ffff

10058f0c <__arm_cp.10_1>:
10058f0c:	20000898 	.word	0x20000898

10058f10 <llc_padv_wr_set_ctrdata>:
10058f10:	b510      	push	{r4, lr}
10058f12:	7a43      	ldrb	r3, [r0, #9]
10058f14:	2200      	movs	r2, #0
10058f16:	2b00      	cmp	r3, #0
10058f18:	d019      	beq.n	10058f4e <llc_padv_wr_set_ctrdata+0x3e>
10058f1a:	7a03      	ldrb	r3, [r0, #8]
10058f1c:	2b02      	cmp	r3, #2
10058f1e:	d116      	bne.n	10058f4e <llc_padv_wr_set_ctrdata+0x3e>
10058f20:	6f82      	ldr	r2, [r0, #120]	@ 0x78
10058f22:	6813      	ldr	r3, [r2, #0]
10058f24:	700b      	strb	r3, [r1, #0]
10058f26:	0a1c      	lsrs	r4, r3, #8
10058f28:	704c      	strb	r4, [r1, #1]
10058f2a:	0c1c      	lsrs	r4, r3, #16
10058f2c:	708c      	strb	r4, [r1, #2]
10058f2e:	0e1b      	lsrs	r3, r3, #24
10058f30:	70cb      	strb	r3, [r1, #3]
10058f32:	7a40      	ldrb	r0, [r0, #9]
10058f34:	7108      	strb	r0, [r1, #4]
10058f36:	6850      	ldr	r0, [r2, #4]
10058f38:	0a40      	lsrs	r0, r0, #9
10058f3a:	7148      	strb	r0, [r1, #5]
10058f3c:	6890      	ldr	r0, [r2, #8]
10058f3e:	0a40      	lsrs	r0, r0, #9
10058f40:	7188      	strb	r0, [r1, #6]
10058f42:	68d0      	ldr	r0, [r2, #12]
10058f44:	2205      	movs	r2, #5
10058f46:	4342      	muls	r2, r0
10058f48:	0a10      	lsrs	r0, r2, #8
10058f4a:	71c8      	strb	r0, [r1, #7]
10058f4c:	2201      	movs	r2, #1
10058f4e:	4610      	mov	r0, r2
10058f50:	bd10      	pop	{r4, pc}

10058f52 <llc_padv_wr_set_acad>:
10058f52:	b510      	push	{r4, lr}
10058f54:	460c      	mov	r4, r1
10058f56:	1c89      	adds	r1, r1, #2
10058f58:	f7ff ffda 	bl	10058f10 <llc_padv_wr_set_ctrdata>
10058f5c:	2800      	cmp	r0, #0
10058f5e:	d003      	beq.n	10058f68 <llc_padv_wr_set_acad+0x16>
10058f60:	2032      	movs	r0, #50	@ 0x32
10058f62:	7060      	strb	r0, [r4, #1]
10058f64:	2009      	movs	r0, #9
10058f66:	7020      	strb	r0, [r4, #0]
10058f68:	bd10      	pop	{r4, pc}

10058f6a <llc_padv_wr_init_anchors_and_counters>:
10058f6a:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10058f6c:	4604      	mov	r4, r0
10058f6e:	7a40      	ldrb	r0, [r0, #9]
10058f70:	2800      	cmp	r0, #0
10058f72:	d01c      	beq.n	10058fae <llc_padv_wr_init_anchors_and_counters+0x44>
10058f74:	6fa5      	ldr	r5, [r4, #120]	@ 0x78
10058f76:	6d60      	ldr	r0, [r4, #84]	@ 0x54
10058f78:	63e8      	str	r0, [r5, #60]	@ 0x3c
10058f7a:	2000      	movs	r0, #0
10058f7c:	7468      	strb	r0, [r5, #17]
10058f7e:	206a      	movs	r0, #106	@ 0x6a
10058f80:	5a20      	ldrh	r0, [r4, r0]
10058f82:	8428      	strh	r0, [r5, #32]
10058f84:	69e8      	ldr	r0, [r5, #28]
10058f86:	6840      	ldr	r0, [r0, #4]
10058f88:	7800      	ldrb	r0, [r0, #0]
10058f8a:	74a8      	strb	r0, [r5, #18]
10058f8c:	a901      	add	r1, sp, #4
10058f8e:	4620      	mov	r0, r4
10058f90:	f010 fb5e 	bl	10069650 <llc_padv_wr_calc_rx_start_and_timeout>
10058f94:	208c      	movs	r0, #140	@ 0x8c
10058f96:	5c28      	ldrb	r0, [r5, r0]
10058f98:	9901      	ldr	r1, [sp, #4]
10058f9a:	f009 f9ff 	bl	1006239c <LL_sched_set_anchor>
10058f9e:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
10058fa0:	21be      	movs	r1, #190	@ 0xbe
10058fa2:	5c40      	ldrb	r0, [r0, r1]
10058fa4:	7a61      	ldrb	r1, [r4, #9]
10058fa6:	2201      	movs	r2, #1
10058fa8:	462b      	mov	r3, r5
10058faa:	f7ff fb1f 	bl	100585ec <llc_padv_wr_fetch_subevent_data>
10058fae:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10058fb0 <llc_padv_periodic_adv_sync_wr_csr>:
10058fb0:	2001      	movs	r0, #1
10058fb2:	4770      	bx	lr

10058fb4 <llc_padv_wr_disable_ext>:
10058fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
10058fb6:	b089      	sub	sp, #36	@ 0x24
10058fb8:	7a46      	ldrb	r6, [r0, #9]
10058fba:	2e00      	cmp	r6, #0
10058fbc:	d025      	beq.n	1005900a <llc_padv_wr_disable_ext+0x56>
10058fbe:	4604      	mov	r4, r0
10058fc0:	6f87      	ldr	r7, [r0, #120]	@ 0x78
10058fc2:	208c      	movs	r0, #140	@ 0x8c
10058fc4:	5c38      	ldrb	r0, [r7, r0]
10058fc6:	f009 f9fb 	bl	100623c0 <LL_sched_set_cancel_request>
10058fca:	2500      	movs	r5, #0
10058fcc:	4620      	mov	r0, r4
10058fce:	4629      	mov	r1, r5
10058fd0:	f7ff fd9f 	bl	10058b12 <llc_padv_wr_create_connection_cancel>
10058fd4:	2800      	cmp	r0, #0
10058fd6:	d00f      	beq.n	10058ff8 <llc_padv_wr_disable_ext+0x44>
10058fd8:	a802      	add	r0, sp, #8
10058fda:	2102      	movs	r1, #2
10058fdc:	7681      	strb	r1, [r0, #26]
10058fde:	8305      	strh	r5, [r0, #24]
10058fe0:	4669      	mov	r1, sp
10058fe2:	808d      	strh	r5, [r1, #4]
10058fe4:	9104      	str	r1, [sp, #16]
10058fe6:	9103      	str	r1, [sp, #12]
10058fe8:	9102      	str	r1, [sp, #8]
10058fea:	4909      	ldr	r1, [pc, #36]	@ (10059010 <__arm_cp.20_0>)
10058fec:	9107      	str	r1, [sp, #28]
10058fee:	9506      	str	r5, [sp, #24]
10058ff0:	9505      	str	r5, [sp, #20]
10058ff2:	9500      	str	r5, [sp, #0]
10058ff4:	f7fd fbd2 	bl	1005679c <llc_conn_push_connection_complete_event>
10058ff8:	753d      	strb	r5, [r7, #20]
10058ffa:	b2e9      	uxtb	r1, r5
10058ffc:	42b1      	cmp	r1, r6
10058ffe:	d204      	bcs.n	1005900a <llc_padv_wr_disable_ext+0x56>
10059000:	4620      	mov	r0, r4
10059002:	f7ff fc59 	bl	100588b8 <llc_padv_wr_discard_subevent_data>
10059006:	1c6d      	adds	r5, r5, #1
10059008:	e7f7      	b.n	10058ffa <llc_padv_wr_disable_ext+0x46>
1005900a:	b009      	add	sp, #36	@ 0x24
1005900c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005900e:	46c0      	nop			@ (mov r8, r8)

10059010 <__arm_cp.20_0>:
10059010:	00ffffff 	.word	0x00ffffff

10059014 <llc_priv_generate_rpa_from_rl_index>:
10059014:	b5f0      	push	{r4, r5, r6, r7, lr}
10059016:	b085      	sub	sp, #20
10059018:	0604      	lsls	r4, r0, #24
1005901a:	2600      	movs	r6, #0
1005901c:	2c00      	cmp	r4, #0
1005901e:	d42d      	bmi.n	1005907c <llc_priv_generate_rpa_from_rl_index+0x68>
10059020:	9203      	str	r2, [sp, #12]
10059022:	9304      	str	r3, [sp, #16]
10059024:	2528      	movs	r5, #40	@ 0x28
10059026:	4345      	muls	r5, r0
10059028:	4816      	ldr	r0, [pc, #88]	@ (10059084 <__arm_cp.0_0>)
1005902a:	6800      	ldr	r0, [r0, #0]
1005902c:	229c      	movs	r2, #156	@ 0x9c
1005902e:	5880      	ldr	r0, [r0, r2]
10059030:	6880      	ldr	r0, [r0, #8]
10059032:	6800      	ldr	r0, [r0, #0]
10059034:	9001      	str	r0, [sp, #4]
10059036:	1944      	adds	r4, r0, r5
10059038:	9102      	str	r1, [sp, #8]
1005903a:	2900      	cmp	r1, #0
1005903c:	4627      	mov	r7, r4
1005903e:	d001      	beq.n	10059044 <llc_priv_generate_rpa_from_rl_index+0x30>
10059040:	4627      	mov	r7, r4
10059042:	3710      	adds	r7, #16
10059044:	4638      	mov	r0, r7
10059046:	f000 f86a 	bl	1005911e <llc_priv_irk_is_not_zero>
1005904a:	2124      	movs	r1, #36	@ 0x24
1005904c:	5c61      	ldrb	r1, [r4, r1]
1005904e:	2900      	cmp	r1, #0
10059050:	d014      	beq.n	1005907c <llc_priv_generate_rpa_from_rl_index+0x68>
10059052:	2800      	cmp	r0, #0
10059054:	d012      	beq.n	1005907c <llc_priv_generate_rpa_from_rl_index+0x68>
10059056:	9802      	ldr	r0, [sp, #8]
10059058:	2800      	cmp	r0, #0
1005905a:	d004      	beq.n	10059066 <llc_priv_generate_rpa_from_rl_index+0x52>
1005905c:	9801      	ldr	r0, [sp, #4]
1005905e:	1940      	adds	r0, r0, r5
10059060:	6a01      	ldr	r1, [r0, #32]
10059062:	9c03      	ldr	r4, [sp, #12]
10059064:	e004      	b.n	10059070 <llc_priv_generate_rpa_from_rl_index+0x5c>
10059066:	9c03      	ldr	r4, [sp, #12]
10059068:	4620      	mov	r0, r4
1005906a:	f00c fbe2 	bl	10065832 <Hal_Get_Random_Number32>
1005906e:	4601      	mov	r1, r0
10059070:	4638      	mov	r0, r7
10059072:	4622      	mov	r2, r4
10059074:	9b04      	ldr	r3, [sp, #16]
10059076:	f000 f85d 	bl	10059134 <llc_priv_generate_rpa>
1005907a:	2601      	movs	r6, #1
1005907c:	4630      	mov	r0, r6
1005907e:	b005      	add	sp, #20
10059080:	bdf0      	pop	{r4, r5, r6, r7, pc}
10059082:	46c0      	nop			@ (mov r8, r8)

10059084 <__arm_cp.0_0>:
10059084:	20000894 	.word	0x20000894

10059088 <llc_priv_resolve_rpa_in_isr>:
10059088:	b5f0      	push	{r4, r5, r6, r7, lr}
1005908a:	b089      	sub	sp, #36	@ 0x24
1005908c:	9108      	str	r1, [sp, #32]
1005908e:	9007      	str	r0, [sp, #28]
10059090:	4821      	ldr	r0, [pc, #132]	@ (10059118 <__arm_cp.1_0>)
10059092:	6800      	ldr	r0, [r0, #0]
10059094:	219c      	movs	r1, #156	@ 0x9c
10059096:	9106      	str	r1, [sp, #24]
10059098:	5840      	ldr	r0, [r0, r1]
1005909a:	6880      	ldr	r0, [r0, #8]
1005909c:	215d      	movs	r1, #93	@ 0x5d
1005909e:	5c41      	ldrb	r1, [r0, r1]
100590a0:	2400      	movs	r4, #0
100590a2:	2900      	cmp	r1, #0
100590a4:	d035      	beq.n	10059112 <llc_priv_resolve_rpa_in_isr+0x8a>
100590a6:	7a01      	ldrb	r1, [r0, #8]
100590a8:	2900      	cmp	r1, #0
100590aa:	d032      	beq.n	10059112 <llc_priv_resolve_rpa_in_isr+0x8a>
100590ac:	9202      	str	r2, [sp, #8]
100590ae:	9303      	str	r3, [sp, #12]
100590b0:	990e      	ldr	r1, [sp, #56]	@ 0x38
100590b2:	9101      	str	r1, [sp, #4]
100590b4:	2600      	movs	r6, #0
100590b6:	2704      	movs	r7, #4
100590b8:	6841      	ldr	r1, [r0, #4]
100590ba:	19ca      	adds	r2, r1, r7
100590bc:	1f12      	subs	r2, r2, #4
100590be:	6812      	ldr	r2, [r2, #0]
100590c0:	9205      	str	r2, [sp, #20]
100590c2:	59c9      	ldr	r1, [r1, r7]
100590c4:	9104      	str	r1, [sp, #16]
100590c6:	0049      	lsls	r1, r1, #1
100590c8:	0e4d      	lsrs	r5, r1, #25
100590ca:	2128      	movs	r1, #40	@ 0x28
100590cc:	4369      	muls	r1, r5
100590ce:	6800      	ldr	r0, [r0, #0]
100590d0:	1840      	adds	r0, r0, r1
100590d2:	2401      	movs	r4, #1
100590d4:	9907      	ldr	r1, [sp, #28]
100590d6:	9a08      	ldr	r2, [sp, #32]
100590d8:	4623      	mov	r3, r4
100590da:	f000 f85d 	bl	10059198 <llc_priv_rpa_can_be_resolved>
100590de:	2800      	cmp	r0, #0
100590e0:	d10b      	bne.n	100590fa <llc_priv_resolve_rpa_in_isr+0x72>
100590e2:	1c76      	adds	r6, r6, #1
100590e4:	480c      	ldr	r0, [pc, #48]	@ (10059118 <__arm_cp.1_0>)
100590e6:	6800      	ldr	r0, [r0, #0]
100590e8:	9906      	ldr	r1, [sp, #24]
100590ea:	5840      	ldr	r0, [r0, r1]
100590ec:	6880      	ldr	r0, [r0, #8]
100590ee:	7a01      	ldrb	r1, [r0, #8]
100590f0:	3708      	adds	r7, #8
100590f2:	428e      	cmp	r6, r1
100590f4:	d3e0      	bcc.n	100590b8 <llc_priv_resolve_rpa_in_isr+0x30>
100590f6:	2400      	movs	r4, #0
100590f8:	e00b      	b.n	10059112 <llc_priv_resolve_rpa_in_isr+0x8a>
100590fa:	9802      	ldr	r0, [sp, #8]
100590fc:	7005      	strb	r5, [r0, #0]
100590fe:	20ff      	movs	r0, #255	@ 0xff
10059100:	0600      	lsls	r0, r0, #24
10059102:	9b04      	ldr	r3, [sp, #16]
10059104:	0fd9      	lsrs	r1, r3, #31
10059106:	4383      	bics	r3, r0
10059108:	9803      	ldr	r0, [sp, #12]
1005910a:	9a05      	ldr	r2, [sp, #20]
1005910c:	c00c      	stmia	r0!, {r2, r3}
1005910e:	9801      	ldr	r0, [sp, #4]
10059110:	7001      	strb	r1, [r0, #0]
10059112:	4620      	mov	r0, r4
10059114:	b009      	add	sp, #36	@ 0x24
10059116:	bdf0      	pop	{r4, r5, r6, r7, pc}

10059118 <__arm_cp.1_0>:
10059118:	20000894 	.word	0x20000894

1005911c <llc_priv_generate_peer_rpa_from_peer_id_ucfg_weak>:
1005911c:	4770      	bx	lr

1005911e <llc_priv_irk_is_not_zero>:
1005911e:	6802      	ldr	r2, [r0, #0]
10059120:	6841      	ldr	r1, [r0, #4]
10059122:	6883      	ldr	r3, [r0, #8]
10059124:	68c0      	ldr	r0, [r0, #12]
10059126:	4311      	orrs	r1, r2
10059128:	4319      	orrs	r1, r3
1005912a:	4301      	orrs	r1, r0
1005912c:	1e48      	subs	r0, r1, #1
1005912e:	4181      	sbcs	r1, r0
10059130:	4608      	mov	r0, r1
10059132:	4770      	bx	lr

10059134 <llc_priv_generate_rpa>:
10059134:	b5f0      	push	{r4, r5, r6, r7, lr}
10059136:	b08d      	sub	sp, #52	@ 0x34
10059138:	ac01      	add	r4, sp, #4
1005913a:	c40d      	stmia	r4!, {r0, r2, r3}
1005913c:	4815      	ldr	r0, [pc, #84]	@ (10059194 <__arm_cp.1_0>)
1005913e:	4001      	ands	r1, r0
10059140:	1808      	adds	r0, r1, r0
10059142:	1c40      	adds	r0, r0, #1
10059144:	900c      	str	r0, [sp, #48]	@ 0x30
10059146:	2400      	movs	r4, #0
10059148:	940b      	str	r4, [sp, #44]	@ 0x2c
1005914a:	940a      	str	r4, [sp, #40]	@ 0x28
1005914c:	9409      	str	r4, [sp, #36]	@ 0x24
1005914e:	9408      	str	r4, [sp, #32]
10059150:	ad08      	add	r5, sp, #32
10059152:	ae0c      	add	r6, sp, #48	@ 0x30
10059154:	2703      	movs	r7, #3
10059156:	4628      	mov	r0, r5
10059158:	4631      	mov	r1, r6
1005915a:	463a      	mov	r2, r7
1005915c:	f7eb fc22 	bl	100449a4 <BLEPLAT_MemCpy>
10059160:	9407      	str	r4, [sp, #28]
10059162:	9406      	str	r4, [sp, #24]
10059164:	9405      	str	r4, [sp, #20]
10059166:	9404      	str	r4, [sp, #16]
10059168:	ac04      	add	r4, sp, #16
1005916a:	4628      	mov	r0, r5
1005916c:	9901      	ldr	r1, [sp, #4]
1005916e:	4622      	mov	r2, r4
10059170:	9b02      	ldr	r3, [sp, #8]
10059172:	f00c fb53 	bl	1006581c <BLEPLAT_aes128_encrypt>
10059176:	9d03      	ldr	r5, [sp, #12]
10059178:	1c68      	adds	r0, r5, #1
1005917a:	4621      	mov	r1, r4
1005917c:	463a      	mov	r2, r7
1005917e:	f7eb fc11 	bl	100449a4 <BLEPLAT_MemCpy>
10059182:	1d28      	adds	r0, r5, #4
10059184:	4631      	mov	r1, r6
10059186:	463a      	mov	r2, r7
10059188:	f7eb fc0c 	bl	100449a4 <BLEPLAT_MemCpy>
1005918c:	2001      	movs	r0, #1
1005918e:	7028      	strb	r0, [r5, #0]
10059190:	b00d      	add	sp, #52	@ 0x34
10059192:	bdf0      	pop	{r4, r5, r6, r7, pc}

10059194 <__arm_cp.1_0>:
10059194:	003fffff 	.word	0x003fffff

10059198 <llc_priv_rpa_can_be_resolved>:
10059198:	b5f0      	push	{r4, r5, r6, r7, lr}
1005919a:	b089      	sub	sp, #36	@ 0x24
1005919c:	460c      	mov	r4, r1
1005919e:	4601      	mov	r1, r0
100591a0:	6800      	ldr	r0, [r0, #0]
100591a2:	1d0f      	adds	r7, r1, #4
100591a4:	cfe0      	ldmia	r7, {r5, r6, r7}
100591a6:	4305      	orrs	r5, r0
100591a8:	4335      	orrs	r5, r6
100591aa:	2000      	movs	r0, #0
100591ac:	433d      	orrs	r5, r7
100591ae:	d013      	beq.n	100591d8 <llc_priv_rpa_can_be_resolved+0x40>
100591b0:	9008      	str	r0, [sp, #32]
100591b2:	9007      	str	r0, [sp, #28]
100591b4:	9006      	str	r0, [sp, #24]
100591b6:	9004      	str	r0, [sp, #16]
100591b8:	9003      	str	r0, [sp, #12]
100591ba:	9002      	str	r0, [sp, #8]
100591bc:	9001      	str	r0, [sp, #4]
100591be:	4d07      	ldr	r5, [pc, #28]	@ (100591dc <__arm_cp.2_0>)
100591c0:	402a      	ands	r2, r5
100591c2:	9205      	str	r2, [sp, #20]
100591c4:	a805      	add	r0, sp, #20
100591c6:	aa01      	add	r2, sp, #4
100591c8:	f00c fb28 	bl	1006581c <BLEPLAT_aes128_encrypt>
100591cc:	9801      	ldr	r0, [sp, #4]
100591ce:	4028      	ands	r0, r5
100591d0:	0a21      	lsrs	r1, r4, #8
100591d2:	1a41      	subs	r1, r0, r1
100591d4:	4248      	negs	r0, r1
100591d6:	4148      	adcs	r0, r1
100591d8:	b009      	add	sp, #36	@ 0x24
100591da:	bdf0      	pop	{r4, r5, r6, r7, pc}

100591dc <__arm_cp.2_0>:
100591dc:	00ffffff 	.word	0x00ffffff

100591e0 <llc_priv_init_ucfg_weak>:
100591e0:	4770      	bx	lr

100591e2 <llc_priv_generate_local_rpa_from_peer_id_ucfg_weak>:
100591e2:	4770      	bx	lr

100591e4 <llc_priv_offline_rpa_resolution_ucfg_weak>:
100591e4:	4770      	bx	lr

100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>:
100591e6:	2000      	movs	r0, #0
100591e8:	4770      	bx	lr

100591ea <llc_priv_set_filter_accept_list_flag_in_resolving_list_ucfg_weak>:
100591ea:	4770      	bx	lr

100591ec <llc_priv_clr_all_filter_accept_list_flags_in_resolving_list_ucfg_weak>:
100591ec:	4770      	bx	lr

100591ee <llc_priv_start_privacy_timer_ucfg_weak>:
100591ee:	4770      	bx	lr

100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>:
100591f0:	4770      	bx	lr

100591f2 <llc_priv_init_random_part_of_one_local_rpa_ucfg_weak>:
100591f2:	4770      	bx	lr

100591f4 <llc_pscan_isr>:
100591f4:	b5f0      	push	{r4, r5, r6, r7, lr}
100591f6:	b0d9      	sub	sp, #356	@ 0x164
100591f8:	4607      	mov	r7, r0
100591fa:	4c9c      	ldr	r4, [pc, #624]	@ (1005946c <__arm_cp.1_0>)
100591fc:	6820      	ldr	r0, [r4, #0]
100591fe:	f7ec fd7e 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
10059202:	4606      	mov	r6, r0
10059204:	6820      	ldr	r0, [r4, #0]
10059206:	f7ec fd56 	bl	10045cb6 <BLEPLAT_CNTR_IntGetIntStatusTxRxSkip>
1005920a:	ad0b      	add	r5, sp, #44	@ 0x2c
1005920c:	2101      	movs	r1, #1
1005920e:	9107      	str	r1, [sp, #28]
10059210:	8069      	strh	r1, [r5, #2]
10059212:	2144      	movs	r1, #68	@ 0x44
10059214:	5a79      	ldrh	r1, [r7, r1]
10059216:	8029      	strh	r1, [r5, #0]
10059218:	4995      	ldr	r1, [pc, #596]	@ (10059470 <__arm_cp.1_1>)
1005921a:	910d      	str	r1, [sp, #52]	@ 0x34
1005921c:	22ff      	movs	r2, #255	@ 0xff
1005921e:	0211      	lsls	r1, r2, #8
10059220:	910c      	str	r1, [sp, #48]	@ 0x30
10059222:	4639      	mov	r1, r7
10059224:	3142      	adds	r1, #66	@ 0x42
10059226:	9109      	str	r1, [sp, #36]	@ 0x24
10059228:	463c      	mov	r4, r7
1005922a:	347c      	adds	r4, #124	@ 0x7c
1005922c:	2e00      	cmp	r6, #0
1005922e:	9206      	str	r2, [sp, #24]
10059230:	d03e      	beq.n	100592b0 <llc_pscan_isr+0xbc>
10059232:	2800      	cmp	r0, #0
10059234:	d13c      	bne.n	100592b0 <llc_pscan_isr+0xbc>
10059236:	463e      	mov	r6, r7
10059238:	462f      	mov	r7, r5
1005923a:	370b      	adds	r7, #11
1005923c:	f009 f82c 	bl	10062298 <LL_get_rx_common_buffer_p>
10059240:	9005      	str	r0, [sp, #20]
10059242:	940a      	str	r4, [sp, #40]	@ 0x28
10059244:	7a20      	ldrb	r0, [r4, #8]
10059246:	9004      	str	r0, [sp, #16]
10059248:	f7ed f829 	bl	1004629e <BLEPLAT_CNTR_SmGetRxPhy>
1005924c:	9003      	str	r0, [sp, #12]
1005924e:	ac0e      	add	r4, sp, #56	@ 0x38
10059250:	2080      	movs	r0, #128	@ 0x80
10059252:	9002      	str	r0, [sp, #8]
10059254:	7320      	strb	r0, [r4, #12]
10059256:	a818      	add	r0, sp, #96	@ 0x60
10059258:	900f      	str	r0, [sp, #60]	@ 0x3c
1005925a:	9805      	ldr	r0, [sp, #20]
1005925c:	4621      	mov	r1, r4
1005925e:	f002 fbcf 	bl	1005ba00 <llc_scan_parse_ext_adv_pdu>
10059262:	2200      	movs	r2, #0
10059264:	9608      	str	r6, [sp, #32]
10059266:	4630      	mov	r0, r6
10059268:	4621      	mov	r1, r4
1005926a:	9205      	str	r2, [sp, #20]
1005926c:	463b      	mov	r3, r7
1005926e:	f000 fc55 	bl	10059b1c <llc_pscan_validate_pdu>
10059272:	2801      	cmp	r0, #1
10059274:	d027      	beq.n	100592c6 <llc_pscan_isr+0xd2>
10059276:	2800      	cmp	r0, #0
10059278:	d12c      	bne.n	100592d4 <llc_pscan_isr+0xe0>
1005927a:	1d2e      	adds	r6, r5, #4
1005927c:	3508      	adds	r5, #8
1005927e:	487d      	ldr	r0, [pc, #500]	@ (10059474 <__arm_cp.1_2>)
10059280:	6800      	ldr	r0, [r0, #0]
10059282:	6804      	ldr	r4, [r0, #0]
10059284:	9803      	ldr	r0, [sp, #12]
10059286:	f7ed fa2e 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
1005928a:	1a22      	subs	r2, r4, r0
1005928c:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005928e:	7988      	ldrb	r0, [r1, #6]
10059290:	2801      	cmp	r0, #1
10059292:	9f08      	ldr	r7, [sp, #32]
10059294:	9203      	str	r2, [sp, #12]
10059296:	4634      	mov	r4, r6
10059298:	d121      	bne.n	100592de <llc_pscan_isr+0xea>
1005929a:	62fa      	str	r2, [r7, #44]	@ 0x2c
1005929c:	2002      	movs	r0, #2
1005929e:	7188      	strb	r0, [r1, #6]
100592a0:	9805      	ldr	r0, [sp, #20]
100592a2:	70c8      	strb	r0, [r1, #3]
100592a4:	a80e      	add	r0, sp, #56	@ 0x38
100592a6:	8941      	ldrh	r1, [r0, #10]
100592a8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100592aa:	8011      	strh	r1, [r2, #0]
100592ac:	7d00      	ldrb	r0, [r0, #20]
100592ae:	e01a      	b.n	100592e6 <llc_pscan_isr+0xf2>
100592b0:	79a0      	ldrb	r0, [r4, #6]
100592b2:	2801      	cmp	r0, #1
100592b4:	d103      	bne.n	100592be <llc_pscan_isr+0xca>
100592b6:	a80b      	add	r0, sp, #44	@ 0x2c
100592b8:	2100      	movs	r1, #0
100592ba:	72c1      	strb	r1, [r0, #11]
100592bc:	e055      	b.n	1005936a <llc_pscan_isr+0x176>
100592be:	a80b      	add	r0, sp, #44	@ 0x2c
100592c0:	2102      	movs	r1, #2
100592c2:	7181      	strb	r1, [r0, #6]
100592c4:	e051      	b.n	1005936a <llc_pscan_isr+0x176>
100592c6:	9809      	ldr	r0, [sp, #36]	@ 0x24
100592c8:	88c0      	ldrh	r0, [r0, #6]
100592ca:	1c40      	adds	r0, r0, #1
100592cc:	a90b      	add	r1, sp, #44	@ 0x2c
100592ce:	8048      	strh	r0, [r1, #2]
100592d0:	9f08      	ldr	r7, [sp, #32]
100592d2:	e045      	b.n	10059360 <llc_pscan_isr+0x16c>
100592d4:	9f08      	ldr	r7, [sp, #32]
100592d6:	4638      	mov	r0, r7
100592d8:	f000 fe6a 	bl	10059fb0 <llc_pscan_wrong_cte_type_ucfg_weak>
100592dc:	e040      	b.n	10059360 <llc_pscan_isr+0x16c>
100592de:	a80e      	add	r0, sp, #56	@ 0x38
100592e0:	7d00      	ldrb	r0, [r0, #20]
100592e2:	287f      	cmp	r0, #127	@ 0x7f
100592e4:	d001      	beq.n	100592ea <llc_pscan_isr+0xf6>
100592e6:	990a      	ldr	r1, [sp, #40]	@ 0x28
100592e8:	7308      	strb	r0, [r1, #12]
100592ea:	ae0e      	add	r6, sp, #56	@ 0x38
100592ec:	7b32      	ldrb	r2, [r6, #12]
100592ee:	990f      	ldr	r1, [sp, #60]	@ 0x3c
100592f0:	4638      	mov	r0, r7
100592f2:	f000 f9b3 	bl	1005965c <llc_pscan_process_acad>
100592f6:	7b70      	ldrb	r0, [r6, #13]
100592f8:	ae0b      	add	r6, sp, #44	@ 0x2c
100592fa:	71f0      	strb	r0, [r6, #7]
100592fc:	9812      	ldr	r0, [sp, #72]	@ 0x48
100592fe:	7170      	strb	r0, [r6, #5]
10059300:	9809      	ldr	r0, [sp, #36]	@ 0x24
10059302:	88c0      	ldrh	r0, [r0, #6]
10059304:	1c40      	adds	r0, r0, #1
10059306:	8070      	strh	r0, [r6, #2]
10059308:	4628      	mov	r0, r5
1005930a:	4621      	mov	r1, r4
1005930c:	9d04      	ldr	r5, [sp, #16]
1005930e:	462a      	mov	r2, r5
10059310:	f006 fbd4 	bl	1005fabc <LLC_check_iq_samples_ready_ucfg_weak>
10059314:	7270      	strb	r0, [r6, #9]
10059316:	6b38      	ldr	r0, [r7, #48]	@ 0x30
10059318:	6b79      	ldr	r1, [r7, #52]	@ 0x34
1005931a:	1840      	adds	r0, r0, r1
1005931c:	63b8      	str	r0, [r7, #56]	@ 0x38
1005931e:	990e      	ldr	r1, [sp, #56]	@ 0x38
10059320:	2900      	cmp	r1, #0
10059322:	d01b      	beq.n	1005935c <llc_pscan_isr+0x168>
10059324:	462e      	mov	r6, r5
10059326:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
10059328:	7a68      	ldrb	r0, [r5, #9]
1005932a:	f003 fb33 	bl	1005c994 <llc_calculate_window_widening>
1005932e:	63f8      	str	r0, [r7, #60]	@ 0x3c
10059330:	a90e      	add	r1, sp, #56	@ 0x38
10059332:	7bc9      	ldrb	r1, [r1, #15]
10059334:	7029      	strb	r1, [r5, #0]
10059336:	0840      	lsrs	r0, r0, #1
10059338:	9903      	ldr	r1, [sp, #12]
1005933a:	1a08      	subs	r0, r1, r0
1005933c:	462c      	mov	r4, r5
1005933e:	990e      	ldr	r1, [sp, #56]	@ 0x38
10059340:	1841      	adds	r1, r0, r1
10059342:	4630      	mov	r0, r6
10059344:	f009 f82a 	bl	1006239c <LL_sched_set_anchor>
10059348:	9802      	ldr	r0, [sp, #8]
1005934a:	4330      	orrs	r0, r6
1005934c:	f009 f8a8 	bl	100624a0 <LL_sched_engine>
10059350:	a80b      	add	r0, sp, #44	@ 0x2c
10059352:	9905      	ldr	r1, [sp, #20]
10059354:	7281      	strb	r1, [r0, #10]
10059356:	2101      	movs	r1, #1
10059358:	7181      	strb	r1, [r0, #6]
1005935a:	e011      	b.n	10059380 <llc_pscan_isr+0x18c>
1005935c:	9805      	ldr	r0, [sp, #20]
1005935e:	63f8      	str	r0, [r7, #60]	@ 0x3c
10059360:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
10059362:	a80b      	add	r0, sp, #44	@ 0x2c
10059364:	7a80      	ldrb	r0, [r0, #10]
10059366:	2800      	cmp	r0, #0
10059368:	d00a      	beq.n	10059380 <llc_pscan_isr+0x18c>
1005936a:	a80b      	add	r0, sp, #44	@ 0x2c
1005936c:	8841      	ldrh	r1, [r0, #2]
1005936e:	4638      	mov	r0, r7
10059370:	f000 fb7e 	bl	10059a70 <llc_pscan_update_taskslot_params>
10059374:	4601      	mov	r1, r0
10059376:	7a20      	ldrb	r0, [r4, #8]
10059378:	2900      	cmp	r1, #0
1005937a:	d01d      	beq.n	100593b8 <llc_pscan_isr+0x1c4>
1005937c:	f009 f890 	bl	100624a0 <LL_sched_engine>
10059380:	a80b      	add	r0, sp, #44	@ 0x2c
10059382:	7ac0      	ldrb	r0, [r0, #11]
10059384:	2800      	cmp	r0, #0
10059386:	d06e      	beq.n	10059466 <llc_pscan_isr+0x272>
10059388:	4638      	mov	r0, r7
1005938a:	f000 fae1 	bl	10059950 <llc_pscan_send_sync_event>
1005938e:	7960      	ldrb	r0, [r4, #5]
10059390:	0780      	lsls	r0, r0, #30
10059392:	d568      	bpl.n	10059466 <llc_pscan_isr+0x272>
10059394:	2041      	movs	r0, #65	@ 0x41
10059396:	0086      	lsls	r6, r0, #2
10059398:	a818      	add	r0, sp, #96	@ 0x60
1005939a:	4631      	mov	r1, r6
1005939c:	f012 fc91 	bl	1006bcc2 <__aeabi_memclr>
100593a0:	f000 fac0 	bl	10059924 <llc_pscan_report_data_len_max>
100593a4:	4605      	mov	r5, r0
100593a6:	a80b      	add	r0, sp, #44	@ 0x2c
100593a8:	7980      	ldrb	r0, [r0, #6]
100593aa:	2802      	cmp	r0, #2
100593ac:	9708      	str	r7, [sp, #32]
100593ae:	940a      	str	r4, [sp, #40]	@ 0x28
100593b0:	d108      	bne.n	100593c4 <llc_pscan_isr+0x1d0>
100593b2:	2100      	movs	r1, #0
100593b4:	2002      	movs	r0, #2
100593b6:	e014      	b.n	100593e2 <llc_pscan_isr+0x1ee>
100593b8:	f009 f802 	bl	100623c0 <LL_sched_set_cancel_request>
100593bc:	7a20      	ldrb	r0, [r4, #8]
100593be:	f009 f86f 	bl	100624a0 <LL_sched_engine>
100593c2:	e050      	b.n	10059466 <llc_pscan_isr+0x272>
100593c4:	f008 ff68 	bl	10062298 <LL_get_rx_common_buffer_p>
100593c8:	4601      	mov	r1, r0
100593ca:	7840      	ldrb	r0, [r0, #1]
100593cc:	9005      	str	r0, [sp, #20]
100593ce:	af0b      	add	r7, sp, #44	@ 0x2c
100593d0:	79fc      	ldrb	r4, [r7, #7]
100593d2:	a818      	add	r0, sp, #96	@ 0x60
100593d4:	4632      	mov	r2, r6
100593d6:	f7eb fae5 	bl	100449a4 <BLEPLAT_MemCpy>
100593da:	9805      	ldr	r0, [sp, #20]
100593dc:	1b00      	subs	r0, r0, r4
100593de:	1c81      	adds	r1, r0, #2
100593e0:	79b8      	ldrb	r0, [r7, #6]
100593e2:	9105      	str	r1, [sp, #20]
100593e4:	b2cf      	uxtb	r7, r1
100593e6:	42af      	cmp	r7, r5
100593e8:	9c07      	ldr	r4, [sp, #28]
100593ea:	d800      	bhi.n	100593ee <llc_pscan_isr+0x1fa>
100593ec:	4604      	mov	r4, r0
100593ee:	f7eb fbbd 	bl	10044b6c <BLEPLAT_CalculateRSSI>
100593f2:	4606      	mov	r6, r0
100593f4:	f008 ff3c 	bl	10062270 <get_rf_rx_path_compensation_db>
100593f8:	4601      	mov	r1, r0
100593fa:	a80e      	add	r0, sp, #56	@ 0x38
100593fc:	72c4      	strb	r4, [r0, #11]
100593fe:	9a06      	ldr	r2, [sp, #24]
10059400:	7202      	strb	r2, [r0, #8]
10059402:	42af      	cmp	r7, r5
10059404:	462c      	mov	r4, r5
10059406:	d800      	bhi.n	1005940a <llc_pscan_isr+0x216>
10059408:	9c05      	ldr	r4, [sp, #20]
1005940a:	7284      	strb	r4, [r0, #10]
1005940c:	1871      	adds	r1, r6, r1
1005940e:	7341      	strb	r1, [r0, #13]
10059410:	990a      	ldr	r1, [sp, #40]	@ 0x28
10059412:	7b09      	ldrb	r1, [r1, #12]
10059414:	7301      	strb	r1, [r0, #12]
10059416:	9909      	ldr	r1, [sp, #36]	@ 0x24
10059418:	8949      	ldrh	r1, [r1, #10]
1005941a:	8081      	strh	r1, [r0, #4]
1005941c:	a90b      	add	r1, sp, #44	@ 0x2c
1005941e:	794a      	ldrb	r2, [r1, #5]
10059420:	7242      	strb	r2, [r0, #9]
10059422:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10059424:	80c2      	strh	r2, [r0, #6]
10059426:	79c9      	ldrb	r1, [r1, #7]
10059428:	aa18      	add	r2, sp, #96	@ 0x60
1005942a:	1851      	adds	r1, r2, r1
1005942c:	910e      	str	r1, [sp, #56]	@ 0x38
1005942e:	f7f5 fa2e 	bl	1004e88e <llc_pscan_push_padv_report_event_ucfg>
10059432:	42af      	cmp	r7, r5
10059434:	d90e      	bls.n	10059454 <llc_pscan_isr+0x260>
10059436:	a90b      	add	r1, sp, #44	@ 0x2c
10059438:	798a      	ldrb	r2, [r1, #6]
1005943a:	a80e      	add	r0, sp, #56	@ 0x38
1005943c:	72c2      	strb	r2, [r0, #11]
1005943e:	9a05      	ldr	r2, [sp, #20]
10059440:	1b52      	subs	r2, r2, r5
10059442:	7282      	strb	r2, [r0, #10]
10059444:	79c9      	ldrb	r1, [r1, #7]
10059446:	aa18      	add	r2, sp, #96	@ 0x60
10059448:	1851      	adds	r1, r2, r1
1005944a:	b2e2      	uxtb	r2, r4
1005944c:	1889      	adds	r1, r1, r2
1005944e:	910e      	str	r1, [sp, #56]	@ 0x38
10059450:	f7f5 fa1d 	bl	1004e88e <llc_pscan_push_padv_report_event_ucfg>
10059454:	a90b      	add	r1, sp, #44	@ 0x2c
10059456:	794b      	ldrb	r3, [r1, #5]
10059458:	7a0a      	ldrb	r2, [r1, #8]
1005945a:	7a48      	ldrb	r0, [r1, #9]
1005945c:	7909      	ldrb	r1, [r1, #4]
1005945e:	9100      	str	r1, [sp, #0]
10059460:	9908      	ldr	r1, [sp, #32]
10059462:	f006 fb2a 	bl	1005faba <LLC_connless_process_rx_cte_ucfg_weak>
10059466:	2000      	movs	r0, #0
10059468:	b059      	add	sp, #356	@ 0x164
1005946a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005946c <__arm_cp.1_0>:
1005946c:	20000890 	.word	0x20000890

10059470 <__arm_cp.1_1>:
10059470:	01010000 	.word	0x01010000

10059474 <__arm_cp.1_2>:
10059474:	20000894 	.word	0x20000894

10059478 <llc_pscan_get_cntxt_p>:
10059478:	4803      	ldr	r0, [pc, #12]	@ (10059488 <__arm_cp.0_0>)
1005947a:	6800      	ldr	r0, [r0, #0]
1005947c:	219c      	movs	r1, #156	@ 0x9c
1005947e:	5840      	ldr	r0, [r0, r1]
10059480:	6840      	ldr	r0, [r0, #4]
10059482:	6b80      	ldr	r0, [r0, #56]	@ 0x38
10059484:	6800      	ldr	r0, [r0, #0]
10059486:	4770      	bx	lr

10059488 <__arm_cp.0_0>:
10059488:	20000894 	.word	0x20000894

1005948c <llc_pscan_get_cntxt_per_p>:
1005948c:	2190      	movs	r1, #144	@ 0x90
1005948e:	4341      	muls	r1, r0
10059490:	4804      	ldr	r0, [pc, #16]	@ (100594a4 <__arm_cp.1_0>)
10059492:	6800      	ldr	r0, [r0, #0]
10059494:	229c      	movs	r2, #156	@ 0x9c
10059496:	5880      	ldr	r0, [r0, r2]
10059498:	6840      	ldr	r0, [r0, #4]
1005949a:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1005949c:	6800      	ldr	r0, [r0, #0]
1005949e:	6800      	ldr	r0, [r0, #0]
100594a0:	1840      	adds	r0, r0, r1
100594a2:	4770      	bx	lr

100594a4 <__arm_cp.1_0>:
100594a4:	20000894 	.word	0x20000894

100594a8 <llc_pscan_get_cntxt_per_p_from_handle>:
100594a8:	490b      	ldr	r1, [pc, #44]	@ (100594d8 <__arm_cp.2_0>)
100594aa:	6809      	ldr	r1, [r1, #0]
100594ac:	229c      	movs	r2, #156	@ 0x9c
100594ae:	5889      	ldr	r1, [r1, r2]
100594b0:	6849      	ldr	r1, [r1, #4]
100594b2:	6b89      	ldr	r1, [r1, #56]	@ 0x38
100594b4:	6809      	ldr	r1, [r1, #0]
100594b6:	6809      	ldr	r1, [r1, #0]
100594b8:	3990      	subs	r1, #144	@ 0x90
100594ba:	4a08      	ldr	r2, [pc, #32]	@ (100594dc <__arm_cp.2_1>)
100594bc:	7f92      	ldrb	r2, [r2, #30]
100594be:	1c52      	adds	r2, r2, #1
100594c0:	1e52      	subs	r2, r2, #1
100594c2:	d005      	beq.n	100594d0 <llc_pscan_get_cntxt_per_p_from_handle+0x28>
100594c4:	23dc      	movs	r3, #220	@ 0xdc
100594c6:	5acb      	ldrh	r3, [r1, r3]
100594c8:	3190      	adds	r1, #144	@ 0x90
100594ca:	4283      	cmp	r3, r0
100594cc:	d1f8      	bne.n	100594c0 <llc_pscan_get_cntxt_per_p_from_handle+0x18>
100594ce:	e000      	b.n	100594d2 <llc_pscan_get_cntxt_per_p_from_handle+0x2a>
100594d0:	2100      	movs	r1, #0
100594d2:	4608      	mov	r0, r1
100594d4:	4770      	bx	lr
100594d6:	46c0      	nop			@ (mov r8, r8)

100594d8 <__arm_cp.2_0>:
100594d8:	20000894 	.word	0x20000894

100594dc <__arm_cp.2_1>:
100594dc:	200008a8 	.word	0x200008a8

100594e0 <llc_pscan_get_free_cntxt_per_p>:
100594e0:	480a      	ldr	r0, [pc, #40]	@ (1005950c <__arm_cp.3_0>)
100594e2:	6800      	ldr	r0, [r0, #0]
100594e4:	219c      	movs	r1, #156	@ 0x9c
100594e6:	5840      	ldr	r0, [r0, r1]
100594e8:	6840      	ldr	r0, [r0, #4]
100594ea:	6b80      	ldr	r0, [r0, #56]	@ 0x38
100594ec:	6800      	ldr	r0, [r0, #0]
100594ee:	6800      	ldr	r0, [r0, #0]
100594f0:	4907      	ldr	r1, [pc, #28]	@ (10059510 <__arm_cp.3_1>)
100594f2:	7f89      	ldrb	r1, [r1, #30]
100594f4:	1c49      	adds	r1, r1, #1
100594f6:	1e49      	subs	r1, r1, #1
100594f8:	d006      	beq.n	10059508 <llc_pscan_get_free_cntxt_per_p+0x28>
100594fa:	2284      	movs	r2, #132	@ 0x84
100594fc:	5c82      	ldrb	r2, [r0, r2]
100594fe:	3090      	adds	r0, #144	@ 0x90
10059500:	2aff      	cmp	r2, #255	@ 0xff
10059502:	d1f8      	bne.n	100594f6 <llc_pscan_get_free_cntxt_per_p+0x16>
10059504:	3890      	subs	r0, #144	@ 0x90
10059506:	4770      	bx	lr
10059508:	2000      	movs	r0, #0
1005950a:	4770      	bx	lr

1005950c <__arm_cp.3_0>:
1005950c:	20000894 	.word	0x20000894

10059510 <__arm_cp.3_1>:
10059510:	200008a8 	.word	0x200008a8

10059514 <llc_pscan_per_init>:
10059514:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10059516:	4605      	mov	r5, r0
10059518:	f7ff ffb8 	bl	1005948c <llc_pscan_get_cntxt_per_p>
1005951c:	4604      	mov	r4, r0
1005951e:	6947      	ldr	r7, [r0, #20]
10059520:	2600      	movs	r6, #0
10059522:	2290      	movs	r2, #144	@ 0x90
10059524:	4631      	mov	r1, r6
10059526:	f7eb fa4d 	bl	100449c4 <BLEPLAT_MemSet>
1005952a:	207e      	movs	r0, #126	@ 0x7e
1005952c:	21ff      	movs	r1, #255	@ 0xff
1005952e:	5421      	strb	r1, [r4, r0]
10059530:	2042      	movs	r0, #66	@ 0x42
10059532:	4a08      	ldr	r2, [pc, #32]	@ (10059554 <__arm_cp.4_0>)
10059534:	5222      	strh	r2, [r4, r0]
10059536:	4620      	mov	r0, r4
10059538:	307e      	adds	r0, #126	@ 0x7e
1005953a:	7245      	strb	r5, [r0, #9]
1005953c:	6167      	str	r7, [r4, #20]
1005953e:	7181      	strb	r1, [r0, #6]
10059540:	4621      	mov	r1, r4
10059542:	3142      	adds	r1, #66	@ 0x42
10059544:	4a04      	ldr	r2, [pc, #16]	@ (10059558 <__arm_cp.4_1>)
10059546:	814a      	strh	r2, [r1, #10]
10059548:	43f1      	mvns	r1, r6
1005954a:	62a1      	str	r1, [r4, #40]	@ 0x28
1005954c:	217f      	movs	r1, #127	@ 0x7f
1005954e:	7281      	strb	r1, [r0, #10]
10059550:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10059552:	46c0      	nop			@ (mov r8, r8)

10059554 <__arm_cp.4_0>:
10059554:	00000fff 	.word	0x00000fff

10059558 <__arm_cp.4_1>:
10059558:	0000ffff 	.word	0x0000ffff

1005955c <llc_pscan_init>:
1005955c:	b5b0      	push	{r4, r5, r7, lr}
1005955e:	480e      	ldr	r0, [pc, #56]	@ (10059598 <__arm_cp.6_0>)
10059560:	6800      	ldr	r0, [r0, #0]
10059562:	219c      	movs	r1, #156	@ 0x9c
10059564:	5840      	ldr	r0, [r0, r1]
10059566:	6840      	ldr	r0, [r0, #4]
10059568:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1005956a:	6800      	ldr	r0, [r0, #0]
1005956c:	21ff      	movs	r1, #255	@ 0xff
1005956e:	8101      	strh	r1, [r0, #8]
10059570:	4c0a      	ldr	r4, [pc, #40]	@ (1005959c <__arm_cp.6_1>)
10059572:	7fe1      	ldrb	r1, [r4, #31]
10059574:	2207      	movs	r2, #7
10059576:	400a      	ands	r2, r1
10059578:	2101      	movs	r1, #1
1005957a:	4091      	lsls	r1, r2
1005957c:	7441      	strb	r1, [r0, #17]
1005957e:	300c      	adds	r0, #12
10059580:	f00c f949 	bl	10065816 <addr8_list_clear>
10059584:	2500      	movs	r5, #0
10059586:	7fa1      	ldrb	r1, [r4, #30]
10059588:	b2e8      	uxtb	r0, r5
1005958a:	4288      	cmp	r0, r1
1005958c:	d203      	bcs.n	10059596 <llc_pscan_init+0x3a>
1005958e:	f7ff ffc1 	bl	10059514 <llc_pscan_per_init>
10059592:	1c6d      	adds	r5, r5, #1
10059594:	e7f7      	b.n	10059586 <llc_pscan_init+0x2a>
10059596:	bdb0      	pop	{r4, r5, r7, pc}

10059598 <__arm_cp.6_0>:
10059598:	20000894 	.word	0x20000894

1005959c <__arm_cp.6_1>:
1005959c:	200008a8 	.word	0x200008a8

100595a0 <llc_pscan_mem_allocate>:
100595a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100595a2:	2801      	cmp	r0, #1
100595a4:	d129      	bne.n	100595fa <llc_pscan_mem_allocate+0x5a>
100595a6:	2901      	cmp	r1, #1
100595a8:	d127      	bne.n	100595fa <llc_pscan_mem_allocate+0x5a>
100595aa:	2a01      	cmp	r2, #1
100595ac:	d125      	bne.n	100595fa <llc_pscan_mem_allocate+0x5a>
100595ae:	4813      	ldr	r0, [pc, #76]	@ (100595fc <__arm_cp.8_0>)
100595b0:	7fc0      	ldrb	r0, [r0, #31]
100595b2:	9000      	str	r0, [sp, #0]
100595b4:	2401      	movs	r4, #1
100595b6:	2114      	movs	r1, #20
100595b8:	4f11      	ldr	r7, [pc, #68]	@ (10059600 <__arm_cp.8_1>)
100595ba:	4620      	mov	r0, r4
100595bc:	47b8      	blx	r7
100595be:	4e11      	ldr	r6, [pc, #68]	@ (10059604 <__arm_cp.8_2>)
100595c0:	6831      	ldr	r1, [r6, #0]
100595c2:	259c      	movs	r5, #156	@ 0x9c
100595c4:	5949      	ldr	r1, [r1, r5]
100595c6:	6849      	ldr	r1, [r1, #4]
100595c8:	6b89      	ldr	r1, [r1, #56]	@ 0x38
100595ca:	6008      	str	r0, [r1, #0]
100595cc:	480b      	ldr	r0, [pc, #44]	@ (100595fc <__arm_cp.8_0>)
100595ce:	7f80      	ldrb	r0, [r0, #30]
100595d0:	2190      	movs	r1, #144	@ 0x90
100595d2:	47b8      	blx	r7
100595d4:	6831      	ldr	r1, [r6, #0]
100595d6:	5949      	ldr	r1, [r1, r5]
100595d8:	6849      	ldr	r1, [r1, #4]
100595da:	6b89      	ldr	r1, [r1, #56]	@ 0x38
100595dc:	6809      	ldr	r1, [r1, #0]
100595de:	6008      	str	r0, [r1, #0]
100595e0:	2007      	movs	r0, #7
100595e2:	9900      	ldr	r1, [sp, #0]
100595e4:	4008      	ands	r0, r1
100595e6:	4084      	lsls	r4, r0
100595e8:	2108      	movs	r1, #8
100595ea:	4620      	mov	r0, r4
100595ec:	47b8      	blx	r7
100595ee:	6831      	ldr	r1, [r6, #0]
100595f0:	5949      	ldr	r1, [r1, r5]
100595f2:	6849      	ldr	r1, [r1, #4]
100595f4:	6b89      	ldr	r1, [r1, #56]	@ 0x38
100595f6:	6809      	ldr	r1, [r1, #0]
100595f8:	60c8      	str	r0, [r1, #12]
100595fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100595fc <__arm_cp.8_0>:
100595fc:	200008a8 	.word	0x200008a8

10059600 <__arm_cp.8_1>:
10059600:	10062e35 	.word	0x10062e35

10059604 <__arm_cp.8_2>:
10059604:	20000894 	.word	0x20000894

10059608 <llc_pscan_access_address_already_sync>:
10059608:	b5b0      	push	{r4, r5, r7, lr}
1005960a:	7a41      	ldrb	r1, [r0, #9]
1005960c:	7a82      	ldrb	r2, [r0, #10]
1005960e:	0212      	lsls	r2, r2, #8
10059610:	1851      	adds	r1, r2, r1
10059612:	7ac2      	ldrb	r2, [r0, #11]
10059614:	0412      	lsls	r2, r2, #16
10059616:	1889      	adds	r1, r1, r2
10059618:	7b00      	ldrb	r0, [r0, #12]
1005961a:	0600      	lsls	r0, r0, #24
1005961c:	180d      	adds	r5, r1, r0
1005961e:	2400      	movs	r4, #0
10059620:	4620      	mov	r0, r4
10059622:	f7ff ff33 	bl	1005948c <llc_pscan_get_cntxt_per_p>
10059626:	304c      	adds	r0, #76	@ 0x4c
10059628:	490a      	ldr	r1, [pc, #40]	@ (10059654 <__arm_cp.0_0>)
1005962a:	7f89      	ldrb	r1, [r1, #30]
1005962c:	4a0a      	ldr	r2, [pc, #40]	@ (10059658 <__arm_cp.0_1>)
1005962e:	42a1      	cmp	r1, r4
10059630:	d00a      	beq.n	10059648 <llc_pscan_access_address_already_sync+0x40>
10059632:	8803      	ldrh	r3, [r0, #0]
10059634:	4293      	cmp	r3, r2
10059636:	d004      	beq.n	10059642 <llc_pscan_access_address_already_sync+0x3a>
10059638:	4603      	mov	r3, r0
1005963a:	3b24      	subs	r3, #36	@ 0x24
1005963c:	681b      	ldr	r3, [r3, #0]
1005963e:	42ab      	cmp	r3, r5
10059640:	d002      	beq.n	10059648 <llc_pscan_access_address_already_sync+0x40>
10059642:	3090      	adds	r0, #144	@ 0x90
10059644:	1c64      	adds	r4, r4, #1
10059646:	e7f2      	b.n	1005962e <llc_pscan_access_address_already_sync+0x26>
10059648:	428c      	cmp	r4, r1
1005964a:	d301      	bcc.n	10059650 <llc_pscan_access_address_already_sync+0x48>
1005964c:	2000      	movs	r0, #0
1005964e:	bdb0      	pop	{r4, r5, r7, pc}
10059650:	2001      	movs	r0, #1
10059652:	bdb0      	pop	{r4, r5, r7, pc}

10059654 <__arm_cp.0_0>:
10059654:	200008a8 	.word	0x200008a8

10059658 <__arm_cp.0_1>:
10059658:	0000ffff 	.word	0x0000ffff

1005965c <llc_pscan_process_acad>:
1005965c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005965e:	b085      	sub	sp, #20
10059660:	9000      	str	r0, [sp, #0]
10059662:	2a00      	cmp	r2, #0
10059664:	d042      	beq.n	100596ec <llc_pscan_process_acad+0x90>
10059666:	460c      	mov	r4, r1
10059668:	9800      	ldr	r0, [sp, #0]
1005966a:	4601      	mov	r1, r0
1005966c:	314c      	adds	r1, #76	@ 0x4c
1005966e:	9104      	str	r1, [sp, #16]
10059670:	4606      	mov	r6, r0
10059672:	3681      	adds	r6, #129	@ 0x81
10059674:	1e57      	subs	r7, r2, #1
10059676:	4601      	mov	r1, r0
10059678:	314e      	adds	r1, #78	@ 0x4e
1005967a:	9102      	str	r1, [sp, #8]
1005967c:	3046      	adds	r0, #70	@ 0x46
1005967e:	9001      	str	r0, [sp, #4]
10059680:	2001      	movs	r0, #1
10059682:	2500      	movs	r5, #0
10059684:	9603      	str	r6, [sp, #12]
10059686:	b2c0      	uxtb	r0, r0
10059688:	5c20      	ldrb	r0, [r4, r0]
1005968a:	282c      	cmp	r0, #44	@ 0x2c
1005968c:	d01a      	beq.n	100596c4 <llc_pscan_process_acad+0x68>
1005968e:	2828      	cmp	r0, #40	@ 0x28
10059690:	d124      	bne.n	100596dc <llc_pscan_process_acad+0x80>
10059692:	2001      	movs	r0, #1
10059694:	72b0      	strb	r0, [r6, #10]
10059696:	b2e8      	uxtb	r0, r5
10059698:	463e      	mov	r6, r7
1005969a:	1907      	adds	r7, r0, r4
1005969c:	1df9      	adds	r1, r7, #7
1005969e:	2202      	movs	r2, #2
100596a0:	9801      	ldr	r0, [sp, #4]
100596a2:	f7eb f97f 	bl	100449a4 <BLEPLAT_MemCpy>
100596a6:	1cb9      	adds	r1, r7, #2
100596a8:	4637      	mov	r7, r6
100596aa:	9e03      	ldr	r6, [sp, #12]
100596ac:	2205      	movs	r2, #5
100596ae:	9802      	ldr	r0, [sp, #8]
100596b0:	f7eb f978 	bl	100449a4 <BLEPLAT_MemCpy>
100596b4:	9a04      	ldr	r2, [sp, #16]
100596b6:	7990      	ldrb	r0, [r2, #6]
100596b8:	0941      	lsrs	r1, r0, #5
100596ba:	7131      	strb	r1, [r6, #4]
100596bc:	211f      	movs	r1, #31
100596be:	4001      	ands	r1, r0
100596c0:	7191      	strb	r1, [r2, #6]
100596c2:	e00b      	b.n	100596dc <llc_pscan_process_acad+0x80>
100596c4:	7830      	ldrb	r0, [r6, #0]
100596c6:	0700      	lsls	r0, r0, #28
100596c8:	d408      	bmi.n	100596dc <llc_pscan_process_acad+0x80>
100596ca:	b2e8      	uxtb	r0, r5
100596cc:	1820      	adds	r0, r4, r0
100596ce:	7933      	ldrb	r3, [r6, #4]
100596d0:	9900      	ldr	r1, [sp, #0]
100596d2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
100596d4:	9904      	ldr	r1, [sp, #16]
100596d6:	8809      	ldrh	r1, [r1, #0]
100596d8:	f00e fe34 	bl	10068344 <llc_big_sync_deploy_sync_ucfg_weak>
100596dc:	b2e8      	uxtb	r0, r5
100596de:	5c20      	ldrb	r0, [r4, r0]
100596e0:	1828      	adds	r0, r5, r0
100596e2:	1c45      	adds	r5, r0, #1
100596e4:	b2e9      	uxtb	r1, r5
100596e6:	1c48      	adds	r0, r1, #1
100596e8:	428f      	cmp	r7, r1
100596ea:	d8cc      	bhi.n	10059686 <llc_pscan_process_acad+0x2a>
100596ec:	b005      	add	sp, #20
100596ee:	bdf0      	pop	{r4, r5, r6, r7, pc}

100596f0 <llc_pscan_push_padv_report_v1_event>:
100596f0:	b5f0      	push	{r4, r5, r6, r7, lr}
100596f2:	b085      	sub	sp, #20
100596f4:	4921      	ldr	r1, [pc, #132]	@ (1005977c <__arm_cp.4_0>)
100596f6:	6809      	ldr	r1, [r1, #0]
100596f8:	223d      	movs	r2, #61	@ 0x3d
100596fa:	5c8a      	ldrb	r2, [r1, r2]
100596fc:	0692      	lsls	r2, r2, #26
100596fe:	d53b      	bpl.n	10059778 <llc_pscan_push_padv_report_v1_event+0x88>
10059700:	313d      	adds	r1, #61	@ 0x3d
10059702:	7a89      	ldrb	r1, [r1, #10]
10059704:	0649      	lsls	r1, r1, #25
10059706:	d537      	bpl.n	10059778 <llc_pscan_push_padv_report_v1_event+0x88>
10059708:	6801      	ldr	r1, [r0, #0]
1005970a:	9104      	str	r1, [sp, #16]
1005970c:	7a84      	ldrb	r4, [r0, #10]
1005970e:	7ac1      	ldrb	r1, [r0, #11]
10059710:	9101      	str	r1, [sp, #4]
10059712:	7a41      	ldrb	r1, [r0, #9]
10059714:	9102      	str	r1, [sp, #8]
10059716:	7b41      	ldrb	r1, [r0, #13]
10059718:	9103      	str	r1, [sp, #12]
1005971a:	7b05      	ldrb	r5, [r0, #12]
1005971c:	8887      	ldrh	r7, [r0, #4]
1005971e:	1e60      	subs	r0, r4, #1
10059720:	2103      	movs	r1, #3
10059722:	4301      	orrs	r1, r0
10059724:	310d      	adds	r1, #13
10059726:	0888      	lsrs	r0, r1, #2
10059728:	b283      	uxth	r3, r0
1005972a:	4815      	ldr	r0, [pc, #84]	@ (10059780 <__arm_cp.4_1>)
1005972c:	6800      	ldr	r0, [r0, #0]
1005972e:	6940      	ldr	r0, [r0, #20]
10059730:	21a1      	movs	r1, #161	@ 0xa1
10059732:	2229      	movs	r2, #41	@ 0x29
10059734:	f7f6 fde4 	bl	10050300 <aci_event_fifo_push_header>
10059738:	2800      	cmp	r0, #0
1005973a:	d01d      	beq.n	10059778 <llc_pscan_push_padv_report_v1_event+0x88>
1005973c:	4606      	mov	r6, r0
1005973e:	7207      	strb	r7, [r0, #8]
10059740:	7384      	strb	r4, [r0, #14]
10059742:	9801      	ldr	r0, [sp, #4]
10059744:	7370      	strb	r0, [r6, #13]
10059746:	9802      	ldr	r0, [sp, #8]
10059748:	7330      	strb	r0, [r6, #12]
1005974a:	9803      	ldr	r0, [sp, #12]
1005974c:	72f0      	strb	r0, [r6, #11]
1005974e:	72b5      	strb	r5, [r6, #10]
10059750:	0a38      	lsrs	r0, r7, #8
10059752:	7270      	strb	r0, [r6, #9]
10059754:	4630      	mov	r0, r6
10059756:	300f      	adds	r0, #15
10059758:	9904      	ldr	r1, [sp, #16]
1005975a:	4622      	mov	r2, r4
1005975c:	f7eb f922 	bl	100449a4 <BLEPLAT_MemCpy>
10059760:	200f      	movs	r0, #15
10059762:	71f0      	strb	r0, [r6, #7]
10059764:	3408      	adds	r4, #8
10059766:	71b4      	strb	r4, [r6, #6]
10059768:	203e      	movs	r0, #62	@ 0x3e
1005976a:	7170      	strb	r0, [r6, #5]
1005976c:	2004      	movs	r0, #4
1005976e:	7130      	strb	r0, [r6, #4]
10059770:	20a1      	movs	r0, #161	@ 0xa1
10059772:	4631      	mov	r1, r6
10059774:	f7f6 fe61 	bl	1005043a <aci_event_fifo_push>
10059778:	b005      	add	sp, #20
1005977a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005977c <__arm_cp.4_0>:
1005977c:	20000894 	.word	0x20000894

10059780 <__arm_cp.4_1>:
10059780:	20000840 	.word	0x20000840

10059784 <llc_pscan_push_past_received_v1_event>:
10059784:	b5f0      	push	{r4, r5, r6, r7, lr}
10059786:	b087      	sub	sp, #28
10059788:	4928      	ldr	r1, [pc, #160]	@ (1005982c <__arm_cp.5_0>)
1005978a:	6809      	ldr	r1, [r1, #0]
1005978c:	223d      	movs	r2, #61	@ 0x3d
1005978e:	5c8a      	ldrb	r2, [r1, r2]
10059790:	0692      	lsls	r2, r2, #26
10059792:	d549      	bpl.n	10059828 <llc_pscan_push_past_received_v1_event+0xa4>
10059794:	313d      	adds	r1, #61	@ 0x3d
10059796:	220b      	movs	r2, #11
10059798:	5689      	ldrsb	r1, [r1, r2]
1005979a:	2900      	cmp	r1, #0
1005979c:	d544      	bpl.n	10059828 <llc_pscan_push_past_received_v1_event+0xa4>
1005979e:	7bc1      	ldrb	r1, [r0, #15]
100597a0:	9106      	str	r1, [sp, #24]
100597a2:	88c1      	ldrh	r1, [r0, #6]
100597a4:	9104      	str	r1, [sp, #16]
100597a6:	7b81      	ldrb	r1, [r0, #14]
100597a8:	9105      	str	r1, [sp, #20]
100597aa:	6801      	ldr	r1, [r0, #0]
100597ac:	9103      	str	r1, [sp, #12]
100597ae:	7b41      	ldrb	r1, [r0, #13]
100597b0:	9101      	str	r1, [sp, #4]
100597b2:	7c01      	ldrb	r1, [r0, #16]
100597b4:	9102      	str	r1, [sp, #8]
100597b6:	8946      	ldrh	r6, [r0, #10]
100597b8:	8904      	ldrh	r4, [r0, #8]
100597ba:	8887      	ldrh	r7, [r0, #4]
100597bc:	7b00      	ldrb	r0, [r0, #12]
100597be:	9000      	str	r0, [sp, #0]
100597c0:	481b      	ldr	r0, [pc, #108]	@ (10059830 <__arm_cp.5_1>)
100597c2:	6800      	ldr	r0, [r0, #0]
100597c4:	6900      	ldr	r0, [r0, #16]
100597c6:	2180      	movs	r1, #128	@ 0x80
100597c8:	222e      	movs	r2, #46	@ 0x2e
100597ca:	2306      	movs	r3, #6
100597cc:	f7f6 fd98 	bl	10050300 <aci_event_fifo_push_header>
100597d0:	2800      	cmp	r0, #0
100597d2:	d029      	beq.n	10059828 <llc_pscan_push_past_received_v1_event+0xa4>
100597d4:	4605      	mov	r5, r0
100597d6:	7346      	strb	r6, [r0, #13]
100597d8:	72c4      	strb	r4, [r0, #11]
100597da:	7247      	strb	r7, [r0, #9]
100597dc:	9801      	ldr	r0, [sp, #4]
100597de:	7428      	strb	r0, [r5, #16]
100597e0:	9802      	ldr	r0, [sp, #8]
100597e2:	73e8      	strb	r0, [r5, #15]
100597e4:	9800      	ldr	r0, [sp, #0]
100597e6:	7228      	strb	r0, [r5, #8]
100597e8:	0a30      	lsrs	r0, r6, #8
100597ea:	73a8      	strb	r0, [r5, #14]
100597ec:	0a20      	lsrs	r0, r4, #8
100597ee:	7328      	strb	r0, [r5, #12]
100597f0:	0a38      	lsrs	r0, r7, #8
100597f2:	72a8      	strb	r0, [r5, #10]
100597f4:	4628      	mov	r0, r5
100597f6:	3011      	adds	r0, #17
100597f8:	2206      	movs	r2, #6
100597fa:	9903      	ldr	r1, [sp, #12]
100597fc:	f7eb f8d2 	bl	100449a4 <BLEPLAT_MemCpy>
10059800:	9904      	ldr	r1, [sp, #16]
10059802:	0a08      	lsrs	r0, r1, #8
10059804:	7668      	strb	r0, [r5, #25]
10059806:	7629      	strb	r1, [r5, #24]
10059808:	9806      	ldr	r0, [sp, #24]
1005980a:	76a8      	strb	r0, [r5, #26]
1005980c:	9805      	ldr	r0, [sp, #20]
1005980e:	75e8      	strb	r0, [r5, #23]
10059810:	2018      	movs	r0, #24
10059812:	71e8      	strb	r0, [r5, #7]
10059814:	2014      	movs	r0, #20
10059816:	71a8      	strb	r0, [r5, #6]
10059818:	203e      	movs	r0, #62	@ 0x3e
1005981a:	7168      	strb	r0, [r5, #5]
1005981c:	2004      	movs	r0, #4
1005981e:	7128      	strb	r0, [r5, #4]
10059820:	2080      	movs	r0, #128	@ 0x80
10059822:	4629      	mov	r1, r5
10059824:	f7f6 fe09 	bl	1005043a <aci_event_fifo_push>
10059828:	b007      	add	sp, #28
1005982a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005982c <__arm_cp.5_0>:
1005982c:	20000894 	.word	0x20000894

10059830 <__arm_cp.5_1>:
10059830:	20000840 	.word	0x20000840

10059834 <llc_pscan_push_sync_established_v1_event>:
10059834:	b5f0      	push	{r4, r5, r6, r7, lr}
10059836:	b085      	sub	sp, #20
10059838:	4922      	ldr	r1, [pc, #136]	@ (100598c4 <__arm_cp.6_0>)
1005983a:	6809      	ldr	r1, [r1, #0]
1005983c:	223d      	movs	r2, #61	@ 0x3d
1005983e:	5c8a      	ldrb	r2, [r1, r2]
10059840:	0692      	lsls	r2, r2, #26
10059842:	d53c      	bpl.n	100598be <llc_pscan_push_sync_established_v1_event+0x8a>
10059844:	313d      	adds	r1, #61	@ 0x3d
10059846:	7a89      	ldrb	r1, [r1, #10]
10059848:	0689      	lsls	r1, r1, #26
1005984a:	d538      	bpl.n	100598be <llc_pscan_push_sync_established_v1_event+0x8a>
1005984c:	7bc1      	ldrb	r1, [r0, #15]
1005984e:	9104      	str	r1, [sp, #16]
10059850:	88c6      	ldrh	r6, [r0, #6]
10059852:	7b81      	ldrb	r1, [r0, #14]
10059854:	9103      	str	r1, [sp, #12]
10059856:	6801      	ldr	r1, [r0, #0]
10059858:	9102      	str	r1, [sp, #8]
1005985a:	7b41      	ldrb	r1, [r0, #13]
1005985c:	9100      	str	r1, [sp, #0]
1005985e:	7c01      	ldrb	r1, [r0, #16]
10059860:	9101      	str	r1, [sp, #4]
10059862:	8947      	ldrh	r7, [r0, #10]
10059864:	7b05      	ldrb	r5, [r0, #12]
10059866:	4818      	ldr	r0, [pc, #96]	@ (100598c8 <__arm_cp.6_1>)
10059868:	6800      	ldr	r0, [r0, #0]
1005986a:	6900      	ldr	r0, [r0, #16]
1005986c:	2180      	movs	r1, #128	@ 0x80
1005986e:	2228      	movs	r2, #40	@ 0x28
10059870:	2305      	movs	r3, #5
10059872:	f7f6 fd45 	bl	10050300 <aci_event_fifo_push_header>
10059876:	2800      	cmp	r0, #0
10059878:	d021      	beq.n	100598be <llc_pscan_push_sync_established_v1_event+0x8a>
1005987a:	4604      	mov	r4, r0
1005987c:	7247      	strb	r7, [r0, #9]
1005987e:	9800      	ldr	r0, [sp, #0]
10059880:	7320      	strb	r0, [r4, #12]
10059882:	9801      	ldr	r0, [sp, #4]
10059884:	72e0      	strb	r0, [r4, #11]
10059886:	7225      	strb	r5, [r4, #8]
10059888:	0a38      	lsrs	r0, r7, #8
1005988a:	72a0      	strb	r0, [r4, #10]
1005988c:	4620      	mov	r0, r4
1005988e:	300d      	adds	r0, #13
10059890:	2206      	movs	r2, #6
10059892:	9902      	ldr	r1, [sp, #8]
10059894:	f7eb f886 	bl	100449a4 <BLEPLAT_MemCpy>
10059898:	0a30      	lsrs	r0, r6, #8
1005989a:	7560      	strb	r0, [r4, #21]
1005989c:	7526      	strb	r6, [r4, #20]
1005989e:	9804      	ldr	r0, [sp, #16]
100598a0:	75a0      	strb	r0, [r4, #22]
100598a2:	9803      	ldr	r0, [sp, #12]
100598a4:	74e0      	strb	r0, [r4, #19]
100598a6:	200e      	movs	r0, #14
100598a8:	71e0      	strb	r0, [r4, #7]
100598aa:	2010      	movs	r0, #16
100598ac:	71a0      	strb	r0, [r4, #6]
100598ae:	203e      	movs	r0, #62	@ 0x3e
100598b0:	7160      	strb	r0, [r4, #5]
100598b2:	2004      	movs	r0, #4
100598b4:	7120      	strb	r0, [r4, #4]
100598b6:	2080      	movs	r0, #128	@ 0x80
100598b8:	4621      	mov	r1, r4
100598ba:	f7f6 fdbe 	bl	1005043a <aci_event_fifo_push>
100598be:	b005      	add	sp, #20
100598c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
100598c2:	46c0      	nop			@ (mov r8, r8)

100598c4 <__arm_cp.6_0>:
100598c4:	20000894 	.word	0x20000894

100598c8 <__arm_cp.6_1>:
100598c8:	20000840 	.word	0x20000840

100598cc <llc_pscan_push_sync_lost_event>:
100598cc:	b510      	push	{r4, lr}
100598ce:	4604      	mov	r4, r0
100598d0:	4812      	ldr	r0, [pc, #72]	@ (1005991c <__arm_cp.7_0>)
100598d2:	6800      	ldr	r0, [r0, #0]
100598d4:	213d      	movs	r1, #61	@ 0x3d
100598d6:	5c41      	ldrb	r1, [r0, r1]
100598d8:	0689      	lsls	r1, r1, #26
100598da:	d504      	bpl.n	100598e6 <llc_pscan_push_sync_lost_event+0x1a>
100598dc:	303d      	adds	r0, #61	@ 0x3d
100598de:	210a      	movs	r1, #10
100598e0:	5640      	ldrsb	r0, [r0, r1]
100598e2:	2800      	cmp	r0, #0
100598e4:	d400      	bmi.n	100598e8 <llc_pscan_push_sync_lost_event+0x1c>
100598e6:	bd10      	pop	{r4, pc}
100598e8:	480d      	ldr	r0, [pc, #52]	@ (10059920 <__arm_cp.7_1>)
100598ea:	6800      	ldr	r0, [r0, #0]
100598ec:	6900      	ldr	r0, [r0, #16]
100598ee:	2180      	movs	r1, #128	@ 0x80
100598f0:	222a      	movs	r2, #42	@ 0x2a
100598f2:	2302      	movs	r3, #2
100598f4:	f7f6 fd04 	bl	10050300 <aci_event_fifo_push_header>
100598f8:	2800      	cmp	r0, #0
100598fa:	d0f4      	beq.n	100598e6 <llc_pscan_push_sync_lost_event+0x1a>
100598fc:	4601      	mov	r1, r0
100598fe:	7204      	strb	r4, [r0, #8]
10059900:	2010      	movs	r0, #16
10059902:	71c8      	strb	r0, [r1, #7]
10059904:	2003      	movs	r0, #3
10059906:	7188      	strb	r0, [r1, #6]
10059908:	203e      	movs	r0, #62	@ 0x3e
1005990a:	7148      	strb	r0, [r1, #5]
1005990c:	2004      	movs	r0, #4
1005990e:	7108      	strb	r0, [r1, #4]
10059910:	0a20      	lsrs	r0, r4, #8
10059912:	7248      	strb	r0, [r1, #9]
10059914:	2080      	movs	r0, #128	@ 0x80
10059916:	f7f6 fd90 	bl	1005043a <aci_event_fifo_push>
1005991a:	bd10      	pop	{r4, pc}

1005991c <__arm_cp.7_0>:
1005991c:	20000894 	.word	0x20000894

10059920 <__arm_cp.7_1>:
10059920:	20000840 	.word	0x20000840

10059924 <llc_pscan_report_data_len_max>:
10059924:	b580      	push	{r7, lr}
10059926:	f7f4 ff6e 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
1005992a:	2800      	cmp	r0, #0
1005992c:	d009      	beq.n	10059942 <llc_pscan_report_data_len_max+0x1e>
1005992e:	4807      	ldr	r0, [pc, #28]	@ (1005994c <__arm_cp.8_0>)
10059930:	6800      	ldr	r0, [r0, #0]
10059932:	213d      	movs	r1, #61	@ 0x3d
10059934:	5c41      	ldrb	r1, [r0, r1]
10059936:	0689      	lsls	r1, r1, #26
10059938:	d503      	bpl.n	10059942 <llc_pscan_report_data_len_max+0x1e>
1005993a:	303d      	adds	r0, #61	@ 0x3d
1005993c:	7b40      	ldrb	r0, [r0, #13]
1005993e:	06c0      	lsls	r0, r0, #27
10059940:	d401      	bmi.n	10059946 <llc_pscan_report_data_len_max+0x22>
10059942:	20f7      	movs	r0, #247	@ 0xf7
10059944:	bd80      	pop	{r7, pc}
10059946:	20f4      	movs	r0, #244	@ 0xf4
10059948:	bd80      	pop	{r7, pc}
1005994a:	46c0      	nop			@ (mov r8, r8)

1005994c <__arm_cp.8_0>:
1005994c:	20000894 	.word	0x20000894

10059950 <llc_pscan_send_sync_event>:
10059950:	b5f0      	push	{r4, r5, r6, r7, lr}
10059952:	b08d      	sub	sp, #52	@ 0x34
10059954:	4607      	mov	r7, r0
10059956:	2081      	movs	r0, #129	@ 0x81
10059958:	5c38      	ldrb	r0, [r7, r0]
1005995a:	0700      	lsls	r0, r0, #28
1005995c:	d56a      	bpl.n	10059a34 <llc_pscan_send_sync_event+0xe4>
1005995e:	463c      	mov	r4, r7
10059960:	344a      	adds	r4, #74	@ 0x4a
10059962:	463d      	mov	r5, r7
10059964:	357e      	adds	r5, #126	@ 0x7e
10059966:	f7ff fd87 	bl	10059478 <llc_pscan_get_cntxt_p>
1005996a:	21ff      	movs	r1, #255	@ 0xff
1005996c:	9001      	str	r0, [sp, #4]
1005996e:	8101      	strh	r1, [r0, #8]
10059970:	a807      	add	r0, sp, #28
10059972:	2600      	movs	r6, #0
10059974:	7306      	strb	r6, [r0, #12]
10059976:	7969      	ldrb	r1, [r5, #5]
10059978:	7381      	strb	r1, [r0, #14]
1005997a:	79e9      	ldrb	r1, [r5, #7]
1005997c:	73c1      	strb	r1, [r0, #15]
1005997e:	9402      	str	r4, [sp, #8]
10059980:	8861      	ldrh	r1, [r4, #2]
10059982:	8141      	strh	r1, [r0, #10]
10059984:	78e9      	ldrb	r1, [r5, #3]
10059986:	22f7      	movs	r2, #247	@ 0xf7
10059988:	400a      	ands	r2, r1
1005998a:	70ea      	strb	r2, [r5, #3]
1005998c:	7ff9      	ldrb	r1, [r7, #31]
1005998e:	7401      	strb	r1, [r0, #16]
10059990:	7e3c      	ldrb	r4, [r7, #24]
10059992:	7344      	strb	r4, [r0, #13]
10059994:	6b39      	ldr	r1, [r7, #48]	@ 0x30
10059996:	0a49      	lsrs	r1, r1, #9
10059998:	80c1      	strh	r1, [r0, #6]
1005999a:	4638      	mov	r0, r7
1005999c:	3019      	adds	r0, #25
1005999e:	9007      	str	r0, [sp, #28]
100599a0:	f7f4 ff31 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
100599a4:	2801      	cmp	r0, #1
100599a6:	4630      	mov	r0, r6
100599a8:	4631      	mov	r1, r6
100599aa:	4632      	mov	r2, r6
100599ac:	d10a      	bne.n	100599c4 <llc_pscan_send_sync_event+0x74>
100599ae:	6978      	ldr	r0, [r7, #20]
100599b0:	213e      	movs	r1, #62	@ 0x3e
100599b2:	5c46      	ldrb	r6, [r0, r1]
100599b4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
100599b6:	6b02      	ldr	r2, [r0, #48]	@ 0x30
100599b8:	6b40      	ldr	r0, [r0, #52]	@ 0x34
100599ba:	2305      	movs	r3, #5
100599bc:	4353      	muls	r3, r2
100599be:	0a1a      	lsrs	r2, r3, #8
100599c0:	0a49      	lsrs	r1, r1, #9
100599c2:	0a40      	lsrs	r0, r0, #9
100599c4:	ab07      	add	r3, sp, #28
100599c6:	751a      	strb	r2, [r3, #20]
100599c8:	74d9      	strb	r1, [r3, #19]
100599ca:	7498      	strb	r0, [r3, #18]
100599cc:	745e      	strb	r6, [r3, #17]
100599ce:	7828      	ldrb	r0, [r5, #0]
100599d0:	28ff      	cmp	r0, #255	@ 0xff
100599d2:	d021      	beq.n	10059a18 <llc_pscan_send_sync_event+0xc8>
100599d4:	f7fc fb1a 	bl	1005600c <llc_conn_get_cntxt_per_p>
100599d8:	4605      	mov	r5, r0
100599da:	f7ff fc04 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
100599de:	2801      	cmp	r0, #1
100599e0:	d111      	bne.n	10059a06 <llc_pscan_send_sync_event+0xb6>
100599e2:	69b8      	ldr	r0, [r7, #24]
100599e4:	69f9      	ldr	r1, [r7, #28]
100599e6:	aa03      	add	r2, sp, #12
100599e8:	9200      	str	r2, [sp, #0]
100599ea:	aa04      	add	r2, sp, #16
100599ec:	ab05      	add	r3, sp, #20
100599ee:	f7ff fb4b 	bl	10059088 <llc_priv_resolve_rpa_in_isr>
100599f2:	2800      	cmp	r0, #0
100599f4:	d007      	beq.n	10059a06 <llc_pscan_send_sync_event+0xb6>
100599f6:	2002      	movs	r0, #2
100599f8:	9905      	ldr	r1, [sp, #20]
100599fa:	4301      	orrs	r1, r0
100599fc:	a807      	add	r0, sp, #28
100599fe:	7341      	strb	r1, [r0, #13]
10059a00:	a805      	add	r0, sp, #20
10059a02:	1c40      	adds	r0, r0, #1
10059a04:	9007      	str	r0, [sp, #28]
10059a06:	8f69      	ldrh	r1, [r5, #58]	@ 0x3a
10059a08:	a807      	add	r0, sp, #28
10059a0a:	8081      	strh	r1, [r0, #4]
10059a0c:	9902      	ldr	r1, [sp, #8]
10059a0e:	8809      	ldrh	r1, [r1, #0]
10059a10:	8101      	strh	r1, [r0, #8]
10059a12:	f7f4 ff48 	bl	1004e8a6 <llc_pscan_push_past_received_event_ucfg>
10059a16:	e00d      	b.n	10059a34 <llc_pscan_send_sync_event+0xe4>
10059a18:	9801      	ldr	r0, [sp, #4]
10059a1a:	300c      	adds	r0, #12
10059a1c:	f000 f8ca 	bl	10059bb4 <llc_pscan_enable_adv_addr_ucfg_weak>
10059a20:	7be8      	ldrb	r0, [r5, #15]
10059a22:	2800      	cmp	r0, #0
10059a24:	d003      	beq.n	10059a2e <llc_pscan_send_sync_event+0xde>
10059a26:	2002      	movs	r0, #2
10059a28:	4304      	orrs	r4, r0
10059a2a:	a807      	add	r0, sp, #28
10059a2c:	7344      	strb	r4, [r0, #13]
10059a2e:	a807      	add	r0, sp, #28
10059a30:	f7f4 ff45 	bl	1004e8be <llc_pscan_push_sync_established_event_ucfg>
10059a34:	b00d      	add	sp, #52	@ 0x34
10059a36:	bdf0      	pop	{r4, r5, r6, r7, pc}

10059a38 <llc_pscan_update_channel_map>:
10059a38:	b5b0      	push	{r4, r5, r7, lr}
10059a3a:	4604      	mov	r4, r0
10059a3c:	208b      	movs	r0, #139	@ 0x8b
10059a3e:	5c20      	ldrb	r0, [r4, r0]
10059a40:	2800      	cmp	r0, #0
10059a42:	d014      	beq.n	10059a6e <llc_pscan_update_channel_map+0x36>
10059a44:	4620      	mov	r0, r4
10059a46:	3044      	adds	r0, #68	@ 0x44
10059a48:	8801      	ldrh	r1, [r0, #0]
10059a4a:	8840      	ldrh	r0, [r0, #2]
10059a4c:	4288      	cmp	r0, r1
10059a4e:	d80e      	bhi.n	10059a6e <llc_pscan_update_channel_map+0x36>
10059a50:	4620      	mov	r0, r4
10059a52:	3084      	adds	r0, #132	@ 0x84
10059a54:	2100      	movs	r1, #0
10059a56:	71c1      	strb	r1, [r0, #7]
10059a58:	7800      	ldrb	r0, [r0, #0]
10059a5a:	4625      	mov	r5, r4
10059a5c:	354e      	adds	r5, #78	@ 0x4e
10059a5e:	4629      	mov	r1, r5
10059a60:	f7ec fc94 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
10059a64:	3456      	adds	r4, #86	@ 0x56
10059a66:	4620      	mov	r0, r4
10059a68:	4629      	mov	r1, r5
10059a6a:	f7fe f84d 	bl	10057b08 <llc_mngm_csa2_update_remapping_table>
10059a6e:	bdb0      	pop	{r4, r5, r7, pc}

10059a70 <llc_pscan_update_taskslot_params>:
10059a70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10059a72:	460d      	mov	r5, r1
10059a74:	4604      	mov	r4, r0
10059a76:	6b06      	ldr	r6, [r0, #48]	@ 0x30
10059a78:	434e      	muls	r6, r1
10059a7a:	4631      	mov	r1, r6
10059a7c:	462a      	mov	r2, r5
10059a7e:	f000 f826 	bl	10059ace <llc_pscan_update_sync_counter>
10059a82:	2700      	movs	r7, #0
10059a84:	2800      	cmp	r0, #0
10059a86:	d020      	beq.n	10059aca <llc_pscan_update_taskslot_params+0x5a>
10059a88:	4620      	mov	r0, r4
10059a8a:	4631      	mov	r1, r6
10059a8c:	f000 f830 	bl	10059af0 <llc_pscan_update_window_widening>
10059a90:	2800      	cmp	r0, #0
10059a92:	d01a      	beq.n	10059aca <llc_pscan_update_taskslot_params+0x5a>
10059a94:	4621      	mov	r1, r4
10059a96:	3140      	adds	r1, #64	@ 0x40
10059a98:	4620      	mov	r0, r4
10059a9a:	307c      	adds	r0, #124	@ 0x7c
10059a9c:	22ff      	movs	r2, #255	@ 0xff
10059a9e:	7002      	strb	r2, [r0, #0]
10059aa0:	2200      	movs	r2, #0
10059aa2:	7182      	strb	r2, [r0, #6]
10059aa4:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
10059aa6:	1992      	adds	r2, r2, r6
10059aa8:	62e2      	str	r2, [r4, #44]	@ 0x2c
10059aaa:	888b      	ldrh	r3, [r1, #4]
10059aac:	195b      	adds	r3, r3, r5
10059aae:	808b      	strh	r3, [r1, #4]
10059ab0:	880b      	ldrh	r3, [r1, #0]
10059ab2:	1c5b      	adds	r3, r3, #1
10059ab4:	800b      	strh	r3, [r1, #0]
10059ab6:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
10059ab8:	0849      	lsrs	r1, r1, #1
10059aba:	1a51      	subs	r1, r2, r1
10059abc:	7a00      	ldrb	r0, [r0, #8]
10059abe:	f008 fc6d 	bl	1006239c <LL_sched_set_anchor>
10059ac2:	4620      	mov	r0, r4
10059ac4:	f7ff ffb8 	bl	10059a38 <llc_pscan_update_channel_map>
10059ac8:	2701      	movs	r7, #1
10059aca:	4638      	mov	r0, r7
10059acc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10059ace <llc_pscan_update_sync_counter>:
10059ace:	2381      	movs	r3, #129	@ 0x81
10059ad0:	5cc3      	ldrb	r3, [r0, r3]
10059ad2:	071b      	lsls	r3, r3, #28
10059ad4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
10059ad6:	d404      	bmi.n	10059ae2 <llc_pscan_update_sync_counter+0x14>
10059ad8:	428b      	cmp	r3, r1
10059ada:	460a      	mov	r2, r1
10059adc:	d804      	bhi.n	10059ae8 <llc_pscan_update_sync_counter+0x1a>
10059ade:	2000      	movs	r0, #0
10059ae0:	4770      	bx	lr
10059ae2:	43d1      	mvns	r1, r2
10059ae4:	1859      	adds	r1, r3, r1
10059ae6:	d4fa      	bmi.n	10059ade <llc_pscan_update_sync_counter+0x10>
10059ae8:	1a99      	subs	r1, r3, r2
10059aea:	6381      	str	r1, [r0, #56]	@ 0x38
10059aec:	2001      	movs	r0, #1
10059aee:	4770      	bx	lr

10059af0 <llc_pscan_update_window_widening>:
10059af0:	b510      	push	{r4, lr}
10059af2:	4604      	mov	r4, r0
10059af4:	2085      	movs	r0, #133	@ 0x85
10059af6:	5c20      	ldrb	r0, [r4, r0]
10059af8:	f002 ff4c 	bl	1005c994 <llc_calculate_window_widening>
10059afc:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
10059afe:	2900      	cmp	r1, #0
10059b00:	d001      	beq.n	10059b06 <llc_pscan_update_window_widening+0x16>
10059b02:	1840      	adds	r0, r0, r1
10059b04:	380d      	subs	r0, #13
10059b06:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10059b08:	0849      	lsrs	r1, r1, #1
10059b0a:	393e      	subs	r1, #62	@ 0x3e
10059b0c:	4288      	cmp	r0, r1
10059b0e:	d202      	bcs.n	10059b16 <llc_pscan_update_window_widening+0x26>
10059b10:	63e0      	str	r0, [r4, #60]	@ 0x3c
10059b12:	2001      	movs	r0, #1
10059b14:	bd10      	pop	{r4, pc}
10059b16:	2000      	movs	r0, #0
10059b18:	bd10      	pop	{r4, pc}
	...

10059b1c <llc_pscan_validate_pdu>:
10059b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10059b1e:	4605      	mov	r5, r0
10059b20:	7fc0      	ldrb	r0, [r0, #31]
10059b22:	2701      	movs	r7, #1
10059b24:	701f      	strb	r7, [r3, #0]
10059b26:	462c      	mov	r4, r5
10059b28:	3442      	adds	r4, #66	@ 0x42
10059b2a:	3581      	adds	r5, #129	@ 0x81
10059b2c:	2a00      	cmp	r2, #0
10059b2e:	9100      	str	r1, [sp, #0]
10059b30:	d102      	bne.n	10059b38 <llc_pscan_validate_pdu+0x1c>
10059b32:	786a      	ldrb	r2, [r5, #1]
10059b34:	2a01      	cmp	r2, #1
10059b36:	d10c      	bne.n	10059b52 <llc_pscan_validate_pdu+0x36>
10059b38:	7cca      	ldrb	r2, [r1, #19]
10059b3a:	2aff      	cmp	r2, #255	@ 0xff
10059b3c:	d004      	beq.n	10059b48 <llc_pscan_validate_pdu+0x2c>
10059b3e:	4282      	cmp	r2, r0
10059b40:	d104      	bne.n	10059b4c <llc_pscan_validate_pdu+0x30>
10059b42:	7828      	ldrb	r0, [r5, #0]
10059b44:	0740      	lsls	r0, r0, #29
10059b46:	d414      	bmi.n	10059b72 <llc_pscan_validate_pdu+0x56>
10059b48:	2400      	movs	r4, #0
10059b4a:	e019      	b.n	10059b80 <llc_pscan_validate_pdu+0x64>
10059b4c:	2401      	movs	r4, #1
10059b4e:	2700      	movs	r7, #0
10059b50:	e014      	b.n	10059b7c <llc_pscan_validate_pdu+0x60>
10059b52:	8826      	ldrh	r6, [r4, #0]
10059b54:	2400      	movs	r4, #0
10059b56:	4a16      	ldr	r2, [pc, #88]	@ (10059bb0 <__arm_cp.14_0>)
10059b58:	4296      	cmp	r6, r2
10059b5a:	d011      	beq.n	10059b80 <llc_pscan_validate_pdu+0x64>
10059b5c:	894a      	ldrh	r2, [r1, #10]
10059b5e:	42b2      	cmp	r2, r6
10059b60:	d00e      	beq.n	10059b80 <llc_pscan_validate_pdu+0x64>
10059b62:	7cc9      	ldrb	r1, [r1, #19]
10059b64:	2400      	movs	r4, #0
10059b66:	4281      	cmp	r1, r0
10059b68:	d00a      	beq.n	10059b80 <llc_pscan_validate_pdu+0x64>
10059b6a:	2001      	movs	r0, #1
10059b6c:	4627      	mov	r7, r4
10059b6e:	4604      	mov	r4, r0
10059b70:	e004      	b.n	10059b7c <llc_pscan_validate_pdu+0x60>
10059b72:	8948      	ldrh	r0, [r1, #10]
10059b74:	8821      	ldrh	r1, [r4, #0]
10059b76:	2400      	movs	r4, #0
10059b78:	4281      	cmp	r1, r0
10059b7a:	d101      	bne.n	10059b80 <llc_pscan_validate_pdu+0x64>
10059b7c:	2000      	movs	r0, #0
10059b7e:	7018      	strb	r0, [r3, #0]
10059b80:	461e      	mov	r6, r3
10059b82:	f7fb facf 	bl	10055124 <cte_csr_ucfg_weak>
10059b86:	2f00      	cmp	r7, #0
10059b88:	d010      	beq.n	10059bac <llc_pscan_validate_pdu+0x90>
10059b8a:	2801      	cmp	r0, #1
10059b8c:	d10e      	bne.n	10059bac <llc_pscan_validate_pdu+0x90>
10059b8e:	7828      	ldrb	r0, [r5, #0]
10059b90:	0700      	lsls	r0, r0, #28
10059b92:	d50b      	bpl.n	10059bac <llc_pscan_validate_pdu+0x90>
10059b94:	9800      	ldr	r0, [sp, #0]
10059b96:	7c00      	ldrb	r0, [r0, #16]
10059b98:	28ff      	cmp	r0, #255	@ 0xff
10059b9a:	d100      	bne.n	10059b9e <llc_pscan_validate_pdu+0x82>
10059b9c:	2004      	movs	r0, #4
10059b9e:	7969      	ldrb	r1, [r5, #5]
10059ba0:	40c1      	lsrs	r1, r0
10059ba2:	07c8      	lsls	r0, r1, #31
10059ba4:	d002      	beq.n	10059bac <llc_pscan_validate_pdu+0x90>
10059ba6:	2000      	movs	r0, #0
10059ba8:	7030      	strb	r0, [r6, #0]
10059baa:	2402      	movs	r4, #2
10059bac:	4620      	mov	r0, r4
10059bae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10059bb0 <__arm_cp.14_0>:
10059bb0:	00000fff 	.word	0x00000fff

10059bb4 <llc_pscan_enable_adv_addr_ucfg_weak>:
10059bb4:	4770      	bx	lr
	...

10059bb8 <llc_pscan_push_padv_report_event>:
10059bb8:	b580      	push	{r7, lr}
10059bba:	4908      	ldr	r1, [pc, #32]	@ (10059bdc <__arm_cp.20_0>)
10059bbc:	6809      	ldr	r1, [r1, #0]
10059bbe:	223d      	movs	r2, #61	@ 0x3d
10059bc0:	5c8a      	ldrb	r2, [r1, r2]
10059bc2:	0692      	lsls	r2, r2, #26
10059bc4:	d503      	bpl.n	10059bce <llc_pscan_push_padv_report_event+0x16>
10059bc6:	313d      	adds	r1, #61	@ 0x3d
10059bc8:	7b49      	ldrb	r1, [r1, #13]
10059bca:	06c9      	lsls	r1, r1, #27
10059bcc:	d402      	bmi.n	10059bd4 <llc_pscan_push_padv_report_event+0x1c>
10059bce:	f7ff fd8f 	bl	100596f0 <llc_pscan_push_padv_report_v1_event>
10059bd2:	bd80      	pop	{r7, pc}
10059bd4:	f000 fb1a 	bl	1005a20c <llc_pscan_wr_push_padv_report_v2_event>
10059bd8:	bd80      	pop	{r7, pc}
10059bda:	46c0      	nop			@ (mov r8, r8)

10059bdc <__arm_cp.20_0>:
10059bdc:	20000894 	.word	0x20000894

10059be0 <llc_pscan_push_past_received_event>:
10059be0:	b580      	push	{r7, lr}
10059be2:	4908      	ldr	r1, [pc, #32]	@ (10059c04 <__arm_cp.22_0>)
10059be4:	6809      	ldr	r1, [r1, #0]
10059be6:	223d      	movs	r2, #61	@ 0x3d
10059be8:	5c8a      	ldrb	r2, [r1, r2]
10059bea:	0692      	lsls	r2, r2, #26
10059bec:	d503      	bpl.n	10059bf6 <llc_pscan_push_past_received_event+0x16>
10059bee:	313d      	adds	r1, #61	@ 0x3d
10059bf0:	7b49      	ldrb	r1, [r1, #13]
10059bf2:	0689      	lsls	r1, r1, #26
10059bf4:	d402      	bmi.n	10059bfc <llc_pscan_push_past_received_event+0x1c>
10059bf6:	f7ff fdc5 	bl	10059784 <llc_pscan_push_past_received_v1_event>
10059bfa:	bd80      	pop	{r7, pc}
10059bfc:	f000 fb5a 	bl	1005a2b4 <llc_pscan_wr_push_past_received_v2_event>
10059c00:	bd80      	pop	{r7, pc}
10059c02:	46c0      	nop			@ (mov r8, r8)

10059c04 <__arm_cp.22_0>:
10059c04:	20000894 	.word	0x20000894

10059c08 <llc_pscan_push_sync_established_event>:
10059c08:	b580      	push	{r7, lr}
10059c0a:	4908      	ldr	r1, [pc, #32]	@ (10059c2c <__arm_cp.24_0>)
10059c0c:	6809      	ldr	r1, [r1, #0]
10059c0e:	223d      	movs	r2, #61	@ 0x3d
10059c10:	5c8a      	ldrb	r2, [r1, r2]
10059c12:	0692      	lsls	r2, r2, #26
10059c14:	d503      	bpl.n	10059c1e <llc_pscan_push_sync_established_event+0x16>
10059c16:	313d      	adds	r1, #61	@ 0x3d
10059c18:	7b49      	ldrb	r1, [r1, #13]
10059c1a:	0709      	lsls	r1, r1, #28
10059c1c:	d402      	bmi.n	10059c24 <llc_pscan_push_sync_established_event+0x1c>
10059c1e:	f7ff fe09 	bl	10059834 <llc_pscan_push_sync_established_v1_event>
10059c22:	bd80      	pop	{r7, pc}
10059c24:	f000 fbae 	bl	1005a384 <llc_pscan_wr_push_sync_established_v2_event>
10059c28:	bd80      	pop	{r7, pc}
10059c2a:	46c0      	nop			@ (mov r8, r8)

10059c2c <__arm_cp.24_0>:
10059c2c:	20000894 	.word	0x20000894

10059c30 <llc_pscan_stop>:
10059c30:	b510      	push	{r4, lr}
10059c32:	4604      	mov	r4, r0
10059c34:	f3ef 8010 	mrs	r0, PRIMASK
10059c38:	b672      	cpsid	i
10059c3a:	2084      	movs	r0, #132	@ 0x84
10059c3c:	5c20      	ldrb	r0, [r4, r0]
10059c3e:	212c      	movs	r1, #44	@ 0x2c
10059c40:	4341      	muls	r1, r0
10059c42:	4a0a      	ldr	r2, [pc, #40]	@ (10059c6c <__arm_cp.4_0>)
10059c44:	6812      	ldr	r2, [r2, #0]
10059c46:	1851      	adds	r1, r2, r1
10059c48:	7c89      	ldrb	r1, [r1, #18]
10059c4a:	2901      	cmp	r1, #1
10059c4c:	d105      	bne.n	10059c5a <llc_pscan_stop+0x2a>
10059c4e:	f008 ff25 	bl	10062a9c <LL_sched_release_taskslot>
10059c52:	4620      	mov	r0, r4
10059c54:	f00f fe20 	bl	10069898 <llc_pscan_cancel_slot>
10059c58:	e005      	b.n	10059c66 <llc_pscan_stop+0x36>
10059c5a:	3484      	adds	r4, #132	@ 0x84
10059c5c:	f008 fbb0 	bl	100623c0 <LL_sched_set_cancel_request>
10059c60:	7820      	ldrb	r0, [r4, #0]
10059c62:	f008 ff37 	bl	10062ad4 <LL_sched_check_and_wait_sched>
10059c66:	b662      	cpsie	i
10059c68:	bd10      	pop	{r4, pc}
10059c6a:	46c0      	nop			@ (mov r8, r8)

10059c6c <__arm_cp.4_0>:
10059c6c:	2000089c 	.word	0x2000089c

10059c70 <llc_pscan_check_address>:
10059c70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
10059c72:	4604      	mov	r4, r0
10059c74:	f7ff fc00 	bl	10059478 <llc_pscan_get_cntxt_p>
10059c78:	4606      	mov	r6, r0
10059c7a:	7a00      	ldrb	r0, [r0, #8]
10059c7c:	28ff      	cmp	r0, #255	@ 0xff
10059c7e:	d012      	beq.n	10059ca6 <llc_pscan_check_address+0x36>
10059c80:	6825      	ldr	r5, [r4, #0]
10059c82:	6864      	ldr	r4, [r4, #4]
10059c84:	f7ff fc02 	bl	1005948c <llc_pscan_get_cntxt_per_p>
10059c88:	2181      	movs	r1, #129	@ 0x81
10059c8a:	5c41      	ldrb	r1, [r0, r1]
10059c8c:	07c9      	lsls	r1, r1, #31
10059c8e:	d10c      	bne.n	10059caa <llc_pscan_check_address+0x3a>
10059c90:	6981      	ldr	r1, [r0, #24]
10059c92:	42a9      	cmp	r1, r5
10059c94:	d107      	bne.n	10059ca6 <llc_pscan_check_address+0x36>
10059c96:	69c1      	ldr	r1, [r0, #28]
10059c98:	4061      	eors	r1, r4
10059c9a:	20ff      	movs	r0, #255	@ 0xff
10059c9c:	0600      	lsls	r0, r0, #24
10059c9e:	4381      	bics	r1, r0
10059ca0:	4248      	negs	r0, r1
10059ca2:	4148      	adcs	r0, r1
10059ca4:	e00b      	b.n	10059cbe <llc_pscan_check_address+0x4e>
10059ca6:	2000      	movs	r0, #0
10059ca8:	e009      	b.n	10059cbe <llc_pscan_check_address+0x4e>
10059caa:	68f0      	ldr	r0, [r6, #12]
10059cac:	6931      	ldr	r1, [r6, #16]
10059cae:	aa03      	add	r2, sp, #12
10059cb0:	2300      	movs	r3, #0
10059cb2:	9300      	str	r3, [sp, #0]
10059cb4:	9201      	str	r2, [sp, #4]
10059cb6:	462a      	mov	r2, r5
10059cb8:	4623      	mov	r3, r4
10059cba:	f00b fce9 	bl	10065690 <addr8_list_search>
10059cbe:	b004      	add	sp, #16
10059cc0:	bd70      	pop	{r4, r5, r6, pc}
	...

10059cc4 <llc_pscan_synchronizing>:
10059cc4:	b5f0      	push	{r4, r5, r6, r7, lr}
10059cc6:	b08d      	sub	sp, #52	@ 0x34
10059cc8:	4604      	mov	r4, r0
10059cca:	2020      	movs	r0, #32
10059ccc:	5c20      	ldrb	r0, [r4, r0]
10059cce:	2800      	cmp	r0, #0
10059cd0:	d007      	beq.n	10059ce2 <llc_pscan_synchronizing+0x1e>
10059cd2:	2100      	movs	r1, #0
10059cd4:	4620      	mov	r0, r4
10059cd6:	f000 f96d 	bl	10059fb4 <llc_pscan_check_sync_info>
10059cda:	2800      	cmp	r0, #0
10059cdc:	d023      	beq.n	10059d26 <llc_pscan_synchronizing+0x62>
10059cde:	2002      	movs	r0, #2
10059ce0:	e019      	b.n	10059d16 <llc_pscan_synchronizing+0x52>
10059ce2:	f7ff fbc9 	bl	10059478 <llc_pscan_get_cntxt_p>
10059ce6:	4605      	mov	r5, r0
10059ce8:	7a01      	ldrb	r1, [r0, #8]
10059cea:	2001      	movs	r0, #1
10059cec:	29ff      	cmp	r1, #255	@ 0xff
10059cee:	d012      	beq.n	10059d16 <llc_pscan_synchronizing+0x52>
10059cf0:	7a6a      	ldrb	r2, [r5, #9]
10059cf2:	2a00      	cmp	r2, #0
10059cf4:	d10f      	bne.n	10059d16 <llc_pscan_synchronizing+0x52>
10059cf6:	4608      	mov	r0, r1
10059cf8:	f7ff fbc8 	bl	1005948c <llc_pscan_get_cntxt_per_p>
10059cfc:	6020      	str	r0, [r4, #0]
10059cfe:	4620      	mov	r0, r4
10059d00:	4629      	mov	r1, r5
10059d02:	f000 f957 	bl	10059fb4 <llc_pscan_check_sync_info>
10059d06:	2800      	cmp	r0, #0
10059d08:	d105      	bne.n	10059d16 <llc_pscan_synchronizing+0x52>
10059d0a:	4620      	mov	r0, r4
10059d0c:	f7f4 fe6f 	bl	1004e9ee <llc_pscan_wr_check_pawr_info_ucfg>
10059d10:	2800      	cmp	r0, #0
10059d12:	d100      	bne.n	10059d16 <llc_pscan_synchronizing+0x52>
10059d14:	e116      	b.n	10059f44 <llc_pscan_synchronizing+0x280>
10059d16:	6825      	ldr	r5, [r4, #0]
10059d18:	2802      	cmp	r0, #2
10059d1a:	d102      	bne.n	10059d22 <llc_pscan_synchronizing+0x5e>
10059d1c:	4628      	mov	r0, r5
10059d1e:	f7ff ff87 	bl	10059c30 <llc_pscan_stop>
10059d22:	b00d      	add	sp, #52	@ 0x34
10059d24:	bdf0      	pop	{r4, r5, r6, r7, pc}
10059d26:	68e0      	ldr	r0, [r4, #12]
10059d28:	6921      	ldr	r1, [r4, #16]
10059d2a:	1840      	adds	r0, r0, r1
10059d2c:	6821      	ldr	r1, [r4, #0]
10059d2e:	62c8      	str	r0, [r1, #44]	@ 0x2c
10059d30:	7d20      	ldrb	r0, [r4, #20]
10059d32:	f005 fd92 	bl	1005f85a <LL_past_get_past_context_per_window_widening>
10059d36:	6825      	ldr	r5, [r4, #0]
10059d38:	63e8      	str	r0, [r5, #60]	@ 0x3c
10059d3a:	4626      	mov	r6, r4
10059d3c:	3620      	adds	r6, #32
10059d3e:	7871      	ldrb	r1, [r6, #1]
10059d40:	4628      	mov	r0, r5
10059d42:	f7f4 fe61 	bl	1004ea08 <llc_pscan_wr_reserve_taskslots_ucfg>
10059d46:	2800      	cmp	r0, #0
10059d48:	d1e6      	bne.n	10059d18 <llc_pscan_synchronizing+0x54>
10059d4a:	960c      	str	r6, [sp, #48]	@ 0x30
10059d4c:	4628      	mov	r0, r5
10059d4e:	3053      	adds	r0, #83	@ 0x53
10059d50:	900a      	str	r0, [sp, #40]	@ 0x28
10059d52:	4628      	mov	r0, r5
10059d54:	3083      	adds	r0, #131	@ 0x83
10059d56:	9009      	str	r0, [sp, #36]	@ 0x24
10059d58:	ccc0      	ldmia	r4!, {r6, r7}
10059d5a:	4630      	mov	r0, r6
10059d5c:	3053      	adds	r0, #83	@ 0x53
10059d5e:	4639      	mov	r1, r7
10059d60:	310d      	adds	r1, #13
10059d62:	2203      	movs	r2, #3
10059d64:	3c08      	subs	r4, #8
10059d66:	f7ea fe1d 	bl	100449a4 <BLEPLAT_MemCpy>
10059d6a:	7a78      	ldrb	r0, [r7, #9]
10059d6c:	900b      	str	r0, [sp, #44]	@ 0x2c
10059d6e:	7ab9      	ldrb	r1, [r7, #10]
10059d70:	7afa      	ldrb	r2, [r7, #11]
10059d72:	7b38      	ldrb	r0, [r7, #12]
10059d74:	9008      	str	r0, [sp, #32]
10059d76:	8a38      	ldrh	r0, [r7, #16]
10059d78:	2344      	movs	r3, #68	@ 0x44
10059d7a:	52f0      	strh	r0, [r6, r3]
10059d7c:	4633      	mov	r3, r6
10059d7e:	337c      	adds	r3, #124	@ 0x7c
10059d80:	7d60      	ldrb	r0, [r4, #21]
10059d82:	71d8      	strb	r0, [r3, #7]
10059d84:	0208      	lsls	r0, r1, #8
10059d86:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10059d88:	1840      	adds	r0, r0, r1
10059d8a:	0411      	lsls	r1, r2, #16
10059d8c:	1840      	adds	r0, r0, r1
10059d8e:	9908      	ldr	r1, [sp, #32]
10059d90:	0609      	lsls	r1, r1, #24
10059d92:	1840      	adds	r0, r0, r1
10059d94:	62b0      	str	r0, [r6, #40]	@ 0x28
10059d96:	7a38      	ldrb	r0, [r7, #8]
10059d98:	217c      	movs	r1, #124	@ 0x7c
10059d9a:	22ff      	movs	r2, #255	@ 0xff
10059d9c:	5472      	strb	r2, [r6, r1]
10059d9e:	2100      	movs	r1, #0
10059da0:	73d9      	strb	r1, [r3, #15]
10059da2:	2106      	movs	r1, #6
10059da4:	63b1      	str	r1, [r6, #56]	@ 0x38
10059da6:	8879      	ldrh	r1, [r7, #2]
10059da8:	0249      	lsls	r1, r1, #9
10059daa:	6331      	str	r1, [r6, #48]	@ 0x30
10059dac:	0940      	lsrs	r0, r0, #5
10059dae:	930b      	str	r3, [sp, #44]	@ 0x2c
10059db0:	7258      	strb	r0, [r3, #9]
10059db2:	6b70      	ldr	r0, [r6, #52]	@ 0x34
10059db4:	f7e6 fa44 	bl	10040240 <__udivsi3>
10059db8:	b281      	uxth	r1, r0
10059dba:	4633      	mov	r3, r6
10059dbc:	3344      	adds	r3, #68	@ 0x44
10059dbe:	889a      	ldrh	r2, [r3, #4]
10059dc0:	4291      	cmp	r1, r2
10059dc2:	d200      	bcs.n	10059dc6 <llc_pscan_synchronizing+0x102>
10059dc4:	8098      	strh	r0, [r3, #4]
10059dc6:	7a38      	ldrb	r0, [r7, #8]
10059dc8:	211f      	movs	r1, #31
10059dca:	4001      	ands	r1, r0
10059dcc:	7239      	strb	r1, [r7, #8]
10059dce:	4630      	mov	r0, r6
10059dd0:	304e      	adds	r0, #78	@ 0x4e
10059dd2:	1d39      	adds	r1, r7, #4
10059dd4:	2205      	movs	r2, #5
10059dd6:	4607      	mov	r7, r0
10059dd8:	9308      	str	r3, [sp, #32]
10059dda:	f7ea fde3 	bl	100449a4 <BLEPLAT_MemCpy>
10059dde:	69a0      	ldr	r0, [r4, #24]
10059de0:	69e1      	ldr	r1, [r4, #28]
10059de2:	61b0      	str	r0, [r6, #24]
10059de4:	61f1      	str	r1, [r6, #28]
10059de6:	4630      	mov	r0, r6
10059de8:	3056      	adds	r0, #86	@ 0x56
10059dea:	4639      	mov	r1, r7
10059dec:	f7fd fe8c 	bl	10057b08 <llc_mngm_csa2_update_remapping_table>
10059df0:	4630      	mov	r0, r6
10059df2:	4621      	mov	r1, r4
10059df4:	f7f4 fe1b 	bl	1004ea2e <llc_pscan_wr_set_pscan_cntxt_ucfg>
10059df8:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10059dfa:	7a00      	ldrb	r0, [r0, #8]
10059dfc:	9908      	ldr	r1, [sp, #32]
10059dfe:	8108      	strh	r0, [r1, #8]
10059e00:	980c      	ldr	r0, [sp, #48]	@ 0x30
10059e02:	7840      	ldrb	r0, [r0, #1]
10059e04:	900b      	str	r0, [sp, #44]	@ 0x2c
10059e06:	9809      	ldr	r0, [sp, #36]	@ 0x24
10059e08:	7846      	ldrb	r6, [r0, #1]
10059e0a:	7800      	ldrb	r0, [r0, #0]
10059e0c:	f002 fee2 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
10059e10:	4607      	mov	r7, r0
10059e12:	4630      	mov	r0, r6
10059e14:	f7ec fa8a 	bl	1004632c <BLEPLAT_CNTR_SmInitTo0>
10059e18:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
10059e1a:	4630      	mov	r0, r6
10059e1c:	f7ec faa4 	bl	10046368 <BLEPLAT_CNTR_SmSetAccessAddr>
10059e20:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10059e22:	7810      	ldrb	r0, [r2, #0]
10059e24:	7851      	ldrb	r1, [r2, #1]
10059e26:	0209      	lsls	r1, r1, #8
10059e28:	1808      	adds	r0, r1, r0
10059e2a:	7891      	ldrb	r1, [r2, #2]
10059e2c:	0409      	lsls	r1, r1, #16
10059e2e:	1841      	adds	r1, r0, r1
10059e30:	4630      	mov	r0, r6
10059e32:	f7ec fadc 	bl	100463ee <BLEPLAT_CNTR_SmSetCrcInit>
10059e36:	4859      	ldr	r0, [pc, #356]	@ (10059f9c <__arm_cp.12_0>)
10059e38:	6800      	ldr	r0, [r0, #0]
10059e3a:	7a41      	ldrb	r1, [r0, #9]
10059e3c:	4630      	mov	r0, r6
10059e3e:	f7ec fc07 	bl	10046650 <BLEPLAT_CNTR_SmSetTxPwr>
10059e42:	2100      	movs	r1, #0
10059e44:	4630      	mov	r0, r6
10059e46:	f7ec faf9 	bl	1004643c <BLEPLAT_CNTR_SmSetHopIncr>
10059e4a:	4629      	mov	r1, r5
10059e4c:	314e      	adds	r1, #78	@ 0x4e
10059e4e:	4630      	mov	r0, r6
10059e50:	f7ec fa9c 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
10059e54:	21ff      	movs	r1, #255	@ 0xff
10059e56:	4630      	mov	r0, r6
10059e58:	f7ec fadb 	bl	10046412 <BLEPLAT_CNTR_SmSetDataLength>
10059e5c:	4630      	mov	r0, r6
10059e5e:	f7ec fb55 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
10059e62:	4630      	mov	r0, r6
10059e64:	4639      	mov	r1, r7
10059e66:	f7ec fb72 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
10059e6a:	4630      	mov	r0, r6
10059e6c:	4629      	mov	r1, r5
10059e6e:	f7ec fb5c 	bl	1004652a <BLEPLAT_CNTR_SmSetRxPacketPtr>
10059e72:	4630      	mov	r0, r6
10059e74:	f7ec f8ee 	bl	10046054 <BLEPLAT_CNTR_SmCteOff>
10059e78:	4628      	mov	r0, r5
10059e7a:	f7eb ffa1 	bl	10045dc0 <BLEPLAT_CNTR_PacketInitTo0>
10059e7e:	4628      	mov	r0, r5
10059e80:	f7eb ffac 	bl	10045ddc <BLEPLAT_CNTR_PacketSetAdvPduFormat>
10059e84:	4628      	mov	r0, r5
10059e86:	f7ec f828 	bl	10045eda <BLEPLAT_CNTR_PacketSetKeepsemareq>
10059e8a:	4628      	mov	r0, r5
10059e8c:	4629      	mov	r1, r5
10059e8e:	f7ec f831 	bl	10045ef4 <BLEPLAT_CNTR_PacketSetNextPtr>
10059e92:	f008 fa01 	bl	10062298 <LL_get_rx_common_buffer_p>
10059e96:	4601      	mov	r1, r0
10059e98:	4628      	mov	r0, r5
10059e9a:	f7eb ffc6 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
10059e9e:	4628      	mov	r0, r5
10059ea0:	f7eb ff68 	bl	10045d74 <BLEPLAT_CNTR_PacketClrIncChan>
10059ea4:	4628      	mov	r0, r5
10059ea6:	f7eb ffe7 	bl	10045e78 <BLEPLAT_CNTR_PacketSetIntDone>
10059eaa:	4628      	mov	r0, r5
10059eac:	4631      	mov	r1, r6
10059eae:	f7ec f83d 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
10059eb2:	4628      	mov	r0, r5
10059eb4:	f7ec f85e 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10059eb8:	4628      	mov	r0, r5
10059eba:	f7eb ff9c 	bl	10045df6 <BLEPLAT_CNTR_PacketSetCrcinitSel>
10059ebe:	4628      	mov	r0, r5
10059ec0:	f7ec f865 	bl	10045f8e <BLEPLAT_CNTR_PacketSetRxReady>
10059ec4:	4628      	mov	r0, r5
10059ec6:	f7ec f897 	bl	10045ff8 <BLEPLAT_CNTR_PacketSetTimerTrigRcv>
10059eca:	4628      	mov	r0, r5
10059ecc:	f7ec f821 	bl	10045f12 <BLEPLAT_CNTR_PacketSetNextRxMode>
10059ed0:	4628      	mov	r0, r5
10059ed2:	f7eb ffdd 	bl	10045e90 <BLEPLAT_CNTR_PacketSetIntRcvOk>
10059ed6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10059ed8:	2800      	cmp	r0, #0
10059eda:	d00b      	beq.n	10059ef4 <llc_pscan_synchronizing+0x230>
10059edc:	2096      	movs	r0, #150	@ 0x96
10059ede:	2101      	movs	r1, #1
10059ee0:	2200      	movs	r2, #0
10059ee2:	f7eb fdf4 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
10059ee6:	4601      	mov	r1, r0
10059ee8:	4628      	mov	r0, r5
10059eea:	f7ec f85d 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
10059eee:	4628      	mov	r0, r5
10059ef0:	f7ec f869 	bl	10045fc6 <BLEPLAT_CNTR_PacketSetTimer2Active>
10059ef4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
10059ef6:	7871      	ldrb	r1, [r6, #1]
10059ef8:	4628      	mov	r0, r5
10059efa:	f7f4 fd41 	bl	1004e980 <llc_pscan_wr_config_tx_blue_sm_ucfg>
10059efe:	7870      	ldrb	r0, [r6, #1]
10059f00:	2800      	cmp	r0, #0
10059f02:	d003      	beq.n	10059f0c <llc_pscan_synchronizing+0x248>
10059f04:	6820      	ldr	r0, [r4, #0]
10059f06:	f7f4 fda1 	bl	1004ea4c <llc_pscan_wr_set_scheduler_params_ucfg>
10059f0a:	e70a      	b.n	10059d22 <llc_pscan_synchronizing+0x5e>
10059f0c:	6821      	ldr	r1, [r4, #0]
10059f0e:	2084      	movs	r0, #132	@ 0x84
10059f10:	5c08      	ldrb	r0, [r1, r0]
10059f12:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
10059f14:	6b0b      	ldr	r3, [r1, #48]	@ 0x30
10059f16:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
10059f18:	4d21      	ldr	r5, [pc, #132]	@ (10059fa0 <__arm_cp.12_1>)
10059f1a:	9507      	str	r5, [sp, #28]
10059f1c:	4d21      	ldr	r5, [pc, #132]	@ (10059fa4 <__arm_cp.12_2>)
10059f1e:	9506      	str	r5, [sp, #24]
10059f20:	4d21      	ldr	r5, [pc, #132]	@ (10059fa8 <__arm_cp.12_3>)
10059f22:	9505      	str	r5, [sp, #20]
10059f24:	4d21      	ldr	r5, [pc, #132]	@ (10059fac <__arm_cp.12_4>)
10059f26:	9504      	str	r5, [sp, #16]
10059f28:	2507      	movs	r5, #7
10059f2a:	9503      	str	r5, [sp, #12]
10059f2c:	250a      	movs	r5, #10
10059f2e:	9502      	str	r5, [sp, #8]
10059f30:	9300      	str	r3, [sp, #0]
10059f32:	0863      	lsrs	r3, r4, #1
10059f34:	1ad2      	subs	r2, r2, r3
10059f36:	9201      	str	r2, [sp, #4]
10059f38:	227d      	movs	r2, #125	@ 0x7d
10059f3a:	00d3      	lsls	r3, r2, #3
10059f3c:	220d      	movs	r2, #13
10059f3e:	f008 fa51 	bl	100623e4 <LL_sched_enable_taskslot>
10059f42:	e6ee      	b.n	10059d22 <llc_pscan_synchronizing+0x5e>
10059f44:	ccc0      	ldmia	r4!, {r6, r7}
10059f46:	7a38      	ldrb	r0, [r7, #8]
10059f48:	900c      	str	r0, [sp, #48]	@ 0x30
10059f4a:	7b60      	ldrb	r0, [r4, #13]
10059f4c:	3c08      	subs	r4, #8
10059f4e:	f002 fe41 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
10059f52:	4912      	ldr	r1, [pc, #72]	@ (10059f9c <__arm_cp.12_0>)
10059f54:	6809      	ldr	r1, [r1, #0]
10059f56:	6809      	ldr	r1, [r1, #0]
10059f58:	62f1      	str	r1, [r6, #44]	@ 0x2c
10059f5a:	8879      	ldrh	r1, [r7, #2]
10059f5c:	910b      	str	r1, [sp, #44]	@ 0x2c
10059f5e:	f7ec fbc2 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
10059f62:	6af1      	ldr	r1, [r6, #44]	@ 0x2c
10059f64:	1a09      	subs	r1, r1, r0
10059f66:	68e0      	ldr	r0, [r4, #12]
10059f68:	1809      	adds	r1, r1, r0
10059f6a:	62f1      	str	r1, [r6, #44]	@ 0x2c
10059f6c:	7839      	ldrb	r1, [r7, #0]
10059f6e:	7879      	ldrb	r1, [r7, #1]
10059f70:	0689      	lsls	r1, r1, #26
10059f72:	d501      	bpl.n	10059f78 <llc_pscan_synchronizing+0x2b4>
10059f74:	217b      	movs	r1, #123	@ 0x7b
10059f76:	e000      	b.n	10059f7a <llc_pscan_synchronizing+0x2b6>
10059f78:	210c      	movs	r1, #12
10059f7a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10059f7c:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
10059f7e:	1809      	adds	r1, r1, r0
10059f80:	0950      	lsrs	r0, r2, #5
10059f82:	f002 fd07 	bl	1005c994 <llc_calculate_window_widening>
10059f86:	0239      	lsls	r1, r7, #8
10059f88:	393e      	subs	r1, #62	@ 0x3e
10059f8a:	4288      	cmp	r0, r1
10059f8c:	d300      	bcc.n	10059f90 <llc_pscan_synchronizing+0x2cc>
10059f8e:	e6a6      	b.n	10059cde <llc_pscan_synchronizing+0x1a>
10059f90:	2101      	movs	r1, #1
10059f92:	7269      	strb	r1, [r5, #9]
10059f94:	63f0      	str	r0, [r6, #60]	@ 0x3c
10059f96:	6825      	ldr	r5, [r4, #0]
10059f98:	e6cf      	b.n	10059d3a <llc_pscan_synchronizing+0x76>
10059f9a:	46c0      	nop			@ (mov r8, r8)

10059f9c <__arm_cp.12_0>:
10059f9c:	20000894 	.word	0x20000894

10059fa0 <__arm_cp.12_1>:
10059fa0:	10069899 	.word	0x10069899

10059fa4 <__arm_cp.12_2>:
10059fa4:	100591f5 	.word	0x100591f5

10059fa8 <__arm_cp.12_3>:
10059fa8:	10069959 	.word	0x10069959

10059fac <__arm_cp.12_4>:
10059fac:	100699cd 	.word	0x100699cd

10059fb0 <llc_pscan_wrong_cte_type_ucfg_weak>:
10059fb0:	4770      	bx	lr
	...

10059fb4 <llc_pscan_check_sync_info>:
10059fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
10059fb6:	b085      	sub	sp, #20
10059fb8:	4604      	mov	r4, r0
10059fba:	2020      	movs	r0, #32
10059fbc:	5c20      	ldrb	r0, [r4, r0]
10059fbe:	2800      	cmp	r0, #0
10059fc0:	d01a      	beq.n	10059ff8 <llc_pscan_check_sync_info+0x44>
10059fc2:	6861      	ldr	r1, [r4, #4]
10059fc4:	8848      	ldrh	r0, [r1, #2]
10059fc6:	2502      	movs	r5, #2
10059fc8:	2806      	cmp	r0, #6
10059fca:	d369      	bcc.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
10059fcc:	0240      	lsls	r0, r0, #9
10059fce:	6822      	ldr	r2, [r4, #0]
10059fd0:	6b52      	ldr	r2, [r2, #52]	@ 0x34
10059fd2:	4282      	cmp	r2, r0
10059fd4:	d964      	bls.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
10059fd6:	780b      	ldrb	r3, [r1, #0]
10059fd8:	2001      	movs	r0, #1
10059fda:	0382      	lsls	r2, r0, #14
10059fdc:	7849      	ldrb	r1, [r1, #1]
10059fde:	020e      	lsls	r6, r1, #8
10059fe0:	4032      	ands	r2, r6
10059fe2:	271f      	movs	r7, #31
10059fe4:	023f      	lsls	r7, r7, #8
10059fe6:	4037      	ands	r7, r6
10059fe8:	18fb      	adds	r3, r7, r3
10059fea:	0689      	lsls	r1, r1, #26
10059fec:	d43e      	bmi.n	1005a06c <llc_pscan_check_sync_info+0xb8>
10059fee:	2a00      	cmp	r2, #0
10059ff0:	d156      	bne.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
10059ff2:	211e      	movs	r1, #30
10059ff4:	4359      	muls	r1, r3
10059ff6:	e03e      	b.n	1005a076 <llc_pscan_check_sync_info+0xc2>
10059ff8:	6826      	ldr	r6, [r4, #0]
10059ffa:	4637      	mov	r7, r6
10059ffc:	3781      	adds	r7, #129	@ 0x81
10059ffe:	7e20      	ldrb	r0, [r4, #24]
1005a000:	0782      	lsls	r2, r0, #30
1005a002:	0fd2      	lsrs	r2, r2, #31
1005a004:	733a      	strb	r2, [r7, #12]
1005a006:	2501      	movs	r5, #1
1005a008:	4028      	ands	r0, r5
1005a00a:	7620      	strb	r0, [r4, #24]
1005a00c:	2081      	movs	r0, #129	@ 0x81
1005a00e:	5c30      	ldrb	r0, [r6, r0]
1005a010:	07c0      	lsls	r0, r0, #31
1005a012:	d108      	bne.n	1005a026 <llc_pscan_check_sync_info+0x72>
1005a014:	69a0      	ldr	r0, [r4, #24]
1005a016:	69b1      	ldr	r1, [r6, #24]
1005a018:	4281      	cmp	r1, r0
1005a01a:	d141      	bne.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
1005a01c:	69e0      	ldr	r0, [r4, #28]
1005a01e:	69f1      	ldr	r1, [r6, #28]
1005a020:	4281      	cmp	r1, r0
1005a022:	d00e      	beq.n	1005a042 <llc_pscan_check_sync_info+0x8e>
1005a024:	e03c      	b.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
1005a026:	69a0      	ldr	r0, [r4, #24]
1005a028:	9003      	str	r0, [sp, #12]
1005a02a:	69e3      	ldr	r3, [r4, #28]
1005a02c:	68ca      	ldr	r2, [r1, #12]
1005a02e:	6909      	ldr	r1, [r1, #16]
1005a030:	a804      	add	r0, sp, #16
1005a032:	9500      	str	r5, [sp, #0]
1005a034:	9001      	str	r0, [sp, #4]
1005a036:	4610      	mov	r0, r2
1005a038:	9a03      	ldr	r2, [sp, #12]
1005a03a:	f00b fb29 	bl	10065690 <addr8_list_search>
1005a03e:	2800      	cmp	r0, #0
1005a040:	d02e      	beq.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
1005a042:	7b38      	ldrb	r0, [r7, #12]
1005a044:	2800      	cmp	r0, #0
1005a046:	d00b      	beq.n	1005a060 <llc_pscan_check_sync_info+0xac>
1005a048:	f008 f926 	bl	10062298 <LL_get_rx_common_buffer_p>
1005a04c:	2100      	movs	r1, #0
1005a04e:	2201      	movs	r2, #1
1005a050:	6232      	str	r2, [r6, #32]
1005a052:	6271      	str	r1, [r6, #36]	@ 0x24
1005a054:	3621      	adds	r6, #33	@ 0x21
1005a056:	1d01      	adds	r1, r0, #4
1005a058:	2206      	movs	r2, #6
1005a05a:	4630      	mov	r0, r6
1005a05c:	f7ea fca2 	bl	100449a4 <BLEPLAT_MemCpy>
1005a060:	6860      	ldr	r0, [r4, #4]
1005a062:	f7ff fad1 	bl	10059608 <llc_pscan_access_address_already_sync>
1005a066:	2800      	cmp	r0, #0
1005a068:	d11a      	bne.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
1005a06a:	e7aa      	b.n	10059fc2 <llc_pscan_check_sync_info+0xe>
1005a06c:	264b      	movs	r6, #75	@ 0x4b
1005a06e:	00b1      	lsls	r1, r6, #2
1005a070:	4359      	muls	r1, r3
1005a072:	2a00      	cmp	r2, #0
1005a074:	d103      	bne.n	1005a07e <llc_pscan_check_sync_info+0xca>
1005a076:	2900      	cmp	r1, #0
1005a078:	4605      	mov	r5, r0
1005a07a:	d107      	bne.n	1005a08c <llc_pscan_check_sync_info+0xd8>
1005a07c:	e010      	b.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
1005a07e:	4620      	mov	r0, r4
1005a080:	3020      	adds	r0, #32
1005a082:	7800      	ldrb	r0, [r0, #0]
1005a084:	2800      	cmp	r0, #0
1005a086:	d00b      	beq.n	1005a0a0 <llc_pscan_check_sync_info+0xec>
1005a088:	03f0      	lsls	r0, r6, #15
1005a08a:	1809      	adds	r1, r1, r0
1005a08c:	204b      	movs	r0, #75	@ 0x4b
1005a08e:	0080      	lsls	r0, r0, #2
1005a090:	0209      	lsls	r1, r1, #8
1005a092:	1808      	adds	r0, r1, r0
1005a094:	300c      	adds	r0, #12
1005a096:	4904      	ldr	r1, [pc, #16]	@ (1005a0a8 <__arm_cp.15_0>)
1005a098:	f7e6 f8d2 	bl	10040240 <__udivsi3>
1005a09c:	60e0      	str	r0, [r4, #12]
1005a09e:	2500      	movs	r5, #0
1005a0a0:	4628      	mov	r0, r5
1005a0a2:	b005      	add	sp, #20
1005a0a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a0a6:	46c0      	nop			@ (mov r8, r8)

1005a0a8 <__arm_cp.15_0>:
1005a0a8:	00000271 	.word	0x00000271

1005a0ac <llc_pscan_wr_get_cntxt_per_p>:
1005a0ac:	2190      	movs	r1, #144	@ 0x90
1005a0ae:	4341      	muls	r1, r0
1005a0b0:	4805      	ldr	r0, [pc, #20]	@ (1005a0c8 <__arm_cp.0_0>)
1005a0b2:	6800      	ldr	r0, [r0, #0]
1005a0b4:	229c      	movs	r2, #156	@ 0x9c
1005a0b6:	5880      	ldr	r0, [r0, r2]
1005a0b8:	6840      	ldr	r0, [r0, #4]
1005a0ba:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1005a0bc:	6800      	ldr	r0, [r0, #0]
1005a0be:	6800      	ldr	r0, [r0, #0]
1005a0c0:	1840      	adds	r0, r0, r1
1005a0c2:	6940      	ldr	r0, [r0, #20]
1005a0c4:	4770      	bx	lr
1005a0c6:	46c0      	nop			@ (mov r8, r8)

1005a0c8 <__arm_cp.0_0>:
1005a0c8:	20000894 	.word	0x20000894

1005a0cc <llc_pscan_wr_init>:
1005a0cc:	b5b0      	push	{r4, r5, r7, lr}
1005a0ce:	2400      	movs	r4, #0
1005a0d0:	4d04      	ldr	r5, [pc, #16]	@ (1005a0e4 <__arm_cp.3_0>)
1005a0d2:	7fa9      	ldrb	r1, [r5, #30]
1005a0d4:	b2e0      	uxtb	r0, r4
1005a0d6:	4288      	cmp	r0, r1
1005a0d8:	d203      	bcs.n	1005a0e2 <llc_pscan_wr_init+0x16>
1005a0da:	f000 f805 	bl	1005a0e8 <llc_pscan_wr_per_init>
1005a0de:	1c64      	adds	r4, r4, #1
1005a0e0:	e7f7      	b.n	1005a0d2 <llc_pscan_wr_init+0x6>
1005a0e2:	bdb0      	pop	{r4, r5, r7, pc}

1005a0e4 <__arm_cp.3_0>:
1005a0e4:	200008a8 	.word	0x200008a8

1005a0e8 <llc_pscan_wr_per_init>:
1005a0e8:	b570      	push	{r4, r5, r6, lr}
1005a0ea:	f7ff ffdf 	bl	1005a0ac <llc_pscan_wr_get_cntxt_per_p>
1005a0ee:	4604      	mov	r4, r0
1005a0f0:	6946      	ldr	r6, [r0, #20]
1005a0f2:	2500      	movs	r5, #0
1005a0f4:	22b0      	movs	r2, #176	@ 0xb0
1005a0f6:	4629      	mov	r1, r5
1005a0f8:	f7ea fc64 	bl	100449c4 <BLEPLAT_MemSet>
1005a0fc:	2148      	movs	r1, #72	@ 0x48
1005a0fe:	20ff      	movs	r0, #255	@ 0xff
1005a100:	5460      	strb	r0, [r4, r1]
1005a102:	21ac      	movs	r1, #172	@ 0xac
1005a104:	5460      	strb	r0, [r4, r1]
1005a106:	6166      	str	r6, [r4, #20]
1005a108:	3452      	adds	r4, #82	@ 0x52
1005a10a:	2d60      	cmp	r5, #96	@ 0x60
1005a10c:	d002      	beq.n	1005a114 <llc_pscan_wr_per_init+0x2c>
1005a10e:	5560      	strb	r0, [r4, r5]
1005a110:	350c      	adds	r5, #12
1005a112:	e7fa      	b.n	1005a10a <llc_pscan_wr_per_init+0x22>
1005a114:	bd70      	pop	{r4, r5, r6, pc}
	...

1005a118 <llc_pscan_wr_mem_allocate>:
1005a118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005a11a:	2801      	cmp	r0, #1
1005a11c:	d121      	bne.n	1005a162 <llc_pscan_wr_mem_allocate+0x4a>
1005a11e:	2901      	cmp	r1, #1
1005a120:	d11f      	bne.n	1005a162 <llc_pscan_wr_mem_allocate+0x4a>
1005a122:	2a01      	cmp	r2, #1
1005a124:	d11d      	bne.n	1005a162 <llc_pscan_wr_mem_allocate+0x4a>
1005a126:	2b01      	cmp	r3, #1
1005a128:	d11b      	bne.n	1005a162 <llc_pscan_wr_mem_allocate+0x4a>
1005a12a:	9806      	ldr	r0, [sp, #24]
1005a12c:	2801      	cmp	r0, #1
1005a12e:	d118      	bne.n	1005a162 <llc_pscan_wr_mem_allocate+0x4a>
1005a130:	2400      	movs	r4, #0
1005a132:	4620      	mov	r0, r4
1005a134:	f7ff f9aa 	bl	1005948c <llc_pscan_get_cntxt_per_p>
1005a138:	4605      	mov	r5, r0
1005a13a:	3514      	adds	r5, #20
1005a13c:	4f09      	ldr	r7, [pc, #36]	@ (1005a164 <__arm_cp.6_0>)
1005a13e:	7fb8      	ldrb	r0, [r7, #30]
1005a140:	4284      	cmp	r4, r0
1005a142:	d20e      	bcs.n	1005a162 <llc_pscan_wr_mem_allocate+0x4a>
1005a144:	2601      	movs	r6, #1
1005a146:	21b0      	movs	r1, #176	@ 0xb0
1005a148:	4630      	mov	r0, r6
1005a14a:	f008 fe73 	bl	10062e34 <csmem_mem_0_assign>
1005a14e:	6028      	str	r0, [r5, #0]
1005a150:	7ef9      	ldrb	r1, [r7, #27]
1005a152:	4630      	mov	r0, r6
1005a154:	f008 fe6e 	bl	10062e34 <csmem_mem_0_assign>
1005a158:	6829      	ldr	r1, [r5, #0]
1005a15a:	6148      	str	r0, [r1, #20]
1005a15c:	3590      	adds	r5, #144	@ 0x90
1005a15e:	1c64      	adds	r4, r4, #1
1005a160:	e7ed      	b.n	1005a13e <llc_pscan_wr_mem_allocate+0x26>
1005a162:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005a164 <__arm_cp.6_0>:
1005a164:	200008a8 	.word	0x200008a8

1005a168 <llc_pscan_wr_calculate_packet_duration>:
1005a168:	b580      	push	{r7, lr}
1005a16a:	460b      	mov	r3, r1
1005a16c:	0640      	lsls	r0, r0, #25
1005a16e:	d501      	bpl.n	1005a174 <llc_pscan_wr_calculate_packet_duration+0xc>
1005a170:	2003      	movs	r0, #3
1005a172:	e000      	b.n	1005a176 <llc_pscan_wr_calculate_packet_duration+0xe>
1005a174:	2001      	movs	r0, #1
1005a176:	1880      	adds	r0, r0, r2
1005a178:	b2c1      	uxtb	r1, r0
1005a17a:	2200      	movs	r2, #0
1005a17c:	4618      	mov	r0, r3
1005a17e:	f002 fd37 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
1005a182:	bd80      	pop	{r7, pc}

1005a184 <llc_pscan_wr_discard_rsp_data>:
1005a184:	b510      	push	{r4, lr}
1005a186:	4604      	mov	r4, r0
1005a188:	6801      	ldr	r1, [r0, #0]
1005a18a:	2080      	movs	r0, #128	@ 0x80
1005a18c:	2201      	movs	r2, #1
1005a18e:	f00c fdb7 	bl	10066d00 <aci_hal_pawr_data_free_event_push_noinline>
1005a192:	20ff      	movs	r0, #255	@ 0xff
1005a194:	71a0      	strb	r0, [r4, #6]
1005a196:	bd10      	pop	{r4, pc}

1005a198 <llc_pscan_wr_get_next_rsp_data>:
1005a198:	b5b0      	push	{r4, r5, r7, lr}
1005a19a:	2300      	movs	r3, #0
1005a19c:	24ff      	movs	r4, #255	@ 0xff
1005a19e:	2b08      	cmp	r3, #8
1005a1a0:	d00a      	beq.n	1005a1b8 <llc_pscan_wr_get_next_rsp_data+0x20>
1005a1a2:	7985      	ldrb	r5, [r0, #6]
1005a1a4:	4295      	cmp	r5, r2
1005a1a6:	d002      	beq.n	1005a1ae <llc_pscan_wr_get_next_rsp_data+0x16>
1005a1a8:	300c      	adds	r0, #12
1005a1aa:	1c5b      	adds	r3, r3, #1
1005a1ac:	e7f6      	b.n	1005a19c <llc_pscan_wr_get_next_rsp_data+0x4>
1005a1ae:	8882      	ldrh	r2, [r0, #4]
1005a1b0:	428a      	cmp	r2, r1
1005a1b2:	d002      	beq.n	1005a1ba <llc_pscan_wr_get_next_rsp_data+0x22>
1005a1b4:	f7ff ffe6 	bl	1005a184 <llc_pscan_wr_discard_rsp_data>
1005a1b8:	4623      	mov	r3, r4
1005a1ba:	b2d8      	uxtb	r0, r3
1005a1bc:	bdb0      	pop	{r4, r5, r7, pc}

1005a1be <llc_pscan_wr_get_next_subevent>:
1005a1be:	b570      	push	{r4, r5, r6, lr}
1005a1c0:	4614      	mov	r4, r2
1005a1c2:	460d      	mov	r5, r1
1005a1c4:	4606      	mov	r6, r0
1005a1c6:	b2f0      	uxtb	r0, r6
1005a1c8:	1c40      	adds	r0, r0, #1
1005a1ca:	4629      	mov	r1, r5
1005a1cc:	f7e6 f8be 	bl	1004034c <__aeabi_uidivmod>
1005a1d0:	460e      	mov	r6, r1
1005a1d2:	4608      	mov	r0, r1
1005a1d4:	4621      	mov	r1, r4
1005a1d6:	f000 f804 	bl	1005a1e2 <llc_pscan_wr_search_subevent>
1005a1da:	2800      	cmp	r0, #0
1005a1dc:	d0f3      	beq.n	1005a1c6 <llc_pscan_wr_get_next_subevent+0x8>
1005a1de:	b2f0      	uxtb	r0, r6
1005a1e0:	bd70      	pop	{r4, r5, r6, pc}

1005a1e2 <llc_pscan_wr_search_subevent>:
1005a1e2:	2820      	cmp	r0, #32
1005a1e4:	d201      	bcs.n	1005a1ea <llc_pscan_wr_search_subevent+0x8>
1005a1e6:	2200      	movs	r2, #0
1005a1e8:	e009      	b.n	1005a1fe <llc_pscan_wr_search_subevent+0x1c>
1005a1ea:	2860      	cmp	r0, #96	@ 0x60
1005a1ec:	d301      	bcc.n	1005a1f2 <llc_pscan_wr_search_subevent+0x10>
1005a1ee:	2203      	movs	r2, #3
1005a1f0:	e000      	b.n	1005a1f4 <llc_pscan_wr_search_subevent+0x12>
1005a1f2:	2202      	movs	r2, #2
1005a1f4:	2840      	cmp	r0, #64	@ 0x40
1005a1f6:	d200      	bcs.n	1005a1fa <llc_pscan_wr_search_subevent+0x18>
1005a1f8:	2201      	movs	r2, #1
1005a1fa:	231f      	movs	r3, #31
1005a1fc:	4018      	ands	r0, r3
1005a1fe:	0092      	lsls	r2, r2, #2
1005a200:	5889      	ldr	r1, [r1, r2]
1005a202:	40c1      	lsrs	r1, r0
1005a204:	2001      	movs	r0, #1
1005a206:	4008      	ands	r0, r1
1005a208:	4770      	bx	lr
	...

1005a20c <llc_pscan_wr_push_padv_report_v2_event>:
1005a20c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a20e:	b087      	sub	sp, #28
1005a210:	4926      	ldr	r1, [pc, #152]	@ (1005a2ac <__arm_cp.6_0>)
1005a212:	6809      	ldr	r1, [r1, #0]
1005a214:	223d      	movs	r2, #61	@ 0x3d
1005a216:	5c8a      	ldrb	r2, [r1, r2]
1005a218:	0692      	lsls	r2, r2, #26
1005a21a:	d545      	bpl.n	1005a2a8 <llc_pscan_wr_push_padv_report_v2_event+0x9c>
1005a21c:	313d      	adds	r1, #61	@ 0x3d
1005a21e:	7b49      	ldrb	r1, [r1, #13]
1005a220:	06c9      	lsls	r1, r1, #27
1005a222:	d541      	bpl.n	1005a2a8 <llc_pscan_wr_push_padv_report_v2_event+0x9c>
1005a224:	6801      	ldr	r1, [r0, #0]
1005a226:	9106      	str	r1, [sp, #24]
1005a228:	7a84      	ldrb	r4, [r0, #10]
1005a22a:	7ac1      	ldrb	r1, [r0, #11]
1005a22c:	9104      	str	r1, [sp, #16]
1005a22e:	7a01      	ldrb	r1, [r0, #8]
1005a230:	9105      	str	r1, [sp, #20]
1005a232:	88c7      	ldrh	r7, [r0, #6]
1005a234:	7a41      	ldrb	r1, [r0, #9]
1005a236:	9101      	str	r1, [sp, #4]
1005a238:	7b41      	ldrb	r1, [r0, #13]
1005a23a:	9102      	str	r1, [sp, #8]
1005a23c:	7b01      	ldrb	r1, [r0, #12]
1005a23e:	9103      	str	r1, [sp, #12]
1005a240:	8885      	ldrh	r5, [r0, #4]
1005a242:	1e60      	subs	r0, r4, #1
1005a244:	2103      	movs	r1, #3
1005a246:	4301      	orrs	r1, r0
1005a248:	3111      	adds	r1, #17
1005a24a:	0888      	lsrs	r0, r1, #2
1005a24c:	b283      	uxth	r3, r0
1005a24e:	4818      	ldr	r0, [pc, #96]	@ (1005a2b0 <__arm_cp.6_1>)
1005a250:	6800      	ldr	r0, [r0, #0]
1005a252:	6940      	ldr	r0, [r0, #20]
1005a254:	21a1      	movs	r1, #161	@ 0xa1
1005a256:	223b      	movs	r2, #59	@ 0x3b
1005a258:	f7f6 f852 	bl	10050300 <aci_event_fifo_push_header>
1005a25c:	2800      	cmp	r0, #0
1005a25e:	d023      	beq.n	1005a2a8 <llc_pscan_wr_push_padv_report_v2_event+0x9c>
1005a260:	4606      	mov	r6, r0
1005a262:	7347      	strb	r7, [r0, #13]
1005a264:	7205      	strb	r5, [r0, #8]
1005a266:	7444      	strb	r4, [r0, #17]
1005a268:	9804      	ldr	r0, [sp, #16]
1005a26a:	7430      	strb	r0, [r6, #16]
1005a26c:	9805      	ldr	r0, [sp, #20]
1005a26e:	73f0      	strb	r0, [r6, #15]
1005a270:	9801      	ldr	r0, [sp, #4]
1005a272:	7330      	strb	r0, [r6, #12]
1005a274:	9802      	ldr	r0, [sp, #8]
1005a276:	72f0      	strb	r0, [r6, #11]
1005a278:	9803      	ldr	r0, [sp, #12]
1005a27a:	72b0      	strb	r0, [r6, #10]
1005a27c:	0a38      	lsrs	r0, r7, #8
1005a27e:	73b0      	strb	r0, [r6, #14]
1005a280:	0a28      	lsrs	r0, r5, #8
1005a282:	7270      	strb	r0, [r6, #9]
1005a284:	4630      	mov	r0, r6
1005a286:	3012      	adds	r0, #18
1005a288:	9906      	ldr	r1, [sp, #24]
1005a28a:	4622      	mov	r2, r4
1005a28c:	f7ea fb8a 	bl	100449a4 <BLEPLAT_MemCpy>
1005a290:	2025      	movs	r0, #37	@ 0x25
1005a292:	71f0      	strb	r0, [r6, #7]
1005a294:	340b      	adds	r4, #11
1005a296:	71b4      	strb	r4, [r6, #6]
1005a298:	203e      	movs	r0, #62	@ 0x3e
1005a29a:	7170      	strb	r0, [r6, #5]
1005a29c:	2004      	movs	r0, #4
1005a29e:	7130      	strb	r0, [r6, #4]
1005a2a0:	20a1      	movs	r0, #161	@ 0xa1
1005a2a2:	4631      	mov	r1, r6
1005a2a4:	f7f6 f8c9 	bl	1005043a <aci_event_fifo_push>
1005a2a8:	b007      	add	sp, #28
1005a2aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005a2ac <__arm_cp.6_0>:
1005a2ac:	20000894 	.word	0x20000894

1005a2b0 <__arm_cp.6_1>:
1005a2b0:	20000840 	.word	0x20000840

1005a2b4 <llc_pscan_wr_push_past_received_v2_event>:
1005a2b4:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a2b6:	b08b      	sub	sp, #44	@ 0x2c
1005a2b8:	4930      	ldr	r1, [pc, #192]	@ (1005a37c <__arm_cp.7_0>)
1005a2ba:	6809      	ldr	r1, [r1, #0]
1005a2bc:	223d      	movs	r2, #61	@ 0x3d
1005a2be:	5c8a      	ldrb	r2, [r1, r2]
1005a2c0:	0692      	lsls	r2, r2, #26
1005a2c2:	d558      	bpl.n	1005a376 <llc_pscan_wr_push_past_received_v2_event+0xc2>
1005a2c4:	313d      	adds	r1, #61	@ 0x3d
1005a2c6:	7b49      	ldrb	r1, [r1, #13]
1005a2c8:	0689      	lsls	r1, r1, #26
1005a2ca:	d554      	bpl.n	1005a376 <llc_pscan_wr_push_past_received_v2_event+0xc2>
1005a2cc:	7d01      	ldrb	r1, [r0, #20]
1005a2ce:	9106      	str	r1, [sp, #24]
1005a2d0:	7cc1      	ldrb	r1, [r0, #19]
1005a2d2:	9107      	str	r1, [sp, #28]
1005a2d4:	7c81      	ldrb	r1, [r0, #18]
1005a2d6:	9108      	str	r1, [sp, #32]
1005a2d8:	7c41      	ldrb	r1, [r0, #17]
1005a2da:	9109      	str	r1, [sp, #36]	@ 0x24
1005a2dc:	7bc1      	ldrb	r1, [r0, #15]
1005a2de:	910a      	str	r1, [sp, #40]	@ 0x28
1005a2e0:	88c1      	ldrh	r1, [r0, #6]
1005a2e2:	9104      	str	r1, [sp, #16]
1005a2e4:	7b81      	ldrb	r1, [r0, #14]
1005a2e6:	9105      	str	r1, [sp, #20]
1005a2e8:	6801      	ldr	r1, [r0, #0]
1005a2ea:	9103      	str	r1, [sp, #12]
1005a2ec:	7b41      	ldrb	r1, [r0, #13]
1005a2ee:	9101      	str	r1, [sp, #4]
1005a2f0:	7c01      	ldrb	r1, [r0, #16]
1005a2f2:	9102      	str	r1, [sp, #8]
1005a2f4:	8947      	ldrh	r7, [r0, #10]
1005a2f6:	8905      	ldrh	r5, [r0, #8]
1005a2f8:	8886      	ldrh	r6, [r0, #4]
1005a2fa:	7b00      	ldrb	r0, [r0, #12]
1005a2fc:	9000      	str	r0, [sp, #0]
1005a2fe:	4820      	ldr	r0, [pc, #128]	@ (1005a380 <__arm_cp.7_1>)
1005a300:	6800      	ldr	r0, [r0, #0]
1005a302:	6900      	ldr	r0, [r0, #16]
1005a304:	2180      	movs	r1, #128	@ 0x80
1005a306:	223c      	movs	r2, #60	@ 0x3c
1005a308:	2307      	movs	r3, #7
1005a30a:	f7f5 fff9 	bl	10050300 <aci_event_fifo_push_header>
1005a30e:	2800      	cmp	r0, #0
1005a310:	d031      	beq.n	1005a376 <llc_pscan_wr_push_past_received_v2_event+0xc2>
1005a312:	4604      	mov	r4, r0
1005a314:	7347      	strb	r7, [r0, #13]
1005a316:	72c5      	strb	r5, [r0, #11]
1005a318:	7246      	strb	r6, [r0, #9]
1005a31a:	9801      	ldr	r0, [sp, #4]
1005a31c:	7420      	strb	r0, [r4, #16]
1005a31e:	9802      	ldr	r0, [sp, #8]
1005a320:	73e0      	strb	r0, [r4, #15]
1005a322:	9800      	ldr	r0, [sp, #0]
1005a324:	7220      	strb	r0, [r4, #8]
1005a326:	0a38      	lsrs	r0, r7, #8
1005a328:	73a0      	strb	r0, [r4, #14]
1005a32a:	0a28      	lsrs	r0, r5, #8
1005a32c:	7320      	strb	r0, [r4, #12]
1005a32e:	0a30      	lsrs	r0, r6, #8
1005a330:	72a0      	strb	r0, [r4, #10]
1005a332:	4620      	mov	r0, r4
1005a334:	3011      	adds	r0, #17
1005a336:	2206      	movs	r2, #6
1005a338:	9903      	ldr	r1, [sp, #12]
1005a33a:	f7ea fb33 	bl	100449a4 <BLEPLAT_MemCpy>
1005a33e:	9904      	ldr	r1, [sp, #16]
1005a340:	0a08      	lsrs	r0, r1, #8
1005a342:	7660      	strb	r0, [r4, #25]
1005a344:	7621      	strb	r1, [r4, #24]
1005a346:	9806      	ldr	r0, [sp, #24]
1005a348:	77a0      	strb	r0, [r4, #30]
1005a34a:	9807      	ldr	r0, [sp, #28]
1005a34c:	7760      	strb	r0, [r4, #29]
1005a34e:	9808      	ldr	r0, [sp, #32]
1005a350:	7720      	strb	r0, [r4, #28]
1005a352:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005a354:	76e0      	strb	r0, [r4, #27]
1005a356:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005a358:	76a0      	strb	r0, [r4, #26]
1005a35a:	9805      	ldr	r0, [sp, #20]
1005a35c:	75e0      	strb	r0, [r4, #23]
1005a35e:	2026      	movs	r0, #38	@ 0x26
1005a360:	71e0      	strb	r0, [r4, #7]
1005a362:	2018      	movs	r0, #24
1005a364:	71a0      	strb	r0, [r4, #6]
1005a366:	203e      	movs	r0, #62	@ 0x3e
1005a368:	7160      	strb	r0, [r4, #5]
1005a36a:	2004      	movs	r0, #4
1005a36c:	7120      	strb	r0, [r4, #4]
1005a36e:	2080      	movs	r0, #128	@ 0x80
1005a370:	4621      	mov	r1, r4
1005a372:	f7f6 f862 	bl	1005043a <aci_event_fifo_push>
1005a376:	b00b      	add	sp, #44	@ 0x2c
1005a378:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a37a:	46c0      	nop			@ (mov r8, r8)

1005a37c <__arm_cp.7_0>:
1005a37c:	20000894 	.word	0x20000894

1005a380 <__arm_cp.7_1>:
1005a380:	20000840 	.word	0x20000840

1005a384 <llc_pscan_wr_push_sync_established_v2_event>:
1005a384:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a386:	b089      	sub	sp, #36	@ 0x24
1005a388:	492a      	ldr	r1, [pc, #168]	@ (1005a434 <__arm_cp.8_0>)
1005a38a:	6809      	ldr	r1, [r1, #0]
1005a38c:	223d      	movs	r2, #61	@ 0x3d
1005a38e:	5c8a      	ldrb	r2, [r1, r2]
1005a390:	0692      	lsls	r2, r2, #26
1005a392:	d54c      	bpl.n	1005a42e <llc_pscan_wr_push_sync_established_v2_event+0xaa>
1005a394:	313d      	adds	r1, #61	@ 0x3d
1005a396:	7b49      	ldrb	r1, [r1, #13]
1005a398:	0709      	lsls	r1, r1, #28
1005a39a:	d548      	bpl.n	1005a42e <llc_pscan_wr_push_sync_established_v2_event+0xaa>
1005a39c:	7d01      	ldrb	r1, [r0, #20]
1005a39e:	9104      	str	r1, [sp, #16]
1005a3a0:	7cc1      	ldrb	r1, [r0, #19]
1005a3a2:	9105      	str	r1, [sp, #20]
1005a3a4:	7c81      	ldrb	r1, [r0, #18]
1005a3a6:	9106      	str	r1, [sp, #24]
1005a3a8:	7c41      	ldrb	r1, [r0, #17]
1005a3aa:	9107      	str	r1, [sp, #28]
1005a3ac:	7bc1      	ldrb	r1, [r0, #15]
1005a3ae:	9108      	str	r1, [sp, #32]
1005a3b0:	88c7      	ldrh	r7, [r0, #6]
1005a3b2:	7b81      	ldrb	r1, [r0, #14]
1005a3b4:	9103      	str	r1, [sp, #12]
1005a3b6:	6801      	ldr	r1, [r0, #0]
1005a3b8:	9102      	str	r1, [sp, #8]
1005a3ba:	7b41      	ldrb	r1, [r0, #13]
1005a3bc:	9100      	str	r1, [sp, #0]
1005a3be:	7c01      	ldrb	r1, [r0, #16]
1005a3c0:	9101      	str	r1, [sp, #4]
1005a3c2:	8946      	ldrh	r6, [r0, #10]
1005a3c4:	7b05      	ldrb	r5, [r0, #12]
1005a3c6:	481c      	ldr	r0, [pc, #112]	@ (1005a438 <__arm_cp.8_1>)
1005a3c8:	6800      	ldr	r0, [r0, #0]
1005a3ca:	6900      	ldr	r0, [r0, #16]
1005a3cc:	2180      	movs	r1, #128	@ 0x80
1005a3ce:	223a      	movs	r2, #58	@ 0x3a
1005a3d0:	2306      	movs	r3, #6
1005a3d2:	f7f5 ff95 	bl	10050300 <aci_event_fifo_push_header>
1005a3d6:	2800      	cmp	r0, #0
1005a3d8:	d029      	beq.n	1005a42e <llc_pscan_wr_push_sync_established_v2_event+0xaa>
1005a3da:	4604      	mov	r4, r0
1005a3dc:	7246      	strb	r6, [r0, #9]
1005a3de:	9800      	ldr	r0, [sp, #0]
1005a3e0:	7320      	strb	r0, [r4, #12]
1005a3e2:	9801      	ldr	r0, [sp, #4]
1005a3e4:	72e0      	strb	r0, [r4, #11]
1005a3e6:	7225      	strb	r5, [r4, #8]
1005a3e8:	0a30      	lsrs	r0, r6, #8
1005a3ea:	72a0      	strb	r0, [r4, #10]
1005a3ec:	4620      	mov	r0, r4
1005a3ee:	300d      	adds	r0, #13
1005a3f0:	2206      	movs	r2, #6
1005a3f2:	9902      	ldr	r1, [sp, #8]
1005a3f4:	f7ea fad6 	bl	100449a4 <BLEPLAT_MemCpy>
1005a3f8:	0a38      	lsrs	r0, r7, #8
1005a3fa:	7560      	strb	r0, [r4, #21]
1005a3fc:	7527      	strb	r7, [r4, #20]
1005a3fe:	9804      	ldr	r0, [sp, #16]
1005a400:	76a0      	strb	r0, [r4, #26]
1005a402:	9805      	ldr	r0, [sp, #20]
1005a404:	7660      	strb	r0, [r4, #25]
1005a406:	9806      	ldr	r0, [sp, #24]
1005a408:	7620      	strb	r0, [r4, #24]
1005a40a:	9807      	ldr	r0, [sp, #28]
1005a40c:	75e0      	strb	r0, [r4, #23]
1005a40e:	9808      	ldr	r0, [sp, #32]
1005a410:	75a0      	strb	r0, [r4, #22]
1005a412:	9803      	ldr	r0, [sp, #12]
1005a414:	74e0      	strb	r0, [r4, #19]
1005a416:	2024      	movs	r0, #36	@ 0x24
1005a418:	71e0      	strb	r0, [r4, #7]
1005a41a:	2014      	movs	r0, #20
1005a41c:	71a0      	strb	r0, [r4, #6]
1005a41e:	203e      	movs	r0, #62	@ 0x3e
1005a420:	7160      	strb	r0, [r4, #5]
1005a422:	2004      	movs	r0, #4
1005a424:	7120      	strb	r0, [r4, #4]
1005a426:	2080      	movs	r0, #128	@ 0x80
1005a428:	4621      	mov	r1, r4
1005a42a:	f7f6 f806 	bl	1005043a <aci_event_fifo_push>
1005a42e:	b009      	add	sp, #36	@ 0x24
1005a430:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a432:	46c0      	nop			@ (mov r8, r8)

1005a434 <__arm_cp.8_0>:
1005a434:	20000894 	.word	0x20000894

1005a438 <__arm_cp.8_1>:
1005a438:	20000840 	.word	0x20000840

1005a43c <llc_pscan_wr_set_subevents>:
1005a43c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a43e:	221f      	movs	r2, #31
1005a440:	4002      	ands	r2, r0
1005a442:	2320      	movs	r3, #32
1005a444:	1a9e      	subs	r6, r3, r2
1005a446:	2300      	movs	r3, #0
1005a448:	43dc      	mvns	r4, r3
1005a44a:	4625      	mov	r5, r4
1005a44c:	40f5      	lsrs	r5, r6
1005a44e:	1e40      	subs	r0, r0, #1
1005a450:	0940      	lsrs	r0, r0, #5
1005a452:	b2c0      	uxtb	r0, r0
1005a454:	2b04      	cmp	r3, #4
1005a456:	d00d      	beq.n	1005a474 <llc_pscan_wr_set_subevents+0x38>
1005a458:	2a00      	cmp	r2, #0
1005a45a:	4627      	mov	r7, r4
1005a45c:	d000      	beq.n	1005a460 <llc_pscan_wr_set_subevents+0x24>
1005a45e:	462f      	mov	r7, r5
1005a460:	4298      	cmp	r0, r3
1005a462:	4626      	mov	r6, r4
1005a464:	d100      	bne.n	1005a468 <llc_pscan_wr_set_subevents+0x2c>
1005a466:	463e      	mov	r6, r7
1005a468:	4298      	cmp	r0, r3
1005a46a:	d200      	bcs.n	1005a46e <llc_pscan_wr_set_subevents+0x32>
1005a46c:	2600      	movs	r6, #0
1005a46e:	c140      	stmia	r1!, {r6}
1005a470:	1c5b      	adds	r3, r3, #1
1005a472:	e7ef      	b.n	1005a454 <llc_pscan_wr_set_subevents+0x18>
1005a474:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005a476 <llc_pscan_wr_update_taskslot_params>:
1005a476:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005a478:	460e      	mov	r6, r1
1005a47a:	4604      	mov	r4, r0
1005a47c:	6945      	ldr	r5, [r0, #20]
1005a47e:	203e      	movs	r0, #62	@ 0x3e
1005a480:	5c29      	ldrb	r1, [r5, r0]
1005a482:	4628      	mov	r0, r5
1005a484:	303e      	adds	r0, #62	@ 0x3e
1005a486:	9002      	str	r0, [sp, #8]
1005a488:	7847      	ldrb	r7, [r0, #1]
1005a48a:	462a      	mov	r2, r5
1005a48c:	3218      	adds	r2, #24
1005a48e:	4638      	mov	r0, r7
1005a490:	f7ff fe95 	bl	1005a1be <llc_pscan_wr_get_next_subevent>
1005a494:	4622      	mov	r2, r4
1005a496:	3281      	adds	r2, #129	@ 0x81
1005a498:	42b8      	cmp	r0, r7
1005a49a:	9201      	str	r2, [sp, #4]
1005a49c:	9000      	str	r0, [sp, #0]
1005a49e:	d906      	bls.n	1005a4ae <llc_pscan_wr_update_taskslot_params+0x38>
1005a4a0:	1bc0      	subs	r0, r0, r7
1005a4a2:	6b6f      	ldr	r7, [r5, #52]	@ 0x34
1005a4a4:	4347      	muls	r7, r0
1005a4a6:	7810      	ldrb	r0, [r2, #0]
1005a4a8:	0700      	lsls	r0, r0, #28
1005a4aa:	d513      	bpl.n	1005a4d4 <llc_pscan_wr_update_taskslot_params+0x5e>
1005a4ac:	e019      	b.n	1005a4e2 <llc_pscan_wr_update_taskslot_params+0x6c>
1005a4ae:	4623      	mov	r3, r4
1005a4b0:	3340      	adds	r3, #64	@ 0x40
1005a4b2:	2100      	movs	r1, #0
1005a4b4:	7051      	strb	r1, [r2, #1]
1005a4b6:	8899      	ldrh	r1, [r3, #4]
1005a4b8:	1989      	adds	r1, r1, r6
1005a4ba:	8099      	strh	r1, [r3, #4]
1005a4bc:	8819      	ldrh	r1, [r3, #0]
1005a4be:	1c49      	adds	r1, r1, #1
1005a4c0:	8019      	strh	r1, [r3, #0]
1005a4c2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
1005a4c4:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1005a4c6:	4371      	muls	r1, r6
1005a4c8:	1852      	adds	r2, r2, r1
1005a4ca:	62e2      	str	r2, [r4, #44]	@ 0x2c
1005a4cc:	1bc0      	subs	r0, r0, r7
1005a4ce:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
1005a4d0:	4342      	muls	r2, r0
1005a4d2:	1857      	adds	r7, r2, r1
1005a4d4:	4620      	mov	r0, r4
1005a4d6:	4639      	mov	r1, r7
1005a4d8:	4632      	mov	r2, r6
1005a4da:	f7ff faf8 	bl	10059ace <llc_pscan_update_sync_counter>
1005a4de:	2800      	cmp	r0, #0
1005a4e0:	d014      	beq.n	1005a50c <llc_pscan_wr_update_taskslot_params+0x96>
1005a4e2:	4620      	mov	r0, r4
1005a4e4:	4639      	mov	r1, r7
1005a4e6:	f7ff fb03 	bl	10059af0 <llc_pscan_update_window_widening>
1005a4ea:	2800      	cmp	r0, #0
1005a4ec:	d00e      	beq.n	1005a50c <llc_pscan_wr_update_taskslot_params+0x96>
1005a4ee:	4606      	mov	r6, r0
1005a4f0:	9802      	ldr	r0, [sp, #8]
1005a4f2:	9900      	ldr	r1, [sp, #0]
1005a4f4:	7041      	strb	r1, [r0, #1]
1005a4f6:	6aa8      	ldr	r0, [r5, #40]	@ 0x28
1005a4f8:	19c0      	adds	r0, r0, r7
1005a4fa:	62a8      	str	r0, [r5, #40]	@ 0x28
1005a4fc:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
1005a4fe:	0849      	lsrs	r1, r1, #1
1005a500:	1a41      	subs	r1, r0, r1
1005a502:	9801      	ldr	r0, [sp, #4]
1005a504:	78c0      	ldrb	r0, [r0, #3]
1005a506:	f007 ff49 	bl	1006239c <LL_sched_set_anchor>
1005a50a:	e000      	b.n	1005a50e <llc_pscan_wr_update_taskslot_params+0x98>
1005a50c:	2600      	movs	r6, #0
1005a50e:	4630      	mov	r0, r6
1005a510:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
	...

1005a514 <llc_pscan_wr_config_tx_blue_sm>:
1005a514:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005a516:	2900      	cmp	r1, #0
1005a518:	d06c      	beq.n	1005a5f4 <llc_pscan_wr_config_tx_blue_sm+0xe0>
1005a51a:	4604      	mov	r4, r0
1005a51c:	3053      	adds	r0, #83	@ 0x53
1005a51e:	9001      	str	r0, [sp, #4]
1005a520:	4626      	mov	r6, r4
1005a522:	3683      	adds	r6, #131	@ 0x83
1005a524:	6965      	ldr	r5, [r4, #20]
1005a526:	7830      	ldrb	r0, [r6, #0]
1005a528:	f002 fb54 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
1005a52c:	4607      	mov	r7, r0
1005a52e:	9002      	str	r0, [sp, #8]
1005a530:	7876      	ldrb	r6, [r6, #1]
1005a532:	4630      	mov	r0, r6
1005a534:	4629      	mov	r1, r5
1005a536:	f7ec f864 	bl	10046602 <BLEPLAT_CNTR_SmSetTxPacketPtr>
1005a53a:	4630      	mov	r0, r6
1005a53c:	4639      	mov	r1, r7
1005a53e:	f7ec f872 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
1005a542:	4628      	mov	r0, r5
1005a544:	f7eb fc3c 	bl	10045dc0 <BLEPLAT_CNTR_PacketInitTo0>
1005a548:	4628      	mov	r0, r5
1005a54a:	f7eb fc47 	bl	10045ddc <BLEPLAT_CNTR_PacketSetAdvPduFormat>
1005a54e:	4628      	mov	r0, r5
1005a550:	f7eb fcc3 	bl	10045eda <BLEPLAT_CNTR_PacketSetKeepsemareq>
1005a554:	4628      	mov	r0, r5
1005a556:	4629      	mov	r1, r5
1005a558:	f7eb fccc 	bl	10045ef4 <BLEPLAT_CNTR_PacketSetNextPtr>
1005a55c:	f007 fe94 	bl	10062288 <LL_get_tx_common_buffer_p>
1005a560:	4601      	mov	r1, r0
1005a562:	4628      	mov	r0, r5
1005a564:	f7eb fc61 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
1005a568:	4628      	mov	r0, r5
1005a56a:	f7eb fc03 	bl	10045d74 <BLEPLAT_CNTR_PacketClrIncChan>
1005a56e:	4628      	mov	r0, r5
1005a570:	f7eb fc82 	bl	10045e78 <BLEPLAT_CNTR_PacketSetIntDone>
1005a574:	4628      	mov	r0, r5
1005a576:	f7eb fc3e 	bl	10045df6 <BLEPLAT_CNTR_PacketSetCrcinitSel>
1005a57a:	4628      	mov	r0, r5
1005a57c:	f7eb fd49 	bl	10046012 <BLEPLAT_CNTR_PacketSetTxReady>
1005a580:	4628      	mov	r0, r5
1005a582:	f7eb fd2c 	bl	10045fde <BLEPLAT_CNTR_PacketSetTimerTrigDone>
1005a586:	4628      	mov	r0, r5
1005a588:	4631      	mov	r1, r6
1005a58a:	f7eb fccf 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
1005a58e:	4628      	mov	r0, r5
1005a590:	f7eb fcbf 	bl	10045f12 <BLEPLAT_CNTR_PacketSetNextRxMode>
1005a594:	4628      	mov	r0, r5
1005a596:	f7eb fced 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005a59a:	6960      	ldr	r0, [r4, #20]
1005a59c:	21ac      	movs	r1, #172	@ 0xac
1005a59e:	5c47      	ldrb	r7, [r0, r1]
1005a5a0:	6b86      	ldr	r6, [r0, #56]	@ 0x38
1005a5a2:	4638      	mov	r0, r7
1005a5a4:	f7eb fec2 	bl	1004632c <BLEPLAT_CNTR_SmInitTo0>
1005a5a8:	4638      	mov	r0, r7
1005a5aa:	4631      	mov	r1, r6
1005a5ac:	f7eb fedc 	bl	10046368 <BLEPLAT_CNTR_SmSetAccessAddr>
1005a5b0:	9a01      	ldr	r2, [sp, #4]
1005a5b2:	7810      	ldrb	r0, [r2, #0]
1005a5b4:	7851      	ldrb	r1, [r2, #1]
1005a5b6:	0209      	lsls	r1, r1, #8
1005a5b8:	1808      	adds	r0, r1, r0
1005a5ba:	7891      	ldrb	r1, [r2, #2]
1005a5bc:	0409      	lsls	r1, r1, #16
1005a5be:	1841      	adds	r1, r0, r1
1005a5c0:	4638      	mov	r0, r7
1005a5c2:	f7eb ff14 	bl	100463ee <BLEPLAT_CNTR_SmSetCrcInit>
1005a5c6:	480c      	ldr	r0, [pc, #48]	@ (1005a5f8 <__arm_cp.13_0>)
1005a5c8:	6800      	ldr	r0, [r0, #0]
1005a5ca:	7a41      	ldrb	r1, [r0, #9]
1005a5cc:	4638      	mov	r0, r7
1005a5ce:	f7ec f83f 	bl	10046650 <BLEPLAT_CNTR_SmSetTxPwr>
1005a5d2:	2100      	movs	r1, #0
1005a5d4:	4638      	mov	r0, r7
1005a5d6:	f7eb ff31 	bl	1004643c <BLEPLAT_CNTR_SmSetHopIncr>
1005a5da:	344e      	adds	r4, #78	@ 0x4e
1005a5dc:	4638      	mov	r0, r7
1005a5de:	4621      	mov	r1, r4
1005a5e0:	f7eb fed4 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
1005a5e4:	4638      	mov	r0, r7
1005a5e6:	4629      	mov	r1, r5
1005a5e8:	f7ec f80b 	bl	10046602 <BLEPLAT_CNTR_SmSetTxPacketPtr>
1005a5ec:	4638      	mov	r0, r7
1005a5ee:	9902      	ldr	r1, [sp, #8]
1005a5f0:	f7ec f819 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
1005a5f4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005a5f6:	46c0      	nop			@ (mov r8, r8)

1005a5f8 <__arm_cp.13_0>:
1005a5f8:	20000894 	.word	0x20000894

1005a5fc <llc_pscan_wr_get_pawr_info>:
1005a5fc:	b5b0      	push	{r4, r5, r7, lr}
1005a5fe:	2800      	cmp	r0, #0
1005a600:	d00e      	beq.n	1005a620 <llc_pscan_wr_get_pawr_info+0x24>
1005a602:	1e40      	subs	r0, r0, #1
1005a604:	2401      	movs	r4, #1
1005a606:	2300      	movs	r3, #0
1005a608:	b2e4      	uxtb	r4, r4
1005a60a:	5d0d      	ldrb	r5, [r1, r4]
1005a60c:	b2dc      	uxtb	r4, r3
1005a60e:	2d32      	cmp	r5, #50	@ 0x32
1005a610:	d008      	beq.n	1005a624 <llc_pscan_wr_get_pawr_info+0x28>
1005a612:	5d0c      	ldrb	r4, [r1, r4]
1005a614:	191b      	adds	r3, r3, r4
1005a616:	1c5b      	adds	r3, r3, #1
1005a618:	b2dd      	uxtb	r5, r3
1005a61a:	1c6c      	adds	r4, r5, #1
1005a61c:	42a8      	cmp	r0, r5
1005a61e:	d8f3      	bhi.n	1005a608 <llc_pscan_wr_get_pawr_info+0xc>
1005a620:	2000      	movs	r0, #0
1005a622:	bdb0      	pop	{r4, r5, r7, pc}
1005a624:	1860      	adds	r0, r4, r1
1005a626:	1c81      	adds	r1, r0, #2
1005a628:	2308      	movs	r3, #8
1005a62a:	4610      	mov	r0, r2
1005a62c:	461a      	mov	r2, r3
1005a62e:	f7ea f9b9 	bl	100449a4 <BLEPLAT_MemCpy>
1005a632:	2001      	movs	r0, #1
1005a634:	bdb0      	pop	{r4, r5, r7, pc}
	...

1005a638 <llc_pscan_wr_check_pawr_active>:
1005a638:	b5b0      	push	{r4, r5, r7, lr}
1005a63a:	4605      	mov	r5, r0
1005a63c:	2400      	movs	r4, #0
1005a63e:	4620      	mov	r0, r4
1005a640:	f7fe ff24 	bl	1005948c <llc_pscan_get_cntxt_per_p>
1005a644:	380f      	subs	r0, #15
1005a646:	4909      	ldr	r1, [pc, #36]	@ (1005a66c <__arm_cp.4_0>)
1005a648:	7f89      	ldrb	r1, [r1, #30]
1005a64a:	1c49      	adds	r1, r1, #1
1005a64c:	1e49      	subs	r1, r1, #1
1005a64e:	d00a      	beq.n	1005a666 <llc_pscan_wr_check_pawr_active+0x2e>
1005a650:	2223      	movs	r2, #35	@ 0x23
1005a652:	5882      	ldr	r2, [r0, r2]
1005a654:	3090      	adds	r0, #144	@ 0x90
1005a656:	2348      	movs	r3, #72	@ 0x48
1005a658:	5cd2      	ldrb	r2, [r2, r3]
1005a65a:	42aa      	cmp	r2, r5
1005a65c:	d1f6      	bne.n	1005a64c <llc_pscan_wr_check_pawr_active+0x14>
1005a65e:	7800      	ldrb	r0, [r0, #0]
1005a660:	0940      	lsrs	r0, r0, #5
1005a662:	2401      	movs	r4, #1
1005a664:	4384      	bics	r4, r0
1005a666:	4620      	mov	r0, r4
1005a668:	bdb0      	pop	{r4, r5, r7, pc}
1005a66a:	46c0      	nop			@ (mov r8, r8)

1005a66c <__arm_cp.4_0>:
1005a66c:	200008a8 	.word	0x200008a8

1005a670 <llc_pscan_wr_check_pawr_info>:
1005a670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005a672:	2121      	movs	r1, #33	@ 0x21
1005a674:	5c41      	ldrb	r1, [r0, r1]
1005a676:	2900      	cmp	r1, #0
1005a678:	d01e      	beq.n	1005a6b8 <llc_pscan_wr_check_pawr_info+0x48>
1005a67a:	6884      	ldr	r4, [r0, #8]
1005a67c:	7920      	ldrb	r0, [r4, #4]
1005a67e:	2601      	movs	r6, #1
1005a680:	2280      	movs	r2, #128	@ 0x80
1005a682:	4f0f      	ldr	r7, [pc, #60]	@ (1005a6c0 <__arm_cp.6_0>)
1005a684:	4631      	mov	r1, r6
1005a686:	47b8      	blx	r7
1005a688:	9000      	str	r0, [sp, #0]
1005a68a:	7960      	ldrb	r0, [r4, #5]
1005a68c:	2106      	movs	r1, #6
1005a68e:	25ff      	movs	r5, #255	@ 0xff
1005a690:	462a      	mov	r2, r5
1005a692:	47b8      	blx	r7
1005a694:	4607      	mov	r7, r0
1005a696:	9800      	ldr	r0, [sp, #0]
1005a698:	4307      	orrs	r7, r0
1005a69a:	79a0      	ldrb	r0, [r4, #6]
1005a69c:	22fe      	movs	r2, #254	@ 0xfe
1005a69e:	4631      	mov	r1, r6
1005a6a0:	4b07      	ldr	r3, [pc, #28]	@ (1005a6c0 <__arm_cp.6_0>)
1005a6a2:	4798      	blx	r3
1005a6a4:	4606      	mov	r6, r0
1005a6a6:	433e      	orrs	r6, r7
1005a6a8:	79e0      	ldrb	r0, [r4, #7]
1005a6aa:	2402      	movs	r4, #2
1005a6ac:	4621      	mov	r1, r4
1005a6ae:	462a      	mov	r2, r5
1005a6b0:	4b03      	ldr	r3, [pc, #12]	@ (1005a6c0 <__arm_cp.6_0>)
1005a6b2:	4798      	blx	r3
1005a6b4:	4330      	orrs	r0, r6
1005a6b6:	d100      	bne.n	1005a6ba <llc_pscan_wr_check_pawr_info+0x4a>
1005a6b8:	2400      	movs	r4, #0
1005a6ba:	4620      	mov	r0, r4
1005a6bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005a6be:	46c0      	nop			@ (mov r8, r8)

1005a6c0 <__arm_cp.6_0>:
1005a6c0:	10061ea1 	.word	0x10061ea1

1005a6c4 <llc_pscan_wr_reserve_taskslots>:
1005a6c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005a6c6:	2500      	movs	r5, #0
1005a6c8:	2900      	cmp	r1, #0
1005a6ca:	d026      	beq.n	1005a71a <llc_pscan_wr_reserve_taskslots+0x56>
1005a6cc:	4604      	mov	r4, r0
1005a6ce:	f008 f9c3 	bl	10062a58 <LL_sched_reserve_taskslot>
1005a6d2:	28ff      	cmp	r0, #255	@ 0xff
1005a6d4:	d01b      	beq.n	1005a70e <llc_pscan_wr_reserve_taskslots+0x4a>
1005a6d6:	4606      	mov	r6, r0
1005a6d8:	f008 f9be 	bl	10062a58 <LL_sched_reserve_taskslot>
1005a6dc:	28ff      	cmp	r0, #255	@ 0xff
1005a6de:	d013      	beq.n	1005a708 <llc_pscan_wr_reserve_taskslots+0x44>
1005a6e0:	4607      	mov	r7, r0
1005a6e2:	f7fd f857 	bl	10057794 <llc_conn_reserve_conn_idx>
1005a6e6:	28ff      	cmp	r0, #255	@ 0xff
1005a6e8:	d00b      	beq.n	1005a702 <llc_pscan_wr_reserve_taskslots+0x3e>
1005a6ea:	9000      	str	r0, [sp, #0]
1005a6ec:	f7fb fc8e 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005a6f0:	2141      	movs	r1, #65	@ 0x41
1005a6f2:	5447      	strb	r7, [r0, r1]
1005a6f4:	6960      	ldr	r0, [r4, #20]
1005a6f6:	21ac      	movs	r1, #172	@ 0xac
1005a6f8:	5446      	strb	r6, [r0, r1]
1005a6fa:	2148      	movs	r1, #72	@ 0x48
1005a6fc:	9a00      	ldr	r2, [sp, #0]
1005a6fe:	5442      	strb	r2, [r0, r1]
1005a700:	e00b      	b.n	1005a71a <llc_pscan_wr_reserve_taskslots+0x56>
1005a702:	4638      	mov	r0, r7
1005a704:	f008 f9ca 	bl	10062a9c <LL_sched_release_taskslot>
1005a708:	4630      	mov	r0, r6
1005a70a:	f008 f9c7 	bl	10062a9c <LL_sched_release_taskslot>
1005a70e:	2081      	movs	r0, #129	@ 0x81
1005a710:	5c21      	ldrb	r1, [r4, r0]
1005a712:	2280      	movs	r2, #128	@ 0x80
1005a714:	430a      	orrs	r2, r1
1005a716:	5422      	strb	r2, [r4, r0]
1005a718:	2502      	movs	r5, #2
1005a71a:	4628      	mov	r0, r5
1005a71c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

1005a720 <llc_pscan_wr_set_pscan_cntxt>:
1005a720:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005a722:	2221      	movs	r2, #33	@ 0x21
1005a724:	5c8a      	ldrb	r2, [r1, r2]
1005a726:	2a00      	cmp	r2, #0
1005a728:	d02c      	beq.n	1005a784 <llc_pscan_wr_set_pscan_cntxt+0x64>
1005a72a:	4a17      	ldr	r2, [pc, #92]	@ (1005a788 <__arm_cp.10_0>)
1005a72c:	7ed2      	ldrb	r2, [r2, #27]
1005a72e:	6889      	ldr	r1, [r1, #8]
1005a730:	790c      	ldrb	r4, [r1, #4]
1005a732:	4294      	cmp	r4, r2
1005a734:	d300      	bcc.n	1005a738 <llc_pscan_wr_set_pscan_cntxt+0x18>
1005a736:	4614      	mov	r4, r2
1005a738:	6945      	ldr	r5, [r0, #20]
1005a73a:	223e      	movs	r2, #62	@ 0x3e
1005a73c:	54ac      	strb	r4, [r5, r2]
1005a73e:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
1005a740:	62a8      	str	r0, [r5, #40]	@ 0x28
1005a742:	7808      	ldrb	r0, [r1, #0]
1005a744:	9002      	str	r0, [sp, #8]
1005a746:	784f      	ldrb	r7, [r1, #1]
1005a748:	788e      	ldrb	r6, [r1, #2]
1005a74a:	78c8      	ldrb	r0, [r1, #3]
1005a74c:	9001      	str	r0, [sp, #4]
1005a74e:	7948      	ldrb	r0, [r1, #5]
1005a750:	0240      	lsls	r0, r0, #9
1005a752:	6368      	str	r0, [r5, #52]	@ 0x34
1005a754:	7988      	ldrb	r0, [r1, #6]
1005a756:	0240      	lsls	r0, r0, #9
1005a758:	62e8      	str	r0, [r5, #44]	@ 0x2c
1005a75a:	79c8      	ldrb	r0, [r1, #7]
1005a75c:	0200      	lsls	r0, r0, #8
1005a75e:	1d40      	adds	r0, r0, #5
1005a760:	2105      	movs	r1, #5
1005a762:	f7e5 fd6d 	bl	10040240 <__udivsi3>
1005a766:	6328      	str	r0, [r5, #48]	@ 0x30
1005a768:	0238      	lsls	r0, r7, #8
1005a76a:	9902      	ldr	r1, [sp, #8]
1005a76c:	1840      	adds	r0, r0, r1
1005a76e:	0431      	lsls	r1, r6, #16
1005a770:	1840      	adds	r0, r0, r1
1005a772:	9901      	ldr	r1, [sp, #4]
1005a774:	0609      	lsls	r1, r1, #24
1005a776:	1840      	adds	r0, r0, r1
1005a778:	63a8      	str	r0, [r5, #56]	@ 0x38
1005a77a:	3518      	adds	r5, #24
1005a77c:	4620      	mov	r0, r4
1005a77e:	4629      	mov	r1, r5
1005a780:	f7ff fe5c 	bl	1005a43c <llc_pscan_wr_set_subevents>
1005a784:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005a786:	46c0      	nop			@ (mov r8, r8)

1005a788 <__arm_cp.10_0>:
1005a788:	200008a8 	.word	0x200008a8

1005a78c <llc_pscan_wr_set_scheduler_params>:
1005a78c:	b570      	push	{r4, r5, r6, lr}
1005a78e:	b088      	sub	sp, #32
1005a790:	4601      	mov	r1, r0
1005a792:	2084      	movs	r0, #132	@ 0x84
1005a794:	5c08      	ldrb	r0, [r1, r0]
1005a796:	694a      	ldr	r2, [r1, #20]
1005a798:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
1005a79a:	6b52      	ldr	r2, [r2, #52]	@ 0x34
1005a79c:	6acc      	ldr	r4, [r1, #44]	@ 0x2c
1005a79e:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
1005a7a0:	4e0a      	ldr	r6, [pc, #40]	@ (1005a7cc <__arm_cp.12_0>)
1005a7a2:	9607      	str	r6, [sp, #28]
1005a7a4:	4e0a      	ldr	r6, [pc, #40]	@ (1005a7d0 <__arm_cp.12_1>)
1005a7a6:	9606      	str	r6, [sp, #24]
1005a7a8:	4e0a      	ldr	r6, [pc, #40]	@ (1005a7d4 <__arm_cp.12_2>)
1005a7aa:	9605      	str	r6, [sp, #20]
1005a7ac:	4e0a      	ldr	r6, [pc, #40]	@ (1005a7d8 <__arm_cp.12_3>)
1005a7ae:	9604      	str	r6, [sp, #16]
1005a7b0:	2607      	movs	r6, #7
1005a7b2:	9603      	str	r6, [sp, #12]
1005a7b4:	260a      	movs	r6, #10
1005a7b6:	9602      	str	r6, [sp, #8]
1005a7b8:	086d      	lsrs	r5, r5, #1
1005a7ba:	1b64      	subs	r4, r4, r5
1005a7bc:	9401      	str	r4, [sp, #4]
1005a7be:	9200      	str	r2, [sp, #0]
1005a7c0:	3b3e      	subs	r3, #62	@ 0x3e
1005a7c2:	220d      	movs	r2, #13
1005a7c4:	f007 fe0e 	bl	100623e4 <LL_sched_enable_taskslot>
1005a7c8:	b008      	add	sp, #32
1005a7ca:	bd70      	pop	{r4, r5, r6, pc}

1005a7cc <__arm_cp.12_0>:
1005a7cc:	100699f9 	.word	0x100699f9

1005a7d0 <__arm_cp.12_1>:
1005a7d0:	10069bbd 	.word	0x10069bbd

1005a7d4 <__arm_cp.12_2>:
1005a7d4:	10069a69 	.word	0x10069a69

1005a7d8 <__arm_cp.12_3>:
1005a7d8:	10069b65 	.word	0x10069b65

1005a7dc <llc_scan_conn_ind_sent>:
1005a7dc:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a7de:	b089      	sub	sp, #36	@ 0x24
1005a7e0:	4605      	mov	r5, r0
1005a7e2:	20b0      	movs	r0, #176	@ 0xb0
1005a7e4:	5c28      	ldrb	r0, [r5, r0]
1005a7e6:	28ff      	cmp	r0, #255	@ 0xff
1005a7e8:	d03f      	beq.n	1005a86a <llc_scan_conn_ind_sent+0x8e>
1005a7ea:	460e      	mov	r6, r1
1005a7ec:	462c      	mov	r4, r5
1005a7ee:	34b0      	adds	r4, #176	@ 0xb0
1005a7f0:	4628      	mov	r0, r5
1005a7f2:	30eb      	adds	r0, #235	@ 0xeb
1005a7f4:	9001      	str	r0, [sp, #4]
1005a7f6:	f7ea fa0a 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
1005a7fa:	6828      	ldr	r0, [r5, #0]
1005a7fc:	7801      	ldrb	r1, [r0, #0]
1005a7fe:	a804      	add	r0, sp, #16
1005a800:	4a1b      	ldr	r2, [pc, #108]	@ (1005a870 <__arm_cp.1_0>)
1005a802:	8102      	strh	r2, [r0, #8]
1005a804:	22ff      	movs	r2, #255	@ 0xff
1005a806:	9200      	str	r2, [sp, #0]
1005a808:	7282      	strb	r2, [r0, #10]
1005a80a:	2701      	movs	r7, #1
1005a80c:	8187      	strh	r7, [r0, #12]
1005a80e:	462a      	mov	r2, r5
1005a810:	32ac      	adds	r2, #172	@ 0xac
1005a812:	9202      	str	r2, [sp, #8]
1005a814:	5d92      	ldrb	r2, [r2, r6]
1005a816:	7382      	strb	r2, [r0, #14]
1005a818:	4633      	mov	r3, r6
1005a81a:	2600      	movs	r6, #0
1005a81c:	73c6      	strb	r6, [r0, #15]
1005a81e:	7446      	strb	r6, [r0, #17]
1005a820:	7822      	ldrb	r2, [r4, #0]
1005a822:	72c2      	strb	r2, [r0, #11]
1005a824:	0689      	lsls	r1, r1, #26
1005a826:	0fc9      	lsrs	r1, r1, #31
1005a828:	7401      	strb	r1, [r0, #16]
1005a82a:	9303      	str	r3, [sp, #12]
1005a82c:	0099      	lsls	r1, r3, #2
1005a82e:	1869      	adds	r1, r5, r1
1005a830:	6bc9      	ldr	r1, [r1, #60]	@ 0x3c
1005a832:	1d09      	adds	r1, r1, #4
1005a834:	9104      	str	r1, [sp, #16]
1005a836:	3554      	adds	r5, #84	@ 0x54
1005a838:	9505      	str	r5, [sp, #20]
1005a83a:	f7fc fc1d 	bl	10057078 <llc_conn_go_to_connect>
1005a83e:	70a7      	strb	r7, [r4, #2]
1005a840:	9800      	ldr	r0, [sp, #0]
1005a842:	7020      	strb	r0, [r4, #0]
1005a844:	9801      	ldr	r0, [sp, #4]
1005a846:	7006      	strb	r6, [r0, #0]
1005a848:	7880      	ldrb	r0, [r0, #2]
1005a84a:	0780      	lsls	r0, r0, #30
1005a84c:	d501      	bpl.n	1005a852 <llc_scan_conn_ind_sent+0x76>
1005a84e:	f7fe fccf 	bl	100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>
1005a852:	9c03      	ldr	r4, [sp, #12]
1005a854:	4067      	eors	r7, r4
1005a856:	9d02      	ldr	r5, [sp, #8]
1005a858:	5de8      	ldrb	r0, [r5, r7]
1005a85a:	f007 fdb1 	bl	100623c0 <LL_sched_set_cancel_request>
1005a85e:	20ff      	movs	r0, #255	@ 0xff
1005a860:	f001 fbce 	bl	1005c000 <llc_scan_aux_cancel_reserved_task_slots>
1005a864:	5d28      	ldrb	r0, [r5, r4]
1005a866:	f007 fe1b 	bl	100624a0 <LL_sched_engine>
1005a86a:	b009      	add	sp, #36	@ 0x24
1005a86c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005a86e:	46c0      	nop			@ (mov r8, r8)

1005a870 <__arm_cp.1_0>:
1005a870:	0000ffff 	.word	0x0000ffff

1005a874 <llc_scan_isr_uncoded>:
1005a874:	b510      	push	{r4, lr}
1005a876:	2400      	movs	r4, #0
1005a878:	4621      	mov	r1, r4
1005a87a:	f000 f803 	bl	1005a884 <llc_scan_isr>
1005a87e:	4620      	mov	r0, r4
1005a880:	bd10      	pop	{r4, pc}
	...

1005a884 <llc_scan_isr>:
1005a884:	b5f0      	push	{r4, r5, r6, r7, lr}
1005a886:	b0a1      	sub	sp, #132	@ 0x84
1005a888:	460f      	mov	r7, r1
1005a88a:	4604      	mov	r4, r0
1005a88c:	a80b      	add	r0, sp, #44	@ 0x2c
1005a88e:	2100      	movs	r1, #0
1005a890:	7001      	strb	r1, [r0, #0]
1005a892:	20f3      	movs	r0, #243	@ 0xf3
1005a894:	5c20      	ldrb	r0, [r4, r0]
1005a896:	4625      	mov	r5, r4
1005a898:	35e8      	adds	r5, #232	@ 0xe8
1005a89a:	2800      	cmp	r0, #0
1005a89c:	9509      	str	r5, [sp, #36]	@ 0x24
1005a89e:	9108      	str	r1, [sp, #32]
1005a8a0:	970a      	str	r7, [sp, #40]	@ 0x28
1005a8a2:	d100      	bne.n	1005a8a6 <llc_scan_isr+0x22>
1005a8a4:	e0c2      	b.n	1005aa2c <llc_scan_isr+0x1a8>
1005a8a6:	72e9      	strb	r1, [r5, #11]
1005a8a8:	6521      	str	r1, [r4, #80]	@ 0x50
1005a8aa:	f7ea f9b0 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
1005a8ae:	78e8      	ldrb	r0, [r5, #3]
1005a8b0:	21ef      	movs	r1, #239	@ 0xef
1005a8b2:	4001      	ands	r1, r0
1005a8b4:	70e9      	strb	r1, [r5, #3]
1005a8b6:	00b8      	lsls	r0, r7, #2
1005a8b8:	1827      	adds	r7, r4, r0
1005a8ba:	f7ea f967 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1005a8be:	218c      	movs	r1, #140	@ 0x8c
1005a8c0:	587a      	ldr	r2, [r7, r1]
1005a8c2:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
1005a8c4:	1a41      	subs	r1, r0, r1
1005a8c6:	1852      	adds	r2, r2, r1
1005a8c8:	4626      	mov	r6, r4
1005a8ca:	43cc      	mvns	r4, r1
1005a8cc:	6d33      	ldr	r3, [r6, #80]	@ 0x50
1005a8ce:	191c      	adds	r4, r3, r4
1005a8d0:	d447      	bmi.n	1005a962 <llc_scan_isr+0xde>
1005a8d2:	2464      	movs	r4, #100	@ 0x64
1005a8d4:	43e4      	mvns	r4, r4
1005a8d6:	1a20      	subs	r0, r4, r0
1005a8d8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
1005a8da:	00a4      	lsls	r4, r4, #2
1005a8dc:	1935      	adds	r5, r6, r4
1005a8de:	2494      	movs	r4, #148	@ 0x94
1005a8e0:	592c      	ldr	r4, [r5, r4]
1005a8e2:	9006      	str	r0, [sp, #24]
1005a8e4:	1824      	adds	r4, r4, r0
1005a8e6:	9507      	str	r5, [sp, #28]
1005a8e8:	6fed      	ldr	r5, [r5, #124]	@ 0x7c
1005a8ea:	1964      	adds	r4, r4, r5
1005a8ec:	d439      	bmi.n	1005a962 <llc_scan_isr+0xde>
1005a8ee:	2484      	movs	r4, #132	@ 0x84
1005a8f0:	9d07      	ldr	r5, [sp, #28]
1005a8f2:	5928      	ldr	r0, [r5, r4]
1005a8f4:	43d5      	mvns	r5, r2
1005a8f6:	9005      	str	r0, [sp, #20]
1005a8f8:	1945      	adds	r5, r0, r5
1005a8fa:	d432      	bmi.n	1005a962 <llc_scan_isr+0xde>
1005a8fc:	4630      	mov	r0, r6
1005a8fe:	309c      	adds	r0, #156	@ 0x9c
1005a900:	6845      	ldr	r5, [r0, #4]
1005a902:	2d00      	cmp	r5, #0
1005a904:	d008      	beq.n	1005a918 <llc_scan_isr+0x94>
1005a906:	9c06      	ldr	r4, [sp, #24]
1005a908:	192c      	adds	r4, r5, r4
1005a90a:	9404      	str	r4, [sp, #16]
1005a90c:	6804      	ldr	r4, [r0, #0]
1005a90e:	9503      	str	r5, [sp, #12]
1005a910:	9d04      	ldr	r5, [sp, #16]
1005a912:	192c      	adds	r4, r5, r4
1005a914:	9d03      	ldr	r5, [sp, #12]
1005a916:	d424      	bmi.n	1005a962 <llc_scan_isr+0xde>
1005a918:	4634      	mov	r4, r6
1005a91a:	9e05      	ldr	r6, [sp, #20]
1005a91c:	1ab2      	subs	r2, r6, r2
1005a91e:	1a59      	subs	r1, r3, r1
1005a920:	428a      	cmp	r2, r1
1005a922:	d300      	bcc.n	1005a926 <llc_scan_isr+0xa2>
1005a924:	460a      	mov	r2, r1
1005a926:	2d00      	cmp	r5, #0
1005a928:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
1005a92a:	d006      	beq.n	1005a93a <llc_scan_isr+0xb6>
1005a92c:	9906      	ldr	r1, [sp, #24]
1005a92e:	194b      	adds	r3, r1, r5
1005a930:	6801      	ldr	r1, [r0, #0]
1005a932:	1858      	adds	r0, r3, r1
1005a934:	1c45      	adds	r5, r0, #1
1005a936:	4295      	cmp	r5, r2
1005a938:	d300      	bcc.n	1005a93c <llc_scan_isr+0xb8>
1005a93a:	4615      	mov	r5, r2
1005a93c:	2d00      	cmp	r5, #0
1005a93e:	d018      	beq.n	1005a972 <llc_scan_isr+0xee>
1005a940:	19e0      	adds	r0, r4, r7
1005a942:	21ac      	movs	r1, #172	@ 0xac
1005a944:	5c40      	ldrb	r0, [r0, r1]
1005a946:	f7eb fde1 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
1005a94a:	9807      	ldr	r0, [sp, #28]
1005a94c:	6880      	ldr	r0, [r0, #8]
1005a94e:	4969      	ldr	r1, [pc, #420]	@ (1005aaf4 <__arm_cp.4_7>)
1005a950:	4369      	muls	r1, r5
1005a952:	0a09      	lsrs	r1, r1, #8
1005a954:	f7eb fb6f 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
1005a958:	f7eb f938 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
1005a95c:	f7ea f96f 	bl	10044c3e <BLEPLAT_SetRadioCloseTimeout>
1005a960:	e011      	b.n	1005a986 <llc_scan_isr+0x102>
1005a962:	378c      	adds	r7, #140	@ 0x8c
1005a964:	603a      	str	r2, [r7, #0]
1005a966:	4630      	mov	r0, r6
1005a968:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
1005a96a:	463a      	mov	r2, r7
1005a96c:	f001 f9fa 	bl	1005bd64 <llc_scan_update_anchors>
1005a970:	4634      	mov	r4, r6
1005a972:	00b8      	lsls	r0, r7, #2
1005a974:	1820      	adds	r0, r4, r0
1005a976:	6880      	ldr	r0, [r0, #8]
1005a978:	f7eb fafc 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005a97c:	19e0      	adds	r0, r4, r7
1005a97e:	21ac      	movs	r1, #172	@ 0xac
1005a980:	5c40      	ldrb	r0, [r0, r1]
1005a982:	f007 fd8d 	bl	100624a0 <LL_sched_engine>
1005a986:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1005a988:	a80b      	add	r0, sp, #44	@ 0x2c
1005a98a:	78e9      	ldrb	r1, [r5, #3]
1005a98c:	07c9      	lsls	r1, r1, #31
1005a98e:	d100      	bne.n	1005a992 <llc_scan_isr+0x10e>
1005a990:	e14d      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005a992:	7800      	ldrb	r0, [r0, #0]
1005a994:	2800      	cmp	r0, #0
1005a996:	d100      	bne.n	1005a99a <llc_scan_isr+0x116>
1005a998:	e149      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005a99a:	6820      	ldr	r0, [r4, #0]
1005a99c:	9007      	str	r0, [sp, #28]
1005a99e:	7800      	ldrb	r0, [r0, #0]
1005a9a0:	260f      	movs	r6, #15
1005a9a2:	4006      	ands	r6, r0
1005a9a4:	1f30      	subs	r0, r6, #4
1005a9a6:	4243      	negs	r3, r0
1005a9a8:	4143      	adcs	r3, r0
1005a9aa:	2700      	movs	r7, #0
1005a9ac:	4620      	mov	r0, r4
1005a9ae:	4639      	mov	r1, r7
1005a9b0:	463a      	mov	r2, r7
1005a9b2:	f001 fb3c 	bl	1005c02e <llc_scan_duplicates_filter>
1005a9b6:	2800      	cmp	r0, #0
1005a9b8:	d000      	beq.n	1005a9bc <llc_scan_isr+0x138>
1005a9ba:	e138      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005a9bc:	4625      	mov	r5, r4
1005a9be:	ac18      	add	r4, sp, #96	@ 0x60
1005a9c0:	76e7      	strb	r7, [r4, #27]
1005a9c2:	82a7      	strh	r7, [r4, #20]
1005a9c4:	6d69      	ldr	r1, [r5, #84]	@ 0x54
1005a9c6:	6da8      	ldr	r0, [r5, #88]	@ 0x58
1005a9c8:	9019      	str	r0, [sp, #100]	@ 0x64
1005a9ca:	9105      	str	r1, [sp, #20]
1005a9cc:	9118      	str	r1, [sp, #96]	@ 0x60
1005a9ce:	f7ea f8cd 	bl	10044b6c <BLEPLAT_CalculateRSSI>
1005a9d2:	9006      	str	r0, [sp, #24]
1005a9d4:	f007 fc4c 	bl	10062270 <get_rf_rx_path_compensation_db>
1005a9d8:	9906      	ldr	r1, [sp, #24]
1005a9da:	1808      	adds	r0, r1, r0
1005a9dc:	9006      	str	r0, [sp, #24]
1005a9de:	7660      	strb	r0, [r4, #25]
1005a9e0:	2e07      	cmp	r6, #7
1005a9e2:	d166      	bne.n	1005aab2 <llc_scan_isr+0x22e>
1005a9e4:	9907      	ldr	r1, [sp, #28]
1005a9e6:	788e      	ldrb	r6, [r1, #2]
1005a9e8:	4628      	mov	r0, r5
1005a9ea:	460d      	mov	r5, r1
1005a9ec:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005a9ee:	f001 fadd 	bl	1005bfac <llc_scan_get_primary_phy>
1005a9f2:	aa18      	add	r2, sp, #96	@ 0x60
1005a9f4:	7610      	strb	r0, [r2, #24]
1005a9f6:	a80e      	add	r0, sp, #56	@ 0x38
1005a9f8:	7cc0      	ldrb	r0, [r0, #19]
1005a9fa:	7710      	strb	r0, [r2, #28]
1005a9fc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
1005a9fe:	7690      	strb	r0, [r2, #26]
1005aa00:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005aa02:	901b      	str	r0, [sp, #108]	@ 0x6c
1005aa04:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005aa06:	901a      	str	r0, [sp, #104]	@ 0x68
1005aa08:	78a8      	ldrb	r0, [r5, #2]
1005aa0a:	0980      	lsrs	r0, r0, #6
1005aa0c:	75d0      	strb	r0, [r2, #23]
1005aa0e:	78a9      	ldrb	r1, [r5, #2]
1005aa10:	0049      	lsls	r1, r1, #1
1005aa12:	2304      	movs	r3, #4
1005aa14:	400b      	ands	r3, r1
1005aa16:	1818      	adds	r0, r3, r0
1005aa18:	75d0      	strb	r0, [r2, #23]
1005aa1a:	233f      	movs	r3, #63	@ 0x3f
1005aa1c:	4033      	ands	r3, r6
1005aa1e:	43d9      	mvns	r1, r3
1005aa20:	786c      	ldrb	r4, [r5, #1]
1005aa22:	1861      	adds	r1, r4, r1
1005aa24:	7591      	strb	r1, [r2, #22]
1005aa26:	1d1a      	adds	r2, r3, #4
1005aa28:	463b      	mov	r3, r7
1005aa2a:	e0ec      	b.n	1005ac06 <__arm_cp.4_7+0x112>
1005aa2c:	9407      	str	r4, [sp, #28]
1005aa2e:	4cf6      	ldr	r4, [pc, #984]	@ (1005ae08 <__arm_cp.4_0>)
1005aa30:	6820      	ldr	r0, [r4, #0]
1005aa32:	f7eb f964 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
1005aa36:	4606      	mov	r6, r0
1005aa38:	6820      	ldr	r0, [r4, #0]
1005aa3a:	f7eb f977 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
1005aa3e:	49f3      	ldr	r1, [pc, #972]	@ (1005ae0c <__arm_cp.4_1>)
1005aa40:	6809      	ldr	r1, [r1, #0]
1005aa42:	22d8      	movs	r2, #216	@ 0xd8
1005aa44:	5c89      	ldrb	r1, [r1, r2]
1005aa46:	2900      	cmp	r1, #0
1005aa48:	d009      	beq.n	1005aa5e <llc_scan_isr+0x1da>
1005aa4a:	2800      	cmp	r0, #0
1005aa4c:	d009      	beq.n	1005aa62 <llc_scan_isr+0x1de>
1005aa4e:	78e8      	ldrb	r0, [r5, #3]
1005aa50:	0701      	lsls	r1, r0, #28
1005aa52:	d454      	bmi.n	1005aafe <__arm_cp.4_7+0xa>
1005aa54:	9807      	ldr	r0, [sp, #28]
1005aa56:	4639      	mov	r1, r7
1005aa58:	f7f4 f804 	bl	1004ea64 <llc_scan_conn_ind_sent_ucfg>
1005aa5c:	e059      	b.n	1005ab12 <__arm_cp.4_7+0x1e>
1005aa5e:	9c07      	ldr	r4, [sp, #28]
1005aa60:	e723      	b.n	1005a8aa <llc_scan_isr+0x26>
1005aa62:	2e00      	cmp	r6, #0
1005aa64:	d058      	beq.n	1005ab18 <__arm_cp.4_7+0x24>
1005aa66:	f7ea f889 	bl	10044b7c <BLEPLAT_GetDemodCI>
1005aa6a:	7268      	strb	r0, [r5, #9]
1005aa6c:	f7eb f8ae 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
1005aa70:	9c07      	ldr	r4, [sp, #28]
1005aa72:	6820      	ldr	r0, [r4, #0]
1005aa74:	7802      	ldrb	r2, [r0, #0]
1005aa76:	ab0b      	add	r3, sp, #44	@ 0x2c
1005aa78:	2100      	movs	r1, #0
1005aa7a:	7019      	strb	r1, [r3, #0]
1005aa7c:	6561      	str	r1, [r4, #84]	@ 0x54
1005aa7e:	65a1      	str	r1, [r4, #88]	@ 0x58
1005aa80:	72a9      	strb	r1, [r5, #10]
1005aa82:	78eb      	ldrb	r3, [r5, #3]
1005aa84:	24f7      	movs	r4, #247	@ 0xf7
1005aa86:	401c      	ands	r4, r3
1005aa88:	70ec      	strb	r4, [r5, #3]
1005aa8a:	910d      	str	r1, [sp, #52]	@ 0x34
1005aa8c:	910c      	str	r1, [sp, #48]	@ 0x30
1005aa8e:	260f      	movs	r6, #15
1005aa90:	4016      	ands	r6, r2
1005aa92:	2201      	movs	r2, #1
1005aa94:	2e01      	cmp	r6, #1
1005aa96:	4614      	mov	r4, r2
1005aa98:	d04f      	beq.n	1005ab3a <__arm_cp.4_7+0x46>
1005aa9a:	2e07      	cmp	r6, #7
1005aa9c:	d14c      	bne.n	1005ab38 <__arm_cp.4_7+0x44>
1005aa9e:	78c0      	ldrb	r0, [r0, #3]
1005aaa0:	0781      	lsls	r1, r0, #30
1005aaa2:	0fcc      	lsrs	r4, r1, #31
1005aaa4:	07c0      	lsls	r0, r0, #31
1005aaa6:	d148      	bne.n	1005ab3a <__arm_cp.4_7+0x46>
1005aaa8:	2000      	movs	r0, #0
1005aaaa:	9008      	str	r0, [sp, #32]
1005aaac:	2c00      	cmp	r4, #0
1005aaae:	d14f      	bne.n	1005ab50 <__arm_cp.4_7+0x5c>
1005aab0:	e05f      	b.n	1005ab72 <__arm_cp.4_7+0x7e>
1005aab2:	a818      	add	r0, sp, #96	@ 0x60
1005aab4:	21ff      	movs	r1, #255	@ 0xff
1005aab6:	7701      	strb	r1, [r0, #28]
1005aab8:	2101      	movs	r1, #1
1005aaba:	7601      	strb	r1, [r0, #24]
1005aabc:	217f      	movs	r1, #127	@ 0x7f
1005aabe:	7681      	strb	r1, [r0, #26]
1005aac0:	971b      	str	r7, [sp, #108]	@ 0x6c
1005aac2:	971a      	str	r7, [sp, #104]	@ 0x68
1005aac4:	2e06      	cmp	r6, #6
1005aac6:	463b      	mov	r3, r7
1005aac8:	9d07      	ldr	r5, [sp, #28]
1005aaca:	d900      	bls.n	1005aace <llc_scan_isr+0x24a>
1005aacc:	e09d      	b.n	1005ac0a <__arm_cp.4_7+0x116>
1005aace:	00b0      	lsls	r0, r6, #2
1005aad0:	a101      	add	r1, pc, #4	@ (adr r1, 1005aad8 <llc_scan_isr+0x254>)
1005aad2:	580a      	ldr	r2, [r1, r0]
1005aad4:	4697      	mov	pc, r2
1005aad6:	46c0      	nop			@ (mov r8, r8)
1005aad8:	1005aaf9 	.word	0x1005aaf9
1005aadc:	1005abcf 	.word	0x1005abcf
1005aae0:	1005abe7 	.word	0x1005abe7
1005aae4:	1005ac0b 	.word	0x1005ac0b
1005aae8:	1005abed 	.word	0x1005abed
1005aaec:	1005ac0b 	.word	0x1005ac0b
1005aaf0:	1005abf9 	.word	0x1005abf9

1005aaf4 <__arm_cp.4_7>:
1005aaf4:	00000271 	.word	0x00000271
1005aaf8:	aa18      	add	r2, sp, #96	@ 0x60
1005aafa:	2013      	movs	r0, #19
1005aafc:	e07e      	b.n	1005abfc <__arm_cp.4_7+0x108>
1005aafe:	21e7      	movs	r1, #231	@ 0xe7
1005ab00:	4008      	ands	r0, r1
1005ab02:	3010      	adds	r0, #16
1005ab04:	70e8      	strb	r0, [r5, #3]
1005ab06:	00b8      	lsls	r0, r7, #2
1005ab08:	9907      	ldr	r1, [sp, #28]
1005ab0a:	1808      	adds	r0, r1, r0
1005ab0c:	6880      	ldr	r0, [r0, #8]
1005ab0e:	f7eb f93d 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
1005ab12:	f7eb f85b 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
1005ab16:	e08a      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005ab18:	78e8      	ldrb	r0, [r5, #3]
1005ab1a:	06c1      	lsls	r1, r0, #27
1005ab1c:	9c07      	ldr	r4, [sp, #28]
1005ab1e:	d503      	bpl.n	1005ab28 <__arm_cp.4_7+0x34>
1005ab20:	4620      	mov	r0, r4
1005ab22:	f000 fe93 	bl	1005b84c <llc_scan_backoff_not_rcvd>
1005ab26:	78e8      	ldrb	r0, [r5, #3]
1005ab28:	0740      	lsls	r0, r0, #29
1005ab2a:	d500      	bpl.n	1005ab2e <__arm_cp.4_7+0x3a>
1005ab2c:	e6bd      	b.n	1005a8aa <llc_scan_isr+0x26>
1005ab2e:	2000      	movs	r0, #0
1005ab30:	66e0      	str	r0, [r4, #108]	@ 0x6c
1005ab32:	9008      	str	r0, [sp, #32]
1005ab34:	6720      	str	r0, [r4, #112]	@ 0x70
1005ab36:	e6b8      	b.n	1005a8aa <llc_scan_isr+0x26>
1005ab38:	460c      	mov	r4, r1
1005ab3a:	9208      	str	r2, [sp, #32]
1005ab3c:	9807      	ldr	r0, [sp, #28]
1005ab3e:	f001 f877 	bl	1005bc30 <llc_scan_process_adv_addr>
1005ab42:	2c00      	cmp	r4, #0
1005ab44:	d00a      	beq.n	1005ab5c <__arm_cp.4_7+0x68>
1005ab46:	2101      	movs	r1, #1
1005ab48:	2800      	cmp	r0, #0
1005ab4a:	9108      	str	r1, [sp, #32]
1005ab4c:	4608      	mov	r0, r1
1005ab4e:	d105      	bne.n	1005ab5c <__arm_cp.4_7+0x68>
1005ab50:	a90c      	add	r1, sp, #48	@ 0x30
1005ab52:	9807      	ldr	r0, [sp, #28]
1005ab54:	f001 f8b6 	bl	1005bcc4 <llc_scan_process_target_addr>
1005ab58:	1e41      	subs	r1, r0, #1
1005ab5a:	4188      	sbcs	r0, r1
1005ab5c:	2801      	cmp	r0, #1
1005ab5e:	d108      	bne.n	1005ab72 <__arm_cp.4_7+0x7e>
1005ab60:	9c07      	ldr	r4, [sp, #28]
1005ab62:	4620      	mov	r0, r4
1005ab64:	3074      	adds	r0, #116	@ 0x74
1005ab66:	f7f3 feb6 	bl	1004e8d6 <llc_pscan_check_address_ucfg>
1005ab6a:	72a8      	strb	r0, [r5, #10]
1005ab6c:	2800      	cmp	r0, #0
1005ab6e:	d100      	bne.n	1005ab72 <__arm_cp.4_7+0x7e>
1005ab70:	e0d0      	b.n	1005ad14 <__arm_cp.4_7+0x220>
1005ab72:	a80b      	add	r0, sp, #44	@ 0x2c
1005ab74:	2400      	movs	r4, #0
1005ab76:	7004      	strb	r4, [r0, #0]
1005ab78:	a80c      	add	r0, sp, #48	@ 0x30
1005ab7a:	78e9      	ldrb	r1, [r5, #3]
1005ab7c:	06ca      	lsls	r2, r1, #27
1005ab7e:	d416      	bmi.n	1005abae <__arm_cp.4_7+0xba>
1005ab80:	7800      	ldrb	r0, [r0, #0]
1005ab82:	2e07      	cmp	r6, #7
1005ab84:	d000      	beq.n	1005ab88 <__arm_cp.4_7+0x94>
1005ab86:	e09d      	b.n	1005acc4 <__arm_cp.4_7+0x1d0>
1005ab88:	2202      	movs	r2, #2
1005ab8a:	400a      	ands	r2, r1
1005ab8c:	d000      	beq.n	1005ab90 <__arm_cp.4_7+0x9c>
1005ab8e:	e099      	b.n	1005acc4 <__arm_cp.4_7+0x1d0>
1005ab90:	f007 fb90 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005ab94:	a80b      	add	r0, sp, #44	@ 0x2c
1005ab96:	9908      	ldr	r1, [sp, #32]
1005ab98:	9100      	str	r1, [sp, #0]
1005ab9a:	9001      	str	r0, [sp, #4]
1005ab9c:	a90e      	add	r1, sp, #56	@ 0x38
1005ab9e:	aa0c      	add	r2, sp, #48	@ 0x30
1005aba0:	9c07      	ldr	r4, [sp, #28]
1005aba2:	4620      	mov	r0, r4
1005aba4:	463b      	mov	r3, r7
1005aba6:	f7f3 ff89 	bl	1004eabc <llc_scan_process_ext_adv_ucfg>
1005abaa:	4606      	mov	r6, r0
1005abac:	e126      	b.n	1005adfc <__arm_cp.4_7+0x308>
1005abae:	f007 fb81 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005abb2:	2e04      	cmp	r6, #4
1005abb4:	d000      	beq.n	1005abb8 <__arm_cp.4_7+0xc4>
1005abb6:	e11f      	b.n	1005adf8 <__arm_cp.4_7+0x304>
1005abb8:	9e07      	ldr	r6, [sp, #28]
1005abba:	4630      	mov	r0, r6
1005abbc:	f000 fe6f 	bl	1005b89e <llc_scan_backoff_rcvd>
1005abc0:	66f4      	str	r4, [r6, #108]	@ 0x6c
1005abc2:	6734      	str	r4, [r6, #112]	@ 0x70
1005abc4:	4634      	mov	r4, r6
1005abc6:	a80b      	add	r0, sp, #44	@ 0x2c
1005abc8:	2601      	movs	r6, #1
1005abca:	7006      	strb	r6, [r0, #0]
1005abcc:	e116      	b.n	1005adfc <__arm_cp.4_7+0x308>
1005abce:	aa18      	add	r2, sp, #96	@ 0x60
1005abd0:	2015      	movs	r0, #21
1005abd2:	75d0      	strb	r0, [r2, #23]
1005abd4:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005abd6:	911b      	str	r1, [sp, #108]	@ 0x6c
1005abd8:	990c      	ldr	r1, [sp, #48]	@ 0x30
1005abda:	911a      	str	r1, [sp, #104]	@ 0x68
1005abdc:	7869      	ldrb	r1, [r5, #1]
1005abde:	390c      	subs	r1, #12
1005abe0:	7591      	strb	r1, [r2, #22]
1005abe2:	220e      	movs	r2, #14
1005abe4:	e00f      	b.n	1005ac06 <__arm_cp.4_7+0x112>
1005abe6:	aa18      	add	r2, sp, #96	@ 0x60
1005abe8:	2010      	movs	r0, #16
1005abea:	e007      	b.n	1005abfc <__arm_cp.4_7+0x108>
1005abec:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005abee:	7801      	ldrb	r1, [r0, #0]
1005abf0:	2018      	movs	r0, #24
1005abf2:	4308      	orrs	r0, r1
1005abf4:	aa18      	add	r2, sp, #96	@ 0x60
1005abf6:	e001      	b.n	1005abfc <__arm_cp.4_7+0x108>
1005abf8:	aa18      	add	r2, sp, #96	@ 0x60
1005abfa:	2012      	movs	r0, #18
1005abfc:	75d0      	strb	r0, [r2, #23]
1005abfe:	7869      	ldrb	r1, [r5, #1]
1005ac00:	1f89      	subs	r1, r1, #6
1005ac02:	7591      	strb	r1, [r2, #22]
1005ac04:	2208      	movs	r2, #8
1005ac06:	18ac      	adds	r4, r5, r2
1005ac08:	941c      	str	r4, [sp, #112]	@ 0x70
1005ac0a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005ac0c:	78d2      	ldrb	r2, [r2, #3]
1005ac0e:	0792      	lsls	r2, r2, #30
1005ac10:	d40f      	bmi.n	1005ac32 <__arm_cp.4_7+0x13e>
1005ac12:	9a08      	ldr	r2, [sp, #32]
1005ac14:	2a00      	cmp	r2, #0
1005ac16:	d102      	bne.n	1005ac1e <__arm_cp.4_7+0x12a>
1005ac18:	aa18      	add	r2, sp, #96	@ 0x60
1005ac1a:	23ff      	movs	r3, #255	@ 0xff
1005ac1c:	7013      	strb	r3, [r2, #0]
1005ac1e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005ac20:	7010      	strb	r0, [r2, #0]
1005ac22:	b2c9      	uxtb	r1, r1
1005ac24:	b2c3      	uxtb	r3, r0
1005ac26:	a818      	add	r0, sp, #96	@ 0x60
1005ac28:	2200      	movs	r2, #0
1005ac2a:	f7f3 ffbd 	bl	1004eba8 <llc_scan_push_ext_adv_report_ucfg>
1005ac2e:	b021      	add	sp, #132	@ 0x84
1005ac30:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005ac32:	aa0c      	add	r2, sp, #48	@ 0x30
1005ac34:	7812      	ldrb	r2, [r2, #0]
1005ac36:	2afe      	cmp	r2, #254	@ 0xfe
1005ac38:	d12f      	bne.n	1005ac9a <__arm_cp.4_7+0x1a6>
1005ac3a:	4874      	ldr	r0, [pc, #464]	@ (1005ae0c <__arm_cp.4_1>)
1005ac3c:	6800      	ldr	r0, [r0, #0]
1005ac3e:	213d      	movs	r1, #61	@ 0x3d
1005ac40:	5c41      	ldrb	r1, [r0, r1]
1005ac42:	0689      	lsls	r1, r1, #26
1005ac44:	ae18      	add	r6, sp, #96	@ 0x60
1005ac46:	2900      	cmp	r1, #0
1005ac48:	d5f1      	bpl.n	1005ac2e <__arm_cp.4_7+0x13a>
1005ac4a:	303d      	adds	r0, #61	@ 0x3d
1005ac4c:	7a80      	ldrb	r0, [r0, #10]
1005ac4e:	0740      	lsls	r0, r0, #29
1005ac50:	d5ed      	bpl.n	1005ac2e <__arm_cp.4_7+0x13a>
1005ac52:	4870      	ldr	r0, [pc, #448]	@ (1005ae14 <__arm_cp.4_4>)
1005ac54:	6800      	ldr	r0, [r0, #0]
1005ac56:	6940      	ldr	r0, [r0, #20]
1005ac58:	21a1      	movs	r1, #161	@ 0xa1
1005ac5a:	221d      	movs	r2, #29
1005ac5c:	2306      	movs	r3, #6
1005ac5e:	f7f5 fb4f 	bl	10050300 <aci_event_fifo_push_header>
1005ac62:	2800      	cmp	r0, #0
1005ac64:	d0e3      	beq.n	1005ac2e <__arm_cp.4_7+0x13a>
1005ac66:	4604      	mov	r4, r0
1005ac68:	1c73      	adds	r3, r6, #1
1005ac6a:	9a07      	ldr	r2, [sp, #28]
1005ac6c:	3208      	adds	r2, #8
1005ac6e:	2101      	movs	r1, #1
1005ac70:	9806      	ldr	r0, [sp, #24]
1005ac72:	b240      	sxtb	r0, r0
1005ac74:	9100      	str	r1, [sp, #0]
1005ac76:	9201      	str	r2, [sp, #4]
1005ac78:	9002      	str	r0, [sp, #8]
1005ac7a:	1d20      	adds	r0, r4, #4
1005ac7c:	9a05      	ldr	r2, [sp, #20]
1005ac7e:	b2d2      	uxtb	r2, r2
1005ac80:	f7f6 f954 	bl	10050f2c <hci_le_directed_advertising_report_event_copy>
1005ac84:	200b      	movs	r0, #11
1005ac86:	71e0      	strb	r0, [r4, #7]
1005ac88:	2012      	movs	r0, #18
1005ac8a:	71a0      	strb	r0, [r4, #6]
1005ac8c:	203e      	movs	r0, #62	@ 0x3e
1005ac8e:	7160      	strb	r0, [r4, #5]
1005ac90:	2004      	movs	r0, #4
1005ac92:	7120      	strb	r0, [r4, #4]
1005ac94:	20a1      	movs	r0, #161	@ 0xa1
1005ac96:	4621      	mov	r1, r4
1005ac98:	e0a2      	b.n	1005ade0 <__arm_cp.4_7+0x2ec>
1005ac9a:	b2cf      	uxtb	r7, r1
1005ac9c:	2f1f      	cmp	r7, #31
1005ac9e:	d8c6      	bhi.n	1005ac2e <__arm_cp.4_7+0x13a>
1005aca0:	9905      	ldr	r1, [sp, #20]
1005aca2:	b2c9      	uxtb	r1, r1
1005aca4:	29fe      	cmp	r1, #254	@ 0xfe
1005aca6:	d103      	bne.n	1005acb0 <__arm_cp.4_7+0x1bc>
1005aca8:	a918      	add	r1, sp, #96	@ 0x60
1005acaa:	2201      	movs	r2, #1
1005acac:	9205      	str	r2, [sp, #20]
1005acae:	700a      	strb	r2, [r1, #0]
1005acb0:	0701      	lsls	r1, r0, #28
1005acb2:	d42d      	bmi.n	1005ad10 <__arm_cp.4_7+0x21c>
1005acb4:	b2c0      	uxtb	r0, r0
1005acb6:	2203      	movs	r2, #3
1005acb8:	4601      	mov	r1, r0
1005acba:	4011      	ands	r1, r2
1005acbc:	2903      	cmp	r1, #3
1005acbe:	d143      	bne.n	1005ad48 <__arm_cp.4_7+0x254>
1005acc0:	2200      	movs	r2, #0
1005acc2:	e04e      	b.n	1005ad62 <__arm_cp.4_7+0x26e>
1005acc4:	0749      	lsls	r1, r1, #29
1005acc6:	d428      	bmi.n	1005ad1a <__arm_cp.4_7+0x226>
1005acc8:	2e06      	cmp	r6, #6
1005acca:	d002      	beq.n	1005acd2 <__arm_cp.4_7+0x1de>
1005accc:	2e00      	cmp	r6, #0
1005acce:	d000      	beq.n	1005acd2 <__arm_cp.4_7+0x1de>
1005acd0:	e089      	b.n	1005ade6 <__arm_cp.4_7+0x2f2>
1005acd2:	463c      	mov	r4, r7
1005acd4:	9907      	ldr	r1, [sp, #28]
1005acd6:	19c9      	adds	r1, r1, r7
1005acd8:	22aa      	movs	r2, #170	@ 0xaa
1005acda:	5c89      	ldrb	r1, [r1, r2]
1005acdc:	2701      	movs	r7, #1
1005acde:	2901      	cmp	r1, #1
1005ace0:	463e      	mov	r6, r7
1005ace2:	d111      	bne.n	1005ad08 <__arm_cp.4_7+0x214>
1005ace4:	28fd      	cmp	r0, #253	@ 0xfd
1005ace6:	463e      	mov	r6, r7
1005ace8:	d00e      	beq.n	1005ad08 <__arm_cp.4_7+0x214>
1005acea:	2601      	movs	r6, #1
1005acec:	2100      	movs	r1, #0
1005acee:	9807      	ldr	r0, [sp, #28]
1005acf0:	4632      	mov	r2, r6
1005acf2:	9106      	str	r1, [sp, #24]
1005acf4:	460b      	mov	r3, r1
1005acf6:	f000 ff0f 	bl	1005bb18 <llc_scan_prepare_tx_pdu>
1005acfa:	2801      	cmp	r0, #1
1005acfc:	d104      	bne.n	1005ad08 <__arm_cp.4_7+0x214>
1005acfe:	78e8      	ldrb	r0, [r5, #3]
1005ad00:	2108      	movs	r1, #8
1005ad02:	4301      	orrs	r1, r0
1005ad04:	70e9      	strb	r1, [r5, #3]
1005ad06:	9e06      	ldr	r6, [sp, #24]
1005ad08:	a80b      	add	r0, sp, #44	@ 0x2c
1005ad0a:	7007      	strb	r7, [r0, #0]
1005ad0c:	4627      	mov	r7, r4
1005ad0e:	e074      	b.n	1005adfa <__arm_cp.4_7+0x306>
1005ad10:	2204      	movs	r2, #4
1005ad12:	e026      	b.n	1005ad62 <__arm_cp.4_7+0x26e>
1005ad14:	f007 face 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005ad18:	e01e      	b.n	1005ad58 <__arm_cp.4_7+0x264>
1005ad1a:	2e00      	cmp	r6, #0
1005ad1c:	9c07      	ldr	r4, [sp, #28]
1005ad1e:	d001      	beq.n	1005ad24 <__arm_cp.4_7+0x230>
1005ad20:	2e01      	cmp	r6, #1
1005ad22:	d117      	bne.n	1005ad54 <__arm_cp.4_7+0x260>
1005ad24:	28fd      	cmp	r0, #253	@ 0xfd
1005ad26:	d015      	beq.n	1005ad54 <__arm_cp.4_7+0x260>
1005ad28:	2600      	movs	r6, #0
1005ad2a:	4620      	mov	r0, r4
1005ad2c:	4631      	mov	r1, r6
1005ad2e:	4632      	mov	r2, r6
1005ad30:	4633      	mov	r3, r6
1005ad32:	f000 fef1 	bl	1005bb18 <llc_scan_prepare_tx_pdu>
1005ad36:	2801      	cmp	r0, #1
1005ad38:	d10e      	bne.n	1005ad58 <__arm_cp.4_7+0x264>
1005ad3a:	00b8      	lsls	r0, r7, #2
1005ad3c:	1820      	adds	r0, r4, r0
1005ad3e:	6880      	ldr	r0, [r0, #8]
1005ad40:	3014      	adds	r0, #20
1005ad42:	f7eb f823 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
1005ad46:	e059      	b.n	1005adfc <__arm_cp.4_7+0x308>
1005ad48:	2105      	movs	r1, #5
1005ad4a:	4001      	ands	r1, r0
1005ad4c:	2905      	cmp	r1, #5
1005ad4e:	d105      	bne.n	1005ad5c <__arm_cp.4_7+0x268>
1005ad50:	2201      	movs	r2, #1
1005ad52:	e006      	b.n	1005ad62 <__arm_cp.4_7+0x26e>
1005ad54:	f7e9 ff5b 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
1005ad58:	2601      	movs	r6, #1
1005ad5a:	e04f      	b.n	1005adfc <__arm_cp.4_7+0x308>
1005ad5c:	0780      	lsls	r0, r0, #30
1005ad5e:	d500      	bpl.n	1005ad62 <__arm_cp.4_7+0x26e>
1005ad60:	2202      	movs	r2, #2
1005ad62:	9209      	str	r2, [sp, #36]	@ 0x24
1005ad64:	482a      	ldr	r0, [pc, #168]	@ (1005ae10 <__arm_cp.4_3>)
1005ad66:	6800      	ldr	r0, [r0, #0]
1005ad68:	212c      	movs	r1, #44	@ 0x2c
1005ad6a:	5c40      	ldrb	r0, [r0, r1]
1005ad6c:	07c0      	lsls	r0, r0, #31
1005ad6e:	0ec1      	lsrs	r1, r0, #27
1005ad70:	a818      	add	r0, sp, #96	@ 0x60
1005ad72:	900a      	str	r0, [sp, #40]	@ 0x28
1005ad74:	2900      	cmp	r1, #0
1005ad76:	d101      	bne.n	1005ad7c <__arm_cp.4_7+0x288>
1005ad78:	2209      	movs	r2, #9
1005ad7a:	e00c      	b.n	1005ad96 <__arm_cp.4_7+0x2a2>
1005ad7c:	4823      	ldr	r0, [pc, #140]	@ (1005ae0c <__arm_cp.4_1>)
1005ad7e:	6800      	ldr	r0, [r0, #0]
1005ad80:	223d      	movs	r2, #61	@ 0x3d
1005ad82:	5c82      	ldrb	r2, [r0, r2]
1005ad84:	0692      	lsls	r2, r2, #26
1005ad86:	d400      	bmi.n	1005ad8a <__arm_cp.4_7+0x296>
1005ad88:	e751      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005ad8a:	461a      	mov	r2, r3
1005ad8c:	303d      	adds	r0, #61	@ 0x3d
1005ad8e:	7a40      	ldrb	r0, [r0, #9]
1005ad90:	0780      	lsls	r0, r0, #30
1005ad92:	d400      	bmi.n	1005ad96 <__arm_cp.4_7+0x2a2>
1005ad94:	e74b      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005ad96:	204e      	movs	r0, #78	@ 0x4e
1005ad98:	43c0      	mvns	r0, r0
1005ad9a:	4041      	eors	r1, r0
1005ad9c:	1e78      	subs	r0, r7, #1
1005ad9e:	2303      	movs	r3, #3
1005ada0:	4303      	orrs	r3, r0
1005ada2:	331d      	adds	r3, #29
1005ada4:	0898      	lsrs	r0, r3, #2
1005ada6:	b283      	uxth	r3, r0
1005ada8:	481a      	ldr	r0, [pc, #104]	@ (1005ae14 <__arm_cp.4_4>)
1005adaa:	6800      	ldr	r0, [r0, #0]
1005adac:	6940      	ldr	r0, [r0, #20]
1005adae:	b2c9      	uxtb	r1, r1
1005adb0:	460d      	mov	r5, r1
1005adb2:	f7f5 faa5 	bl	10050300 <aci_event_fifo_push_header>
1005adb6:	2800      	cmp	r0, #0
1005adb8:	d100      	bne.n	1005adbc <__arm_cp.4_7+0x2c8>
1005adba:	e738      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005adbc:	4606      	mov	r6, r0
1005adbe:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005adc0:	1c43      	adds	r3, r0, #1
1005adc2:	9806      	ldr	r0, [sp, #24]
1005adc4:	b240      	sxtb	r0, r0
1005adc6:	9000      	str	r0, [sp, #0]
1005adc8:	9701      	str	r7, [sp, #4]
1005adca:	9402      	str	r4, [sp, #8]
1005adcc:	1d30      	adds	r0, r6, #4
1005adce:	9905      	ldr	r1, [sp, #20]
1005add0:	b2ca      	uxtb	r2, r1
1005add2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005add4:	f7f6 f878 	bl	10050ec8 <hci_le_advertising_report_event_copy>
1005add8:	480f      	ldr	r0, [pc, #60]	@ (1005ae18 <__arm_cp.4_5>)
1005adda:	6070      	str	r0, [r6, #4]
1005addc:	4628      	mov	r0, r5
1005adde:	4631      	mov	r1, r6
1005ade0:	f7f5 fb2b 	bl	1005043a <aci_event_fifo_push>
1005ade4:	e723      	b.n	1005ac2e <__arm_cp.4_7+0x13a>
1005ade6:	f007 fa65 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005adea:	1e70      	subs	r0, r6, #1
1005adec:	2801      	cmp	r0, #1
1005adee:	d803      	bhi.n	1005adf8 <__arm_cp.4_7+0x304>
1005adf0:	a80b      	add	r0, sp, #44	@ 0x2c
1005adf2:	2601      	movs	r6, #1
1005adf4:	7006      	strb	r6, [r0, #0]
1005adf6:	e000      	b.n	1005adfa <__arm_cp.4_7+0x306>
1005adf8:	2601      	movs	r6, #1
1005adfa:	9c07      	ldr	r4, [sp, #28]
1005adfc:	f7f5 fa7d 	bl	100502fa <log_notify_us_flush_ucfg_weak>
1005ae00:	2e00      	cmp	r6, #0
1005ae02:	d000      	beq.n	1005ae06 <__arm_cp.4_7+0x312>
1005ae04:	e551      	b.n	1005a8aa <llc_scan_isr+0x26>
1005ae06:	e5bf      	b.n	1005a988 <llc_scan_isr+0x104>

1005ae08 <__arm_cp.4_0>:
1005ae08:	20000890 	.word	0x20000890

1005ae0c <__arm_cp.4_1>:
1005ae0c:	20000894 	.word	0x20000894

1005ae10 <__arm_cp.4_3>:
1005ae10:	2000083c 	.word	0x2000083c

1005ae14 <__arm_cp.4_4>:
1005ae14:	20000840 	.word	0x20000840

1005ae18 <__arm_cp.4_5>:
1005ae18:	1006691d 	.word	0x1006691d

1005ae1c <llc_scan_isr_coded>:
1005ae1c:	b580      	push	{r7, lr}
1005ae1e:	2101      	movs	r1, #1
1005ae20:	f7ff fd30 	bl	1005a884 <llc_scan_isr>
1005ae24:	2000      	movs	r0, #0
1005ae26:	bd80      	pop	{r7, pc}

1005ae28 <llc_scan_process_ext_adv>:
1005ae28:	b5f0      	push	{r4, r5, r6, r7, lr}
1005ae2a:	b093      	sub	sp, #76	@ 0x4c
1005ae2c:	9310      	str	r3, [sp, #64]	@ 0x40
1005ae2e:	920e      	str	r2, [sp, #56]	@ 0x38
1005ae30:	460f      	mov	r7, r1
1005ae32:	21eb      	movs	r1, #235	@ 0xeb
1005ae34:	5c41      	ldrb	r1, [r0, r1]
1005ae36:	088a      	lsrs	r2, r1, #2
1005ae38:	2601      	movs	r6, #1
1005ae3a:	4631      	mov	r1, r6
1005ae3c:	4391      	bics	r1, r2
1005ae3e:	9c19      	ldr	r4, [sp, #100]	@ 0x64
1005ae40:	7021      	strb	r1, [r4, #0]
1005ae42:	2500      	movs	r5, #0
1005ae44:	733d      	strb	r5, [r7, #12]
1005ae46:	607d      	str	r5, [r7, #4]
1005ae48:	757d      	strb	r5, [r7, #21]
1005ae4a:	900f      	str	r0, [sp, #60]	@ 0x3c
1005ae4c:	6800      	ldr	r0, [r0, #0]
1005ae4e:	4639      	mov	r1, r7
1005ae50:	f000 fdd6 	bl	1005ba00 <llc_scan_parse_ext_adv_pdu>
1005ae54:	6838      	ldr	r0, [r7, #0]
1005ae56:	2800      	cmp	r0, #0
1005ae58:	d040      	beq.n	1005aedc <llc_scan_process_ext_adv+0xb4>
1005ae5a:	463a      	mov	r2, r7
1005ae5c:	960d      	str	r6, [sp, #52]	@ 0x34
1005ae5e:	7025      	strb	r5, [r4, #0]
1005ae60:	7cb8      	ldrb	r0, [r7, #18]
1005ae62:	2802      	cmp	r0, #2
1005ae64:	d83c      	bhi.n	1005aee0 <llc_scan_process_ext_adv+0xb8>
1005ae66:	950b      	str	r5, [sp, #44]	@ 0x2c
1005ae68:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
1005ae6a:	4639      	mov	r1, r7
1005ae6c:	31eb      	adds	r1, #235	@ 0xeb
1005ae6e:	9818      	ldr	r0, [sp, #96]	@ 0x60
1005ae70:	900a      	str	r0, [sp, #40]	@ 0x28
1005ae72:	7b90      	ldrb	r0, [r2, #14]
1005ae74:	4614      	mov	r4, r2
1005ae76:	2206      	movs	r2, #6
1005ae78:	4342      	muls	r2, r0
1005ae7a:	b2d0      	uxtb	r0, r2
1005ae7c:	784d      	ldrb	r5, [r1, #1]
1005ae7e:	4961      	ldr	r1, [pc, #388]	@ (1005b004 <__arm_cp.8_0>)
1005ae80:	6809      	ldr	r1, [r1, #0]
1005ae82:	6809      	ldr	r1, [r1, #0]
1005ae84:	9112      	str	r1, [sp, #72]	@ 0x48
1005ae86:	6821      	ldr	r1, [r4, #0]
1005ae88:	f001 fd84 	bl	1005c994 <llc_calculate_window_widening>
1005ae8c:	9009      	str	r0, [sp, #36]	@ 0x24
1005ae8e:	0846      	lsrs	r6, r0, #1
1005ae90:	9810      	ldr	r0, [sp, #64]	@ 0x40
1005ae92:	0680      	lsls	r0, r0, #26
1005ae94:	0e00      	lsrs	r0, r0, #24
1005ae96:	f7eb fc26 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
1005ae9a:	1830      	adds	r0, r6, r0
1005ae9c:	940c      	str	r4, [sp, #48]	@ 0x30
1005ae9e:	6821      	ldr	r1, [r4, #0]
1005aea0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1005aea2:	1851      	adds	r1, r2, r1
1005aea4:	1a08      	subs	r0, r1, r0
1005aea6:	9012      	str	r0, [sp, #72]	@ 0x48
1005aea8:	4639      	mov	r1, r7
1005aeaa:	3110      	adds	r1, #16
1005aeac:	204b      	movs	r0, #75	@ 0x4b
1005aeae:	0080      	lsls	r0, r0, #2
1005aeb0:	9011      	str	r0, [sp, #68]	@ 0x44
1005aeb2:	460a      	mov	r2, r1
1005aeb4:	462b      	mov	r3, r5
1005aeb6:	2b00      	cmp	r3, #0
1005aeb8:	d014      	beq.n	1005aee4 <llc_scan_process_ext_adv+0xbc>
1005aeba:	6816      	ldr	r6, [r2, #0]
1005aebc:	202b      	movs	r0, #43	@ 0x2b
1005aebe:	5c30      	ldrb	r0, [r6, r0]
1005aec0:	28ff      	cmp	r0, #255	@ 0xff
1005aec2:	d008      	beq.n	1005aed6 <llc_scan_process_ext_adv+0xae>
1005aec4:	6834      	ldr	r4, [r6, #0]
1005aec6:	9f12      	ldr	r7, [sp, #72]	@ 0x48
1005aec8:	1be4      	subs	r4, r4, r7
1005aeca:	17e7      	asrs	r7, r4, #31
1005aecc:	19e4      	adds	r4, r4, r7
1005aece:	407c      	eors	r4, r7
1005aed0:	9f11      	ldr	r7, [sp, #68]	@ 0x44
1005aed2:	42bc      	cmp	r4, r7
1005aed4:	d319      	bcc.n	1005af0a <llc_scan_process_ext_adv+0xe2>
1005aed6:	1d12      	adds	r2, r2, #4
1005aed8:	1e5b      	subs	r3, r3, #1
1005aeda:	e7ec      	b.n	1005aeb6 <llc_scan_process_ext_adv+0x8e>
1005aedc:	4635      	mov	r5, r6
1005aede:	e08d      	b.n	1005affc <llc_scan_process_ext_adv+0x1d4>
1005aee0:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
1005aee2:	e08b      	b.n	1005affc <llc_scan_process_ext_adv+0x1d4>
1005aee4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005aee6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1005aee8:	2d00      	cmp	r5, #0
1005aeea:	d00c      	beq.n	1005af06 <llc_scan_process_ext_adv+0xde>
1005aeec:	680e      	ldr	r6, [r1, #0]
1005aeee:	202a      	movs	r0, #42	@ 0x2a
1005aef0:	5c30      	ldrb	r0, [r6, r0]
1005aef2:	28ff      	cmp	r0, #255	@ 0xff
1005aef4:	d004      	beq.n	1005af00 <llc_scan_process_ext_adv+0xd8>
1005aef6:	4630      	mov	r0, r6
1005aef8:	302a      	adds	r0, #42	@ 0x2a
1005aefa:	7840      	ldrb	r0, [r0, #1]
1005aefc:	28ff      	cmp	r0, #255	@ 0xff
1005aefe:	d00f      	beq.n	1005af20 <llc_scan_process_ext_adv+0xf8>
1005af00:	1d09      	adds	r1, r1, #4
1005af02:	1e6d      	subs	r5, r5, #1
1005af04:	e7f0      	b.n	1005aee8 <llc_scan_process_ext_adv+0xc0>
1005af06:	461d      	mov	r5, r3
1005af08:	e078      	b.n	1005affc <llc_scan_process_ext_adv+0x1d4>
1005af0a:	4634      	mov	r4, r6
1005af0c:	342b      	adds	r4, #43	@ 0x2b
1005af0e:	9912      	ldr	r1, [sp, #72]	@ 0x48
1005af10:	f007 fa44 	bl	1006239c <LL_sched_set_anchor>
1005af14:	7821      	ldrb	r1, [r4, #0]
1005af16:	39ff      	subs	r1, #255	@ 0xff
1005af18:	4248      	negs	r0, r1
1005af1a:	4148      	adcs	r0, r1
1005af1c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005af1e:	e000      	b.n	1005af22 <llc_scan_process_ext_adv+0xfa>
1005af20:	2001      	movs	r0, #1
1005af22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1005af24:	4938      	ldr	r1, [pc, #224]	@ (1005b008 <__arm_cp.8_1>)
1005af26:	4359      	muls	r1, r3
1005af28:	09cb      	lsrs	r3, r1, #7
1005af2a:	217d      	movs	r1, #125	@ 0x7d
1005af2c:	010d      	lsls	r5, r1, #4
1005af2e:	4637      	mov	r7, r6
1005af30:	3726      	adds	r7, #38	@ 0x26
1005af32:	2800      	cmp	r0, #0
1005af34:	d034      	beq.n	1005afa0 <llc_scan_process_ext_adv+0x178>
1005af36:	793c      	ldrb	r4, [r7, #4]
1005af38:	7c90      	ldrb	r0, [r2, #18]
1005af3a:	1c40      	adds	r0, r0, #1
1005af3c:	b2c0      	uxtb	r0, r0
1005af3e:	21ff      	movs	r1, #255	@ 0xff
1005af40:	2200      	movs	r2, #0
1005af42:	930d      	str	r3, [sp, #52]	@ 0x34
1005af44:	f001 fe54 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
1005af48:	9009      	str	r0, [sp, #36]	@ 0x24
1005af4a:	717c      	strb	r4, [r7, #5]
1005af4c:	9810      	ldr	r0, [sp, #64]	@ 0x40
1005af4e:	7078      	strb	r0, [r7, #1]
1005af50:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005af52:	7bc0      	ldrb	r0, [r0, #15]
1005af54:	70f8      	strb	r0, [r7, #3]
1005af56:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005af58:	7c80      	ldrb	r0, [r0, #18]
1005af5a:	1c40      	adds	r0, r0, #1
1005af5c:	70b8      	strb	r0, [r7, #2]
1005af5e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
1005af60:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1005af62:	1d00      	adds	r0, r0, #4
1005af64:	2201      	movs	r2, #1
1005af66:	4621      	mov	r1, r4
1005af68:	f001 f9d4 	bl	1005c314 <llc_scan_set_blue_sm>
1005af6c:	4827      	ldr	r0, [pc, #156]	@ (1005b00c <__arm_cp.8_2>)
1005af6e:	9007      	str	r0, [sp, #28]
1005af70:	4827      	ldr	r0, [pc, #156]	@ (1005b010 <__arm_cp.8_3>)
1005af72:	9006      	str	r0, [sp, #24]
1005af74:	4827      	ldr	r0, [pc, #156]	@ (1005b014 <__arm_cp.8_4>)
1005af76:	9005      	str	r0, [sp, #20]
1005af78:	4827      	ldr	r0, [pc, #156]	@ (1005b018 <__arm_cp.8_5>)
1005af7a:	9004      	str	r0, [sp, #16]
1005af7c:	2007      	movs	r0, #7
1005af7e:	9003      	str	r0, [sp, #12]
1005af80:	2009      	movs	r0, #9
1005af82:	9002      	str	r0, [sp, #8]
1005af84:	9812      	ldr	r0, [sp, #72]	@ 0x48
1005af86:	9001      	str	r0, [sp, #4]
1005af88:	9811      	ldr	r0, [sp, #68]	@ 0x44
1005af8a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005af8c:	1843      	adds	r3, r0, r1
1005af8e:	331c      	adds	r3, #28
1005af90:	9300      	str	r3, [sp, #0]
1005af92:	2203      	movs	r2, #3
1005af94:	4620      	mov	r0, r4
1005af96:	4631      	mov	r1, r6
1005af98:	f007 fa24 	bl	100623e4 <LL_sched_enable_taskslot>
1005af9c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1005af9e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005afa0:	1959      	adds	r1, r3, r5
1005afa2:	9812      	ldr	r0, [sp, #72]	@ 0x48
1005afa4:	6030      	str	r0, [r6, #0]
1005afa6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005afa8:	71bb      	strb	r3, [r7, #6]
1005afaa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
1005afac:	703d      	strb	r5, [r7, #0]
1005afae:	76f5      	strb	r5, [r6, #27]
1005afb0:	8910      	ldrh	r0, [r2, #8]
1005afb2:	84b0      	strh	r0, [r6, #36]	@ 0x24
1005afb4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1005afb6:	ca05      	ldmia	r2, {r0, r2}
1005afb8:	60f0      	str	r0, [r6, #12]
1005afba:	6132      	str	r2, [r6, #16]
1005afbc:	2b01      	cmp	r3, #1
1005afbe:	d105      	bne.n	1005afcc <llc_scan_process_ext_adv+0x1a4>
1005afc0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1005afc2:	6d58      	ldr	r0, [r3, #84]	@ 0x54
1005afc4:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
1005afc6:	6070      	str	r0, [r6, #4]
1005afc8:	60b2      	str	r2, [r6, #8]
1005afca:	e002      	b.n	1005afd2 <llc_scan_process_ext_adv+0x1aa>
1005afcc:	6075      	str	r5, [r6, #4]
1005afce:	60b5      	str	r5, [r6, #8]
1005afd0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1005afd2:	6b98      	ldr	r0, [r3, #56]	@ 0x38
1005afd4:	1d00      	adds	r0, r0, #4
1005afd6:	461c      	mov	r4, r3
1005afd8:	f7eb f82d 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
1005afdc:	9810      	ldr	r0, [sp, #64]	@ 0x40
1005afde:	0080      	lsls	r0, r0, #2
1005afe0:	1824      	adds	r4, r4, r0
1005afe2:	f7e9 fdd3 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1005afe6:	218c      	movs	r1, #140	@ 0x8c
1005afe8:	5862      	ldr	r2, [r4, r1]
1005afea:	6ca3      	ldr	r3, [r4, #72]	@ 0x48
1005afec:	1ac0      	subs	r0, r0, r3
1005afee:	1880      	adds	r0, r0, r2
1005aff0:	5060      	str	r0, [r4, r1]
1005aff2:	7979      	ldrb	r1, [r7, #5]
1005aff4:	2080      	movs	r0, #128	@ 0x80
1005aff6:	4308      	orrs	r0, r1
1005aff8:	f007 fa52 	bl	100624a0 <LL_sched_engine>
1005affc:	4628      	mov	r0, r5
1005affe:	b013      	add	sp, #76	@ 0x4c
1005b000:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005b002:	46c0      	nop			@ (mov r8, r8)

1005b004 <__arm_cp.8_0>:
1005b004:	20000894 	.word	0x20000894

1005b008 <__arm_cp.8_1>:
1005b008:	00000271 	.word	0x00000271

1005b00c <__arm_cp.8_2>:
1005b00c:	1006a09d 	.word	0x1006a09d

1005b010 <__arm_cp.8_3>:
1005b010:	1005b01d 	.word	0x1005b01d

1005b014 <__arm_cp.8_4>:
1005b014:	1006a0a5 	.word	0x1006a0a5

1005b018 <__arm_cp.8_5>:
1005b018:	1006a0d5 	.word	0x1006a0d5

1005b01c <llc_scan_aux_isr>:
1005b01c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005b01e:	b0c7      	sub	sp, #284	@ 0x11c
1005b020:	4604      	mov	r4, r0
1005b022:	f000 fb47 	bl	1005b6b4 <llc_scan_get_cntxt_p>
1005b026:	4605      	mov	r5, r0
1005b028:	20f3      	movs	r0, #243	@ 0xf3
1005b02a:	5c28      	ldrb	r0, [r5, r0]
1005b02c:	1d21      	adds	r1, r4, #4
1005b02e:	910c      	str	r1, [sp, #48]	@ 0x30
1005b030:	aa3e      	add	r2, sp, #248	@ 0xf8
1005b032:	4621      	mov	r1, r4
1005b034:	3120      	adds	r1, #32
1005b036:	910d      	str	r1, [sp, #52]	@ 0x34
1005b038:	462e      	mov	r6, r5
1005b03a:	36ea      	adds	r6, #234	@ 0xea
1005b03c:	2800      	cmp	r0, #0
1005b03e:	d038      	beq.n	1005b0b2 <llc_scan_aux_isr+0x96>
1005b040:	2700      	movs	r7, #0
1005b042:	7277      	strb	r7, [r6, #9]
1005b044:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005b046:	f7e9 fde2 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
1005b04a:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
1005b04c:	1d00      	adds	r0, r0, #4
1005b04e:	f7ea ff91 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005b052:	7af0      	ldrb	r0, [r6, #11]
1005b054:	f007 fd6e 	bl	10062b34 <LL_sched_force_to_reserved>
1005b058:	20ff      	movs	r0, #255	@ 0xff
1005b05a:	72f0      	strb	r0, [r6, #11]
1005b05c:	7ab0      	ldrb	r0, [r6, #10]
1005b05e:	f007 fa1f 	bl	100624a0 <LL_sched_engine>
1005b062:	35b0      	adds	r5, #176	@ 0xb0
1005b064:	7828      	ldrb	r0, [r5, #0]
1005b066:	28ff      	cmp	r0, #255	@ 0xff
1005b068:	d150      	bne.n	1005b10c <llc_scan_aux_isr+0xf0>
1005b06a:	2f02      	cmp	r7, #2
1005b06c:	d041      	beq.n	1005b0f2 <llc_scan_aux_isr+0xd6>
1005b06e:	2f01      	cmp	r7, #1
1005b070:	d14c      	bne.n	1005b10c <llc_scan_aux_isr+0xf0>
1005b072:	7ea0      	ldrb	r0, [r4, #26]
1005b074:	4605      	mov	r5, r0
1005b076:	3de5      	subs	r5, #229	@ 0xe5
1005b078:	d200      	bcs.n	1005b07c <llc_scan_aux_isr+0x60>
1005b07a:	2500      	movs	r5, #0
1005b07c:	7b31      	ldrb	r1, [r6, #12]
1005b07e:	4626      	mov	r6, r4
1005b080:	7ee2      	ldrb	r2, [r4, #27]
1005b082:	0844      	lsrs	r4, r0, #1
1005b084:	2c72      	cmp	r4, #114	@ 0x72
1005b086:	d901      	bls.n	1005b08c <llc_scan_aux_isr+0x70>
1005b088:	2320      	movs	r3, #32
1005b08a:	431a      	orrs	r2, r3
1005b08c:	2900      	cmp	r1, #0
1005b08e:	d102      	bne.n	1005b096 <llc_scan_aux_isr+0x7a>
1005b090:	21ff      	movs	r1, #255	@ 0xff
1005b092:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1005b094:	7019      	strb	r1, [r3, #0]
1005b096:	1b40      	subs	r0, r0, r5
1005b098:	b2c1      	uxtb	r1, r0
1005b09a:	b2d3      	uxtb	r3, r2
1005b09c:	2200      	movs	r2, #0
1005b09e:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005b0a0:	f7f3 fd82 	bl	1004eba8 <llc_scan_push_ext_adv_report_ucfg>
1005b0a4:	2c73      	cmp	r4, #115	@ 0x73
1005b0a6:	d331      	bcc.n	1005b10c <llc_scan_aux_isr+0xf0>
1005b0a8:	7ef3      	ldrb	r3, [r6, #27]
1005b0aa:	b2e9      	uxtb	r1, r5
1005b0ac:	22e5      	movs	r2, #229	@ 0xe5
1005b0ae:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005b0b0:	e02a      	b.n	1005b108 <llc_scan_aux_isr+0xec>
1005b0b2:	920a      	str	r2, [sp, #40]	@ 0x28
1005b0b4:	940b      	str	r4, [sp, #44]	@ 0x2c
1005b0b6:	4cdd      	ldr	r4, [pc, #884]	@ (1005b42c <__arm_cp.0_4>)
1005b0b8:	6820      	ldr	r0, [r4, #0]
1005b0ba:	f7ea fe20 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
1005b0be:	4607      	mov	r7, r0
1005b0c0:	6820      	ldr	r0, [r4, #0]
1005b0c2:	f7ea fe33 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
1005b0c6:	49da      	ldr	r1, [pc, #872]	@ (1005b430 <__arm_cp.0_4+0x4>)
1005b0c8:	6809      	ldr	r1, [r1, #0]
1005b0ca:	22d8      	movs	r2, #216	@ 0xd8
1005b0cc:	5c89      	ldrb	r1, [r1, r2]
1005b0ce:	2900      	cmp	r1, #0
1005b0d0:	d00c      	beq.n	1005b0ec <llc_scan_aux_isr+0xd0>
1005b0d2:	2800      	cmp	r0, #0
1005b0d4:	d01d      	beq.n	1005b112 <llc_scan_aux_isr+0xf6>
1005b0d6:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
1005b0d8:	1d00      	adds	r0, r0, #4
1005b0da:	f7ea fe57 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
1005b0de:	f7ea fd75 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
1005b0e2:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005b0e4:	7988      	ldrb	r0, [r1, #6]
1005b0e6:	1c40      	adds	r0, r0, #1
1005b0e8:	7188      	strb	r0, [r1, #6]
1005b0ea:	e00f      	b.n	1005b10c <llc_scan_aux_isr+0xf0>
1005b0ec:	2700      	movs	r7, #0
1005b0ee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
1005b0f0:	e7a8      	b.n	1005b044 <llc_scan_aux_isr+0x28>
1005b0f2:	2100      	movs	r1, #0
1005b0f4:	76a1      	strb	r1, [r4, #26]
1005b0f6:	6161      	str	r1, [r4, #20]
1005b0f8:	7ee0      	ldrb	r0, [r4, #27]
1005b0fa:	2240      	movs	r2, #64	@ 0x40
1005b0fc:	4302      	orrs	r2, r0
1005b0fe:	23df      	movs	r3, #223	@ 0xdf
1005b100:	4013      	ands	r3, r2
1005b102:	76e3      	strb	r3, [r4, #27]
1005b104:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005b106:	460a      	mov	r2, r1
1005b108:	f7f3 fd4e 	bl	1004eba8 <llc_scan_push_ext_adv_report_ucfg>
1005b10c:	2000      	movs	r0, #0
1005b10e:	b047      	add	sp, #284	@ 0x11c
1005b110:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005b112:	2f00      	cmp	r7, #0
1005b114:	d02e      	beq.n	1005b174 <llc_scan_aux_isr+0x158>
1005b116:	f7e9 fd31 	bl	10044b7c <BLEPLAT_GetDemodCI>
1005b11a:	79f1      	ldrb	r1, [r6, #7]
1005b11c:	2203      	movs	r2, #3
1005b11e:	400a      	ands	r2, r1
1005b120:	0080      	lsls	r0, r0, #2
1005b122:	1810      	adds	r0, r2, r0
1005b124:	71f0      	strb	r0, [r6, #7]
1005b126:	f7ea fd51 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
1005b12a:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b12c:	7ac0      	ldrb	r0, [r0, #11]
1005b12e:	2109      	movs	r1, #9
1005b130:	460a      	mov	r2, r1
1005b132:	f007 fb7b 	bl	1006282c <LL_sched_set_priority>
1005b136:	682f      	ldr	r7, [r5, #0]
1005b138:	78b9      	ldrb	r1, [r7, #2]
1005b13a:	7838      	ldrb	r0, [r7, #0]
1005b13c:	9009      	str	r0, [sp, #36]	@ 0x24
1005b13e:	aa30      	add	r2, sp, #192	@ 0xc0
1005b140:	207f      	movs	r0, #127	@ 0x7f
1005b142:	8290      	strh	r0, [r2, #20]
1005b144:	20ff      	movs	r0, #255	@ 0xff
1005b146:	74d0      	strb	r0, [r2, #19]
1005b148:	2300      	movs	r3, #0
1005b14a:	9330      	str	r3, [sp, #192]	@ 0xc0
1005b14c:	2280      	movs	r2, #128	@ 0x80
1005b14e:	9206      	str	r2, [sp, #24]
1005b150:	9233      	str	r2, [sp, #204]	@ 0xcc
1005b152:	aa0e      	add	r2, sp, #56	@ 0x38
1005b154:	9231      	str	r2, [sp, #196]	@ 0xc4
1005b156:	220f      	movs	r2, #15
1005b158:	9207      	str	r2, [sp, #28]
1005b15a:	0689      	lsls	r1, r1, #26
1005b15c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
1005b15e:	d01f      	beq.n	1005b1a0 <llc_scan_aux_isr+0x184>
1005b160:	78f9      	ldrb	r1, [r7, #3]
1005b162:	07c9      	lsls	r1, r1, #31
1005b164:	463a      	mov	r2, r7
1005b166:	d11f      	bne.n	1005b1a8 <llc_scan_aux_isr+0x18c>
1005b168:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005b16a:	7b09      	ldrb	r1, [r1, #12]
1005b16c:	2900      	cmp	r1, #0
1005b16e:	d024      	beq.n	1005b1ba <llc_scan_aux_isr+0x19e>
1005b170:	2000      	movs	r0, #0
1005b172:	e032      	b.n	1005b1da <llc_scan_aux_isr+0x1be>
1005b174:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b176:	7980      	ldrb	r0, [r0, #6]
1005b178:	2702      	movs	r7, #2
1005b17a:	2801      	cmp	r0, #1
1005b17c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
1005b17e:	d007      	beq.n	1005b190 <llc_scan_aux_isr+0x174>
1005b180:	2804      	cmp	r0, #4
1005b182:	d005      	beq.n	1005b190 <llc_scan_aux_isr+0x174>
1005b184:	2803      	cmp	r0, #3
1005b186:	d102      	bne.n	1005b18e <llc_scan_aux_isr+0x172>
1005b188:	4628      	mov	r0, r5
1005b18a:	f000 fb5f 	bl	1005b84c <llc_scan_backoff_not_rcvd>
1005b18e:	2700      	movs	r7, #0
1005b190:	7870      	ldrb	r0, [r6, #1]
1005b192:	0740      	lsls	r0, r0, #29
1005b194:	d500      	bpl.n	1005b198 <llc_scan_aux_isr+0x17c>
1005b196:	e755      	b.n	1005b044 <llc_scan_aux_isr+0x28>
1005b198:	2000      	movs	r0, #0
1005b19a:	66e8      	str	r0, [r5, #108]	@ 0x6c
1005b19c:	6728      	str	r0, [r5, #112]	@ 0x70
1005b19e:	e751      	b.n	1005b044 <llc_scan_aux_isr+0x28>
1005b1a0:	9305      	str	r3, [sp, #20]
1005b1a2:	4618      	mov	r0, r3
1005b1a4:	463a      	mov	r2, r7
1005b1a6:	e03b      	b.n	1005b220 <llc_scan_aux_isr+0x204>
1005b1a8:	2001      	movs	r0, #1
1005b1aa:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005b1ac:	7308      	strb	r0, [r1, #12]
1005b1ae:	4628      	mov	r0, r5
1005b1b0:	4617      	mov	r7, r2
1005b1b2:	f000 fd3d 	bl	1005bc30 <llc_scan_process_adv_addr>
1005b1b6:	463a      	mov	r2, r7
1005b1b8:	e00f      	b.n	1005b1da <llc_scan_aux_isr+0x1be>
1005b1ba:	2100      	movs	r1, #0
1005b1bc:	913f      	str	r1, [sp, #252]	@ 0xfc
1005b1be:	903e      	str	r0, [sp, #248]	@ 0xf8
1005b1c0:	4617      	mov	r7, r2
1005b1c2:	7832      	ldrb	r2, [r6, #0]
1005b1c4:	a83e      	add	r0, sp, #248	@ 0xf8
1005b1c6:	9100      	str	r1, [sp, #0]
1005b1c8:	9001      	str	r0, [sp, #4]
1005b1ca:	4603      	mov	r3, r0
1005b1cc:	f00d ff58 	bl	10069080 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak>
1005b1d0:	463a      	mov	r2, r7
1005b1d2:	4601      	mov	r1, r0
1005b1d4:	39ff      	subs	r1, #255	@ 0xff
1005b1d6:	4248      	negs	r0, r1
1005b1d8:	4148      	adcs	r0, r1
1005b1da:	78d1      	ldrb	r1, [r2, #3]
1005b1dc:	0789      	lsls	r1, r1, #30
1005b1de:	d402      	bmi.n	1005b1e6 <llc_scan_aux_isr+0x1ca>
1005b1e0:	2100      	movs	r1, #0
1005b1e2:	9105      	str	r1, [sp, #20]
1005b1e4:	e009      	b.n	1005b1fa <llc_scan_aux_isr+0x1de>
1005b1e6:	2101      	movs	r1, #1
1005b1e8:	9105      	str	r1, [sp, #20]
1005b1ea:	2800      	cmp	r0, #0
1005b1ec:	d105      	bne.n	1005b1fa <llc_scan_aux_isr+0x1de>
1005b1ee:	a92e      	add	r1, sp, #184	@ 0xb8
1005b1f0:	4628      	mov	r0, r5
1005b1f2:	4617      	mov	r7, r2
1005b1f4:	f000 fd66 	bl	1005bcc4 <llc_scan_process_target_addr>
1005b1f8:	463a      	mov	r2, r7
1005b1fa:	7891      	ldrb	r1, [r2, #2]
1005b1fc:	098b      	lsrs	r3, r1, #6
1005b1fe:	2801      	cmp	r0, #1
1005b200:	d10e      	bne.n	1005b220 <llc_scan_aux_isr+0x204>
1005b202:	7a30      	ldrb	r0, [r6, #8]
1005b204:	2800      	cmp	r0, #0
1005b206:	d108      	bne.n	1005b21a <llc_scan_aux_isr+0x1fe>
1005b208:	4628      	mov	r0, r5
1005b20a:	3074      	adds	r0, #116	@ 0x74
1005b20c:	9308      	str	r3, [sp, #32]
1005b20e:	4617      	mov	r7, r2
1005b210:	f7f3 fb61 	bl	1004e8d6 <llc_pscan_check_address_ucfg>
1005b214:	463a      	mov	r2, r7
1005b216:	9b08      	ldr	r3, [sp, #32]
1005b218:	7230      	strb	r0, [r6, #8]
1005b21a:	1e40      	subs	r0, r0, #1
1005b21c:	1e41      	subs	r1, r0, #1
1005b21e:	4188      	sbcs	r0, r1
1005b220:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005b222:	9f07      	ldr	r7, [sp, #28]
1005b224:	4039      	ands	r1, r7
1005b226:	2800      	cmp	r0, #0
1005b228:	9308      	str	r3, [sp, #32]
1005b22a:	d11d      	bne.n	1005b268 <llc_scan_aux_isr+0x24c>
1005b22c:	2907      	cmp	r1, #7
1005b22e:	d11b      	bne.n	1005b268 <llc_scan_aux_isr+0x24c>
1005b230:	9109      	str	r1, [sp, #36]	@ 0x24
1005b232:	af30      	add	r7, sp, #192	@ 0xc0
1005b234:	4610      	mov	r0, r2
1005b236:	4639      	mov	r1, r7
1005b238:	f000 fbe2 	bl	1005ba00 <llc_scan_parse_ext_adv_pdu>
1005b23c:	7cf9      	ldrb	r1, [r7, #19]
1005b23e:	2000      	movs	r0, #0
1005b240:	29ff      	cmp	r1, #255	@ 0xff
1005b242:	d00f      	beq.n	1005b264 <llc_scan_aux_isr+0x248>
1005b244:	8ca1      	ldrh	r1, [r4, #36]	@ 0x24
1005b246:	aa30      	add	r2, sp, #192	@ 0xc0
1005b248:	8912      	ldrh	r2, [r2, #8]
1005b24a:	428a      	cmp	r2, r1
1005b24c:	9b08      	ldr	r3, [sp, #32]
1005b24e:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005b250:	d00a      	beq.n	1005b268 <llc_scan_aux_isr+0x24c>
1005b252:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b254:	7981      	ldrb	r1, [r0, #6]
1005b256:	1f0a      	subs	r2, r1, #4
1005b258:	4250      	negs	r0, r2
1005b25a:	4150      	adcs	r0, r2
1005b25c:	2901      	cmp	r1, #1
1005b25e:	d026      	beq.n	1005b2ae <llc_scan_aux_isr+0x292>
1005b260:	0047      	lsls	r7, r0, #1
1005b262:	e025      	b.n	1005b2b0 <llc_scan_aux_isr+0x294>
1005b264:	9b08      	ldr	r3, [sp, #32]
1005b266:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005b268:	2800      	cmp	r0, #0
1005b26a:	d106      	bne.n	1005b27a <llc_scan_aux_isr+0x25e>
1005b26c:	2b00      	cmp	r3, #0
1005b26e:	d004      	beq.n	1005b27a <llc_scan_aux_isr+0x25e>
1005b270:	2908      	cmp	r1, #8
1005b272:	d106      	bne.n	1005b282 <llc_scan_aux_isr+0x266>
1005b274:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b276:	7980      	ldrb	r0, [r0, #6]
1005b278:	e009      	b.n	1005b28e <llc_scan_aux_isr+0x272>
1005b27a:	2801      	cmp	r0, #1
1005b27c:	d10e      	bne.n	1005b29c <llc_scan_aux_isr+0x280>
1005b27e:	2700      	movs	r7, #0
1005b280:	e016      	b.n	1005b2b0 <llc_scan_aux_isr+0x294>
1005b282:	2907      	cmp	r1, #7
1005b284:	d10a      	bne.n	1005b29c <llc_scan_aux_isr+0x280>
1005b286:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b288:	7980      	ldrb	r0, [r0, #6]
1005b28a:	2800      	cmp	r0, #0
1005b28c:	d006      	beq.n	1005b29c <llc_scan_aux_isr+0x280>
1005b28e:	1f02      	subs	r2, r0, #4
1005b290:	4251      	negs	r1, r2
1005b292:	4151      	adcs	r1, r2
1005b294:	2801      	cmp	r0, #1
1005b296:	d00a      	beq.n	1005b2ae <llc_scan_aux_isr+0x292>
1005b298:	004f      	lsls	r7, r1, #1
1005b29a:	e009      	b.n	1005b2b0 <llc_scan_aux_isr+0x294>
1005b29c:	460f      	mov	r7, r1
1005b29e:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b2a0:	7ac0      	ldrb	r0, [r0, #11]
1005b2a2:	f7ea fffc 	bl	1004629e <BLEPLAT_CNTR_SmGetRxPhy>
1005b2a6:	2804      	cmp	r0, #4
1005b2a8:	d00c      	beq.n	1005b2c4 <llc_scan_aux_isr+0x2a8>
1005b2aa:	4602      	mov	r2, r0
1005b2ac:	e00b      	b.n	1005b2c6 <llc_scan_aux_isr+0x2aa>
1005b2ae:	2702      	movs	r7, #2
1005b2b0:	f007 f800 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005b2b4:	2601      	movs	r6, #1
1005b2b6:	f7f5 f820 	bl	100502fa <log_notify_us_flush_ucfg_weak>
1005b2ba:	2e00      	cmp	r6, #0
1005b2bc:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005b2be:	d000      	beq.n	1005b2c2 <llc_scan_aux_isr+0x2a6>
1005b2c0:	e6c1      	b.n	1005b046 <llc_scan_aux_isr+0x2a>
1005b2c2:	e6ce      	b.n	1005b062 <llc_scan_aux_isr+0x46>
1005b2c4:	2202      	movs	r2, #2
1005b2c6:	4639      	mov	r1, r7
1005b2c8:	2f07      	cmp	r7, #7
1005b2ca:	9f08      	ldr	r7, [sp, #32]
1005b2cc:	d14b      	bne.n	1005b366 <llc_scan_aux_isr+0x34a>
1005b2ce:	9007      	str	r0, [sp, #28]
1005b2d0:	9203      	str	r2, [sp, #12]
1005b2d2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
1005b2d4:	1e58      	subs	r0, r3, #1
1005b2d6:	4619      	mov	r1, r3
1005b2d8:	4181      	sbcs	r1, r0
1005b2da:	9109      	str	r1, [sp, #36]	@ 0x24
1005b2dc:	9304      	str	r3, [sp, #16]
1005b2de:	2b00      	cmp	r3, #0
1005b2e0:	d050      	beq.n	1005b384 <llc_scan_aux_isr+0x368>
1005b2e2:	f006 ffe7 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005b2e6:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
1005b2e8:	1d00      	adds	r0, r0, #4
1005b2ea:	f7ea fe43 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005b2ee:	a830      	add	r0, sp, #192	@ 0xc0
1005b2f0:	9003      	str	r0, [sp, #12]
1005b2f2:	7b80      	ldrb	r0, [r0, #14]
1005b2f4:	2106      	movs	r1, #6
1005b2f6:	4341      	muls	r1, r0
1005b2f8:	b2c8      	uxtb	r0, r1
1005b2fa:	49c5      	ldr	r1, [pc, #788]	@ (1005b610 <__arm_cp.0_1>)
1005b2fc:	6809      	ldr	r1, [r1, #0]
1005b2fe:	6809      	ldr	r1, [r1, #0]
1005b300:	910a      	str	r1, [sp, #40]	@ 0x28
1005b302:	9930      	ldr	r1, [sp, #192]	@ 0xc0
1005b304:	f001 fb46 	bl	1005c994 <llc_calculate_window_widening>
1005b308:	4606      	mov	r6, r0
1005b30a:	49c2      	ldr	r1, [pc, #776]	@ (1005b614 <__arm_cp.0_2>)
1005b30c:	4341      	muls	r1, r0
1005b30e:	09cc      	lsrs	r4, r1, #7
1005b310:	9807      	ldr	r0, [sp, #28]
1005b312:	f7eb f9e8 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
1005b316:	4607      	mov	r7, r0
1005b318:	207d      	movs	r0, #125	@ 0x7d
1005b31a:	0100      	lsls	r0, r0, #4
1005b31c:	1821      	adds	r1, r4, r0
1005b31e:	6ba8      	ldr	r0, [r5, #56]	@ 0x38
1005b320:	9c30      	ldr	r4, [sp, #192]	@ 0xc0
1005b322:	1d00      	adds	r0, r0, #4
1005b324:	f7ea fe87 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
1005b328:	0870      	lsrs	r0, r6, #1
1005b32a:	19c0      	adds	r0, r0, r7
1005b32c:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005b32e:	1909      	adds	r1, r1, r4
1005b330:	1a09      	subs	r1, r1, r0
1005b332:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
1005b334:	7ae0      	ldrb	r0, [r4, #11]
1005b336:	f007 f831 	bl	1006239c <LL_sched_set_anchor>
1005b33a:	9803      	ldr	r0, [sp, #12]
1005b33c:	7bc0      	ldrb	r0, [r0, #15]
1005b33e:	7260      	strb	r0, [r4, #9]
1005b340:	7ae0      	ldrb	r0, [r4, #11]
1005b342:	9906      	ldr	r1, [sp, #24]
1005b344:	4308      	orrs	r0, r1
1005b346:	f007 f8ab 	bl	100624a0 <LL_sched_engine>
1005b34a:	79a0      	ldrb	r0, [r4, #6]
1005b34c:	2600      	movs	r6, #0
1005b34e:	2804      	cmp	r0, #4
1005b350:	d03f      	beq.n	1005b3d2 <llc_scan_aux_isr+0x3b6>
1005b352:	2803      	cmp	r0, #3
1005b354:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
1005b356:	d040      	beq.n	1005b3da <llc_scan_aux_isr+0x3be>
1005b358:	2701      	movs	r7, #1
1005b35a:	2800      	cmp	r0, #0
1005b35c:	d101      	bne.n	1005b362 <llc_scan_aux_isr+0x346>
1005b35e:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b360:	7187      	strb	r7, [r0, #6]
1005b362:	4633      	mov	r3, r6
1005b364:	e0ea      	b.n	1005b53c <__arm_cp.0_4+0x110>
1005b366:	2601      	movs	r6, #1
1005b368:	2700      	movs	r7, #0
1005b36a:	2908      	cmp	r1, #8
1005b36c:	d1a3      	bne.n	1005b2b6 <llc_scan_aux_isr+0x29a>
1005b36e:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b370:	7980      	ldrb	r0, [r0, #6]
1005b372:	2806      	cmp	r0, #6
1005b374:	d19f      	bne.n	1005b2b6 <llc_scan_aux_isr+0x29a>
1005b376:	4628      	mov	r0, r5
1005b378:	4621      	mov	r1, r4
1005b37a:	f7f3 fbbb 	bl	1004eaf4 <llc_scan_aux_conn_rsp_rcvd_ucfg>
1005b37e:	2700      	movs	r7, #0
1005b380:	463e      	mov	r6, r7
1005b382:	e798      	b.n	1005b2b6 <llc_scan_aux_isr+0x29a>
1005b384:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b386:	7980      	ldrb	r0, [r0, #6]
1005b388:	2800      	cmp	r0, #0
1005b38a:	d02c      	beq.n	1005b3e6 <llc_scan_aux_isr+0x3ca>
1005b38c:	a830      	add	r0, sp, #192	@ 0xc0
1005b38e:	7d40      	ldrb	r0, [r0, #21]
1005b390:	2801      	cmp	r0, #1
1005b392:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005b394:	d000      	beq.n	1005b398 <llc_scan_aux_isr+0x37c>
1005b396:	e0a4      	b.n	1005b4e2 <__arm_cp.0_4+0xb6>
1005b398:	4628      	mov	r0, r5
1005b39a:	3054      	adds	r0, #84	@ 0x54
1005b39c:	7b31      	ldrb	r1, [r6, #12]
1005b39e:	2900      	cmp	r1, #0
1005b3a0:	d048      	beq.n	1005b434 <__arm_cp.0_4+0x8>
1005b3a2:	4629      	mov	r1, r5
1005b3a4:	3155      	adds	r1, #85	@ 0x55
1005b3a6:	790a      	ldrb	r2, [r1, #4]
1005b3a8:	794b      	ldrb	r3, [r1, #5]
1005b3aa:	021b      	lsls	r3, r3, #8
1005b3ac:	189a      	adds	r2, r3, r2
1005b3ae:	ab3a      	add	r3, sp, #232	@ 0xe8
1005b3b0:	809a      	strh	r2, [r3, #4]
1005b3b2:	2255      	movs	r2, #85	@ 0x55
1005b3b4:	5caa      	ldrb	r2, [r5, r2]
1005b3b6:	784b      	ldrb	r3, [r1, #1]
1005b3b8:	021b      	lsls	r3, r3, #8
1005b3ba:	189a      	adds	r2, r3, r2
1005b3bc:	788b      	ldrb	r3, [r1, #2]
1005b3be:	78c9      	ldrb	r1, [r1, #3]
1005b3c0:	0209      	lsls	r1, r1, #8
1005b3c2:	18c9      	adds	r1, r1, r3
1005b3c4:	0409      	lsls	r1, r1, #16
1005b3c6:	1889      	adds	r1, r1, r2
1005b3c8:	913a      	str	r1, [sp, #232]	@ 0xe8
1005b3ca:	4629      	mov	r1, r5
1005b3cc:	315b      	adds	r1, #91	@ 0x5b
1005b3ce:	7802      	ldrb	r2, [r0, #0]
1005b3d0:	e044      	b.n	1005b45c <__arm_cp.0_4+0x30>
1005b3d2:	2701      	movs	r7, #1
1005b3d4:	463b      	mov	r3, r7
1005b3d6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
1005b3d8:	e0b0      	b.n	1005b53c <__arm_cp.0_4+0x110>
1005b3da:	2004      	movs	r0, #4
1005b3dc:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005b3de:	7188      	strb	r0, [r1, #6]
1005b3e0:	2701      	movs	r7, #1
1005b3e2:	463b      	mov	r3, r7
1005b3e4:	e0aa      	b.n	1005b53c <__arm_cp.0_4+0x110>
1005b3e6:	2f00      	cmp	r7, #0
1005b3e8:	d0d0      	beq.n	1005b38c <llc_scan_aux_isr+0x370>
1005b3ea:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005b3ec:	79c0      	ldrb	r0, [r0, #7]
1005b3ee:	1828      	adds	r0, r5, r0
1005b3f0:	21aa      	movs	r1, #170	@ 0xaa
1005b3f2:	5c40      	ldrb	r0, [r0, r1]
1005b3f4:	2801      	cmp	r0, #1
1005b3f6:	d1c9      	bne.n	1005b38c <llc_scan_aux_isr+0x370>
1005b3f8:	a82e      	add	r0, sp, #184	@ 0xb8
1005b3fa:	7800      	ldrb	r0, [r0, #0]
1005b3fc:	7871      	ldrb	r1, [r6, #1]
1005b3fe:	0749      	lsls	r1, r1, #29
1005b400:	d500      	bpl.n	1005b404 <llc_scan_aux_isr+0x3e8>
1005b402:	e089      	b.n	1005b518 <__arm_cp.0_4+0xec>
1005b404:	2f02      	cmp	r7, #2
1005b406:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005b408:	d16b      	bne.n	1005b4e2 <__arm_cp.0_4+0xb6>
1005b40a:	28fd      	cmp	r0, #253	@ 0xfd
1005b40c:	d069      	beq.n	1005b4e2 <__arm_cp.0_4+0xb6>
1005b40e:	2701      	movs	r7, #1
1005b410:	2300      	movs	r3, #0
1005b412:	4628      	mov	r0, r5
1005b414:	9903      	ldr	r1, [sp, #12]
1005b416:	463a      	mov	r2, r7
1005b418:	930a      	str	r3, [sp, #40]	@ 0x28
1005b41a:	f000 fb7d 	bl	1005bb18 <llc_scan_prepare_tx_pdu>
1005b41e:	2801      	cmp	r0, #1
1005b420:	d15f      	bne.n	1005b4e2 <__arm_cp.0_4+0xb6>
1005b422:	2002      	movs	r0, #2
1005b424:	71b0      	strb	r0, [r6, #6]
1005b426:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005b428:	461e      	mov	r6, r3
1005b42a:	e087      	b.n	1005b53c <__arm_cp.0_4+0x110>

1005b42c <__arm_cp.0_4>:
1005b42c:	20000890 	.word	0x20000890
1005b430:	20000894 	.word	0x20000894
1005b434:	7a61      	ldrb	r1, [r4, #9]
1005b436:	7aa2      	ldrb	r2, [r4, #10]
1005b438:	0212      	lsls	r2, r2, #8
1005b43a:	1851      	adds	r1, r2, r1
1005b43c:	aa3a      	add	r2, sp, #232	@ 0xe8
1005b43e:	8091      	strh	r1, [r2, #4]
1005b440:	7961      	ldrb	r1, [r4, #5]
1005b442:	79a2      	ldrb	r2, [r4, #6]
1005b444:	0212      	lsls	r2, r2, #8
1005b446:	1851      	adds	r1, r2, r1
1005b448:	79e2      	ldrb	r2, [r4, #7]
1005b44a:	7a23      	ldrb	r3, [r4, #8]
1005b44c:	021b      	lsls	r3, r3, #8
1005b44e:	189a      	adds	r2, r3, r2
1005b450:	0412      	lsls	r2, r2, #16
1005b452:	1851      	adds	r1, r2, r1
1005b454:	913a      	str	r1, [sp, #232]	@ 0xe8
1005b456:	4621      	mov	r1, r4
1005b458:	310b      	adds	r1, #11
1005b45a:	7922      	ldrb	r2, [r4, #4]
1005b45c:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
1005b45e:	3720      	adds	r7, #32
1005b460:	2aff      	cmp	r2, #255	@ 0xff
1005b462:	d117      	bne.n	1005b494 <__arm_cp.0_4+0x68>
1005b464:	4629      	mov	r1, r5
1005b466:	3175      	adds	r1, #117	@ 0x75
1005b468:	790a      	ldrb	r2, [r1, #4]
1005b46a:	794b      	ldrb	r3, [r1, #5]
1005b46c:	021b      	lsls	r3, r3, #8
1005b46e:	189a      	adds	r2, r3, r2
1005b470:	ab3a      	add	r3, sp, #232	@ 0xe8
1005b472:	809a      	strh	r2, [r3, #4]
1005b474:	2275      	movs	r2, #117	@ 0x75
1005b476:	5caa      	ldrb	r2, [r5, r2]
1005b478:	784b      	ldrb	r3, [r1, #1]
1005b47a:	021b      	lsls	r3, r3, #8
1005b47c:	189a      	adds	r2, r3, r2
1005b47e:	788b      	ldrb	r3, [r1, #2]
1005b480:	78c9      	ldrb	r1, [r1, #3]
1005b482:	0209      	lsls	r1, r1, #8
1005b484:	18c9      	adds	r1, r1, r3
1005b486:	0409      	lsls	r1, r1, #16
1005b488:	1889      	adds	r1, r1, r2
1005b48a:	913a      	str	r1, [sp, #232]	@ 0xe8
1005b48c:	2120      	movs	r1, #32
1005b48e:	5c42      	ldrb	r2, [r0, r1]
1005b490:	4629      	mov	r1, r5
1005b492:	317b      	adds	r1, #123	@ 0x7b
1005b494:	9203      	str	r2, [sp, #12]
1005b496:	ae30      	add	r6, sp, #192	@ 0xc0
1005b498:	7cf0      	ldrb	r0, [r6, #19]
1005b49a:	900a      	str	r0, [sp, #40]	@ 0x28
1005b49c:	7808      	ldrb	r0, [r1, #0]
1005b49e:	9007      	str	r0, [sp, #28]
1005b4a0:	7b30      	ldrb	r0, [r6, #12]
1005b4a2:	9931      	ldr	r1, [sp, #196]	@ 0xc4
1005b4a4:	aa3c      	add	r2, sp, #240	@ 0xf0
1005b4a6:	9206      	str	r2, [sp, #24]
1005b4a8:	f7f3 fa7c 	bl	1004e9a4 <llc_pscan_wr_get_pawr_info_ucfg>
1005b4ac:	7078      	strb	r0, [r7, #1]
1005b4ae:	2000      	movs	r0, #0
1005b4b0:	7038      	strb	r0, [r7, #0]
1005b4b2:	af3e      	add	r7, sp, #248	@ 0xf8
1005b4b4:	9803      	ldr	r0, [sp, #12]
1005b4b6:	7638      	strb	r0, [r7, #24]
1005b4b8:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005b4ba:	7a08      	ldrb	r0, [r1, #8]
1005b4bc:	7578      	strb	r0, [r7, #21]
1005b4be:	9806      	ldr	r0, [sp, #24]
1005b4c0:	9040      	str	r0, [sp, #256]	@ 0x100
1005b4c2:	3616      	adds	r6, #22
1005b4c4:	963f      	str	r6, [sp, #252]	@ 0xfc
1005b4c6:	460e      	mov	r6, r1
1005b4c8:	4638      	mov	r0, r7
1005b4ca:	3019      	adds	r0, #25
1005b4cc:	a93a      	add	r1, sp, #232	@ 0xe8
1005b4ce:	2206      	movs	r2, #6
1005b4d0:	f010 fbf3 	bl	1006bcba <__aeabi_memcpy>
1005b4d4:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005b4d6:	9907      	ldr	r1, [sp, #28]
1005b4d8:	4301      	orrs	r1, r0
1005b4da:	77f9      	strb	r1, [r7, #31]
1005b4dc:	4638      	mov	r0, r7
1005b4de:	f7f3 fa07 	bl	1004e8f0 <llc_pscan_synchronizing_ucfg>
1005b4e2:	79b0      	ldrb	r0, [r6, #6]
1005b4e4:	1e80      	subs	r0, r0, #2
1005b4e6:	2300      	movs	r3, #0
1005b4e8:	2804      	cmp	r0, #4
1005b4ea:	d80e      	bhi.n	1005b50a <__arm_cp.0_4+0xde>
1005b4ec:	2701      	movs	r7, #1
1005b4ee:	461e      	mov	r6, r3
1005b4f0:	4478      	add	r0, pc
1005b4f2:	7900      	ldrb	r0, [r0, #4]
1005b4f4:	0040      	lsls	r0, r0, #1
1005b4f6:	4487      	add	pc, r0
1005b4f8:	1e020221 	.word	0x1e020221
1005b4fc:	0021      	.short	0x0021
1005b4fe:	4628      	mov	r0, r5
1005b500:	f000 f9cd 	bl	1005b89e <llc_scan_backoff_rcvd>
1005b504:	2001      	movs	r0, #1
1005b506:	900a      	str	r0, [sp, #40]	@ 0x28
1005b508:	e000      	b.n	1005b50c <__arm_cp.0_4+0xe0>
1005b50a:	930a      	str	r3, [sp, #40]	@ 0x28
1005b50c:	f006 fed2 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005b510:	2701      	movs	r7, #1
1005b512:	463e      	mov	r6, r7
1005b514:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005b516:	e011      	b.n	1005b53c <__arm_cp.0_4+0x110>
1005b518:	2f01      	cmp	r7, #1
1005b51a:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005b51c:	d1e1      	bne.n	1005b4e2 <__arm_cp.0_4+0xb6>
1005b51e:	28fd      	cmp	r0, #253	@ 0xfd
1005b520:	d0df      	beq.n	1005b4e2 <__arm_cp.0_4+0xb6>
1005b522:	2200      	movs	r2, #0
1005b524:	2301      	movs	r3, #1
1005b526:	4628      	mov	r0, r5
1005b528:	9903      	ldr	r1, [sp, #12]
1005b52a:	f000 faf5 	bl	1005bb18 <llc_scan_prepare_tx_pdu>
1005b52e:	2801      	cmp	r0, #1
1005b530:	d1d7      	bne.n	1005b4e2 <__arm_cp.0_4+0xb6>
1005b532:	2005      	movs	r0, #5
1005b534:	71b0      	strb	r0, [r6, #6]
1005b536:	2700      	movs	r7, #0
1005b538:	463b      	mov	r3, r7
1005b53a:	463e      	mov	r6, r7
1005b53c:	8ca1      	ldrh	r1, [r4, #36]	@ 0x24
1005b53e:	4628      	mov	r0, r5
1005b540:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005b542:	930a      	str	r3, [sp, #40]	@ 0x28
1005b544:	f000 fd73 	bl	1005c02e <llc_scan_duplicates_filter>
1005b548:	2801      	cmp	r0, #1
1005b54a:	d102      	bne.n	1005b552 <__arm_cp.0_4+0x126>
1005b54c:	2700      	movs	r7, #0
1005b54e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005b550:	e056      	b.n	1005b600 <__arm_cp.0_4+0x1d4>
1005b552:	9609      	str	r6, [sp, #36]	@ 0x24
1005b554:	7ee0      	ldrb	r0, [r4, #27]
1005b556:	2117      	movs	r1, #23
1005b558:	4001      	ands	r1, r0
1005b55a:	76e1      	strb	r1, [r4, #27]
1005b55c:	6828      	ldr	r0, [r5, #0]
1005b55e:	900b      	str	r0, [sp, #44]	@ 0x2c
1005b560:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005b562:	79f1      	ldrb	r1, [r6, #7]
1005b564:	4628      	mov	r0, r5
1005b566:	f000 fd21 	bl	1005bfac <llc_scan_get_primary_phy>
1005b56a:	7720      	strb	r0, [r4, #28]
1005b56c:	7a31      	ldrb	r1, [r6, #8]
1005b56e:	4628      	mov	r0, r5
1005b570:	f000 fd31 	bl	1005bfd6 <llc_scan_get_secondary_phy>
1005b574:	77e0      	strb	r0, [r4, #31]
1005b576:	9835      	ldr	r0, [sp, #212]	@ 0xd4
1005b578:	77a0      	strb	r0, [r4, #30]
1005b57a:	f7e9 faf7 	bl	10044b6c <BLEPLAT_CalculateRSSI>
1005b57e:	4606      	mov	r6, r0
1005b580:	f006 fe76 	bl	10062270 <get_rf_rx_path_compensation_db>
1005b584:	1830      	adds	r0, r6, r0
1005b586:	7760      	strb	r0, [r4, #29]
1005b588:	a830      	add	r0, sp, #192	@ 0xc0
1005b58a:	7b41      	ldrb	r1, [r0, #13]
1005b58c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1005b58e:	1851      	adds	r1, r2, r1
1005b590:	6161      	str	r1, [r4, #20]
1005b592:	7891      	ldrb	r1, [r2, #2]
1005b594:	4613      	mov	r3, r2
1005b596:	43c9      	mvns	r1, r1
1005b598:	22c0      	movs	r2, #192	@ 0xc0
1005b59a:	430a      	orrs	r2, r1
1005b59c:	7859      	ldrb	r1, [r3, #1]
1005b59e:	1889      	adds	r1, r1, r2
1005b5a0:	76a1      	strb	r1, [r4, #26]
1005b5a2:	7cc0      	ldrb	r0, [r0, #19]
1005b5a4:	28ff      	cmp	r0, #255	@ 0xff
1005b5a6:	d001      	beq.n	1005b5ac <__arm_cp.0_4+0x180>
1005b5a8:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005b5aa:	7008      	strb	r0, [r1, #0]
1005b5ac:	a830      	add	r0, sp, #192	@ 0xc0
1005b5ae:	7d40      	ldrb	r0, [r0, #21]
1005b5b0:	2801      	cmp	r0, #1
1005b5b2:	9a08      	ldr	r2, [sp, #32]
1005b5b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005b5b6:	d001      	beq.n	1005b5bc <__arm_cp.0_4+0x190>
1005b5b8:	2000      	movs	r0, #0
1005b5ba:	e000      	b.n	1005b5be <__arm_cp.0_4+0x192>
1005b5bc:	9836      	ldr	r0, [sp, #216]	@ 0xd8
1005b5be:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1005b5c0:	8320      	strh	r0, [r4, #24]
1005b5c2:	7ee0      	ldrb	r0, [r4, #27]
1005b5c4:	9904      	ldr	r1, [sp, #16]
1005b5c6:	2900      	cmp	r1, #0
1005b5c8:	d001      	beq.n	1005b5ce <__arm_cp.0_4+0x1a2>
1005b5ca:	2120      	movs	r1, #32
1005b5cc:	4308      	orrs	r0, r1
1005b5ce:	2b00      	cmp	r3, #0
1005b5d0:	d001      	beq.n	1005b5d6 <__arm_cp.0_4+0x1aa>
1005b5d2:	2108      	movs	r1, #8
1005b5d4:	4308      	orrs	r0, r1
1005b5d6:	4310      	orrs	r0, r2
1005b5d8:	76e0      	strb	r0, [r4, #27]
1005b5da:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005b5dc:	7b09      	ldrb	r1, [r1, #12]
1005b5de:	2901      	cmp	r1, #1
1005b5e0:	d104      	bne.n	1005b5ec <__arm_cp.0_4+0x1c0>
1005b5e2:	6d69      	ldr	r1, [r5, #84]	@ 0x54
1005b5e4:	6daa      	ldr	r2, [r5, #88]	@ 0x58
1005b5e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1005b5e8:	c306      	stmia	r3!, {r1, r2}
1005b5ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005b5ec:	9905      	ldr	r1, [sp, #20]
1005b5ee:	2900      	cmp	r1, #0
1005b5f0:	d006      	beq.n	1005b600 <__arm_cp.0_4+0x1d4>
1005b5f2:	992f      	ldr	r1, [sp, #188]	@ 0xbc
1005b5f4:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
1005b5f6:	60e2      	str	r2, [r4, #12]
1005b5f8:	6121      	str	r1, [r4, #16]
1005b5fa:	2104      	movs	r1, #4
1005b5fc:	4308      	orrs	r0, r1
1005b5fe:	76e0      	strb	r0, [r4, #27]
1005b600:	2b00      	cmp	r3, #0
1005b602:	d100      	bne.n	1005b606 <__arm_cp.0_4+0x1da>
1005b604:	e657      	b.n	1005b2b6 <llc_scan_aux_isr+0x29a>
1005b606:	2000      	movs	r0, #0
1005b608:	66e8      	str	r0, [r5, #108]	@ 0x6c
1005b60a:	6728      	str	r0, [r5, #112]	@ 0x70
1005b60c:	e653      	b.n	1005b2b6 <llc_scan_aux_isr+0x29a>
1005b60e:	46c0      	nop			@ (mov r8, r8)

1005b610 <__arm_cp.0_1>:
1005b610:	20000894 	.word	0x20000894

1005b614 <__arm_cp.0_2>:
1005b614:	00000271 	.word	0x00000271

1005b618 <llc_scan_aux_conn_rsp_rcvd>:
1005b618:	b5f0      	push	{r4, r5, r6, r7, lr}
1005b61a:	b089      	sub	sp, #36	@ 0x24
1005b61c:	9103      	str	r1, [sp, #12]
1005b61e:	4605      	mov	r5, r0
1005b620:	0090      	lsls	r0, r2, #2
1005b622:	182c      	adds	r4, r5, r0
1005b624:	f006 fe46 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
1005b628:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
1005b62a:	9002      	str	r0, [sp, #8]
1005b62c:	300c      	adds	r0, #12
1005b62e:	6829      	ldr	r1, [r5, #0]
1005b630:	1d09      	adds	r1, r1, #4
1005b632:	2206      	movs	r2, #6
1005b634:	f7e9 f9b6 	bl	100449a4 <BLEPLAT_MemCpy>
1005b638:	a804      	add	r0, sp, #16
1005b63a:	2600      	movs	r6, #0
1005b63c:	8206      	strh	r6, [r0, #16]
1005b63e:	73c6      	strb	r6, [r0, #15]
1005b640:	2102      	movs	r1, #2
1005b642:	8181      	strh	r1, [r0, #12]
1005b644:	27ff      	movs	r7, #255	@ 0xff
1005b646:	7287      	strb	r7, [r0, #10]
1005b648:	4919      	ldr	r1, [pc, #100]	@ (1005b6b0 <__arm_cp.2_0>)
1005b64a:	8101      	strh	r1, [r0, #8]
1005b64c:	21b0      	movs	r1, #176	@ 0xb0
1005b64e:	9101      	str	r1, [sp, #4]
1005b650:	5c69      	ldrb	r1, [r5, r1]
1005b652:	72c1      	strb	r1, [r0, #11]
1005b654:	242b      	movs	r4, #43	@ 0x2b
1005b656:	9903      	ldr	r1, [sp, #12]
1005b658:	5d09      	ldrb	r1, [r1, r4]
1005b65a:	7381      	strb	r1, [r0, #14]
1005b65c:	4629      	mov	r1, r5
1005b65e:	3154      	adds	r1, #84	@ 0x54
1005b660:	9105      	str	r1, [sp, #20]
1005b662:	9902      	ldr	r1, [sp, #8]
1005b664:	1d09      	adds	r1, r1, #4
1005b666:	9104      	str	r1, [sp, #16]
1005b668:	f7fb fd06 	bl	10057078 <llc_conn_go_to_connect>
1005b66c:	20eb      	movs	r0, #235	@ 0xeb
1005b66e:	542e      	strb	r6, [r5, r0]
1005b670:	20b2      	movs	r0, #178	@ 0xb2
1005b672:	2101      	movs	r1, #1
1005b674:	5429      	strb	r1, [r5, r0]
1005b676:	9801      	ldr	r0, [sp, #4]
1005b678:	542f      	strb	r7, [r5, r0]
1005b67a:	9803      	ldr	r0, [sp, #12]
1005b67c:	5d06      	ldrb	r6, [r0, r4]
1005b67e:	5507      	strb	r7, [r0, r4]
1005b680:	4604      	mov	r4, r0
1005b682:	462f      	mov	r7, r5
1005b684:	37ac      	adds	r7, #172	@ 0xac
1005b686:	342a      	adds	r4, #42	@ 0x2a
1005b688:	35eb      	adds	r5, #235	@ 0xeb
1005b68a:	78a8      	ldrb	r0, [r5, #2]
1005b68c:	0780      	lsls	r0, r0, #30
1005b68e:	d501      	bpl.n	1005b694 <llc_scan_aux_conn_rsp_rcvd+0x7c>
1005b690:	f7fd fdae 	bl	100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>
1005b694:	7838      	ldrb	r0, [r7, #0]
1005b696:	f006 fe93 	bl	100623c0 <LL_sched_set_cancel_request>
1005b69a:	7878      	ldrb	r0, [r7, #1]
1005b69c:	f006 fe90 	bl	100623c0 <LL_sched_set_cancel_request>
1005b6a0:	4630      	mov	r0, r6
1005b6a2:	f000 fcad 	bl	1005c000 <llc_scan_aux_cancel_reserved_task_slots>
1005b6a6:	7820      	ldrb	r0, [r4, #0]
1005b6a8:	f006 fefa 	bl	100624a0 <LL_sched_engine>
1005b6ac:	b009      	add	sp, #36	@ 0x24
1005b6ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005b6b0 <__arm_cp.2_0>:
1005b6b0:	0000ffff 	.word	0x0000ffff

1005b6b4 <llc_scan_get_cntxt_p>:
1005b6b4:	4802      	ldr	r0, [pc, #8]	@ (1005b6c0 <__arm_cp.0_0>)
1005b6b6:	6800      	ldr	r0, [r0, #0]
1005b6b8:	219c      	movs	r1, #156	@ 0x9c
1005b6ba:	5840      	ldr	r0, [r0, r1]
1005b6bc:	6840      	ldr	r0, [r0, #4]
1005b6be:	4770      	bx	lr

1005b6c0 <__arm_cp.0_0>:
1005b6c0:	20000894 	.word	0x20000894

1005b6c4 <llc_scan_init>:
1005b6c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005b6c6:	9000      	str	r0, [sp, #0]
1005b6c8:	4827      	ldr	r0, [pc, #156]	@ (1005b768 <__arm_cp.2_0>)
1005b6ca:	6800      	ldr	r0, [r0, #0]
1005b6cc:	219c      	movs	r1, #156	@ 0x9c
1005b6ce:	5840      	ldr	r0, [r0, r1]
1005b6d0:	6847      	ldr	r7, [r0, #4]
1005b6d2:	f006 fdf5 	bl	100622c0 <llc_get_linkms_cntxt_p>
1005b6d6:	4925      	ldr	r1, [pc, #148]	@ (1005b76c <__arm_cp.2_1>)
1005b6d8:	7f4b      	ldrb	r3, [r1, #29]
1005b6da:	21e4      	movs	r1, #228	@ 0xe4
1005b6dc:	2400      	movs	r4, #0
1005b6de:	547c      	strb	r4, [r7, r1]
1005b6e0:	21aa      	movs	r1, #170	@ 0xaa
1005b6e2:	547c      	strb	r4, [r7, r1]
1005b6e4:	2119      	movs	r1, #25
1005b6e6:	0289      	lsls	r1, r1, #10
1005b6e8:	2284      	movs	r2, #132	@ 0x84
1005b6ea:	50b9      	str	r1, [r7, r2]
1005b6ec:	67f9      	str	r1, [r7, #124]	@ 0x7c
1005b6ee:	463d      	mov	r5, r7
1005b6f0:	35e4      	adds	r5, #228	@ 0xe4
1005b6f2:	73ec      	strb	r4, [r5, #15]
1005b6f4:	72ec      	strb	r4, [r5, #11]
1005b6f6:	2101      	movs	r1, #1
1005b6f8:	7329      	strb	r1, [r5, #12]
1005b6fa:	726c      	strb	r4, [r5, #9]
1005b6fc:	4639      	mov	r1, r7
1005b6fe:	31aa      	adds	r1, #170	@ 0xaa
1005b700:	22ff      	movs	r2, #255	@ 0xff
1005b702:	718a      	strb	r2, [r1, #6]
1005b704:	71ec      	strb	r4, [r5, #7]
1005b706:	4e1a      	ldr	r6, [pc, #104]	@ (1005b770 <__arm_cp.2_2>)
1005b708:	804e      	strh	r6, [r1, #2]
1005b70a:	2b0a      	cmp	r3, #10
1005b70c:	d300      	bcc.n	1005b710 <llc_scan_init+0x4c>
1005b70e:	230a      	movs	r3, #10
1005b710:	9900      	ldr	r1, [sp, #0]
1005b712:	2901      	cmp	r1, #1
1005b714:	d000      	beq.n	1005b718 <llc_scan_init+0x54>
1005b716:	4623      	mov	r3, r4
1005b718:	722b      	strb	r3, [r5, #8]
1005b71a:	3014      	adds	r0, #20
1005b71c:	9000      	str	r0, [sp, #0]
1005b71e:	f006 fdbb 	bl	10062298 <LL_get_rx_common_buffer_p>
1005b722:	6038      	str	r0, [r7, #0]
1005b724:	9800      	ldr	r0, [sp, #0]
1005b726:	6078      	str	r0, [r7, #4]
1005b728:	6bf8      	ldr	r0, [r7, #60]	@ 0x3c
1005b72a:	1d00      	adds	r0, r0, #4
1005b72c:	2224      	movs	r2, #36	@ 0x24
1005b72e:	4621      	mov	r1, r4
1005b730:	f7e9 f948 	bl	100449c4 <BLEPLAT_MemSet>
1005b734:	7a28      	ldrb	r0, [r5, #8]
1005b736:	2800      	cmp	r0, #0
1005b738:	d015      	beq.n	1005b766 <llc_scan_init+0xa2>
1005b73a:	6c38      	ldr	r0, [r7, #64]	@ 0x40
1005b73c:	1d00      	adds	r0, r0, #4
1005b73e:	2400      	movs	r4, #0
1005b740:	2224      	movs	r2, #36	@ 0x24
1005b742:	9200      	str	r2, [sp, #0]
1005b744:	4621      	mov	r1, r4
1005b746:	f7e9 f93d 	bl	100449c4 <BLEPLAT_MemSet>
1005b74a:	6c78      	ldr	r0, [r7, #68]	@ 0x44
1005b74c:	1d00      	adds	r0, r0, #4
1005b74e:	4621      	mov	r1, r4
1005b750:	9a00      	ldr	r2, [sp, #0]
1005b752:	f7e9 f937 	bl	100449c4 <BLEPLAT_MemSet>
1005b756:	3710      	adds	r7, #16
1005b758:	7a28      	ldrb	r0, [r5, #8]
1005b75a:	2800      	cmp	r0, #0
1005b75c:	d003      	beq.n	1005b766 <llc_scan_init+0xa2>
1005b75e:	cf02      	ldmia	r7!, {r1}
1005b760:	854e      	strh	r6, [r1, #42]	@ 0x2a
1005b762:	1e40      	subs	r0, r0, #1
1005b764:	e7f9      	b.n	1005b75a <llc_scan_init+0x96>
1005b766:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005b768 <__arm_cp.2_0>:
1005b768:	20000894 	.word	0x20000894

1005b76c <__arm_cp.2_1>:
1005b76c:	200008a8 	.word	0x200008a8

1005b770 <__arm_cp.2_2>:
1005b770:	0000ffff 	.word	0x0000ffff

1005b774 <llc_scan_mem_allocate>:
1005b774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005b776:	2801      	cmp	r0, #1
1005b778:	d161      	bne.n	1005b83e <llc_scan_mem_allocate+0xca>
1005b77a:	2501      	movs	r5, #1
1005b77c:	9100      	str	r1, [sp, #0]
1005b77e:	21f4      	movs	r1, #244	@ 0xf4
1005b780:	4a2f      	ldr	r2, [pc, #188]	@ (1005b840 <__arm_cp.4_0>)
1005b782:	4628      	mov	r0, r5
1005b784:	4790      	blx	r2
1005b786:	4c2f      	ldr	r4, [pc, #188]	@ (1005b844 <__arm_cp.4_1>)
1005b788:	6821      	ldr	r1, [r4, #0]
1005b78a:	279c      	movs	r7, #156	@ 0x9c
1005b78c:	59c9      	ldr	r1, [r1, r7]
1005b78e:	6048      	str	r0, [r1, #4]
1005b790:	2628      	movs	r6, #40	@ 0x28
1005b792:	4628      	mov	r0, r5
1005b794:	4631      	mov	r1, r6
1005b796:	4a2a      	ldr	r2, [pc, #168]	@ (1005b840 <__arm_cp.4_0>)
1005b798:	4790      	blx	r2
1005b79a:	6821      	ldr	r1, [r4, #0]
1005b79c:	59c9      	ldr	r1, [r1, r7]
1005b79e:	6849      	ldr	r1, [r1, #4]
1005b7a0:	63c8      	str	r0, [r1, #60]	@ 0x3c
1005b7a2:	4628      	mov	r0, r5
1005b7a4:	4631      	mov	r1, r6
1005b7a6:	4a26      	ldr	r2, [pc, #152]	@ (1005b840 <__arm_cp.4_0>)
1005b7a8:	4790      	blx	r2
1005b7aa:	9900      	ldr	r1, [sp, #0]
1005b7ac:	2901      	cmp	r1, #1
1005b7ae:	d13d      	bne.n	1005b82c <llc_scan_mem_allocate+0xb8>
1005b7b0:	4c24      	ldr	r4, [pc, #144]	@ (1005b844 <__arm_cp.4_1>)
1005b7b2:	6821      	ldr	r1, [r4, #0]
1005b7b4:	59c9      	ldr	r1, [r1, r7]
1005b7b6:	6849      	ldr	r1, [r1, #4]
1005b7b8:	6408      	str	r0, [r1, #64]	@ 0x40
1005b7ba:	2601      	movs	r6, #1
1005b7bc:	2528      	movs	r5, #40	@ 0x28
1005b7be:	4630      	mov	r0, r6
1005b7c0:	4629      	mov	r1, r5
1005b7c2:	4c1f      	ldr	r4, [pc, #124]	@ (1005b840 <__arm_cp.4_0>)
1005b7c4:	47a0      	blx	r4
1005b7c6:	491f      	ldr	r1, [pc, #124]	@ (1005b844 <__arm_cp.4_1>)
1005b7c8:	6809      	ldr	r1, [r1, #0]
1005b7ca:	59c9      	ldr	r1, [r1, r7]
1005b7cc:	6849      	ldr	r1, [r1, #4]
1005b7ce:	6448      	str	r0, [r1, #68]	@ 0x44
1005b7d0:	4630      	mov	r0, r6
1005b7d2:	4629      	mov	r1, r5
1005b7d4:	47a0      	blx	r4
1005b7d6:	491b      	ldr	r1, [pc, #108]	@ (1005b844 <__arm_cp.4_1>)
1005b7d8:	6809      	ldr	r1, [r1, #0]
1005b7da:	59c9      	ldr	r1, [r1, r7]
1005b7dc:	6849      	ldr	r1, [r1, #4]
1005b7de:	6088      	str	r0, [r1, #8]
1005b7e0:	4630      	mov	r0, r6
1005b7e2:	4629      	mov	r1, r5
1005b7e4:	47a0      	blx	r4
1005b7e6:	4a17      	ldr	r2, [pc, #92]	@ (1005b844 <__arm_cp.4_1>)
1005b7e8:	6811      	ldr	r1, [r2, #0]
1005b7ea:	4615      	mov	r5, r2
1005b7ec:	59c9      	ldr	r1, [r1, r7]
1005b7ee:	6849      	ldr	r1, [r1, #4]
1005b7f0:	60c8      	str	r0, [r1, #12]
1005b7f2:	212c      	movs	r1, #44	@ 0x2c
1005b7f4:	4630      	mov	r0, r6
1005b7f6:	47a0      	blx	r4
1005b7f8:	6829      	ldr	r1, [r5, #0]
1005b7fa:	59c9      	ldr	r1, [r1, r7]
1005b7fc:	6849      	ldr	r1, [r1, #4]
1005b7fe:	6388      	str	r0, [r1, #56]	@ 0x38
1005b800:	2500      	movs	r5, #0
1005b802:	4e11      	ldr	r6, [pc, #68]	@ (1005b848 <__arm_cp.4_2>)
1005b804:	7f70      	ldrb	r0, [r6, #29]
1005b806:	280a      	cmp	r0, #10
1005b808:	d300      	bcc.n	1005b80c <llc_scan_mem_allocate+0x98>
1005b80a:	200a      	movs	r0, #10
1005b80c:	b2ec      	uxtb	r4, r5
1005b80e:	42a0      	cmp	r0, r4
1005b810:	d915      	bls.n	1005b83e <llc_scan_mem_allocate+0xca>
1005b812:	2001      	movs	r0, #1
1005b814:	2130      	movs	r1, #48	@ 0x30
1005b816:	f007 fb0d 	bl	10062e34 <csmem_mem_0_assign>
1005b81a:	490a      	ldr	r1, [pc, #40]	@ (1005b844 <__arm_cp.4_1>)
1005b81c:	6809      	ldr	r1, [r1, #0]
1005b81e:	59c9      	ldr	r1, [r1, r7]
1005b820:	6849      	ldr	r1, [r1, #4]
1005b822:	00a2      	lsls	r2, r4, #2
1005b824:	1889      	adds	r1, r1, r2
1005b826:	6108      	str	r0, [r1, #16]
1005b828:	1c6d      	adds	r5, r5, #1
1005b82a:	e7eb      	b.n	1005b804 <llc_scan_mem_allocate+0x90>
1005b82c:	4905      	ldr	r1, [pc, #20]	@ (1005b844 <__arm_cp.4_1>)
1005b82e:	6809      	ldr	r1, [r1, #0]
1005b830:	59ca      	ldr	r2, [r1, r7]
1005b832:	6852      	ldr	r2, [r2, #4]
1005b834:	6090      	str	r0, [r2, #8]
1005b836:	59c8      	ldr	r0, [r1, r7]
1005b838:	6840      	ldr	r0, [r0, #4]
1005b83a:	2100      	movs	r1, #0
1005b83c:	6381      	str	r1, [r0, #56]	@ 0x38
1005b83e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005b840 <__arm_cp.4_0>:
1005b840:	10062e35 	.word	0x10062e35

1005b844 <__arm_cp.4_1>:
1005b844:	20000894 	.word	0x20000894

1005b848 <__arm_cp.4_2>:
1005b848:	200008a8 	.word	0x200008a8

1005b84c <llc_scan_backoff_not_rcvd>:
1005b84c:	b5b0      	push	{r4, r5, r7, lr}
1005b84e:	21ae      	movs	r1, #174	@ 0xae
1005b850:	5a41      	ldrh	r1, [r0, r1]
1005b852:	22eb      	movs	r2, #235	@ 0xeb
1005b854:	5c82      	ldrb	r2, [r0, r2]
1005b856:	4604      	mov	r4, r0
1005b858:	34ae      	adds	r4, #174	@ 0xae
1005b85a:	30eb      	adds	r0, #235	@ 0xeb
1005b85c:	2a3f      	cmp	r2, #63	@ 0x3f
1005b85e:	d805      	bhi.n	1005b86c <llc_scan_backoff_not_rcvd+0x20>
1005b860:	09cb      	lsrs	r3, r1, #7
1005b862:	061b      	lsls	r3, r3, #24
1005b864:	d004      	beq.n	1005b870 <llc_scan_backoff_not_rcvd+0x24>
1005b866:	2101      	movs	r1, #1
1005b868:	0209      	lsls	r1, r1, #8
1005b86a:	e002      	b.n	1005b872 <llc_scan_backoff_not_rcvd+0x26>
1005b86c:	2300      	movs	r3, #0
1005b86e:	e002      	b.n	1005b876 <llc_scan_backoff_not_rcvd+0x2a>
1005b870:	0049      	lsls	r1, r1, #1
1005b872:	8021      	strh	r1, [r4, #0]
1005b874:	2340      	movs	r3, #64	@ 0x40
1005b876:	253f      	movs	r5, #63	@ 0x3f
1005b878:	402a      	ands	r2, r5
1005b87a:	431a      	orrs	r2, r3
1005b87c:	7002      	strb	r2, [r0, #0]
1005b87e:	b288      	uxth	r0, r1
1005b880:	2801      	cmp	r0, #1
1005b882:	d101      	bne.n	1005b888 <llc_scan_backoff_not_rcvd+0x3c>
1005b884:	2001      	movs	r0, #1
1005b886:	e008      	b.n	1005b89a <llc_scan_backoff_not_rcvd+0x4e>
1005b888:	2001      	movs	r0, #1
1005b88a:	f009 ffcb 	bl	10065824 <Hal_Get_Random_Number>
1005b88e:	b2c0      	uxtb	r0, r0
1005b890:	8821      	ldrh	r1, [r4, #0]
1005b892:	1e49      	subs	r1, r1, #1
1005b894:	f7e4 fd5a 	bl	1004034c <__aeabi_uidivmod>
1005b898:	1c48      	adds	r0, r1, #1
1005b89a:	7160      	strb	r0, [r4, #5]
1005b89c:	bdb0      	pop	{r4, r5, r7, pc}

1005b89e <llc_scan_backoff_rcvd>:
1005b89e:	b5b0      	push	{r4, r5, r7, lr}
1005b8a0:	21ae      	movs	r1, #174	@ 0xae
1005b8a2:	5a41      	ldrh	r1, [r0, r1]
1005b8a4:	22eb      	movs	r2, #235	@ 0xeb
1005b8a6:	5682      	ldrsb	r2, [r0, r2]
1005b8a8:	4604      	mov	r4, r0
1005b8aa:	34ae      	adds	r4, #174	@ 0xae
1005b8ac:	30eb      	adds	r0, #235	@ 0xeb
1005b8ae:	2a00      	cmp	r2, #0
1005b8b0:	d401      	bmi.n	1005b8b6 <llc_scan_backoff_rcvd+0x18>
1005b8b2:	2380      	movs	r3, #128	@ 0x80
1005b8b4:	e006      	b.n	1005b8c4 <llc_scan_backoff_rcvd+0x26>
1005b8b6:	2901      	cmp	r1, #1
1005b8b8:	d801      	bhi.n	1005b8be <llc_scan_backoff_rcvd+0x20>
1005b8ba:	2101      	movs	r1, #1
1005b8bc:	e000      	b.n	1005b8c0 <llc_scan_backoff_rcvd+0x22>
1005b8be:	0849      	lsrs	r1, r1, #1
1005b8c0:	8021      	strh	r1, [r4, #0]
1005b8c2:	2340      	movs	r3, #64	@ 0x40
1005b8c4:	253f      	movs	r5, #63	@ 0x3f
1005b8c6:	402a      	ands	r2, r5
1005b8c8:	431a      	orrs	r2, r3
1005b8ca:	7002      	strb	r2, [r0, #0]
1005b8cc:	2001      	movs	r0, #1
1005b8ce:	2901      	cmp	r1, #1
1005b8d0:	d007      	beq.n	1005b8e2 <llc_scan_backoff_rcvd+0x44>
1005b8d2:	f009 ffa7 	bl	10065824 <Hal_Get_Random_Number>
1005b8d6:	b2c0      	uxtb	r0, r0
1005b8d8:	8821      	ldrh	r1, [r4, #0]
1005b8da:	1e49      	subs	r1, r1, #1
1005b8dc:	f7e4 fd36 	bl	1004034c <__aeabi_uidivmod>
1005b8e0:	1c48      	adds	r0, r1, #1
1005b8e2:	7160      	strb	r0, [r4, #5]
1005b8e4:	bdb0      	pop	{r4, r5, r7, pc}

1005b8e6 <llc_scan_set_cancel_slots_request>:
1005b8e6:	b570      	push	{r4, r5, r6, lr}
1005b8e8:	4604      	mov	r4, r0
1005b8ea:	20ac      	movs	r0, #172	@ 0xac
1005b8ec:	5c20      	ldrb	r0, [r4, r0]
1005b8ee:	f006 fd67 	bl	100623c0 <LL_sched_set_cancel_request>
1005b8f2:	f7f3 fabe 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
1005b8f6:	2801      	cmp	r0, #1
1005b8f8:	d112      	bne.n	1005b920 <llc_scan_set_cancel_slots_request+0x3a>
1005b8fa:	4620      	mov	r0, r4
1005b8fc:	30ac      	adds	r0, #172	@ 0xac
1005b8fe:	4625      	mov	r5, r4
1005b900:	35ec      	adds	r5, #236	@ 0xec
1005b902:	7840      	ldrb	r0, [r0, #1]
1005b904:	f006 fd5c 	bl	100623c0 <LL_sched_set_cancel_request>
1005b908:	3410      	adds	r4, #16
1005b90a:	2600      	movs	r6, #0
1005b90c:	7828      	ldrb	r0, [r5, #0]
1005b90e:	4286      	cmp	r6, r0
1005b910:	d206      	bcs.n	1005b920 <llc_scan_set_cancel_slots_request+0x3a>
1005b912:	cc01      	ldmia	r4!, {r0}
1005b914:	212a      	movs	r1, #42	@ 0x2a
1005b916:	5c40      	ldrb	r0, [r0, r1]
1005b918:	f006 fd52 	bl	100623c0 <LL_sched_set_cancel_request>
1005b91c:	1c76      	adds	r6, r6, #1
1005b91e:	e7f5      	b.n	1005b90c <llc_scan_set_cancel_slots_request+0x26>
1005b920:	bd70      	pop	{r4, r5, r6, pc}

1005b922 <llc_scan_duplicates_list_add>:
1005b922:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005b924:	9200      	str	r2, [sp, #0]
1005b926:	2430      	movs	r4, #48	@ 0x30
1005b928:	5d02      	ldrb	r2, [r0, r4]
1005b92a:	2a03      	cmp	r2, #3
1005b92c:	d80b      	bhi.n	1005b946 <llc_scan_duplicates_list_add+0x24>
1005b92e:	4605      	mov	r5, r0
1005b930:	3530      	adds	r5, #48	@ 0x30
1005b932:	1c56      	adds	r6, r2, #1
1005b934:	702e      	strb	r6, [r5, #0]
1005b936:	240c      	movs	r4, #12
1005b938:	4354      	muls	r4, r2
1005b93a:	5101      	str	r1, [r0, r4]
1005b93c:	1900      	adds	r0, r0, r4
1005b93e:	8103      	strh	r3, [r0, #8]
1005b940:	9900      	ldr	r1, [sp, #0]
1005b942:	6041      	str	r1, [r0, #4]
1005b944:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005b946:	1e54      	subs	r4, r2, #1
1005b948:	b2e2      	uxtb	r2, r4
1005b94a:	4605      	mov	r5, r0
1005b94c:	4616      	mov	r6, r2
1005b94e:	2e00      	cmp	r6, #0
1005b950:	d0f1      	beq.n	1005b936 <llc_scan_duplicates_list_add+0x14>
1005b952:	68ef      	ldr	r7, [r5, #12]
1005b954:	692c      	ldr	r4, [r5, #16]
1005b956:	602f      	str	r7, [r5, #0]
1005b958:	606c      	str	r4, [r5, #4]
1005b95a:	8aac      	ldrh	r4, [r5, #20]
1005b95c:	812c      	strh	r4, [r5, #8]
1005b95e:	350c      	adds	r5, #12
1005b960:	1e76      	subs	r6, r6, #1
1005b962:	e7f4      	b.n	1005b94e <llc_scan_duplicates_list_add+0x2c>

1005b964 <llc_scan_duplicates_list_reset>:
1005b964:	b580      	push	{r7, lr}
1005b966:	2100      	movs	r1, #0
1005b968:	2234      	movs	r2, #52	@ 0x34
1005b96a:	f7e9 f82b 	bl	100449c4 <BLEPLAT_MemSet>
1005b96e:	bd80      	pop	{r7, pc}

1005b970 <llc_scan_duplicates_list_search>:
1005b970:	b5b0      	push	{r4, r5, r7, lr}
1005b972:	2400      	movs	r4, #0
1005b974:	b29b      	uxth	r3, r3
1005b976:	2c04      	cmp	r4, #4
1005b978:	d00b      	beq.n	1005b992 <llc_scan_duplicates_list_search+0x22>
1005b97a:	6805      	ldr	r5, [r0, #0]
1005b97c:	428d      	cmp	r5, r1
1005b97e:	d105      	bne.n	1005b98c <llc_scan_duplicates_list_search+0x1c>
1005b980:	6845      	ldr	r5, [r0, #4]
1005b982:	4295      	cmp	r5, r2
1005b984:	d102      	bne.n	1005b98c <llc_scan_duplicates_list_search+0x1c>
1005b986:	8905      	ldrh	r5, [r0, #8]
1005b988:	429d      	cmp	r5, r3
1005b98a:	d002      	beq.n	1005b992 <llc_scan_duplicates_list_search+0x22>
1005b98c:	300c      	adds	r0, #12
1005b98e:	1c64      	adds	r4, r4, #1
1005b990:	e7f1      	b.n	1005b976 <llc_scan_duplicates_list_search+0x6>
1005b992:	b2e0      	uxtb	r0, r4
1005b994:	bdb0      	pop	{r4, r5, r7, pc}

1005b996 <llc_scan_increment_scan_channel>:
1005b996:	b5b0      	push	{r4, r5, r7, lr}
1005b998:	22ef      	movs	r2, #239	@ 0xef
1005b99a:	5c82      	ldrb	r2, [r0, r2]
1005b99c:	1840      	adds	r0, r0, r1
1005b99e:	21a8      	movs	r1, #168	@ 0xa8
1005b9a0:	5c41      	ldrb	r1, [r0, r1]
1005b9a2:	30a8      	adds	r0, #168	@ 0xa8
1005b9a4:	2a00      	cmp	r2, #0
1005b9a6:	d00f      	beq.n	1005b9c8 <llc_scan_increment_scan_channel+0x32>
1005b9a8:	2303      	movs	r3, #3
1005b9aa:	43db      	mvns	r3, r3
1005b9ac:	3925      	subs	r1, #37	@ 0x25
1005b9ae:	1c5b      	adds	r3, r3, #1
1005b9b0:	d20f      	bcs.n	1005b9d2 <llc_scan_increment_scan_channel+0x3c>
1005b9b2:	1c49      	adds	r1, r1, #1
1005b9b4:	b2cc      	uxtb	r4, r1
1005b9b6:	2c03      	cmp	r4, #3
1005b9b8:	d100      	bne.n	1005b9bc <llc_scan_increment_scan_channel+0x26>
1005b9ba:	2100      	movs	r1, #0
1005b9bc:	b2cc      	uxtb	r4, r1
1005b9be:	4615      	mov	r5, r2
1005b9c0:	40e5      	lsrs	r5, r4
1005b9c2:	07ec      	lsls	r4, r5, #31
1005b9c4:	d0f3      	beq.n	1005b9ae <llc_scan_increment_scan_channel+0x18>
1005b9c6:	e004      	b.n	1005b9d2 <llc_scan_increment_scan_channel+0x3c>
1005b9c8:	3924      	subs	r1, #36	@ 0x24
1005b9ca:	b2ca      	uxtb	r2, r1
1005b9cc:	2a03      	cmp	r2, #3
1005b9ce:	d100      	bne.n	1005b9d2 <llc_scan_increment_scan_channel+0x3c>
1005b9d0:	2100      	movs	r1, #0
1005b9d2:	3125      	adds	r1, #37	@ 0x25
1005b9d4:	7001      	strb	r1, [r0, #0]
1005b9d6:	bdb0      	pop	{r4, r5, r7, pc}

1005b9d8 <llc_scan_initialize_scan_channel>:
1005b9d8:	b510      	push	{r4, lr}
1005b9da:	21ef      	movs	r1, #239	@ 0xef
1005b9dc:	5c42      	ldrb	r2, [r0, r1]
1005b9de:	0791      	lsls	r1, r2, #30
1005b9e0:	d501      	bpl.n	1005b9e6 <llc_scan_initialize_scan_channel+0xe>
1005b9e2:	2126      	movs	r1, #38	@ 0x26
1005b9e4:	e000      	b.n	1005b9e8 <llc_scan_initialize_scan_channel+0x10>
1005b9e6:	2127      	movs	r1, #39	@ 0x27
1005b9e8:	2325      	movs	r3, #37	@ 0x25
1005b9ea:	07d4      	lsls	r4, r2, #31
1005b9ec:	d000      	beq.n	1005b9f0 <llc_scan_initialize_scan_channel+0x18>
1005b9ee:	4619      	mov	r1, r3
1005b9f0:	2a00      	cmp	r2, #0
1005b9f2:	d100      	bne.n	1005b9f6 <llc_scan_initialize_scan_channel+0x1e>
1005b9f4:	4619      	mov	r1, r3
1005b9f6:	22a8      	movs	r2, #168	@ 0xa8
1005b9f8:	5481      	strb	r1, [r0, r2]
1005b9fa:	30a8      	adds	r0, #168	@ 0xa8
1005b9fc:	7041      	strb	r1, [r0, #1]
1005b9fe:	bd10      	pop	{r4, pc}

1005ba00 <llc_scan_parse_ext_adv_pdu>:
1005ba00:	b5f0      	push	{r4, r5, r6, r7, lr}
1005ba02:	b085      	sub	sp, #20
1005ba04:	460c      	mov	r4, r1
1005ba06:	78c7      	ldrb	r7, [r0, #3]
1005ba08:	9004      	str	r0, [sp, #16]
1005ba0a:	7882      	ldrb	r2, [r0, #2]
1005ba0c:	2500      	movs	r5, #0
1005ba0e:	81cd      	strh	r5, [r1, #14]
1005ba10:	20ff      	movs	r0, #255	@ 0xff
1005ba12:	7408      	strb	r0, [r1, #16]
1005ba14:	217f      	movs	r1, #127	@ 0x7f
1005ba16:	82a1      	strh	r1, [r4, #20]
1005ba18:	74e0      	strb	r0, [r4, #19]
1005ba1a:	493c      	ldr	r1, [pc, #240]	@ (1005bb0c <__arm_cp.8_0>)
1005ba1c:	60a1      	str	r1, [r4, #8]
1005ba1e:	6025      	str	r5, [r4, #0]
1005ba20:	213f      	movs	r1, #63	@ 0x3f
1005ba22:	400a      	ands	r2, r1
1005ba24:	1cd3      	adds	r3, r2, #3
1005ba26:	7363      	strb	r3, [r4, #13]
1005ba28:	2a00      	cmp	r2, #0
1005ba2a:	d003      	beq.n	1005ba34 <llc_scan_parse_ext_adv_pdu+0x34>
1005ba2c:	07fa      	lsls	r2, r7, #31
1005ba2e:	d004      	beq.n	1005ba3a <llc_scan_parse_ext_adv_pdu+0x3a>
1005ba30:	220a      	movs	r2, #10
1005ba32:	e003      	b.n	1005ba3c <llc_scan_parse_ext_adv_pdu+0x3c>
1005ba34:	2500      	movs	r5, #0
1005ba36:	6065      	str	r5, [r4, #4]
1005ba38:	e065      	b.n	1005bb06 <llc_scan_parse_ext_adv_pdu+0x106>
1005ba3a:	2204      	movs	r2, #4
1005ba3c:	07bb      	lsls	r3, r7, #30
1005ba3e:	d500      	bpl.n	1005ba42 <llc_scan_parse_ext_adv_pdu+0x42>
1005ba40:	1d92      	adds	r2, r2, #6
1005ba42:	077b      	lsls	r3, r7, #29
1005ba44:	d401      	bmi.n	1005ba4a <llc_scan_parse_ext_adv_pdu+0x4a>
1005ba46:	4616      	mov	r6, r2
1005ba48:	e005      	b.n	1005ba56 <llc_scan_parse_ext_adv_pdu+0x56>
1005ba4a:	9b04      	ldr	r3, [sp, #16]
1005ba4c:	5c9b      	ldrb	r3, [r3, r2]
1005ba4e:	099b      	lsrs	r3, r3, #6
1005ba50:	7423      	strb	r3, [r4, #16]
1005ba52:	2601      	movs	r6, #1
1005ba54:	4316      	orrs	r6, r2
1005ba56:	073a      	lsls	r2, r7, #28
1005ba58:	9503      	str	r5, [sp, #12]
1005ba5a:	d511      	bpl.n	1005ba80 <llc_scan_parse_ext_adv_pdu+0x80>
1005ba5c:	4a2c      	ldr	r2, [pc, #176]	@ (1005bb10 <__arm_cp.8_1>)
1005ba5e:	9b04      	ldr	r3, [sp, #16]
1005ba60:	9101      	str	r1, [sp, #4]
1005ba62:	5d99      	ldrb	r1, [r3, r6]
1005ba64:	9102      	str	r1, [sp, #8]
1005ba66:	199b      	adds	r3, r3, r6
1005ba68:	785b      	ldrb	r3, [r3, #1]
1005ba6a:	091d      	lsrs	r5, r3, #4
1005ba6c:	74e5      	strb	r5, [r4, #19]
1005ba6e:	9d03      	ldr	r5, [sp, #12]
1005ba70:	021b      	lsls	r3, r3, #8
1005ba72:	9902      	ldr	r1, [sp, #8]
1005ba74:	185b      	adds	r3, r3, r1
1005ba76:	9901      	ldr	r1, [sp, #4]
1005ba78:	8123      	strh	r3, [r4, #8]
1005ba7a:	401a      	ands	r2, r3
1005ba7c:	8162      	strh	r2, [r4, #10]
1005ba7e:	1cb6      	adds	r6, r6, #2
1005ba80:	06fa      	lsls	r2, r7, #27
1005ba82:	d51c      	bpl.n	1005babe <llc_scan_parse_ext_adv_pdu+0xbe>
1005ba84:	9b04      	ldr	r3, [sp, #16]
1005ba86:	579a      	ldrsb	r2, [r3, r6]
1005ba88:	199b      	adds	r3, r3, r6
1005ba8a:	785d      	ldrb	r5, [r3, #1]
1005ba8c:	9502      	str	r5, [sp, #8]
1005ba8e:	789b      	ldrb	r3, [r3, #2]
1005ba90:	0655      	lsls	r5, r2, #25
1005ba92:	0fed      	lsrs	r5, r5, #31
1005ba94:	73a5      	strb	r5, [r4, #14]
1005ba96:	4011      	ands	r1, r2
1005ba98:	73e1      	strb	r1, [r4, #15]
1005ba9a:	0959      	lsrs	r1, r3, #5
1005ba9c:	74a1      	strb	r1, [r4, #18]
1005ba9e:	06d9      	lsls	r1, r3, #27
1005baa0:	0cc9      	lsrs	r1, r1, #19
1005baa2:	9b02      	ldr	r3, [sp, #8]
1005baa4:	18c9      	adds	r1, r1, r3
1005baa6:	2a00      	cmp	r2, #0
1005baa8:	da03      	bge.n	1005bab2 <llc_scan_parse_ext_adv_pdu+0xb2>
1005baaa:	481a      	ldr	r0, [pc, #104]	@ (1005bb14 <__arm_cp.8_2>)
1005baac:	4348      	muls	r0, r1
1005baae:	0a40      	lsrs	r0, r0, #9
1005bab0:	e002      	b.n	1005bab8 <llc_scan_parse_ext_adv_pdu+0xb8>
1005bab2:	308a      	adds	r0, #138	@ 0x8a
1005bab4:	4348      	muls	r0, r1
1005bab6:	0940      	lsrs	r0, r0, #5
1005bab8:	9d03      	ldr	r5, [sp, #12]
1005baba:	6020      	str	r0, [r4, #0]
1005babc:	1cf6      	adds	r6, r6, #3
1005babe:	06b8      	lsls	r0, r7, #26
1005bac0:	d509      	bpl.n	1005bad6 <llc_scan_parse_ext_adv_pdu+0xd6>
1005bac2:	9804      	ldr	r0, [sp, #16]
1005bac4:	1981      	adds	r1, r0, r6
1005bac6:	4620      	mov	r0, r4
1005bac8:	3016      	adds	r0, #22
1005baca:	2212      	movs	r2, #18
1005bacc:	f7e8 ff6a 	bl	100449a4 <BLEPLAT_MemCpy>
1005bad0:	2001      	movs	r0, #1
1005bad2:	7560      	strb	r0, [r4, #21]
1005bad4:	3612      	adds	r6, #18
1005bad6:	0678      	lsls	r0, r7, #25
1005bad8:	d503      	bpl.n	1005bae2 <llc_scan_parse_ext_adv_pdu+0xe2>
1005bada:	9804      	ldr	r0, [sp, #16]
1005badc:	5d80      	ldrb	r0, [r0, r6]
1005bade:	7520      	strb	r0, [r4, #20]
1005bae0:	1c76      	adds	r6, r6, #1
1005bae2:	6860      	ldr	r0, [r4, #4]
1005bae4:	2800      	cmp	r0, #0
1005bae6:	d00f      	beq.n	1005bb08 <llc_scan_parse_ext_adv_pdu+0x108>
1005bae8:	7b61      	ldrb	r1, [r4, #13]
1005baea:	1b89      	subs	r1, r1, r6
1005baec:	060a      	lsls	r2, r1, #24
1005baee:	d00a      	beq.n	1005bb06 <llc_scan_parse_ext_adv_pdu+0x106>
1005baf0:	b2ca      	uxtb	r2, r1
1005baf2:	7b25      	ldrb	r5, [r4, #12]
1005baf4:	42aa      	cmp	r2, r5
1005baf6:	d800      	bhi.n	1005bafa <llc_scan_parse_ext_adv_pdu+0xfa>
1005baf8:	460d      	mov	r5, r1
1005bafa:	b2ea      	uxtb	r2, r5
1005bafc:	b2f1      	uxtb	r1, r6
1005bafe:	9b04      	ldr	r3, [sp, #16]
1005bb00:	1859      	adds	r1, r3, r1
1005bb02:	f7e8 ff4f 	bl	100449a4 <BLEPLAT_MemCpy>
1005bb06:	7325      	strb	r5, [r4, #12]
1005bb08:	b005      	add	sp, #20
1005bb0a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005bb0c <__arm_cp.8_0>:
1005bb0c:	0fff0000 	.word	0x0fff0000

1005bb10 <__arm_cp.8_1>:
1005bb10:	00000fff 	.word	0x00000fff

1005bb14 <__arm_cp.8_2>:
1005bb14:	0000f5c3 	.word	0x0000f5c3

1005bb18 <llc_scan_prepare_tx_pdu>:
1005bb18:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005bb1a:	4616      	mov	r6, r2
1005bb1c:	460f      	mov	r7, r1
1005bb1e:	4604      	mov	r4, r0
1005bb20:	2a01      	cmp	r2, #1
1005bb22:	d110      	bne.n	1005bb46 <llc_scan_prepare_tx_pdu+0x2e>
1005bb24:	4620      	mov	r0, r4
1005bb26:	30b3      	adds	r0, #179	@ 0xb3
1005bb28:	7801      	ldrb	r1, [r0, #0]
1005bb2a:	2900      	cmp	r1, #0
1005bb2c:	d003      	beq.n	1005bb36 <llc_scan_prepare_tx_pdu+0x1e>
1005bb2e:	1e49      	subs	r1, r1, #1
1005bb30:	7001      	strb	r1, [r0, #0]
1005bb32:	0608      	lsls	r0, r1, #24
1005bb34:	d10e      	bne.n	1005bb54 <llc_scan_prepare_tx_pdu+0x3c>
1005bb36:	9702      	str	r7, [sp, #8]
1005bb38:	6860      	ldr	r0, [r4, #4]
1005bb3a:	2103      	movs	r1, #3
1005bb3c:	7001      	strb	r1, [r0, #0]
1005bb3e:	6860      	ldr	r0, [r4, #4]
1005bb40:	210c      	movs	r1, #12
1005bb42:	7041      	strb	r1, [r0, #1]
1005bb44:	e00e      	b.n	1005bb64 <llc_scan_prepare_tx_pdu+0x4c>
1005bb46:	461d      	mov	r5, r3
1005bb48:	6f60      	ldr	r0, [r4, #116]	@ 0x74
1005bb4a:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
1005bb4c:	f7fa fdc6 	bl	100566dc <llc_conn_list_search_address>
1005bb50:	2800      	cmp	r0, #0
1005bb52:	d001      	beq.n	1005bb58 <llc_scan_prepare_tx_pdu+0x40>
1005bb54:	2500      	movs	r5, #0
1005bb56:	e067      	b.n	1005bc28 <llc_scan_prepare_tx_pdu+0x110>
1005bb58:	4620      	mov	r0, r4
1005bb5a:	9702      	str	r7, [sp, #8]
1005bb5c:	4639      	mov	r1, r7
1005bb5e:	462a      	mov	r2, r5
1005bb60:	f7f2 fffe 	bl	1004eb60 <llc_scan_prepare_conn_ind_req_ucfg>
1005bb64:	4627      	mov	r7, r4
1005bb66:	375c      	adds	r7, #92	@ 0x5c
1005bb68:	4625      	mov	r5, r4
1005bb6a:	35ed      	adds	r5, #237	@ 0xed
1005bb6c:	6860      	ldr	r0, [r4, #4]
1005bb6e:	7801      	ldrb	r1, [r0, #0]
1005bb70:	782a      	ldrb	r2, [r5, #0]
1005bb72:	07d2      	lsls	r2, r2, #31
1005bb74:	0e52      	lsrs	r2, r2, #25
1005bb76:	430a      	orrs	r2, r1
1005bb78:	7002      	strb	r2, [r0, #0]
1005bb7a:	6820      	ldr	r0, [r4, #0]
1005bb7c:	7800      	ldrb	r0, [r0, #0]
1005bb7e:	0040      	lsls	r0, r0, #1
1005bb80:	2180      	movs	r1, #128	@ 0x80
1005bb82:	4001      	ands	r1, r0
1005bb84:	6860      	ldr	r0, [r4, #4]
1005bb86:	7802      	ldrb	r2, [r0, #0]
1005bb88:	430a      	orrs	r2, r1
1005bb8a:	7002      	strb	r2, [r0, #0]
1005bb8c:	7828      	ldrb	r0, [r5, #0]
1005bb8e:	0780      	lsls	r0, r0, #30
1005bb90:	d402      	bmi.n	1005bb98 <llc_scan_prepare_tx_pdu+0x80>
1005bb92:	4620      	mov	r0, r4
1005bb94:	3064      	adds	r0, #100	@ 0x64
1005bb96:	e015      	b.n	1005bbc4 <llc_scan_prepare_tx_pdu+0xac>
1005bb98:	6e60      	ldr	r0, [r4, #100]	@ 0x64
1005bb9a:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
1005bb9c:	65e0      	str	r0, [r4, #92]	@ 0x5c
1005bb9e:	6621      	str	r1, [r4, #96]	@ 0x60
1005bba0:	f7fd fb21 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
1005bba4:	2801      	cmp	r0, #1
1005bba6:	d105      	bne.n	1005bbb4 <llc_scan_prepare_tx_pdu+0x9c>
1005bba8:	7868      	ldrb	r0, [r5, #1]
1005bbaa:	2101      	movs	r1, #1
1005bbac:	460a      	mov	r2, r1
1005bbae:	463b      	mov	r3, r7
1005bbb0:	f7fd fa30 	bl	10059014 <llc_priv_generate_rpa_from_rl_index>
1005bbb4:	6860      	ldr	r0, [r4, #4]
1005bbb6:	7801      	ldrb	r1, [r0, #0]
1005bbb8:	783a      	ldrb	r2, [r7, #0]
1005bbba:	07d2      	lsls	r2, r2, #31
1005bbbc:	0e52      	lsrs	r2, r2, #25
1005bbbe:	430a      	orrs	r2, r1
1005bbc0:	7002      	strb	r2, [r0, #0]
1005bbc2:	4638      	mov	r0, r7
1005bbc4:	6862      	ldr	r2, [r4, #4]
1005bbc6:	1c41      	adds	r1, r0, #1
1005bbc8:	1c90      	adds	r0, r2, #2
1005bbca:	2506      	movs	r5, #6
1005bbcc:	4b17      	ldr	r3, [pc, #92]	@ (1005bc2c <__arm_cp.9_0>)
1005bbce:	462a      	mov	r2, r5
1005bbd0:	4798      	blx	r3
1005bbd2:	6820      	ldr	r0, [r4, #0]
1005bbd4:	7802      	ldrb	r2, [r0, #0]
1005bbd6:	210f      	movs	r1, #15
1005bbd8:	4011      	ands	r1, r2
1005bbda:	2907      	cmp	r1, #7
1005bbdc:	9601      	str	r6, [sp, #4]
1005bbde:	9200      	str	r2, [sp, #0]
1005bbe0:	d001      	beq.n	1005bbe6 <llc_scan_prepare_tx_pdu+0xce>
1005bbe2:	2102      	movs	r1, #2
1005bbe4:	e000      	b.n	1005bbe8 <llc_scan_prepare_tx_pdu+0xd0>
1005bbe6:	2104      	movs	r1, #4
1005bbe8:	1846      	adds	r6, r0, r1
1005bbea:	6860      	ldr	r0, [r4, #4]
1005bbec:	3008      	adds	r0, #8
1005bbee:	4631      	mov	r1, r6
1005bbf0:	462a      	mov	r2, r5
1005bbf2:	4d0e      	ldr	r5, [pc, #56]	@ (1005bc2c <__arm_cp.9_0>)
1005bbf4:	47a8      	blx	r5
1005bbf6:	9802      	ldr	r0, [sp, #8]
1005bbf8:	0080      	lsls	r0, r0, #2
1005bbfa:	1820      	adds	r0, r4, r0
1005bbfc:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
1005bbfe:	1d00      	adds	r0, r0, #4
1005bc00:	6861      	ldr	r1, [r4, #4]
1005bc02:	220e      	movs	r2, #14
1005bc04:	47a8      	blx	r5
1005bc06:	2501      	movs	r5, #1
1005bc08:	9801      	ldr	r0, [sp, #4]
1005bc0a:	2801      	cmp	r0, #1
1005bc0c:	d10c      	bne.n	1005bc28 <llc_scan_prepare_tx_pdu+0x110>
1005bc0e:	2000      	movs	r0, #0
1005bc10:	66e0      	str	r0, [r4, #108]	@ 0x6c
1005bc12:	6720      	str	r0, [r4, #112]	@ 0x70
1005bc14:	9800      	ldr	r0, [sp, #0]
1005bc16:	0640      	lsls	r0, r0, #25
1005bc18:	0fc0      	lsrs	r0, r0, #31
1005bc1a:	7438      	strb	r0, [r7, #16]
1005bc1c:	3711      	adds	r7, #17
1005bc1e:	2206      	movs	r2, #6
1005bc20:	4638      	mov	r0, r7
1005bc22:	4631      	mov	r1, r6
1005bc24:	f7e8 febe 	bl	100449a4 <BLEPLAT_MemCpy>
1005bc28:	4628      	mov	r0, r5
1005bc2a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005bc2c <__arm_cp.9_0>:
1005bc2c:	100449a5 	.word	0x100449a5

1005bc30 <llc_scan_process_adv_addr>:
1005bc30:	b5f0      	push	{r4, r5, r6, r7, lr}
1005bc32:	b085      	sub	sp, #20
1005bc34:	4604      	mov	r4, r0
1005bc36:	6800      	ldr	r0, [r0, #0]
1005bc38:	7801      	ldrb	r1, [r0, #0]
1005bc3a:	2200      	movs	r2, #0
1005bc3c:	9204      	str	r2, [sp, #16]
1005bc3e:	9203      	str	r2, [sp, #12]
1005bc40:	7802      	ldrb	r2, [r0, #0]
1005bc42:	0652      	lsls	r2, r2, #25
1005bc44:	0fd3      	lsrs	r3, r2, #31
1005bc46:	aa03      	add	r2, sp, #12
1005bc48:	7013      	strb	r3, [r2, #0]
1005bc4a:	270f      	movs	r7, #15
1005bc4c:	400f      	ands	r7, r1
1005bc4e:	1ff9      	subs	r1, r7, #7
1005bc50:	2502      	movs	r5, #2
1005bc52:	2902      	cmp	r1, #2
1005bc54:	d301      	bcc.n	1005bc5a <llc_scan_process_adv_addr+0x2a>
1005bc56:	4629      	mov	r1, r5
1005bc58:	e000      	b.n	1005bc5c <llc_scan_process_adv_addr+0x2c>
1005bc5a:	2104      	movs	r1, #4
1005bc5c:	1841      	adds	r1, r0, r1
1005bc5e:	1c50      	adds	r0, r2, #1
1005bc60:	2206      	movs	r2, #6
1005bc62:	f7e8 fe9f 	bl	100449a4 <BLEPLAT_MemCpy>
1005bc66:	4626      	mov	r6, r4
1005bc68:	3654      	adds	r6, #84	@ 0x54
1005bc6a:	4621      	mov	r1, r4
1005bc6c:	31b0      	adds	r1, #176	@ 0xb0
1005bc6e:	4620      	mov	r0, r4
1005bc70:	30ea      	adds	r0, #234	@ 0xea
1005bc72:	2f04      	cmp	r7, #4
1005bc74:	d006      	beq.n	1005bc84 <llc_scan_process_adv_addr+0x54>
1005bc76:	2f08      	cmp	r7, #8
1005bc78:	d101      	bne.n	1005bc7e <llc_scan_process_adv_addr+0x4e>
1005bc7a:	2503      	movs	r5, #3
1005bc7c:	e002      	b.n	1005bc84 <llc_scan_process_adv_addr+0x54>
1005bc7e:	7842      	ldrb	r2, [r0, #1]
1005bc80:	0752      	lsls	r2, r2, #29
1005bc82:	0fd5      	lsrs	r5, r2, #31
1005bc84:	7e37      	ldrb	r7, [r6, #24]
1005bc86:	2201      	movs	r2, #1
1005bc88:	403a      	ands	r2, r7
1005bc8a:	7632      	strb	r2, [r6, #24]
1005bc8c:	780a      	ldrb	r2, [r1, #0]
1005bc8e:	2aff      	cmp	r2, #255	@ 0xff
1005bc90:	d000      	beq.n	1005bc94 <llc_scan_process_adv_addr+0x64>
1005bc92:	1c48      	adds	r0, r1, #1
1005bc94:	7802      	ldrb	r2, [r0, #0]
1005bc96:	4620      	mov	r0, r4
1005bc98:	3074      	adds	r0, #116	@ 0x74
1005bc9a:	4621      	mov	r1, r4
1005bc9c:	31ee      	adds	r1, #238	@ 0xee
1005bc9e:	9100      	str	r1, [sp, #0]
1005bca0:	9001      	str	r0, [sp, #4]
1005bca2:	4633      	mov	r3, r6
1005bca4:	3318      	adds	r3, #24
1005bca6:	a803      	add	r0, sp, #12
1005bca8:	4629      	mov	r1, r5
1005bcaa:	f00d f9e9 	bl	10069080 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak>
1005bcae:	6f61      	ldr	r1, [r4, #116]	@ 0x74
1005bcb0:	6fa2      	ldr	r2, [r4, #120]	@ 0x78
1005bcb2:	6561      	str	r1, [r4, #84]	@ 0x54
1005bcb4:	65a2      	str	r2, [r4, #88]	@ 0x58
1005bcb6:	7637      	strb	r7, [r6, #24]
1005bcb8:	7030      	strb	r0, [r6, #0]
1005bcba:	38ff      	subs	r0, #255	@ 0xff
1005bcbc:	4241      	negs	r1, r0
1005bcbe:	4148      	adcs	r0, r1
1005bcc0:	b005      	add	sp, #20
1005bcc2:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005bcc4 <llc_scan_process_target_addr>:
1005bcc4:	b5f0      	push	{r4, r5, r6, r7, lr}
1005bcc6:	b087      	sub	sp, #28
1005bcc8:	460b      	mov	r3, r1
1005bcca:	4605      	mov	r5, r0
1005bccc:	6801      	ldr	r1, [r0, #0]
1005bcce:	7808      	ldrb	r0, [r1, #0]
1005bcd0:	240f      	movs	r4, #15
1005bcd2:	4004      	ands	r4, r0
1005bcd4:	462e      	mov	r6, r5
1005bcd6:	3664      	adds	r6, #100	@ 0x64
1005bcd8:	462f      	mov	r7, r5
1005bcda:	37ea      	adds	r7, #234	@ 0xea
1005bcdc:	09c2      	lsrs	r2, r0, #7
1005bcde:	2c01      	cmp	r4, #1
1005bce0:	9304      	str	r3, [sp, #16]
1005bce2:	d10a      	bne.n	1005bcfa <llc_scan_process_target_addr+0x36>
1005bce4:	2000      	movs	r0, #0
1005bce6:	9005      	str	r0, [sp, #20]
1005bce8:	ab05      	add	r3, sp, #20
1005bcea:	701a      	strb	r2, [r3, #0]
1005bcec:	9006      	str	r0, [sp, #24]
1005bcee:	1c58      	adds	r0, r3, #1
1005bcf0:	3108      	adds	r1, #8
1005bcf2:	2206      	movs	r2, #6
1005bcf4:	f7e8 fe56 	bl	100449a4 <BLEPLAT_MemCpy>
1005bcf8:	e017      	b.n	1005bd2a <llc_scan_process_target_addr+0x66>
1005bcfa:	78c8      	ldrb	r0, [r1, #3]
1005bcfc:	9003      	str	r0, [sp, #12]
1005bcfe:	2000      	movs	r0, #0
1005bd00:	9005      	str	r0, [sp, #20]
1005bd02:	ab05      	add	r3, sp, #20
1005bd04:	701a      	strb	r2, [r3, #0]
1005bd06:	9006      	str	r0, [sp, #24]
1005bd08:	9803      	ldr	r0, [sp, #12]
1005bd0a:	07c0      	lsls	r0, r0, #31
1005bd0c:	d001      	beq.n	1005bd12 <llc_scan_process_target_addr+0x4e>
1005bd0e:	220a      	movs	r2, #10
1005bd10:	e000      	b.n	1005bd14 <llc_scan_process_target_addr+0x50>
1005bd12:	2204      	movs	r2, #4
1005bd14:	1889      	adds	r1, r1, r2
1005bd16:	1c58      	adds	r0, r3, #1
1005bd18:	2206      	movs	r2, #6
1005bd1a:	f7e8 fe43 	bl	100449a4 <BLEPLAT_MemCpy>
1005bd1e:	2c04      	cmp	r4, #4
1005bd20:	d007      	beq.n	1005bd32 <llc_scan_process_target_addr+0x6e>
1005bd22:	2c08      	cmp	r4, #8
1005bd24:	d101      	bne.n	1005bd2a <llc_scan_process_target_addr+0x66>
1005bd26:	2103      	movs	r1, #3
1005bd28:	e004      	b.n	1005bd34 <llc_scan_process_target_addr+0x70>
1005bd2a:	7878      	ldrb	r0, [r7, #1]
1005bd2c:	0740      	lsls	r0, r0, #29
1005bd2e:	0fc1      	lsrs	r1, r0, #31
1005bd30:	e000      	b.n	1005bd34 <llc_scan_process_target_addr+0x70>
1005bd32:	2102      	movs	r1, #2
1005bd34:	7834      	ldrb	r4, [r6, #0]
1005bd36:	2001      	movs	r0, #1
1005bd38:	4020      	ands	r0, r4
1005bd3a:	7030      	strb	r0, [r6, #0]
1005bd3c:	783a      	ldrb	r2, [r7, #0]
1005bd3e:	7938      	ldrb	r0, [r7, #4]
1005bd40:	9400      	str	r4, [sp, #0]
1005bd42:	9001      	str	r0, [sp, #4]
1005bd44:	a805      	add	r0, sp, #20
1005bd46:	4633      	mov	r3, r6
1005bd48:	f00d f9da 	bl	10069100 <llc_check_adv_or_crsp_rx_addr_ucfg_weak>
1005bd4c:	7034      	strb	r4, [r6, #0]
1005bd4e:	6e69      	ldr	r1, [r5, #100]	@ 0x64
1005bd50:	9a04      	ldr	r2, [sp, #16]
1005bd52:	6011      	str	r1, [r2, #0]
1005bd54:	6ea9      	ldr	r1, [r5, #104]	@ 0x68
1005bd56:	6051      	str	r1, [r2, #4]
1005bd58:	7010      	strb	r0, [r2, #0]
1005bd5a:	38ff      	subs	r0, #255	@ 0xff
1005bd5c:	4241      	negs	r1, r0
1005bd5e:	4148      	adcs	r0, r1
1005bd60:	b007      	add	sp, #28
1005bd62:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005bd64 <llc_scan_update_anchors>:
1005bd64:	b5f0      	push	{r4, r5, r6, r7, lr}
1005bd66:	b087      	sub	sp, #28
1005bd68:	4604      	mov	r4, r0
1005bd6a:	9203      	str	r2, [sp, #12]
1005bd6c:	0090      	lsls	r0, r2, #2
1005bd6e:	1826      	adds	r6, r4, r0
1005bd70:	6cb0      	ldr	r0, [r6, #72]	@ 0x48
1005bd72:	1840      	adds	r0, r0, r1
1005bd74:	64b0      	str	r0, [r6, #72]	@ 0x48
1005bd76:	f006 faf1 	bl	1006235c <LL_sched_engine_return_actual_scheduler_margin>
1005bd7a:	6cb1      	ldr	r1, [r6, #72]	@ 0x48
1005bd7c:	1842      	adds	r2, r0, r1
1005bd7e:	32fa      	adds	r2, #250	@ 0xfa
1005bd80:	9205      	str	r2, [sp, #20]
1005bd82:	64b2      	str	r2, [r6, #72]	@ 0x48
1005bd84:	6ff5      	ldr	r5, [r6, #124]	@ 0x7c
1005bd86:	1a28      	subs	r0, r5, r0
1005bd88:	1a40      	subs	r0, r0, r1
1005bd8a:	2194      	movs	r1, #148	@ 0x94
1005bd8c:	9101      	str	r1, [sp, #4]
1005bd8e:	5872      	ldr	r2, [r6, r1]
1005bd90:	4633      	mov	r3, r6
1005bd92:	338c      	adds	r3, #140	@ 0x8c
1005bd94:	4631      	mov	r1, r6
1005bd96:	3194      	adds	r1, #148	@ 0x94
1005bd98:	4637      	mov	r7, r6
1005bd9a:	3748      	adds	r7, #72	@ 0x48
1005bd9c:	9706      	str	r7, [sp, #24]
1005bd9e:	4627      	mov	r7, r4
1005bda0:	379c      	adds	r7, #156	@ 0x9c
1005bda2:	9704      	str	r7, [sp, #16]
1005bda4:	9402      	str	r4, [sp, #8]
1005bda6:	34e9      	adds	r4, #233	@ 0xe9
1005bda8:	9400      	str	r4, [sp, #0]
1005bdaa:	2400      	movs	r4, #0
1005bdac:	1887      	adds	r7, r0, r2
1005bdae:	3ffb      	subs	r7, #251	@ 0xfb
1005bdb0:	d505      	bpl.n	1005bdbe <llc_scan_update_anchors+0x5a>
1005bdb2:	18aa      	adds	r2, r5, r2
1005bdb4:	2400      	movs	r4, #0
1005bdb6:	601c      	str	r4, [r3, #0]
1005bdb8:	600a      	str	r2, [r1, #0]
1005bdba:	2401      	movs	r4, #1
1005bdbc:	e7f6      	b.n	1005bdac <llc_scan_update_anchors+0x48>
1005bdbe:	2084      	movs	r0, #132	@ 0x84
1005bdc0:	5830      	ldr	r0, [r6, r0]
1005bdc2:	681e      	ldr	r6, [r3, #0]
1005bdc4:	43f6      	mvns	r6, r6
1005bdc6:	1980      	adds	r0, r0, r6
1005bdc8:	d504      	bpl.n	1005bdd4 <llc_scan_update_anchors+0x70>
1005bdca:	18aa      	adds	r2, r5, r2
1005bdcc:	2000      	movs	r0, #0
1005bdce:	6018      	str	r0, [r3, #0]
1005bdd0:	600a      	str	r2, [r1, #0]
1005bdd2:	2401      	movs	r4, #1
1005bdd4:	9f02      	ldr	r7, [sp, #8]
1005bdd6:	9d04      	ldr	r5, [sp, #16]
1005bdd8:	43d0      	mvns	r0, r2
1005bdda:	9e05      	ldr	r6, [sp, #20]
1005bddc:	1830      	adds	r0, r6, r0
1005bdde:	d502      	bpl.n	1005bde6 <llc_scan_update_anchors+0x82>
1005bde0:	9806      	ldr	r0, [sp, #24]
1005bde2:	6002      	str	r2, [r0, #0]
1005bde4:	9205      	str	r2, [sp, #20]
1005bde6:	686a      	ldr	r2, [r5, #4]
1005bde8:	2a00      	cmp	r2, #0
1005bdea:	9e03      	ldr	r6, [sp, #12]
1005bdec:	d006      	beq.n	1005bdfc <llc_scan_update_anchors+0x98>
1005bdee:	6828      	ldr	r0, [r5, #0]
1005bdf0:	1882      	adds	r2, r0, r2
1005bdf2:	9d05      	ldr	r5, [sp, #20]
1005bdf4:	43ed      	mvns	r5, r5
1005bdf6:	1952      	adds	r2, r2, r5
1005bdf8:	9d04      	ldr	r5, [sp, #16]
1005bdfa:	d424      	bmi.n	1005be46 <llc_scan_update_anchors+0xe2>
1005bdfc:	2c00      	cmp	r4, #0
1005bdfe:	d003      	beq.n	1005be08 <llc_scan_update_anchors+0xa4>
1005be00:	4638      	mov	r0, r7
1005be02:	4631      	mov	r1, r6
1005be04:	f7ff fdc7 	bl	1005b996 <llc_scan_increment_scan_channel>
1005be08:	7d28      	ldrb	r0, [r5, #20]
1005be0a:	28ff      	cmp	r0, #255	@ 0xff
1005be0c:	d012      	beq.n	1005be34 <llc_scan_update_anchors+0xd0>
1005be0e:	f7f3 f830 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
1005be12:	2800      	cmp	r0, #0
1005be14:	d001      	beq.n	1005be1a <llc_scan_update_anchors+0xb6>
1005be16:	2403      	movs	r4, #3
1005be18:	e000      	b.n	1005be1c <llc_scan_update_anchors+0xb8>
1005be1a:	2401      	movs	r4, #1
1005be1c:	2500      	movs	r5, #0
1005be1e:	42ac      	cmp	r4, r5
1005be20:	d908      	bls.n	1005be34 <llc_scan_update_anchors+0xd0>
1005be22:	00a8      	lsls	r0, r5, #2
1005be24:	1838      	adds	r0, r7, r0
1005be26:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
1005be28:	9906      	ldr	r1, [sp, #24]
1005be2a:	6809      	ldr	r1, [r1, #0]
1005be2c:	f000 f864 	bl	1005bef8 <llc_scan_update_conn_anchor>
1005be30:	1c6d      	adds	r5, r5, #1
1005be32:	e7f4      	b.n	1005be1e <llc_scan_update_anchors+0xba>
1005be34:	19b8      	adds	r0, r7, r6
1005be36:	21ac      	movs	r1, #172	@ 0xac
1005be38:	5c40      	ldrb	r0, [r0, r1]
1005be3a:	9906      	ldr	r1, [sp, #24]
1005be3c:	6809      	ldr	r1, [r1, #0]
1005be3e:	f006 faad 	bl	1006239c <LL_sched_set_anchor>
1005be42:	b007      	add	sp, #28
1005be44:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005be46:	68aa      	ldr	r2, [r5, #8]
1005be48:	2a00      	cmp	r2, #0
1005be4a:	d01c      	beq.n	1005be86 <llc_scan_update_anchors+0x122>
1005be4c:	1810      	adds	r0, r2, r0
1005be4e:	6028      	str	r0, [r5, #0]
1005be50:	2000      	movs	r0, #0
1005be52:	6018      	str	r0, [r3, #0]
1005be54:	2201      	movs	r2, #1
1005be56:	4072      	eors	r2, r6
1005be58:	0092      	lsls	r2, r2, #2
1005be5a:	18ba      	adds	r2, r7, r2
1005be5c:	238c      	movs	r3, #140	@ 0x8c
1005be5e:	50d0      	str	r0, [r2, r3]
1005be60:	6828      	ldr	r0, [r5, #0]
1005be62:	9b06      	ldr	r3, [sp, #24]
1005be64:	6018      	str	r0, [r3, #0]
1005be66:	6828      	ldr	r0, [r5, #0]
1005be68:	6490      	str	r0, [r2, #72]	@ 0x48
1005be6a:	6828      	ldr	r0, [r5, #0]
1005be6c:	6008      	str	r0, [r1, #0]
1005be6e:	6828      	ldr	r0, [r5, #0]
1005be70:	9901      	ldr	r1, [sp, #4]
1005be72:	5050      	str	r0, [r2, r1]
1005be74:	9800      	ldr	r0, [sp, #0]
1005be76:	7800      	ldrb	r0, [r0, #0]
1005be78:	2802      	cmp	r0, #2
1005be7a:	d1c1      	bne.n	1005be00 <llc_scan_update_anchors+0x9c>
1005be7c:	4638      	mov	r0, r7
1005be7e:	30b4      	adds	r0, #180	@ 0xb4
1005be80:	f7ff fd70 	bl	1005b964 <llc_scan_duplicates_list_reset>
1005be84:	e7bc      	b.n	1005be00 <llc_scan_update_anchors+0x9c>
1005be86:	4819      	ldr	r0, [pc, #100]	@ (1005beec <__arm_cp.12_0>)
1005be88:	6800      	ldr	r0, [r0, #0]
1005be8a:	212c      	movs	r1, #44	@ 0x2c
1005be8c:	5c40      	ldrb	r0, [r0, r1]
1005be8e:	07c0      	lsls	r0, r0, #31
1005be90:	0ec1      	lsrs	r1, r0, #27
1005be92:	d101      	bne.n	1005be98 <llc_scan_update_anchors+0x134>
1005be94:	2210      	movs	r2, #16
1005be96:	e00a      	b.n	1005beae <llc_scan_update_anchors+0x14a>
1005be98:	4815      	ldr	r0, [pc, #84]	@ (1005bef0 <__arm_cp.12_1>)
1005be9a:	6800      	ldr	r0, [r0, #0]
1005be9c:	223d      	movs	r2, #61	@ 0x3d
1005be9e:	5c82      	ldrb	r2, [r0, r2]
1005bea0:	0692      	lsls	r2, r2, #26
1005bea2:	d51e      	bpl.n	1005bee2 <llc_scan_update_anchors+0x17e>
1005bea4:	303d      	adds	r0, #61	@ 0x3d
1005bea6:	7ac0      	ldrb	r0, [r0, #11]
1005bea8:	07c0      	lsls	r0, r0, #31
1005beaa:	d01a      	beq.n	1005bee2 <llc_scan_update_anchors+0x17e>
1005beac:	221e      	movs	r2, #30
1005beae:	204e      	movs	r0, #78	@ 0x4e
1005beb0:	43c0      	mvns	r0, r0
1005beb2:	4041      	eors	r1, r0
1005beb4:	480f      	ldr	r0, [pc, #60]	@ (1005bef4 <__arm_cp.12_2>)
1005beb6:	6800      	ldr	r0, [r0, #0]
1005beb8:	6940      	ldr	r0, [r0, #20]
1005beba:	b2c9      	uxtb	r1, r1
1005bebc:	2301      	movs	r3, #1
1005bebe:	9105      	str	r1, [sp, #20]
1005bec0:	9302      	str	r3, [sp, #8]
1005bec2:	f7f4 fa1d 	bl	10050300 <aci_event_fifo_push_header>
1005bec6:	2800      	cmp	r0, #0
1005bec8:	d00b      	beq.n	1005bee2 <llc_scan_update_anchors+0x17e>
1005beca:	4601      	mov	r1, r0
1005becc:	2011      	movs	r0, #17
1005bece:	71c8      	strb	r0, [r1, #7]
1005bed0:	9802      	ldr	r0, [sp, #8]
1005bed2:	7188      	strb	r0, [r1, #6]
1005bed4:	203e      	movs	r0, #62	@ 0x3e
1005bed6:	7148      	strb	r0, [r1, #5]
1005bed8:	2004      	movs	r0, #4
1005beda:	7108      	strb	r0, [r1, #4]
1005bedc:	9805      	ldr	r0, [sp, #20]
1005bede:	f7f4 faac 	bl	1005043a <aci_event_fifo_push>
1005bee2:	4638      	mov	r0, r7
1005bee4:	f7ff fcff 	bl	1005b8e6 <llc_scan_set_cancel_slots_request>
1005bee8:	e788      	b.n	1005bdfc <llc_scan_update_anchors+0x98>
1005beea:	46c0      	nop			@ (mov r8, r8)

1005beec <__arm_cp.12_0>:
1005beec:	2000083c 	.word	0x2000083c

1005bef0 <__arm_cp.12_1>:
1005bef0:	20000894 	.word	0x20000894

1005bef4 <__arm_cp.12_2>:
1005bef4:	20000840 	.word	0x20000840

1005bef8 <llc_scan_update_conn_anchor>:
1005bef8:	b510      	push	{r4, lr}
1005befa:	7f02      	ldrb	r2, [r0, #28]
1005befc:	7f43      	ldrb	r3, [r0, #29]
1005befe:	021b      	lsls	r3, r3, #8
1005bf00:	189a      	adds	r2, r3, r2
1005bf02:	d00a      	beq.n	1005bf1a <llc_scan_update_conn_anchor+0x22>
1005bf04:	0252      	lsls	r2, r2, #9
1005bf06:	6804      	ldr	r4, [r0, #0]
1005bf08:	18a3      	adds	r3, r4, r2
1005bf0a:	43e4      	mvns	r4, r4
1005bf0c:	1861      	adds	r1, r4, r1
1005bf0e:	2900      	cmp	r1, #0
1005bf10:	d403      	bmi.n	1005bf1a <llc_scan_update_conn_anchor+0x22>
1005bf12:	6003      	str	r3, [r0, #0]
1005bf14:	1a89      	subs	r1, r1, r2
1005bf16:	189b      	adds	r3, r3, r2
1005bf18:	e7f9      	b.n	1005bf0e <llc_scan_update_conn_anchor+0x16>
1005bf1a:	bd10      	pop	{r4, pc}

1005bf1c <llc_scan_prepare_conn_ind_req>:
1005bf1c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005bf1e:	4617      	mov	r7, r2
1005bf20:	460e      	mov	r6, r1
1005bf22:	4604      	mov	r4, r0
1005bf24:	6840      	ldr	r0, [r0, #4]
1005bf26:	2105      	movs	r1, #5
1005bf28:	7001      	strb	r1, [r0, #0]
1005bf2a:	2a00      	cmp	r2, #0
1005bf2c:	d106      	bne.n	1005bf3c <llc_scan_prepare_conn_ind_req+0x20>
1005bf2e:	f005 fc7f 	bl	10061830 <llc_get_channel_sel_algo2_enabled>
1005bf32:	0140      	lsls	r0, r0, #5
1005bf34:	6861      	ldr	r1, [r4, #4]
1005bf36:	780a      	ldrb	r2, [r1, #0]
1005bf38:	4302      	orrs	r2, r0
1005bf3a:	700a      	strb	r2, [r1, #0]
1005bf3c:	6860      	ldr	r0, [r4, #4]
1005bf3e:	2522      	movs	r5, #34	@ 0x22
1005bf40:	7045      	strb	r5, [r0, #1]
1005bf42:	2e02      	cmp	r6, #2
1005bf44:	d001      	beq.n	1005bf4a <llc_scan_prepare_conn_ind_req+0x2e>
1005bf46:	4817      	ldr	r0, [pc, #92]	@ (1005bfa4 <__arm_cp.15_1>)
1005bf48:	e000      	b.n	1005bf4c <llc_scan_prepare_conn_ind_req+0x30>
1005bf4a:	4815      	ldr	r0, [pc, #84]	@ (1005bfa0 <__arm_cp.15_0>)
1005bf4c:	2f01      	cmp	r7, #1
1005bf4e:	d000      	beq.n	1005bf52 <llc_scan_prepare_conn_ind_req+0x36>
1005bf50:	4815      	ldr	r0, [pc, #84]	@ (1005bfa8 <__arm_cp.15_2>)
1005bf52:	2e02      	cmp	r6, #2
1005bf54:	9002      	str	r0, [sp, #8]
1005bf56:	9601      	str	r6, [sp, #4]
1005bf58:	d001      	beq.n	1005bf5e <llc_scan_prepare_conn_ind_req+0x42>
1005bf5a:	4637      	mov	r7, r6
1005bf5c:	e000      	b.n	1005bf60 <llc_scan_prepare_conn_ind_req+0x44>
1005bf5e:	2704      	movs	r7, #4
1005bf60:	f7e8 fe14 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1005bf64:	4606      	mov	r6, r0
1005bf66:	4638      	mov	r0, r7
1005bf68:	4629      	mov	r1, r5
1005bf6a:	f005 ff5d 	bl	10061e28 <LL_link_calc_packetlength>
1005bf6e:	9902      	ldr	r1, [sp, #8]
1005bf70:	1808      	adds	r0, r1, r0
1005bf72:	1986      	adds	r6, r0, r6
1005bf74:	9801      	ldr	r0, [sp, #4]
1005bf76:	0080      	lsls	r0, r0, #2
1005bf78:	1825      	adds	r5, r4, r0
1005bf7a:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
1005bf7c:	4631      	mov	r1, r6
1005bf7e:	f7ff ffbb 	bl	1005bef8 <llc_scan_update_conn_anchor>
1005bf82:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
1005bf84:	6801      	ldr	r1, [r0, #0]
1005bf86:	1b89      	subs	r1, r1, r6
1005bf88:	0a4a      	lsrs	r2, r1, #9
1005bf8a:	7682      	strb	r2, [r0, #26]
1005bf8c:	0c49      	lsrs	r1, r1, #17
1005bf8e:	76c1      	strb	r1, [r0, #27]
1005bf90:	6be9      	ldr	r1, [r5, #60]	@ 0x3c
1005bf92:	3112      	adds	r1, #18
1005bf94:	6860      	ldr	r0, [r4, #4]
1005bf96:	300e      	adds	r0, #14
1005bf98:	2216      	movs	r2, #22
1005bf9a:	f7e8 fd03 	bl	100449a4 <BLEPLAT_MemCpy>
1005bf9e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005bfa0 <__arm_cp.15_0>:
1005bfa0:	0000063e 	.word	0x0000063e

1005bfa4 <__arm_cp.15_1>:
1005bfa4:	0000043e 	.word	0x0000043e

1005bfa8 <__arm_cp.15_2>:
1005bfa8:	0000023e 	.word	0x0000023e

1005bfac <llc_scan_get_primary_phy>:
1005bfac:	b5b0      	push	{r4, r5, r7, lr}
1005bfae:	2901      	cmp	r1, #1
1005bfb0:	d107      	bne.n	1005bfc2 <llc_scan_get_primary_phy+0x16>
1005bfb2:	21f1      	movs	r1, #241	@ 0xf1
1005bfb4:	5c40      	ldrb	r0, [r0, r1]
1005bfb6:	2503      	movs	r5, #3
1005bfb8:	4028      	ands	r0, r5
1005bfba:	2801      	cmp	r0, #1
1005bfbc:	d003      	beq.n	1005bfc6 <llc_scan_get_primary_phy+0x1a>
1005bfbe:	462c      	mov	r4, r5
1005bfc0:	e002      	b.n	1005bfc8 <llc_scan_get_primary_phy+0x1c>
1005bfc2:	2401      	movs	r4, #1
1005bfc4:	e005      	b.n	1005bfd2 <llc_scan_get_primary_phy+0x26>
1005bfc6:	2404      	movs	r4, #4
1005bfc8:	f000 ff46 	bl	1005ce58 <llc_host_feature_advertising_coding_selection_enabled>
1005bfcc:	2801      	cmp	r0, #1
1005bfce:	d000      	beq.n	1005bfd2 <llc_scan_get_primary_phy+0x26>
1005bfd0:	462c      	mov	r4, r5
1005bfd2:	4620      	mov	r0, r4
1005bfd4:	bdb0      	pop	{r4, r5, r7, pc}

1005bfd6 <llc_scan_get_secondary_phy>:
1005bfd6:	b570      	push	{r4, r5, r6, lr}
1005bfd8:	460c      	mov	r4, r1
1005bfda:	21f1      	movs	r1, #241	@ 0xf1
1005bfdc:	5c45      	ldrb	r5, [r0, r1]
1005bfde:	2603      	movs	r6, #3
1005bfe0:	4066      	eors	r6, r4
1005bfe2:	f000 ff39 	bl	1005ce58 <llc_host_feature_advertising_coding_selection_enabled>
1005bfe6:	2101      	movs	r1, #1
1005bfe8:	4041      	eors	r1, r0
1005bfea:	4331      	orrs	r1, r6
1005bfec:	220c      	movs	r2, #12
1005bfee:	402a      	ands	r2, r5
1005bff0:	2a04      	cmp	r2, #4
1005bff2:	4620      	mov	r0, r4
1005bff4:	d100      	bne.n	1005bff8 <llc_scan_get_secondary_phy+0x22>
1005bff6:	4610      	mov	r0, r2
1005bff8:	2900      	cmp	r1, #0
1005bffa:	d000      	beq.n	1005bffe <llc_scan_get_secondary_phy+0x28>
1005bffc:	4620      	mov	r0, r4
1005bffe:	bd70      	pop	{r4, r5, r6, pc}

1005c000 <llc_scan_aux_cancel_reserved_task_slots>:
1005c000:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005c002:	4604      	mov	r4, r0
1005c004:	f7ff fb56 	bl	1005b6b4 <llc_scan_get_cntxt_p>
1005c008:	4605      	mov	r5, r0
1005c00a:	4606      	mov	r6, r0
1005c00c:	3610      	adds	r6, #16
1005c00e:	35ec      	adds	r5, #236	@ 0xec
1005c010:	2700      	movs	r7, #0
1005c012:	7828      	ldrb	r0, [r5, #0]
1005c014:	4287      	cmp	r7, r0
1005c016:	d209      	bcs.n	1005c02c <llc_scan_aux_cancel_reserved_task_slots+0x2c>
1005c018:	6830      	ldr	r0, [r6, #0]
1005c01a:	212a      	movs	r1, #42	@ 0x2a
1005c01c:	5c40      	ldrb	r0, [r0, r1]
1005c01e:	42a0      	cmp	r0, r4
1005c020:	d001      	beq.n	1005c026 <llc_scan_aux_cancel_reserved_task_slots+0x26>
1005c022:	f006 f9cd 	bl	100623c0 <LL_sched_set_cancel_request>
1005c026:	1d36      	adds	r6, r6, #4
1005c028:	1c7f      	adds	r7, r7, #1
1005c02a:	e7f2      	b.n	1005c012 <llc_scan_aux_cancel_reserved_task_slots+0x12>
1005c02c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005c02e <llc_scan_duplicates_filter>:
1005c02e:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c030:	b085      	sub	sp, #20
1005c032:	9104      	str	r1, [sp, #16]
1005c034:	4607      	mov	r7, r0
1005c036:	20e9      	movs	r0, #233	@ 0xe9
1005c038:	5c38      	ldrb	r0, [r7, r0]
1005c03a:	2800      	cmp	r0, #0
1005c03c:	d004      	beq.n	1005c048 <llc_scan_duplicates_filter+0x1a>
1005c03e:	2b01      	cmp	r3, #1
1005c040:	9203      	str	r2, [sp, #12]
1005c042:	d003      	beq.n	1005c04c <llc_scan_duplicates_filter+0x1e>
1005c044:	2101      	movs	r1, #1
1005c046:	e002      	b.n	1005c04e <llc_scan_duplicates_filter+0x20>
1005c048:	2200      	movs	r2, #0
1005c04a:	e02e      	b.n	1005c0aa <llc_scan_duplicates_filter+0x7c>
1005c04c:	2102      	movs	r1, #2
1005c04e:	6d7c      	ldr	r4, [r7, #84]	@ 0x54
1005c050:	6dbd      	ldr	r5, [r7, #88]	@ 0x58
1005c052:	20ff      	movs	r0, #255	@ 0xff
1005c054:	4384      	bics	r4, r0
1005c056:	9102      	str	r1, [sp, #8]
1005c058:	1861      	adds	r1, r4, r1
1005c05a:	0600      	lsls	r0, r0, #24
1005c05c:	4385      	bics	r5, r0
1005c05e:	463e      	mov	r6, r7
1005c060:	36b4      	adds	r6, #180	@ 0xb4
1005c062:	4630      	mov	r0, r6
1005c064:	9101      	str	r1, [sp, #4]
1005c066:	462a      	mov	r2, r5
1005c068:	9b04      	ldr	r3, [sp, #16]
1005c06a:	f7ff fc81 	bl	1005b970 <llc_scan_duplicates_list_search>
1005c06e:	2804      	cmp	r0, #4
1005c070:	d10f      	bne.n	1005c092 <llc_scan_duplicates_filter+0x64>
1005c072:	2100      	movs	r1, #0
1005c074:	9803      	ldr	r0, [sp, #12]
1005c076:	2801      	cmp	r0, #1
1005c078:	460f      	mov	r7, r1
1005c07a:	4608      	mov	r0, r1
1005c07c:	d000      	beq.n	1005c080 <llc_scan_duplicates_filter+0x52>
1005c07e:	9802      	ldr	r0, [sp, #8]
1005c080:	4304      	orrs	r4, r0
1005c082:	4630      	mov	r0, r6
1005c084:	4621      	mov	r1, r4
1005c086:	462a      	mov	r2, r5
1005c088:	9b04      	ldr	r3, [sp, #16]
1005c08a:	f7ff fc4a 	bl	1005b922 <llc_scan_duplicates_list_add>
1005c08e:	463a      	mov	r2, r7
1005c090:	e00b      	b.n	1005c0aa <llc_scan_duplicates_filter+0x7c>
1005c092:	2201      	movs	r2, #1
1005c094:	9903      	ldr	r1, [sp, #12]
1005c096:	2900      	cmp	r1, #0
1005c098:	d107      	bne.n	1005c0aa <llc_scan_duplicates_filter+0x7c>
1005c09a:	210c      	movs	r1, #12
1005c09c:	4341      	muls	r1, r0
1005c09e:	1878      	adds	r0, r7, r1
1005c0a0:	21b4      	movs	r1, #180	@ 0xb4
1005c0a2:	9b01      	ldr	r3, [sp, #4]
1005c0a4:	5043      	str	r3, [r0, r1]
1005c0a6:	30b4      	adds	r0, #180	@ 0xb4
1005c0a8:	6045      	str	r5, [r0, #4]
1005c0aa:	4610      	mov	r0, r2
1005c0ac:	b005      	add	sp, #20
1005c0ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005c0b0 <llc_scan_enable>:
1005c0b0:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c0b2:	b08b      	sub	sp, #44	@ 0x2c
1005c0b4:	4604      	mov	r4, r0
1005c0b6:	f7ff fafd 	bl	1005b6b4 <llc_scan_get_cntxt_p>
1005c0ba:	4623      	mov	r3, r4
1005c0bc:	4606      	mov	r6, r0
1005c0be:	20eb      	movs	r0, #235	@ 0xeb
1005c0c0:	5c34      	ldrb	r4, [r6, r0]
1005c0c2:	2201      	movs	r2, #1
1005c0c4:	4014      	ands	r4, r2
1005c0c6:	7a19      	ldrb	r1, [r3, #8]
1005c0c8:	4635      	mov	r5, r6
1005c0ca:	35e9      	adds	r5, #233	@ 0xe9
1005c0cc:	4630      	mov	r0, r6
1005c0ce:	2900      	cmp	r1, #0
1005c0d0:	d017      	beq.n	1005c102 <llc_scan_enable+0x52>
1005c0d2:	2712      	movs	r7, #18
1005c0d4:	2901      	cmp	r1, #1
1005c0d6:	d000      	beq.n	1005c0da <llc_scan_enable+0x2a>
1005c0d8:	e0de      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c0da:	7a99      	ldrb	r1, [r3, #10]
1005c0dc:	2901      	cmp	r1, #1
1005c0de:	9208      	str	r2, [sp, #32]
1005c0e0:	d000      	beq.n	1005c0e4 <llc_scan_enable+0x34>
1005c0e2:	2102      	movs	r1, #2
1005c0e4:	7a5a      	ldrb	r2, [r3, #9]
1005c0e6:	4291      	cmp	r1, r2
1005c0e8:	d200      	bcs.n	1005c0ec <llc_scan_enable+0x3c>
1005c0ea:	e0d5      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c0ec:	9007      	str	r0, [sp, #28]
1005c0ee:	6819      	ldr	r1, [r3, #0]
1005c0f0:	2900      	cmp	r1, #0
1005c0f2:	d013      	beq.n	1005c11c <llc_scan_enable+0x6c>
1005c0f4:	6858      	ldr	r0, [r3, #4]
1005c0f6:	2800      	cmp	r0, #0
1005c0f8:	d010      	beq.n	1005c11c <llc_scan_enable+0x6c>
1005c0fa:	01c0      	lsls	r0, r0, #7
1005c0fc:	4281      	cmp	r1, r0
1005c0fe:	d310      	bcc.n	1005c122 <llc_scan_enable+0x72>
1005c100:	e0ca      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c102:	2700      	movs	r7, #0
1005c104:	2c00      	cmp	r4, #0
1005c106:	d100      	bne.n	1005c10a <llc_scan_enable+0x5a>
1005c108:	e0c6      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c10a:	f7f2 fd92 	bl	1004ec32 <llc_scan_disable_ucfg>
1005c10e:	7928      	ldrb	r0, [r5, #4]
1005c110:	0780      	lsls	r0, r0, #30
1005c112:	d400      	bmi.n	1005c116 <llc_scan_enable+0x66>
1005c114:	e0c0      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c116:	f7fd f86b 	bl	100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>
1005c11a:	e0bd      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c11c:	2a02      	cmp	r2, #2
1005c11e:	d100      	bne.n	1005c122 <llc_scan_enable+0x72>
1005c120:	e0ba      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c122:	9306      	str	r3, [sp, #24]
1005c124:	7928      	ldrb	r0, [r5, #4]
1005c126:	2102      	movs	r1, #2
1005c128:	9103      	str	r1, [sp, #12]
1005c12a:	4308      	orrs	r0, r1
1005c12c:	2803      	cmp	r0, #3
1005c12e:	d109      	bne.n	1005c144 <llc_scan_enable+0x94>
1005c130:	a809      	add	r0, sp, #36	@ 0x24
1005c132:	9005      	str	r0, [sp, #20]
1005c134:	f7f8 ff26 	bl	10054f84 <Get_Random_Addr>
1005c138:	9805      	ldr	r0, [sp, #20]
1005c13a:	f006 f881 	bl	10062240 <Is_Address_Initialized>
1005c13e:	2800      	cmp	r0, #0
1005c140:	d100      	bne.n	1005c144 <llc_scan_enable+0x94>
1005c142:	e0a9      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c144:	2c00      	cmp	r4, #0
1005c146:	d10b      	bne.n	1005c160 <llc_scan_enable+0xb0>
1005c148:	9806      	ldr	r0, [sp, #24]
1005c14a:	9907      	ldr	r1, [sp, #28]
1005c14c:	f7f2 fd4a 	bl	1004ebe4 <llc_scan_reserve_taskslots_ucfg>
1005c150:	4607      	mov	r7, r0
1005c152:	2800      	cmp	r0, #0
1005c154:	d000      	beq.n	1005c158 <llc_scan_enable+0xa8>
1005c156:	e09f      	b.n	1005c298 <llc_scan_enable+0x1e8>
1005c158:	4630      	mov	r0, r6
1005c15a:	30b4      	adds	r0, #180	@ 0xb4
1005c15c:	f7ff fc02 	bl	1005b964 <llc_scan_duplicates_list_reset>
1005c160:	4637      	mov	r7, r6
1005c162:	375c      	adds	r7, #92	@ 0x5c
1005c164:	4630      	mov	r0, r6
1005c166:	30ac      	adds	r0, #172	@ 0xac
1005c168:	9002      	str	r0, [sp, #8]
1005c16a:	9906      	ldr	r1, [sp, #24]
1005c16c:	c903      	ldmia	r1, {r0, r1}
1005c16e:	04c9      	lsls	r1, r1, #19
1005c170:	9104      	str	r1, [sp, #16]
1005c172:	0300      	lsls	r0, r0, #12
1005c174:	9005      	str	r0, [sp, #20]
1005c176:	f7e8 fd09 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1005c17a:	78a9      	ldrb	r1, [r5, #2]
1005c17c:	07c9      	lsls	r1, r1, #31
1005c17e:	d151      	bne.n	1005c224 <llc_scan_enable+0x174>
1005c180:	9908      	ldr	r1, [sp, #32]
1005c182:	9a02      	ldr	r2, [sp, #8]
1005c184:	71d1      	strb	r1, [r2, #7]
1005c186:	8051      	strh	r1, [r2, #2]
1005c188:	2100      	movs	r1, #0
1005c18a:	6339      	str	r1, [r7, #48]	@ 0x30
1005c18c:	9101      	str	r1, [sp, #4]
1005c18e:	6379      	str	r1, [r7, #52]	@ 0x34
1005c190:	9906      	ldr	r1, [sp, #24]
1005c192:	7a49      	ldrb	r1, [r1, #9]
1005c194:	9a05      	ldr	r2, [sp, #20]
1005c196:	647a      	str	r2, [r7, #68]	@ 0x44
1005c198:	2a00      	cmp	r2, #0
1005c19a:	463a      	mov	r2, r7
1005c19c:	d101      	bne.n	1005c1a2 <llc_scan_enable+0xf2>
1005c19e:	9f05      	ldr	r7, [sp, #20]
1005c1a0:	9704      	str	r7, [sp, #16]
1005c1a2:	9b04      	ldr	r3, [sp, #16]
1005c1a4:	6493      	str	r3, [r2, #72]	@ 0x48
1005c1a6:	7029      	strb	r1, [r5, #0]
1005c1a8:	217d      	movs	r1, #125	@ 0x7d
1005c1aa:	00c9      	lsls	r1, r1, #3
1005c1ac:	1841      	adds	r1, r0, r1
1005c1ae:	9f07      	ldr	r7, [sp, #28]
1005c1b0:	64b9      	str	r1, [r7, #72]	@ 0x48
1005c1b2:	64f9      	str	r1, [r7, #76]	@ 0x4c
1005c1b4:	6391      	str	r1, [r2, #56]	@ 0x38
1005c1b6:	63d1      	str	r1, [r2, #60]	@ 0x3c
1005c1b8:	9b05      	ldr	r3, [sp, #20]
1005c1ba:	2b00      	cmp	r3, #0
1005c1bc:	d100      	bne.n	1005c1c0 <llc_scan_enable+0x110>
1005c1be:	4619      	mov	r1, r3
1005c1c0:	6411      	str	r1, [r2, #64]	@ 0x40
1005c1c2:	4638      	mov	r0, r7
1005c1c4:	9205      	str	r2, [sp, #20]
1005c1c6:	f7ff fc07 	bl	1005b9d8 <llc_scan_initialize_scan_channel>
1005c1ca:	9a05      	ldr	r2, [sp, #20]
1005c1cc:	4834      	ldr	r0, [pc, #208]	@ (1005c2a0 <__arm_cp.2_0>)
1005c1ce:	6801      	ldr	r1, [r0, #0]
1005c1d0:	4834      	ldr	r0, [pc, #208]	@ (1005c2a4 <__arm_cp.2_1>)
1005c1d2:	6800      	ldr	r0, [r0, #0]
1005c1d4:	9b01      	ldr	r3, [sp, #4]
1005c1d6:	65fb      	str	r3, [r7, #92]	@ 0x5c
1005c1d8:	663b      	str	r3, [r7, #96]	@ 0x60
1005c1da:	792b      	ldrb	r3, [r5, #4]
1005c1dc:	7013      	strb	r3, [r2, #0]
1005c1de:	07db      	lsls	r3, r3, #31
1005c1e0:	d001      	beq.n	1005c1e6 <llc_scan_enable+0x136>
1005c1e2:	3056      	adds	r0, #86	@ 0x56
1005c1e4:	4601      	mov	r1, r0
1005c1e6:	9104      	str	r1, [sp, #16]
1005c1e8:	1c50      	adds	r0, r2, #1
1005c1ea:	2206      	movs	r2, #6
1005c1ec:	9205      	str	r2, [sp, #20]
1005c1ee:	f7e8 fbd9 	bl	100449a4 <BLEPLAT_MemCpy>
1005c1f2:	6df8      	ldr	r0, [r7, #92]	@ 0x5c
1005c1f4:	6e39      	ldr	r1, [r7, #96]	@ 0x60
1005c1f6:	6678      	str	r0, [r7, #100]	@ 0x64
1005c1f8:	66b9      	str	r1, [r7, #104]	@ 0x68
1005c1fa:	6878      	ldr	r0, [r7, #4]
1005c1fc:	1c80      	adds	r0, r0, #2
1005c1fe:	9904      	ldr	r1, [sp, #16]
1005c200:	9a05      	ldr	r2, [sp, #20]
1005c202:	f7e8 fbcf 	bl	100449a4 <BLEPLAT_MemCpy>
1005c206:	7928      	ldrb	r0, [r5, #4]
1005c208:	0780      	lsls	r0, r0, #30
1005c20a:	d501      	bpl.n	1005c210 <llc_scan_enable+0x160>
1005c20c:	f7fc ffef 	bl	100591ee <llc_priv_start_privacy_timer_ucfg_weak>
1005c210:	3610      	adds	r6, #16
1005c212:	78e8      	ldrb	r0, [r5, #3]
1005c214:	2800      	cmp	r0, #0
1005c216:	d018      	beq.n	1005c24a <llc_scan_enable+0x19a>
1005c218:	ce02      	ldmia	r6!, {r1}
1005c21a:	222b      	movs	r2, #43	@ 0x2b
1005c21c:	23ff      	movs	r3, #255	@ 0xff
1005c21e:	548b      	strb	r3, [r1, r2]
1005c220:	1e40      	subs	r0, r0, #1
1005c222:	e7f7      	b.n	1005c214 <llc_scan_enable+0x164>
1005c224:	9b05      	ldr	r3, [sp, #20]
1005c226:	2b00      	cmp	r3, #0
1005c228:	d100      	bne.n	1005c22c <llc_scan_enable+0x17c>
1005c22a:	4618      	mov	r0, r3
1005c22c:	f3ef 8110 	mrs	r1, PRIMASK
1005c230:	b672      	cpsid	i
1005c232:	9a06      	ldr	r2, [sp, #24]
1005c234:	7a51      	ldrb	r1, [r2, #9]
1005c236:	6438      	str	r0, [r7, #64]	@ 0x40
1005c238:	647b      	str	r3, [r7, #68]	@ 0x44
1005c23a:	2b00      	cmp	r3, #0
1005c23c:	9804      	ldr	r0, [sp, #16]
1005c23e:	d100      	bne.n	1005c242 <llc_scan_enable+0x192>
1005c240:	4618      	mov	r0, r3
1005c242:	64b8      	str	r0, [r7, #72]	@ 0x48
1005c244:	7029      	strb	r1, [r5, #0]
1005c246:	b662      	cpsie	i
1005c248:	e009      	b.n	1005c25e <llc_scan_enable+0x1ae>
1005c24a:	78a8      	ldrb	r0, [r5, #2]
1005c24c:	9a06      	ldr	r2, [sp, #24]
1005c24e:	7a91      	ldrb	r1, [r2, #10]
1005c250:	2901      	cmp	r1, #1
1005c252:	d101      	bne.n	1005c258 <llc_scan_enable+0x1a8>
1005c254:	9903      	ldr	r1, [sp, #12]
1005c256:	4308      	orrs	r0, r1
1005c258:	9908      	ldr	r1, [sp, #32]
1005c25a:	4308      	orrs	r0, r1
1005c25c:	70a8      	strb	r0, [r5, #2]
1005c25e:	2700      	movs	r7, #0
1005c260:	2c00      	cmp	r4, #0
1005c262:	d119      	bne.n	1005c298 <llc_scan_enable+0x1e8>
1005c264:	79e8      	ldrb	r0, [r5, #7]
1005c266:	07c0      	lsls	r0, r0, #31
1005c268:	d010      	beq.n	1005c28c <llc_scan_enable+0x1dc>
1005c26a:	2500      	movs	r5, #0
1005c26c:	9c07      	ldr	r4, [sp, #28]
1005c26e:	4620      	mov	r0, r4
1005c270:	4629      	mov	r1, r5
1005c272:	f000 f819 	bl	1005c2a8 <llc_scan_set_blue_packets>
1005c276:	9802      	ldr	r0, [sp, #8]
1005c278:	7801      	ldrb	r1, [r0, #0]
1005c27a:	68a0      	ldr	r0, [r4, #8]
1005c27c:	462a      	mov	r2, r5
1005c27e:	f000 f849 	bl	1005c314 <llc_scan_set_blue_sm>
1005c282:	4620      	mov	r0, r4
1005c284:	4629      	mov	r1, r5
1005c286:	f000 f879 	bl	1005c37c <llc_scan_set_scheduler_params>
1005c28a:	9a06      	ldr	r2, [sp, #24]
1005c28c:	7a90      	ldrb	r0, [r2, #10]
1005c28e:	2800      	cmp	r0, #0
1005c290:	d102      	bne.n	1005c298 <llc_scan_enable+0x1e8>
1005c292:	9807      	ldr	r0, [sp, #28]
1005c294:	f7f2 fc7c 	bl	1004eb90 <llc_scan_enable_extended_ucfg>
1005c298:	4638      	mov	r0, r7
1005c29a:	b00b      	add	sp, #44	@ 0x2c
1005c29c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005c29e:	46c0      	nop			@ (mov r8, r8)

1005c2a0 <__arm_cp.2_0>:
1005c2a0:	2000083c 	.word	0x2000083c

1005c2a4 <__arm_cp.2_1>:
1005c2a4:	20000894 	.word	0x20000894

1005c2a8 <llc_scan_set_blue_packets>:
1005c2a8:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c2aa:	b085      	sub	sp, #20
1005c2ac:	4605      	mov	r5, r0
1005c2ae:	2901      	cmp	r1, #1
1005c2b0:	d805      	bhi.n	1005c2be <llc_scan_set_blue_packets+0x16>
1005c2b2:	0088      	lsls	r0, r1, #2
1005c2b4:	1828      	adds	r0, r5, r0
1005c2b6:	6887      	ldr	r7, [r0, #8]
1005c2b8:	9704      	str	r7, [sp, #16]
1005c2ba:	3714      	adds	r7, #20
1005c2bc:	e003      	b.n	1005c2c6 <llc_scan_set_blue_packets+0x1e>
1005c2be:	6baf      	ldr	r7, [r5, #56]	@ 0x38
1005c2c0:	1d38      	adds	r0, r7, #4
1005c2c2:	9004      	str	r0, [sp, #16]
1005c2c4:	3718      	adds	r7, #24
1005c2c6:	6868      	ldr	r0, [r5, #4]
1005c2c8:	9003      	str	r0, [sp, #12]
1005c2ca:	2094      	movs	r0, #148	@ 0x94
1005c2cc:	2600      	movs	r6, #0
1005c2ce:	4631      	mov	r1, r6
1005c2d0:	4632      	mov	r2, r6
1005c2d2:	f7e9 fbfc 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
1005c2d6:	4603      	mov	r3, r0
1005c2d8:	2403      	movs	r4, #3
1005c2da:	9400      	str	r4, [sp, #0]
1005c2dc:	4638      	mov	r0, r7
1005c2de:	4631      	mov	r1, r6
1005c2e0:	9a03      	ldr	r2, [sp, #12]
1005c2e2:	f003 fc2d 	bl	1005fb40 <LL_eadv_Blue_Tx>
1005c2e6:	682d      	ldr	r5, [r5, #0]
1005c2e8:	2096      	movs	r0, #150	@ 0x96
1005c2ea:	2101      	movs	r1, #1
1005c2ec:	4632      	mov	r2, r6
1005c2ee:	f7e9 fbee 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
1005c2f2:	4603      	mov	r3, r0
1005c2f4:	9600      	str	r6, [sp, #0]
1005c2f6:	9401      	str	r4, [sp, #4]
1005c2f8:	9c04      	ldr	r4, [sp, #16]
1005c2fa:	4620      	mov	r0, r4
1005c2fc:	4631      	mov	r1, r6
1005c2fe:	462a      	mov	r2, r5
1005c300:	f003 fc59 	bl	1005fbb6 <LL_eadv_Blue_Rx>
1005c304:	4620      	mov	r0, r4
1005c306:	f7e9 fdcf 	bl	10045ea8 <BLEPLAT_CNTR_PacketSetIntTimeout>
1005c30a:	4620      	mov	r0, r4
1005c30c:	f7e9 fe32 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005c310:	b005      	add	sp, #20
1005c312:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005c314 <llc_scan_set_blue_sm>:
1005c314:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005c316:	4617      	mov	r7, r2
1005c318:	460c      	mov	r4, r1
1005c31a:	4605      	mov	r5, r0
1005c31c:	4816      	ldr	r0, [pc, #88]	@ (1005c378 <__arm_cp.4_0>)
1005c31e:	6800      	ldr	r0, [r0, #0]
1005c320:	7a41      	ldrb	r1, [r0, #9]
1005c322:	2003      	movs	r0, #3
1005c324:	9000      	str	r0, [sp, #0]
1005c326:	462e      	mov	r6, r5
1005c328:	3614      	adds	r6, #20
1005c32a:	4620      	mov	r0, r4
1005c32c:	4632      	mov	r2, r6
1005c32e:	462b      	mov	r3, r5
1005c330:	f003 fc80 	bl	1005fc34 <LL_eadv_BLUE_SM>
1005c334:	2f00      	cmp	r7, #0
1005c336:	d00a      	beq.n	1005c34e <llc_scan_set_blue_sm+0x3a>
1005c338:	a901      	add	r1, sp, #4
1005c33a:	201f      	movs	r0, #31
1005c33c:	7108      	strb	r0, [r1, #4]
1005c33e:	2000      	movs	r0, #0
1005c340:	43c0      	mvns	r0, r0
1005c342:	9001      	str	r0, [sp, #4]
1005c344:	4620      	mov	r0, r4
1005c346:	f7ea f821 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
1005c34a:	21ff      	movs	r1, #255	@ 0xff
1005c34c:	e004      	b.n	1005c358 <llc_scan_set_blue_sm+0x44>
1005c34e:	2127      	movs	r1, #39	@ 0x27
1005c350:	4620      	mov	r0, r4
1005c352:	f7ea f888 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
1005c356:	2125      	movs	r1, #37	@ 0x25
1005c358:	4620      	mov	r0, r4
1005c35a:	f7ea f85a 	bl	10046412 <BLEPLAT_CNTR_SmSetDataLength>
1005c35e:	4620      	mov	r0, r4
1005c360:	f7e9 fe78 	bl	10046054 <BLEPLAT_CNTR_SmCteOff>
1005c364:	4630      	mov	r0, r6
1005c366:	4621      	mov	r1, r4
1005c368:	f7e9 fde0 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
1005c36c:	4628      	mov	r0, r5
1005c36e:	4621      	mov	r1, r4
1005c370:	f7e9 fddc 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
1005c374:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005c376:	46c0      	nop			@ (mov r8, r8)

1005c378 <__arm_cp.4_0>:
1005c378:	20000894 	.word	0x20000894

1005c37c <llc_scan_set_scheduler_params>:
1005c37c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c37e:	b08b      	sub	sp, #44	@ 0x2c
1005c380:	460e      	mov	r6, r1
1005c382:	4604      	mov	r4, r0
1005c384:	1840      	adds	r0, r0, r1
1005c386:	25ac      	movs	r5, #172	@ 0xac
1005c388:	900a      	str	r0, [sp, #40]	@ 0x28
1005c38a:	5d40      	ldrb	r0, [r0, r5]
1005c38c:	9009      	str	r0, [sp, #36]	@ 0x24
1005c38e:	0088      	lsls	r0, r1, #2
1005c390:	1827      	adds	r7, r4, r0
1005c392:	f005 ffe3 	bl	1006235c <LL_sched_engine_return_actual_scheduler_margin>
1005c396:	9008      	str	r0, [sp, #32]
1005c398:	6ff8      	ldr	r0, [r7, #124]	@ 0x7c
1005c39a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
1005c39c:	4b14      	ldr	r3, [pc, #80]	@ (1005c3f0 <__arm_cp.5_0>)
1005c39e:	9307      	str	r3, [sp, #28]
1005c3a0:	2e00      	cmp	r6, #0
1005c3a2:	d001      	beq.n	1005c3a8 <llc_scan_set_scheduler_params+0x2c>
1005c3a4:	4b14      	ldr	r3, [pc, #80]	@ (1005c3f8 <__arm_cp.5_2>)
1005c3a6:	e000      	b.n	1005c3aa <llc_scan_set_scheduler_params+0x2e>
1005c3a8:	4b12      	ldr	r3, [pc, #72]	@ (1005c3f4 <__arm_cp.5_1>)
1005c3aa:	9306      	str	r3, [sp, #24]
1005c3ac:	2e00      	cmp	r6, #0
1005c3ae:	d001      	beq.n	1005c3b4 <llc_scan_set_scheduler_params+0x38>
1005c3b0:	4b13      	ldr	r3, [pc, #76]	@ (1005c400 <__arm_cp.5_4>)
1005c3b2:	e000      	b.n	1005c3b6 <llc_scan_set_scheduler_params+0x3a>
1005c3b4:	4b11      	ldr	r3, [pc, #68]	@ (1005c3fc <__arm_cp.5_3>)
1005c3b6:	9305      	str	r3, [sp, #20]
1005c3b8:	2e00      	cmp	r6, #0
1005c3ba:	d001      	beq.n	1005c3c0 <llc_scan_set_scheduler_params+0x44>
1005c3bc:	4b12      	ldr	r3, [pc, #72]	@ (1005c408 <__arm_cp.5_6>)
1005c3be:	e000      	b.n	1005c3c2 <llc_scan_set_scheduler_params+0x46>
1005c3c0:	4b10      	ldr	r3, [pc, #64]	@ (1005c404 <__arm_cp.5_5>)
1005c3c2:	2601      	movs	r6, #1
1005c3c4:	2106      	movs	r1, #6
1005c3c6:	9000      	str	r0, [sp, #0]
1005c3c8:	9201      	str	r2, [sp, #4]
1005c3ca:	9102      	str	r1, [sp, #8]
1005c3cc:	9603      	str	r6, [sp, #12]
1005c3ce:	9304      	str	r3, [sp, #16]
1005c3d0:	480e      	ldr	r0, [pc, #56]	@ (1005c40c <__arm_cp.5_7>)
1005c3d2:	9908      	ldr	r1, [sp, #32]
1005c3d4:	180b      	adds	r3, r1, r0
1005c3d6:	2203      	movs	r2, #3
1005c3d8:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005c3da:	4621      	mov	r1, r4
1005c3dc:	f006 f802 	bl	100623e4 <LL_sched_enable_taskslot>
1005c3e0:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005c3e2:	5d41      	ldrb	r1, [r0, r5]
1005c3e4:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
1005c3e6:	f006 fb65 	bl	10062ab4 <LL_sched_check_and_call_sched>
1005c3ea:	b00b      	add	sp, #44	@ 0x2c
1005c3ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005c3ee:	46c0      	nop			@ (mov r8, r8)

1005c3f0 <__arm_cp.5_0>:
1005c3f0:	1006a0e9 	.word	0x1006a0e9

1005c3f4 <__arm_cp.5_1>:
1005c3f4:	1005a875 	.word	0x1005a875

1005c3f8 <__arm_cp.5_2>:
1005c3f8:	1005ae1d 	.word	0x1005ae1d

1005c3fc <__arm_cp.5_3>:
1005c3fc:	1006a1ed 	.word	0x1006a1ed

1005c400 <__arm_cp.5_4>:
1005c400:	1006a11d 	.word	0x1006a11d

1005c404 <__arm_cp.5_5>:
1005c404:	1006a205 	.word	0x1006a205

1005c408 <__arm_cp.5_6>:
1005c408:	1006a1f7 	.word	0x1006a1f7

1005c40c <__arm_cp.5_7>:
1005c40c:	0000042d 	.word	0x0000042d

1005c410 <llc_scan_set_scanning_params>:
1005c410:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c412:	b08f      	sub	sp, #60	@ 0x3c
1005c414:	930c      	str	r3, [sp, #48]	@ 0x30
1005c416:	4614      	mov	r4, r2
1005c418:	910b      	str	r1, [sp, #44]	@ 0x2c
1005c41a:	900a      	str	r0, [sp, #40]	@ 0x28
1005c41c:	f7ff f94a 	bl	1005b6b4 <llc_scan_get_cntxt_p>
1005c420:	21eb      	movs	r1, #235	@ 0xeb
1005c422:	5c41      	ldrb	r1, [r0, r1]
1005c424:	07c9      	lsls	r1, r1, #31
1005c426:	d000      	beq.n	1005c42a <llc_scan_set_scanning_params+0x1a>
1005c428:	e082      	b.n	1005c530 <llc_scan_set_scanning_params+0x120>
1005c42a:	4601      	mov	r1, r0
1005c42c:	3180      	adds	r1, #128	@ 0x80
1005c42e:	9106      	str	r1, [sp, #24]
1005c430:	4601      	mov	r1, r0
1005c432:	31aa      	adds	r1, #170	@ 0xaa
1005c434:	9104      	str	r1, [sp, #16]
1005c436:	9003      	str	r0, [sp, #12]
1005c438:	30ea      	adds	r0, #234	@ 0xea
1005c43a:	9002      	str	r0, [sp, #8]
1005c43c:	9814      	ldr	r0, [sp, #80]	@ 0x50
1005c43e:	9009      	str	r0, [sp, #36]	@ 0x24
1005c440:	20fa      	movs	r0, #250	@ 0xfa
1005c442:	4020      	ands	r0, r4
1005c444:	1e41      	subs	r1, r0, #1
1005c446:	4188      	sbcs	r0, r1
1005c448:	4266      	negs	r6, r4
1005c44a:	4166      	adcs	r6, r4
1005c44c:	4306      	orrs	r6, r0
1005c44e:	2501      	movs	r5, #1
1005c450:	0760      	lsls	r0, r4, #29
1005c452:	9405      	str	r4, [sp, #20]
1005c454:	402c      	ands	r4, r5
1005c456:	0fc0      	lsrs	r0, r0, #31
1005c458:	9401      	str	r4, [sp, #4]
1005c45a:	1900      	adds	r0, r0, r4
1005c45c:	9008      	str	r0, [sp, #32]
1005c45e:	2700      	movs	r7, #0
1005c460:	2006      	movs	r0, #6
1005c462:	9007      	str	r0, [sp, #28]
1005c464:	4378      	muls	r0, r7
1005c466:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005c468:	1811      	adds	r1, r2, r0
1005c46a:	888c      	ldrh	r4, [r1, #4]
1005c46c:	5a10      	ldrh	r0, [r2, r0]
1005c46e:	900e      	str	r0, [sp, #56]	@ 0x38
1005c470:	8848      	ldrh	r0, [r1, #2]
1005c472:	900d      	str	r0, [sp, #52]	@ 0x34
1005c474:	f7fc feb7 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
1005c478:	2801      	cmp	r0, #1
1005c47a:	d001      	beq.n	1005c480 <llc_scan_set_scanning_params+0x70>
1005c47c:	4628      	mov	r0, r5
1005c47e:	e000      	b.n	1005c482 <llc_scan_set_scanning_params+0x72>
1005c480:	2003      	movs	r0, #3
1005c482:	2100      	movs	r1, #0
1005c484:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1005c486:	4290      	cmp	r0, r2
1005c488:	4628      	mov	r0, r5
1005c48a:	d300      	bcc.n	1005c48e <llc_scan_set_scanning_params+0x7e>
1005c48c:	4608      	mov	r0, r1
1005c48e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1005c490:	2a03      	cmp	r2, #3
1005c492:	462a      	mov	r2, r5
1005c494:	d800      	bhi.n	1005c498 <llc_scan_set_scanning_params+0x88>
1005c496:	460a      	mov	r2, r1
1005c498:	4310      	orrs	r0, r2
1005c49a:	d14c      	bne.n	1005c536 <llc_scan_set_scanning_params+0x126>
1005c49c:	07f1      	lsls	r1, r6, #31
1005c49e:	d14a      	bne.n	1005c536 <llc_scan_set_scanning_params+0x126>
1005c4a0:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005c4a2:	0400      	lsls	r0, r0, #16
1005c4a4:	990e      	ldr	r1, [sp, #56]	@ 0x38
1005c4a6:	1841      	adds	r1, r0, r1
1005c4a8:	060a      	lsls	r2, r1, #24
1005c4aa:	2012      	movs	r0, #18
1005c4ac:	0e52      	lsrs	r2, r2, #25
1005c4ae:	d140      	bne.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c4b0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005c4b2:	2a01      	cmp	r2, #1
1005c4b4:	d106      	bne.n	1005c4c4 <llc_scan_set_scanning_params+0xb4>
1005c4b6:	4a23      	ldr	r2, [pc, #140]	@ (1005c544 <__arm_cp.6_0>)
1005c4b8:	4291      	cmp	r1, r2
1005c4ba:	d83a      	bhi.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c4bc:	2201      	movs	r2, #1
1005c4be:	0392      	lsls	r2, r2, #14
1005c4c0:	4294      	cmp	r4, r2
1005c4c2:	d836      	bhi.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c4c4:	0c8a      	lsrs	r2, r1, #18
1005c4c6:	d034      	beq.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c4c8:	2c04      	cmp	r4, #4
1005c4ca:	d332      	bcc.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c4cc:	0c09      	lsrs	r1, r1, #16
1005c4ce:	42a1      	cmp	r1, r4
1005c4d0:	d32f      	bcc.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c4d2:	1c7f      	adds	r7, r7, #1
1005c4d4:	2600      	movs	r6, #0
1005c4d6:	9808      	ldr	r0, [sp, #32]
1005c4d8:	4287      	cmp	r7, r0
1005c4da:	d3c1      	bcc.n	1005c460 <llc_scan_set_scanning_params+0x50>
1005c4dc:	9d05      	ldr	r5, [sp, #20]
1005c4de:	9902      	ldr	r1, [sp, #8]
1005c4e0:	718d      	strb	r5, [r1, #6]
1005c4e2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005c4e4:	7008      	strb	r0, [r1, #0]
1005c4e6:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005c4e8:	70c8      	strb	r0, [r1, #3]
1005c4ea:	2000      	movs	r0, #0
1005c4ec:	9f03      	ldr	r7, [sp, #12]
1005c4ee:	66f8      	str	r0, [r7, #108]	@ 0x6c
1005c4f0:	6738      	str	r0, [r7, #112]	@ 0x70
1005c4f2:	9901      	ldr	r1, [sp, #4]
1005c4f4:	2900      	cmp	r1, #0
1005c4f6:	4601      	mov	r1, r0
1005c4f8:	9c06      	ldr	r4, [sp, #24]
1005c4fa:	9e04      	ldr	r6, [sp, #16]
1005c4fc:	d009      	beq.n	1005c512 <llc_scan_set_scanning_params+0x102>
1005c4fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1005c500:	8899      	ldrh	r1, [r3, #4]
1005c502:	885a      	ldrh	r2, [r3, #2]
1005c504:	781b      	ldrb	r3, [r3, #0]
1005c506:	7033      	strb	r3, [r6, #0]
1005c508:	0212      	lsls	r2, r2, #8
1005c50a:	67fa      	str	r2, [r7, #124]	@ 0x7c
1005c50c:	0209      	lsls	r1, r1, #8
1005c50e:	6061      	str	r1, [r4, #4]
1005c510:	2101      	movs	r1, #1
1005c512:	076a      	lsls	r2, r5, #29
1005c514:	d50d      	bpl.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c516:	9d07      	ldr	r5, [sp, #28]
1005c518:	434d      	muls	r5, r1
1005c51a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
1005c51c:	1959      	adds	r1, r3, r5
1005c51e:	888a      	ldrh	r2, [r1, #4]
1005c520:	8849      	ldrh	r1, [r1, #2]
1005c522:	5d5b      	ldrb	r3, [r3, r5]
1005c524:	7073      	strb	r3, [r6, #1]
1005c526:	0209      	lsls	r1, r1, #8
1005c528:	6021      	str	r1, [r4, #0]
1005c52a:	0211      	lsls	r1, r2, #8
1005c52c:	60a1      	str	r1, [r4, #8]
1005c52e:	e000      	b.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c530:	200c      	movs	r0, #12
1005c532:	b00f      	add	sp, #60	@ 0x3c
1005c534:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005c536:	2800      	cmp	r0, #0
1005c538:	d101      	bne.n	1005c53e <llc_scan_set_scanning_params+0x12e>
1005c53a:	2011      	movs	r0, #17
1005c53c:	e7f9      	b.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c53e:	2012      	movs	r0, #18
1005c540:	e7f7      	b.n	1005c532 <llc_scan_set_scanning_params+0x122>
1005c542:	46c0      	nop			@ (mov r8, r8)

1005c544 <__arm_cp.6_0>:
1005c544:	4000ffff 	.word	0x4000ffff

1005c548 <llc_scan_any_scan_enabled_and_use_of_filter_accept_list>:
1005c548:	b5b0      	push	{r4, r5, r7, lr}
1005c54a:	4605      	mov	r5, r0
1005c54c:	2400      	movs	r4, #0
1005c54e:	f7f1 ff96 	bl	1004e47e <scan_csr_ucfg>
1005c552:	2801      	cmp	r0, #1
1005c554:	d10d      	bne.n	1005c572 <llc_scan_any_scan_enabled_and_use_of_filter_accept_list+0x2a>
1005c556:	f7ff f8ad 	bl	1005b6b4 <llc_scan_get_cntxt_p>
1005c55a:	21eb      	movs	r1, #235	@ 0xeb
1005c55c:	5c41      	ldrb	r1, [r0, r1]
1005c55e:	07c9      	lsls	r1, r1, #31
1005c560:	d007      	beq.n	1005c572 <llc_scan_any_scan_enabled_and_use_of_filter_accept_list+0x2a>
1005c562:	2d00      	cmp	r5, #0
1005c564:	d004      	beq.n	1005c570 <llc_scan_any_scan_enabled_and_use_of_filter_accept_list+0x28>
1005c566:	30ea      	adds	r0, #234	@ 0xea
1005c568:	7800      	ldrb	r0, [r0, #0]
1005c56a:	2401      	movs	r4, #1
1005c56c:	4004      	ands	r4, r0
1005c56e:	e000      	b.n	1005c572 <llc_scan_any_scan_enabled_and_use_of_filter_accept_list+0x2a>
1005c570:	2401      	movs	r4, #1
1005c572:	4620      	mov	r0, r4
1005c574:	bdb0      	pop	{r4, r5, r7, pc}

1005c576 <llc_scan_calculate_first_conn_anchor>:
1005c576:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005c578:	4613      	mov	r3, r2
1005c57a:	460d      	mov	r5, r1
1005c57c:	4604      	mov	r4, r0
1005c57e:	22ff      	movs	r2, #255	@ 0xff
1005c580:	4608      	mov	r0, r1
1005c582:	4619      	mov	r1, r3
1005c584:	f006 f97c 	bl	10062880 <LL_sched_find_best_anchor>
1005c588:	4606      	mov	r6, r0
1005c58a:	f7e8 faff 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1005c58e:	1a32      	subs	r2, r6, r0
1005c590:	17d1      	asrs	r1, r2, #31
1005c592:	1853      	adds	r3, r2, r1
1005c594:	404b      	eors	r3, r1
1005c596:	1959      	adds	r1, r3, r5
1005c598:	1e4b      	subs	r3, r1, #1
1005c59a:	2100      	movs	r1, #0
1005c59c:	1b49      	subs	r1, r1, r5
1005c59e:	185f      	adds	r7, r3, r1
1005c5a0:	d5fc      	bpl.n	1005c59c <llc_scan_calculate_first_conn_anchor+0x26>
1005c5a2:	2a00      	cmp	r2, #0
1005c5a4:	d403      	bmi.n	1005c5ae <llc_scan_calculate_first_conn_anchor+0x38>
1005c5a6:	006a      	lsls	r2, r5, #1
1005c5a8:	18b2      	adds	r2, r6, r2
1005c5aa:	1851      	adds	r1, r2, r1
1005c5ac:	e001      	b.n	1005c5b2 <llc_scan_calculate_first_conn_anchor+0x3c>
1005c5ae:	1b72      	subs	r2, r6, r5
1005c5b0:	1a51      	subs	r1, r2, r1
1005c5b2:	4281      	cmp	r1, r0
1005c5b4:	d100      	bne.n	1005c5b8 <llc_scan_calculate_first_conn_anchor+0x42>
1005c5b6:	1949      	adds	r1, r1, r5
1005c5b8:	6021      	str	r1, [r4, #0]
1005c5ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005c5bc <llc_scan_enable_extended>:
1005c5bc:	b570      	push	{r4, r5, r6, lr}
1005c5be:	4604      	mov	r4, r0
1005c5c0:	20f0      	movs	r0, #240	@ 0xf0
1005c5c2:	5c20      	ldrb	r0, [r4, r0]
1005c5c4:	0740      	lsls	r0, r0, #29
1005c5c6:	d50f      	bpl.n	1005c5e8 <llc_scan_enable_extended+0x2c>
1005c5c8:	4626      	mov	r6, r4
1005c5ca:	36ad      	adds	r6, #173	@ 0xad
1005c5cc:	2501      	movs	r5, #1
1005c5ce:	4620      	mov	r0, r4
1005c5d0:	4629      	mov	r1, r5
1005c5d2:	f7ff fe69 	bl	1005c2a8 <llc_scan_set_blue_packets>
1005c5d6:	7831      	ldrb	r1, [r6, #0]
1005c5d8:	68e0      	ldr	r0, [r4, #12]
1005c5da:	2200      	movs	r2, #0
1005c5dc:	f7ff fe9a 	bl	1005c314 <llc_scan_set_blue_sm>
1005c5e0:	4620      	mov	r0, r4
1005c5e2:	4629      	mov	r1, r5
1005c5e4:	f7ff feca 	bl	1005c37c <llc_scan_set_scheduler_params>
1005c5e8:	2102      	movs	r1, #2
1005c5ea:	4620      	mov	r0, r4
1005c5ec:	f7ff fe5c 	bl	1005c2a8 <llc_scan_set_blue_packets>
1005c5f0:	bd70      	pop	{r4, r5, r6, pc}
	...

1005c5f4 <llc_scan_push_ext_adv_report>:
1005c5f4:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c5f6:	b095      	sub	sp, #84	@ 0x54
1005c5f8:	4605      	mov	r5, r0
1005c5fa:	0848      	lsrs	r0, r1, #1
1005c5fc:	2872      	cmp	r0, #114	@ 0x72
1005c5fe:	d85f      	bhi.n	1005c6c0 <llc_scan_push_ext_adv_report+0xcc>
1005c600:	460e      	mov	r6, r1
1005c602:	9214      	str	r2, [sp, #80]	@ 0x50
1005c604:	6928      	ldr	r0, [r5, #16]
1005c606:	900c      	str	r0, [sp, #48]	@ 0x30
1005c608:	482e      	ldr	r0, [pc, #184]	@ (1005c6c4 <__arm_cp.13_0>)
1005c60a:	6800      	ldr	r0, [r0, #0]
1005c60c:	212c      	movs	r1, #44	@ 0x2c
1005c60e:	5c40      	ldrb	r0, [r0, r1]
1005c610:	07c0      	lsls	r0, r0, #31
1005c612:	0ec1      	lsrs	r1, r0, #27
1005c614:	7a28      	ldrb	r0, [r5, #8]
1005c616:	9013      	str	r0, [sp, #76]	@ 0x4c
1005c618:	8aa8      	ldrh	r0, [r5, #20]
1005c61a:	9011      	str	r0, [sp, #68]	@ 0x44
1005c61c:	7e68      	ldrb	r0, [r5, #25]
1005c61e:	900d      	str	r0, [sp, #52]	@ 0x34
1005c620:	7ea8      	ldrb	r0, [r5, #26]
1005c622:	900e      	str	r0, [sp, #56]	@ 0x38
1005c624:	7f28      	ldrb	r0, [r5, #28]
1005c626:	9010      	str	r0, [sp, #64]	@ 0x40
1005c628:	7ee8      	ldrb	r0, [r5, #27]
1005c62a:	900f      	str	r0, [sp, #60]	@ 0x3c
1005c62c:	7e28      	ldrb	r0, [r5, #24]
1005c62e:	900b      	str	r0, [sp, #44]	@ 0x2c
1005c630:	7828      	ldrb	r0, [r5, #0]
1005c632:	9012      	str	r0, [sp, #72]	@ 0x48
1005c634:	d102      	bne.n	1005c63c <llc_scan_push_ext_adv_report+0x48>
1005c636:	930a      	str	r3, [sp, #40]	@ 0x28
1005c638:	220f      	movs	r2, #15
1005c63a:	e00b      	b.n	1005c654 <llc_scan_push_ext_adv_report+0x60>
1005c63c:	4822      	ldr	r0, [pc, #136]	@ (1005c6c8 <__arm_cp.13_1>)
1005c63e:	6800      	ldr	r0, [r0, #0]
1005c640:	223d      	movs	r2, #61	@ 0x3d
1005c642:	5c82      	ldrb	r2, [r0, r2]
1005c644:	0692      	lsls	r2, r2, #26
1005c646:	d53b      	bpl.n	1005c6c0 <llc_scan_push_ext_adv_report+0xcc>
1005c648:	303d      	adds	r0, #61	@ 0x3d
1005c64a:	7a80      	ldrb	r0, [r0, #10]
1005c64c:	06c0      	lsls	r0, r0, #27
1005c64e:	d537      	bpl.n	1005c6c0 <llc_scan_push_ext_adv_report+0xcc>
1005c650:	930a      	str	r3, [sp, #40]	@ 0x28
1005c652:	2201      	movs	r2, #1
1005c654:	204e      	movs	r0, #78	@ 0x4e
1005c656:	43c0      	mvns	r0, r0
1005c658:	4041      	eors	r1, r0
1005c65a:	1e70      	subs	r0, r6, #1
1005c65c:	2303      	movs	r3, #3
1005c65e:	4303      	orrs	r3, r0
1005c660:	3325      	adds	r3, #37	@ 0x25
1005c662:	0898      	lsrs	r0, r3, #2
1005c664:	b283      	uxth	r3, r0
1005c666:	4819      	ldr	r0, [pc, #100]	@ (1005c6cc <__arm_cp.13_2>)
1005c668:	6800      	ldr	r0, [r0, #0]
1005c66a:	6940      	ldr	r0, [r0, #20]
1005c66c:	b2cc      	uxtb	r4, r1
1005c66e:	4621      	mov	r1, r4
1005c670:	f7f3 fe46 	bl	10050300 <aci_event_fifo_push_header>
1005c674:	4607      	mov	r7, r0
1005c676:	2800      	cmp	r0, #0
1005c678:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005c67a:	9814      	ldr	r0, [sp, #80]	@ 0x50
1005c67c:	d020      	beq.n	1005c6c0 <llc_scan_push_ext_adv_report+0xcc>
1005c67e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005c680:	1810      	adds	r0, r2, r0
1005c682:	1c6b      	adds	r3, r5, #1
1005c684:	3509      	adds	r5, #9
1005c686:	9608      	str	r6, [sp, #32]
1005c688:	9009      	str	r0, [sp, #36]	@ 0x24
1005c68a:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005c68c:	b240      	sxtb	r0, r0
1005c68e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1005c690:	b252      	sxtb	r2, r2
1005c692:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
1005c694:	9600      	str	r6, [sp, #0]
1005c696:	9e0f      	ldr	r6, [sp, #60]	@ 0x3c
1005c698:	9601      	str	r6, [sp, #4]
1005c69a:	9e10      	ldr	r6, [sp, #64]	@ 0x40
1005c69c:	9602      	str	r6, [sp, #8]
1005c69e:	9203      	str	r2, [sp, #12]
1005c6a0:	9004      	str	r0, [sp, #16]
1005c6a2:	9811      	ldr	r0, [sp, #68]	@ 0x44
1005c6a4:	9005      	str	r0, [sp, #20]
1005c6a6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
1005c6a8:	9006      	str	r0, [sp, #24]
1005c6aa:	9507      	str	r5, [sp, #28]
1005c6ac:	1d38      	adds	r0, r7, #4
1005c6ae:	9a12      	ldr	r2, [sp, #72]	@ 0x48
1005c6b0:	f7f4 fc54 	bl	10050f5c <hci_le_extended_advertising_report_event_copy>
1005c6b4:	4806      	ldr	r0, [pc, #24]	@ (1005c6d0 <__arm_cp.13_3>)
1005c6b6:	6078      	str	r0, [r7, #4]
1005c6b8:	4620      	mov	r0, r4
1005c6ba:	4639      	mov	r1, r7
1005c6bc:	f7f3 febd 	bl	1005043a <aci_event_fifo_push>
1005c6c0:	b015      	add	sp, #84	@ 0x54
1005c6c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005c6c4 <__arm_cp.13_0>:
1005c6c4:	2000083c 	.word	0x2000083c

1005c6c8 <__arm_cp.13_1>:
1005c6c8:	20000894 	.word	0x20000894

1005c6cc <__arm_cp.13_2>:
1005c6cc:	20000840 	.word	0x20000840

1005c6d0 <__arm_cp.13_3>:
1005c6d0:	100669a5 	.word	0x100669a5

1005c6d4 <llc_scan_reserve_taskslots>:
1005c6d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005c6d6:	460c      	mov	r4, r1
1005c6d8:	4605      	mov	r5, r0
1005c6da:	20f0      	movs	r0, #240	@ 0xf0
1005c6dc:	5c08      	ldrb	r0, [r1, r0]
1005c6de:	07c0      	lsls	r0, r0, #31
1005c6e0:	d101      	bne.n	1005c6e6 <llc_scan_reserve_taskslots+0x12>
1005c6e2:	20ff      	movs	r0, #255	@ 0xff
1005c6e4:	e003      	b.n	1005c6ee <llc_scan_reserve_taskslots+0x1a>
1005c6e6:	f006 f9b7 	bl	10062a58 <LL_sched_reserve_taskslot>
1005c6ea:	28ff      	cmp	r0, #255	@ 0xff
1005c6ec:	d03b      	beq.n	1005c766 <llc_scan_reserve_taskslots+0x92>
1005c6ee:	4626      	mov	r6, r4
1005c6f0:	36ac      	adds	r6, #172	@ 0xac
1005c6f2:	7030      	strb	r0, [r6, #0]
1005c6f4:	7aa8      	ldrb	r0, [r5, #10]
1005c6f6:	2800      	cmp	r0, #0
1005c6f8:	d001      	beq.n	1005c6fe <llc_scan_reserve_taskslots+0x2a>
1005c6fa:	2000      	movs	r0, #0
1005c6fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005c6fe:	4627      	mov	r7, r4
1005c700:	37ec      	adds	r7, #236	@ 0xec
1005c702:	7938      	ldrb	r0, [r7, #4]
1005c704:	0740      	lsls	r0, r0, #29
1005c706:	d401      	bmi.n	1005c70c <llc_scan_reserve_taskslots+0x38>
1005c708:	20ff      	movs	r0, #255	@ 0xff
1005c70a:	e003      	b.n	1005c714 <llc_scan_reserve_taskslots+0x40>
1005c70c:	f006 f9a4 	bl	10062a58 <LL_sched_reserve_taskslot>
1005c710:	28ff      	cmp	r0, #255	@ 0xff
1005c712:	d018      	beq.n	1005c746 <llc_scan_reserve_taskslots+0x72>
1005c714:	7070      	strb	r0, [r6, #1]
1005c716:	3410      	adds	r4, #16
1005c718:	2500      	movs	r5, #0
1005c71a:	9500      	str	r5, [sp, #0]
1005c71c:	7838      	ldrb	r0, [r7, #0]
1005c71e:	4285      	cmp	r5, r0
1005c720:	d20b      	bcs.n	1005c73a <llc_scan_reserve_taskslots+0x66>
1005c722:	f006 f999 	bl	10062a58 <LL_sched_reserve_taskslot>
1005c726:	28ff      	cmp	r0, #255	@ 0xff
1005c728:	d009      	beq.n	1005c73e <llc_scan_reserve_taskslots+0x6a>
1005c72a:	cc02      	ldmia	r4!, {r1}
1005c72c:	222a      	movs	r2, #42	@ 0x2a
1005c72e:	5488      	strb	r0, [r1, r2]
1005c730:	2103      	movs	r1, #3
1005c732:	f006 f97d 	bl	10062a30 <LL_sched_set_per_event_type>
1005c736:	1c6d      	adds	r5, r5, #1
1005c738:	e7f0      	b.n	1005c71c <llc_scan_reserve_taskslots+0x48>
1005c73a:	9800      	ldr	r0, [sp, #0]
1005c73c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005c73e:	0628      	lsls	r0, r5, #24
1005c740:	9800      	ldr	r0, [sp, #0]
1005c742:	d004      	beq.n	1005c74e <llc_scan_reserve_taskslots+0x7a>
1005c744:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005c746:	7830      	ldrb	r0, [r6, #0]
1005c748:	28ff      	cmp	r0, #255	@ 0xff
1005c74a:	d10a      	bne.n	1005c762 <llc_scan_reserve_taskslots+0x8e>
1005c74c:	e00b      	b.n	1005c766 <llc_scan_reserve_taskslots+0x92>
1005c74e:	7938      	ldrb	r0, [r7, #4]
1005c750:	07c1      	lsls	r1, r0, #31
1005c752:	d003      	beq.n	1005c75c <llc_scan_reserve_taskslots+0x88>
1005c754:	7830      	ldrb	r0, [r6, #0]
1005c756:	f006 f9a1 	bl	10062a9c <LL_sched_release_taskslot>
1005c75a:	7938      	ldrb	r0, [r7, #4]
1005c75c:	0740      	lsls	r0, r0, #29
1005c75e:	d502      	bpl.n	1005c766 <llc_scan_reserve_taskslots+0x92>
1005c760:	7870      	ldrb	r0, [r6, #1]
1005c762:	f006 f99b 	bl	10062a9c <LL_sched_release_taskslot>
1005c766:	2007      	movs	r0, #7
1005c768:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005c76a <llc_scan_set_conn_params>:
1005c76a:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c76c:	b087      	sub	sp, #28
1005c76e:	461e      	mov	r6, r3
1005c770:	4605      	mov	r5, r0
1005c772:	9102      	str	r1, [sp, #8]
1005c774:	ac03      	add	r4, sp, #12
1005c776:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1005c778:	f7fe ff9c 	bl	1005b6b4 <llc_scan_get_cntxt_p>
1005c77c:	4604      	mov	r4, r0
1005c77e:	20b0      	movs	r0, #176	@ 0xb0
1005c780:	5c20      	ldrb	r0, [r4, r0]
1005c782:	f7f9 fc43 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005c786:	9000      	str	r0, [sp, #0]
1005c788:	0c30      	lsrs	r0, r6, #16
1005c78a:	9001      	str	r0, [sp, #4]
1005c78c:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
1005c78e:	2e02      	cmp	r6, #2
1005c790:	d00d      	beq.n	1005c7ae <llc_scan_set_conn_params+0x44>
1005c792:	08b0      	lsrs	r0, r6, #2
1005c794:	0081      	lsls	r1, r0, #2
1005c796:	1861      	adds	r1, r4, r1
1005c798:	0c2a      	lsrs	r2, r5, #16
1005c79a:	0212      	lsls	r2, r2, #8
1005c79c:	2384      	movs	r3, #132	@ 0x84
1005c79e:	50ca      	str	r2, [r1, r3]
1005c7a0:	042a      	lsls	r2, r5, #16
1005c7a2:	0a12      	lsrs	r2, r2, #8
1005c7a4:	67ca      	str	r2, [r1, #124]	@ 0x7c
1005c7a6:	1820      	adds	r0, r4, r0
1005c7a8:	21aa      	movs	r1, #170	@ 0xaa
1005c7aa:	2201      	movs	r2, #1
1005c7ac:	5442      	strb	r2, [r0, r1]
1005c7ae:	0870      	lsrs	r0, r6, #1
1005c7b0:	0087      	lsls	r7, r0, #2
1005c7b2:	19e5      	adds	r5, r4, r7
1005c7b4:	34eb      	adds	r4, #235	@ 0xeb
1005c7b6:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
1005c7b8:	1d00      	adds	r0, r0, #4
1005c7ba:	a903      	add	r1, sp, #12
1005c7bc:	f000 f818 	bl	1005c7f0 <llc_scan_fill_creq_pdu>
1005c7c0:	9800      	ldr	r0, [sp, #0]
1005c7c2:	19c7      	adds	r7, r0, r7
1005c7c4:	4630      	mov	r0, r6
1005c7c6:	f7f9 fdd5 	bl	10056374 <llc_conn_ce_length_min_needed>
1005c7ca:	9901      	ldr	r1, [sp, #4]
1005c7cc:	4288      	cmp	r0, r1
1005c7ce:	d800      	bhi.n	1005c7d2 <llc_scan_set_conn_params+0x68>
1005c7d0:	4608      	mov	r0, r1
1005c7d2:	0202      	lsls	r2, r0, #8
1005c7d4:	65ba      	str	r2, [r7, #88]	@ 0x58
1005c7d6:	6be8      	ldr	r0, [r5, #60]	@ 0x3c
1005c7d8:	9902      	ldr	r1, [sp, #8]
1005c7da:	0409      	lsls	r1, r1, #16
1005c7dc:	09c9      	lsrs	r1, r1, #7
1005c7de:	f7ff feca 	bl	1005c576 <llc_scan_calculate_first_conn_anchor>
1005c7e2:	7820      	ldrb	r0, [r4, #0]
1005c7e4:	2104      	movs	r1, #4
1005c7e6:	4301      	orrs	r1, r0
1005c7e8:	7021      	strb	r1, [r4, #0]
1005c7ea:	b007      	add	sp, #28
1005c7ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

1005c7f0 <llc_scan_fill_creq_pdu>:
1005c7f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005c7f2:	460e      	mov	r6, r1
1005c7f4:	4604      	mov	r4, r0
1005c7f6:	f005 fabb 	bl	10061d70 <llc_generate_access_address>
1005c7fa:	73a0      	strb	r0, [r4, #14]
1005c7fc:	0a01      	lsrs	r1, r0, #8
1005c7fe:	73e1      	strb	r1, [r4, #15]
1005c800:	0c01      	lsrs	r1, r0, #16
1005c802:	7421      	strb	r1, [r4, #16]
1005c804:	0e00      	lsrs	r0, r0, #24
1005c806:	7460      	strb	r0, [r4, #17]
1005c808:	2501      	movs	r5, #1
1005c80a:	491c      	ldr	r1, [pc, #112]	@ (1005c87c <__arm_cp.18_0>)
1005c80c:	4628      	mov	r0, r5
1005c80e:	4788      	blx	r1
1005c810:	4607      	mov	r7, r0
1005c812:	4628      	mov	r0, r5
1005c814:	4919      	ldr	r1, [pc, #100]	@ (1005c87c <__arm_cp.18_0>)
1005c816:	4788      	blx	r1
1005c818:	74a7      	strb	r7, [r4, #18]
1005c81a:	0a39      	lsrs	r1, r7, #8
1005c81c:	74e1      	strb	r1, [r4, #19]
1005c81e:	7520      	strb	r0, [r4, #20]
1005c820:	75a5      	strb	r5, [r4, #22]
1005c822:	2003      	movs	r0, #3
1005c824:	7560      	strb	r0, [r4, #21]
1005c826:	2000      	movs	r0, #0
1005c828:	75e0      	strb	r0, [r4, #23]
1005c82a:	88b0      	ldrh	r0, [r6, #4]
1005c82c:	7620      	strb	r0, [r4, #24]
1005c82e:	0a00      	lsrs	r0, r0, #8
1005c830:	7660      	strb	r0, [r4, #25]
1005c832:	8930      	ldrh	r0, [r6, #8]
1005c834:	76a0      	strb	r0, [r4, #26]
1005c836:	0a00      	lsrs	r0, r0, #8
1005c838:	76e0      	strb	r0, [r4, #27]
1005c83a:	8970      	ldrh	r0, [r6, #10]
1005c83c:	7720      	strb	r0, [r4, #28]
1005c83e:	0a00      	lsrs	r0, r0, #8
1005c840:	7760      	strb	r0, [r4, #29]
1005c842:	480f      	ldr	r0, [pc, #60]	@ (1005c880 <__arm_cp.18_1>)
1005c844:	6800      	ldr	r0, [r0, #0]
1005c846:	219c      	movs	r1, #156	@ 0x9c
1005c848:	5841      	ldr	r1, [r0, r1]
1005c84a:	3148      	adds	r1, #72	@ 0x48
1005c84c:	4620      	mov	r0, r4
1005c84e:	301e      	adds	r0, #30
1005c850:	2205      	movs	r2, #5
1005c852:	f7e8 f8a7 	bl	100449a4 <BLEPLAT_MemCpy>
1005c856:	4628      	mov	r0, r5
1005c858:	4908      	ldr	r1, [pc, #32]	@ (1005c87c <__arm_cp.18_0>)
1005c85a:	4788      	blx	r1
1005c85c:	250f      	movs	r5, #15
1005c85e:	4005      	ands	r5, r0
1005c860:	2d0b      	cmp	r5, #11
1005c862:	d903      	bls.n	1005c86c <llc_scan_fill_creq_pdu+0x7c>
1005c864:	0640      	lsls	r0, r0, #25
1005c866:	0f40      	lsrs	r0, r0, #29
1005c868:	182d      	adds	r5, r5, r0
1005c86a:	3d0c      	subs	r5, #12
1005c86c:	f005 fafe 	bl	10061e6c <LL_link_get_own_sca_bitfield>
1005c870:	0140      	lsls	r0, r0, #5
1005c872:	1828      	adds	r0, r5, r0
1005c874:	1d40      	adds	r0, r0, #5
1005c876:	2123      	movs	r1, #35	@ 0x23
1005c878:	5460      	strb	r0, [r4, r1]
1005c87a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005c87c <__arm_cp.18_0>:
1005c87c:	10065825 	.word	0x10065825

1005c880 <__arm_cp.18_1>:
1005c880:	20000894 	.word	0x20000894

1005c884 <llc_scan_stop>:
1005c884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005c886:	4604      	mov	r4, r0
1005c888:	f7fe ff14 	bl	1005b6b4 <llc_scan_get_cntxt_p>
1005c88c:	4605      	mov	r5, r0
1005c88e:	4815      	ldr	r0, [pc, #84]	@ (1005c8e4 <__arm_cp.20_0>)
1005c890:	6800      	ldr	r0, [r0, #0]
1005c892:	6807      	ldr	r7, [r0, #0]
1005c894:	2c00      	cmp	r4, #0
1005c896:	d002      	beq.n	1005c89e <llc_scan_stop+0x1a>
1005c898:	4628      	mov	r0, r5
1005c89a:	f7ff f824 	bl	1005b8e6 <llc_scan_set_cancel_slots_request>
1005c89e:	9500      	str	r5, [sp, #0]
1005c8a0:	2600      	movs	r6, #0
1005c8a2:	2501      	movs	r5, #1
1005c8a4:	f7e8 f972 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1005c8a8:	1a39      	subs	r1, r7, r0
1005c8aa:	d40a      	bmi.n	1005c8c2 <llc_scan_stop+0x3e>
1005c8ac:	07e8      	lsls	r0, r5, #31
1005c8ae:	4630      	mov	r0, r6
1005c8b0:	d002      	beq.n	1005c8b8 <llc_scan_stop+0x34>
1005c8b2:	292a      	cmp	r1, #42	@ 0x2a
1005c8b4:	d20c      	bcs.n	1005c8d0 <llc_scan_stop+0x4c>
1005c8b6:	2001      	movs	r0, #1
1005c8b8:	2601      	movs	r6, #1
1005c8ba:	2500      	movs	r5, #0
1005c8bc:	2800      	cmp	r0, #0
1005c8be:	d1f1      	bne.n	1005c8a4 <llc_scan_stop+0x20>
1005c8c0:	e00e      	b.n	1005c8e0 <llc_scan_stop+0x5c>
1005c8c2:	f7e9 f974 	bl	10045bae <BLEPLAT_CNTR_TxRxSkip>
1005c8c6:	20f3      	movs	r0, #243	@ 0xf3
1005c8c8:	2601      	movs	r6, #1
1005c8ca:	9900      	ldr	r1, [sp, #0]
1005c8cc:	540e      	strb	r6, [r1, r0]
1005c8ce:	e007      	b.n	1005c8e0 <llc_scan_stop+0x5c>
1005c8d0:	f7e8 f99d 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
1005c8d4:	2600      	movs	r6, #0
1005c8d6:	2c00      	cmp	r4, #0
1005c8d8:	d002      	beq.n	1005c8e0 <llc_scan_stop+0x5c>
1005c8da:	20ff      	movs	r0, #255	@ 0xff
1005c8dc:	f005 fde0 	bl	100624a0 <LL_sched_engine>
1005c8e0:	4630      	mov	r0, r6
1005c8e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005c8e4 <__arm_cp.20_0>:
1005c8e4:	20000898 	.word	0x20000898

1005c8e8 <llc_scan_disable>:
1005c8e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005c8ea:	4604      	mov	r4, r0
1005c8ec:	f3ef 8010 	mrs	r0, PRIMASK
1005c8f0:	b672      	cpsid	i
1005c8f2:	4625      	mov	r5, r4
1005c8f4:	35ec      	adds	r5, #236	@ 0xec
1005c8f6:	4814      	ldr	r0, [pc, #80]	@ (1005c948 <__arm_cp.21_0>)
1005c8f8:	6800      	ldr	r0, [r0, #0]
1005c8fa:	7bc0      	ldrb	r0, [r0, #15]
1005c8fc:	2803      	cmp	r0, #3
1005c8fe:	d103      	bne.n	1005c908 <llc_scan_disable+0x20>
1005c900:	2001      	movs	r0, #1
1005c902:	f7ff ffbf 	bl	1005c884 <llc_scan_stop>
1005c906:	e01a      	b.n	1005c93e <llc_scan_disable+0x56>
1005c908:	4626      	mov	r6, r4
1005c90a:	36ac      	adds	r6, #172	@ 0xac
1005c90c:	7830      	ldrb	r0, [r6, #0]
1005c90e:	f006 f8c5 	bl	10062a9c <LL_sched_release_taskslot>
1005c912:	7870      	ldrb	r0, [r6, #1]
1005c914:	f006 f8c2 	bl	10062a9c <LL_sched_release_taskslot>
1005c918:	2600      	movs	r6, #0
1005c91a:	2710      	movs	r7, #16
1005c91c:	7828      	ldrb	r0, [r5, #0]
1005c91e:	4286      	cmp	r6, r0
1005c920:	d20a      	bcs.n	1005c938 <llc_scan_disable+0x50>
1005c922:	59e0      	ldr	r0, [r4, r7]
1005c924:	212a      	movs	r1, #42	@ 0x2a
1005c926:	5c40      	ldrb	r0, [r0, r1]
1005c928:	f006 f8b8 	bl	10062a9c <LL_sched_release_taskslot>
1005c92c:	59e0      	ldr	r0, [r4, r7]
1005c92e:	f00d fbb5 	bl	1006a09c <llc_scan_aux_cancel_slot>
1005c932:	1d3f      	adds	r7, r7, #4
1005c934:	1c76      	adds	r6, r6, #1
1005c936:	e7f1      	b.n	1005c91c <llc_scan_disable+0x34>
1005c938:	4620      	mov	r0, r4
1005c93a:	f00d fbd5 	bl	1006a0e8 <llc_scan_cancel_slot>
1005c93e:	b662      	cpsie	i
1005c940:	79e8      	ldrb	r0, [r5, #7]
1005c942:	2800      	cmp	r0, #0
1005c944:	d1fc      	bne.n	1005c940 <llc_scan_disable+0x58>
1005c946:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005c948 <__arm_cp.21_0>:
1005c948:	20000898 	.word	0x20000898

1005c94c <llc_subrate_init_acceptable>:
1005c94c:	2100      	movs	r1, #0
1005c94e:	4a03      	ldr	r2, [pc, #12]	@ (1005c95c <__arm_cp.4_0>)
1005c950:	62c1      	str	r1, [r0, #44]	@ 0x2c
1005c952:	6302      	str	r2, [r0, #48]	@ 0x30
1005c954:	2119      	movs	r1, #25
1005c956:	01c9      	lsls	r1, r1, #7
1005c958:	8681      	strh	r1, [r0, #52]	@ 0x34
1005c95a:	4770      	bx	lr

1005c95c <__arm_cp.4_0>:
1005c95c:	00010001 	.word	0x00010001

1005c960 <llc_subrate_init_acceptable_per>:
1005c960:	b580      	push	{r7, lr}
1005c962:	4603      	mov	r3, r0
1005c964:	2049      	movs	r0, #73	@ 0x49
1005c966:	0080      	lsls	r0, r0, #2
1005c968:	1808      	adds	r0, r1, r0
1005c96a:	332c      	adds	r3, #44	@ 0x2c
1005c96c:	220a      	movs	r2, #10
1005c96e:	4619      	mov	r1, r3
1005c970:	f7e8 f818 	bl	100449a4 <BLEPLAT_MemCpy>
1005c974:	bd80      	pop	{r7, pc}

1005c976 <llc_subrate_reset_params>:
1005c976:	2147      	movs	r1, #71	@ 0x47
1005c978:	0089      	lsls	r1, r1, #2
1005c97a:	2200      	movs	r2, #0
1005c97c:	5042      	str	r2, [r0, r1]
1005c97e:	1840      	adds	r0, r0, r1
1005c980:	2101      	movs	r1, #1
1005c982:	0409      	lsls	r1, r1, #16
1005c984:	6041      	str	r1, [r0, #4]
1005c986:	4770      	bx	lr

1005c988 <llc_subrate_get_active_sr_req_proc_ucfg_weak>:
1005c988:	2000      	movs	r0, #0
1005c98a:	4770      	bx	lr

1005c98c <llc_subrate_new_sr_base_event_ucfg_weak>:
1005c98c:	4770      	bx	lr

1005c98e <llc_subrate_update_cont_counter_ucfg_weak>:
1005c98e:	4770      	bx	lr

1005c990 <llc_subrate_offline_processing_ucfg_weak>:
1005c990:	2000      	movs	r0, #0
1005c992:	4770      	bx	lr

1005c994 <llc_calculate_window_widening>:
1005c994:	b580      	push	{r7, lr}
1005c996:	0740      	lsls	r0, r0, #29
1005c998:	0f00      	lsrs	r0, r0, #28
1005c99a:	4a02      	ldr	r2, [pc, #8]	@ (1005c9a4 <__arm_cp.0_0>)
1005c99c:	5a10      	ldrh	r0, [r2, r0]
1005c99e:	f000 f80b 	bl	1005c9b8 <llc_calculate_window_widening_from_ppm>
1005c9a2:	bd80      	pop	{r7, pc}

1005c9a4 <__arm_cp.0_0>:
1005c9a4:	1006e9b0 	.word	0x1006e9b0

1005c9a8 <llc_convert_sca_to_ppm>:
1005c9a8:	0740      	lsls	r0, r0, #29
1005c9aa:	0f00      	lsrs	r0, r0, #28
1005c9ac:	4901      	ldr	r1, [pc, #4]	@ (1005c9b4 <__arm_cp.1_0>)
1005c9ae:	5a08      	ldrh	r0, [r1, r0]
1005c9b0:	4770      	bx	lr
1005c9b2:	46c0      	nop			@ (mov r8, r8)

1005c9b4 <__arm_cp.1_0>:
1005c9b4:	1006e9b0 	.word	0x1006e9b0

1005c9b8 <llc_calculate_window_widening_from_ppm>:
1005c9b8:	b5b0      	push	{r4, r5, r7, lr}
1005c9ba:	460c      	mov	r4, r1
1005c9bc:	4605      	mov	r5, r0
1005c9be:	f005 fa4f 	bl	10061e60 <LL_link_get_own_sca_ppm>
1005c9c2:	1940      	adds	r0, r0, r5
1005c9c4:	b282      	uxth	r2, r0
1005c9c6:	2500      	movs	r5, #0
1005c9c8:	4620      	mov	r0, r4
1005c9ca:	4629      	mov	r1, r5
1005c9cc:	462b      	mov	r3, r5
1005c9ce:	f7e3 fe35 	bl	1004063c <__aeabi_lmul>
1005c9d2:	22ff      	movs	r2, #255	@ 0xff
1005c9d4:	320e      	adds	r2, #14
1005c9d6:	462b      	mov	r3, r5
1005c9d8:	f7e3 fe30 	bl	1004063c <__aeabi_lmul>
1005c9dc:	0109      	lsls	r1, r1, #4
1005c9de:	0f00      	lsrs	r0, r0, #28
1005c9e0:	1840      	adds	r0, r0, r1
1005c9e2:	300e      	adds	r0, #14
1005c9e4:	bdb0      	pop	{r4, r5, r7, pc}

1005c9e6 <llc_config_blue_sm>:
1005c9e6:	b5f0      	push	{r4, r5, r6, r7, lr}
1005c9e8:	b08d      	sub	sp, #52	@ 0x34
1005c9ea:	9209      	str	r2, [sp, #36]	@ 0x24
1005c9ec:	900a      	str	r0, [sp, #40]	@ 0x28
1005c9ee:	2001      	movs	r0, #1
1005c9f0:	9e16      	ldr	r6, [sp, #88]	@ 0x58
1005c9f2:	4634      	mov	r4, r6
1005c9f4:	4004      	ands	r4, r0
1005c9f6:	2202      	movs	r2, #2
1005c9f8:	9403      	str	r4, [sp, #12]
1005c9fa:	2c00      	cmp	r4, #0
1005c9fc:	9008      	str	r0, [sp, #32]
1005c9fe:	d000      	beq.n	1005ca02 <llc_config_blue_sm+0x1c>
1005ca00:	4610      	mov	r0, r2
1005ca02:	4032      	ands	r2, r6
1005ca04:	9f03      	ldr	r7, [sp, #12]
1005ca06:	d000      	beq.n	1005ca0a <llc_config_blue_sm+0x24>
1005ca08:	4607      	mov	r7, r0
1005ca0a:	9201      	str	r2, [sp, #4]
1005ca0c:	0932      	lsrs	r2, r6, #4
1005ca0e:	9808      	ldr	r0, [sp, #32]
1005ca10:	4010      	ands	r0, r2
1005ca12:	9008      	str	r0, [sp, #32]
1005ca14:	08f5      	lsrs	r5, r6, #3
1005ca16:	0770      	lsls	r0, r6, #29
1005ca18:	0fc0      	lsrs	r0, r0, #31
1005ca1a:	900c      	str	r0, [sp, #48]	@ 0x30
1005ca1c:	07b0      	lsls	r0, r6, #30
1005ca1e:	9817      	ldr	r0, [sp, #92]	@ 0x5c
1005ca20:	900b      	str	r0, [sp, #44]	@ 0x2c
1005ca22:	d042      	beq.n	1005caaa <llc_config_blue_sm+0xc4>
1005ca24:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005ca26:	2800      	cmp	r0, #0
1005ca28:	d11f      	bne.n	1005ca6a <llc_config_blue_sm+0x84>
1005ca2a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
1005ca2c:	9006      	str	r0, [sp, #24]
1005ca2e:	9812      	ldr	r0, [sp, #72]	@ 0x48
1005ca30:	9005      	str	r0, [sp, #20]
1005ca32:	9300      	str	r3, [sp, #0]
1005ca34:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
1005ca36:	4620      	mov	r0, r4
1005ca38:	9207      	str	r2, [sp, #28]
1005ca3a:	9102      	str	r1, [sp, #8]
1005ca3c:	f7e9 fc76 	bl	1004632c <BLEPLAT_CNTR_SmInitTo0>
1005ca40:	4620      	mov	r0, r4
1005ca42:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005ca44:	f7e9 fc90 	bl	10046368 <BLEPLAT_CNTR_SmSetAccessAddr>
1005ca48:	4620      	mov	r0, r4
1005ca4a:	9900      	ldr	r1, [sp, #0]
1005ca4c:	f7e9 fccf 	bl	100463ee <BLEPLAT_CNTR_SmSetCrcInit>
1005ca50:	4620      	mov	r0, r4
1005ca52:	9902      	ldr	r1, [sp, #8]
1005ca54:	f7e9 fdfc 	bl	10046650 <BLEPLAT_CNTR_SmSetTxPwr>
1005ca58:	4620      	mov	r0, r4
1005ca5a:	9905      	ldr	r1, [sp, #20]
1005ca5c:	f7e9 fcee 	bl	1004643c <BLEPLAT_CNTR_SmSetHopIncr>
1005ca60:	4620      	mov	r0, r4
1005ca62:	9906      	ldr	r1, [sp, #24]
1005ca64:	f7e9 fc92 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
1005ca68:	9a07      	ldr	r2, [sp, #28]
1005ca6a:	0874      	lsrs	r4, r6, #1
1005ca6c:	9803      	ldr	r0, [sp, #12]
1005ca6e:	2800      	cmp	r0, #0
1005ca70:	d013      	beq.n	1005ca9a <llc_config_blue_sm+0xb4>
1005ca72:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005ca74:	2800      	cmp	r0, #0
1005ca76:	d104      	bne.n	1005ca82 <llc_config_blue_sm+0x9c>
1005ca78:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005ca7a:	9207      	str	r2, [sp, #28]
1005ca7c:	f7e9 fd46 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
1005ca80:	9a07      	ldr	r2, [sp, #28]
1005ca82:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005ca84:	2800      	cmp	r0, #0
1005ca86:	d108      	bne.n	1005ca9a <llc_config_blue_sm+0xb4>
1005ca88:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005ca8a:	9207      	str	r2, [sp, #28]
1005ca8c:	f7e9 fae2 	bl	10046054 <BLEPLAT_CNTR_SmCteOff>
1005ca90:	21ff      	movs	r1, #255	@ 0xff
1005ca92:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005ca94:	f7e9 fcbd 	bl	10046412 <BLEPLAT_CNTR_SmSetDataLength>
1005ca98:	9a07      	ldr	r2, [sp, #28]
1005ca9a:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005ca9c:	4220      	tst	r0, r4
1005ca9e:	d004      	beq.n	1005caaa <llc_config_blue_sm+0xc4>
1005caa0:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005caa2:	4614      	mov	r4, r2
1005caa4:	f7e9 fd9e 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
1005caa8:	4622      	mov	r2, r4
1005caaa:	9818      	ldr	r0, [sp, #96]	@ 0x60
1005caac:	9009      	str	r0, [sp, #36]	@ 0x24
1005caae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
1005cab0:	9814      	ldr	r0, [sp, #80]	@ 0x50
1005cab2:	9006      	str	r0, [sp, #24]
1005cab4:	2008      	movs	r0, #8
1005cab6:	4006      	ands	r6, r0
1005cab8:	9808      	ldr	r0, [sp, #32]
1005caba:	1980      	adds	r0, r0, r6
1005cabc:	9005      	str	r0, [sp, #20]
1005cabe:	4315      	orrs	r5, r2
1005cac0:	2001      	movs	r0, #1
1005cac2:	9002      	str	r0, [sp, #8]
1005cac4:	4005      	ands	r5, r0
1005cac6:	9507      	str	r5, [sp, #28]
1005cac8:	2500      	movs	r5, #0
1005caca:	9704      	str	r7, [sp, #16]
1005cacc:	42bd      	cmp	r5, r7
1005cace:	d07e      	beq.n	1005cbce <llc_config_blue_sm+0x1e8>
1005cad0:	1e68      	subs	r0, r5, #1
1005cad2:	462e      	mov	r6, r5
1005cad4:	4186      	sbcs	r6, r0
1005cad6:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005cad8:	4046      	eors	r6, r0
1005cada:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005cadc:	2800      	cmp	r0, #0
1005cade:	d002      	beq.n	1005cae6 <llc_config_blue_sm+0x100>
1005cae0:	2e00      	cmp	r6, #0
1005cae2:	d13e      	bne.n	1005cb62 <llc_config_blue_sm+0x17c>
1005cae4:	e05f      	b.n	1005cba6 <llc_config_blue_sm+0x1c0>
1005cae6:	00af      	lsls	r7, r5, #2
1005cae8:	59e0      	ldr	r0, [r4, r7]
1005caea:	f7e9 f969 	bl	10045dc0 <BLEPLAT_CNTR_PacketInitTo0>
1005caee:	59e0      	ldr	r0, [r4, r7]
1005caf0:	f7e9 f974 	bl	10045ddc <BLEPLAT_CNTR_PacketSetAdvPduFormat>
1005caf4:	59e0      	ldr	r0, [r4, r7]
1005caf6:	f7e9 f9f0 	bl	10045eda <BLEPLAT_CNTR_PacketSetKeepsemareq>
1005cafa:	59e0      	ldr	r0, [r4, r7]
1005cafc:	4601      	mov	r1, r0
1005cafe:	f7e9 f9f9 	bl	10045ef4 <BLEPLAT_CNTR_PacketSetNextPtr>
1005cb02:	9806      	ldr	r0, [sp, #24]
1005cb04:	59c1      	ldr	r1, [r0, r7]
1005cb06:	59e0      	ldr	r0, [r4, r7]
1005cb08:	f7e9 f98f 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
1005cb0c:	59e0      	ldr	r0, [r4, r7]
1005cb0e:	f7e9 f931 	bl	10045d74 <BLEPLAT_CNTR_PacketClrIncChan>
1005cb12:	59e0      	ldr	r0, [r4, r7]
1005cb14:	f7e9 f9b0 	bl	10045e78 <BLEPLAT_CNTR_PacketSetIntDone>
1005cb18:	59e0      	ldr	r0, [r4, r7]
1005cb1a:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005cb1c:	f7e9 fa06 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
1005cb20:	19e7      	adds	r7, r4, r7
1005cb22:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005cb24:	2803      	cmp	r0, #3
1005cb26:	d009      	beq.n	1005cb3c <llc_config_blue_sm+0x156>
1005cb28:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005cb2a:	2801      	cmp	r0, #1
1005cb2c:	d101      	bne.n	1005cb32 <llc_config_blue_sm+0x14c>
1005cb2e:	2e00      	cmp	r6, #0
1005cb30:	d104      	bne.n	1005cb3c <llc_config_blue_sm+0x156>
1005cb32:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005cb34:	2802      	cmp	r0, #2
1005cb36:	d104      	bne.n	1005cb42 <llc_config_blue_sm+0x15c>
1005cb38:	2e00      	cmp	r6, #0
1005cb3a:	d102      	bne.n	1005cb42 <llc_config_blue_sm+0x15c>
1005cb3c:	6838      	ldr	r0, [r7, #0]
1005cb3e:	f7e9 fa19 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005cb42:	6838      	ldr	r0, [r7, #0]
1005cb44:	f7e9 f957 	bl	10045df6 <BLEPLAT_CNTR_PacketSetCrcinitSel>
1005cb48:	6838      	ldr	r0, [r7, #0]
1005cb4a:	2e00      	cmp	r6, #0
1005cb4c:	d01e      	beq.n	1005cb8c <llc_config_blue_sm+0x1a6>
1005cb4e:	f7e9 fa60 	bl	10046012 <BLEPLAT_CNTR_PacketSetTxReady>
1005cb52:	6838      	ldr	r0, [r7, #0]
1005cb54:	f7e9 fa43 	bl	10045fde <BLEPLAT_CNTR_PacketSetTimerTrigDone>
1005cb58:	6839      	ldr	r1, [r7, #0]
1005cb5a:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005cb5c:	f7e9 fd51 	bl	10046602 <BLEPLAT_CNTR_SmSetTxPacketPtr>
1005cb60:	9f04      	ldr	r7, [sp, #16]
1005cb62:	9807      	ldr	r0, [sp, #28]
1005cb64:	2800      	cmp	r0, #0
1005cb66:	d030      	beq.n	1005cbca <llc_config_blue_sm+0x1e4>
1005cb68:	9808      	ldr	r0, [sp, #32]
1005cb6a:	2800      	cmp	r0, #0
1005cb6c:	d001      	beq.n	1005cb72 <llc_config_blue_sm+0x18c>
1005cb6e:	9802      	ldr	r0, [sp, #8]
1005cb70:	e001      	b.n	1005cb76 <llc_config_blue_sm+0x190>
1005cb72:	9802      	ldr	r0, [sp, #8]
1005cb74:	1b40      	subs	r0, r0, r5
1005cb76:	9903      	ldr	r1, [sp, #12]
1005cb78:	2900      	cmp	r1, #0
1005cb7a:	4629      	mov	r1, r5
1005cb7c:	d000      	beq.n	1005cb80 <llc_config_blue_sm+0x19a>
1005cb7e:	4601      	mov	r1, r0
1005cb80:	b2c8      	uxtb	r0, r1
1005cb82:	0080      	lsls	r0, r0, #2
1005cb84:	5820      	ldr	r0, [r4, r0]
1005cb86:	f7e9 f9dc 	bl	10045f42 <BLEPLAT_CNTR_PacketSetNextTxMode>
1005cb8a:	e01e      	b.n	1005cbca <llc_config_blue_sm+0x1e4>
1005cb8c:	f7e9 f9ff 	bl	10045f8e <BLEPLAT_CNTR_PacketSetRxReady>
1005cb90:	6838      	ldr	r0, [r7, #0]
1005cb92:	f7e9 fa31 	bl	10045ff8 <BLEPLAT_CNTR_PacketSetTimerTrigRcv>
1005cb96:	6838      	ldr	r0, [r7, #0]
1005cb98:	f7e9 f97a 	bl	10045e90 <BLEPLAT_CNTR_PacketSetIntRcvOk>
1005cb9c:	6839      	ldr	r1, [r7, #0]
1005cb9e:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005cba0:	f7e9 fcc3 	bl	1004652a <BLEPLAT_CNTR_SmSetRxPacketPtr>
1005cba4:	9f04      	ldr	r7, [sp, #16]
1005cba6:	9805      	ldr	r0, [sp, #20]
1005cba8:	2800      	cmp	r0, #0
1005cbaa:	d00e      	beq.n	1005cbca <llc_config_blue_sm+0x1e4>
1005cbac:	2001      	movs	r0, #1
1005cbae:	9908      	ldr	r1, [sp, #32]
1005cbb0:	2900      	cmp	r1, #0
1005cbb2:	d100      	bne.n	1005cbb6 <llc_config_blue_sm+0x1d0>
1005cbb4:	1b40      	subs	r0, r0, r5
1005cbb6:	9901      	ldr	r1, [sp, #4]
1005cbb8:	2900      	cmp	r1, #0
1005cbba:	4629      	mov	r1, r5
1005cbbc:	d000      	beq.n	1005cbc0 <llc_config_blue_sm+0x1da>
1005cbbe:	4601      	mov	r1, r0
1005cbc0:	b2c8      	uxtb	r0, r1
1005cbc2:	0080      	lsls	r0, r0, #2
1005cbc4:	5820      	ldr	r0, [r4, r0]
1005cbc6:	f7e9 f9a4 	bl	10045f12 <BLEPLAT_CNTR_PacketSetNextRxMode>
1005cbca:	1c6d      	adds	r5, r5, #1
1005cbcc:	e77e      	b.n	1005cacc <llc_config_blue_sm+0xe6>
1005cbce:	b00d      	add	sp, #52	@ 0x34
1005cbd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>:
1005cbd4:	1e80      	subs	r0, r0, #2
1005cbd6:	b2c0      	uxtb	r0, r0
1005cbd8:	2803      	cmp	r0, #3
1005cbda:	d301      	bcc.n	1005cbe0 <llc_convert_hci_phy_enum_to_hw_phy+0xc>
1005cbdc:	2000      	movs	r0, #0
1005cbde:	e002      	b.n	1005cbe6 <llc_convert_hci_phy_enum_to_hw_phy+0x12>
1005cbe0:	00c1      	lsls	r1, r0, #3
1005cbe2:	4802      	ldr	r0, [pc, #8]	@ (1005cbec <__arm_cp.4_0>)
1005cbe4:	40c8      	lsrs	r0, r1
1005cbe6:	b2c0      	uxtb	r0, r0
1005cbe8:	4770      	bx	lr
1005cbea:	46c0      	nop			@ (mov r8, r8)

1005cbec <__arm_cp.4_0>:
1005cbec:	00060401 	.word	0x00060401

1005cbf0 <llc_calculate_packet_duration_stu>:
1005cbf0:	b580      	push	{r7, lr}
1005cbf2:	f000 f80b 	bl	1005cc0c <llc_calculate_packet_duration_us>
1005cbf6:	0200      	lsls	r0, r0, #8
1005cbf8:	2127      	movs	r1, #39	@ 0x27
1005cbfa:	00c9      	lsls	r1, r1, #3
1005cbfc:	1840      	adds	r0, r0, r1
1005cbfe:	4902      	ldr	r1, [pc, #8]	@ (1005cc08 <__arm_cp.5_0>)
1005cc00:	f7e3 fb1e 	bl	10040240 <__udivsi3>
1005cc04:	bd80      	pop	{r7, pc}
1005cc06:	46c0      	nop			@ (mov r8, r8)

1005cc08 <__arm_cp.5_0>:
1005cc08:	00000271 	.word	0x00000271

1005cc0c <llc_calculate_packet_duration_us>:
1005cc0c:	b510      	push	{r4, lr}
1005cc0e:	1e80      	subs	r0, r0, #2
1005cc10:	b2c3      	uxtb	r3, r0
1005cc12:	2b02      	cmp	r3, #2
1005cc14:	d806      	bhi.n	1005cc24 <llc_calculate_packet_duration_us+0x18>
1005cc16:	b240      	sxtb	r0, r0
1005cc18:	0083      	lsls	r3, r0, #2
1005cc1a:	a006      	add	r0, pc, #24	@ (adr r0, 1005cc34 <llc_calculate_packet_duration_us+0x28>)
1005cc1c:	58c0      	ldr	r0, [r0, r3]
1005cc1e:	a408      	add	r4, pc, #32	@ (adr r4, 1005cc40 <llc_calculate_packet_duration_us+0x34>)
1005cc20:	58e3      	ldr	r3, [r4, r3]
1005cc22:	e001      	b.n	1005cc28 <llc_calculate_packet_duration_us+0x1c>
1005cc24:	2050      	movs	r0, #80	@ 0x50
1005cc26:	2303      	movs	r3, #3
1005cc28:	4099      	lsls	r1, r3
1005cc2a:	1808      	adds	r0, r1, r0
1005cc2c:	00d1      	lsls	r1, r2, #3
1005cc2e:	1840      	adds	r0, r0, r1
1005cc30:	bd10      	pop	{r4, pc}
1005cc32:	46c0      	nop			@ (mov r8, r8)
1005cc34:	0000002c 	.word	0x0000002c
1005cc38:	000002d0 	.word	0x000002d0
1005cc3c:	000001ce 	.word	0x000001ce
1005cc40:	00000002 	.word	0x00000002
1005cc44:	00000006 	.word	0x00000006
1005cc48:	00000004 	.word	0x00000004

1005cc4c <llc_calculate_preamble_and_aa_duration_us>:
1005cc4c:	1e80      	subs	r0, r0, #2
1005cc4e:	b2c1      	uxtb	r1, r0
1005cc50:	2902      	cmp	r1, #2
1005cc52:	d804      	bhi.n	1005cc5e <llc_calculate_preamble_and_aa_duration_us+0x12>
1005cc54:	b240      	sxtb	r0, r0
1005cc56:	0040      	lsls	r0, r0, #1
1005cc58:	4902      	ldr	r1, [pc, #8]	@ (1005cc64 <__arm_cp.7_0>)
1005cc5a:	5a08      	ldrh	r0, [r1, r0]
1005cc5c:	4770      	bx	lr
1005cc5e:	2028      	movs	r0, #40	@ 0x28
1005cc60:	4770      	bx	lr
1005cc62:	46c0      	nop			@ (mov r8, r8)

1005cc64 <__arm_cp.7_0>:
1005cc64:	1006e9c0 	.word	0x1006e9c0

1005cc68 <llc_calculate_max_data_length_in_time_window_stu>:
1005cc68:	b580      	push	{r7, lr}
1005cc6a:	4a03      	ldr	r2, [pc, #12]	@ (1005cc78 <__arm_cp.8_0>)
1005cc6c:	434a      	muls	r2, r1
1005cc6e:	0a11      	lsrs	r1, r2, #8
1005cc70:	f000 f804 	bl	1005cc7c <llc_calculate_max_data_length_in_time_window_us>
1005cc74:	bd80      	pop	{r7, pc}
1005cc76:	46c0      	nop			@ (mov r8, r8)

1005cc78 <__arm_cp.8_0>:
1005cc78:	00000271 	.word	0x00000271

1005cc7c <llc_calculate_max_data_length_in_time_window_us>:
1005cc7c:	2804      	cmp	r0, #4
1005cc7e:	d00a      	beq.n	1005cc96 <llc_calculate_max_data_length_in_time_window_us+0x1a>
1005cc80:	2803      	cmp	r0, #3
1005cc82:	d00e      	beq.n	1005cca2 <llc_calculate_max_data_length_in_time_window_us+0x26>
1005cc84:	2802      	cmp	r0, #2
1005cc86:	d112      	bne.n	1005ccae <llc_calculate_max_data_length_in_time_window_us+0x32>
1005cc88:	292b      	cmp	r1, #43	@ 0x2b
1005cc8a:	d91c      	bls.n	1005ccc6 <llc_calculate_max_data_length_in_time_window_us+0x4a>
1005cc8c:	204f      	movs	r0, #79	@ 0x4f
1005cc8e:	43c0      	mvns	r0, r0
1005cc90:	3024      	adds	r0, #36	@ 0x24
1005cc92:	2202      	movs	r2, #2
1005cc94:	e010      	b.n	1005ccb8 <llc_calculate_max_data_length_in_time_window_us+0x3c>
1005cc96:	0848      	lsrs	r0, r1, #1
1005cc98:	28e6      	cmp	r0, #230	@ 0xe6
1005cc9a:	d914      	bls.n	1005ccc6 <llc_calculate_max_data_length_in_time_window_us+0x4a>
1005cc9c:	2204      	movs	r2, #4
1005cc9e:	480c      	ldr	r0, [pc, #48]	@ (1005ccd0 <__arm_cp.9_1>)
1005cca0:	e00a      	b.n	1005ccb8 <llc_calculate_max_data_length_in_time_window_us+0x3c>
1005cca2:	0908      	lsrs	r0, r1, #4
1005cca4:	282c      	cmp	r0, #44	@ 0x2c
1005cca6:	d90e      	bls.n	1005ccc6 <llc_calculate_max_data_length_in_time_window_us+0x4a>
1005cca8:	2206      	movs	r2, #6
1005ccaa:	4808      	ldr	r0, [pc, #32]	@ (1005cccc <__arm_cp.9_0>)
1005ccac:	e004      	b.n	1005ccb8 <llc_calculate_max_data_length_in_time_window_us+0x3c>
1005ccae:	2950      	cmp	r1, #80	@ 0x50
1005ccb0:	d309      	bcc.n	1005ccc6 <llc_calculate_max_data_length_in_time_window_us+0x4a>
1005ccb2:	204f      	movs	r0, #79	@ 0x4f
1005ccb4:	43c0      	mvns	r0, r0
1005ccb6:	2203      	movs	r2, #3
1005ccb8:	1840      	adds	r0, r0, r1
1005ccba:	40d0      	lsrs	r0, r2
1005ccbc:	28fe      	cmp	r0, #254	@ 0xfe
1005ccbe:	d903      	bls.n	1005ccc8 <llc_calculate_max_data_length_in_time_window_us+0x4c>
1005ccc0:	2000      	movs	r0, #0
1005ccc2:	43c0      	mvns	r0, r0
1005ccc4:	e000      	b.n	1005ccc8 <llc_calculate_max_data_length_in_time_window_us+0x4c>
1005ccc6:	2000      	movs	r0, #0
1005ccc8:	b2c0      	uxtb	r0, r0
1005ccca:	4770      	bx	lr

1005cccc <__arm_cp.9_0>:
1005cccc:	fffffd30 	.word	0xfffffd30

1005ccd0 <__arm_cp.9_1>:
1005ccd0:	fffffe32 	.word	0xfffffe32

1005ccd4 <llc_get_adv_event_length>:
1005ccd4:	b5f0      	push	{r4, r5, r6, r7, lr}
1005ccd6:	b091      	sub	sp, #68	@ 0x44
1005ccd8:	4617      	mov	r7, r2
1005ccda:	9a18      	ldr	r2, [sp, #96]	@ 0x60
1005ccdc:	9200      	str	r2, [sp, #0]
1005ccde:	461a      	mov	r2, r3
1005cce0:	9008      	str	r0, [sp, #32]
1005cce2:	2800      	cmp	r0, #0
1005cce4:	9107      	str	r1, [sp, #28]
1005cce6:	d019      	beq.n	1005cd1c <llc_get_adv_event_length+0x48>
1005cce8:	4616      	mov	r6, r2
1005ccea:	4608      	mov	r0, r1
1005ccec:	306d      	adds	r0, #109	@ 0x6d
1005ccee:	6fcd      	ldr	r5, [r1, #124]	@ 0x7c
1005ccf0:	22c7      	movs	r2, #199	@ 0xc7
1005ccf2:	2f00      	cmp	r7, #0
1005ccf4:	d103      	bne.n	1005ccfe <llc_get_adv_event_length+0x2a>
1005ccf6:	9907      	ldr	r1, [sp, #28]
1005ccf8:	6f8c      	ldr	r4, [r1, #120]	@ 0x78
1005ccfa:	89e7      	ldrh	r7, [r4, #14]
1005ccfc:	9907      	ldr	r1, [sp, #28]
1005ccfe:	5caa      	ldrb	r2, [r5, r2]
1005cd00:	920c      	str	r2, [sp, #48]	@ 0x30
1005cd02:	888a      	ldrh	r2, [r1, #4]
1005cd04:	9206      	str	r2, [sp, #24]
1005cd06:	9a00      	ldr	r2, [sp, #0]
1005cd08:	8016      	strh	r6, [r2, #0]
1005cd0a:	4632      	mov	r2, r6
1005cd0c:	7800      	ldrb	r0, [r0, #0]
1005cd0e:	9005      	str	r0, [sp, #20]
1005cd10:	6d08      	ldr	r0, [r1, #80]	@ 0x50
1005cd12:	9001      	str	r0, [sp, #4]
1005cd14:	2008      	movs	r0, #8
1005cd16:	9004      	str	r0, [sp, #16]
1005cd18:	2009      	movs	r0, #9
1005cd1a:	e00f      	b.n	1005cd3c <llc_get_adv_event_length+0x68>
1005cd1c:	4608      	mov	r0, r1
1005cd1e:	30b8      	adds	r0, #184	@ 0xb8
1005cd20:	2f00      	cmp	r7, #0
1005cd22:	d100      	bne.n	1005cd26 <llc_get_adv_event_length+0x52>
1005cd24:	8dcf      	ldrh	r7, [r1, #46]	@ 0x2e
1005cd26:	7bc1      	ldrb	r1, [r0, #15]
1005cd28:	910c      	str	r1, [sp, #48]	@ 0x30
1005cd2a:	8800      	ldrh	r0, [r0, #0]
1005cd2c:	9006      	str	r0, [sp, #24]
1005cd2e:	2001      	movs	r0, #1
1005cd30:	9005      	str	r0, [sp, #20]
1005cd32:	2000      	movs	r0, #0
1005cd34:	9001      	str	r0, [sp, #4]
1005cd36:	2003      	movs	r0, #3
1005cd38:	9004      	str	r0, [sp, #16]
1005cd3a:	2004      	movs	r0, #4
1005cd3c:	9003      	str	r0, [sp, #12]
1005cd3e:	9808      	ldr	r0, [sp, #32]
1005cd40:	4245      	negs	r5, r0
1005cd42:	4145      	adcs	r5, r0
1005cd44:	2000      	movs	r0, #0
1005cd46:	337f      	adds	r3, #127	@ 0x7f
1005cd48:	4604      	mov	r4, r0
1005cd4a:	d000      	beq.n	1005cd4e <llc_get_adv_event_length+0x7a>
1005cd4c:	9817      	ldr	r0, [sp, #92]	@ 0x5c
1005cd4e:	990c      	ldr	r1, [sp, #48]	@ 0x30
1005cd50:	2902      	cmp	r1, #2
1005cd52:	d301      	bcc.n	1005cd58 <llc_get_adv_event_length+0x84>
1005cd54:	940a      	str	r4, [sp, #40]	@ 0x28
1005cd56:	e001      	b.n	1005cd5c <llc_get_adv_event_length+0x88>
1005cd58:	2114      	movs	r1, #20
1005cd5a:	910a      	str	r1, [sp, #40]	@ 0x28
1005cd5c:	9908      	ldr	r1, [sp, #32]
1005cd5e:	2900      	cmp	r1, #0
1005cd60:	d101      	bne.n	1005cd66 <llc_get_adv_event_length+0x92>
1005cd62:	9908      	ldr	r1, [sp, #32]
1005cd64:	910a      	str	r1, [sp, #40]	@ 0x28
1005cd66:	2b00      	cmp	r3, #0
1005cd68:	d001      	beq.n	1005cd6e <llc_get_adv_event_length+0x9a>
1005cd6a:	9916      	ldr	r1, [sp, #88]	@ 0x58
1005cd6c:	910a      	str	r1, [sp, #40]	@ 0x28
1005cd6e:	2101      	movs	r1, #1
1005cd70:	910b      	str	r1, [sp, #44]	@ 0x2c
1005cd72:	4623      	mov	r3, r4
1005cd74:	9410      	str	r4, [sp, #64]	@ 0x40
1005cd76:	9402      	str	r4, [sp, #8]
1005cd78:	4606      	mov	r6, r0
1005cd7a:	9709      	str	r7, [sp, #36]	@ 0x24
1005cd7c:	b2bf      	uxth	r7, r7
1005cd7e:	2f00      	cmp	r7, #0
1005cd80:	d104      	bne.n	1005cd8c <llc_get_adv_event_length+0xb8>
1005cd82:	2d00      	cmp	r5, #0
1005cd84:	d102      	bne.n	1005cd8c <llc_get_adv_event_length+0xb8>
1005cd86:	b210      	sxth	r0, r2
1005cd88:	2800      	cmp	r0, #0
1005cd8a:	d45f      	bmi.n	1005ce4c <llc_get_adv_event_length+0x178>
1005cd8c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005cd8e:	b2c0      	uxtb	r0, r0
1005cd90:	2800      	cmp	r0, #0
1005cd92:	d015      	beq.n	1005cdc0 <llc_get_adv_event_length+0xec>
1005cd94:	4615      	mov	r5, r2
1005cd96:	2801      	cmp	r0, #1
1005cd98:	d103      	bne.n	1005cda2 <llc_get_adv_event_length+0xce>
1005cd9a:	2002      	movs	r0, #2
1005cd9c:	900b      	str	r0, [sp, #44]	@ 0x2c
1005cd9e:	9804      	ldr	r0, [sp, #16]
1005cda0:	e002      	b.n	1005cda8 <llc_get_adv_event_length+0xd4>
1005cda2:	2000      	movs	r0, #0
1005cda4:	900b      	str	r0, [sp, #44]	@ 0x2c
1005cda6:	9803      	ldr	r0, [sp, #12]
1005cda8:	9906      	ldr	r1, [sp, #24]
1005cdaa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005cdac:	9b05      	ldr	r3, [sp, #20]
1005cdae:	f004 fe79 	bl	10061aa4 <llc_eadv_get_extended_header_flags_with_data_ind>
1005cdb2:	b2c0      	uxtb	r0, r0
1005cdb4:	9908      	ldr	r1, [sp, #32]
1005cdb6:	9a07      	ldr	r2, [sp, #28]
1005cdb8:	f004 fe02 	bl	100619c0 <llc_eadv_calculate_extended_header_length>
1005cdbc:	1c43      	adds	r3, r0, #1
1005cdbe:	462a      	mov	r2, r5
1005cdc0:	b210      	sxth	r0, r2
1005cdc2:	2400      	movs	r4, #0
1005cdc4:	900d      	str	r0, [sp, #52]	@ 0x34
1005cdc6:	2800      	cmp	r0, #0
1005cdc8:	4620      	mov	r0, r4
1005cdca:	dc00      	bgt.n	1005cdce <llc_get_adv_event_length+0xfa>
1005cdcc:	2003      	movs	r0, #3
1005cdce:	b299      	uxth	r1, r3
1005cdd0:	19cf      	adds	r7, r1, r7
1005cdd2:	4605      	mov	r5, r0
1005cdd4:	35ff      	adds	r5, #255	@ 0xff
1005cdd6:	42af      	cmp	r7, r5
1005cdd8:	940f      	str	r4, [sp, #60]	@ 0x3c
1005cdda:	960e      	str	r6, [sp, #56]	@ 0x38
1005cddc:	d801      	bhi.n	1005cde2 <llc_get_adv_event_length+0x10e>
1005cdde:	1a38      	subs	r0, r7, r0
1005cde0:	e000      	b.n	1005cde4 <llc_get_adv_event_length+0x110>
1005cde2:	43e0      	mvns	r0, r4
1005cde4:	461c      	mov	r4, r3
1005cde6:	4616      	mov	r6, r2
1005cde8:	b291      	uxth	r1, r2
1005cdea:	2900      	cmp	r1, #0
1005cdec:	d100      	bne.n	1005cdf0 <llc_get_adv_event_length+0x11c>
1005cdee:	910a      	str	r1, [sp, #40]	@ 0x28
1005cdf0:	b2c1      	uxtb	r1, r0
1005cdf2:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005cdf4:	b2c2      	uxtb	r2, r0
1005cdf6:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005cdf8:	f7ff fefa 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
1005cdfc:	9910      	ldr	r1, [sp, #64]	@ 0x40
1005cdfe:	1808      	adds	r0, r1, r0
1005ce00:	42af      	cmp	r7, r5
1005ce02:	d804      	bhi.n	1005ce0e <llc_get_adv_event_length+0x13a>
1005ce04:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1005ce06:	462f      	mov	r7, r5
1005ce08:	4632      	mov	r2, r6
1005ce0a:	4623      	mov	r3, r4
1005ce0c:	e005      	b.n	1005ce1a <llc_get_adv_event_length+0x146>
1005ce0e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
1005ce10:	4623      	mov	r3, r4
1005ce12:	193f      	adds	r7, r7, r4
1005ce14:	3fff      	subs	r7, #255	@ 0xff
1005ce16:	4632      	mov	r2, r6
1005ce18:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1005ce1a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
1005ce1c:	990d      	ldr	r1, [sp, #52]	@ 0x34
1005ce1e:	30cd      	adds	r0, #205	@ 0xcd
1005ce20:	9010      	str	r0, [sp, #64]	@ 0x40
1005ce22:	13c8      	asrs	r0, r1, #15
1005ce24:	43c0      	mvns	r0, r0
1005ce26:	1812      	adds	r2, r2, r0
1005ce28:	0620      	lsls	r0, r4, #24
1005ce2a:	4628      	mov	r0, r5
1005ce2c:	d0a4      	beq.n	1005cd78 <llc_get_adv_event_length+0xa4>
1005ce2e:	9801      	ldr	r0, [sp, #4]
1005ce30:	9910      	ldr	r1, [sp, #64]	@ 0x40
1005ce32:	4281      	cmp	r1, r0
1005ce34:	d904      	bls.n	1005ce40 <llc_get_adv_event_length+0x16c>
1005ce36:	9802      	ldr	r0, [sp, #8]
1005ce38:	b2c0      	uxtb	r0, r0
1005ce3a:	9900      	ldr	r1, [sp, #0]
1005ce3c:	8008      	strh	r0, [r1, #0]
1005ce3e:	2400      	movs	r4, #0
1005ce40:	9802      	ldr	r0, [sp, #8]
1005ce42:	1c40      	adds	r0, r0, #1
1005ce44:	9002      	str	r0, [sp, #8]
1005ce46:	2500      	movs	r5, #0
1005ce48:	4620      	mov	r0, r4
1005ce4a:	e795      	b.n	1005cd78 <llc_get_adv_event_length+0xa4>
1005ce4c:	9810      	ldr	r0, [sp, #64]	@ 0x40
1005ce4e:	2800      	cmp	r0, #0
1005ce50:	d000      	beq.n	1005ce54 <llc_get_adv_event_length+0x180>
1005ce52:	38cd      	subs	r0, #205	@ 0xcd
1005ce54:	b011      	add	sp, #68	@ 0x44
1005ce56:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005ce58 <llc_host_feature_advertising_coding_selection_enabled>:
1005ce58:	4802      	ldr	r0, [pc, #8]	@ (1005ce64 <__arm_cp.11_0>)
1005ce5a:	6800      	ldr	r0, [r0, #0]
1005ce5c:	6a00      	ldr	r0, [r0, #32]
1005ce5e:	0580      	lsls	r0, r0, #22
1005ce60:	0fc0      	lsrs	r0, r0, #31
1005ce62:	4770      	bx	lr

1005ce64 <__arm_cp.11_0>:
1005ce64:	20000894 	.word	0x20000894

1005ce68 <ll_cpe_get_cpid_from_opcode>:
1005ce68:	282a      	cmp	r0, #42	@ 0x2a
1005ce6a:	d804      	bhi.n	1005ce76 <ll_cpe_get_cpid_from_opcode+0xe>
1005ce6c:	2103      	movs	r1, #3
1005ce6e:	4341      	muls	r1, r0
1005ce70:	4802      	ldr	r0, [pc, #8]	@ (1005ce7c <__arm_cp.0_0>)
1005ce72:	5c40      	ldrb	r0, [r0, r1]
1005ce74:	4770      	bx	lr
1005ce76:	2016      	movs	r0, #22
1005ce78:	4770      	bx	lr
1005ce7a:	46c0      	nop			@ (mov r8, r8)

1005ce7c <__arm_cp.0_0>:
1005ce7c:	1006e9c6 	.word	0x1006e9c6

1005ce80 <ll_cpe_set_unknown_rsp_pending>:
1005ce80:	b5b0      	push	{r4, r5, r7, lr}
1005ce82:	4604      	mov	r4, r0
1005ce84:	f7f9 f8c2 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005ce88:	2100      	movs	r1, #0
1005ce8a:	f7f9 fb6b 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005ce8e:	4605      	mov	r5, r0
1005ce90:	4620      	mov	r0, r4
1005ce92:	f000 f80d 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005ce96:	8801      	ldrh	r1, [r0, #0]
1005ce98:	4a04      	ldr	r2, [pc, #16]	@ (1005ceac <__arm_cp.1_0>)
1005ce9a:	400a      	ands	r2, r1
1005ce9c:	8869      	ldrh	r1, [r5, #2]
1005ce9e:	0609      	lsls	r1, r1, #24
1005cea0:	0cc9      	lsrs	r1, r1, #19
1005cea2:	1889      	adds	r1, r1, r2
1005cea4:	3110      	adds	r1, #16
1005cea6:	8001      	strh	r1, [r0, #0]
1005cea8:	bdb0      	pop	{r4, r5, r7, pc}
1005ceaa:	46c0      	nop			@ (mov r8, r8)

1005ceac <__arm_cp.1_0>:
1005ceac:	0000e00f 	.word	0x0000e00f

1005ceb0 <LL_cpe_get_ctrl_flds_common_p>:
1005ceb0:	b580      	push	{r7, lr}
1005ceb2:	f7f9 f8ab 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005ceb6:	30b0      	adds	r0, #176	@ 0xb0
1005ceb8:	bd80      	pop	{r7, pc}

1005ceba <LL_cpe_register_cpf>:
1005ceba:	b5b0      	push	{r4, r5, r7, lr}
1005cebc:	460c      	mov	r4, r1
1005cebe:	0085      	lsls	r5, r0, #2
1005cec0:	f7f9 f89a 	bl	10055ff8 <llc_conn_get_cntxt_p>
1005cec4:	6880      	ldr	r0, [r0, #8]
1005cec6:	5144      	str	r4, [r0, r5]
1005cec8:	bdb0      	pop	{r4, r5, r7, pc}

1005ceca <LL_cpe_get_active_status>:
1005ceca:	b580      	push	{r7, lr}
1005cecc:	f000 f804 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005ced0:	7801      	ldrb	r1, [r0, #0]
1005ced2:	2001      	movs	r0, #1
1005ced4:	4008      	ands	r0, r1
1005ced6:	bd80      	pop	{r7, pc}

1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>:
1005ced8:	b510      	push	{r4, lr}
1005ceda:	460c      	mov	r4, r1
1005cedc:	f7f9 f896 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cee0:	1900      	adds	r0, r0, r4
1005cee2:	30a8      	adds	r0, #168	@ 0xa8
1005cee4:	bd10      	pop	{r4, pc}

1005cee6 <LL_cpe_set_active>:
1005cee6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005cee8:	461c      	mov	r4, r3
1005ceea:	4615      	mov	r5, r2
1005ceec:	460e      	mov	r6, r1
1005ceee:	4607      	mov	r7, r0
1005cef0:	f7f9 f88c 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cef4:	1980      	adds	r0, r0, r6
1005cef6:	21ac      	movs	r1, #172	@ 0xac
1005cef8:	5445      	strb	r5, [r0, r1]
1005cefa:	4638      	mov	r0, r7
1005cefc:	4631      	mov	r1, r6
1005cefe:	f7ff ffeb 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005cf02:	7801      	ldrb	r1, [r0, #0]
1005cf04:	22de      	movs	r2, #222	@ 0xde
1005cf06:	400a      	ands	r2, r1
1005cf08:	07e1      	lsls	r1, r4, #31
1005cf0a:	0e89      	lsrs	r1, r1, #26
1005cf0c:	1889      	adds	r1, r1, r2
1005cf0e:	1c49      	adds	r1, r1, #1
1005cf10:	7001      	strb	r1, [r0, #0]
1005cf12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005cf14 <LL_cpe_clr_active>:
1005cf14:	b570      	push	{r4, r5, r6, lr}
1005cf16:	4616      	mov	r6, r2
1005cf18:	460d      	mov	r5, r1
1005cf1a:	4604      	mov	r4, r0
1005cf1c:	f000 f814 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005cf20:	42b0      	cmp	r0, r6
1005cf22:	d110      	bne.n	1005cf46 <LL_cpe_clr_active+0x32>
1005cf24:	4620      	mov	r0, r4
1005cf26:	4629      	mov	r1, r5
1005cf28:	f7ff ffd6 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005cf2c:	2100      	movs	r1, #0
1005cf2e:	7001      	strb	r1, [r0, #0]
1005cf30:	2d01      	cmp	r5, #1
1005cf32:	d001      	beq.n	1005cf38 <LL_cpe_clr_active+0x24>
1005cf34:	256c      	movs	r5, #108	@ 0x6c
1005cf36:	e000      	b.n	1005cf3a <LL_cpe_clr_active+0x26>
1005cf38:	2570      	movs	r5, #112	@ 0x70
1005cf3a:	4620      	mov	r0, r4
1005cf3c:	f7f9 f866 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cf40:	217d      	movs	r1, #125	@ 0x7d
1005cf42:	0449      	lsls	r1, r1, #17
1005cf44:	5141      	str	r1, [r0, r5]
1005cf46:	bd70      	pop	{r4, r5, r6, pc}

1005cf48 <ll_cpe_get_cpid_from_sm>:
1005cf48:	b510      	push	{r4, lr}
1005cf4a:	460c      	mov	r4, r1
1005cf4c:	f7f9 f85e 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cf50:	1900      	adds	r0, r0, r4
1005cf52:	21ac      	movs	r1, #172	@ 0xac
1005cf54:	5c40      	ldrb	r0, [r0, r1]
1005cf56:	bd10      	pop	{r4, pc}

1005cf58 <LL_cpe_set_blocked>:
1005cf58:	b510      	push	{r4, lr}
1005cf5a:	4614      	mov	r4, r2
1005cf5c:	f7ff ffbc 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005cf60:	2c02      	cmp	r4, #2
1005cf62:	d805      	bhi.n	1005cf70 <LL_cpe_set_blocked+0x18>
1005cf64:	00e1      	lsls	r1, r4, #3
1005cf66:	4a03      	ldr	r2, [pc, #12]	@ (1005cf74 <__arm_cp.9_0>)
1005cf68:	40ca      	lsrs	r2, r1
1005cf6a:	7801      	ldrb	r1, [r0, #0]
1005cf6c:	4311      	orrs	r1, r2
1005cf6e:	7001      	strb	r1, [r0, #0]
1005cf70:	bd10      	pop	{r4, pc}
1005cf72:	46c0      	nop			@ (mov r8, r8)

1005cf74 <__arm_cp.9_0>:
1005cf74:	00080402 	.word	0x00080402

1005cf78 <LL_cpe_set_prepare_tx_pdu>:
1005cf78:	b580      	push	{r7, lr}
1005cf7a:	f7ff ffad 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005cf7e:	7801      	ldrb	r1, [r0, #0]
1005cf80:	2210      	movs	r2, #16
1005cf82:	430a      	orrs	r2, r1
1005cf84:	7002      	strb	r2, [r0, #0]
1005cf86:	2015      	movs	r0, #21
1005cf88:	f008 f952 	bl	10065230 <tsk_notify_idx>
1005cf8c:	f7e5 fca3 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005cf90:	bd80      	pop	{r7, pc}

1005cf92 <LL_cpe_get_cntxt>:
1005cf92:	b510      	push	{r4, lr}
1005cf94:	460c      	mov	r4, r1
1005cf96:	f7f9 f839 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cf9a:	00a1      	lsls	r1, r4, #2
1005cf9c:	1840      	adds	r0, r0, r1
1005cf9e:	21a0      	movs	r1, #160	@ 0xa0
1005cfa0:	5840      	ldr	r0, [r0, r1]
1005cfa2:	bd10      	pop	{r4, pc}

1005cfa4 <LL_cpe_set_tx_with_instant>:
1005cfa4:	b5b0      	push	{r4, r5, r7, lr}
1005cfa6:	4604      	mov	r4, r0
1005cfa8:	f7ff ff96 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005cfac:	4605      	mov	r5, r0
1005cfae:	4620      	mov	r0, r4
1005cfb0:	f7f9 f82c 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cfb4:	7829      	ldrb	r1, [r5, #0]
1005cfb6:	2240      	movs	r2, #64	@ 0x40
1005cfb8:	430a      	orrs	r2, r1
1005cfba:	702a      	strb	r2, [r5, #0]
1005cfbc:	f7f9 fd99 	bl	10056af2 <llc_conn_set_tx_ctrl_pdu_has_instant>
1005cfc0:	bdb0      	pop	{r4, r5, r7, pc}

1005cfc2 <LL_cpe_set_rx_with_instant>:
1005cfc2:	b5b0      	push	{r4, r5, r7, lr}
1005cfc4:	4604      	mov	r4, r0
1005cfc6:	f7ff ff87 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005cfca:	4605      	mov	r5, r0
1005cfcc:	4620      	mov	r0, r4
1005cfce:	f7f9 f81d 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cfd2:	7829      	ldrb	r1, [r5, #0]
1005cfd4:	2240      	movs	r2, #64	@ 0x40
1005cfd6:	430a      	orrs	r2, r1
1005cfd8:	702a      	strb	r2, [r5, #0]
1005cfda:	219a      	movs	r1, #154	@ 0x9a
1005cfdc:	5a42      	ldrh	r2, [r0, r1]
1005cfde:	2301      	movs	r3, #1
1005cfe0:	4313      	orrs	r3, r2
1005cfe2:	5243      	strh	r3, [r0, r1]
1005cfe4:	bdb0      	pop	{r4, r5, r7, pc}
	...

1005cfe8 <LL_cpe_engine>:
1005cfe8:	b5f0      	push	{r4, r5, r6, r7, lr}
1005cfea:	b08d      	sub	sp, #52	@ 0x34
1005cfec:	4604      	mov	r4, r0
1005cfee:	a80c      	add	r0, sp, #48	@ 0x30
1005cff0:	2700      	movs	r7, #0
1005cff2:	8007      	strh	r7, [r0, #0]
1005cff4:	4620      	mov	r0, r4
1005cff6:	f7f9 f809 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005cffa:	21ff      	movs	r1, #255	@ 0xff
1005cffc:	3112      	adds	r1, #18
1005cffe:	900b      	str	r0, [sp, #44]	@ 0x2c
1005d000:	5c40      	ldrb	r0, [r0, r1]
1005d002:	2800      	cmp	r0, #0
1005d004:	9406      	str	r4, [sp, #24]
1005d006:	d100      	bne.n	1005d00a <LL_cpe_engine+0x22>
1005d008:	e083      	b.n	1005d112 <LL_cpe_engine+0x12a>
1005d00a:	4620      	mov	r0, r4
1005d00c:	f000 fbc6 	bl	1005d79c <ll_cpe_set_active>
1005d010:	4620      	mov	r0, r4
1005d012:	f7ff ff4d 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005d016:	4606      	mov	r6, r0
1005d018:	4620      	mov	r0, r4
1005d01a:	f7f8 fff7 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d01e:	4604      	mov	r4, r0
1005d020:	8835      	ldrh	r5, [r6, #0]
1005d022:	f7f9 facc 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
1005d026:	0729      	lsls	r1, r5, #28
1005d028:	d509      	bpl.n	1005d03e <LL_cpe_engine+0x56>
1005d02a:	2803      	cmp	r0, #3
1005d02c:	d107      	bne.n	1005d03e <LL_cpe_engine+0x56>
1005d02e:	2100      	movs	r1, #0
1005d030:	4620      	mov	r0, r4
1005d032:	f7f9 fd65 	bl	10056b00 <llc_conn_set_tx_ctrl_pdu_state>
1005d036:	8830      	ldrh	r0, [r6, #0]
1005d038:	2108      	movs	r1, #8
1005d03a:	4388      	bics	r0, r1
1005d03c:	8030      	strh	r0, [r6, #0]
1005d03e:	9806      	ldr	r0, [sp, #24]
1005d040:	f000 fbb4 	bl	1005d7ac <ll_cpe_check_rx_pdu_can_be_processed>
1005d044:	2800      	cmp	r0, #0
1005d046:	d100      	bne.n	1005d04a <LL_cpe_engine+0x62>
1005d048:	e132      	b.n	1005d2b0 <LL_cpe_engine+0x2c8>
1005d04a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005d04c:	4606      	mov	r6, r0
1005d04e:	362c      	adds	r6, #44	@ 0x2c
1005d050:	4639      	mov	r1, r7
1005d052:	f7f9 fa87 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005d056:	7885      	ldrb	r5, [r0, #2]
1005d058:	9005      	str	r0, [sp, #20]
1005d05a:	7840      	ldrb	r0, [r0, #1]
1005d05c:	9008      	str	r0, [sp, #32]
1005d05e:	2101      	movs	r1, #1
1005d060:	9c06      	ldr	r4, [sp, #24]
1005d062:	4620      	mov	r0, r4
1005d064:	9104      	str	r1, [sp, #16]
1005d066:	463a      	mov	r2, r7
1005d068:	f000 fbb1 	bl	1005d7ce <ll_cpe_get_blocked_status>
1005d06c:	9009      	str	r0, [sp, #36]	@ 0x24
1005d06e:	4620      	mov	r0, r4
1005d070:	4639      	mov	r1, r7
1005d072:	463a      	mov	r2, r7
1005d074:	f000 fbab 	bl	1005d7ce <ll_cpe_get_blocked_status>
1005d078:	4603      	mov	r3, r0
1005d07a:	9607      	str	r6, [sp, #28]
1005d07c:	7830      	ldrb	r0, [r6, #0]
1005d07e:	1e84      	subs	r4, r0, #2
1005d080:	1e61      	subs	r1, r4, #1
1005d082:	4620      	mov	r0, r4
1005d084:	4188      	sbcs	r0, r1
1005d086:	950a      	str	r5, [sp, #40]	@ 0x28
1005d088:	2d2a      	cmp	r5, #42	@ 0x2a
1005d08a:	d900      	bls.n	1005d08e <LL_cpe_engine+0xa6>
1005d08c:	e068      	b.n	1005d160 <LL_cpe_engine+0x178>
1005d08e:	2103      	movs	r1, #3
1005d090:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1005d092:	4351      	muls	r1, r2
1005d094:	4aa3      	ldr	r2, [pc, #652]	@ (1005d324 <__arm_cp.14_7>)
1005d096:	1851      	adds	r1, r2, r1
1005d098:	7849      	ldrb	r1, [r1, #1]
1005d09a:	9a08      	ldr	r2, [sp, #32]
1005d09c:	4291      	cmp	r1, r2
1005d09e:	d000      	beq.n	1005d0a2 <LL_cpe_engine+0xba>
1005d0a0:	e05e      	b.n	1005d160 <LL_cpe_engine+0x178>
1005d0a2:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005d0a4:	292a      	cmp	r1, #42	@ 0x2a
1005d0a6:	d900      	bls.n	1005d0aa <LL_cpe_engine+0xc2>
1005d0a8:	e05a      	b.n	1005d160 <LL_cpe_engine+0x178>
1005d0aa:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005d0ac:	0049      	lsls	r1, r1, #1
1005d0ae:	46c0      	nop			@ (mov r8, r8)
1005d0b0:	4479      	add	r1, pc
1005d0b2:	8889      	ldrh	r1, [r1, #4]
1005d0b4:	0049      	lsls	r1, r1, #1
1005d0b6:	448f      	add	pc, r1
1005d0b8:	00540054 	.word	0x00540054
1005d0bc:	0054002a 	.word	0x0054002a
1005d0c0:	03120312 	.word	0x03120312
1005d0c4:	002a002a 	.word	0x002a002a
1005d0c8:	002a0054 	.word	0x002a0054
1005d0cc:	002a0054 	.word	0x002a0054
1005d0d0:	002a002a 	.word	0x002a002a
1005d0d4:	00530312 	.word	0x00530312
1005d0d8:	002a0053 	.word	0x002a0053
1005d0dc:	002a002a 	.word	0x002a002a
1005d0e0:	03190319 	.word	0x03190319
1005d0e4:	03640325 	.word	0x03640325
1005d0e8:	00530329 	.word	0x00530329
1005d0ec:	031d031d 	.word	0x031d031d
1005d0f0:	002a032d 	.word	0x002a032d
1005d0f4:	0321002a 	.word	0x0321002a
1005d0f8:	03210331 	.word	0x03210331
1005d0fc:	03150337 	.word	0x03150337
1005d100:	03150315 	.word	0x03150315
1005d104:	0341033b 	.word	0x0341033b
1005d108:	03500345 	.word	0x03500345
1005d10c:	0356      	.short	0x0356
1005d10e:	9804      	ldr	r0, [sp, #16]
1005d110:	e027      	b.n	1005d162 <LL_cpe_engine+0x17a>
1005d112:	4620      	mov	r0, r4
1005d114:	f7f8 ff7a 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d118:	4605      	mov	r5, r0
1005d11a:	202d      	movs	r0, #45	@ 0x2d
1005d11c:	5c28      	ldrb	r0, [r5, r0]
1005d11e:	2800      	cmp	r0, #0
1005d120:	d100      	bne.n	1005d124 <LL_cpe_engine+0x13c>
1005d122:	e09f      	b.n	1005d264 <LL_cpe_engine+0x27c>
1005d124:	900a      	str	r0, [sp, #40]	@ 0x28
1005d126:	462f      	mov	r7, r5
1005d128:	372c      	adds	r7, #44	@ 0x2c
1005d12a:	462e      	mov	r6, r5
1005d12c:	36d8      	adds	r6, #216	@ 0xd8
1005d12e:	6d78      	ldr	r0, [r7, #84]	@ 0x54
1005d130:	463c      	mov	r4, r7
1005d132:	3454      	adds	r4, #84	@ 0x54
1005d134:	7d79      	ldrb	r1, [r7, #21]
1005d136:	910b      	str	r1, [sp, #44]	@ 0x2c
1005d138:	2800      	cmp	r0, #0
1005d13a:	d001      	beq.n	1005d140 <LL_cpe_engine+0x158>
1005d13c:	f7f2 fe7a 	bl	1004fe34 <Acl_Tx_Cmpl_Pkt_Handler>
1005d140:	4620      	mov	r0, r4
1005d142:	f008 fa67 	bl	10065614 <ACL_list_init>
1005d146:	ce03      	ldmia	r6!, {r0, r1}
1005d148:	f7f9 fab4 	bl	100566b4 <llc_conn_list_remove_address>
1005d14c:	4876      	ldr	r0, [pc, #472]	@ (1005d328 <__arm_cp.14_8>)
1005d14e:	6800      	ldr	r0, [r0, #0]
1005d150:	212c      	movs	r1, #44	@ 0x2c
1005d152:	5c40      	ldrb	r0, [r0, r1]
1005d154:	07c0      	lsls	r0, r0, #31
1005d156:	0ec1      	lsrs	r1, r0, #27
1005d158:	8f6c      	ldrh	r4, [r5, #58]	@ 0x3a
1005d15a:	d149      	bne.n	1005d1f0 <LL_cpe_engine+0x208>
1005d15c:	2205      	movs	r2, #5
1005d15e:	e04e      	b.n	1005d1fe <LL_cpe_engine+0x216>
1005d160:	4638      	mov	r0, r7
1005d162:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005d164:	4319      	orrs	r1, r3
1005d166:	d000      	beq.n	1005d16a <LL_cpe_engine+0x182>
1005d168:	e0a2      	b.n	1005d2b0 <LL_cpe_engine+0x2c8>
1005d16a:	2800      	cmp	r0, #0
1005d16c:	d100      	bne.n	1005d170 <LL_cpe_engine+0x188>
1005d16e:	e080      	b.n	1005d272 <LL_cpe_engine+0x28a>
1005d170:	9805      	ldr	r0, [sp, #20]
1005d172:	78c6      	ldrb	r6, [r0, #3]
1005d174:	2401      	movs	r4, #1
1005d176:	9f06      	ldr	r7, [sp, #24]
1005d178:	4638      	mov	r0, r7
1005d17a:	4621      	mov	r1, r4
1005d17c:	f000 fb40 	bl	1005d800 <ll_cpe_get_expected_opcode>
1005d180:	9005      	str	r0, [sp, #20]
1005d182:	4638      	mov	r0, r7
1005d184:	4621      	mov	r1, r4
1005d186:	f000 fb43 	bl	1005d810 <ll_cpe_get_state>
1005d18a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
1005d18c:	9004      	str	r0, [sp, #16]
1005d18e:	4628      	mov	r0, r5
1005d190:	9603      	str	r6, [sp, #12]
1005d192:	4631      	mov	r1, r6
1005d194:	463a      	mov	r2, r7
1005d196:	9409      	str	r4, [sp, #36]	@ 0x24
1005d198:	4623      	mov	r3, r4
1005d19a:	f000 fb41 	bl	1005d820 <LL_cpe_rxctrlpdu_checkreject>
1005d19e:	1e41      	subs	r1, r0, #1
1005d1a0:	4188      	sbcs	r0, r1
1005d1a2:	9905      	ldr	r1, [sp, #20]
1005d1a4:	1b49      	subs	r1, r1, r5
1005d1a6:	424a      	negs	r2, r1
1005d1a8:	414a      	adcs	r2, r1
1005d1aa:	4302      	orrs	r2, r0
1005d1ac:	9804      	ldr	r0, [sp, #16]
1005d1ae:	1f00      	subs	r0, r0, #4
1005d1b0:	4245      	negs	r5, r0
1005d1b2:	4145      	adcs	r5, r0
1005d1b4:	4015      	ands	r5, r2
1005d1b6:	2400      	movs	r4, #0
1005d1b8:	4638      	mov	r0, r7
1005d1ba:	4621      	mov	r1, r4
1005d1bc:	f000 fb20 	bl	1005d800 <ll_cpe_get_expected_opcode>
1005d1c0:	4606      	mov	r6, r0
1005d1c2:	9807      	ldr	r0, [sp, #28]
1005d1c4:	7800      	ldrb	r0, [r0, #0]
1005d1c6:	9007      	str	r0, [sp, #28]
1005d1c8:	4638      	mov	r0, r7
1005d1ca:	4621      	mov	r1, r4
1005d1cc:	f000 fb20 	bl	1005d810 <ll_cpe_get_state>
1005d1d0:	4607      	mov	r7, r0
1005d1d2:	2801      	cmp	r0, #1
1005d1d4:	d151      	bne.n	1005d27a <LL_cpe_engine+0x292>
1005d1d6:	9807      	ldr	r0, [sp, #28]
1005d1d8:	1e81      	subs	r1, r0, #2
1005d1da:	1e48      	subs	r0, r1, #1
1005d1dc:	4181      	sbcs	r1, r0
1005d1de:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005d1e0:	4604      	mov	r4, r0
1005d1e2:	9a08      	ldr	r2, [sp, #32]
1005d1e4:	f000 fb44 	bl	1005d870 <valid_first_opcode>
1005d1e8:	2800      	cmp	r0, #0
1005d1ea:	d047      	beq.n	1005d27c <LL_cpe_engine+0x294>
1005d1ec:	2501      	movs	r5, #1
1005d1ee:	e045      	b.n	1005d27c <LL_cpe_engine+0x294>
1005d1f0:	484e      	ldr	r0, [pc, #312]	@ (1005d32c <__arm_cp.14_9>)
1005d1f2:	6800      	ldr	r0, [r0, #0]
1005d1f4:	2236      	movs	r2, #54	@ 0x36
1005d1f6:	5c80      	ldrb	r0, [r0, r2]
1005d1f8:	06c0      	lsls	r0, r0, #27
1005d1fa:	d51d      	bpl.n	1005d238 <LL_cpe_engine+0x250>
1005d1fc:	2215      	movs	r2, #21
1005d1fe:	206f      	movs	r0, #111	@ 0x6f
1005d200:	43c0      	mvns	r0, r0
1005d202:	4041      	eors	r1, r0
1005d204:	484a      	ldr	r0, [pc, #296]	@ (1005d330 <__arm_cp.14_10>)
1005d206:	6800      	ldr	r0, [r0, #0]
1005d208:	6900      	ldr	r0, [r0, #16]
1005d20a:	b2ce      	uxtb	r6, r1
1005d20c:	2302      	movs	r3, #2
1005d20e:	4631      	mov	r1, r6
1005d210:	f7f3 f876 	bl	10050300 <aci_event_fifo_push_header>
1005d214:	2800      	cmp	r0, #0
1005d216:	d00f      	beq.n	1005d238 <LL_cpe_engine+0x250>
1005d218:	4601      	mov	r1, r0
1005d21a:	7204      	strb	r4, [r0, #8]
1005d21c:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005d21e:	7288      	strb	r0, [r1, #10]
1005d220:	2000      	movs	r0, #0
1005d222:	71c8      	strb	r0, [r1, #7]
1005d224:	2004      	movs	r0, #4
1005d226:	7188      	strb	r0, [r1, #6]
1005d228:	2205      	movs	r2, #5
1005d22a:	714a      	strb	r2, [r1, #5]
1005d22c:	7108      	strb	r0, [r1, #4]
1005d22e:	0a20      	lsrs	r0, r4, #8
1005d230:	7248      	strb	r0, [r1, #9]
1005d232:	4630      	mov	r0, r6
1005d234:	f7f3 f901 	bl	1005043a <aci_event_fifo_push>
1005d238:	4628      	mov	r0, r5
1005d23a:	f001 ff99 	bl	1005f170 <LLC_authenticated_payload_timeout_reset>
1005d23e:	9c06      	ldr	r4, [sp, #24]
1005d240:	4620      	mov	r0, r4
1005d242:	f000 fc1b 	bl	1005da7c <ll_cpe_reset_state_machines>
1005d246:	4620      	mov	r0, r4
1005d248:	f7f8 ff9c 	bl	10056184 <llc_conn_per_init>
1005d24c:	4620      	mov	r0, r4
1005d24e:	f7f1 fd9b 	bl	1004ed88 <LL_past_initialize_connect_context_ucfg>
1005d252:	4620      	mov	r0, r4
1005d254:	f7f1 fbbb 	bl	1004e9ce <llc_pscan_wr_check_pawr_active_ucfg>
1005d258:	2800      	cmp	r0, #0
1005d25a:	d003      	beq.n	1005d264 <LL_cpe_engine+0x27c>
1005d25c:	2001      	movs	r0, #1
1005d25e:	7038      	strb	r0, [r7, #0]
1005d260:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005d262:	7578      	strb	r0, [r7, #21]
1005d264:	a80c      	add	r0, sp, #48	@ 0x30
1005d266:	7841      	ldrb	r1, [r0, #1]
1005d268:	2902      	cmp	r1, #2
1005d26a:	d000      	beq.n	1005d26e <LL_cpe_engine+0x286>
1005d26c:	e232      	b.n	1005d6d4 <__arm_cp.14_10+0x3a4>
1005d26e:	2001      	movs	r0, #1
1005d270:	e233      	b.n	1005d6da <__arm_cp.14_10+0x3aa>
1005d272:	9806      	ldr	r0, [sp, #24]
1005d274:	f7ff fe04 	bl	1005ce80 <ll_cpe_set_unknown_rsp_pending>
1005d278:	e017      	b.n	1005d2aa <LL_cpe_engine+0x2c2>
1005d27a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
1005d27c:	9903      	ldr	r1, [sp, #12]
1005d27e:	2204      	movs	r2, #4
1005d280:	407a      	eors	r2, r7
1005d282:	4620      	mov	r0, r4
1005d284:	4066      	eors	r6, r4
1005d286:	4316      	orrs	r6, r2
1005d288:	4274      	negs	r4, r6
1005d28a:	4174      	adcs	r4, r6
1005d28c:	2f04      	cmp	r7, #4
1005d28e:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1005d290:	d000      	beq.n	1005d294 <LL_cpe_engine+0x2ac>
1005d292:	4626      	mov	r6, r4
1005d294:	2300      	movs	r3, #0
1005d296:	9a06      	ldr	r2, [sp, #24]
1005d298:	f000 fac2 	bl	1005d820 <LL_cpe_rxctrlpdu_checkreject>
1005d29c:	2800      	cmp	r0, #0
1005d29e:	d100      	bne.n	1005d2a2 <LL_cpe_engine+0x2ba>
1005d2a0:	4626      	mov	r6, r4
1005d2a2:	2e01      	cmp	r6, #1
1005d2a4:	d004      	beq.n	1005d2b0 <LL_cpe_engine+0x2c8>
1005d2a6:	2d00      	cmp	r5, #0
1005d2a8:	d102      	bne.n	1005d2b0 <LL_cpe_engine+0x2c8>
1005d2aa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005d2ac:	f7f9 f89c 	bl	100563e8 <llc_conn_clr_rx_ctrl_pdu_full>
1005d2b0:	2000      	movs	r0, #0
1005d2b2:	9005      	str	r0, [sp, #20]
1005d2b4:	43c0      	mvns	r0, r0
1005d2b6:	9f06      	ldr	r7, [sp, #24]
1005d2b8:	2801      	cmp	r0, #1
1005d2ba:	d100      	bne.n	1005d2be <LL_cpe_engine+0x2d6>
1005d2bc:	e1ff      	b.n	1005d6be <__arm_cp.14_10+0x38e>
1005d2be:	900a      	str	r0, [sp, #40]	@ 0x28
1005d2c0:	1c40      	adds	r0, r0, #1
1005d2c2:	900b      	str	r0, [sp, #44]	@ 0x2c
1005d2c4:	4638      	mov	r0, r7
1005d2c6:	f000 fc46 	bl	1005db56 <ll_cpe_get_active>
1005d2ca:	2800      	cmp	r0, #0
1005d2cc:	d017      	beq.n	1005d2fe <LL_cpe_engine+0x316>
1005d2ce:	4638      	mov	r0, r7
1005d2d0:	f7ff fdee 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005d2d4:	4605      	mov	r5, r0
1005d2d6:	8800      	ldrh	r0, [r0, #0]
1005d2d8:	0780      	lsls	r0, r0, #30
1005d2da:	d500      	bpl.n	1005d2de <LL_cpe_engine+0x2f6>
1005d2dc:	e1ed      	b.n	1005d6ba <__arm_cp.14_10+0x38a>
1005d2de:	4638      	mov	r0, r7
1005d2e0:	f7f8 fe94 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d2e4:	24b2      	movs	r4, #178	@ 0xb2
1005d2e6:	5d06      	ldrb	r6, [r0, r4]
1005d2e8:	2e00      	cmp	r6, #0
1005d2ea:	d008      	beq.n	1005d2fe <LL_cpe_engine+0x316>
1005d2ec:	4638      	mov	r0, r7
1005d2ee:	f7f8 fe8d 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d2f2:	9009      	str	r0, [sp, #36]	@ 0x24
1005d2f4:	f7f9 f963 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
1005d2f8:	2800      	cmp	r0, #0
1005d2fa:	d100      	bne.n	1005d2fe <LL_cpe_engine+0x316>
1005d2fc:	e0e1      	b.n	1005d4c2 <__arm_cp.14_10+0x192>
1005d2fe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005d300:	b2c6      	uxtb	r6, r0
1005d302:	4638      	mov	r0, r7
1005d304:	4631      	mov	r1, r6
1005d306:	f000 fa83 	bl	1005d810 <ll_cpe_get_state>
1005d30a:	4605      	mov	r5, r0
1005d30c:	2805      	cmp	r0, #5
1005d30e:	9608      	str	r6, [sp, #32]
1005d310:	9009      	str	r0, [sp, #36]	@ 0x24
1005d312:	d816      	bhi.n	1005d342 <__arm_cp.14_10+0x12>
1005d314:	447d      	add	r5, pc
1005d316:	792d      	ldrb	r5, [r5, #4]
1005d318:	006d      	lsls	r5, r5, #1
1005d31a:	44af      	add	pc, r5
1005d31c:	6544140b 	.word	0x6544140b
1005d320:	46c0b799 	.word	0x46c0b799

1005d324 <__arm_cp.14_7>:
1005d324:	1006e9c6 	.word	0x1006e9c6

1005d328 <__arm_cp.14_8>:
1005d328:	2000083c 	.word	0x2000083c

1005d32c <__arm_cp.14_9>:
1005d32c:	20000894 	.word	0x20000894

1005d330 <__arm_cp.14_10>:
1005d330:	20000840 	.word	0x20000840
1005d334:	4638      	mov	r0, r7
1005d336:	f000 fc0e 	bl	1005db56 <ll_cpe_get_active>
1005d33a:	4604      	mov	r4, r0
1005d33c:	1e40      	subs	r0, r0, #1
1005d33e:	4184      	sbcs	r4, r0
1005d340:	e180      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d342:	462c      	mov	r4, r5
1005d344:	e17e      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d346:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005d348:	2800      	cmp	r0, #0
1005d34a:	d100      	bne.n	1005d34e <__arm_cp.14_10+0x1e>
1005d34c:	e0df      	b.n	1005d50e <__arm_cp.14_10+0x1de>
1005d34e:	4638      	mov	r0, r7
1005d350:	f000 fa2c 	bl	1005d7ac <ll_cpe_check_rx_pdu_can_be_processed>
1005d354:	2800      	cmp	r0, #0
1005d356:	d100      	bne.n	1005d35a <__arm_cp.14_10+0x2a>
1005d358:	e0d7      	b.n	1005d50a <__arm_cp.14_10+0x1da>
1005d35a:	2501      	movs	r5, #1
1005d35c:	4638      	mov	r0, r7
1005d35e:	4629      	mov	r1, r5
1005d360:	f000 fa56 	bl	1005d810 <ll_cpe_get_state>
1005d364:	4604      	mov	r4, r0
1005d366:	4638      	mov	r0, r7
1005d368:	f000 fbfc 	bl	1005db64 <ll_cpe_get_rx_pdu_discarded_by_one_sm>
1005d36c:	2c04      	cmp	r4, #4
1005d36e:	d103      	bne.n	1005d378 <__arm_cp.14_10+0x48>
1005d370:	462c      	mov	r4, r5
1005d372:	2800      	cmp	r0, #0
1005d374:	d100      	bne.n	1005d378 <__arm_cp.14_10+0x48>
1005d376:	e165      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d378:	2100      	movs	r1, #0
1005d37a:	2401      	movs	r4, #1
1005d37c:	4638      	mov	r0, r7
1005d37e:	4622      	mov	r2, r4
1005d380:	f000 fbf8 	bl	1005db74 <ll_cpe_process_rx_pdu>
1005d384:	2800      	cmp	r0, #0
1005d386:	d100      	bne.n	1005d38a <__arm_cp.14_10+0x5a>
1005d388:	e153      	b.n	1005d632 <__arm_cp.14_10+0x302>
1005d38a:	2100      	movs	r1, #0
1005d38c:	4638      	mov	r0, r7
1005d38e:	f7ff fd9c 	bl	1005ceca <LL_cpe_get_active_status>
1005d392:	2800      	cmp	r0, #0
1005d394:	d100      	bne.n	1005d398 <__arm_cp.14_10+0x68>
1005d396:	e152      	b.n	1005d63e <__arm_cp.14_10+0x30e>
1005d398:	2100      	movs	r1, #0
1005d39a:	4638      	mov	r0, r7
1005d39c:	f000 fce0 	bl	1005dd60 <ll_cpe_get_instant_active>
1005d3a0:	2800      	cmp	r0, #0
1005d3a2:	d171      	bne.n	1005d488 <__arm_cp.14_10+0x158>
1005d3a4:	e143      	b.n	1005d62e <__arm_cp.14_10+0x2fe>
1005d3a6:	4638      	mov	r0, r7
1005d3a8:	f7f8 fe30 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d3ac:	4604      	mov	r4, r0
1005d3ae:	4638      	mov	r0, r7
1005d3b0:	4631      	mov	r1, r6
1005d3b2:	f7ff fd91 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005d3b6:	7800      	ldrb	r0, [r0, #0]
1005d3b8:	06c7      	lsls	r7, r0, #27
1005d3ba:	9407      	str	r4, [sp, #28]
1005d3bc:	4620      	mov	r0, r4
1005d3be:	f7f9 f8fe 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
1005d3c2:	2402      	movs	r4, #2
1005d3c4:	2f00      	cmp	r7, #0
1005d3c6:	d400      	bmi.n	1005d3ca <__arm_cp.14_10+0x9a>
1005d3c8:	e09d      	b.n	1005d506 <__arm_cp.14_10+0x1d6>
1005d3ca:	2800      	cmp	r0, #0
1005d3cc:	d000      	beq.n	1005d3d0 <__arm_cp.14_10+0xa0>
1005d3ce:	e09a      	b.n	1005d506 <__arm_cp.14_10+0x1d6>
1005d3d0:	2701      	movs	r7, #1
1005d3d2:	9d06      	ldr	r5, [sp, #24]
1005d3d4:	4628      	mov	r0, r5
1005d3d6:	4631      	mov	r1, r6
1005d3d8:	463a      	mov	r2, r7
1005d3da:	f000 f9f8 	bl	1005d7ce <ll_cpe_get_blocked_status>
1005d3de:	2800      	cmp	r0, #0
1005d3e0:	d100      	bne.n	1005d3e4 <__arm_cp.14_10+0xb4>
1005d3e2:	e0b6      	b.n	1005d552 <__arm_cp.14_10+0x222>
1005d3e4:	462f      	mov	r7, r5
1005d3e6:	e12d      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d3e8:	4638      	mov	r0, r7
1005d3ea:	f7f8 fe0f 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d3ee:	4605      	mov	r5, r0
1005d3f0:	f7f9 f8e5 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
1005d3f4:	2803      	cmp	r0, #3
1005d3f6:	d000      	beq.n	1005d3fa <__arm_cp.14_10+0xca>
1005d3f8:	e0ed      	b.n	1005d5d6 <__arm_cp.14_10+0x2a6>
1005d3fa:	4638      	mov	r0, r7
1005d3fc:	4631      	mov	r1, r6
1005d3fe:	f7ff fda3 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005d402:	f000 fceb 	bl	1005dddc <LL_cpe_get_cpf>
1005d406:	4604      	mov	r4, r0
1005d408:	2600      	movs	r6, #0
1005d40a:	4638      	mov	r0, r7
1005d40c:	9908      	ldr	r1, [sp, #32]
1005d40e:	4632      	mov	r2, r6
1005d410:	4633      	mov	r3, r6
1005d412:	47a0      	blx	r4
1005d414:	4602      	mov	r2, r0
1005d416:	4638      	mov	r0, r7
1005d418:	9908      	ldr	r1, [sp, #32]
1005d41a:	f000 fcec 	bl	1005ddf6 <ll_cpe_set_expected_opcode>
1005d41e:	4628      	mov	r0, r5
1005d420:	4631      	mov	r1, r6
1005d422:	9c08      	ldr	r4, [sp, #32]
1005d424:	f7f9 fb6c 	bl	10056b00 <llc_conn_set_tx_ctrl_pdu_state>
1005d428:	4638      	mov	r0, r7
1005d42a:	4621      	mov	r1, r4
1005d42c:	f7ff fd4d 	bl	1005ceca <LL_cpe_get_active_status>
1005d430:	2800      	cmp	r0, #0
1005d432:	d06a      	beq.n	1005d50a <__arm_cp.14_10+0x1da>
1005d434:	4638      	mov	r0, r7
1005d436:	4621      	mov	r1, r4
1005d438:	f000 fc92 	bl	1005dd60 <ll_cpe_get_instant_active>
1005d43c:	2800      	cmp	r0, #0
1005d43e:	d160      	bne.n	1005d502 <__arm_cp.14_10+0x1d2>
1005d440:	4638      	mov	r0, r7
1005d442:	4621      	mov	r1, r4
1005d444:	f000 f9dc 	bl	1005d800 <ll_cpe_get_expected_opcode>
1005d448:	28ff      	cmp	r0, #255	@ 0xff
1005d44a:	d068      	beq.n	1005d51e <__arm_cp.14_10+0x1ee>
1005d44c:	2404      	movs	r4, #4
1005d44e:	e0f9      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d450:	4638      	mov	r0, r7
1005d452:	f000 f9ab 	bl	1005d7ac <ll_cpe_check_rx_pdu_can_be_processed>
1005d456:	2404      	movs	r4, #4
1005d458:	2800      	cmp	r0, #0
1005d45a:	d100      	bne.n	1005d45e <__arm_cp.14_10+0x12e>
1005d45c:	e0f2      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d45e:	2203      	movs	r2, #3
1005d460:	4638      	mov	r0, r7
1005d462:	4631      	mov	r1, r6
1005d464:	f000 fb86 	bl	1005db74 <ll_cpe_process_rx_pdu>
1005d468:	2800      	cmp	r0, #0
1005d46a:	d05a      	beq.n	1005d522 <__arm_cp.14_10+0x1f2>
1005d46c:	4638      	mov	r0, r7
1005d46e:	4631      	mov	r1, r6
1005d470:	f7ff fd2b 	bl	1005ceca <LL_cpe_get_active_status>
1005d474:	2800      	cmp	r0, #0
1005d476:	d100      	bne.n	1005d47a <__arm_cp.14_10+0x14a>
1005d478:	e0bb      	b.n	1005d5f2 <__arm_cp.14_10+0x2c2>
1005d47a:	4638      	mov	r0, r7
1005d47c:	4631      	mov	r1, r6
1005d47e:	f000 fc6f 	bl	1005dd60 <ll_cpe_get_instant_active>
1005d482:	2800      	cmp	r0, #0
1005d484:	d100      	bne.n	1005d488 <__arm_cp.14_10+0x158>
1005d486:	e0b6      	b.n	1005d5f6 <__arm_cp.14_10+0x2c6>
1005d488:	2405      	movs	r4, #5
1005d48a:	e0d8      	b.n	1005d63e <__arm_cp.14_10+0x30e>
1005d48c:	4638      	mov	r0, r7
1005d48e:	f7f8 fdbd 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d492:	4604      	mov	r4, r0
1005d494:	f7f9 f87c 	bl	10056590 <llc_conn_get_instant_reached>
1005d498:	2801      	cmp	r0, #1
1005d49a:	d132      	bne.n	1005d502 <__arm_cp.14_10+0x1d2>
1005d49c:	4638      	mov	r0, r7
1005d49e:	4631      	mov	r1, r6
1005d4a0:	f7ff fd52 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005d4a4:	f000 fc9a 	bl	1005dddc <LL_cpe_get_cpf>
1005d4a8:	2800      	cmp	r0, #0
1005d4aa:	9407      	str	r4, [sp, #28]
1005d4ac:	d100      	bne.n	1005d4b0 <__arm_cp.14_10+0x180>
1005d4ae:	e094      	b.n	1005d5da <__arm_cp.14_10+0x2aa>
1005d4b0:	4605      	mov	r5, r0
1005d4b2:	4620      	mov	r0, r4
1005d4b4:	f7f9 f867 	bl	10056586 <llc_conn_get_instant_passed>
1005d4b8:	2801      	cmp	r0, #1
1005d4ba:	d100      	bne.n	1005d4be <__arm_cp.14_10+0x18e>
1005d4bc:	e08f      	b.n	1005d5de <__arm_cp.14_10+0x2ae>
1005d4be:	2207      	movs	r2, #7
1005d4c0:	e08e      	b.n	1005d5e0 <__arm_cp.14_10+0x2b0>
1005d4c2:	2101      	movs	r1, #1
1005d4c4:	910a      	str	r1, [sp, #40]	@ 0x28
1005d4c6:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005d4c8:	f7f9 f84c 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005d4cc:	49b2      	ldr	r1, [pc, #712]	@ (1005d798 <__arm_cp.14_1>)
1005d4ce:	8001      	strh	r1, [r0, #0]
1005d4d0:	0671      	lsls	r1, r6, #25
1005d4d2:	0c49      	lsrs	r1, r1, #17
1005d4d4:	1c89      	adds	r1, r1, #2
1005d4d6:	8041      	strh	r1, [r0, #2]
1005d4d8:	8828      	ldrh	r0, [r5, #0]
1005d4da:	2102      	movs	r1, #2
1005d4dc:	4301      	orrs	r1, r0
1005d4de:	8029      	strh	r1, [r5, #0]
1005d4e0:	4638      	mov	r0, r7
1005d4e2:	f7f8 fd93 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d4e6:	9d05      	ldr	r5, [sp, #20]
1005d4e8:	5505      	strb	r5, [r0, r4]
1005d4ea:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005d4ec:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
1005d4ee:	4621      	mov	r1, r4
1005d4f0:	f7f9 fb06 	bl	10056b00 <llc_conn_set_tx_ctrl_pdu_state>
1005d4f4:	2204      	movs	r2, #4
1005d4f6:	4638      	mov	r0, r7
1005d4f8:	4621      	mov	r1, r4
1005d4fa:	462b      	mov	r3, r5
1005d4fc:	f7ff fcf3 	bl	1005cee6 <LL_cpe_set_active>
1005d500:	e0db      	b.n	1005d6ba <__arm_cp.14_10+0x38a>
1005d502:	2405      	movs	r4, #5
1005d504:	e09e      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d506:	9f06      	ldr	r7, [sp, #24]
1005d508:	e09c      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d50a:	2401      	movs	r4, #1
1005d50c:	e09a      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d50e:	2401      	movs	r4, #1
1005d510:	4638      	mov	r0, r7
1005d512:	4621      	mov	r1, r4
1005d514:	f7ff fcd9 	bl	1005ceca <LL_cpe_get_active_status>
1005d518:	2800      	cmp	r0, #0
1005d51a:	d100      	bne.n	1005d51e <__arm_cp.14_10+0x1ee>
1005d51c:	e092      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d51e:	2402      	movs	r4, #2
1005d520:	e090      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d522:	4626      	mov	r6, r4
1005d524:	4638      	mov	r0, r7
1005d526:	f000 fb1d 	bl	1005db64 <ll_cpe_get_rx_pdu_discarded_by_one_sm>
1005d52a:	4604      	mov	r4, r0
1005d52c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005d52e:	4241      	negs	r1, r0
1005d530:	4141      	adcs	r1, r0
1005d532:	4638      	mov	r0, r7
1005d534:	f000 f96c 	bl	1005d810 <ll_cpe_get_state>
1005d538:	2c00      	cmp	r4, #0
1005d53a:	d064      	beq.n	1005d606 <__arm_cp.14_10+0x2d6>
1005d53c:	4638      	mov	r0, r7
1005d53e:	f7f8 fd65 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d542:	2100      	movs	r1, #0
1005d544:	f7f9 f80e 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005d548:	4638      	mov	r0, r7
1005d54a:	f000 fc10 	bl	1005dd6e <ll_cpe_clr_rx_pdu_discarded_by_one_sm>
1005d54e:	4634      	mov	r4, r6
1005d550:	e078      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d552:	9704      	str	r7, [sp, #16]
1005d554:	22ff      	movs	r2, #255	@ 0xff
1005d556:	4628      	mov	r0, r5
1005d558:	4631      	mov	r1, r6
1005d55a:	f000 fc10 	bl	1005dd7e <ll_cpe_check_instant_blocked>
1005d55e:	2800      	cmp	r0, #0
1005d560:	462f      	mov	r7, r5
1005d562:	d16f      	bne.n	1005d644 <__arm_cp.14_10+0x314>
1005d564:	4638      	mov	r0, r7
1005d566:	4631      	mov	r1, r6
1005d568:	f7ff fcee 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005d56c:	f000 fc36 	bl	1005dddc <LL_cpe_get_cpf>
1005d570:	4604      	mov	r4, r0
1005d572:	9807      	ldr	r0, [sp, #28]
1005d574:	9d04      	ldr	r5, [sp, #16]
1005d576:	4629      	mov	r1, r5
1005d578:	f7f8 fff4 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005d57c:	4603      	mov	r3, r0
1005d57e:	2206      	movs	r2, #6
1005d580:	4638      	mov	r0, r7
1005d582:	4631      	mov	r1, r6
1005d584:	9303      	str	r3, [sp, #12]
1005d586:	47a0      	blx	r4
1005d588:	4638      	mov	r0, r7
1005d58a:	4631      	mov	r1, r6
1005d58c:	f7ff fc9d 	bl	1005ceca <LL_cpe_get_active_status>
1005d590:	2800      	cmp	r0, #0
1005d592:	462c      	mov	r4, r5
1005d594:	d056      	beq.n	1005d644 <__arm_cp.14_10+0x314>
1005d596:	4638      	mov	r0, r7
1005d598:	4631      	mov	r1, r6
1005d59a:	f7ff fc9d 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005d59e:	7801      	ldrb	r1, [r0, #0]
1005d5a0:	22ef      	movs	r2, #239	@ 0xef
1005d5a2:	400a      	ands	r2, r1
1005d5a4:	7002      	strb	r2, [r0, #0]
1005d5a6:	22ff      	movs	r2, #255	@ 0xff
1005d5a8:	4638      	mov	r0, r7
1005d5aa:	4631      	mov	r1, r6
1005d5ac:	f000 fc23 	bl	1005ddf6 <ll_cpe_set_expected_opcode>
1005d5b0:	2401      	movs	r4, #1
1005d5b2:	9807      	ldr	r0, [sp, #28]
1005d5b4:	4621      	mov	r1, r4
1005d5b6:	f7f9 faa3 	bl	10056b00 <llc_conn_set_tx_ctrl_pdu_state>
1005d5ba:	9a03      	ldr	r2, [sp, #12]
1005d5bc:	7850      	ldrb	r0, [r2, #1]
1005d5be:	2108      	movs	r1, #8
1005d5c0:	1c80      	adds	r0, r0, #2
1005d5c2:	b2c0      	uxtb	r0, r0
1005d5c4:	9100      	str	r1, [sp, #0]
1005d5c6:	9001      	str	r0, [sp, #4]
1005d5c8:	9202      	str	r2, [sp, #8]
1005d5ca:	2000      	movs	r0, #0
1005d5cc:	4621      	mov	r1, r4
1005d5ce:	4622      	mov	r2, r4
1005d5d0:	4623      	mov	r3, r4
1005d5d2:	f7f2 fe91 	bl	100502f8 <log_notify_stu_ucfg_weak>
1005d5d6:	2403      	movs	r4, #3
1005d5d8:	e034      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d5da:	2405      	movs	r4, #5
1005d5dc:	e005      	b.n	1005d5ea <__arm_cp.14_10+0x2ba>
1005d5de:	2208      	movs	r2, #8
1005d5e0:	2300      	movs	r3, #0
1005d5e2:	4638      	mov	r0, r7
1005d5e4:	4631      	mov	r1, r6
1005d5e6:	47a8      	blx	r5
1005d5e8:	2401      	movs	r4, #1
1005d5ea:	9807      	ldr	r0, [sp, #28]
1005d5ec:	f7f8 fee8 	bl	100563c0 <llc_conn_clr_instant_reached_passed>
1005d5f0:	e028      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d5f2:	2401      	movs	r4, #1
1005d5f4:	e023      	b.n	1005d63e <__arm_cp.14_10+0x30e>
1005d5f6:	4638      	mov	r0, r7
1005d5f8:	4631      	mov	r1, r6
1005d5fa:	f000 f901 	bl	1005d800 <ll_cpe_get_expected_opcode>
1005d5fe:	28ff      	cmp	r0, #255	@ 0xff
1005d600:	d015      	beq.n	1005d62e <__arm_cp.14_10+0x2fe>
1005d602:	2404      	movs	r4, #4
1005d604:	e01b      	b.n	1005d63e <__arm_cp.14_10+0x30e>
1005d606:	2804      	cmp	r0, #4
1005d608:	d004      	beq.n	1005d614 <__arm_cp.14_10+0x2e4>
1005d60a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1005d60c:	2900      	cmp	r1, #0
1005d60e:	d095      	beq.n	1005d53c <__arm_cp.14_10+0x20c>
1005d610:	2801      	cmp	r0, #1
1005d612:	d193      	bne.n	1005d53c <__arm_cp.14_10+0x20c>
1005d614:	4638      	mov	r0, r7
1005d616:	f7ff fc4b 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005d61a:	8801      	ldrh	r1, [r0, #0]
1005d61c:	2404      	movs	r4, #4
1005d61e:	4321      	orrs	r1, r4
1005d620:	8001      	strh	r1, [r0, #0]
1005d622:	2015      	movs	r0, #21
1005d624:	f007 fe04 	bl	10065230 <tsk_notify_idx>
1005d628:	f7e5 f955 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005d62c:	e00a      	b.n	1005d644 <__arm_cp.14_10+0x314>
1005d62e:	2402      	movs	r4, #2
1005d630:	e005      	b.n	1005d63e <__arm_cp.14_10+0x30e>
1005d632:	4638      	mov	r0, r7
1005d634:	f7f8 fcea 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d638:	2100      	movs	r1, #0
1005d63a:	f7f8 ff93 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005d63e:	4638      	mov	r0, r7
1005d640:	f000 fb95 	bl	1005dd6e <ll_cpe_clr_rx_pdu_discarded_by_one_sm>
1005d644:	4638      	mov	r0, r7
1005d646:	f7ff fc33 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005d64a:	4606      	mov	r6, r0
1005d64c:	8800      	ldrh	r0, [r0, #0]
1005d64e:	06c0      	lsls	r0, r0, #27
1005d650:	d527      	bpl.n	1005d6a2 <__arm_cp.14_10+0x372>
1005d652:	4638      	mov	r0, r7
1005d654:	f7f8 fcda 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d658:	4605      	mov	r5, r0
1005d65a:	f7f8 ffb0 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
1005d65e:	9407      	str	r4, [sp, #28]
1005d660:	4604      	mov	r4, r0
1005d662:	2100      	movs	r1, #0
1005d664:	2201      	movs	r2, #1
1005d666:	4638      	mov	r0, r7
1005d668:	f000 f8b1 	bl	1005d7ce <ll_cpe_get_blocked_status>
1005d66c:	4320      	orrs	r0, r4
1005d66e:	9c07      	ldr	r4, [sp, #28]
1005d670:	d117      	bne.n	1005d6a2 <__arm_cp.14_10+0x372>
1005d672:	8837      	ldrh	r7, [r6, #0]
1005d674:	2401      	movs	r4, #1
1005d676:	4628      	mov	r0, r5
1005d678:	4621      	mov	r1, r4
1005d67a:	f7f8 ff73 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005d67e:	4946      	ldr	r1, [pc, #280]	@ (1005d798 <__arm_cp.14_1>)
1005d680:	8001      	strh	r1, [r0, #0]
1005d682:	0979      	lsrs	r1, r7, #5
1005d684:	9f06      	ldr	r7, [sp, #24]
1005d686:	0209      	lsls	r1, r1, #8
1005d688:	1dc9      	adds	r1, r1, #7
1005d68a:	8041      	strh	r1, [r0, #2]
1005d68c:	8830      	ldrh	r0, [r6, #0]
1005d68e:	2108      	movs	r1, #8
1005d690:	4301      	orrs	r1, r0
1005d692:	2010      	movs	r0, #16
1005d694:	4381      	bics	r1, r0
1005d696:	8031      	strh	r1, [r6, #0]
1005d698:	4628      	mov	r0, r5
1005d69a:	4621      	mov	r1, r4
1005d69c:	9c07      	ldr	r4, [sp, #28]
1005d69e:	f7f9 fa2f 	bl	10056b00 <llc_conn_set_tx_ctrl_pdu_state>
1005d6a2:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005d6a4:	42a0      	cmp	r0, r4
1005d6a6:	d004      	beq.n	1005d6b2 <__arm_cp.14_10+0x382>
1005d6a8:	4638      	mov	r0, r7
1005d6aa:	9908      	ldr	r1, [sp, #32]
1005d6ac:	4622      	mov	r2, r4
1005d6ae:	f000 fa49 	bl	1005db44 <ll_cpe_set_state>
1005d6b2:	a80c      	add	r0, sp, #48	@ 0x30
1005d6b4:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005d6b6:	1840      	adds	r0, r0, r1
1005d6b8:	7044      	strb	r4, [r0, #1]
1005d6ba:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005d6bc:	e5fc      	b.n	1005d2b8 <LL_cpe_engine+0x2d0>
1005d6be:	a80c      	add	r0, sp, #48	@ 0x30
1005d6c0:	7802      	ldrb	r2, [r0, #0]
1005d6c2:	2001      	movs	r0, #1
1005d6c4:	2a02      	cmp	r2, #2
1005d6c6:	d008      	beq.n	1005d6da <__arm_cp.14_10+0x3aa>
1005d6c8:	a90c      	add	r1, sp, #48	@ 0x30
1005d6ca:	7849      	ldrb	r1, [r1, #1]
1005d6cc:	2902      	cmp	r1, #2
1005d6ce:	d004      	beq.n	1005d6da <__arm_cp.14_10+0x3aa>
1005d6d0:	2a03      	cmp	r2, #3
1005d6d2:	d002      	beq.n	1005d6da <__arm_cp.14_10+0x3aa>
1005d6d4:	1ec9      	subs	r1, r1, #3
1005d6d6:	4248      	negs	r0, r1
1005d6d8:	4148      	adcs	r0, r1
1005d6da:	b00d      	add	sp, #52	@ 0x34
1005d6dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005d6de:	4260      	negs	r0, r4
1005d6e0:	4160      	adcs	r0, r4
1005d6e2:	e53e      	b.n	1005d162 <LL_cpe_engine+0x17a>
1005d6e4:	461c      	mov	r4, r3
1005d6e6:	f7f7 ff9b 	bl	10055620 <pcl_csr_ucfg_weak>
1005d6ea:	e046      	b.n	1005d77a <__arm_cp.14_10+0x44a>
1005d6ec:	461c      	mov	r4, r3
1005d6ee:	f7f7 fecb 	bl	10055488 <data_length_extension_csr_ucfg_weak>
1005d6f2:	e042      	b.n	1005d77a <__arm_cp.14_10+0x44a>
1005d6f4:	461c      	mov	r4, r3
1005d6f6:	f7f7 fd15 	bl	10055124 <cte_csr_ucfg_weak>
1005d6fa:	e03e      	b.n	1005d77a <__arm_cp.14_10+0x44a>
1005d6fc:	461d      	mov	r5, r3
1005d6fe:	f7fa fb3b 	bl	10057d78 <cis_csr_ucfg_weak>
1005d702:	e022      	b.n	1005d74a <__arm_cp.14_10+0x41a>
1005d704:	461c      	mov	r4, r3
1005d706:	f7f7 ff8d 	bl	10055624 <phy_upd_csr_ucfg_weak>
1005d70a:	e036      	b.n	1005d77a <__arm_cp.14_10+0x44a>
1005d70c:	461d      	mov	r5, r3
1005d70e:	f7f7 ff89 	bl	10055624 <phy_upd_csr_ucfg_weak>
1005d712:	e01a      	b.n	1005d74a <__arm_cp.14_10+0x41a>
1005d714:	461c      	mov	r4, r3
1005d716:	f7f1 f817 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
1005d71a:	e027      	b.n	1005d76c <__arm_cp.14_10+0x43c>
1005d71c:	4265      	negs	r5, r4
1005d71e:	4165      	adcs	r5, r4
1005d720:	461c      	mov	r4, r3
1005d722:	f7fa fb29 	bl	10057d78 <cis_csr_ucfg_weak>
1005d726:	e031      	b.n	1005d78c <__arm_cp.14_10+0x45c>
1005d728:	461c      	mov	r4, r3
1005d72a:	f7fa fb25 	bl	10057d78 <cis_csr_ucfg_weak>
1005d72e:	e024      	b.n	1005d77a <__arm_cp.14_10+0x44a>
1005d730:	4265      	negs	r5, r4
1005d732:	4165      	adcs	r5, r4
1005d734:	461c      	mov	r4, r3
1005d736:	f7f7 ffb1 	bl	1005569c <subrate_csr_ucfg_weak>
1005d73a:	e027      	b.n	1005d78c <__arm_cp.14_10+0x45c>
1005d73c:	461d      	mov	r5, r3
1005d73e:	f7f7 ffad 	bl	1005569c <subrate_csr_ucfg_weak>
1005d742:	e002      	b.n	1005d74a <__arm_cp.14_10+0x41a>
1005d744:	461d      	mov	r5, r3
1005d746:	f7f7 fbcf 	bl	10054ee8 <chc_csr_ucfg_weak>
1005d74a:	462b      	mov	r3, r5
1005d74c:	1e41      	subs	r1, r0, #1
1005d74e:	4188      	sbcs	r0, r1
1005d750:	1e61      	subs	r1, r4, #1
1005d752:	418c      	sbcs	r4, r1
1005d754:	4004      	ands	r4, r0
1005d756:	4620      	mov	r0, r4
1005d758:	e503      	b.n	1005d162 <LL_cpe_engine+0x17a>
1005d75a:	4265      	negs	r5, r4
1005d75c:	4165      	adcs	r5, r4
1005d75e:	461c      	mov	r4, r3
1005d760:	f7f7 fbc2 	bl	10054ee8 <chc_csr_ucfg_weak>
1005d764:	e012      	b.n	1005d78c <__arm_cp.14_10+0x45c>
1005d766:	461c      	mov	r4, r3
1005d768:	f7f1 f84d 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
1005d76c:	4623      	mov	r3, r4
1005d76e:	2800      	cmp	r0, #0
1005d770:	4638      	mov	r0, r7
1005d772:	d100      	bne.n	1005d776 <__arm_cp.14_10+0x446>
1005d774:	e4f5      	b.n	1005d162 <LL_cpe_engine+0x17a>
1005d776:	f7f0 fe82 	bl	1004e47e <scan_csr_ucfg>
1005d77a:	4623      	mov	r3, r4
1005d77c:	1e41      	subs	r1, r0, #1
1005d77e:	4188      	sbcs	r0, r1
1005d780:	e4ef      	b.n	1005d162 <LL_cpe_engine+0x17a>
1005d782:	4265      	negs	r5, r4
1005d784:	4165      	adcs	r5, r4
1005d786:	461c      	mov	r4, r3
1005d788:	f7f7 ff4c 	bl	10055624 <phy_upd_csr_ucfg_weak>
1005d78c:	4623      	mov	r3, r4
1005d78e:	1e41      	subs	r1, r0, #1
1005d790:	4188      	sbcs	r0, r1
1005d792:	4028      	ands	r0, r5
1005d794:	e4e5      	b.n	1005d162 <LL_cpe_engine+0x17a>
1005d796:	46c0      	nop			@ (mov r8, r8)

1005d798 <__arm_cp.14_1>:
1005d798:	00000203 	.word	0x00000203

1005d79c <ll_cpe_set_active>:
1005d79c:	b580      	push	{r7, lr}
1005d79e:	f7ff fb87 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005d7a2:	8801      	ldrh	r1, [r0, #0]
1005d7a4:	2201      	movs	r2, #1
1005d7a6:	430a      	orrs	r2, r1
1005d7a8:	8002      	strh	r2, [r0, #0]
1005d7aa:	bd80      	pop	{r7, pc}

1005d7ac <ll_cpe_check_rx_pdu_can_be_processed>:
1005d7ac:	b510      	push	{r4, lr}
1005d7ae:	f7f8 fc2d 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d7b2:	4604      	mov	r4, r0
1005d7b4:	f7f8 fef1 	bl	1005659a <llc_conn_get_rx_ctrl_pdu_full>
1005d7b8:	2800      	cmp	r0, #0
1005d7ba:	d006      	beq.n	1005d7ca <ll_cpe_check_rx_pdu_can_be_processed+0x1e>
1005d7bc:	4620      	mov	r0, r4
1005d7be:	f7f8 fefe 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
1005d7c2:	1ec0      	subs	r0, r0, #3
1005d7c4:	1e41      	subs	r1, r0, #1
1005d7c6:	4188      	sbcs	r0, r1
1005d7c8:	bd10      	pop	{r4, pc}
1005d7ca:	2000      	movs	r0, #0
1005d7cc:	bd10      	pop	{r4, pc}

1005d7ce <ll_cpe_get_blocked_status>:
1005d7ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005d7d0:	4614      	mov	r4, r2
1005d7d2:	4607      	mov	r7, r0
1005d7d4:	424e      	negs	r6, r1
1005d7d6:	414e      	adcs	r6, r1
1005d7d8:	4631      	mov	r1, r6
1005d7da:	f7ff fb76 	bl	1005ceca <LL_cpe_get_active_status>
1005d7de:	2500      	movs	r5, #0
1005d7e0:	2800      	cmp	r0, #0
1005d7e2:	d00b      	beq.n	1005d7fc <ll_cpe_get_blocked_status+0x2e>
1005d7e4:	4638      	mov	r0, r7
1005d7e6:	4631      	mov	r1, r6
1005d7e8:	f7ff fb76 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005d7ec:	2c02      	cmp	r4, #2
1005d7ee:	d805      	bhi.n	1005d7fc <ll_cpe_get_blocked_status+0x2e>
1005d7f0:	7800      	ldrb	r0, [r0, #0]
1005d7f2:	1c61      	adds	r1, r4, #1
1005d7f4:	b2c9      	uxtb	r1, r1
1005d7f6:	40c8      	lsrs	r0, r1
1005d7f8:	2501      	movs	r5, #1
1005d7fa:	4005      	ands	r5, r0
1005d7fc:	4628      	mov	r0, r5
1005d7fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005d800 <ll_cpe_get_expected_opcode>:
1005d800:	b510      	push	{r4, lr}
1005d802:	460c      	mov	r4, r1
1005d804:	f7f8 fc02 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d808:	1900      	adds	r0, r0, r4
1005d80a:	21ae      	movs	r1, #174	@ 0xae
1005d80c:	5c40      	ldrb	r0, [r0, r1]
1005d80e:	bd10      	pop	{r4, pc}

1005d810 <ll_cpe_get_state>:
1005d810:	b510      	push	{r4, lr}
1005d812:	460c      	mov	r4, r1
1005d814:	f7f8 fbfa 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005d818:	1900      	adds	r0, r0, r4
1005d81a:	21aa      	movs	r1, #170	@ 0xaa
1005d81c:	5c40      	ldrb	r0, [r0, r1]
1005d81e:	bd10      	pop	{r4, pc}

1005d820 <LL_cpe_rxctrlpdu_checkreject>:
1005d820:	b5b0      	push	{r4, r5, r7, lr}
1005d822:	460c      	mov	r4, r1
1005d824:	4605      	mov	r5, r0
1005d826:	4610      	mov	r0, r2
1005d828:	4619      	mov	r1, r3
1005d82a:	f7ff fb8d 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005d82e:	4601      	mov	r1, r0
1005d830:	2001      	movs	r0, #1
1005d832:	2d0d      	cmp	r5, #13
1005d834:	d102      	bne.n	1005d83c <LL_cpe_rxctrlpdu_checkreject+0x1c>
1005d836:	2901      	cmp	r1, #1
1005d838:	d100      	bne.n	1005d83c <LL_cpe_rxctrlpdu_checkreject+0x1c>
1005d83a:	bdb0      	pop	{r4, r5, r7, pc}
1005d83c:	2200      	movs	r2, #0
1005d83e:	2d11      	cmp	r5, #17
1005d840:	d001      	beq.n	1005d846 <LL_cpe_rxctrlpdu_checkreject+0x26>
1005d842:	2d07      	cmp	r5, #7
1005d844:	d110      	bne.n	1005d868 <LL_cpe_rxctrlpdu_checkreject+0x48>
1005d846:	2c2a      	cmp	r4, #42	@ 0x2a
1005d848:	d804      	bhi.n	1005d854 <LL_cpe_rxctrlpdu_checkreject+0x34>
1005d84a:	2303      	movs	r3, #3
1005d84c:	4363      	muls	r3, r4
1005d84e:	4d07      	ldr	r5, [pc, #28]	@ (1005d86c <__arm_cp.20_0>)
1005d850:	5ceb      	ldrb	r3, [r5, r3]
1005d852:	e000      	b.n	1005d856 <LL_cpe_rxctrlpdu_checkreject+0x36>
1005d854:	2316      	movs	r3, #22
1005d856:	4299      	cmp	r1, r3
1005d858:	d106      	bne.n	1005d868 <LL_cpe_rxctrlpdu_checkreject+0x48>
1005d85a:	2103      	movs	r1, #3
1005d85c:	4361      	muls	r1, r4
1005d85e:	4b03      	ldr	r3, [pc, #12]	@ (1005d86c <__arm_cp.20_0>)
1005d860:	1859      	adds	r1, r3, r1
1005d862:	7889      	ldrb	r1, [r1, #2]
1005d864:	2900      	cmp	r1, #0
1005d866:	d1e8      	bne.n	1005d83a <LL_cpe_rxctrlpdu_checkreject+0x1a>
1005d868:	4610      	mov	r0, r2
1005d86a:	bdb0      	pop	{r4, r5, r7, pc}

1005d86c <__arm_cp.20_0>:
1005d86c:	1006e9c6 	.word	0x1006e9c6

1005d870 <valid_first_opcode>:
1005d870:	b5b0      	push	{r4, r5, r7, lr}
1005d872:	2300      	movs	r3, #0
1005d874:	282a      	cmp	r0, #42	@ 0x2a
1005d876:	d863      	bhi.n	1005d940 <valid_first_opcode+0xd0>
1005d878:	2403      	movs	r4, #3
1005d87a:	4344      	muls	r4, r0
1005d87c:	4d34      	ldr	r5, [pc, #208]	@ (1005d950 <__arm_cp.21_0>)
1005d87e:	192c      	adds	r4, r5, r4
1005d880:	7864      	ldrb	r4, [r4, #1]
1005d882:	4294      	cmp	r4, r2
1005d884:	d15c      	bne.n	1005d940 <valid_first_opcode+0xd0>
1005d886:	282a      	cmp	r0, #42	@ 0x2a
1005d888:	d85a      	bhi.n	1005d940 <valid_first_opcode+0xd0>
1005d88a:	0080      	lsls	r0, r0, #2
1005d88c:	a201      	add	r2, pc, #4	@ (adr r2, 1005d894 <valid_first_opcode+0x24>)
1005d88e:	5810      	ldr	r0, [r2, r0]
1005d890:	4687      	mov	pc, r0
1005d892:	46c0      	nop			@ (mov r8, r8)
1005d894:	1005d943 	.word	0x1005d943
1005d898:	1005d943 	.word	0x1005d943
1005d89c:	1005d941 	.word	0x1005d941
1005d8a0:	1005d943 	.word	0x1005d943
1005d8a4:	1005d941 	.word	0x1005d941
1005d8a8:	1005d941 	.word	0x1005d941
1005d8ac:	1005d941 	.word	0x1005d941
1005d8b0:	1005d941 	.word	0x1005d941
1005d8b4:	1005d943 	.word	0x1005d943
1005d8b8:	1005d941 	.word	0x1005d941
1005d8bc:	1005d943 	.word	0x1005d943
1005d8c0:	1005d941 	.word	0x1005d941
1005d8c4:	1005d947 	.word	0x1005d947
1005d8c8:	1005d941 	.word	0x1005d941
1005d8cc:	1005d94b 	.word	0x1005d94b
1005d8d0:	1005d941 	.word	0x1005d941
1005d8d4:	1005d941 	.word	0x1005d941
1005d8d8:	1005d941 	.word	0x1005d941
1005d8dc:	1005d947 	.word	0x1005d947
1005d8e0:	1005d941 	.word	0x1005d941
1005d8e4:	1005d947 	.word	0x1005d947
1005d8e8:	1005d941 	.word	0x1005d941
1005d8ec:	1005d947 	.word	0x1005d947
1005d8f0:	1005d941 	.word	0x1005d941
1005d8f4:	1005d941 	.word	0x1005d941
1005d8f8:	1005d941 	.word	0x1005d941
1005d8fc:	1005d947 	.word	0x1005d947
1005d900:	1005d941 	.word	0x1005d941
1005d904:	1005d947 	.word	0x1005d947
1005d908:	1005d947 	.word	0x1005d947
1005d90c:	1005d941 	.word	0x1005d941
1005d910:	1005d943 	.word	0x1005d943
1005d914:	1005d941 	.word	0x1005d941
1005d918:	1005d941 	.word	0x1005d941
1005d91c:	1005d947 	.word	0x1005d947
1005d920:	1005d947 	.word	0x1005d947
1005d924:	1005d941 	.word	0x1005d941
1005d928:	1005d947 	.word	0x1005d947
1005d92c:	1005d947 	.word	0x1005d947
1005d930:	1005d947 	.word	0x1005d947
1005d934:	1005d947 	.word	0x1005d947
1005d938:	1005d947 	.word	0x1005d947
1005d93c:	1005d947 	.word	0x1005d947
1005d940:	4619      	mov	r1, r3
1005d942:	4608      	mov	r0, r1
1005d944:	bdb0      	pop	{r4, r5, r7, pc}
1005d946:	2101      	movs	r1, #1
1005d948:	e7fb      	b.n	1005d942 <valid_first_opcode+0xd2>
1005d94a:	4248      	negs	r0, r1
1005d94c:	4141      	adcs	r1, r0
1005d94e:	e7f8      	b.n	1005d942 <valid_first_opcode+0xd2>

1005d950 <__arm_cp.21_0>:
1005d950:	1006e9c6 	.word	0x1006e9c6

1005d954 <LL_cpe_init_past>:
1005d954:	b580      	push	{r7, lr}
1005d956:	2009      	movs	r0, #9
1005d958:	4901      	ldr	r1, [pc, #4]	@ (1005d960 <__arm_cp.24_0>)
1005d95a:	f7ff faae 	bl	1005ceba <LL_cpe_register_cpf>
1005d95e:	bd80      	pop	{r7, pc}

1005d960 <__arm_cp.24_0>:
1005d960:	1005f43d 	.word	0x1005f43d

1005d964 <LL_cpe_init_conn_update>:
1005d964:	b580      	push	{r7, lr}
1005d966:	2000      	movs	r0, #0
1005d968:	4901      	ldr	r1, [pc, #4]	@ (1005d970 <__arm_cp.28_0>)
1005d96a:	f7ff faa6 	bl	1005ceba <LL_cpe_register_cpf>
1005d96e:	bd80      	pop	{r7, pc}

1005d970 <__arm_cp.28_0>:
1005d970:	1005dfcd 	.word	0x1005dfcd

1005d974 <LL_cpe_init_chmap_update>:
1005d974:	b580      	push	{r7, lr}
1005d976:	2002      	movs	r0, #2
1005d978:	4901      	ldr	r1, [pc, #4]	@ (1005d980 <__arm_cp.29_0>)
1005d97a:	f7ff fa9e 	bl	1005ceba <LL_cpe_register_cpf>
1005d97e:	bd80      	pop	{r7, pc}

1005d980 <__arm_cp.29_0>:
1005d980:	1005de59 	.word	0x1005de59

1005d984 <LL_cpe_init_length_update_ucfg_weak>:
1005d984:	b580      	push	{r7, lr}
1005d986:	2006      	movs	r0, #6
1005d988:	2100      	movs	r1, #0
1005d98a:	f7ff fa96 	bl	1005ceba <LL_cpe_register_cpf>
1005d98e:	bd80      	pop	{r7, pc}

1005d990 <LL_cpe_init_phy_update_ucfg_weak>:
1005d990:	b580      	push	{r7, lr}
1005d992:	2007      	movs	r0, #7
1005d994:	2100      	movs	r1, #0
1005d996:	f7ff fa90 	bl	1005ceba <LL_cpe_register_cpf>
1005d99a:	bd80      	pop	{r7, pc}

1005d99c <LL_cpe_init_cte_ucfg_weak>:
1005d99c:	b580      	push	{r7, lr}
1005d99e:	200a      	movs	r0, #10
1005d9a0:	2100      	movs	r1, #0
1005d9a2:	f7ff fa8a 	bl	1005ceba <LL_cpe_register_cpf>
1005d9a6:	bd80      	pop	{r7, pc}

1005d9a8 <LL_cpe_init_pcl_ucfg_weak>:
1005d9a8:	b580      	push	{r7, lr}
1005d9aa:	200b      	movs	r0, #11
1005d9ac:	2100      	movs	r1, #0
1005d9ae:	f7ff fa84 	bl	1005ceba <LL_cpe_register_cpf>
1005d9b2:	bd80      	pop	{r7, pc}

1005d9b4 <LL_cpe_init_chc_enable_ucfg_weak>:
1005d9b4:	b580      	push	{r7, lr}
1005d9b6:	200c      	movs	r0, #12
1005d9b8:	2100      	movs	r1, #0
1005d9ba:	f7ff fa7e 	bl	1005ceba <LL_cpe_register_cpf>
1005d9be:	bd80      	pop	{r7, pc}

1005d9c0 <LL_cpe_init_chc_reporting_ucfg_weak>:
1005d9c0:	b580      	push	{r7, lr}
1005d9c2:	200d      	movs	r0, #13
1005d9c4:	2100      	movs	r1, #0
1005d9c6:	f7ff fa78 	bl	1005ceba <LL_cpe_register_cpf>
1005d9ca:	bd80      	pop	{r7, pc}

1005d9cc <LL_cpe_init_subrate_ucfg_weak>:
1005d9cc:	b580      	push	{r7, lr}
1005d9ce:	2011      	movs	r0, #17
1005d9d0:	2100      	movs	r1, #0
1005d9d2:	f7ff fa72 	bl	1005ceba <LL_cpe_register_cpf>
1005d9d6:	bd80      	pop	{r7, pc}

1005d9d8 <LL_cpe_init_sca_upd_ucfg_weak>:
1005d9d8:	b580      	push	{r7, lr}
1005d9da:	2012      	movs	r0, #18
1005d9dc:	2100      	movs	r1, #0
1005d9de:	f7ff fa6c 	bl	1005ceba <LL_cpe_register_cpf>
1005d9e2:	bd80      	pop	{r7, pc}

1005d9e4 <LL_cpe_init_cis_ucfg_weak>:
1005d9e4:	b510      	push	{r4, lr}
1005d9e6:	200e      	movs	r0, #14
1005d9e8:	2400      	movs	r4, #0
1005d9ea:	4621      	mov	r1, r4
1005d9ec:	f7ff fa65 	bl	1005ceba <LL_cpe_register_cpf>
1005d9f0:	2010      	movs	r0, #16
1005d9f2:	4621      	mov	r1, r4
1005d9f4:	f7ff fa61 	bl	1005ceba <LL_cpe_register_cpf>
1005d9f8:	bd10      	pop	{r4, pc}
	...

1005d9fc <LL_cpe_init>:
1005d9fc:	b5b0      	push	{r4, r5, r7, lr}
1005d9fe:	2001      	movs	r0, #1
1005da00:	4918      	ldr	r1, [pc, #96]	@ (1005da64 <__arm_cp.47_0>)
1005da02:	4c19      	ldr	r4, [pc, #100]	@ (1005da68 <__arm_cp.47_1>)
1005da04:	47a0      	blx	r4
1005da06:	2003      	movs	r0, #3
1005da08:	4918      	ldr	r1, [pc, #96]	@ (1005da6c <__arm_cp.47_2>)
1005da0a:	47a0      	blx	r4
1005da0c:	2005      	movs	r0, #5
1005da0e:	4918      	ldr	r1, [pc, #96]	@ (1005da70 <__arm_cp.47_3>)
1005da10:	47a0      	blx	r4
1005da12:	2008      	movs	r0, #8
1005da14:	4917      	ldr	r1, [pc, #92]	@ (1005da74 <__arm_cp.47_4>)
1005da16:	47a0      	blx	r4
1005da18:	f7f1 f92e 	bl	1004ec78 <LL_cpe_init_conn_update_ucfg>
1005da1c:	f7f1 f933 	bl	1004ec86 <LL_cpe_init_chmap_update_ucfg>
1005da20:	f7ff ffb0 	bl	1005d984 <LL_cpe_init_length_update_ucfg_weak>
1005da24:	f7ff ffb4 	bl	1005d990 <LL_cpe_init_phy_update_ucfg_weak>
1005da28:	f7f1 f91f 	bl	1004ec6a <LL_cpe_init_past_ucfg>
1005da2c:	f7ff ffb6 	bl	1005d99c <LL_cpe_init_cte_ucfg_weak>
1005da30:	f7ff ffba 	bl	1005d9a8 <LL_cpe_init_pcl_ucfg_weak>
1005da34:	f7ff ffbe 	bl	1005d9b4 <LL_cpe_init_chc_enable_ucfg_weak>
1005da38:	f7ff ffc2 	bl	1005d9c0 <LL_cpe_init_chc_reporting_ucfg_weak>
1005da3c:	f7ff ffd2 	bl	1005d9e4 <LL_cpe_init_cis_ucfg_weak>
1005da40:	f7ff ffc4 	bl	1005d9cc <LL_cpe_init_subrate_ucfg_weak>
1005da44:	f7ff ffc8 	bl	1005d9d8 <LL_cpe_init_sca_upd_ucfg_weak>
1005da48:	2400      	movs	r4, #0
1005da4a:	4d0b      	ldr	r5, [pc, #44]	@ (1005da78 <__arm_cp.47_5>)
1005da4c:	6828      	ldr	r0, [r5, #0]
1005da4e:	2134      	movs	r1, #52	@ 0x34
1005da50:	5c41      	ldrb	r1, [r0, r1]
1005da52:	b2e0      	uxtb	r0, r4
1005da54:	4288      	cmp	r0, r1
1005da56:	d203      	bcs.n	1005da60 <LL_cpe_init+0x64>
1005da58:	f000 f810 	bl	1005da7c <ll_cpe_reset_state_machines>
1005da5c:	1c64      	adds	r4, r4, #1
1005da5e:	e7f5      	b.n	1005da4c <LL_cpe_init+0x50>
1005da60:	bdb0      	pop	{r4, r5, r7, pc}
1005da62:	46c0      	nop			@ (mov r8, r8)

1005da64 <__arm_cp.47_0>:
1005da64:	1005e34d 	.word	0x1005e34d

1005da68 <__arm_cp.47_1>:
1005da68:	1005cebb 	.word	0x1005cebb

1005da6c <__arm_cp.47_2>:
1005da6c:	1005ebe5 	.word	0x1005ebe5

1005da70 <__arm_cp.47_3>:
1005da70:	1005f89d 	.word	0x1005f89d

1005da74 <__arm_cp.47_4>:
1005da74:	1005f1a5 	.word	0x1005f1a5

1005da78 <__arm_cp.47_5>:
1005da78:	2000083c 	.word	0x2000083c

1005da7c <ll_cpe_reset_state_machines>:
1005da7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005da7e:	2638      	movs	r6, #56	@ 0x38
1005da80:	4346      	muls	r6, r0
1005da82:	9000      	str	r0, [sp, #0]
1005da84:	f7f8 fac2 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005da88:	4605      	mov	r5, r0
1005da8a:	4816      	ldr	r0, [pc, #88]	@ (1005dae4 <__arm_cp.48_0>)
1005da8c:	6800      	ldr	r0, [r0, #0]
1005da8e:	219c      	movs	r1, #156	@ 0x9c
1005da90:	5842      	ldr	r2, [r0, r1]
1005da92:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
1005da94:	6892      	ldr	r2, [r2, #8]
1005da96:	1992      	adds	r2, r2, r6
1005da98:	23a0      	movs	r3, #160	@ 0xa0
1005da9a:	50ea      	str	r2, [r5, r3]
1005da9c:	5840      	ldr	r0, [r0, r1]
1005da9e:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
1005daa0:	68c0      	ldr	r0, [r0, #12]
1005daa2:	1980      	adds	r0, r0, r6
1005daa4:	462e      	mov	r6, r5
1005daa6:	36a0      	adds	r6, #160	@ 0xa0
1005daa8:	6070      	str	r0, [r6, #4]
1005daaa:	27ae      	movs	r7, #174	@ 0xae
1005daac:	2fb0      	cmp	r7, #176	@ 0xb0
1005daae:	d00f      	beq.n	1005dad0 <ll_cpe_reset_state_machines+0x54>
1005dab0:	4638      	mov	r0, r7
1005dab2:	38ae      	subs	r0, #174	@ 0xae
1005dab4:	19e9      	adds	r1, r5, r7
1005dab6:	1f09      	subs	r1, r1, #4
1005dab8:	2400      	movs	r4, #0
1005daba:	700c      	strb	r4, [r1, #0]
1005dabc:	b2c1      	uxtb	r1, r0
1005dabe:	9800      	ldr	r0, [sp, #0]
1005dac0:	f7ff fa0a 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005dac4:	7004      	strb	r4, [r0, #0]
1005dac6:	20ff      	movs	r0, #255	@ 0xff
1005dac8:	55e8      	strb	r0, [r5, r7]
1005daca:	74f4      	strb	r4, [r6, #19]
1005dacc:	1c7f      	adds	r7, r7, #1
1005dace:	e7ed      	b.n	1005daac <ll_cpe_reset_state_machines+0x30>
1005dad0:	2400      	movs	r4, #0
1005dad2:	74b4      	strb	r4, [r6, #18]
1005dad4:	9800      	ldr	r0, [sp, #0]
1005dad6:	f7ff f9eb 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005dada:	8004      	strh	r4, [r0, #0]
1005dadc:	4802      	ldr	r0, [pc, #8]	@ (1005dae8 <__arm_cp.48_1>)
1005dade:	8768      	strh	r0, [r5, #58]	@ 0x3a
1005dae0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005dae2:	46c0      	nop			@ (mov r8, r8)

1005dae4 <__arm_cp.48_0>:
1005dae4:	20000894 	.word	0x20000894

1005dae8 <__arm_cp.48_1>:
1005dae8:	0000ffff 	.word	0x0000ffff

1005daec <LL_cpe_conn_exception_opcode_from_sm>:
1005daec:	b580      	push	{r7, lr}
1005daee:	f7ff fa2b 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005daf2:	21fd      	movs	r1, #253	@ 0xfd
1005daf4:	4008      	ands	r0, r1
1005daf6:	4241      	negs	r1, r0
1005daf8:	4148      	adcs	r0, r1
1005dafa:	bd80      	pop	{r7, pc}

1005dafc <LL_cpe_conn_get_proc_id_from_sm>:
1005dafc:	b580      	push	{r7, lr}
1005dafe:	f7ff fa23 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005db02:	bd80      	pop	{r7, pc}

1005db04 <llc_cpe_calc_instant>:
1005db04:	b580      	push	{r7, lr}
1005db06:	f7f8 fa81 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005db0a:	2142      	movs	r1, #66	@ 0x42
1005db0c:	5a41      	ldrh	r1, [r0, r1]
1005db0e:	2291      	movs	r2, #145	@ 0x91
1005db10:	0052      	lsls	r2, r2, #1
1005db12:	5a82      	ldrh	r2, [r0, r2]
1005db14:	8f00      	ldrh	r0, [r0, #56]	@ 0x38
1005db16:	1c40      	adds	r0, r0, #1
1005db18:	4350      	muls	r0, r2
1005db1a:	2206      	movs	r2, #6
1005db1c:	4342      	muls	r2, r0
1005db1e:	1850      	adds	r0, r2, r1
1005db20:	b280      	uxth	r0, r0
1005db22:	bd80      	pop	{r7, pc}

1005db24 <llc_cpe_init_sm_ctxt>:
1005db24:	b5b0      	push	{r4, r5, r7, lr}
1005db26:	4604      	mov	r4, r0
1005db28:	f7ff fe38 	bl	1005d79c <ll_cpe_set_active>
1005db2c:	4620      	mov	r0, r4
1005db2e:	f7f8 fa6d 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005db32:	21aa      	movs	r1, #170	@ 0xaa
1005db34:	2501      	movs	r5, #1
1005db36:	5445      	strb	r5, [r0, r1]
1005db38:	4620      	mov	r0, r4
1005db3a:	f7f8 fa67 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005db3e:	21ab      	movs	r1, #171	@ 0xab
1005db40:	5445      	strb	r5, [r0, r1]
1005db42:	bdb0      	pop	{r4, r5, r7, pc}

1005db44 <ll_cpe_set_state>:
1005db44:	b5b0      	push	{r4, r5, r7, lr}
1005db46:	4614      	mov	r4, r2
1005db48:	460d      	mov	r5, r1
1005db4a:	f7f8 fa5f 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005db4e:	1940      	adds	r0, r0, r5
1005db50:	21aa      	movs	r1, #170	@ 0xaa
1005db52:	5444      	strb	r4, [r0, r1]
1005db54:	bdb0      	pop	{r4, r5, r7, pc}

1005db56 <ll_cpe_get_active>:
1005db56:	b580      	push	{r7, lr}
1005db58:	f7ff f9aa 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005db5c:	8801      	ldrh	r1, [r0, #0]
1005db5e:	2001      	movs	r0, #1
1005db60:	4008      	ands	r0, r1
1005db62:	bd80      	pop	{r7, pc}

1005db64 <ll_cpe_get_rx_pdu_discarded_by_one_sm>:
1005db64:	b580      	push	{r7, lr}
1005db66:	f7ff f9a3 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005db6a:	7800      	ldrb	r0, [r0, #0]
1005db6c:	0740      	lsls	r0, r0, #29
1005db6e:	0fc0      	lsrs	r0, r0, #31
1005db70:	bd80      	pop	{r7, pc}
	...

1005db74 <ll_cpe_process_rx_pdu>:
1005db74:	b5f0      	push	{r4, r5, r6, r7, lr}
1005db76:	b08f      	sub	sp, #60	@ 0x3c
1005db78:	9206      	str	r2, [sp, #24]
1005db7a:	460d      	mov	r5, r1
1005db7c:	4606      	mov	r6, r0
1005db7e:	f7f8 fa45 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005db82:	212c      	movs	r1, #44	@ 0x2c
1005db84:	5c41      	ldrb	r1, [r0, r1]
1005db86:	1ec9      	subs	r1, r1, #3
1005db88:	424a      	negs	r2, r1
1005db8a:	414a      	adcs	r2, r1
1005db8c:	9205      	str	r2, [sp, #20]
1005db8e:	2400      	movs	r4, #0
1005db90:	900a      	str	r0, [sp, #40]	@ 0x28
1005db92:	4621      	mov	r1, r4
1005db94:	f7f8 fce6 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
1005db98:	7841      	ldrb	r1, [r0, #1]
1005db9a:	9104      	str	r1, [sp, #16]
1005db9c:	9009      	str	r0, [sp, #36]	@ 0x24
1005db9e:	8847      	ldrh	r7, [r0, #2]
1005dba0:	4630      	mov	r0, r6
1005dba2:	4629      	mov	r1, r5
1005dba4:	f7ff fe2c 	bl	1005d800 <ll_cpe_get_expected_opcode>
1005dba8:	9003      	str	r0, [sp, #12]
1005dbaa:	4630      	mov	r0, r6
1005dbac:	4629      	mov	r1, r5
1005dbae:	9407      	str	r4, [sp, #28]
1005dbb0:	4622      	mov	r2, r4
1005dbb2:	f7ff fe0c 	bl	1005d7ce <ll_cpe_get_blocked_status>
1005dbb6:	900b      	str	r0, [sp, #44]	@ 0x2c
1005dbb8:	b2fa      	uxtb	r2, r7
1005dbba:	4630      	mov	r0, r6
1005dbbc:	4629      	mov	r1, r5
1005dbbe:	920e      	str	r2, [sp, #56]	@ 0x38
1005dbc0:	f000 f8dd 	bl	1005dd7e <ll_cpe_check_instant_blocked>
1005dbc4:	900c      	str	r0, [sp, #48]	@ 0x30
1005dbc6:	426c      	negs	r4, r5
1005dbc8:	9508      	str	r5, [sp, #32]
1005dbca:	416c      	adcs	r4, r5
1005dbcc:	4630      	mov	r0, r6
1005dbce:	4621      	mov	r1, r4
1005dbd0:	f7ff fe1e 	bl	1005d810 <ll_cpe_get_state>
1005dbd4:	4605      	mov	r5, r0
1005dbd6:	960d      	str	r6, [sp, #52]	@ 0x34
1005dbd8:	4630      	mov	r0, r6
1005dbda:	4621      	mov	r1, r4
1005dbdc:	f7ff fe10 	bl	1005d800 <ll_cpe_get_expected_opcode>
1005dbe0:	463a      	mov	r2, r7
1005dbe2:	1ff9      	subs	r1, r7, #7
1005dbe4:	b2cb      	uxtb	r3, r1
1005dbe6:	2b0b      	cmp	r3, #11
1005dbe8:	d302      	bcc.n	1005dbf0 <ll_cpe_process_rx_pdu+0x7c>
1005dbea:	990e      	ldr	r1, [sp, #56]	@ 0x38
1005dbec:	9f07      	ldr	r7, [sp, #28]
1005dbee:	e001      	b.n	1005dbf4 <ll_cpe_process_rx_pdu+0x80>
1005dbf0:	2701      	movs	r7, #1
1005dbf2:	990e      	ldr	r1, [sp, #56]	@ 0x38
1005dbf4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
1005dbf6:	2e01      	cmp	r6, #1
1005dbf8:	d103      	bne.n	1005dc02 <ll_cpe_process_rx_pdu+0x8e>
1005dbfa:	2d04      	cmp	r5, #4
1005dbfc:	d147      	bne.n	1005dc8e <ll_cpe_process_rx_pdu+0x11a>
1005dbfe:	4288      	cmp	r0, r1
1005dc00:	d145      	bne.n	1005dc8e <ll_cpe_process_rx_pdu+0x11a>
1005dc02:	4955      	ldr	r1, [pc, #340]	@ (1005dd58 <__arm_cp.58_0>)
1005dc04:	40d9      	lsrs	r1, r3
1005dc06:	400f      	ands	r7, r1
1005dc08:	0a16      	lsrs	r6, r2, #8
1005dc0a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1005dc0c:	2901      	cmp	r1, #1
1005dc0e:	d11d      	bne.n	1005dc4c <ll_cpe_process_rx_pdu+0xd8>
1005dc10:	900c      	str	r0, [sp, #48]	@ 0x30
1005dc12:	980e      	ldr	r0, [sp, #56]	@ 0x38
1005dc14:	4631      	mov	r1, r6
1005dc16:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005dc18:	4632      	mov	r2, r6
1005dc1a:	4623      	mov	r3, r4
1005dc1c:	f7ff fe00 	bl	1005d820 <LL_cpe_rxctrlpdu_checkreject>
1005dc20:	2d04      	cmp	r5, #4
1005dc22:	d10c      	bne.n	1005dc3e <ll_cpe_process_rx_pdu+0xca>
1005dc24:	2101      	movs	r1, #1
1005dc26:	404f      	eors	r7, r1
1005dc28:	d101      	bne.n	1005dc2e <ll_cpe_process_rx_pdu+0xba>
1005dc2a:	2800      	cmp	r0, #0
1005dc2c:	d007      	beq.n	1005dc3e <ll_cpe_process_rx_pdu+0xca>
1005dc2e:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005dc30:	990e      	ldr	r1, [sp, #56]	@ 0x38
1005dc32:	1a40      	subs	r0, r0, r1
1005dc34:	1e41      	subs	r1, r0, #1
1005dc36:	4188      	sbcs	r0, r1
1005dc38:	4007      	ands	r7, r0
1005dc3a:	2f01      	cmp	r7, #1
1005dc3c:	d16e      	bne.n	1005dd1c <ll_cpe_process_rx_pdu+0x1a8>
1005dc3e:	4630      	mov	r0, r6
1005dc40:	4621      	mov	r1, r4
1005dc42:	f7ff f981 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005dc46:	4605      	mov	r5, r0
1005dc48:	2605      	movs	r6, #5
1005dc4a:	e026      	b.n	1005dc9a <ll_cpe_process_rx_pdu+0x126>
1005dc4c:	2400      	movs	r4, #0
1005dc4e:	9806      	ldr	r0, [sp, #24]
1005dc50:	2803      	cmp	r0, #3
1005dc52:	d049      	beq.n	1005dce8 <ll_cpe_process_rx_pdu+0x174>
1005dc54:	2801      	cmp	r0, #1
1005dc56:	d144      	bne.n	1005dce2 <ll_cpe_process_rx_pdu+0x16e>
1005dc58:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
1005dc5a:	4630      	mov	r0, r6
1005dc5c:	9905      	ldr	r1, [sp, #20]
1005dc5e:	9a04      	ldr	r2, [sp, #16]
1005dc60:	f7ff fe06 	bl	1005d870 <valid_first_opcode>
1005dc64:	2801      	cmp	r0, #1
1005dc66:	d13c      	bne.n	1005dce2 <ll_cpe_process_rx_pdu+0x16e>
1005dc68:	2401      	movs	r4, #1
1005dc6a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
1005dc6c:	4628      	mov	r0, r5
1005dc6e:	4621      	mov	r1, r4
1005dc70:	f7ff f92b 	bl	1005ceca <LL_cpe_get_active_status>
1005dc74:	4607      	mov	r7, r0
1005dc76:	4628      	mov	r0, r5
1005dc78:	4621      	mov	r1, r4
1005dc7a:	f000 f897 	bl	1005ddac <ll_cpe_get_instant_supported>
1005dc7e:	4605      	mov	r5, r0
1005dc80:	4630      	mov	r0, r6
1005dc82:	f000 f89b 	bl	1005ddbc <LL_cpe_is_opcode_supporting_instant>
1005dc86:	2801      	cmp	r0, #1
1005dc88:	d04a      	beq.n	1005dd20 <ll_cpe_process_rx_pdu+0x1ac>
1005dc8a:	4622      	mov	r2, r4
1005dc8c:	e049      	b.n	1005dd22 <ll_cpe_process_rx_pdu+0x1ae>
1005dc8e:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005dc90:	4621      	mov	r1, r4
1005dc92:	f7ff f959 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005dc96:	4605      	mov	r5, r0
1005dc98:	2604      	movs	r6, #4
1005dc9a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
1005dc9c:	7878      	ldrb	r0, [r7, #1]
1005dc9e:	2110      	movs	r1, #16
1005dca0:	1c80      	adds	r0, r0, #2
1005dca2:	b2c0      	uxtb	r0, r0
1005dca4:	9100      	str	r1, [sp, #0]
1005dca6:	9001      	str	r0, [sp, #4]
1005dca8:	9702      	str	r7, [sp, #8]
1005dcaa:	2401      	movs	r4, #1
1005dcac:	2000      	movs	r0, #0
1005dcae:	4621      	mov	r1, r4
1005dcb0:	4622      	mov	r2, r4
1005dcb2:	4603      	mov	r3, r0
1005dcb4:	f7f2 fb20 	bl	100502f8 <log_notify_stu_ucfg_weak>
1005dcb8:	4628      	mov	r0, r5
1005dcba:	f000 f88f 	bl	1005dddc <LL_cpe_get_cpf>
1005dcbe:	2800      	cmp	r0, #0
1005dcc0:	d00c      	beq.n	1005dcdc <ll_cpe_process_rx_pdu+0x168>
1005dcc2:	4605      	mov	r5, r0
1005dcc4:	4632      	mov	r2, r6
1005dcc6:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1005dcc8:	4630      	mov	r0, r6
1005dcca:	463b      	mov	r3, r7
1005dccc:	9f08      	ldr	r7, [sp, #32]
1005dcce:	4639      	mov	r1, r7
1005dcd0:	47a8      	blx	r5
1005dcd2:	4602      	mov	r2, r0
1005dcd4:	4630      	mov	r0, r6
1005dcd6:	4639      	mov	r1, r7
1005dcd8:	f000 f88d 	bl	1005ddf6 <ll_cpe_set_expected_opcode>
1005dcdc:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005dcde:	f7f8 fb83 	bl	100563e8 <llc_conn_clr_rx_ctrl_pdu_full>
1005dce2:	4620      	mov	r0, r4
1005dce4:	b00f      	add	sp, #60	@ 0x3c
1005dce6:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005dce8:	980d      	ldr	r0, [sp, #52]	@ 0x34
1005dcea:	9d08      	ldr	r5, [sp, #32]
1005dcec:	4629      	mov	r1, r5
1005dcee:	f7ff f92b 	bl	1005cf48 <ll_cpe_get_cpid_from_sm>
1005dcf2:	900c      	str	r0, [sp, #48]	@ 0x30
1005dcf4:	2f00      	cmp	r7, #0
1005dcf6:	d009      	beq.n	1005dd0c <ll_cpe_process_rx_pdu+0x198>
1005dcf8:	980e      	ldr	r0, [sp, #56]	@ 0x38
1005dcfa:	4631      	mov	r1, r6
1005dcfc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1005dcfe:	462b      	mov	r3, r5
1005dd00:	f7ff fd8e 	bl	1005d820 <LL_cpe_rxctrlpdu_checkreject>
1005dd04:	4604      	mov	r4, r0
1005dd06:	2801      	cmp	r0, #1
1005dd08:	d004      	beq.n	1005dd14 <ll_cpe_process_rx_pdu+0x1a0>
1005dd0a:	e7ea      	b.n	1005dce2 <ll_cpe_process_rx_pdu+0x16e>
1005dd0c:	9803      	ldr	r0, [sp, #12]
1005dd0e:	990e      	ldr	r1, [sp, #56]	@ 0x38
1005dd10:	4288      	cmp	r0, r1
1005dd12:	d113      	bne.n	1005dd3c <ll_cpe_process_rx_pdu+0x1c8>
1005dd14:	2603      	movs	r6, #3
1005dd16:	9f09      	ldr	r7, [sp, #36]	@ 0x24
1005dd18:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
1005dd1a:	e7bf      	b.n	1005dc9c <ll_cpe_process_rx_pdu+0x128>
1005dd1c:	2400      	movs	r4, #0
1005dd1e:	e7e0      	b.n	1005dce2 <ll_cpe_process_rx_pdu+0x16e>
1005dd20:	2202      	movs	r2, #2
1005dd22:	4067      	eors	r7, r4
1005dd24:	4065      	eors	r5, r4
1005dd26:	433d      	orrs	r5, r7
1005dd28:	9f09      	ldr	r7, [sp, #36]	@ 0x24
1005dd2a:	d000      	beq.n	1005dd2e <ll_cpe_process_rx_pdu+0x1ba>
1005dd2c:	4622      	mov	r2, r4
1005dd2e:	2e2a      	cmp	r6, #42	@ 0x2a
1005dd30:	d80e      	bhi.n	1005dd50 <ll_cpe_process_rx_pdu+0x1dc>
1005dd32:	2003      	movs	r0, #3
1005dd34:	4370      	muls	r0, r6
1005dd36:	4909      	ldr	r1, [pc, #36]	@ (1005dd5c <__arm_cp.58_1>)
1005dd38:	5c0d      	ldrb	r5, [r1, r0]
1005dd3a:	e00a      	b.n	1005dd52 <ll_cpe_process_rx_pdu+0x1de>
1005dd3c:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005dd3e:	f7f8 fc32 	bl	100565a6 <llc_conn_get_rx_acl_blocked>
1005dd42:	2801      	cmp	r0, #1
1005dd44:	d1cd      	bne.n	1005dce2 <ll_cpe_process_rx_pdu+0x16e>
1005dd46:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005dd48:	2801      	cmp	r0, #1
1005dd4a:	d1ca      	bne.n	1005dce2 <ll_cpe_process_rx_pdu+0x16e>
1005dd4c:	2501      	movs	r5, #1
1005dd4e:	e77b      	b.n	1005dc48 <ll_cpe_process_rx_pdu+0xd4>
1005dd50:	2516      	movs	r5, #22
1005dd52:	4616      	mov	r6, r2
1005dd54:	e7a2      	b.n	1005dc9c <ll_cpe_process_rx_pdu+0x128>
1005dd56:	46c0      	nop			@ (mov r8, r8)

1005dd58 <__arm_cp.58_0>:
1005dd58:	00000441 	.word	0x00000441

1005dd5c <__arm_cp.58_1>:
1005dd5c:	1006e9c6 	.word	0x1006e9c6

1005dd60 <ll_cpe_get_instant_active>:
1005dd60:	b580      	push	{r7, lr}
1005dd62:	f7ff f8b9 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005dd66:	7800      	ldrb	r0, [r0, #0]
1005dd68:	0640      	lsls	r0, r0, #25
1005dd6a:	0fc0      	lsrs	r0, r0, #31
1005dd6c:	bd80      	pop	{r7, pc}

1005dd6e <ll_cpe_clr_rx_pdu_discarded_by_one_sm>:
1005dd6e:	b580      	push	{r7, lr}
1005dd70:	f7ff f89e 	bl	1005ceb0 <LL_cpe_get_ctrl_flds_common_p>
1005dd74:	8801      	ldrh	r1, [r0, #0]
1005dd76:	2204      	movs	r2, #4
1005dd78:	4391      	bics	r1, r2
1005dd7a:	8001      	strh	r1, [r0, #0]
1005dd7c:	bd80      	pop	{r7, pc}

1005dd7e <ll_cpe_check_instant_blocked>:
1005dd7e:	b5b0      	push	{r4, r5, r7, lr}
1005dd80:	460c      	mov	r4, r1
1005dd82:	4605      	mov	r5, r0
1005dd84:	2aff      	cmp	r2, #255	@ 0xff
1005dd86:	d003      	beq.n	1005dd90 <ll_cpe_check_instant_blocked+0x12>
1005dd88:	4610      	mov	r0, r2
1005dd8a:	f000 f817 	bl	1005ddbc <LL_cpe_is_opcode_supporting_instant>
1005dd8e:	e003      	b.n	1005dd98 <ll_cpe_check_instant_blocked+0x1a>
1005dd90:	4628      	mov	r0, r5
1005dd92:	4621      	mov	r1, r4
1005dd94:	f000 f80a 	bl	1005ddac <ll_cpe_get_instant_supported>
1005dd98:	2800      	cmp	r0, #0
1005dd9a:	d005      	beq.n	1005dda8 <ll_cpe_check_instant_blocked+0x2a>
1005dd9c:	2202      	movs	r2, #2
1005dd9e:	4628      	mov	r0, r5
1005dda0:	4621      	mov	r1, r4
1005dda2:	f7ff fd14 	bl	1005d7ce <ll_cpe_get_blocked_status>
1005dda6:	bdb0      	pop	{r4, r5, r7, pc}
1005dda8:	2000      	movs	r0, #0
1005ddaa:	bdb0      	pop	{r4, r5, r7, pc}

1005ddac <ll_cpe_get_instant_supported>:
1005ddac:	b580      	push	{r7, lr}
1005ddae:	f7ff f893 	bl	1005ced8 <ll_cpe_get_ctrl_flds_per_sm_p>
1005ddb2:	7800      	ldrb	r0, [r0, #0]
1005ddb4:	0680      	lsls	r0, r0, #26
1005ddb6:	0fc0      	lsrs	r0, r0, #31
1005ddb8:	bd80      	pop	{r7, pc}
	...

1005ddbc <LL_cpe_is_opcode_supporting_instant>:
1005ddbc:	b510      	push	{r4, lr}
1005ddbe:	4601      	mov	r1, r0
1005ddc0:	2000      	movs	r0, #0
1005ddc2:	a205      	add	r2, pc, #20	@ (adr r2, 1005ddd8 <LL_cpe_is_opcode_supporting_instant+0x1c>)
1005ddc4:	4603      	mov	r3, r0
1005ddc6:	2b04      	cmp	r3, #4
1005ddc8:	d004      	beq.n	1005ddd4 <LL_cpe_is_opcode_supporting_instant+0x18>
1005ddca:	5cd4      	ldrb	r4, [r2, r3]
1005ddcc:	1c5b      	adds	r3, r3, #1
1005ddce:	428c      	cmp	r4, r1
1005ddd0:	d1f9      	bne.n	1005ddc6 <LL_cpe_is_opcode_supporting_instant+0xa>
1005ddd2:	2001      	movs	r0, #1
1005ddd4:	bd10      	pop	{r4, pc}
1005ddd6:	46c0      	nop			@ (mov r8, r8)
1005ddd8:	1f160001 	.word	0x1f160001

1005dddc <LL_cpe_get_cpf>:
1005dddc:	b510      	push	{r4, lr}
1005ddde:	4601      	mov	r1, r0
1005dde0:	3914      	subs	r1, #20
1005dde2:	2903      	cmp	r1, #3
1005dde4:	d201      	bcs.n	1005ddea <LL_cpe_get_cpf+0xe>
1005dde6:	2000      	movs	r0, #0
1005dde8:	bd10      	pop	{r4, pc}
1005ddea:	0084      	lsls	r4, r0, #2
1005ddec:	f7f8 f904 	bl	10055ff8 <llc_conn_get_cntxt_p>
1005ddf0:	6880      	ldr	r0, [r0, #8]
1005ddf2:	5900      	ldr	r0, [r0, r4]
1005ddf4:	bd10      	pop	{r4, pc}

1005ddf6 <ll_cpe_set_expected_opcode>:
1005ddf6:	b5b0      	push	{r4, r5, r7, lr}
1005ddf8:	4614      	mov	r4, r2
1005ddfa:	460d      	mov	r5, r1
1005ddfc:	f7f8 f906 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005de00:	1940      	adds	r0, r0, r5
1005de02:	21ae      	movs	r1, #174	@ 0xae
1005de04:	5444      	strb	r4, [r0, r1]
1005de06:	bdb0      	pop	{r4, r5, r7, pc}

1005de08 <LL_channel_map_update_param_check>:
1005de08:	b5b0      	push	{r4, r5, r7, lr}
1005de0a:	4601      	mov	r1, r0
1005de0c:	7900      	ldrb	r0, [r0, #4]
1005de0e:	281f      	cmp	r0, #31
1005de10:	d811      	bhi.n	1005de36 <LL_channel_map_update_param_check+0x2e>
1005de12:	2000      	movs	r0, #0
1005de14:	4602      	mov	r2, r0
1005de16:	4603      	mov	r3, r0
1005de18:	2a25      	cmp	r2, #37	@ 0x25
1005de1a:	d00f      	beq.n	1005de3c <LL_channel_map_update_param_check+0x34>
1005de1c:	2407      	movs	r4, #7
1005de1e:	4014      	ands	r4, r2
1005de20:	08d5      	lsrs	r5, r2, #3
1005de22:	5d4d      	ldrb	r5, [r1, r5]
1005de24:	40e5      	lsrs	r5, r4
1005de26:	07ec      	lsls	r4, r5, #31
1005de28:	d003      	beq.n	1005de32 <LL_channel_map_update_param_check+0x2a>
1005de2a:	1c5b      	adds	r3, r3, #1
1005de2c:	b2dc      	uxtb	r4, r3
1005de2e:	2c02      	cmp	r4, #2
1005de30:	d003      	beq.n	1005de3a <LL_channel_map_update_param_check+0x32>
1005de32:	1c52      	adds	r2, r2, #1
1005de34:	e7f0      	b.n	1005de18 <LL_channel_map_update_param_check+0x10>
1005de36:	2000      	movs	r0, #0
1005de38:	bdb0      	pop	{r4, r5, r7, pc}
1005de3a:	2001      	movs	r0, #1
1005de3c:	bdb0      	pop	{r4, r5, r7, pc}
	...

1005de40 <LLC_channel_map_copy_to_cpf_context_ucfg_weak>:
1005de40:	b580      	push	{r7, lr}
1005de42:	4904      	ldr	r1, [pc, #16]	@ (1005de54 <__arm_cp.1_0>)
1005de44:	6809      	ldr	r1, [r1, #0]
1005de46:	229c      	movs	r2, #156	@ 0x9c
1005de48:	5889      	ldr	r1, [r1, r2]
1005de4a:	3148      	adds	r1, #72	@ 0x48
1005de4c:	2205      	movs	r2, #5
1005de4e:	f7e6 fda9 	bl	100449a4 <BLEPLAT_MemCpy>
1005de52:	bd80      	pop	{r7, pc}

1005de54 <__arm_cp.1_0>:
1005de54:	20000894 	.word	0x20000894

1005de58 <LL_channel_map_update>:
1005de58:	b5f0      	push	{r4, r5, r6, r7, lr}
1005de5a:	b085      	sub	sp, #20
1005de5c:	461e      	mov	r6, r3
1005de5e:	4617      	mov	r7, r2
1005de60:	4605      	mov	r5, r0
1005de62:	9103      	str	r1, [sp, #12]
1005de64:	f7ff f895 	bl	1005cf92 <LL_cpe_get_cntxt>
1005de68:	4604      	mov	r4, r0
1005de6a:	4628      	mov	r0, r5
1005de6c:	f7f8 f8ce 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005de70:	4602      	mov	r2, r0
1005de72:	1e78      	subs	r0, r7, #1
1005de74:	2806      	cmp	r0, #6
1005de76:	d86c      	bhi.n	1005df52 <LL_channel_map_update+0xfa>
1005de78:	4478      	add	r0, pc
1005de7a:	7900      	ldrb	r0, [r0, #4]
1005de7c:	0040      	lsls	r0, r0, #1
1005de7e:	4487      	add	pc, r0
1005de80:	30680303 	.word	0x30680303
1005de84:	005a3568 	.word	0x005a3568
1005de88:	202c      	movs	r0, #44	@ 0x2c
1005de8a:	5c10      	ldrb	r0, [r2, r0]
1005de8c:	2803      	cmp	r0, #3
1005de8e:	d160      	bne.n	1005df52 <LL_channel_map_update+0xfa>
1005de90:	9202      	str	r2, [sp, #8]
1005de92:	1cf0      	adds	r0, r6, #3
1005de94:	4607      	mov	r7, r0
1005de96:	f7ff ffb7 	bl	1005de08 <LL_channel_map_update_param_check>
1005de9a:	2801      	cmp	r0, #1
1005de9c:	d151      	bne.n	1005df42 <LL_channel_map_update+0xea>
1005de9e:	7a30      	ldrb	r0, [r6, #8]
1005dea0:	9001      	str	r0, [sp, #4]
1005dea2:	7a76      	ldrb	r6, [r6, #9]
1005dea4:	2205      	movs	r2, #5
1005dea6:	4638      	mov	r0, r7
1005dea8:	4621      	mov	r1, r4
1005deaa:	f007 fb49 	bl	10065540 <char_copy>
1005deae:	0230      	lsls	r0, r6, #8
1005deb0:	9901      	ldr	r1, [sp, #4]
1005deb2:	1840      	adds	r0, r0, r1
1005deb4:	b282      	uxth	r2, r0
1005deb6:	9802      	ldr	r0, [sp, #8]
1005deb8:	4621      	mov	r1, r4
1005deba:	f7f8 fdd7 	bl	10056a6c <llc_conn_set_chmap_params>
1005debe:	2600      	movs	r6, #0
1005dec0:	2702      	movs	r7, #2
1005dec2:	4628      	mov	r0, r5
1005dec4:	4631      	mov	r1, r6
1005dec6:	463a      	mov	r2, r7
1005dec8:	f7ff f846 	bl	1005cf58 <LL_cpe_set_blocked>
1005decc:	2301      	movs	r3, #1
1005dece:	4628      	mov	r0, r5
1005ded0:	4631      	mov	r1, r6
1005ded2:	463a      	mov	r2, r7
1005ded4:	f7ff f807 	bl	1005cee6 <LL_cpe_set_active>
1005ded8:	4628      	mov	r0, r5
1005deda:	9903      	ldr	r1, [sp, #12]
1005dedc:	f7ff f871 	bl	1005cfc2 <LL_cpe_set_rx_with_instant>
1005dee0:	e037      	b.n	1005df52 <LL_channel_map_update+0xfa>
1005dee2:	78b0      	ldrb	r0, [r6, #2]
1005dee4:	2801      	cmp	r0, #1
1005dee6:	d030      	beq.n	1005df4a <LL_channel_map_update+0xf2>
1005dee8:	212a      	movs	r1, #42	@ 0x2a
1005deea:	e02f      	b.n	1005df4c <LL_channel_map_update+0xf4>
1005deec:	4628      	mov	r0, r5
1005deee:	9202      	str	r2, [sp, #8]
1005def0:	f7ff fe08 	bl	1005db04 <llc_cpe_calc_instant>
1005def4:	af04      	add	r7, sp, #16
1005def6:	8038      	strh	r0, [r7, #0]
1005def8:	4620      	mov	r0, r4
1005defa:	4629      	mov	r1, r5
1005defc:	f7ff ffa0 	bl	1005de40 <LLC_channel_map_copy_to_cpf_context_ucfg_weak>
1005df00:	2001      	movs	r0, #1
1005df02:	70b0      	strb	r0, [r6, #2]
1005df04:	2008      	movs	r0, #8
1005df06:	7070      	strb	r0, [r6, #1]
1005df08:	2003      	movs	r0, #3
1005df0a:	7030      	strb	r0, [r6, #0]
1005df0c:	1cf1      	adds	r1, r6, #3
1005df0e:	2205      	movs	r2, #5
1005df10:	4620      	mov	r0, r4
1005df12:	f007 fb15 	bl	10065540 <char_copy>
1005df16:	3608      	adds	r6, #8
1005df18:	2202      	movs	r2, #2
1005df1a:	4638      	mov	r0, r7
1005df1c:	4631      	mov	r1, r6
1005df1e:	f007 fb0f 	bl	10065540 <char_copy>
1005df22:	883a      	ldrh	r2, [r7, #0]
1005df24:	9802      	ldr	r0, [sp, #8]
1005df26:	4621      	mov	r1, r4
1005df28:	f7f8 fda0 	bl	10056a6c <llc_conn_set_chmap_params>
1005df2c:	4628      	mov	r0, r5
1005df2e:	9903      	ldr	r1, [sp, #12]
1005df30:	f7ff f838 	bl	1005cfa4 <LL_cpe_set_tx_with_instant>
1005df34:	e00d      	b.n	1005df52 <LL_channel_map_update+0xfa>
1005df36:	2202      	movs	r2, #2
1005df38:	4628      	mov	r0, r5
1005df3a:	9903      	ldr	r1, [sp, #12]
1005df3c:	f7fe ffea 	bl	1005cf14 <LL_cpe_clr_active>
1005df40:	e007      	b.n	1005df52 <LL_channel_map_update+0xfa>
1005df42:	4628      	mov	r0, r5
1005df44:	f7fe ff9c 	bl	1005ce80 <ll_cpe_set_unknown_rsp_pending>
1005df48:	e003      	b.n	1005df52 <LL_channel_map_update+0xfa>
1005df4a:	2123      	movs	r1, #35	@ 0x23
1005df4c:	4610      	mov	r0, r2
1005df4e:	f7f9 f886 	bl	1005705e <llc_conn_disconnect_link_from_cpf>
1005df52:	20ff      	movs	r0, #255	@ 0xff
1005df54:	b005      	add	sp, #20
1005df56:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005df58 <LLC_check_and_start_chan_map_upd_proc>:
1005df58:	b570      	push	{r4, r5, r6, lr}
1005df5a:	4604      	mov	r4, r0
1005df5c:	f7f8 f856 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005df60:	4606      	mov	r6, r0
1005df62:	2501      	movs	r5, #1
1005df64:	4620      	mov	r0, r4
1005df66:	4629      	mov	r1, r5
1005df68:	f7fe ffaf 	bl	1005ceca <LL_cpe_get_active_status>
1005df6c:	2801      	cmp	r0, #1
1005df6e:	d103      	bne.n	1005df78 <LLC_check_and_start_chan_map_upd_proc+0x20>
1005df70:	4630      	mov	r0, r6
1005df72:	f7f8 fd75 	bl	10056a60 <llc_conn_set_chan_map_upd_pending>
1005df76:	e00e      	b.n	1005df96 <LLC_check_and_start_chan_map_upd_proc+0x3e>
1005df78:	4630      	mov	r0, r6
1005df7a:	f7f8 fa1b 	bl	100563b4 <llc_conn_clr_chan_map_upd_pending>
1005df7e:	2501      	movs	r5, #1
1005df80:	4620      	mov	r0, r4
1005df82:	4629      	mov	r1, r5
1005df84:	f7fe fff8 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005df88:	2202      	movs	r2, #2
1005df8a:	4620      	mov	r0, r4
1005df8c:	4629      	mov	r1, r5
1005df8e:	462b      	mov	r3, r5
1005df90:	f7fe ffa9 	bl	1005cee6 <LL_cpe_set_active>
1005df94:	2500      	movs	r5, #0
1005df96:	4628      	mov	r0, r5
1005df98:	bd70      	pop	{r4, r5, r6, pc}

1005df9a <LLC_channel_map_update_offline_processing>:
1005df9a:	b5b0      	push	{r4, r5, r7, lr}
1005df9c:	4604      	mov	r4, r0
1005df9e:	f7f8 f835 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005dfa2:	212c      	movs	r1, #44	@ 0x2c
1005dfa4:	5c41      	ldrb	r1, [r0, r1]
1005dfa6:	2500      	movs	r5, #0
1005dfa8:	2902      	cmp	r1, #2
1005dfaa:	d107      	bne.n	1005dfbc <LLC_channel_map_update_offline_processing+0x22>
1005dfac:	f7f8 fab9 	bl	10056522 <llc_conn_get_chan_map_upd_pending>
1005dfb0:	2800      	cmp	r0, #0
1005dfb2:	d003      	beq.n	1005dfbc <LLC_channel_map_update_offline_processing+0x22>
1005dfb4:	4620      	mov	r0, r4
1005dfb6:	f7ff ffcf 	bl	1005df58 <LLC_check_and_start_chan_map_upd_proc>
1005dfba:	4605      	mov	r5, r0
1005dfbc:	4628      	mov	r0, r5
1005dfbe:	bdb0      	pop	{r4, r5, r7, pc}

1005dfc0 <LLC_conn_init_chc_ctxt_ucfg_weak>:
1005dfc0:	4770      	bx	lr

1005dfc2 <LLC_chc_ll_cntxt_init_ucfg_weak>:
1005dfc2:	4770      	bx	lr

1005dfc4 <LLC_chc_reporting_offline_processing_ucfg_weak>:
1005dfc4:	2000      	movs	r0, #0
1005dfc6:	4770      	bx	lr

1005dfc8 <LL_cpf_cis_processing_ucfg_weak>:
1005dfc8:	4770      	bx	lr
	...

1005dfcc <LL_cpf_conn_upd>:
1005dfcc:	b5f0      	push	{r4, r5, r6, r7, lr}
1005dfce:	b091      	sub	sp, #68	@ 0x44
1005dfd0:	461e      	mov	r6, r3
1005dfd2:	4614      	mov	r4, r2
1005dfd4:	4605      	mov	r5, r0
1005dfd6:	910c      	str	r1, [sp, #48]	@ 0x30
1005dfd8:	f7fe ffdb 	bl	1005cf92 <LL_cpe_get_cntxt>
1005dfdc:	4607      	mov	r7, r0
1005dfde:	4628      	mov	r0, r5
1005dfe0:	f7f8 f814 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005dfe4:	4603      	mov	r3, r0
1005dfe6:	1e60      	subs	r0, r4, #1
1005dfe8:	2807      	cmp	r0, #7
1005dfea:	d900      	bls.n	1005dfee <LL_cpf_conn_upd+0x22>
1005dfec:	e0ce      	b.n	1005e18c <LL_cpf_conn_upd+0x1c0>
1005dfee:	46c0      	nop			@ (mov r8, r8)
1005dff0:	4478      	add	r0, pc
1005dff2:	7900      	ldrb	r0, [r0, #4]
1005dff4:	0040      	lsls	r0, r0, #1
1005dff6:	4487      	add	pc, r0
1005dff8:	22c90303 	.word	0x22c90303
1005dffc:	c47c2fc9 	.word	0xc47c2fc9
1005e000:	4618      	mov	r0, r3
1005e002:	302c      	adds	r0, #44	@ 0x2c
1005e004:	7800      	ldrb	r0, [r0, #0]
1005e006:	2803      	cmp	r0, #3
1005e008:	d000      	beq.n	1005e00c <LL_cpf_conn_upd+0x40>
1005e00a:	e0bf      	b.n	1005e18c <LL_cpf_conn_upd+0x1c0>
1005e00c:	2091      	movs	r0, #145	@ 0x91
1005e00e:	0040      	lsls	r0, r0, #1
1005e010:	930b      	str	r3, [sp, #44]	@ 0x2c
1005e012:	1819      	adds	r1, r3, r0
1005e014:	8973      	ldrh	r3, [r6, #10]
1005e016:	8932      	ldrh	r2, [r6, #8]
1005e018:	88f0      	ldrh	r0, [r6, #6]
1005e01a:	880c      	ldrh	r4, [r1, #0]
1005e01c:	2100      	movs	r1, #0
1005e01e:	9100      	str	r1, [sp, #0]
1005e020:	9101      	str	r1, [sp, #4]
1005e022:	9402      	str	r4, [sp, #8]
1005e024:	900a      	str	r0, [sp, #40]	@ 0x28
1005e026:	4601      	mov	r1, r0
1005e028:	9209      	str	r2, [sp, #36]	@ 0x24
1005e02a:	461c      	mov	r4, r3
1005e02c:	f000 f906 	bl	1005e23c <llc_conn_upd_params_check>
1005e030:	2800      	cmp	r0, #0
1005e032:	d100      	bne.n	1005e036 <LL_cpf_conn_upd+0x6a>
1005e034:	e0ad      	b.n	1005e192 <LL_cpf_conn_upd+0x1c6>
1005e036:	4628      	mov	r0, r5
1005e038:	f7fe ff22 	bl	1005ce80 <ll_cpe_set_unknown_rsp_pending>
1005e03c:	e0a6      	b.n	1005e18c <LL_cpf_conn_upd+0x1c0>
1005e03e:	78b0      	ldrb	r0, [r6, #2]
1005e040:	2123      	movs	r1, #35	@ 0x23
1005e042:	280f      	cmp	r0, #15
1005e044:	460a      	mov	r2, r1
1005e046:	d000      	beq.n	1005e04a <LL_cpf_conn_upd+0x7e>
1005e048:	222a      	movs	r2, #42	@ 0x2a
1005e04a:	2800      	cmp	r0, #0
1005e04c:	d000      	beq.n	1005e050 <LL_cpf_conn_upd+0x84>
1005e04e:	4611      	mov	r1, r2
1005e050:	4618      	mov	r0, r3
1005e052:	f7f9 f804 	bl	1005705e <llc_conn_disconnect_link_from_cpf>
1005e056:	e099      	b.n	1005e18c <LL_cpf_conn_upd+0x1c0>
1005e058:	930b      	str	r3, [sp, #44]	@ 0x2c
1005e05a:	1cb0      	adds	r0, r6, #2
1005e05c:	9008      	str	r0, [sp, #32]
1005e05e:	f7f7 ffcb 	bl	10055ff8 <llc_conn_get_cntxt_p>
1005e062:	9009      	str	r0, [sp, #36]	@ 0x24
1005e064:	4628      	mov	r0, r5
1005e066:	f7ff fd4d 	bl	1005db04 <llc_cpe_calc_instant>
1005e06a:	4604      	mov	r4, r0
1005e06c:	2028      	movs	r0, #40	@ 0x28
1005e06e:	2101      	movs	r1, #1
1005e070:	9107      	str	r1, [sp, #28]
1005e072:	5439      	strb	r1, [r7, r0]
1005e074:	8b38      	ldrh	r0, [r7, #24]
1005e076:	8b79      	ldrh	r1, [r7, #26]
1005e078:	1808      	adds	r0, r1, r0
1005e07a:	0840      	lsrs	r0, r0, #1
1005e07c:	9010      	str	r0, [sp, #64]	@ 0x40
1005e07e:	8bb8      	ldrh	r0, [r7, #28]
1005e080:	9006      	str	r0, [sp, #24]
1005e082:	8bf8      	ldrh	r0, [r7, #30]
1005e084:	9005      	str	r0, [sp, #20]
1005e086:	a80d      	add	r0, sp, #52	@ 0x34
1005e088:	7105      	strb	r5, [r0, #4]
1005e08a:	a910      	add	r1, sp, #64	@ 0x40
1005e08c:	910f      	str	r1, [sp, #60]	@ 0x3c
1005e08e:	970d      	str	r7, [sp, #52]	@ 0x34
1005e090:	f000 f955 	bl	1005e33e <LL_conn_upd_max_tx_time_coded_ucfg_weak>
1005e094:	9810      	ldr	r0, [sp, #64]	@ 0x40
1005e096:	8338      	strh	r0, [r7, #24]
1005e098:	940a      	str	r4, [sp, #40]	@ 0x28
1005e09a:	0421      	lsls	r1, r4, #16
1005e09c:	9a05      	ldr	r2, [sp, #20]
1005e09e:	1889      	adds	r1, r1, r2
1005e0a0:	9104      	str	r1, [sp, #16]
1005e0a2:	9c06      	ldr	r4, [sp, #24]
1005e0a4:	0423      	lsls	r3, r4, #16
1005e0a6:	4303      	orrs	r3, r0
1005e0a8:	9808      	ldr	r0, [sp, #32]
1005e0aa:	4962      	ldr	r1, [pc, #392]	@ (1005e234 <__arm_cp.0_2>)
1005e0ac:	c00a      	stmia	r0!, {r1, r3}
1005e0ae:	9904      	ldr	r1, [sp, #16]
1005e0b0:	6001      	str	r1, [r0, #0]
1005e0b2:	4861      	ldr	r0, [pc, #388]	@ (1005e238 <__arm_cp.0_3>)
1005e0b4:	8030      	strh	r0, [r6, #0]
1005e0b6:	2003      	movs	r0, #3
1005e0b8:	0240      	lsls	r0, r0, #9
1005e0ba:	0311      	lsls	r1, r2, #12
1005e0bc:	60fc      	str	r4, [r7, #12]
1005e0be:	6139      	str	r1, [r7, #16]
1005e0c0:	9907      	ldr	r1, [sp, #28]
1005e0c2:	0249      	lsls	r1, r1, #9
1005e0c4:	c703      	stmia	r7!, {r0, r1}
1005e0c6:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e0c8:	6800      	ldr	r0, [r0, #0]
1005e0ca:	8b79      	ldrh	r1, [r7, #26]
1005e0cc:	0209      	lsls	r1, r1, #8
1005e0ce:	3f08      	subs	r7, #8
1005e0d0:	4288      	cmp	r0, r1
1005e0d2:	d300      	bcc.n	1005e0d6 <LL_cpf_conn_upd+0x10a>
1005e0d4:	4608      	mov	r0, r1
1005e0d6:	6178      	str	r0, [r7, #20]
1005e0d8:	9810      	ldr	r0, [sp, #64]	@ 0x40
1005e0da:	0240      	lsls	r0, r0, #9
1005e0dc:	60b8      	str	r0, [r7, #8]
1005e0de:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005e0e0:	4639      	mov	r1, r7
1005e0e2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1005e0e4:	f7f8 fccb 	bl	10056a7e <llc_conn_set_conn_update_params>
1005e0e8:	4628      	mov	r0, r5
1005e0ea:	990c      	ldr	r1, [sp, #48]	@ 0x30
1005e0ec:	f7fe ff5a 	bl	1005cfa4 <LL_cpe_set_tx_with_instant>
1005e0f0:	e04c      	b.n	1005e18c <LL_cpf_conn_upd+0x1c0>
1005e0f2:	2028      	movs	r0, #40	@ 0x28
1005e0f4:	5c38      	ldrb	r0, [r7, r0]
1005e0f6:	2801      	cmp	r0, #1
1005e0f8:	d143      	bne.n	1005e182 <LL_cpf_conn_upd+0x1b6>
1005e0fa:	461c      	mov	r4, r3
1005e0fc:	a80d      	add	r0, sp, #52	@ 0x34
1005e0fe:	7105      	strb	r5, [r0, #4]
1005e100:	970d      	str	r7, [sp, #52]	@ 0x34
1005e102:	f000 f91d 	bl	1005e340 <LL_conn_upd_data_length_change_event_ucfg_weak>
1005e106:	4849      	ldr	r0, [pc, #292]	@ (1005e22c <__arm_cp.0_0>)
1005e108:	6800      	ldr	r0, [r0, #0]
1005e10a:	213d      	movs	r1, #61	@ 0x3d
1005e10c:	5c41      	ldrb	r1, [r0, r1]
1005e10e:	0689      	lsls	r1, r1, #26
1005e110:	d532      	bpl.n	1005e178 <LL_cpf_conn_upd+0x1ac>
1005e112:	303d      	adds	r0, #61	@ 0x3d
1005e114:	7a40      	ldrb	r0, [r0, #9]
1005e116:	0740      	lsls	r0, r0, #29
1005e118:	d52e      	bpl.n	1005e178 <LL_cpf_conn_upd+0x1ac>
1005e11a:	8bf8      	ldrh	r0, [r7, #30]
1005e11c:	900a      	str	r0, [sp, #40]	@ 0x28
1005e11e:	8bb8      	ldrh	r0, [r7, #28]
1005e120:	9009      	str	r0, [sp, #36]	@ 0x24
1005e122:	8b3f      	ldrh	r7, [r7, #24]
1005e124:	8f64      	ldrh	r4, [r4, #58]	@ 0x3a
1005e126:	4842      	ldr	r0, [pc, #264]	@ (1005e230 <__arm_cp.0_1>)
1005e128:	6800      	ldr	r0, [r0, #0]
1005e12a:	6900      	ldr	r0, [r0, #16]
1005e12c:	2180      	movs	r1, #128	@ 0x80
1005e12e:	2224      	movs	r2, #36	@ 0x24
1005e130:	2604      	movs	r6, #4
1005e132:	4633      	mov	r3, r6
1005e134:	f7f2 f8e4 	bl	10050300 <aci_event_fifo_push_header>
1005e138:	2800      	cmp	r0, #0
1005e13a:	d01d      	beq.n	1005e178 <LL_cpf_conn_upd+0x1ac>
1005e13c:	4601      	mov	r1, r0
1005e13e:	300b      	adds	r0, #11
1005e140:	724c      	strb	r4, [r1, #9]
1005e142:	7007      	strb	r7, [r0, #0]
1005e144:	970b      	str	r7, [sp, #44]	@ 0x2c
1005e146:	9f09      	ldr	r7, [sp, #36]	@ 0x24
1005e148:	734f      	strb	r7, [r1, #13]
1005e14a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005e14c:	7103      	strb	r3, [r0, #4]
1005e14e:	2200      	movs	r2, #0
1005e150:	720a      	strb	r2, [r1, #8]
1005e152:	2203      	movs	r2, #3
1005e154:	71ca      	strb	r2, [r1, #7]
1005e156:	220a      	movs	r2, #10
1005e158:	718a      	strb	r2, [r1, #6]
1005e15a:	223e      	movs	r2, #62	@ 0x3e
1005e15c:	714a      	strb	r2, [r1, #5]
1005e15e:	710e      	strb	r6, [r1, #4]
1005e160:	0a22      	lsrs	r2, r4, #8
1005e162:	728a      	strb	r2, [r1, #10]
1005e164:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1005e166:	0a12      	lsrs	r2, r2, #8
1005e168:	7042      	strb	r2, [r0, #1]
1005e16a:	0a3a      	lsrs	r2, r7, #8
1005e16c:	738a      	strb	r2, [r1, #14]
1005e16e:	0a1a      	lsrs	r2, r3, #8
1005e170:	7142      	strb	r2, [r0, #5]
1005e172:	2080      	movs	r0, #128	@ 0x80
1005e174:	f7f2 f961 	bl	1005043a <aci_event_fifo_push>
1005e178:	2100      	movs	r1, #0
1005e17a:	4628      	mov	r0, r5
1005e17c:	460a      	mov	r2, r1
1005e17e:	f000 fe94 	bl	1005eeaa <LLC_update_le_ping_params>
1005e182:	2200      	movs	r2, #0
1005e184:	4628      	mov	r0, r5
1005e186:	990c      	ldr	r1, [sp, #48]	@ 0x30
1005e188:	f7fe fec4 	bl	1005cf14 <LL_cpe_clr_active>
1005e18c:	20ff      	movs	r0, #255	@ 0xff
1005e18e:	b011      	add	sp, #68	@ 0x44
1005e190:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e192:	78f0      	ldrb	r0, [r6, #3]
1005e194:	2800      	cmp	r0, #0
1005e196:	d100      	bne.n	1005e19a <LL_cpf_conn_upd+0x1ce>
1005e198:	e74d      	b.n	1005e036 <LL_cpf_conn_upd+0x6a>
1005e19a:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005e19c:	1e49      	subs	r1, r1, #1
1005e19e:	2908      	cmp	r1, #8
1005e1a0:	d300      	bcc.n	1005e1a4 <LL_cpf_conn_upd+0x1d8>
1005e1a2:	2108      	movs	r1, #8
1005e1a4:	4281      	cmp	r1, r0
1005e1a6:	d200      	bcs.n	1005e1aa <LL_cpf_conn_upd+0x1de>
1005e1a8:	e745      	b.n	1005e036 <LL_cpf_conn_upd+0x6a>
1005e1aa:	88b2      	ldrh	r2, [r6, #4]
1005e1ac:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005e1ae:	428a      	cmp	r2, r1
1005e1b0:	d900      	bls.n	1005e1b4 <LL_cpf_conn_upd+0x1e8>
1005e1b2:	e740      	b.n	1005e036 <LL_cpf_conn_upd+0x6a>
1005e1b4:	83fc      	strh	r4, [r7, #30]
1005e1b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e1b8:	83b9      	strh	r1, [r7, #28]
1005e1ba:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1005e1bc:	833b      	strh	r3, [r7, #24]
1005e1be:	837b      	strh	r3, [r7, #26]
1005e1c0:	0324      	lsls	r4, r4, #12
1005e1c2:	025b      	lsls	r3, r3, #9
1005e1c4:	0252      	lsls	r2, r2, #9
1005e1c6:	0240      	lsls	r0, r0, #9
1005e1c8:	c70d      	stmia	r7!, {r0, r2, r3}
1005e1ca:	6039      	str	r1, [r7, #0]
1005e1cc:	607c      	str	r4, [r7, #4]
1005e1ce:	990b      	ldr	r1, [sp, #44]	@ 0x2c
1005e1d0:	6cca      	ldr	r2, [r1, #76]	@ 0x4c
1005e1d2:	2001      	movs	r0, #1
1005e1d4:	3f0c      	subs	r7, #12
1005e1d6:	429a      	cmp	r2, r3
1005e1d8:	d107      	bne.n	1005e1ea <LL_cpf_conn_upd+0x21e>
1005e1da:	6e8a      	ldr	r2, [r1, #104]	@ 0x68
1005e1dc:	4294      	cmp	r4, r2
1005e1de:	d104      	bne.n	1005e1ea <LL_cpf_conn_upd+0x21e>
1005e1e0:	8f08      	ldrh	r0, [r1, #56]	@ 0x38
1005e1e2:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e1e4:	1a08      	subs	r0, r1, r0
1005e1e6:	1e41      	subs	r1, r0, #1
1005e1e8:	4188      	sbcs	r0, r1
1005e1ea:	2128      	movs	r1, #40	@ 0x28
1005e1ec:	5478      	strb	r0, [r7, r1]
1005e1ee:	980a      	ldr	r0, [sp, #40]	@ 0x28
1005e1f0:	9010      	str	r0, [sp, #64]	@ 0x40
1005e1f2:	a80d      	add	r0, sp, #52	@ 0x34
1005e1f4:	7105      	strb	r5, [r0, #4]
1005e1f6:	a910      	add	r1, sp, #64	@ 0x40
1005e1f8:	910f      	str	r1, [sp, #60]	@ 0x3c
1005e1fa:	970d      	str	r7, [sp, #52]	@ 0x34
1005e1fc:	f000 f89f 	bl	1005e33e <LL_conn_upd_max_tx_time_coded_ucfg_weak>
1005e200:	2202      	movs	r2, #2
1005e202:	4628      	mov	r0, r5
1005e204:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
1005e206:	4621      	mov	r1, r4
1005e208:	f7fe fea6 	bl	1005cf58 <LL_cpe_set_blocked>
1005e20c:	2200      	movs	r2, #0
1005e20e:	2301      	movs	r3, #1
1005e210:	4628      	mov	r0, r5
1005e212:	4621      	mov	r1, r4
1005e214:	f7fe fe67 	bl	1005cee6 <LL_cpe_set_active>
1005e218:	89b2      	ldrh	r2, [r6, #12]
1005e21a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1005e21c:	4639      	mov	r1, r7
1005e21e:	f7f8 fc2e 	bl	10056a7e <llc_conn_set_conn_update_params>
1005e222:	4628      	mov	r0, r5
1005e224:	4621      	mov	r1, r4
1005e226:	f7fe fecc 	bl	1005cfc2 <LL_cpe_set_rx_with_instant>
1005e22a:	e7af      	b.n	1005e18c <LL_cpf_conn_upd+0x1c0>

1005e22c <__arm_cp.0_0>:
1005e22c:	20000894 	.word	0x20000894

1005e230 <__arm_cp.0_1>:
1005e230:	20000840 	.word	0x20000840

1005e234 <__arm_cp.0_2>:
1005e234:	00010300 	.word	0x00010300

1005e238 <__arm_cp.0_3>:
1005e238:	00000c03 	.word	0x00000c03

1005e23c <llc_conn_upd_params_check>:
1005e23c:	b570      	push	{r4, r5, r6, lr}
1005e23e:	4604      	mov	r4, r0
1005e240:	2012      	movs	r0, #18
1005e242:	2c06      	cmp	r4, #6
1005e244:	d31c      	bcc.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e246:	2519      	movs	r5, #25
1005e248:	01ed      	lsls	r5, r5, #7
1005e24a:	42ac      	cmp	r4, r5
1005e24c:	d818      	bhi.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e24e:	2906      	cmp	r1, #6
1005e250:	d316      	bcc.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e252:	42a9      	cmp	r1, r5
1005e254:	d814      	bhi.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e256:	42a1      	cmp	r1, r4
1005e258:	d312      	bcc.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e25a:	0894      	lsrs	r4, r2, #2
1005e25c:	2c7c      	cmp	r4, #124	@ 0x7c
1005e25e:	d80f      	bhi.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e260:	9c05      	ldr	r4, [sp, #20]
1005e262:	9e04      	ldr	r6, [sp, #16]
1005e264:	42b4      	cmp	r4, r6
1005e266:	d30b      	bcc.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e268:	2b0a      	cmp	r3, #10
1005e26a:	d309      	bcc.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e26c:	42ab      	cmp	r3, r5
1005e26e:	d807      	bhi.n	1005e280 <llc_conn_upd_params_check+0x44>
1005e270:	9806      	ldr	r0, [sp, #24]
1005e272:	1c52      	adds	r2, r2, #1
1005e274:	434a      	muls	r2, r1
1005e276:	4342      	muls	r2, r0
1005e278:	0890      	lsrs	r0, r2, #2
1005e27a:	4283      	cmp	r3, r0
1005e27c:	d801      	bhi.n	1005e282 <llc_conn_upd_params_check+0x46>
1005e27e:	2012      	movs	r0, #18
1005e280:	bd70      	pop	{r4, r5, r6, pc}
1005e282:	2000      	movs	r0, #0
1005e284:	bd70      	pop	{r4, r5, r6, pc}

1005e286 <LL_Start_Connection_Update>:
1005e286:	b5f0      	push	{r4, r5, r6, r7, lr}
1005e288:	b089      	sub	sp, #36	@ 0x24
1005e28a:	460c      	mov	r4, r1
1005e28c:	0a01      	lsrs	r1, r0, #8
1005e28e:	290e      	cmp	r1, #14
1005e290:	d901      	bls.n	1005e296 <LL_Start_Connection_Update+0x10>
1005e292:	2712      	movs	r7, #18
1005e294:	e050      	b.n	1005e338 <LL_Start_Connection_Update+0xb2>
1005e296:	461f      	mov	r7, r3
1005e298:	4616      	mov	r6, r2
1005e29a:	f7f7 fec5 	bl	10056028 <llc_conn_get_cntxt_per_p_from_handle>
1005e29e:	2800      	cmp	r0, #0
1005e2a0:	d008      	beq.n	1005e2b4 <LL_Start_Connection_Update+0x2e>
1005e2a2:	4605      	mov	r5, r0
1005e2a4:	9408      	str	r4, [sp, #32]
1005e2a6:	4604      	mov	r4, r0
1005e2a8:	342c      	adds	r4, #44	@ 0x2c
1005e2aa:	7820      	ldrb	r0, [r4, #0]
1005e2ac:	2803      	cmp	r0, #3
1005e2ae:	d103      	bne.n	1005e2b8 <LL_Start_Connection_Update+0x32>
1005e2b0:	270c      	movs	r7, #12
1005e2b2:	e041      	b.n	1005e338 <LL_Start_Connection_Update+0xb2>
1005e2b4:	2702      	movs	r7, #2
1005e2b6:	e03f      	b.n	1005e338 <LL_Start_Connection_Update+0xb2>
1005e2b8:	9606      	str	r6, [sp, #24]
1005e2ba:	9707      	str	r7, [sp, #28]
1005e2bc:	7926      	ldrb	r6, [r4, #4]
1005e2be:	2101      	movs	r1, #1
1005e2c0:	4630      	mov	r0, r6
1005e2c2:	f7fe fe02 	bl	1005ceca <LL_cpe_get_active_status>
1005e2c6:	273a      	movs	r7, #58	@ 0x3a
1005e2c8:	2801      	cmp	r0, #1
1005e2ca:	d035      	beq.n	1005e338 <LL_Start_Connection_Update+0xb2>
1005e2cc:	7920      	ldrb	r0, [r4, #4]
1005e2ce:	f7fe fb5b 	bl	1005c988 <llc_subrate_get_active_sr_req_proc_ucfg_weak>
1005e2d2:	2801      	cmp	r0, #1
1005e2d4:	d030      	beq.n	1005e338 <LL_Start_Connection_Update+0xb2>
1005e2d6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1005e2d8:	990f      	ldr	r1, [sp, #60]	@ 0x3c
1005e2da:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
1005e2dc:	2091      	movs	r0, #145	@ 0x91
1005e2de:	0040      	lsls	r0, r0, #1
1005e2e0:	1828      	adds	r0, r5, r0
1005e2e2:	8800      	ldrh	r0, [r0, #0]
1005e2e4:	9105      	str	r1, [sp, #20]
1005e2e6:	9100      	str	r1, [sp, #0]
1005e2e8:	9204      	str	r2, [sp, #16]
1005e2ea:	9201      	str	r2, [sp, #4]
1005e2ec:	9002      	str	r0, [sp, #8]
1005e2ee:	9808      	ldr	r0, [sp, #32]
1005e2f0:	9906      	ldr	r1, [sp, #24]
1005e2f2:	9a07      	ldr	r2, [sp, #28]
1005e2f4:	4623      	mov	r3, r4
1005e2f6:	f7ff ffa1 	bl	1005e23c <llc_conn_upd_params_check>
1005e2fa:	4607      	mov	r7, r0
1005e2fc:	2800      	cmp	r0, #0
1005e2fe:	d11b      	bne.n	1005e338 <LL_Start_Connection_Update+0xb2>
1005e300:	4627      	mov	r7, r4
1005e302:	2401      	movs	r4, #1
1005e304:	4630      	mov	r0, r6
1005e306:	4621      	mov	r1, r4
1005e308:	f7fe fe43 	bl	1005cf92 <LL_cpe_get_cntxt>
1005e30c:	9904      	ldr	r1, [sp, #16]
1005e30e:	8441      	strh	r1, [r0, #34]	@ 0x22
1005e310:	9905      	ldr	r1, [sp, #20]
1005e312:	8401      	strh	r1, [r0, #32]
1005e314:	9906      	ldr	r1, [sp, #24]
1005e316:	8341      	strh	r1, [r0, #26]
1005e318:	9908      	ldr	r1, [sp, #32]
1005e31a:	8301      	strh	r1, [r0, #24]
1005e31c:	83c7      	strh	r7, [r0, #30]
1005e31e:	9907      	ldr	r1, [sp, #28]
1005e320:	8381      	strh	r1, [r0, #28]
1005e322:	4630      	mov	r0, r6
1005e324:	4621      	mov	r1, r4
1005e326:	f7fe fe27 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005e32a:	2700      	movs	r7, #0
1005e32c:	4630      	mov	r0, r6
1005e32e:	4621      	mov	r1, r4
1005e330:	463a      	mov	r2, r7
1005e332:	4623      	mov	r3, r4
1005e334:	f7fe fdd7 	bl	1005cee6 <LL_cpe_set_active>
1005e338:	4638      	mov	r0, r7
1005e33a:	b009      	add	sp, #36	@ 0x24
1005e33c:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005e33e <LL_conn_upd_max_tx_time_coded_ucfg_weak>:
1005e33e:	4770      	bx	lr

1005e340 <LL_conn_upd_data_length_change_event_ucfg_weak>:
1005e340:	4770      	bx	lr

1005e342 <llc_conn_init_cte_ctxt_ucfg_weak>:
1005e342:	4770      	bx	lr

1005e344 <LLC_cte_request_procedure_ucfg_weak>:
1005e344:	2000      	movs	r0, #0
1005e346:	4770      	bx	lr

1005e348 <llc_cte_process_rx_cte_ucfg_weak>:
1005e348:	4770      	bx	lr
	...

1005e34c <LL_encryption>:
1005e34c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005e34e:	b08d      	sub	sp, #52	@ 0x34
1005e350:	9309      	str	r3, [sp, #36]	@ 0x24
1005e352:	4617      	mov	r7, r2
1005e354:	460d      	mov	r5, r1
1005e356:	4606      	mov	r6, r0
1005e358:	f7fe fe1b 	bl	1005cf92 <LL_cpe_get_cntxt>
1005e35c:	4604      	mov	r4, r0
1005e35e:	9608      	str	r6, [sp, #32]
1005e360:	4630      	mov	r0, r6
1005e362:	f7f7 fe53 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005e366:	4603      	mov	r3, r0
1005e368:	2f05      	cmp	r7, #5
1005e36a:	d107      	bne.n	1005e37c <LL_encryption+0x30>
1005e36c:	213d      	movs	r1, #61	@ 0x3d
1005e36e:	4618      	mov	r0, r3
1005e370:	f7f8 fe75 	bl	1005705e <llc_conn_disconnect_link_from_cpf>
1005e374:	27ff      	movs	r7, #255	@ 0xff
1005e376:	4638      	mov	r0, r7
1005e378:	b00d      	add	sp, #52	@ 0x34
1005e37a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005e37c:	9407      	str	r4, [sp, #28]
1005e37e:	4622      	mov	r2, r4
1005e380:	3228      	adds	r2, #40	@ 0x28
1005e382:	461e      	mov	r6, r3
1005e384:	362c      	adds	r6, #44	@ 0x2c
1005e386:	7830      	ldrb	r0, [r6, #0]
1005e388:	2802      	cmp	r0, #2
1005e38a:	d129      	bne.n	1005e3e0 <LL_encryption+0x94>
1005e38c:	7810      	ldrb	r0, [r2, #0]
1005e38e:	1e40      	subs	r0, r0, #1
1005e390:	27ff      	movs	r7, #255	@ 0xff
1005e392:	280b      	cmp	r0, #11
1005e394:	d8ef      	bhi.n	1005e376 <LL_encryption+0x2a>
1005e396:	0040      	lsls	r0, r0, #1
1005e398:	4478      	add	r0, pc
1005e39a:	8880      	ldrh	r0, [r0, #4]
1005e39c:	0040      	lsls	r0, r0, #1
1005e39e:	4487      	add	pc, r0
1005e3a0:	00a4000b 	.word	0x00a4000b
1005e3a4:	00c200a7 	.word	0x00c200a7
1005e3a8:	00d000cc 	.word	0x00d000cc
1005e3ac:	01370133 	.word	0x01370133
1005e3b0:	016f015f 	.word	0x016f015f
1005e3b4:	0181017e 	.word	0x0181017e
1005e3b8:	200a      	movs	r0, #10
1005e3ba:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e3bc:	7088      	strb	r0, [r1, #2]
1005e3be:	27ff      	movs	r7, #255	@ 0xff
1005e3c0:	4638      	mov	r0, r7
1005e3c2:	3004      	adds	r0, #4
1005e3c4:	8008      	strh	r0, [r1, #0]
1005e3c6:	2101      	movs	r1, #1
1005e3c8:	9808      	ldr	r0, [sp, #32]
1005e3ca:	4615      	mov	r5, r2
1005e3cc:	460a      	mov	r2, r1
1005e3ce:	461c      	mov	r4, r3
1005e3d0:	f7fe fdc2 	bl	1005cf58 <LL_cpe_set_blocked>
1005e3d4:	4620      	mov	r0, r4
1005e3d6:	f7f8 fb85 	bl	10056ae4 <llc_conn_set_tx_acl_blocked>
1005e3da:	2002      	movs	r0, #2
1005e3dc:	7028      	strb	r0, [r5, #0]
1005e3de:	e7ca      	b.n	1005e376 <LL_encryption+0x2a>
1005e3e0:	2f01      	cmp	r7, #1
1005e3e2:	d12e      	bne.n	1005e442 <LL_encryption+0xf6>
1005e3e4:	2000      	movs	r0, #0
1005e3e6:	7050      	strb	r0, [r2, #1]
1005e3e8:	9206      	str	r2, [sp, #24]
1005e3ea:	2500      	movs	r5, #0
1005e3ec:	461e      	mov	r6, r3
1005e3ee:	4618      	mov	r0, r3
1005e3f0:	4629      	mov	r1, r5
1005e3f2:	f7f8 f8bd 	bl	10056570 <llc_conn_get_enc_on>
1005e3f6:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e3f8:	7889      	ldrb	r1, [r1, #2]
1005e3fa:	2903      	cmp	r1, #3
1005e3fc:	d157      	bne.n	1005e4ae <LL_encryption+0x162>
1005e3fe:	2800      	cmp	r0, #0
1005e400:	4633      	mov	r3, r6
1005e402:	9f07      	ldr	r7, [sp, #28]
1005e404:	d1b2      	bne.n	1005e36c <LL_encryption+0x20>
1005e406:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1005e408:	1ce0      	adds	r0, r4, #3
1005e40a:	4639      	mov	r1, r7
1005e40c:	3130      	adds	r1, #48	@ 0x30
1005e40e:	2208      	movs	r2, #8
1005e410:	9205      	str	r2, [sp, #20]
1005e412:	4b19      	ldr	r3, [pc, #100]	@ (1005e478 <LL_encryption+0x12c>)
1005e414:	4798      	blx	r3
1005e416:	4620      	mov	r0, r4
1005e418:	300b      	adds	r0, #11
1005e41a:	4639      	mov	r1, r7
1005e41c:	312e      	adds	r1, #46	@ 0x2e
1005e41e:	2202      	movs	r2, #2
1005e420:	4b15      	ldr	r3, [pc, #84]	@ (1005e478 <LL_encryption+0x12c>)
1005e422:	4798      	blx	r3
1005e424:	4620      	mov	r0, r4
1005e426:	300d      	adds	r0, #13
1005e428:	4639      	mov	r1, r7
1005e42a:	9a05      	ldr	r2, [sp, #20]
1005e42c:	4b12      	ldr	r3, [pc, #72]	@ (1005e478 <LL_encryption+0x12c>)
1005e42e:	4798      	blx	r3
1005e430:	3415      	adds	r4, #21
1005e432:	3720      	adds	r7, #32
1005e434:	2204      	movs	r2, #4
1005e436:	4620      	mov	r0, r4
1005e438:	4639      	mov	r1, r7
1005e43a:	4b0f      	ldr	r3, [pc, #60]	@ (1005e478 <LL_encryption+0x12c>)
1005e43c:	4798      	blx	r3
1005e43e:	2005      	movs	r0, #5
1005e440:	e03b      	b.n	1005e4ba <LL_encryption+0x16e>
1005e442:	7850      	ldrb	r0, [r2, #1]
1005e444:	27ff      	movs	r7, #255	@ 0xff
1005e446:	280d      	cmp	r0, #13
1005e448:	d895      	bhi.n	1005e376 <LL_encryption+0x2a>
1005e44a:	9705      	str	r7, [sp, #20]
1005e44c:	2111      	movs	r1, #17
1005e44e:	0109      	lsls	r1, r1, #4
1005e450:	185f      	adds	r7, r3, r1
1005e452:	0040      	lsls	r0, r0, #1
1005e454:	4478      	add	r0, pc
1005e456:	8880      	ldrh	r0, [r0, #4]
1005e458:	0040      	lsls	r0, r0, #1
1005e45a:	4487      	add	pc, r0
1005e45c:	0010000f 	.word	0x0010000f
1005e460:	016d0165 	.word	0x016d0165
1005e464:	019b0176 	.word	0x019b0176
1005e468:	022001d6 	.word	0x022001d6
1005e46c:	024001e9 	.word	0x024001e9
1005e470:	01fe01ed 	.word	0x01fe01ed
1005e474:	02340214 	.word	0x02340214
1005e478:	10065541 	.word	0x10065541
1005e47c:	e7b4      	b.n	1005e3e8 <LL_encryption+0x9c>
1005e47e:	200b      	movs	r0, #11
1005e480:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e482:	7088      	strb	r0, [r1, #2]
1005e484:	2002      	movs	r0, #2
1005e486:	7050      	strb	r0, [r2, #1]
1005e488:	27ff      	movs	r7, #255	@ 0xff
1005e48a:	4638      	mov	r0, r7
1005e48c:	3004      	adds	r0, #4
1005e48e:	8008      	strh	r0, [r1, #0]
1005e490:	2400      	movs	r4, #0
1005e492:	2201      	movs	r2, #1
1005e494:	9808      	ldr	r0, [sp, #32]
1005e496:	4621      	mov	r1, r4
1005e498:	461d      	mov	r5, r3
1005e49a:	f7fe fd5d 	bl	1005cf58 <LL_cpe_set_blocked>
1005e49e:	4628      	mov	r0, r5
1005e4a0:	f7f8 fb20 	bl	10056ae4 <llc_conn_set_tx_acl_blocked>
1005e4a4:	4628      	mov	r0, r5
1005e4a6:	4621      	mov	r1, r4
1005e4a8:	f7f8 fb0b 	bl	10056ac2 <llc_conn_set_stop_enc>
1005e4ac:	e763      	b.n	1005e376 <LL_encryption+0x2a>
1005e4ae:	2801      	cmp	r0, #1
1005e4b0:	4633      	mov	r3, r6
1005e4b2:	d000      	beq.n	1005e4b6 <LL_encryption+0x16a>
1005e4b4:	e75a      	b.n	1005e36c <LL_encryption+0x20>
1005e4b6:	2501      	movs	r5, #1
1005e4b8:	4628      	mov	r0, r5
1005e4ba:	9f06      	ldr	r7, [sp, #24]
1005e4bc:	7078      	strb	r0, [r7, #1]
1005e4be:	713d      	strb	r5, [r7, #4]
1005e4c0:	2400      	movs	r4, #0
1005e4c2:	9d08      	ldr	r5, [sp, #32]
1005e4c4:	4628      	mov	r0, r5
1005e4c6:	4621      	mov	r1, r4
1005e4c8:	4622      	mov	r2, r4
1005e4ca:	f7fe fd45 	bl	1005cf58 <LL_cpe_set_blocked>
1005e4ce:	4630      	mov	r0, r6
1005e4d0:	f7f8 fade 	bl	10056a90 <llc_conn_set_rx_acl_blocked>
1005e4d4:	4628      	mov	r0, r5
1005e4d6:	4621      	mov	r1, r4
1005e4d8:	f7fe fd4e 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005e4dc:	2201      	movs	r2, #1
1005e4de:	4628      	mov	r0, r5
1005e4e0:	4621      	mov	r1, r4
1005e4e2:	4623      	mov	r3, r4
1005e4e4:	f7fe fcff 	bl	1005cee6 <LL_cpe_set_active>
1005e4e8:	e744      	b.n	1005e374 <LL_encryption+0x28>
1005e4ea:	2003      	movs	r0, #3
1005e4ec:	7010      	strb	r0, [r2, #0]
1005e4ee:	e121      	b.n	1005e734 <LL_encryption+0x3e8>
1005e4f0:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e4f2:	7880      	ldrb	r0, [r0, #2]
1005e4f4:	280b      	cmp	r0, #11
1005e4f6:	d000      	beq.n	1005e4fa <LL_encryption+0x1ae>
1005e4f8:	e738      	b.n	1005e36c <LL_encryption+0x20>
1005e4fa:	2004      	movs	r0, #4
1005e4fc:	7010      	strb	r0, [r2, #0]
1005e4fe:	2102      	movs	r1, #2
1005e500:	4618      	mov	r0, r3
1005e502:	461d      	mov	r5, r3
1005e504:	f7f8 fadd 	bl	10056ac2 <llc_conn_set_stop_enc>
1005e508:	2401      	movs	r4, #1
1005e50a:	9e08      	ldr	r6, [sp, #32]
1005e50c:	4630      	mov	r0, r6
1005e50e:	4621      	mov	r1, r4
1005e510:	f7fe fd32 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005e514:	2200      	movs	r2, #0
1005e516:	4630      	mov	r0, r6
1005e518:	4621      	mov	r1, r4
1005e51a:	f7fe fd1d 	bl	1005cf58 <LL_cpe_set_blocked>
1005e51e:	4628      	mov	r0, r5
1005e520:	f7f8 fab6 	bl	10056a90 <llc_conn_set_rx_acl_blocked>
1005e524:	e727      	b.n	1005e376 <LL_encryption+0x2a>
1005e526:	200b      	movs	r0, #11
1005e528:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e52a:	7088      	strb	r0, [r1, #2]
1005e52c:	2005      	movs	r0, #5
1005e52e:	7010      	strb	r0, [r2, #0]
1005e530:	27ff      	movs	r7, #255	@ 0xff
1005e532:	4638      	mov	r0, r7
1005e534:	3004      	adds	r0, #4
1005e536:	8008      	strh	r0, [r1, #0]
1005e538:	e71d      	b.n	1005e376 <LL_encryption+0x2a>
1005e53a:	2006      	movs	r0, #6
1005e53c:	7010      	strb	r0, [r2, #0]
1005e53e:	2101      	movs	r1, #1
1005e540:	e1d6      	b.n	1005e8f0 <LL_encryption+0x5a4>
1005e542:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1005e544:	1ca0      	adds	r0, r4, #2
1005e546:	9001      	str	r0, [sp, #4]
1005e548:	9705      	str	r7, [sp, #20]
1005e54a:	2700      	movs	r7, #0
1005e54c:	4dfd      	ldr	r5, [pc, #1012]	@ (1005e944 <LL_encryption+0x5f8>)
1005e54e:	4638      	mov	r0, r7
1005e550:	9304      	str	r3, [sp, #16]
1005e552:	4616      	mov	r6, r2
1005e554:	47a8      	blx	r5
1005e556:	9002      	str	r0, [sp, #8]
1005e558:	900b      	str	r0, [sp, #44]	@ 0x2c
1005e55a:	4638      	mov	r0, r7
1005e55c:	47a8      	blx	r5
1005e55e:	900c      	str	r0, [sp, #48]	@ 0x30
1005e560:	4638      	mov	r0, r7
1005e562:	9f05      	ldr	r7, [sp, #20]
1005e564:	47a8      	blx	r5
1005e566:	9003      	str	r0, [sp, #12]
1005e568:	49fc      	ldr	r1, [pc, #1008]	@ (1005e95c <__arm_cp.0_10>)
1005e56a:	8021      	strh	r1, [r4, #0]
1005e56c:	900a      	str	r0, [sp, #40]	@ 0x28
1005e56e:	4635      	mov	r5, r6
1005e570:	7a30      	ldrb	r0, [r6, #8]
1005e572:	0200      	lsls	r0, r0, #8
1005e574:	7a71      	ldrb	r1, [r6, #9]
1005e576:	0409      	lsls	r1, r1, #16
1005e578:	1840      	adds	r0, r0, r1
1005e57a:	7ab1      	ldrb	r1, [r6, #10]
1005e57c:	9606      	str	r6, [sp, #24]
1005e57e:	0609      	lsls	r1, r1, #24
1005e580:	1840      	adds	r0, r0, r1
1005e582:	1cc0      	adds	r0, r0, #3
1005e584:	9c01      	ldr	r4, [sp, #4]
1005e586:	6020      	str	r0, [r4, #0]
1005e588:	9e07      	ldr	r6, [sp, #28]
1005e58a:	4630      	mov	r0, r6
1005e58c:	3033      	adds	r0, #51	@ 0x33
1005e58e:	f000 fa25 	bl	1005e9dc <le4ByteToInt32>
1005e592:	6060      	str	r0, [r4, #4]
1005e594:	9802      	ldr	r0, [sp, #8]
1005e596:	0600      	lsls	r0, r0, #24
1005e598:	8df1      	ldrh	r1, [r6, #46]	@ 0x2e
1005e59a:	0209      	lsls	r1, r1, #8
1005e59c:	1808      	adds	r0, r1, r0
1005e59e:	7be9      	ldrb	r1, [r5, #15]
1005e5a0:	1840      	adds	r0, r0, r1
1005e5a2:	60a0      	str	r0, [r4, #8]
1005e5a4:	4625      	mov	r5, r4
1005e5a6:	ac0b      	add	r4, sp, #44	@ 0x2c
1005e5a8:	1c60      	adds	r0, r4, #1
1005e5aa:	f000 fa17 	bl	1005e9dc <le4ByteToInt32>
1005e5ae:	60e8      	str	r0, [r5, #12]
1005e5b0:	9803      	ldr	r0, [sp, #12]
1005e5b2:	0600      	lsls	r0, r0, #24
1005e5b4:	7961      	ldrb	r1, [r4, #5]
1005e5b6:	1840      	adds	r0, r0, r1
1005e5b8:	79a1      	ldrb	r1, [r4, #6]
1005e5ba:	0209      	lsls	r1, r1, #8
1005e5bc:	1840      	adds	r0, r0, r1
1005e5be:	79e1      	ldrb	r1, [r4, #7]
1005e5c0:	0409      	lsls	r1, r1, #16
1005e5c2:	1840      	adds	r0, r0, r1
1005e5c4:	6128      	str	r0, [r5, #16]
1005e5c6:	462a      	mov	r2, r5
1005e5c8:	ad0a      	add	r5, sp, #40	@ 0x28
1005e5ca:	7868      	ldrb	r0, [r5, #1]
1005e5cc:	78a9      	ldrb	r1, [r5, #2]
1005e5ce:	0209      	lsls	r1, r1, #8
1005e5d0:	1808      	adds	r0, r1, r0
1005e5d2:	78e9      	ldrb	r1, [r5, #3]
1005e5d4:	0409      	lsls	r1, r1, #16
1005e5d6:	1840      	adds	r0, r0, r1
1005e5d8:	6150      	str	r0, [r2, #20]
1005e5da:	2208      	movs	r2, #8
1005e5dc:	4620      	mov	r0, r4
1005e5de:	4631      	mov	r1, r6
1005e5e0:	f006 ffae 	bl	10065540 <char_copy>
1005e5e4:	3620      	adds	r6, #32
1005e5e6:	2204      	movs	r2, #4
1005e5e8:	4628      	mov	r0, r5
1005e5ea:	4631      	mov	r1, r6
1005e5ec:	f006 ffa8 	bl	10065540 <char_copy>
1005e5f0:	2007      	movs	r0, #7
1005e5f2:	9906      	ldr	r1, [sp, #24]
1005e5f4:	7008      	strb	r0, [r1, #0]
1005e5f6:	2101      	movs	r1, #1
1005e5f8:	9808      	ldr	r0, [sp, #32]
1005e5fa:	460a      	mov	r2, r1
1005e5fc:	f7fe fcac 	bl	1005cf58 <LL_cpe_set_blocked>
1005e600:	9804      	ldr	r0, [sp, #16]
1005e602:	f7f8 fa6f 	bl	10056ae4 <llc_conn_set_tx_acl_blocked>
1005e606:	e6b6      	b.n	1005e376 <LL_encryption+0x2a>
1005e608:	2008      	movs	r0, #8
1005e60a:	7010      	strb	r0, [r2, #0]
1005e60c:	2704      	movs	r7, #4
1005e60e:	e6b2      	b.n	1005e376 <LL_encryption+0x2a>
1005e610:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e612:	7880      	ldrb	r0, [r0, #2]
1005e614:	2811      	cmp	r0, #17
1005e616:	d061      	beq.n	1005e6dc <LL_encryption+0x390>
1005e618:	2807      	cmp	r0, #7
1005e61a:	d05f      	beq.n	1005e6dc <LL_encryption+0x390>
1005e61c:	280d      	cmp	r0, #13
1005e61e:	d05d      	beq.n	1005e6dc <LL_encryption+0x390>
1005e620:	2804      	cmp	r0, #4
1005e622:	9c07      	ldr	r4, [sp, #28]
1005e624:	d000      	beq.n	1005e628 <LL_encryption+0x2dc>
1005e626:	e6a1      	b.n	1005e36c <LL_encryption+0x20>
1005e628:	2009      	movs	r0, #9
1005e62a:	7010      	strb	r0, [r2, #0]
1005e62c:	9f09      	ldr	r7, [sp, #36]	@ 0x24
1005e62e:	1cf8      	adds	r0, r7, #3
1005e630:	4621      	mov	r1, r4
1005e632:	3108      	adds	r1, #8
1005e634:	2208      	movs	r2, #8
1005e636:	461d      	mov	r5, r3
1005e638:	f006 ff82 	bl	10065540 <char_copy>
1005e63c:	370b      	adds	r7, #11
1005e63e:	4621      	mov	r1, r4
1005e640:	3124      	adds	r1, #36	@ 0x24
1005e642:	2204      	movs	r2, #4
1005e644:	4638      	mov	r0, r7
1005e646:	f006 ff7b 	bl	10065540 <char_copy>
1005e64a:	6734      	str	r4, [r6, #112]	@ 0x70
1005e64c:	2101      	movs	r1, #1
1005e64e:	2200      	movs	r2, #0
1005e650:	9808      	ldr	r0, [sp, #32]
1005e652:	f7fe fc81 	bl	1005cf58 <LL_cpe_set_blocked>
1005e656:	4628      	mov	r0, r5
1005e658:	f7f8 fa1a 	bl	10056a90 <llc_conn_set_rx_acl_blocked>
1005e65c:	2705      	movs	r7, #5
1005e65e:	e68a      	b.n	1005e376 <LL_encryption+0x2a>
1005e660:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e662:	7880      	ldrb	r0, [r0, #2]
1005e664:	2811      	cmp	r0, #17
1005e666:	d046      	beq.n	1005e6f6 <LL_encryption+0x3aa>
1005e668:	280d      	cmp	r0, #13
1005e66a:	d044      	beq.n	1005e6f6 <LL_encryption+0x3aa>
1005e66c:	2805      	cmp	r0, #5
1005e66e:	d000      	beq.n	1005e672 <LL_encryption+0x326>
1005e670:	e67c      	b.n	1005e36c <LL_encryption+0x20>
1005e672:	4614      	mov	r4, r2
1005e674:	2101      	movs	r1, #1
1005e676:	9808      	ldr	r0, [sp, #32]
1005e678:	f7fe fc7e 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005e67c:	200a      	movs	r0, #10
1005e67e:	e00c      	b.n	1005e69a <LL_encryption+0x34e>
1005e680:	2006      	movs	r0, #6
1005e682:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e684:	7088      	strb	r0, [r1, #2]
1005e686:	27ff      	movs	r7, #255	@ 0xff
1005e688:	4638      	mov	r0, r7
1005e68a:	3004      	adds	r0, #4
1005e68c:	8008      	strh	r0, [r1, #0]
1005e68e:	2102      	movs	r1, #2
1005e690:	4618      	mov	r0, r3
1005e692:	4614      	mov	r4, r2
1005e694:	f7f8 fa04 	bl	10056aa0 <llc_conn_set_start_enc>
1005e698:	200b      	movs	r0, #11
1005e69a:	7020      	strb	r0, [r4, #0]
1005e69c:	e66b      	b.n	1005e376 <LL_encryption+0x2a>
1005e69e:	200c      	movs	r0, #12
1005e6a0:	7010      	strb	r0, [r2, #0]
1005e6a2:	e0c7      	b.n	1005e834 <LL_encryption+0x4e8>
1005e6a4:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e6a6:	7880      	ldrb	r0, [r0, #2]
1005e6a8:	2806      	cmp	r0, #6
1005e6aa:	d000      	beq.n	1005e6ae <LL_encryption+0x362>
1005e6ac:	e65e      	b.n	1005e36c <LL_encryption+0x20>
1005e6ae:	2000      	movs	r0, #0
1005e6b0:	4615      	mov	r5, r2
1005e6b2:	7010      	strb	r0, [r2, #0]
1005e6b4:	48c4      	ldr	r0, [pc, #784]	@ (1005e9c8 <__arm_cp.0_0>)
1005e6b6:	6800      	ldr	r0, [r0, #0]
1005e6b8:	212c      	movs	r1, #44	@ 0x2c
1005e6ba:	5c40      	ldrb	r0, [r0, r1]
1005e6bc:	07c0      	lsls	r0, r0, #31
1005e6be:	0ec1      	lsrs	r1, r0, #27
1005e6c0:	206f      	movs	r0, #111	@ 0x6f
1005e6c2:	43c0      	mvns	r0, r0
1005e6c4:	4048      	eors	r0, r1
1005e6c6:	461c      	mov	r4, r3
1005e6c8:	8f5a      	ldrh	r2, [r3, #58]	@ 0x3a
1005e6ca:	7929      	ldrb	r1, [r5, #4]
1005e6cc:	b2c0      	uxtb	r0, r0
1005e6ce:	2901      	cmp	r1, #1
1005e6d0:	d000      	beq.n	1005e6d4 <LL_encryption+0x388>
1005e6d2:	e111      	b.n	1005e8f8 <LL_encryption+0x5ac>
1005e6d4:	4611      	mov	r1, r2
1005e6d6:	f000 f9bf 	bl	1005ea58 <hci_encryption_key_refresh_complete_event_push>
1005e6da:	e111      	b.n	1005e900 <LL_encryption+0x5b4>
1005e6dc:	48ba      	ldr	r0, [pc, #744]	@ (1005e9c8 <__arm_cp.0_0>)
1005e6de:	6800      	ldr	r0, [r0, #0]
1005e6e0:	212c      	movs	r1, #44	@ 0x2c
1005e6e2:	5c40      	ldrb	r0, [r0, r1]
1005e6e4:	0100      	lsls	r0, r0, #4
1005e6e6:	43c0      	mvns	r0, r0
1005e6e8:	2180      	movs	r1, #128	@ 0x80
1005e6ea:	4301      	orrs	r1, r0
1005e6ec:	2090      	movs	r0, #144	@ 0x90
1005e6ee:	4008      	ands	r0, r1
1005e6f0:	8f5a      	ldrh	r2, [r3, #58]	@ 0x3a
1005e6f2:	211a      	movs	r1, #26
1005e6f4:	e00b      	b.n	1005e70e <LL_encryption+0x3c2>
1005e6f6:	48b4      	ldr	r0, [pc, #720]	@ (1005e9c8 <__arm_cp.0_0>)
1005e6f8:	6800      	ldr	r0, [r0, #0]
1005e6fa:	212c      	movs	r1, #44	@ 0x2c
1005e6fc:	5c40      	ldrb	r0, [r0, r1]
1005e6fe:	0100      	lsls	r0, r0, #4
1005e700:	43c0      	mvns	r0, r0
1005e702:	2180      	movs	r1, #128	@ 0x80
1005e704:	4301      	orrs	r1, r0
1005e706:	2090      	movs	r0, #144	@ 0x90
1005e708:	4008      	ands	r0, r1
1005e70a:	8f5a      	ldrh	r2, [r3, #58]	@ 0x3a
1005e70c:	2106      	movs	r1, #6
1005e70e:	461c      	mov	r4, r3
1005e710:	2300      	movs	r3, #0
1005e712:	f000 f96f 	bl	1005e9f4 <hci_encryption_change_event_push>
1005e716:	4620      	mov	r0, r4
1005e718:	f7f7 fe6d 	bl	100563f6 <llc_conn_clr_tx_acl_blocked>
1005e71c:	4620      	mov	r0, r4
1005e71e:	f7f7 fe59 	bl	100563d4 <llc_conn_clr_rx_acl_blocked>
1005e722:	2101      	movs	r1, #1
1005e724:	9808      	ldr	r0, [sp, #32]
1005e726:	e0f4      	b.n	1005e912 <LL_encryption+0x5c6>
1005e728:	2003      	movs	r0, #3
1005e72a:	7050      	strb	r0, [r2, #1]
1005e72c:	2101      	movs	r1, #1
1005e72e:	4618      	mov	r0, r3
1005e730:	f7f8 f9c7 	bl	10056ac2 <llc_conn_set_stop_enc>
1005e734:	270b      	movs	r7, #11
1005e736:	e61e      	b.n	1005e376 <LL_encryption+0x2a>
1005e738:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e73a:	7880      	ldrb	r0, [r0, #2]
1005e73c:	280b      	cmp	r0, #11
1005e73e:	d000      	beq.n	1005e742 <LL_encryption+0x3f6>
1005e740:	e614      	b.n	1005e36c <LL_encryption+0x20>
1005e742:	2004      	movs	r0, #4
1005e744:	7050      	strb	r0, [r2, #1]
1005e746:	2703      	movs	r7, #3
1005e748:	e615      	b.n	1005e376 <LL_encryption+0x2a>
1005e74a:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e74c:	7880      	ldrb	r0, [r0, #2]
1005e74e:	2803      	cmp	r0, #3
1005e750:	9f05      	ldr	r7, [sp, #20]
1005e752:	9e07      	ldr	r6, [sp, #28]
1005e754:	d000      	beq.n	1005e758 <LL_encryption+0x40c>
1005e756:	e609      	b.n	1005e36c <LL_encryption+0x20>
1005e758:	2005      	movs	r0, #5
1005e75a:	7050      	strb	r0, [r2, #1]
1005e75c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1005e75e:	1ce0      	adds	r0, r4, #3
1005e760:	4631      	mov	r1, r6
1005e762:	3130      	adds	r1, #48	@ 0x30
1005e764:	2508      	movs	r5, #8
1005e766:	462a      	mov	r2, r5
1005e768:	4b9b      	ldr	r3, [pc, #620]	@ (1005e9d8 <__arm_cp.0_4>)
1005e76a:	4798      	blx	r3
1005e76c:	4620      	mov	r0, r4
1005e76e:	300b      	adds	r0, #11
1005e770:	4631      	mov	r1, r6
1005e772:	312e      	adds	r1, #46	@ 0x2e
1005e774:	2202      	movs	r2, #2
1005e776:	4b98      	ldr	r3, [pc, #608]	@ (1005e9d8 <__arm_cp.0_4>)
1005e778:	4798      	blx	r3
1005e77a:	4620      	mov	r0, r4
1005e77c:	300d      	adds	r0, #13
1005e77e:	4631      	mov	r1, r6
1005e780:	462a      	mov	r2, r5
1005e782:	4d95      	ldr	r5, [pc, #596]	@ (1005e9d8 <__arm_cp.0_4>)
1005e784:	47a8      	blx	r5
1005e786:	3415      	adds	r4, #21
1005e788:	3620      	adds	r6, #32
1005e78a:	2204      	movs	r2, #4
1005e78c:	4620      	mov	r0, r4
1005e78e:	4631      	mov	r1, r6
1005e790:	47a8      	blx	r5
1005e792:	e0ac      	b.n	1005e8ee <LL_encryption+0x5a2>
1005e794:	2400      	movs	r4, #0
1005e796:	9403      	str	r4, [sp, #12]
1005e798:	4d8e      	ldr	r5, [pc, #568]	@ (1005e9d4 <__arm_cp.0_3>)
1005e79a:	4620      	mov	r0, r4
1005e79c:	9304      	str	r3, [sp, #16]
1005e79e:	9206      	str	r2, [sp, #24]
1005e7a0:	47a8      	blx	r5
1005e7a2:	900b      	str	r0, [sp, #44]	@ 0x2c
1005e7a4:	4620      	mov	r0, r4
1005e7a6:	47a8      	blx	r5
1005e7a8:	900c      	str	r0, [sp, #48]	@ 0x30
1005e7aa:	4620      	mov	r0, r4
1005e7ac:	47a8      	blx	r5
1005e7ae:	2604      	movs	r6, #4
1005e7b0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
1005e7b2:	70a6      	strb	r6, [r4, #2]
1005e7b4:	210d      	movs	r1, #13
1005e7b6:	7061      	strb	r1, [r4, #1]
1005e7b8:	2103      	movs	r1, #3
1005e7ba:	7021      	strb	r1, [r4, #0]
1005e7bc:	900a      	str	r0, [sp, #40]	@ 0x28
1005e7be:	1ce1      	adds	r1, r4, #3
1005e7c0:	ad0b      	add	r5, sp, #44	@ 0x2c
1005e7c2:	2208      	movs	r2, #8
1005e7c4:	9202      	str	r2, [sp, #8]
1005e7c6:	4b84      	ldr	r3, [pc, #528]	@ (1005e9d8 <__arm_cp.0_4>)
1005e7c8:	4628      	mov	r0, r5
1005e7ca:	4798      	blx	r3
1005e7cc:	340b      	adds	r4, #11
1005e7ce:	af0a      	add	r7, sp, #40	@ 0x28
1005e7d0:	4638      	mov	r0, r7
1005e7d2:	4621      	mov	r1, r4
1005e7d4:	4632      	mov	r2, r6
1005e7d6:	4b80      	ldr	r3, [pc, #512]	@ (1005e9d8 <__arm_cp.0_4>)
1005e7d8:	4798      	blx	r3
1005e7da:	9c07      	ldr	r4, [sp, #28]
1005e7dc:	4621      	mov	r1, r4
1005e7de:	3108      	adds	r1, #8
1005e7e0:	4628      	mov	r0, r5
1005e7e2:	9a02      	ldr	r2, [sp, #8]
1005e7e4:	4d7c      	ldr	r5, [pc, #496]	@ (1005e9d8 <__arm_cp.0_4>)
1005e7e6:	47a8      	blx	r5
1005e7e8:	3424      	adds	r4, #36	@ 0x24
1005e7ea:	4638      	mov	r0, r7
1005e7ec:	4621      	mov	r1, r4
1005e7ee:	4632      	mov	r2, r6
1005e7f0:	47a8      	blx	r5
1005e7f2:	2006      	movs	r0, #6
1005e7f4:	9906      	ldr	r1, [sp, #24]
1005e7f6:	7048      	strb	r0, [r1, #1]
1005e7f8:	2201      	movs	r2, #1
1005e7fa:	9808      	ldr	r0, [sp, #32]
1005e7fc:	9903      	ldr	r1, [sp, #12]
1005e7fe:	f7fe fbab 	bl	1005cf58 <LL_cpe_set_blocked>
1005e802:	9804      	ldr	r0, [sp, #16]
1005e804:	f7f8 f96e 	bl	10056ae4 <llc_conn_set_tx_acl_blocked>
1005e808:	e0db      	b.n	1005e9c2 <__arm_cp.0_10+0x66>
1005e80a:	4870      	ldr	r0, [pc, #448]	@ (1005e9cc <__arm_cp.0_1>)
1005e80c:	6800      	ldr	r0, [r0, #0]
1005e80e:	213d      	movs	r1, #61	@ 0x3d
1005e810:	5c41      	ldrb	r1, [r0, r1]
1005e812:	0689      	lsls	r1, r1, #26
1005e814:	d504      	bpl.n	1005e820 <LL_encryption+0x4d4>
1005e816:	303d      	adds	r0, #61	@ 0x3d
1005e818:	7a40      	ldrb	r0, [r0, #9]
1005e81a:	06c0      	lsls	r0, r0, #27
1005e81c:	d500      	bpl.n	1005e820 <LL_encryption+0x4d4>
1005e81e:	e093      	b.n	1005e948 <LL_encryption+0x5fc>
1005e820:	2100      	movs	r1, #0
1005e822:	9808      	ldr	r0, [sp, #32]
1005e824:	4614      	mov	r4, r2
1005e826:	f7fe fba7 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005e82a:	4620      	mov	r0, r4
1005e82c:	270d      	movs	r7, #13
1005e82e:	e0c7      	b.n	1005e9c0 <__arm_cp.0_10+0x64>
1005e830:	2009      	movs	r0, #9
1005e832:	7050      	strb	r0, [r2, #1]
1005e834:	2706      	movs	r7, #6
1005e836:	e59e      	b.n	1005e376 <LL_encryption+0x2a>
1005e838:	2006      	movs	r0, #6
1005e83a:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e83c:	7088      	strb	r0, [r1, #2]
1005e83e:	200b      	movs	r0, #11
1005e840:	7050      	strb	r0, [r2, #1]
1005e842:	25ff      	movs	r5, #255	@ 0xff
1005e844:	4628      	mov	r0, r5
1005e846:	3004      	adds	r0, #4
1005e848:	8008      	strh	r0, [r1, #0]
1005e84a:	2401      	movs	r4, #1
1005e84c:	4618      	mov	r0, r3
1005e84e:	4621      	mov	r1, r4
1005e850:	f7f8 f926 	bl	10056aa0 <llc_conn_set_start_enc>
1005e854:	703c      	strb	r4, [r7, #0]
1005e856:	462f      	mov	r7, r5
1005e858:	e58d      	b.n	1005e376 <LL_encryption+0x2a>
1005e85a:	2400      	movs	r4, #0
1005e85c:	7054      	strb	r4, [r2, #1]
1005e85e:	485a      	ldr	r0, [pc, #360]	@ (1005e9c8 <__arm_cp.0_0>)
1005e860:	6800      	ldr	r0, [r0, #0]
1005e862:	212c      	movs	r1, #44	@ 0x2c
1005e864:	5c40      	ldrb	r0, [r0, r1]
1005e866:	07c0      	lsls	r0, r0, #31
1005e868:	0ec1      	lsrs	r1, r0, #27
1005e86a:	206f      	movs	r0, #111	@ 0x6f
1005e86c:	43c0      	mvns	r0, r0
1005e86e:	4048      	eors	r0, r1
1005e870:	4611      	mov	r1, r2
1005e872:	8f5a      	ldrh	r2, [r3, #58]	@ 0x3a
1005e874:	7909      	ldrb	r1, [r1, #4]
1005e876:	b2c0      	uxtb	r0, r0
1005e878:	2901      	cmp	r1, #1
1005e87a:	d14e      	bne.n	1005e91a <LL_encryption+0x5ce>
1005e87c:	4611      	mov	r1, r2
1005e87e:	461e      	mov	r6, r3
1005e880:	f000 f8ea 	bl	1005ea58 <hci_encryption_key_refresh_complete_event_push>
1005e884:	e04e      	b.n	1005e924 <LL_encryption+0x5d8>
1005e886:	4618      	mov	r0, r3
1005e888:	4615      	mov	r5, r2
1005e88a:	f7f7 fdb4 	bl	100563f6 <llc_conn_clr_tx_acl_blocked>
1005e88e:	2400      	movs	r4, #0
1005e890:	2201      	movs	r2, #1
1005e892:	9808      	ldr	r0, [sp, #32]
1005e894:	4621      	mov	r1, r4
1005e896:	f7fe fb3d 	bl	1005cf14 <LL_cpe_clr_active>
1005e89a:	706c      	strb	r4, [r5, #1]
1005e89c:	e091      	b.n	1005e9c2 <__arm_cp.0_10+0x66>
1005e89e:	78d0      	ldrb	r0, [r2, #3]
1005e8a0:	2801      	cmp	r0, #1
1005e8a2:	d110      	bne.n	1005e8c6 <LL_encryption+0x57a>
1005e8a4:	2005      	movs	r0, #5
1005e8a6:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005e8a8:	7088      	strb	r0, [r1, #2]
1005e8aa:	9807      	ldr	r0, [sp, #28]
1005e8ac:	6730      	str	r0, [r6, #112]	@ 0x70
1005e8ae:	27ff      	movs	r7, #255	@ 0xff
1005e8b0:	4638      	mov	r0, r7
1005e8b2:	3004      	adds	r0, #4
1005e8b4:	8008      	strh	r0, [r1, #0]
1005e8b6:	2100      	movs	r1, #0
1005e8b8:	4618      	mov	r0, r3
1005e8ba:	4614      	mov	r4, r2
1005e8bc:	f7f8 f8f0 	bl	10056aa0 <llc_conn_set_start_enc>
1005e8c0:	2008      	movs	r0, #8
1005e8c2:	7060      	strb	r0, [r4, #1]
1005e8c4:	e557      	b.n	1005e376 <LL_encryption+0x2a>
1005e8c6:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e8c8:	4619      	mov	r1, r3
1005e8ca:	461c      	mov	r4, r3
1005e8cc:	4615      	mov	r5, r2
1005e8ce:	f000 f8f5 	bl	1005eabc <llc_enc_prepare_reject>
1005e8d2:	200c      	movs	r0, #12
1005e8d4:	7068      	strb	r0, [r5, #1]
1005e8d6:	4620      	mov	r0, r4
1005e8d8:	f7f7 fd7c 	bl	100563d4 <llc_conn_clr_rx_acl_blocked>
1005e8dc:	e071      	b.n	1005e9c2 <__arm_cp.0_10+0x66>
1005e8de:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e8e0:	7880      	ldrb	r0, [r0, #2]
1005e8e2:	2806      	cmp	r0, #6
1005e8e4:	9f05      	ldr	r7, [sp, #20]
1005e8e6:	d000      	beq.n	1005e8ea <LL_encryption+0x59e>
1005e8e8:	e540      	b.n	1005e36c <LL_encryption+0x20>
1005e8ea:	200a      	movs	r0, #10
1005e8ec:	7050      	strb	r0, [r2, #1]
1005e8ee:	2100      	movs	r1, #0
1005e8f0:	9808      	ldr	r0, [sp, #32]
1005e8f2:	f7fe fb41 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005e8f6:	e53e      	b.n	1005e376 <LL_encryption+0x2a>
1005e8f8:	2100      	movs	r1, #0
1005e8fa:	2301      	movs	r3, #1
1005e8fc:	f000 f87a 	bl	1005e9f4 <hci_encryption_change_event_push>
1005e900:	9d08      	ldr	r5, [sp, #32]
1005e902:	4620      	mov	r0, r4
1005e904:	f7f7 fd77 	bl	100563f6 <llc_conn_clr_tx_acl_blocked>
1005e908:	4620      	mov	r0, r4
1005e90a:	f7f7 fd63 	bl	100563d4 <llc_conn_clr_rx_acl_blocked>
1005e90e:	2101      	movs	r1, #1
1005e910:	4628      	mov	r0, r5
1005e912:	460a      	mov	r2, r1
1005e914:	f7fe fafe 	bl	1005cf14 <LL_cpe_clr_active>
1005e918:	e52d      	b.n	1005e376 <LL_encryption+0x2a>
1005e91a:	2100      	movs	r1, #0
1005e91c:	461e      	mov	r6, r3
1005e91e:	2301      	movs	r3, #1
1005e920:	f000 f868 	bl	1005e9f4 <hci_encryption_change_event_push>
1005e924:	4630      	mov	r0, r6
1005e926:	9e08      	ldr	r6, [sp, #32]
1005e928:	703c      	strb	r4, [r7, #0]
1005e92a:	4604      	mov	r4, r0
1005e92c:	f7f7 fd63 	bl	100563f6 <llc_conn_clr_tx_acl_blocked>
1005e930:	4620      	mov	r0, r4
1005e932:	f7f7 fd4f 	bl	100563d4 <llc_conn_clr_rx_acl_blocked>
1005e936:	2201      	movs	r2, #1
1005e938:	4630      	mov	r0, r6
1005e93a:	4629      	mov	r1, r5
1005e93c:	f7fe faea 	bl	1005cf14 <LL_cpe_clr_active>
1005e940:	e03f      	b.n	1005e9c2 <__arm_cp.0_10+0x66>
1005e942:	46c0      	nop			@ (mov r8, r8)
1005e944:	10065833 	.word	0x10065833
1005e948:	481f      	ldr	r0, [pc, #124]	@ (1005e9c8 <__arm_cp.0_0>)
1005e94a:	6800      	ldr	r0, [r0, #0]
1005e94c:	212c      	movs	r1, #44	@ 0x2c
1005e94e:	5c40      	ldrb	r0, [r0, r1]
1005e950:	07c0      	lsls	r0, r0, #31
1005e952:	0ec0      	lsrs	r0, r0, #27
1005e954:	9206      	str	r2, [sp, #24]
1005e956:	d003      	beq.n	1005e960 <__arm_cp.0_10+0x4>
1005e958:	2219      	movs	r2, #25
1005e95a:	e002      	b.n	1005e962 <__arm_cp.0_10+0x6>

1005e95c <__arm_cp.0_10>:
1005e95c:	00001703 	.word	0x00001703
1005e960:	220a      	movs	r2, #10
1005e962:	9d07      	ldr	r5, [sp, #28]
1005e964:	216f      	movs	r1, #111	@ 0x6f
1005e966:	43c9      	mvns	r1, r1
1005e968:	4048      	eors	r0, r1
1005e96a:	b2c1      	uxtb	r1, r0
1005e96c:	8de8      	ldrh	r0, [r5, #46]	@ 0x2e
1005e96e:	9007      	str	r0, [sp, #28]
1005e970:	8f5c      	ldrh	r4, [r3, #58]	@ 0x3a
1005e972:	4817      	ldr	r0, [pc, #92]	@ (1005e9d0 <__arm_cp.0_2>)
1005e974:	6800      	ldr	r0, [r0, #0]
1005e976:	6900      	ldr	r0, [r0, #16]
1005e978:	2304      	movs	r3, #4
1005e97a:	9109      	str	r1, [sp, #36]	@ 0x24
1005e97c:	9308      	str	r3, [sp, #32]
1005e97e:	f7f1 fcbf 	bl	10050300 <aci_event_fifo_push_header>
1005e982:	2707      	movs	r7, #7
1005e984:	2800      	cmp	r0, #0
1005e986:	d01a      	beq.n	1005e9be <__arm_cp.0_10+0x62>
1005e988:	4606      	mov	r6, r0
1005e98a:	7204      	strb	r4, [r0, #8]
1005e98c:	0a20      	lsrs	r0, r4, #8
1005e98e:	7270      	strb	r0, [r6, #9]
1005e990:	4630      	mov	r0, r6
1005e992:	300a      	adds	r0, #10
1005e994:	3530      	adds	r5, #48	@ 0x30
1005e996:	2208      	movs	r2, #8
1005e998:	4629      	mov	r1, r5
1005e99a:	f7e6 f803 	bl	100449a4 <BLEPLAT_MemCpy>
1005e99e:	9907      	ldr	r1, [sp, #28]
1005e9a0:	0a08      	lsrs	r0, r1, #8
1005e9a2:	74f0      	strb	r0, [r6, #19]
1005e9a4:	74b1      	strb	r1, [r6, #18]
1005e9a6:	2005      	movs	r0, #5
1005e9a8:	71f0      	strb	r0, [r6, #7]
1005e9aa:	200d      	movs	r0, #13
1005e9ac:	71b0      	strb	r0, [r6, #6]
1005e9ae:	203e      	movs	r0, #62	@ 0x3e
1005e9b0:	7170      	strb	r0, [r6, #5]
1005e9b2:	9808      	ldr	r0, [sp, #32]
1005e9b4:	7130      	strb	r0, [r6, #4]
1005e9b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005e9b8:	4631      	mov	r1, r6
1005e9ba:	f7f1 fd3e 	bl	1005043a <aci_event_fifo_push>
1005e9be:	9806      	ldr	r0, [sp, #24]
1005e9c0:	7047      	strb	r7, [r0, #1]
1005e9c2:	9f05      	ldr	r7, [sp, #20]
1005e9c4:	e4d7      	b.n	1005e376 <LL_encryption+0x2a>
1005e9c6:	46c0      	nop			@ (mov r8, r8)

1005e9c8 <__arm_cp.0_0>:
1005e9c8:	2000083c 	.word	0x2000083c

1005e9cc <__arm_cp.0_1>:
1005e9cc:	20000894 	.word	0x20000894

1005e9d0 <__arm_cp.0_2>:
1005e9d0:	20000840 	.word	0x20000840

1005e9d4 <__arm_cp.0_3>:
1005e9d4:	10065833 	.word	0x10065833

1005e9d8 <__arm_cp.0_4>:
1005e9d8:	10065541 	.word	0x10065541

1005e9dc <le4ByteToInt32>:
1005e9dc:	7801      	ldrb	r1, [r0, #0]
1005e9de:	7842      	ldrb	r2, [r0, #1]
1005e9e0:	0212      	lsls	r2, r2, #8
1005e9e2:	1851      	adds	r1, r2, r1
1005e9e4:	7882      	ldrb	r2, [r0, #2]
1005e9e6:	0412      	lsls	r2, r2, #16
1005e9e8:	1889      	adds	r1, r1, r2
1005e9ea:	78c0      	ldrb	r0, [r0, #3]
1005e9ec:	0600      	lsls	r0, r0, #24
1005e9ee:	1808      	adds	r0, r1, r0
1005e9f0:	4770      	bx	lr
	...

1005e9f4 <hci_encryption_change_event_push>:
1005e9f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005e9f6:	461e      	mov	r6, r3
1005e9f8:	4615      	mov	r5, r2
1005e9fa:	460f      	mov	r7, r1
1005e9fc:	4604      	mov	r4, r0
1005e9fe:	06c0      	lsls	r0, r0, #27
1005ea00:	d406      	bmi.n	1005ea10 <hci_encryption_change_event_push+0x1c>
1005ea02:	4813      	ldr	r0, [pc, #76]	@ (1005ea50 <__arm_cp.2_0>)
1005ea04:	6800      	ldr	r0, [r0, #0]
1005ea06:	2136      	movs	r1, #54	@ 0x36
1005ea08:	5640      	ldrsb	r0, [r0, r1]
1005ea0a:	2800      	cmp	r0, #0
1005ea0c:	d404      	bmi.n	1005ea18 <hci_encryption_change_event_push+0x24>
1005ea0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005ea10:	20bf      	movs	r0, #191	@ 0xbf
1005ea12:	4004      	ands	r4, r0
1005ea14:	2206      	movs	r2, #6
1005ea16:	e000      	b.n	1005ea1a <hci_encryption_change_event_push+0x26>
1005ea18:	2216      	movs	r2, #22
1005ea1a:	480e      	ldr	r0, [pc, #56]	@ (1005ea54 <__arm_cp.2_1>)
1005ea1c:	6800      	ldr	r0, [r0, #0]
1005ea1e:	0761      	lsls	r1, r4, #29
1005ea20:	0ec9      	lsrs	r1, r1, #27
1005ea22:	1840      	adds	r0, r0, r1
1005ea24:	6900      	ldr	r0, [r0, #16]
1005ea26:	2302      	movs	r3, #2
1005ea28:	4621      	mov	r1, r4
1005ea2a:	f7f1 fc69 	bl	10050300 <aci_event_fifo_push_header>
1005ea2e:	2800      	cmp	r0, #0
1005ea30:	d0ed      	beq.n	1005ea0e <hci_encryption_change_event_push+0x1a>
1005ea32:	4601      	mov	r1, r0
1005ea34:	7205      	strb	r5, [r0, #8]
1005ea36:	7286      	strb	r6, [r0, #10]
1005ea38:	71c7      	strb	r7, [r0, #7]
1005ea3a:	2004      	movs	r0, #4
1005ea3c:	7188      	strb	r0, [r1, #6]
1005ea3e:	2208      	movs	r2, #8
1005ea40:	714a      	strb	r2, [r1, #5]
1005ea42:	7108      	strb	r0, [r1, #4]
1005ea44:	0a28      	lsrs	r0, r5, #8
1005ea46:	7248      	strb	r0, [r1, #9]
1005ea48:	4620      	mov	r0, r4
1005ea4a:	f7f1 fcf6 	bl	1005043a <aci_event_fifo_push>
1005ea4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005ea50 <__arm_cp.2_0>:
1005ea50:	20000894 	.word	0x20000894

1005ea54 <__arm_cp.2_1>:
1005ea54:	20000840 	.word	0x20000840

1005ea58 <hci_encryption_key_refresh_complete_event_push>:
1005ea58:	b5b0      	push	{r4, r5, r7, lr}
1005ea5a:	460d      	mov	r5, r1
1005ea5c:	4604      	mov	r4, r0
1005ea5e:	06c0      	lsls	r0, r0, #27
1005ea60:	d406      	bmi.n	1005ea70 <hci_encryption_key_refresh_complete_event_push+0x18>
1005ea62:	4814      	ldr	r0, [pc, #80]	@ (1005eab4 <__arm_cp.3_0>)
1005ea64:	6800      	ldr	r0, [r0, #0]
1005ea66:	213b      	movs	r1, #59	@ 0x3b
1005ea68:	5640      	ldrsb	r0, [r0, r1]
1005ea6a:	2800      	cmp	r0, #0
1005ea6c:	d404      	bmi.n	1005ea78 <hci_encryption_key_refresh_complete_event_push+0x20>
1005ea6e:	bdb0      	pop	{r4, r5, r7, pc}
1005ea70:	20bf      	movs	r0, #191	@ 0xbf
1005ea72:	4004      	ands	r4, r0
1005ea74:	2207      	movs	r2, #7
1005ea76:	e000      	b.n	1005ea7a <hci_encryption_key_refresh_complete_event_push+0x22>
1005ea78:	2217      	movs	r2, #23
1005ea7a:	480f      	ldr	r0, [pc, #60]	@ (1005eab8 <__arm_cp.3_1>)
1005ea7c:	6800      	ldr	r0, [r0, #0]
1005ea7e:	0761      	lsls	r1, r4, #29
1005ea80:	0ec9      	lsrs	r1, r1, #27
1005ea82:	1840      	adds	r0, r0, r1
1005ea84:	6900      	ldr	r0, [r0, #16]
1005ea86:	2302      	movs	r3, #2
1005ea88:	4621      	mov	r1, r4
1005ea8a:	f7f1 fc39 	bl	10050300 <aci_event_fifo_push_header>
1005ea8e:	2800      	cmp	r0, #0
1005ea90:	d0ed      	beq.n	1005ea6e <hci_encryption_key_refresh_complete_event_push+0x16>
1005ea92:	4601      	mov	r1, r0
1005ea94:	7205      	strb	r5, [r0, #8]
1005ea96:	2000      	movs	r0, #0
1005ea98:	71c8      	strb	r0, [r1, #7]
1005ea9a:	2003      	movs	r0, #3
1005ea9c:	7188      	strb	r0, [r1, #6]
1005ea9e:	2030      	movs	r0, #48	@ 0x30
1005eaa0:	7148      	strb	r0, [r1, #5]
1005eaa2:	2004      	movs	r0, #4
1005eaa4:	7108      	strb	r0, [r1, #4]
1005eaa6:	0a28      	lsrs	r0, r5, #8
1005eaa8:	7248      	strb	r0, [r1, #9]
1005eaaa:	4620      	mov	r0, r4
1005eaac:	f7f1 fcc5 	bl	1005043a <aci_event_fifo_push>
1005eab0:	bdb0      	pop	{r4, r5, r7, pc}
1005eab2:	46c0      	nop			@ (mov r8, r8)

1005eab4 <__arm_cp.3_0>:
1005eab4:	20000894 	.word	0x20000894

1005eab8 <__arm_cp.3_1>:
1005eab8:	20000840 	.word	0x20000840

1005eabc <llc_enc_prepare_reject>:
1005eabc:	2203      	movs	r2, #3
1005eabe:	7002      	strb	r2, [r0, #0]
1005eac0:	2397      	movs	r3, #151	@ 0x97
1005eac2:	005b      	lsls	r3, r3, #1
1005eac4:	5cc9      	ldrb	r1, [r1, r3]
1005eac6:	0749      	lsls	r1, r1, #29
1005eac8:	d403      	bmi.n	1005ead2 <llc_enc_prepare_reject+0x16>
1005eaca:	2306      	movs	r3, #6
1005eacc:	210d      	movs	r1, #13
1005eace:	2202      	movs	r2, #2
1005ead0:	e003      	b.n	1005eada <llc_enc_prepare_reject+0x1e>
1005ead2:	2106      	movs	r1, #6
1005ead4:	7101      	strb	r1, [r0, #4]
1005ead6:	2111      	movs	r1, #17
1005ead8:	4613      	mov	r3, r2
1005eada:	70c3      	strb	r3, [r0, #3]
1005eadc:	7081      	strb	r1, [r0, #2]
1005eade:	7042      	strb	r2, [r0, #1]
1005eae0:	4770      	bx	lr
	...

1005eae4 <LL_Start_Encryption>:
1005eae4:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005eae6:	461c      	mov	r4, r3
1005eae8:	4616      	mov	r6, r2
1005eaea:	460f      	mov	r7, r1
1005eaec:	f7f7 fa9c 	bl	10056028 <llc_conn_get_cntxt_per_p_from_handle>
1005eaf0:	2800      	cmp	r0, #0
1005eaf2:	d00e      	beq.n	1005eb12 <LL_Start_Encryption+0x2e>
1005eaf4:	4605      	mov	r5, r0
1005eaf6:	9602      	str	r6, [sp, #8]
1005eaf8:	4606      	mov	r6, r0
1005eafa:	362c      	adds	r6, #44	@ 0x2c
1005eafc:	7830      	ldrb	r0, [r6, #0]
1005eafe:	2802      	cmp	r0, #2
1005eb00:	d109      	bne.n	1005eb16 <LL_Start_Encryption+0x32>
1005eb02:	7930      	ldrb	r0, [r6, #4]
1005eb04:	2101      	movs	r1, #1
1005eb06:	f7fe f9e0 	bl	1005ceca <LL_cpe_get_active_status>
1005eb0a:	2800      	cmp	r0, #0
1005eb0c:	d005      	beq.n	1005eb1a <LL_Start_Encryption+0x36>
1005eb0e:	243a      	movs	r4, #58	@ 0x3a
1005eb10:	e038      	b.n	1005eb84 <LL_Start_Encryption+0xa0>
1005eb12:	2402      	movs	r4, #2
1005eb14:	e036      	b.n	1005eb84 <LL_Start_Encryption+0xa0>
1005eb16:	240c      	movs	r4, #12
1005eb18:	e034      	b.n	1005eb84 <LL_Start_Encryption+0xa0>
1005eb1a:	7930      	ldrb	r0, [r6, #4]
1005eb1c:	2101      	movs	r1, #1
1005eb1e:	9100      	str	r1, [sp, #0]
1005eb20:	f7fe fa37 	bl	1005cf92 <LL_cpe_get_cntxt>
1005eb24:	9001      	str	r0, [sp, #4]
1005eb26:	4601      	mov	r1, r0
1005eb28:	3130      	adds	r1, #48	@ 0x30
1005eb2a:	2208      	movs	r2, #8
1005eb2c:	4638      	mov	r0, r7
1005eb2e:	4b16      	ldr	r3, [pc, #88]	@ (1005eb88 <__arm_cp.5_0>)
1005eb30:	4798      	blx	r3
1005eb32:	9f01      	ldr	r7, [sp, #4]
1005eb34:	4639      	mov	r1, r7
1005eb36:	3110      	adds	r1, #16
1005eb38:	2210      	movs	r2, #16
1005eb3a:	4620      	mov	r0, r4
1005eb3c:	4c12      	ldr	r4, [pc, #72]	@ (1005eb88 <__arm_cp.5_0>)
1005eb3e:	47a0      	blx	r4
1005eb40:	372e      	adds	r7, #46	@ 0x2e
1005eb42:	2202      	movs	r2, #2
1005eb44:	9802      	ldr	r0, [sp, #8]
1005eb46:	4639      	mov	r1, r7
1005eb48:	47a0      	blx	r4
1005eb4a:	7930      	ldrb	r0, [r6, #4]
1005eb4c:	9900      	ldr	r1, [sp, #0]
1005eb4e:	460f      	mov	r7, r1
1005eb50:	f7fe fa12 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005eb54:	2400      	movs	r4, #0
1005eb56:	4628      	mov	r0, r5
1005eb58:	4621      	mov	r1, r4
1005eb5a:	f7f7 fd09 	bl	10056570 <llc_conn_get_enc_on>
1005eb5e:	2801      	cmp	r0, #1
1005eb60:	d101      	bne.n	1005eb66 <LL_Start_Encryption+0x82>
1005eb62:	4601      	mov	r1, r0
1005eb64:	e000      	b.n	1005eb68 <LL_Start_Encryption+0x84>
1005eb66:	2106      	movs	r1, #6
1005eb68:	9b01      	ldr	r3, [sp, #4]
1005eb6a:	2228      	movs	r2, #40	@ 0x28
1005eb6c:	5499      	strb	r1, [r3, r2]
1005eb6e:	1e40      	subs	r0, r0, #1
1005eb70:	4241      	negs	r1, r0
1005eb72:	4141      	adcs	r1, r0
1005eb74:	3328      	adds	r3, #40	@ 0x28
1005eb76:	7119      	strb	r1, [r3, #4]
1005eb78:	7930      	ldrb	r0, [r6, #4]
1005eb7a:	4639      	mov	r1, r7
1005eb7c:	463a      	mov	r2, r7
1005eb7e:	4623      	mov	r3, r4
1005eb80:	f7fe f9b1 	bl	1005cee6 <LL_cpe_set_active>
1005eb84:	4620      	mov	r0, r4
1005eb86:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005eb88 <__arm_cp.5_0>:
1005eb88:	10065541 	.word	0x10065541

1005eb8c <LL_Get_LTK>:
1005eb8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005eb8e:	4614      	mov	r4, r2
1005eb90:	4606      	mov	r6, r0
1005eb92:	4608      	mov	r0, r1
1005eb94:	f7f7 fa48 	bl	10056028 <llc_conn_get_cntxt_per_p_from_handle>
1005eb98:	2130      	movs	r1, #48	@ 0x30
1005eb9a:	5641      	ldrsb	r1, [r0, r1]
1005eb9c:	2900      	cmp	r1, #0
1005eb9e:	d405      	bmi.n	1005ebac <LL_Get_LTK+0x20>
1005eba0:	302c      	adds	r0, #44	@ 0x2c
1005eba2:	7800      	ldrb	r0, [r0, #0]
1005eba4:	2802      	cmp	r0, #2
1005eba6:	d103      	bne.n	1005ebb0 <LL_Get_LTK+0x24>
1005eba8:	2512      	movs	r5, #18
1005ebaa:	e018      	b.n	1005ebde <LL_Get_LTK+0x52>
1005ebac:	2502      	movs	r5, #2
1005ebae:	e016      	b.n	1005ebde <LL_Get_LTK+0x52>
1005ebb0:	b2cf      	uxtb	r7, r1
1005ebb2:	2500      	movs	r5, #0
1005ebb4:	4638      	mov	r0, r7
1005ebb6:	4629      	mov	r1, r5
1005ebb8:	f7fe f9de 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005ebbc:	4638      	mov	r0, r7
1005ebbe:	4629      	mov	r1, r5
1005ebc0:	f7fe f9e7 	bl	1005cf92 <LL_cpe_get_cntxt>
1005ebc4:	4601      	mov	r1, r0
1005ebc6:	302b      	adds	r0, #43	@ 0x2b
1005ebc8:	2e00      	cmp	r6, #0
1005ebca:	d001      	beq.n	1005ebd0 <LL_Get_LTK+0x44>
1005ebcc:	7005      	strb	r5, [r0, #0]
1005ebce:	e006      	b.n	1005ebde <LL_Get_LTK+0x52>
1005ebd0:	2201      	movs	r2, #1
1005ebd2:	7002      	strb	r2, [r0, #0]
1005ebd4:	3110      	adds	r1, #16
1005ebd6:	2210      	movs	r2, #16
1005ebd8:	4620      	mov	r0, r4
1005ebda:	f006 fcb1 	bl	10065540 <char_copy>
1005ebde:	4628      	mov	r0, r5
1005ebe0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

1005ebe4 <LL_feature_exchange>:
1005ebe4:	b5f0      	push	{r4, r5, r6, r7, lr}
1005ebe6:	b085      	sub	sp, #20
1005ebe8:	461c      	mov	r4, r3
1005ebea:	4615      	mov	r5, r2
1005ebec:	460e      	mov	r6, r1
1005ebee:	4607      	mov	r7, r0
1005ebf0:	f7fe f9cf 	bl	1005cf92 <LL_cpe_get_cntxt>
1005ebf4:	9003      	str	r0, [sp, #12]
1005ebf6:	9702      	str	r7, [sp, #8]
1005ebf8:	4638      	mov	r0, r7
1005ebfa:	f7f7 fa07 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005ebfe:	4607      	mov	r7, r0
1005ec00:	20ff      	movs	r0, #255	@ 0xff
1005ec02:	2d06      	cmp	r5, #6
1005ec04:	d900      	bls.n	1005ec08 <LL_feature_exchange+0x24>
1005ec06:	e099      	b.n	1005ed3c <LL_feature_exchange+0x158>
1005ec08:	9604      	str	r6, [sp, #16]
1005ec0a:	2197      	movs	r1, #151	@ 0x97
1005ec0c:	0049      	lsls	r1, r1, #1
1005ec0e:	187b      	adds	r3, r7, r1
1005ec10:	463e      	mov	r6, r7
1005ec12:	362c      	adds	r6, #44	@ 0x2c
1005ec14:	447d      	add	r5, pc
1005ec16:	792d      	ldrb	r5, [r5, #4]
1005ec18:	006d      	lsls	r5, r5, #1
1005ec1a:	44af      	add	pc, r5
1005ec1c:	298f0803 	.word	0x298f0803
1005ec20:	004a8f8f 	.word	0x004a8f8f
1005ec24:	9904      	ldr	r1, [sp, #16]
1005ec26:	2901      	cmp	r1, #1
1005ec28:	d160      	bne.n	1005ecec <LL_feature_exchange+0x108>
1005ec2a:	2009      	movs	r0, #9
1005ec2c:	e086      	b.n	1005ed3c <LL_feature_exchange+0x158>
1005ec2e:	78a1      	ldrb	r1, [r4, #2]
1005ec30:	290e      	cmp	r1, #14
1005ec32:	d002      	beq.n	1005ec3a <LL_feature_exchange+0x56>
1005ec34:	2908      	cmp	r1, #8
1005ec36:	d000      	beq.n	1005ec3a <LL_feature_exchange+0x56>
1005ec38:	e080      	b.n	1005ed3c <LL_feature_exchange+0x158>
1005ec3a:	1ce4      	adds	r4, r4, #3
1005ec3c:	9903      	ldr	r1, [sp, #12]
1005ec3e:	3108      	adds	r1, #8
1005ec40:	4605      	mov	r5, r0
1005ec42:	2208      	movs	r2, #8
1005ec44:	4620      	mov	r0, r4
1005ec46:	461e      	mov	r6, r3
1005ec48:	f006 fc7a 	bl	10065540 <char_copy>
1005ec4c:	2205      	movs	r2, #5
1005ec4e:	4630      	mov	r0, r6
1005ec50:	4621      	mov	r1, r4
1005ec52:	f7e5 fea7 	bl	100449a4 <BLEPLAT_MemCpy>
1005ec56:	9e02      	ldr	r6, [sp, #8]
1005ec58:	4630      	mov	r0, r6
1005ec5a:	9c04      	ldr	r4, [sp, #16]
1005ec5c:	4621      	mov	r1, r4
1005ec5e:	f7fe f98b 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005ec62:	2203      	movs	r2, #3
1005ec64:	2300      	movs	r3, #0
1005ec66:	4630      	mov	r0, r6
1005ec68:	4621      	mov	r1, r4
1005ec6a:	f7fe f93c 	bl	1005cee6 <LL_cpe_set_active>
1005ec6e:	e01e      	b.n	1005ecae <LL_feature_exchange+0xca>
1005ec70:	78a1      	ldrb	r1, [r4, #2]
1005ec72:	2907      	cmp	r1, #7
1005ec74:	d046      	beq.n	1005ed04 <LL_feature_exchange+0x120>
1005ec76:	2909      	cmp	r1, #9
1005ec78:	d160      	bne.n	1005ed3c <LL_feature_exchange+0x158>
1005ec7a:	4605      	mov	r5, r0
1005ec7c:	1ce4      	adds	r4, r4, #3
1005ec7e:	2205      	movs	r2, #5
1005ec80:	4618      	mov	r0, r3
1005ec82:	4621      	mov	r1, r4
1005ec84:	f7e5 fe8e 	bl	100449a4 <BLEPLAT_MemCpy>
1005ec88:	9803      	ldr	r0, [sp, #12]
1005ec8a:	7c40      	ldrb	r0, [r0, #17]
1005ec8c:	2800      	cmp	r0, #0
1005ec8e:	d005      	beq.n	1005ec9c <LL_feature_exchange+0xb8>
1005ec90:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
1005ec92:	2080      	movs	r0, #128	@ 0x80
1005ec94:	2100      	movs	r1, #0
1005ec96:	4623      	mov	r3, r4
1005ec98:	f007 ff60 	bl	10066b5c <hci_le_read_remote_features_complete_event_push_noinline>
1005ec9c:	6e30      	ldr	r0, [r6, #96]	@ 0x60
1005ec9e:	2110      	movs	r1, #16
1005eca0:	4301      	orrs	r1, r0
1005eca2:	6631      	str	r1, [r6, #96]	@ 0x60
1005eca4:	2203      	movs	r2, #3
1005eca6:	9802      	ldr	r0, [sp, #8]
1005eca8:	9904      	ldr	r1, [sp, #16]
1005ecaa:	f7fe f933 	bl	1005cf14 <LL_cpe_clr_active>
1005ecae:	4628      	mov	r0, r5
1005ecb0:	e044      	b.n	1005ed3c <LL_feature_exchange+0x158>
1005ecb2:	9002      	str	r0, [sp, #8]
1005ecb4:	2009      	movs	r0, #9
1005ecb6:	9001      	str	r0, [sp, #4]
1005ecb8:	7060      	strb	r0, [r4, #1]
1005ecba:	2003      	movs	r0, #3
1005ecbc:	7020      	strb	r0, [r4, #0]
1005ecbe:	1ce7      	adds	r7, r4, #3
1005ecc0:	4638      	mov	r0, r7
1005ecc2:	f000 f83d 	bl	1005ed40 <LL_Get_Supported_Features>
1005ecc6:	79a0      	ldrb	r0, [r4, #6]
1005ecc8:	21f7      	movs	r1, #247	@ 0xf7
1005ecca:	4001      	ands	r1, r0
1005eccc:	71a1      	strb	r1, [r4, #6]
1005ecce:	2508      	movs	r5, #8
1005ecd0:	4638      	mov	r0, r7
1005ecd2:	9f03      	ldr	r7, [sp, #12]
1005ecd4:	4639      	mov	r1, r7
1005ecd6:	462a      	mov	r2, r5
1005ecd8:	f006 fc32 	bl	10065540 <char_copy>
1005ecdc:	9804      	ldr	r0, [sp, #16]
1005ecde:	2801      	cmp	r0, #1
1005ece0:	d108      	bne.n	1005ecf4 <LL_feature_exchange+0x110>
1005ece2:	7830      	ldrb	r0, [r6, #0]
1005ece4:	2802      	cmp	r0, #2
1005ece6:	d126      	bne.n	1005ed36 <LL_feature_exchange+0x152>
1005ece8:	70a5      	strb	r5, [r4, #2]
1005ecea:	e026      	b.n	1005ed3a <LL_feature_exchange+0x156>
1005ecec:	4604      	mov	r4, r0
1005ecee:	2203      	movs	r2, #3
1005ecf0:	9802      	ldr	r0, [sp, #8]
1005ecf2:	e01c      	b.n	1005ed2e <LL_feature_exchange+0x14a>
1005ecf4:	9801      	ldr	r0, [sp, #4]
1005ecf6:	70a0      	strb	r0, [r4, #2]
1005ecf8:	78e0      	ldrb	r0, [r4, #3]
1005ecfa:	7a39      	ldrb	r1, [r7, #8]
1005ecfc:	4001      	ands	r1, r0
1005ecfe:	70e1      	strb	r1, [r4, #3]
1005ed00:	7439      	strb	r1, [r7, #16]
1005ed02:	e01a      	b.n	1005ed3a <LL_feature_exchange+0x156>
1005ed04:	7831      	ldrb	r1, [r6, #0]
1005ed06:	2903      	cmp	r1, #3
1005ed08:	d118      	bne.n	1005ed3c <LL_feature_exchange+0x158>
1005ed0a:	4604      	mov	r4, r0
1005ed0c:	7818      	ldrb	r0, [r3, #0]
1005ed0e:	21f7      	movs	r1, #247	@ 0xf7
1005ed10:	4001      	ands	r1, r0
1005ed12:	7019      	strb	r1, [r3, #0]
1005ed14:	9b03      	ldr	r3, [sp, #12]
1005ed16:	7c58      	ldrb	r0, [r3, #17]
1005ed18:	2800      	cmp	r0, #0
1005ed1a:	d005      	beq.n	1005ed28 <LL_feature_exchange+0x144>
1005ed1c:	8f7a      	ldrh	r2, [r7, #58]	@ 0x3a
1005ed1e:	3308      	adds	r3, #8
1005ed20:	2080      	movs	r0, #128	@ 0x80
1005ed22:	211a      	movs	r1, #26
1005ed24:	f007 ff1a 	bl	10066b5c <hci_le_read_remote_features_complete_event_push_noinline>
1005ed28:	2203      	movs	r2, #3
1005ed2a:	9802      	ldr	r0, [sp, #8]
1005ed2c:	9904      	ldr	r1, [sp, #16]
1005ed2e:	f7fe f8f1 	bl	1005cf14 <LL_cpe_clr_active>
1005ed32:	4620      	mov	r0, r4
1005ed34:	e002      	b.n	1005ed3c <LL_feature_exchange+0x158>
1005ed36:	200e      	movs	r0, #14
1005ed38:	70a0      	strb	r0, [r4, #2]
1005ed3a:	9802      	ldr	r0, [sp, #8]
1005ed3c:	b005      	add	sp, #20
1005ed3e:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005ed40 <LL_Get_Supported_Features>:
1005ed40:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005ed42:	9000      	str	r0, [sp, #0]
1005ed44:	f7f6 fba0 	bl	10055488 <data_length_extension_csr_ucfg_weak>
1005ed48:	4605      	mov	r5, r0
1005ed4a:	f7fa fa4c 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
1005ed4e:	b2c0      	uxtb	r0, r0
1005ed50:	21c0      	movs	r1, #192	@ 0xc0
1005ed52:	4341      	muls	r1, r0
1005ed54:	0628      	lsls	r0, r5, #24
1005ed56:	0cc5      	lsrs	r5, r0, #19
1005ed58:	430d      	orrs	r5, r1
1005ed5a:	2009      	movs	r0, #9
1005ed5c:	0206      	lsls	r6, r0, #8
1005ed5e:	f7f6 fc61 	bl	10055624 <phy_upd_csr_ucfg_weak>
1005ed62:	b2c7      	uxtb	r7, r0
1005ed64:	4377      	muls	r7, r6
1005ed66:	432f      	orrs	r7, r5
1005ed68:	f7f0 f883 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
1005ed6c:	0305      	lsls	r5, r0, #12
1005ed6e:	433d      	orrs	r5, r7
1005ed70:	4e2c      	ldr	r6, [pc, #176]	@ (1005ee24 <__arm_cp.1_0>)
1005ed72:	47b0      	blx	r6
1005ed74:	b2c0      	uxtb	r0, r0
1005ed76:	4f2c      	ldr	r7, [pc, #176]	@ (1005ee28 <__arm_cp.1_1>)
1005ed78:	4347      	muls	r7, r0
1005ed7a:	432f      	orrs	r7, r5
1005ed7c:	200d      	movs	r0, #13
1005ed7e:	0685      	lsls	r5, r0, #26
1005ed80:	f7f8 fffa 	bl	10057d78 <cis_csr_ucfg_weak>
1005ed84:	b2c4      	uxtb	r4, r0
1005ed86:	436c      	muls	r4, r5
1005ed88:	433c      	orrs	r4, r7
1005ed8a:	2073      	movs	r0, #115	@ 0x73
1005ed8c:	0445      	lsls	r5, r0, #17
1005ed8e:	f7f6 f9c9 	bl	10055124 <cte_csr_ucfg_weak>
1005ed92:	b2c7      	uxtb	r7, r0
1005ed94:	436f      	muls	r7, r5
1005ed96:	4327      	orrs	r7, r4
1005ed98:	f7f6 f9c4 	bl	10055124 <cte_csr_ucfg_weak>
1005ed9c:	4605      	mov	r5, r0
1005ed9e:	47b0      	blx	r6
1005eda0:	4028      	ands	r0, r5
1005eda2:	b2c0      	uxtb	r0, r0
1005eda4:	2503      	movs	r5, #3
1005eda6:	04ec      	lsls	r4, r5, #19
1005eda8:	4344      	muls	r4, r0
1005edaa:	433c      	orrs	r4, r7
1005edac:	f7f8 ffe2 	bl	10057d74 <bis_csr_ucfg_weak>
1005edb0:	0780      	lsls	r0, r0, #30
1005edb2:	4247      	negs	r7, r0
1005edb4:	4327      	orrs	r7, r4
1005edb6:	f002 fd3b 	bl	10061830 <llc_get_channel_sel_algo2_enabled>
1005edba:	0380      	lsls	r0, r0, #14
1005edbc:	4338      	orrs	r0, r7
1005edbe:	491b      	ldr	r1, [pc, #108]	@ (1005ee2c <__arm_cp.1_2>)
1005edc0:	4301      	orrs	r1, r0
1005edc2:	9101      	str	r1, [sp, #4]
1005edc4:	f7f6 fc2c 	bl	10055620 <pcl_csr_ucfg_weak>
1005edc8:	b2c0      	uxtb	r0, r0
1005edca:	240e      	movs	r4, #14
1005edcc:	4344      	muls	r4, r0
1005edce:	f7f6 f88b 	bl	10054ee8 <chc_csr_ucfg_weak>
1005edd2:	0600      	lsls	r0, r0, #24
1005edd4:	0c47      	lsrs	r7, r0, #17
1005edd6:	4327      	orrs	r7, r4
1005edd8:	47b0      	blx	r6
1005edda:	21f9      	movs	r1, #249	@ 0xf9
1005eddc:	0109      	lsls	r1, r1, #4
1005edde:	0104      	lsls	r4, r0, #4
1005ede0:	400c      	ands	r4, r1
1005ede2:	433c      	orrs	r4, r7
1005ede4:	022e      	lsls	r6, r5, #8
1005ede6:	f7f0 f844 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
1005edea:	4605      	mov	r5, r0
1005edec:	4375      	muls	r5, r6
1005edee:	4325      	orrs	r5, r4
1005edf0:	2001      	movs	r0, #1
1005edf2:	02c4      	lsls	r4, r0, #11
1005edf4:	f7ef fb43 	bl	1004e47e <scan_csr_ucfg>
1005edf8:	0600      	lsls	r0, r0, #24
1005edfa:	0b00      	lsrs	r0, r0, #12
1005edfc:	1904      	adds	r4, r0, r4
1005edfe:	f7ef fd02 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
1005ee02:	b2c0      	uxtb	r0, r0
1005ee04:	4360      	muls	r0, r4
1005ee06:	4328      	orrs	r0, r5
1005ee08:	2161      	movs	r1, #97	@ 0x61
1005ee0a:	4301      	orrs	r1, r0
1005ee0c:	4808      	ldr	r0, [pc, #32]	@ (1005ee30 <__arm_cp.1_3>)
1005ee0e:	6800      	ldr	r0, [r0, #0]
1005ee10:	6a00      	ldr	r0, [r0, #32]
1005ee12:	4008      	ands	r0, r1
1005ee14:	9002      	str	r0, [sp, #8]
1005ee16:	a901      	add	r1, sp, #4
1005ee18:	2208      	movs	r2, #8
1005ee1a:	9800      	ldr	r0, [sp, #0]
1005ee1c:	f7e5 fdc2 	bl	100449a4 <BLEPLAT_MemCpy>
1005ee20:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1005ee22:	46c0      	nop			@ (mov r8, r8)

1005ee24 <__arm_cp.1_0>:
1005ee24:	1004e749 	.word	0x1004e749

1005ee28 <__arm_cp.1_1>:
1005ee28:	03002000 	.word	0x03002000

1005ee2c <__arm_cp.1_2>:
1005ee2c:	0800001d 	.word	0x0800001d

1005ee30 <__arm_cp.1_3>:
1005ee30:	20000894 	.word	0x20000894

1005ee34 <LL_Read_Remote_Used_Features>:
1005ee34:	b570      	push	{r4, r5, r6, lr}
1005ee36:	4604      	mov	r4, r0
1005ee38:	4608      	mov	r0, r1
1005ee3a:	f7f7 f8f5 	bl	10056028 <llc_conn_get_cntxt_per_p_from_handle>
1005ee3e:	2800      	cmp	r0, #0
1005ee40:	d01c      	beq.n	1005ee7c <LL_Read_Remote_Used_Features+0x48>
1005ee42:	4606      	mov	r6, r0
1005ee44:	362c      	adds	r6, #44	@ 0x2c
1005ee46:	7831      	ldrb	r1, [r6, #0]
1005ee48:	2903      	cmp	r1, #3
1005ee4a:	d107      	bne.n	1005ee5c <LL_Read_Remote_Used_Features+0x28>
1005ee4c:	2197      	movs	r1, #151	@ 0x97
1005ee4e:	0049      	lsls	r1, r1, #1
1005ee50:	1840      	adds	r0, r0, r1
1005ee52:	7800      	ldrb	r0, [r0, #0]
1005ee54:	0700      	lsls	r0, r0, #28
1005ee56:	d401      	bmi.n	1005ee5c <LL_Read_Remote_Used_Features+0x28>
1005ee58:	241a      	movs	r4, #26
1005ee5a:	e024      	b.n	1005eea6 <LL_Read_Remote_Used_Features+0x72>
1005ee5c:	7930      	ldrb	r0, [r6, #4]
1005ee5e:	2101      	movs	r1, #1
1005ee60:	f7fe f833 	bl	1005ceca <LL_cpe_get_active_status>
1005ee64:	2800      	cmp	r0, #0
1005ee66:	d00d      	beq.n	1005ee84 <LL_Read_Remote_Used_Features+0x50>
1005ee68:	2c00      	cmp	r4, #0
1005ee6a:	d109      	bne.n	1005ee80 <LL_Read_Remote_Used_Features+0x4c>
1005ee6c:	7930      	ldrb	r0, [r6, #4]
1005ee6e:	2101      	movs	r1, #1
1005ee70:	f7fe fe44 	bl	1005dafc <LL_cpe_conn_get_proc_id_from_sm>
1005ee74:	2803      	cmp	r0, #3
1005ee76:	d103      	bne.n	1005ee80 <LL_Read_Remote_Used_Features+0x4c>
1005ee78:	2400      	movs	r4, #0
1005ee7a:	e014      	b.n	1005eea6 <LL_Read_Remote_Used_Features+0x72>
1005ee7c:	2402      	movs	r4, #2
1005ee7e:	e012      	b.n	1005eea6 <LL_Read_Remote_Used_Features+0x72>
1005ee80:	243a      	movs	r4, #58	@ 0x3a
1005ee82:	e010      	b.n	1005eea6 <LL_Read_Remote_Used_Features+0x72>
1005ee84:	7930      	ldrb	r0, [r6, #4]
1005ee86:	2501      	movs	r5, #1
1005ee88:	4629      	mov	r1, r5
1005ee8a:	f7fe f882 	bl	1005cf92 <LL_cpe_get_cntxt>
1005ee8e:	7444      	strb	r4, [r0, #17]
1005ee90:	7930      	ldrb	r0, [r6, #4]
1005ee92:	4629      	mov	r1, r5
1005ee94:	f7fe f870 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005ee98:	7930      	ldrb	r0, [r6, #4]
1005ee9a:	2203      	movs	r2, #3
1005ee9c:	2400      	movs	r4, #0
1005ee9e:	4629      	mov	r1, r5
1005eea0:	4623      	mov	r3, r4
1005eea2:	f7fe f820 	bl	1005cee6 <LL_cpe_set_active>
1005eea6:	4620      	mov	r0, r4
1005eea8:	bd70      	pop	{r4, r5, r6, pc}

1005eeaa <LLC_update_le_ping_params>:
1005eeaa:	b5b0      	push	{r4, r5, r7, lr}
1005eeac:	4615      	mov	r5, r2
1005eeae:	460c      	mov	r4, r1
1005eeb0:	f7f7 f8ac 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005eeb4:	2185      	movs	r1, #133	@ 0x85
1005eeb6:	0049      	lsls	r1, r1, #1
1005eeb8:	5a43      	ldrh	r3, [r0, r1]
1005eeba:	2d00      	cmp	r5, #0
1005eebc:	461a      	mov	r2, r3
1005eebe:	d000      	beq.n	1005eec2 <LLC_update_le_ping_params+0x18>
1005eec0:	4622      	mov	r2, r4
1005eec2:	1841      	adds	r1, r0, r1
1005eec4:	8b0c      	ldrh	r4, [r1, #24]
1005eec6:	6cc5      	ldr	r5, [r0, #76]	@ 0x4c
1005eec8:	4365      	muls	r5, r4
1005eeca:	8f00      	ldrh	r0, [r0, #56]	@ 0x38
1005eecc:	300a      	adds	r0, #10
1005eece:	4368      	muls	r0, r5
1005eed0:	0b00      	lsrs	r0, r0, #12
1005eed2:	b284      	uxth	r4, r0
1005eed4:	1d64      	adds	r4, r4, #5
1005eed6:	4294      	cmp	r4, r2
1005eed8:	d300      	bcc.n	1005eedc <LLC_update_le_ping_params+0x32>
1005eeda:	4622      	mov	r2, r4
1005eedc:	b294      	uxth	r4, r2
1005eede:	42a3      	cmp	r3, r4
1005eee0:	d00b      	beq.n	1005eefa <LLC_update_le_ping_params+0x50>
1005eee2:	8048      	strh	r0, [r1, #2]
1005eee4:	800a      	strh	r2, [r1, #0]
1005eee6:	7908      	ldrb	r0, [r1, #4]
1005eee8:	2801      	cmp	r0, #1
1005eeea:	d006      	beq.n	1005eefa <LLC_update_le_ping_params+0x50>
1005eeec:	2002      	movs	r0, #2
1005eeee:	7108      	strb	r0, [r1, #4]
1005eef0:	2012      	movs	r0, #18
1005eef2:	f006 f99d 	bl	10065230 <tsk_notify_idx>
1005eef6:	f7e3 fcee 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005eefa:	bdb0      	pop	{r4, r5, r7, pc}

1005eefc <LLC_init_le_ping_params>:
1005eefc:	b5b0      	push	{r4, r5, r7, lr}
1005eefe:	2185      	movs	r1, #133	@ 0x85
1005ef00:	004a      	lsls	r2, r1, #1
1005ef02:	1881      	adds	r1, r0, r2
1005ef04:	8b0b      	ldrh	r3, [r1, #24]
1005ef06:	6cc4      	ldr	r4, [r0, #76]	@ 0x4c
1005ef08:	435c      	muls	r4, r3
1005ef0a:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
1005ef0c:	330a      	adds	r3, #10
1005ef0e:	4363      	muls	r3, r4
1005ef10:	0b1b      	lsrs	r3, r3, #12
1005ef12:	b29c      	uxth	r4, r3
1005ef14:	4d07      	ldr	r5, [pc, #28]	@ (1005ef34 <__arm_cp.3_0>)
1005ef16:	42ac      	cmp	r4, r5
1005ef18:	d800      	bhi.n	1005ef1c <LLC_init_le_ping_params+0x20>
1005ef1a:	462c      	mov	r4, r5
1005ef1c:	1d64      	adds	r4, r4, #5
1005ef1e:	5284      	strh	r4, [r0, r2]
1005ef20:	2001      	movs	r0, #1
1005ef22:	7108      	strb	r0, [r1, #4]
1005ef24:	804b      	strh	r3, [r1, #2]
1005ef26:	2012      	movs	r0, #18
1005ef28:	f006 f982 	bl	10065230 <tsk_notify_idx>
1005ef2c:	f7e3 fcd3 	bl	100428d6 <BLE_STACK_ProcessRequest>
1005ef30:	bdb0      	pop	{r4, r5, r7, pc}
1005ef32:	46c0      	nop			@ (mov r8, r8)

1005ef34 <__arm_cp.3_0>:
1005ef34:	00000bb3 	.word	0x00000bb3

1005ef38 <LLC_authenticated_payload_timeout_processing>:
1005ef38:	b5f0      	push	{r4, r5, r6, r7, lr}
1005ef3a:	b089      	sub	sp, #36	@ 0x24
1005ef3c:	2400      	movs	r4, #0
1005ef3e:	4620      	mov	r0, r4
1005ef40:	f7f7 f864 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005ef44:	9000      	str	r0, [sp, #0]
1005ef46:	2001      	movs	r0, #1
1005ef48:	9008      	str	r0, [sp, #32]
1005ef4a:	4843      	ldr	r0, [pc, #268]	@ (1005f058 <__arm_cp.5_0>)
1005ef4c:	6800      	ldr	r0, [r0, #0]
1005ef4e:	2134      	movs	r1, #52	@ 0x34
1005ef50:	5c40      	ldrb	r0, [r0, r1]
1005ef52:	4284      	cmp	r4, r0
1005ef54:	d300      	bcc.n	1005ef58 <LLC_authenticated_payload_timeout_processing+0x20>
1005ef56:	e07d      	b.n	1005f054 <LLC_authenticated_payload_timeout_processing+0x11c>
1005ef58:	204d      	movs	r0, #77	@ 0x4d
1005ef5a:	0080      	lsls	r0, r0, #2
1005ef5c:	9405      	str	r4, [sp, #20]
1005ef5e:	4360      	muls	r0, r4
1005ef60:	9900      	ldr	r1, [sp, #0]
1005ef62:	180c      	adds	r4, r1, r0
1005ef64:	202c      	movs	r0, #44	@ 0x2c
1005ef66:	5c20      	ldrb	r0, [r4, r0]
1005ef68:	21fe      	movs	r1, #254	@ 0xfe
1005ef6a:	4001      	ands	r1, r0
1005ef6c:	2902      	cmp	r1, #2
1005ef6e:	d16e      	bne.n	1005f04e <LLC_authenticated_payload_timeout_processing+0x116>
1005ef70:	2101      	movs	r1, #1
1005ef72:	9e00      	ldr	r6, [sp, #0]
1005ef74:	4630      	mov	r0, r6
1005ef76:	9107      	str	r1, [sp, #28]
1005ef78:	f7f7 fafa 	bl	10056570 <llc_conn_get_enc_on>
1005ef7c:	4605      	mov	r5, r0
1005ef7e:	2100      	movs	r1, #0
1005ef80:	4630      	mov	r0, r6
1005ef82:	9101      	str	r1, [sp, #4]
1005ef84:	f7f7 faf4 	bl	10056570 <llc_conn_get_enc_on>
1005ef88:	1e41      	subs	r1, r0, #1
1005ef8a:	4188      	sbcs	r0, r1
1005ef8c:	2d00      	cmp	r5, #0
1005ef8e:	9908      	ldr	r1, [sp, #32]
1005ef90:	9104      	str	r1, [sp, #16]
1005ef92:	d100      	bne.n	1005ef96 <LLC_authenticated_payload_timeout_processing+0x5e>
1005ef94:	9004      	str	r0, [sp, #16]
1005ef96:	2043      	movs	r0, #67	@ 0x43
1005ef98:	0080      	lsls	r0, r0, #2
1005ef9a:	1820      	adds	r0, r4, r0
1005ef9c:	9003      	str	r0, [sp, #12]
1005ef9e:	2085      	movs	r0, #133	@ 0x85
1005efa0:	0040      	lsls	r0, r0, #1
1005efa2:	1820      	adds	r0, r4, r0
1005efa4:	9002      	str	r0, [sp, #8]
1005efa6:	2087      	movs	r0, #135	@ 0x87
1005efa8:	0040      	lsls	r0, r0, #1
1005efaa:	1823      	adds	r3, r4, r0
1005efac:	9f08      	ldr	r7, [sp, #32]
1005efae:	9306      	str	r3, [sp, #24]
1005efb0:	781c      	ldrb	r4, [r3, #0]
1005efb2:	26f0      	movs	r6, #240	@ 0xf0
1005efb4:	4026      	ands	r6, r4
1005efb6:	250f      	movs	r5, #15
1005efb8:	4025      	ands	r5, r4
1005efba:	2d03      	cmp	r5, #3
1005efbc:	d01f      	beq.n	1005effe <LLC_authenticated_payload_timeout_processing+0xc6>
1005efbe:	2d02      	cmp	r5, #2
1005efc0:	d00b      	beq.n	1005efda <LLC_authenticated_payload_timeout_processing+0xa2>
1005efc2:	2d01      	cmp	r5, #1
1005efc4:	d12b      	bne.n	1005f01e <LLC_authenticated_payload_timeout_processing+0xe6>
1005efc6:	9804      	ldr	r0, [sp, #16]
1005efc8:	2800      	cmp	r0, #0
1005efca:	d02c      	beq.n	1005f026 <LLC_authenticated_payload_timeout_processing+0xee>
1005efcc:	2012      	movs	r0, #18
1005efce:	2101      	movs	r1, #1
1005efd0:	f006 f940 	bl	10065254 <tsk_wait_resource_idx>
1005efd4:	9b06      	ldr	r3, [sp, #24]
1005efd6:	2502      	movs	r5, #2
1005efd8:	e025      	b.n	1005f026 <LLC_authenticated_payload_timeout_processing+0xee>
1005efda:	9803      	ldr	r0, [sp, #12]
1005efdc:	8800      	ldrh	r0, [r0, #0]
1005efde:	9902      	ldr	r1, [sp, #8]
1005efe0:	8809      	ldrh	r1, [r1, #0]
1005efe2:	1a08      	subs	r0, r1, r0
1005efe4:	230a      	movs	r3, #10
1005efe6:	4343      	muls	r3, r0
1005efe8:	481c      	ldr	r0, [pc, #112]	@ (1005f05c <__arm_cp.5_1>)
1005efea:	6800      	ldr	r0, [r0, #0]
1005efec:	9905      	ldr	r1, [sp, #20]
1005efee:	b2c9      	uxtb	r1, r1
1005eff0:	30b0      	adds	r0, #176	@ 0xb0
1005eff2:	2201      	movs	r2, #1
1005eff4:	f006 f9c5 	bl	10065382 <CST_start>
1005eff8:	9b06      	ldr	r3, [sp, #24]
1005effa:	2503      	movs	r5, #3
1005effc:	e013      	b.n	1005f026 <LLC_authenticated_payload_timeout_processing+0xee>
1005effe:	06a0      	lsls	r0, r4, #26
1005f000:	d511      	bpl.n	1005f026 <LLC_authenticated_payload_timeout_processing+0xee>
1005f002:	9804      	ldr	r0, [sp, #16]
1005f004:	2800      	cmp	r0, #0
1005f006:	d00c      	beq.n	1005f022 <LLC_authenticated_payload_timeout_processing+0xea>
1005f008:	9805      	ldr	r0, [sp, #20]
1005f00a:	b2c0      	uxtb	r0, r0
1005f00c:	f000 f828 	bl	1005f060 <LLC_authenticated_payload_timeout_start_le_ping>
1005f010:	2800      	cmp	r0, #0
1005f012:	d001      	beq.n	1005f018 <LLC_authenticated_payload_timeout_processing+0xe0>
1005f014:	26d0      	movs	r6, #208	@ 0xd0
1005f016:	4026      	ands	r6, r4
1005f018:	9808      	ldr	r0, [sp, #32]
1005f01a:	9b06      	ldr	r3, [sp, #24]
1005f01c:	e004      	b.n	1005f028 <LLC_authenticated_payload_timeout_processing+0xf0>
1005f01e:	9801      	ldr	r0, [sp, #4]
1005f020:	e002      	b.n	1005f028 <LLC_authenticated_payload_timeout_processing+0xf0>
1005f022:	26d0      	movs	r6, #208	@ 0xd0
1005f024:	4026      	ands	r6, r4
1005f026:	9808      	ldr	r0, [sp, #32]
1005f028:	f3ef 8110 	mrs	r1, PRIMASK
1005f02c:	b672      	cpsid	i
1005f02e:	7819      	ldrb	r1, [r3, #0]
1005f030:	428c      	cmp	r4, r1
1005f032:	d103      	bne.n	1005f03c <LLC_authenticated_payload_timeout_processing+0x104>
1005f034:	432e      	orrs	r6, r5
1005f036:	701e      	strb	r6, [r3, #0]
1005f038:	2100      	movs	r1, #0
1005f03a:	e002      	b.n	1005f042 <LLC_authenticated_payload_timeout_processing+0x10a>
1005f03c:	9907      	ldr	r1, [sp, #28]
1005f03e:	400f      	ands	r7, r1
1005f040:	4639      	mov	r1, r7
1005f042:	1e4a      	subs	r2, r1, #1
1005f044:	4191      	sbcs	r1, r2
1005f046:	b662      	cpsie	i
1005f048:	2700      	movs	r7, #0
1005f04a:	4208      	tst	r0, r1
1005f04c:	d1b0      	bne.n	1005efb0 <LLC_authenticated_payload_timeout_processing+0x78>
1005f04e:	9c05      	ldr	r4, [sp, #20]
1005f050:	1c64      	adds	r4, r4, #1
1005f052:	e77a      	b.n	1005ef4a <LLC_authenticated_payload_timeout_processing+0x12>
1005f054:	b009      	add	sp, #36	@ 0x24
1005f056:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005f058 <__arm_cp.5_0>:
1005f058:	2000083c 	.word	0x2000083c

1005f05c <__arm_cp.5_1>:
1005f05c:	20000894 	.word	0x20000894

1005f060 <LLC_authenticated_payload_timeout_start_le_ping>:
1005f060:	b570      	push	{r4, r5, r6, lr}
1005f062:	4605      	mov	r5, r0
1005f064:	2101      	movs	r1, #1
1005f066:	f7fd ff30 	bl	1005ceca <LL_cpe_get_active_status>
1005f06a:	4604      	mov	r4, r0
1005f06c:	2801      	cmp	r0, #1
1005f06e:	d104      	bne.n	1005f07a <LLC_authenticated_payload_timeout_start_le_ping+0x1a>
1005f070:	2012      	movs	r0, #18
1005f072:	2101      	movs	r1, #1
1005f074:	f006 f8ee 	bl	10065254 <tsk_wait_resource_idx>
1005f078:	e00a      	b.n	1005f090 <LLC_authenticated_payload_timeout_start_le_ping+0x30>
1005f07a:	2601      	movs	r6, #1
1005f07c:	4628      	mov	r0, r5
1005f07e:	4631      	mov	r1, r6
1005f080:	f7fd ff7a 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005f084:	2208      	movs	r2, #8
1005f086:	2300      	movs	r3, #0
1005f088:	4628      	mov	r0, r5
1005f08a:	4631      	mov	r1, r6
1005f08c:	f7fd ff2b 	bl	1005cee6 <LL_cpe_set_active>
1005f090:	4260      	negs	r0, r4
1005f092:	4160      	adcs	r0, r4
1005f094:	bd70      	pop	{r4, r5, r6, pc}
	...

1005f098 <LLC_authenticated_payload_timeout_cb>:
1005f098:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1005f09a:	4604      	mov	r4, r0
1005f09c:	f7f6 ffb6 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005f0a0:	4605      	mov	r5, r0
1005f0a2:	202c      	movs	r0, #44	@ 0x2c
1005f0a4:	5c28      	ldrb	r0, [r5, r0]
1005f0a6:	21fe      	movs	r1, #254	@ 0xfe
1005f0a8:	4001      	ands	r1, r0
1005f0aa:	2902      	cmp	r1, #2
1005f0ac:	d15b      	bne.n	1005f166 <LLC_authenticated_payload_timeout_cb+0xce>
1005f0ae:	9402      	str	r4, [sp, #8]
1005f0b0:	2085      	movs	r0, #133	@ 0x85
1005f0b2:	0040      	lsls	r0, r0, #1
1005f0b4:	182f      	adds	r7, r5, r0
1005f0b6:	793a      	ldrb	r2, [r7, #4]
1005f0b8:	06d0      	lsls	r0, r2, #27
1005f0ba:	d419      	bmi.n	1005f0f0 <LLC_authenticated_payload_timeout_cb+0x58>
1005f0bc:	24f0      	movs	r4, #240	@ 0xf0
1005f0be:	9201      	str	r2, [sp, #4]
1005f0c0:	4014      	ands	r4, r2
1005f0c2:	2101      	movs	r1, #1
1005f0c4:	4628      	mov	r0, r5
1005f0c6:	f7f7 fa53 	bl	10056570 <llc_conn_get_enc_on>
1005f0ca:	4606      	mov	r6, r0
1005f0cc:	2100      	movs	r1, #0
1005f0ce:	4628      	mov	r0, r5
1005f0d0:	f7f7 fa4e 	bl	10056570 <llc_conn_get_enc_on>
1005f0d4:	4330      	orrs	r0, r6
1005f0d6:	d006      	beq.n	1005f0e6 <LLC_authenticated_payload_timeout_cb+0x4e>
1005f0d8:	9802      	ldr	r0, [sp, #8]
1005f0da:	f7ff ffc1 	bl	1005f060 <LLC_authenticated_payload_timeout_start_le_ping>
1005f0de:	2801      	cmp	r0, #1
1005f0e0:	d001      	beq.n	1005f0e6 <LLC_authenticated_payload_timeout_cb+0x4e>
1005f0e2:	2020      	movs	r0, #32
1005f0e4:	4304      	orrs	r4, r0
1005f0e6:	9a01      	ldr	r2, [sp, #4]
1005f0e8:	2610      	movs	r6, #16
1005f0ea:	4326      	orrs	r6, r4
1005f0ec:	8878      	ldrh	r0, [r7, #2]
1005f0ee:	e027      	b.n	1005f140 <LLC_authenticated_payload_timeout_cb+0xa8>
1005f0f0:	26c0      	movs	r6, #192	@ 0xc0
1005f0f2:	481d      	ldr	r0, [pc, #116]	@ (1005f168 <__arm_cp.7_0>)
1005f0f4:	6800      	ldr	r0, [r0, #0]
1005f0f6:	2140      	movs	r1, #64	@ 0x40
1005f0f8:	5640      	ldrsb	r0, [r0, r1]
1005f0fa:	2800      	cmp	r0, #0
1005f0fc:	d51c      	bpl.n	1005f138 <LLC_authenticated_payload_timeout_cb+0xa0>
1005f0fe:	8f68      	ldrh	r0, [r5, #58]	@ 0x3a
1005f100:	9001      	str	r0, [sp, #4]
1005f102:	481a      	ldr	r0, [pc, #104]	@ (1005f16c <__arm_cp.7_1>)
1005f104:	6800      	ldr	r0, [r0, #0]
1005f106:	6980      	ldr	r0, [r0, #24]
1005f108:	2142      	movs	r1, #66	@ 0x42
1005f10a:	4614      	mov	r4, r2
1005f10c:	2223      	movs	r2, #35	@ 0x23
1005f10e:	2502      	movs	r5, #2
1005f110:	462b      	mov	r3, r5
1005f112:	f7f1 f8f5 	bl	10050300 <aci_event_fifo_push_header>
1005f116:	4622      	mov	r2, r4
1005f118:	2800      	cmp	r0, #0
1005f11a:	d00d      	beq.n	1005f138 <LLC_authenticated_payload_timeout_cb+0xa0>
1005f11c:	4601      	mov	r1, r0
1005f11e:	9a01      	ldr	r2, [sp, #4]
1005f120:	71c2      	strb	r2, [r0, #7]
1005f122:	7185      	strb	r5, [r0, #6]
1005f124:	2057      	movs	r0, #87	@ 0x57
1005f126:	7148      	strb	r0, [r1, #5]
1005f128:	2004      	movs	r0, #4
1005f12a:	7108      	strb	r0, [r1, #4]
1005f12c:	0a10      	lsrs	r0, r2, #8
1005f12e:	7208      	strb	r0, [r1, #8]
1005f130:	2042      	movs	r0, #66	@ 0x42
1005f132:	f7f1 f982 	bl	1005043a <aci_event_fifo_push>
1005f136:	4622      	mov	r2, r4
1005f138:	4016      	ands	r6, r2
1005f13a:	8878      	ldrh	r0, [r7, #2]
1005f13c:	8839      	ldrh	r1, [r7, #0]
1005f13e:	1a08      	subs	r0, r1, r0
1005f140:	230a      	movs	r3, #10
1005f142:	4343      	muls	r3, r0
1005f144:	f3ef 8010 	mrs	r0, PRIMASK
1005f148:	b672      	cpsid	i
1005f14a:	7938      	ldrb	r0, [r7, #4]
1005f14c:	4282      	cmp	r2, r0
1005f14e:	9902      	ldr	r1, [sp, #8]
1005f150:	d102      	bne.n	1005f158 <LLC_authenticated_payload_timeout_cb+0xc0>
1005f152:	2003      	movs	r0, #3
1005f154:	4306      	orrs	r6, r0
1005f156:	713e      	strb	r6, [r7, #4]
1005f158:	b662      	cpsie	i
1005f15a:	4803      	ldr	r0, [pc, #12]	@ (1005f168 <__arm_cp.7_0>)
1005f15c:	6800      	ldr	r0, [r0, #0]
1005f15e:	30b0      	adds	r0, #176	@ 0xb0
1005f160:	2201      	movs	r2, #1
1005f162:	f006 f90e 	bl	10065382 <CST_start>
1005f166:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1005f168 <__arm_cp.7_0>:
1005f168:	20000894 	.word	0x20000894

1005f16c <__arm_cp.7_1>:
1005f16c:	20000840 	.word	0x20000840

1005f170 <LLC_authenticated_payload_timeout_reset>:
1005f170:	b510      	push	{r4, lr}
1005f172:	4604      	mov	r4, r0
1005f174:	2087      	movs	r0, #135	@ 0x87
1005f176:	0040      	lsls	r0, r0, #1
1005f178:	5c20      	ldrb	r0, [r4, r0]
1005f17a:	2801      	cmp	r0, #1
1005f17c:	d00e      	beq.n	1005f19c <LLC_authenticated_payload_timeout_reset+0x2c>
1005f17e:	4620      	mov	r0, r4
1005f180:	3030      	adds	r0, #48	@ 0x30
1005f182:	7801      	ldrb	r1, [r0, #0]
1005f184:	4806      	ldr	r0, [pc, #24]	@ (1005f1a0 <__arm_cp.8_0>)
1005f186:	6800      	ldr	r0, [r0, #0]
1005f188:	30b0      	adds	r0, #176	@ 0xb0
1005f18a:	f006 f8c4 	bl	10065316 <CST_stop>
1005f18e:	2085      	movs	r0, #133	@ 0x85
1005f190:	0040      	lsls	r0, r0, #1
1005f192:	2100      	movs	r1, #0
1005f194:	5221      	strh	r1, [r4, r0]
1005f196:	1820      	adds	r0, r4, r0
1005f198:	8041      	strh	r1, [r0, #2]
1005f19a:	7101      	strb	r1, [r0, #4]
1005f19c:	bd10      	pop	{r4, pc}
1005f19e:	46c0      	nop			@ (mov r8, r8)

1005f1a0 <__arm_cp.8_0>:
1005f1a0:	20000894 	.word	0x20000894

1005f1a4 <LLC_le_ping>:
1005f1a4:	b570      	push	{r4, r5, r6, lr}
1005f1a6:	24ff      	movs	r4, #255	@ 0xff
1005f1a8:	2a06      	cmp	r2, #6
1005f1aa:	d835      	bhi.n	1005f218 <LLC_le_ping+0x74>
1005f1ac:	4605      	mov	r5, r0
1005f1ae:	0090      	lsls	r0, r2, #2
1005f1b0:	a201      	add	r2, pc, #4	@ (adr r2, 1005f1b8 <LLC_le_ping+0x14>)
1005f1b2:	5810      	ldr	r0, [r2, r0]
1005f1b4:	4687      	mov	pc, r0
1005f1b6:	46c0      	nop			@ (mov r8, r8)
1005f1b8:	1005f1d5 	.word	0x1005f1d5
1005f1bc:	1005f1dd 	.word	0x1005f1dd
1005f1c0:	1005f219 	.word	0x1005f219
1005f1c4:	1005f1f5 	.word	0x1005f1f5
1005f1c8:	1005f219 	.word	0x1005f219
1005f1cc:	1005f219 	.word	0x1005f219
1005f1d0:	1005f1f9 	.word	0x1005f1f9
1005f1d4:	2901      	cmp	r1, #1
1005f1d6:	d117      	bne.n	1005f208 <LLC_le_ping+0x64>
1005f1d8:	2413      	movs	r4, #19
1005f1da:	e01d      	b.n	1005f218 <LLC_le_ping+0x74>
1005f1dc:	2600      	movs	r6, #0
1005f1de:	4628      	mov	r0, r5
1005f1e0:	4631      	mov	r1, r6
1005f1e2:	f7fd fec9 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005f1e6:	2208      	movs	r2, #8
1005f1e8:	4628      	mov	r0, r5
1005f1ea:	4631      	mov	r1, r6
1005f1ec:	4633      	mov	r3, r6
1005f1ee:	f7fd fe7a 	bl	1005cee6 <LL_cpe_set_active>
1005f1f2:	e011      	b.n	1005f218 <LLC_le_ping+0x74>
1005f1f4:	2101      	movs	r1, #1
1005f1f6:	e008      	b.n	1005f20a <LLC_le_ping+0x66>
1005f1f8:	2001      	movs	r0, #1
1005f1fa:	7058      	strb	r0, [r3, #1]
1005f1fc:	2003      	movs	r0, #3
1005f1fe:	7018      	strb	r0, [r3, #0]
1005f200:	2901      	cmp	r1, #1
1005f202:	d007      	beq.n	1005f214 <LLC_le_ping+0x70>
1005f204:	2013      	movs	r0, #19
1005f206:	e006      	b.n	1005f216 <LLC_le_ping+0x72>
1005f208:	2100      	movs	r1, #0
1005f20a:	2208      	movs	r2, #8
1005f20c:	4628      	mov	r0, r5
1005f20e:	f7fd fe81 	bl	1005cf14 <LL_cpe_clr_active>
1005f212:	e001      	b.n	1005f218 <LLC_le_ping+0x74>
1005f214:	2012      	movs	r0, #18
1005f216:	7098      	strb	r0, [r3, #2]
1005f218:	4620      	mov	r0, r4
1005f21a:	bd70      	pop	{r4, r5, r6, pc}

1005f21c <llc_past_mem_allocate>:
1005f21c:	b570      	push	{r4, r5, r6, lr}
1005f21e:	2801      	cmp	r0, #1
1005f220:	d11d      	bne.n	1005f25e <llc_past_mem_allocate+0x42>
1005f222:	2901      	cmp	r1, #1
1005f224:	d11b      	bne.n	1005f25e <llc_past_mem_allocate+0x42>
1005f226:	2a01      	cmp	r2, #1
1005f228:	d119      	bne.n	1005f25e <llc_past_mem_allocate+0x42>
1005f22a:	2b01      	cmp	r3, #1
1005f22c:	d117      	bne.n	1005f25e <llc_past_mem_allocate+0x42>
1005f22e:	480c      	ldr	r0, [pc, #48]	@ (1005f260 <__arm_cp.1_0>)
1005f230:	7ac4      	ldrb	r4, [r0, #11]
1005f232:	2001      	movs	r0, #1
1005f234:	210c      	movs	r1, #12
1005f236:	f003 fdfd 	bl	10062e34 <csmem_mem_0_assign>
1005f23a:	4605      	mov	r5, r0
1005f23c:	2118      	movs	r1, #24
1005f23e:	4620      	mov	r0, r4
1005f240:	f003 fdf8 	bl	10062e34 <csmem_mem_0_assign>
1005f244:	4606      	mov	r6, r0
1005f246:	f7fa f917 	bl	10059478 <llc_pscan_get_cntxt_p>
1005f24a:	6045      	str	r5, [r0, #4]
1005f24c:	60ae      	str	r6, [r5, #8]
1005f24e:	2500      	movs	r5, #0
1005f250:	b2e8      	uxtb	r0, r5
1005f252:	42a0      	cmp	r0, r4
1005f254:	d203      	bcs.n	1005f25e <llc_past_mem_allocate+0x42>
1005f256:	f7ef fd97 	bl	1004ed88 <LL_past_initialize_connect_context_ucfg>
1005f25a:	1c6d      	adds	r5, r5, #1
1005f25c:	e7f8      	b.n	1005f250 <llc_past_mem_allocate+0x34>
1005f25e:	bd70      	pop	{r4, r5, r6, pc}

1005f260 <__arm_cp.1_0>:
1005f260:	200008a8 	.word	0x200008a8

1005f264 <LL_past_get_past_context_overall>:
1005f264:	b580      	push	{r7, lr}
1005f266:	f7fa f907 	bl	10059478 <llc_pscan_get_cntxt_p>
1005f26a:	2800      	cmp	r0, #0
1005f26c:	d001      	beq.n	1005f272 <LL_past_get_past_context_overall+0xe>
1005f26e:	6840      	ldr	r0, [r0, #4]
1005f270:	bd80      	pop	{r7, pc}
1005f272:	2000      	movs	r0, #0
1005f274:	bd80      	pop	{r7, pc}

1005f276 <LL_past_initialize_connect_context>:
1005f276:	b580      	push	{r7, lr}
1005f278:	f000 f804 	bl	1005f284 <LL_past_get_past_context_per>
1005f27c:	2100      	movs	r1, #0
1005f27e:	7581      	strb	r1, [r0, #22]
1005f280:	71c1      	strb	r1, [r0, #7]
1005f282:	bd80      	pop	{r7, pc}

1005f284 <LL_past_get_past_context_per>:
1005f284:	b510      	push	{r4, lr}
1005f286:	4604      	mov	r4, r0
1005f288:	f7ff ffec 	bl	1005f264 <LL_past_get_past_context_overall>
1005f28c:	2800      	cmp	r0, #0
1005f28e:	d004      	beq.n	1005f29a <LL_past_get_past_context_per+0x16>
1005f290:	2118      	movs	r1, #24
1005f292:	4361      	muls	r1, r4
1005f294:	6880      	ldr	r0, [r0, #8]
1005f296:	1840      	adds	r0, r0, r1
1005f298:	bd10      	pop	{r4, pc}
1005f29a:	2000      	movs	r0, #0
1005f29c:	bd10      	pop	{r4, pc}
	...

1005f2a0 <LL_past_load_txctrl_packet_from_scanner>:
1005f2a0:	b5f0      	push	{r4, r5, r6, r7, lr}
1005f2a2:	b097      	sub	sp, #92	@ 0x5c
1005f2a4:	461f      	mov	r7, r3
1005f2a6:	9209      	str	r2, [sp, #36]	@ 0x24
1005f2a8:	9106      	str	r1, [sp, #24]
1005f2aa:	4605      	mov	r5, r0
1005f2ac:	8880      	ldrh	r0, [r0, #4]
1005f2ae:	ac0c      	add	r4, sp, #48	@ 0x30
1005f2b0:	f7fa f8fa 	bl	100594a8 <llc_pscan_get_cntxt_per_p_from_handle>
1005f2b4:	2800      	cmp	r0, #0
1005f2b6:	d100      	bne.n	1005f2ba <LL_past_load_txctrl_packet_from_scanner+0x1a>
1005f2b8:	e0b9      	b.n	1005f42e <LL_past_load_txctrl_packet_from_scanner+0x18e>
1005f2ba:	4606      	mov	r6, r0
1005f2bc:	9502      	str	r5, [sp, #8]
1005f2be:	3422      	adds	r4, #34	@ 0x22
1005f2c0:	9401      	str	r4, [sp, #4]
1005f2c2:	3044      	adds	r0, #68	@ 0x44
1005f2c4:	4631      	mov	r1, r6
1005f2c6:	3183      	adds	r1, #131	@ 0x83
1005f2c8:	9108      	str	r1, [sp, #32]
1005f2ca:	991d      	ldr	r1, [sp, #116]	@ 0x74
1005f2cc:	9103      	str	r1, [sp, #12]
1005f2ce:	9d1c      	ldr	r5, [sp, #112]	@ 0x70
1005f2d0:	9604      	str	r6, [sp, #16]
1005f2d2:	8800      	ldrh	r0, [r0, #0]
1005f2d4:	a90c      	add	r1, sp, #48	@ 0x30
1005f2d6:	82c8      	strh	r0, [r1, #22]
1005f2d8:	6af1      	ldr	r1, [r6, #44]	@ 0x2c
1005f2da:	6b33      	ldr	r3, [r6, #48]	@ 0x30
1005f2dc:	9107      	str	r1, [sp, #28]
1005f2de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005f2e0:	1a89      	subs	r1, r1, r2
1005f2e2:	2400      	movs	r4, #0
1005f2e4:	190a      	adds	r2, r1, r4
1005f2e6:	d502      	bpl.n	1005f2ee <LL_past_load_txctrl_packet_from_scanner+0x4e>
1005f2e8:	18e4      	adds	r4, r4, r3
1005f2ea:	1c40      	adds	r0, r0, #1
1005f2ec:	e7fa      	b.n	1005f2e4 <LL_past_load_txctrl_packet_from_scanner+0x44>
1005f2ee:	9605      	str	r6, [sp, #20]
1005f2f0:	2203      	movs	r2, #3
1005f2f2:	435a      	muls	r2, r3
1005f2f4:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1005f2f6:	18b2      	adds	r2, r6, r2
1005f2f8:	9e07      	ldr	r6, [sp, #28]
1005f2fa:	1b92      	subs	r2, r2, r6
1005f2fc:	4264      	negs	r4, r4
1005f2fe:	1916      	adds	r6, r2, r4
1005f300:	d502      	bpl.n	1005f308 <LL_past_load_txctrl_packet_from_scanner+0x68>
1005f302:	18e4      	adds	r4, r4, r3
1005f304:	1e40      	subs	r0, r0, #1
1005f306:	e7fa      	b.n	1005f2fe <LL_past_load_txctrl_packet_from_scanner+0x5e>
1005f308:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005f30a:	9b07      	ldr	r3, [sp, #28]
1005f30c:	1ad2      	subs	r2, r2, r3
1005f30e:	4b49      	ldr	r3, [pc, #292]	@ (1005f434 <__arm_cp.6_0>)
1005f310:	18d2      	adds	r2, r2, r3
1005f312:	9e05      	ldr	r6, [sp, #20]
1005f314:	1913      	adds	r3, r2, r4
1005f316:	d502      	bpl.n	1005f31e <LL_past_load_txctrl_packet_from_scanner+0x7e>
1005f318:	19e4      	adds	r4, r4, r7
1005f31a:	1c6d      	adds	r5, r5, #1
1005f31c:	e7fa      	b.n	1005f314 <LL_past_load_txctrl_packet_from_scanner+0x74>
1005f31e:	af0c      	add	r7, sp, #48	@ 0x30
1005f320:	8278      	strh	r0, [r7, #18]
1005f322:	1b09      	subs	r1, r1, r4
1005f324:	1cb8      	adds	r0, r7, #2
1005f326:	2200      	movs	r2, #0
1005f328:	f7f9 f846 	bl	100583b8 <llc_padv_set_sync_info_offset>
1005f32c:	9802      	ldr	r0, [sp, #8]
1005f32e:	8900      	ldrh	r0, [r0, #8]
1005f330:	8038      	strh	r0, [r7, #0]
1005f332:	6b30      	ldr	r0, [r6, #48]	@ 0x30
1005f334:	0a40      	lsrs	r0, r0, #9
1005f336:	80b8      	strh	r0, [r7, #4]
1005f338:	1db8      	adds	r0, r7, #6
1005f33a:	9c04      	ldr	r4, [sp, #16]
1005f33c:	4621      	mov	r1, r4
1005f33e:	314e      	adds	r1, #78	@ 0x4e
1005f340:	2205      	movs	r2, #5
1005f342:	4b3d      	ldr	r3, [pc, #244]	@ (1005f438 <__arm_cp.6_1>)
1005f344:	9202      	str	r2, [sp, #8]
1005f346:	4798      	blx	r3
1005f348:	4638      	mov	r0, r7
1005f34a:	300b      	adds	r0, #11
1005f34c:	4621      	mov	r1, r4
1005f34e:	3128      	adds	r1, #40	@ 0x28
1005f350:	2204      	movs	r2, #4
1005f352:	9207      	str	r2, [sp, #28]
1005f354:	4b38      	ldr	r3, [pc, #224]	@ (1005f438 <__arm_cp.6_1>)
1005f356:	4798      	blx	r3
1005f358:	4638      	mov	r0, r7
1005f35a:	300f      	adds	r0, #15
1005f35c:	3453      	adds	r4, #83	@ 0x53
1005f35e:	2203      	movs	r2, #3
1005f360:	4621      	mov	r1, r4
1005f362:	9209      	str	r2, [sp, #36]	@ 0x24
1005f364:	4b34      	ldr	r3, [pc, #208]	@ (1005f438 <__arm_cp.6_1>)
1005f366:	4798      	blx	r3
1005f368:	9803      	ldr	r0, [sp, #12]
1005f36a:	8438      	strh	r0, [r7, #32]
1005f36c:	82bd      	strh	r5, [r7, #20]
1005f36e:	7ff0      	ldrb	r0, [r6, #31]
1005f370:	69b1      	ldr	r1, [r6, #24]
1005f372:	07c9      	lsls	r1, r1, #31
1005f374:	0ec9      	lsrs	r1, r1, #27
1005f376:	4301      	orrs	r1, r0
1005f378:	9808      	ldr	r0, [sp, #32]
1005f37a:	7880      	ldrb	r0, [r0, #2]
1005f37c:	0144      	lsls	r4, r0, #5
1005f37e:	430c      	orrs	r4, r1
1005f380:	763c      	strb	r4, [r7, #24]
1005f382:	f7f9 ff30 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
1005f386:	2801      	cmp	r0, #1
1005f388:	d10a      	bne.n	1005f3a0 <LL_past_load_txctrl_packet_from_scanner+0x100>
1005f38a:	9808      	ldr	r0, [sp, #32]
1005f38c:	7a80      	ldrb	r0, [r0, #10]
1005f38e:	2800      	cmp	r0, #0
1005f390:	d006      	beq.n	1005f3a0 <LL_past_load_txctrl_packet_from_scanner+0x100>
1005f392:	2010      	movs	r0, #16
1005f394:	4304      	orrs	r4, r0
1005f396:	a80c      	add	r0, sp, #48	@ 0x30
1005f398:	7604      	strb	r4, [r0, #24]
1005f39a:	6a30      	ldr	r0, [r6, #32]
1005f39c:	6a71      	ldr	r1, [r6, #36]	@ 0x24
1005f39e:	e001      	b.n	1005f3a4 <LL_past_load_txctrl_packet_from_scanner+0x104>
1005f3a0:	69b0      	ldr	r0, [r6, #24]
1005f3a2:	69f1      	ldr	r1, [r6, #28]
1005f3a4:	910b      	str	r1, [sp, #44]	@ 0x2c
1005f3a6:	900a      	str	r0, [sp, #40]	@ 0x28
1005f3a8:	9d06      	ldr	r5, [sp, #24]
1005f3aa:	ac0c      	add	r4, sp, #48	@ 0x30
1005f3ac:	4620      	mov	r0, r4
1005f3ae:	301a      	adds	r0, #26
1005f3b0:	a90a      	add	r1, sp, #40	@ 0x28
1005f3b2:	1c49      	adds	r1, r1, #1
1005f3b4:	2206      	movs	r2, #6
1005f3b6:	f7e5 faf5 	bl	100449a4 <BLEPLAT_MemCpy>
1005f3ba:	9808      	ldr	r0, [sp, #32]
1005f3bc:	7800      	ldrb	r0, [r0, #0]
1005f3be:	2803      	cmp	r0, #3
1005f3c0:	9907      	ldr	r1, [sp, #28]
1005f3c2:	d000      	beq.n	1005f3c6 <LL_past_load_txctrl_packet_from_scanner+0x126>
1005f3c4:	4601      	mov	r1, r0
1005f3c6:	7661      	strb	r1, [r4, #25]
1005f3c8:	6970      	ldr	r0, [r6, #20]
1005f3ca:	2800      	cmp	r0, #0
1005f3cc:	d024      	beq.n	1005f418 <LL_past_load_txctrl_packet_from_scanner+0x178>
1005f3ce:	213e      	movs	r1, #62	@ 0x3e
1005f3d0:	5c41      	ldrb	r1, [r0, r1]
1005f3d2:	2900      	cmp	r1, #0
1005f3d4:	d020      	beq.n	1005f418 <LL_past_load_txctrl_packet_from_scanner+0x178>
1005f3d6:	4601      	mov	r1, r0
1005f3d8:	313e      	adds	r1, #62	@ 0x3e
1005f3da:	222a      	movs	r2, #42	@ 0x2a
1005f3dc:	70aa      	strb	r2, [r5, #2]
1005f3de:	232b      	movs	r3, #43	@ 0x2b
1005f3e0:	706b      	strb	r3, [r5, #1]
1005f3e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1005f3e4:	702b      	strb	r3, [r5, #0]
1005f3e6:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
1005f3e8:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1005f3ea:	9309      	str	r3, [sp, #36]	@ 0x24
1005f3ec:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1005f3ee:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1005f3f0:	9f01      	ldr	r7, [sp, #4]
1005f3f2:	7038      	strb	r0, [r7, #0]
1005f3f4:	0a06      	lsrs	r6, r0, #8
1005f3f6:	707e      	strb	r6, [r7, #1]
1005f3f8:	0c06      	lsrs	r6, r0, #16
1005f3fa:	70be      	strb	r6, [r7, #2]
1005f3fc:	7809      	ldrb	r1, [r1, #0]
1005f3fe:	7139      	strb	r1, [r7, #4]
1005f400:	0a59      	lsrs	r1, r3, #9
1005f402:	7179      	strb	r1, [r7, #5]
1005f404:	0a61      	lsrs	r1, r4, #9
1005f406:	71b9      	strb	r1, [r7, #6]
1005f408:	9902      	ldr	r1, [sp, #8]
1005f40a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1005f40c:	4359      	muls	r1, r3
1005f40e:	0a09      	lsrs	r1, r1, #8
1005f410:	71f9      	strb	r1, [r7, #7]
1005f412:	0e00      	lsrs	r0, r0, #24
1005f414:	70f8      	strb	r0, [r7, #3]
1005f416:	e006      	b.n	1005f426 <LL_past_load_txctrl_packet_from_scanner+0x186>
1005f418:	201c      	movs	r0, #28
1005f41a:	70a8      	strb	r0, [r5, #2]
1005f41c:	2023      	movs	r0, #35	@ 0x23
1005f41e:	7068      	strb	r0, [r5, #1]
1005f420:	9809      	ldr	r0, [sp, #36]	@ 0x24
1005f422:	7028      	strb	r0, [r5, #0]
1005f424:	2222      	movs	r2, #34	@ 0x22
1005f426:	1ce8      	adds	r0, r5, #3
1005f428:	a90c      	add	r1, sp, #48	@ 0x30
1005f42a:	f7e5 fabb 	bl	100449a4 <BLEPLAT_MemCpy>
1005f42e:	b017      	add	sp, #92	@ 0x5c
1005f430:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f432:	46c0      	nop			@ (mov r8, r8)

1005f434 <__arm_cp.6_0>:
1005f434:	0001891f 	.word	0x0001891f

1005f438 <__arm_cp.6_1>:
1005f438:	100449a5 	.word	0x100449a5

1005f43c <LL_past_procedure>:
1005f43c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005f43e:	b095      	sub	sp, #84	@ 0x54
1005f440:	460e      	mov	r6, r1
1005f442:	4605      	mov	r5, r0
1005f444:	2a00      	cmp	r2, #0
1005f446:	d04d      	beq.n	1005f4e4 <LL_past_procedure+0xa8>
1005f448:	461f      	mov	r7, r3
1005f44a:	2a01      	cmp	r2, #1
1005f44c:	d02f      	beq.n	1005f4ae <LL_past_procedure+0x72>
1005f44e:	2a06      	cmp	r2, #6
1005f450:	d14d      	bne.n	1005f4ee <LL_past_procedure+0xb2>
1005f452:	2101      	movs	r1, #1
1005f454:	4628      	mov	r0, r5
1005f456:	f7fd fd9c 	bl	1005cf92 <LL_cpe_get_cntxt>
1005f45a:	4604      	mov	r4, r0
1005f45c:	4628      	mov	r0, r5
1005f45e:	f7f6 fdd5 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005f462:	4623      	mov	r3, r4
1005f464:	6c42      	ldr	r2, [r0, #68]	@ 0x44
1005f466:	6cc5      	ldr	r5, [r0, #76]	@ 0x4c
1005f468:	006e      	lsls	r6, r5, #1
1005f46a:	2142      	movs	r1, #66	@ 0x42
1005f46c:	5a41      	ldrh	r1, [r0, r1]
1005f46e:	1c8c      	adds	r4, r1, #2
1005f470:	7a98      	ldrb	r0, [r3, #10]
1005f472:	2800      	cmp	r0, #0
1005f474:	d100      	bne.n	1005f478 <LL_past_procedure+0x3c>
1005f476:	e0a5      	b.n	1005f5c4 <LL_past_procedure+0x188>
1005f478:	9205      	str	r2, [sp, #20]
1005f47a:	9107      	str	r1, [sp, #28]
1005f47c:	9306      	str	r3, [sp, #24]
1005f47e:	88d8      	ldrh	r0, [r3, #6]
1005f480:	f7f9 f816 	bl	100584b0 <llc_padv_get_configured_context>
1005f484:	2800      	cmp	r0, #0
1005f486:	d032      	beq.n	1005f4ee <LL_past_procedure+0xb2>
1005f488:	9704      	str	r7, [sp, #16]
1005f48a:	4603      	mov	r3, r0
1005f48c:	335a      	adds	r3, #90	@ 0x5a
1005f48e:	9009      	str	r0, [sp, #36]	@ 0x24
1005f490:	4601      	mov	r1, r0
1005f492:	8a1f      	ldrh	r7, [r3, #16]
1005f494:	a80a      	add	r0, sp, #40	@ 0x28
1005f496:	82c7      	strh	r7, [r0, #22]
1005f498:	6d08      	ldr	r0, [r1, #80]	@ 0x50
1005f49a:	9108      	str	r1, [sp, #32]
1005f49c:	6d49      	ldr	r1, [r1, #84]	@ 0x54
1005f49e:	9a05      	ldr	r2, [sp, #20]
1005f4a0:	1a89      	subs	r1, r1, r2
1005f4a2:	1b89      	subs	r1, r1, r6
1005f4a4:	2900      	cmp	r1, #0
1005f4a6:	d525      	bpl.n	1005f4f4 <LL_past_procedure+0xb8>
1005f4a8:	1809      	adds	r1, r1, r0
1005f4aa:	1c7f      	adds	r7, r7, #1
1005f4ac:	e7fa      	b.n	1005f4a4 <LL_past_procedure+0x68>
1005f4ae:	7878      	ldrb	r0, [r7, #1]
1005f4b0:	463c      	mov	r4, r7
1005f4b2:	1cf9      	adds	r1, r7, #3
1005f4b4:	1e42      	subs	r2, r0, #1
1005f4b6:	af0a      	add	r7, sp, #40	@ 0x28
1005f4b8:	4638      	mov	r0, r7
1005f4ba:	f7e5 fa73 	bl	100449a4 <BLEPLAT_MemCpy>
1005f4be:	7e79      	ldrb	r1, [r7, #25]
1005f4c0:	2007      	movs	r0, #7
1005f4c2:	4008      	ands	r0, r1
1005f4c4:	7678      	strb	r0, [r7, #25]
1005f4c6:	2804      	cmp	r0, #4
1005f4c8:	d80c      	bhi.n	1005f4e4 <LL_past_procedure+0xa8>
1005f4ca:	2101      	movs	r1, #1
1005f4cc:	4081      	lsls	r1, r0
1005f4ce:	2016      	movs	r0, #22
1005f4d0:	4201      	tst	r1, r0
1005f4d2:	d007      	beq.n	1005f4e4 <LL_past_procedure+0xa8>
1005f4d4:	78a0      	ldrb	r0, [r4, #2]
1005f4d6:	382a      	subs	r0, #42	@ 0x2a
1005f4d8:	4242      	negs	r2, r0
1005f4da:	4142      	adcs	r2, r0
1005f4dc:	a80a      	add	r0, sp, #40	@ 0x28
1005f4de:	4629      	mov	r1, r5
1005f4e0:	f7ef fc3a 	bl	1004ed58 <LL_periodicscan_deploy_scanner_from_past_ucfg>
1005f4e4:	2209      	movs	r2, #9
1005f4e6:	4628      	mov	r0, r5
1005f4e8:	4631      	mov	r1, r6
1005f4ea:	f7fd fd13 	bl	1005cf14 <LL_cpe_clr_active>
1005f4ee:	20ff      	movs	r0, #255	@ 0xff
1005f4f0:	b015      	add	sp, #84	@ 0x54
1005f4f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f4f4:	424e      	negs	r6, r1
1005f4f6:	2000      	movs	r0, #0
1005f4f8:	43c0      	mvns	r0, r0
1005f4fa:	9005      	str	r0, [sp, #20]
1005f4fc:	483b      	ldr	r0, [pc, #236]	@ (1005f5ec <__arm_cp.7_0>)
1005f4fe:	1831      	adds	r1, r6, r0
1005f500:	d502      	bpl.n	1005f508 <LL_past_procedure+0xcc>
1005f502:	1976      	adds	r6, r6, r5
1005f504:	1c64      	adds	r4, r4, #1
1005f506:	e7fa      	b.n	1005f4fe <LL_past_procedure+0xc2>
1005f508:	9806      	ldr	r0, [sp, #24]
1005f50a:	8900      	ldrh	r0, [r0, #8]
1005f50c:	ad0a      	add	r5, sp, #40	@ 0x28
1005f50e:	8028      	strh	r0, [r5, #0]
1005f510:	8818      	ldrh	r0, [r3, #0]
1005f512:	80a8      	strh	r0, [r5, #4]
1005f514:	1da8      	adds	r0, r5, #6
1005f516:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005f518:	315c      	adds	r1, #92	@ 0x5c
1005f51a:	2205      	movs	r2, #5
1005f51c:	9303      	str	r3, [sp, #12]
1005f51e:	4b34      	ldr	r3, [pc, #208]	@ (1005f5f0 <__arm_cp.7_1>)
1005f520:	4798      	blx	r3
1005f522:	4628      	mov	r0, r5
1005f524:	300b      	adds	r0, #11
1005f526:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005f528:	3161      	adds	r1, #97	@ 0x61
1005f52a:	2204      	movs	r2, #4
1005f52c:	9206      	str	r2, [sp, #24]
1005f52e:	4b30      	ldr	r3, [pc, #192]	@ (1005f5f0 <__arm_cp.7_1>)
1005f530:	4798      	blx	r3
1005f532:	4628      	mov	r0, r5
1005f534:	300f      	adds	r0, #15
1005f536:	9909      	ldr	r1, [sp, #36]	@ 0x24
1005f538:	3165      	adds	r1, #101	@ 0x65
1005f53a:	2203      	movs	r2, #3
1005f53c:	9209      	str	r2, [sp, #36]	@ 0x24
1005f53e:	4b2c      	ldr	r3, [pc, #176]	@ (1005f5f0 <__arm_cp.7_1>)
1005f540:	4798      	blx	r3
1005f542:	9807      	ldr	r0, [sp, #28]
1005f544:	8428      	strh	r0, [r5, #32]
1005f546:	82ac      	strh	r4, [r5, #20]
1005f548:	826f      	strh	r7, [r5, #18]
1005f54a:	9905      	ldr	r1, [sp, #20]
1005f54c:	4371      	muls	r1, r6
1005f54e:	1ca8      	adds	r0, r5, #2
1005f550:	2200      	movs	r2, #0
1005f552:	f7f8 ff31 	bl	100583b8 <llc_padv_set_sync_info_offset>
1005f556:	9803      	ldr	r0, [sp, #12]
1005f558:	7980      	ldrb	r0, [r0, #6]
1005f55a:	21e0      	movs	r1, #224	@ 0xe0
1005f55c:	4001      	ands	r1, r0
1005f55e:	9808      	ldr	r0, [sp, #32]
1005f560:	6fc4      	ldr	r4, [r0, #124]	@ 0x7c
1005f562:	4620      	mov	r0, r4
1005f564:	30c7      	adds	r0, #199	@ 0xc7
1005f566:	7940      	ldrb	r0, [r0, #5]
1005f568:	6f62      	ldr	r2, [r4, #116]	@ 0x74
1005f56a:	7813      	ldrb	r3, [r2, #0]
1005f56c:	07db      	lsls	r3, r3, #31
1005f56e:	0edb      	lsrs	r3, r3, #27
1005f570:	4303      	orrs	r3, r0
1005f572:	430b      	orrs	r3, r1
1005f574:	762b      	strb	r3, [r5, #24]
1005f576:	4628      	mov	r0, r5
1005f578:	301a      	adds	r0, #26
1005f57a:	1c51      	adds	r1, r2, #1
1005f57c:	2206      	movs	r2, #6
1005f57e:	4b1c      	ldr	r3, [pc, #112]	@ (1005f5f0 <__arm_cp.7_1>)
1005f580:	4798      	blx	r3
1005f582:	9906      	ldr	r1, [sp, #24]
1005f584:	20c7      	movs	r0, #199	@ 0xc7
1005f586:	5c20      	ldrb	r0, [r4, r0]
1005f588:	2803      	cmp	r0, #3
1005f58a:	d000      	beq.n	1005f58e <LL_past_procedure+0x152>
1005f58c:	4601      	mov	r1, r0
1005f58e:	7669      	strb	r1, [r5, #25]
1005f590:	9e04      	ldr	r6, [sp, #16]
1005f592:	1cf4      	adds	r4, r6, #3
1005f594:	2722      	movs	r7, #34	@ 0x22
1005f596:	4620      	mov	r0, r4
1005f598:	4629      	mov	r1, r5
1005f59a:	463a      	mov	r2, r7
1005f59c:	4b14      	ldr	r3, [pc, #80]	@ (1005f5f0 <__arm_cp.7_1>)
1005f59e:	4798      	blx	r3
1005f5a0:	9908      	ldr	r1, [sp, #32]
1005f5a2:	7a48      	ldrb	r0, [r1, #9]
1005f5a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005f5a6:	7032      	strb	r2, [r6, #0]
1005f5a8:	2800      	cmp	r0, #0
1005f5aa:	d015      	beq.n	1005f5d8 <LL_past_procedure+0x19c>
1005f5ac:	4608      	mov	r0, r1
1005f5ae:	212a      	movs	r1, #42	@ 0x2a
1005f5b0:	70b1      	strb	r1, [r6, #2]
1005f5b2:	212b      	movs	r1, #43	@ 0x2b
1005f5b4:	7071      	strb	r1, [r6, #1]
1005f5b6:	a90a      	add	r1, sp, #40	@ 0x28
1005f5b8:	3122      	adds	r1, #34	@ 0x22
1005f5ba:	f7ef f8f9 	bl	1004e7b0 <llc_padv_wr_set_ctrdata_ucfg>
1005f5be:	7870      	ldrb	r0, [r6, #1]
1005f5c0:	1e47      	subs	r7, r0, #1
1005f5c2:	e00d      	b.n	1005f5e0 <LL_past_procedure+0x1a4>
1005f5c4:	18b2      	adds	r2, r6, r2
1005f5c6:	b2a0      	uxth	r0, r4
1005f5c8:	9000      	str	r0, [sp, #0]
1005f5ca:	9101      	str	r1, [sp, #4]
1005f5cc:	4618      	mov	r0, r3
1005f5ce:	4639      	mov	r1, r7
1005f5d0:	462b      	mov	r3, r5
1005f5d2:	f7ef fba7 	bl	1004ed24 <LL_past_load_txctrl_packet_from_scanner_ucfg>
1005f5d6:	e78a      	b.n	1005f4ee <LL_past_procedure+0xb2>
1005f5d8:	201c      	movs	r0, #28
1005f5da:	70b0      	strb	r0, [r6, #2]
1005f5dc:	2023      	movs	r0, #35	@ 0x23
1005f5de:	7070      	strb	r0, [r6, #1]
1005f5e0:	a90a      	add	r1, sp, #40	@ 0x28
1005f5e2:	4620      	mov	r0, r4
1005f5e4:	463a      	mov	r2, r7
1005f5e6:	f7e5 f9dd 	bl	100449a4 <BLEPLAT_MemCpy>
1005f5ea:	e780      	b.n	1005f4ee <LL_past_procedure+0xb2>

1005f5ec <__arm_cp.7_0>:
1005f5ec:	0001891f 	.word	0x0001891f

1005f5f0 <__arm_cp.7_1>:
1005f5f0:	100449a5 	.word	0x100449a5

1005f5f4 <LL_Periodic_Advertising_Set_Info_Transfer>:
1005f5f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005f5f6:	4617      	mov	r7, r2
1005f5f8:	460e      	mov	r6, r1
1005f5fa:	4605      	mov	r5, r0
1005f5fc:	f7f6 ff96 	bl	1005652c <llc_conn_get_conn_idx>
1005f600:	28ff      	cmp	r0, #255	@ 0xff
1005f602:	d012      	beq.n	1005f62a <LL_Periodic_Advertising_Set_Info_Transfer+0x36>
1005f604:	4604      	mov	r4, r0
1005f606:	4638      	mov	r0, r7
1005f608:	f7f8 ff52 	bl	100584b0 <llc_padv_get_configured_context>
1005f60c:	2800      	cmp	r0, #0
1005f60e:	d00e      	beq.n	1005f62e <LL_Periodic_Advertising_Set_Info_Transfer+0x3a>
1005f610:	7a00      	ldrb	r0, [r0, #8]
1005f612:	2802      	cmp	r0, #2
1005f614:	d10d      	bne.n	1005f632 <LL_Periodic_Advertising_Set_Info_Transfer+0x3e>
1005f616:	4620      	mov	r0, r4
1005f618:	f7f6 fcf8 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005f61c:	21ff      	movs	r1, #255	@ 0xff
1005f61e:	3132      	adds	r1, #50	@ 0x32
1005f620:	5c40      	ldrb	r0, [r0, r1]
1005f622:	0780      	lsls	r0, r0, #30
1005f624:	d407      	bmi.n	1005f636 <LL_Periodic_Advertising_Set_Info_Transfer+0x42>
1005f626:	251a      	movs	r5, #26
1005f628:	e022      	b.n	1005f670 <LL_Periodic_Advertising_Set_Info_Transfer+0x7c>
1005f62a:	2502      	movs	r5, #2
1005f62c:	e020      	b.n	1005f670 <LL_Periodic_Advertising_Set_Info_Transfer+0x7c>
1005f62e:	2542      	movs	r5, #66	@ 0x42
1005f630:	e01e      	b.n	1005f670 <LL_Periodic_Advertising_Set_Info_Transfer+0x7c>
1005f632:	250c      	movs	r5, #12
1005f634:	e01c      	b.n	1005f670 <LL_Periodic_Advertising_Set_Info_Transfer+0x7c>
1005f636:	2101      	movs	r1, #1
1005f638:	4620      	mov	r0, r4
1005f63a:	9100      	str	r1, [sp, #0]
1005f63c:	f7fd fc45 	bl	1005ceca <LL_cpe_get_active_status>
1005f640:	2800      	cmp	r0, #0
1005f642:	d001      	beq.n	1005f648 <LL_Periodic_Advertising_Set_Info_Transfer+0x54>
1005f644:	253a      	movs	r5, #58	@ 0x3a
1005f646:	e013      	b.n	1005f670 <LL_Periodic_Advertising_Set_Info_Transfer+0x7c>
1005f648:	4620      	mov	r0, r4
1005f64a:	9900      	ldr	r1, [sp, #0]
1005f64c:	f7fd fca1 	bl	1005cf92 <LL_cpe_get_cntxt>
1005f650:	9900      	ldr	r1, [sp, #0]
1005f652:	7281      	strb	r1, [r0, #10]
1005f654:	80c7      	strh	r7, [r0, #6]
1005f656:	8106      	strh	r6, [r0, #8]
1005f658:	8005      	strh	r5, [r0, #0]
1005f65a:	4620      	mov	r0, r4
1005f65c:	460e      	mov	r6, r1
1005f65e:	f7fd fc8b 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005f662:	2209      	movs	r2, #9
1005f664:	2500      	movs	r5, #0
1005f666:	4620      	mov	r0, r4
1005f668:	4631      	mov	r1, r6
1005f66a:	462b      	mov	r3, r5
1005f66c:	f7fd fc3b 	bl	1005cee6 <LL_cpe_set_active>
1005f670:	4628      	mov	r0, r5
1005f672:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005f674 <LL_periodicscan_deploy_scanner_from_past>:
1005f674:	b5f0      	push	{r4, r5, r6, r7, lr}
1005f676:	b099      	sub	sp, #100	@ 0x64
1005f678:	4615      	mov	r5, r2
1005f67a:	460e      	mov	r6, r1
1005f67c:	4604      	mov	r4, r0
1005f67e:	a80d      	add	r0, sp, #52	@ 0x34
1005f680:	900c      	str	r0, [sp, #48]	@ 0x30
1005f682:	4608      	mov	r0, r1
1005f684:	f7ff fdfe 	bl	1005f284 <LL_past_get_past_context_per>
1005f688:	4607      	mov	r7, r0
1005f68a:	79c0      	ldrb	r0, [r0, #7]
1005f68c:	2800      	cmp	r0, #0
1005f68e:	d005      	beq.n	1005f69c <LL_periodicscan_deploy_scanner_from_past+0x28>
1005f690:	1ca0      	adds	r0, r4, #2
1005f692:	900b      	str	r0, [sp, #44]	@ 0x2c
1005f694:	f7f9 ffb8 	bl	10059608 <llc_pscan_access_address_already_sync>
1005f698:	2800      	cmp	r0, #0
1005f69a:	d001      	beq.n	1005f6a0 <LL_periodicscan_deploy_scanner_from_past+0x2c>
1005f69c:	b019      	add	sp, #100	@ 0x64
1005f69e:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005f6a0:	f7f9 ff1e 	bl	100594e0 <llc_pscan_get_free_cntxt_per_p>
1005f6a4:	2800      	cmp	r0, #0
1005f6a6:	d0f9      	beq.n	1005f69c <LL_periodicscan_deploy_scanner_from_past+0x28>
1005f6a8:	9009      	str	r0, [sp, #36]	@ 0x24
1005f6aa:	f003 f9d5 	bl	10062a58 <LL_sched_reserve_taskslot>
1005f6ae:	28ff      	cmp	r0, #255	@ 0xff
1005f6b0:	d06d      	beq.n	1005f78e <LL_periodicscan_deploy_scanner_from_past+0x11a>
1005f6b2:	9004      	str	r0, [sp, #16]
1005f6b4:	9503      	str	r5, [sp, #12]
1005f6b6:	2000      	movs	r0, #0
1005f6b8:	9016      	str	r0, [sp, #88]	@ 0x58
1005f6ba:	7e21      	ldrb	r1, [r4, #24]
1005f6bc:	9106      	str	r1, [sp, #24]
1005f6be:	06c9      	lsls	r1, r1, #27
1005f6c0:	0fc9      	lsrs	r1, r1, #31
1005f6c2:	ad16      	add	r5, sp, #88	@ 0x58
1005f6c4:	7029      	strb	r1, [r5, #0]
1005f6c6:	9017      	str	r0, [sp, #92]	@ 0x5c
1005f6c8:	7e60      	ldrb	r0, [r4, #25]
1005f6ca:	900a      	str	r0, [sp, #40]	@ 0x28
1005f6cc:	1c68      	adds	r0, r5, #1
1005f6ce:	4621      	mov	r1, r4
1005f6d0:	311a      	adds	r1, #26
1005f6d2:	2206      	movs	r2, #6
1005f6d4:	9201      	str	r2, [sp, #4]
1005f6d6:	f7e5 f965 	bl	100449a4 <BLEPLAT_MemCpy>
1005f6da:	7e20      	ldrb	r0, [r4, #24]
1005f6dc:	210f      	movs	r1, #15
1005f6de:	4001      	ands	r1, r0
1005f6e0:	71e9      	strb	r1, [r5, #7]
1005f6e2:	4630      	mov	r0, r6
1005f6e4:	f7f6 fc92 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005f6e8:	2142      	movs	r1, #66	@ 0x42
1005f6ea:	5a41      	ldrh	r1, [r0, r1]
1005f6ec:	6c42      	ldr	r2, [r0, #68]	@ 0x44
1005f6ee:	9202      	str	r2, [sp, #8]
1005f6f0:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
1005f6f2:	9008      	str	r0, [sp, #32]
1005f6f4:	8aa0      	ldrh	r0, [r4, #20]
1005f6f6:	f000 f883 	bl	1005f800 <LL_difference_counter>
1005f6fa:	9007      	str	r0, [sp, #28]
1005f6fc:	8a61      	ldrh	r1, [r4, #18]
1005f6fe:	8ae0      	ldrh	r0, [r4, #22]
1005f700:	f000 f87e 	bl	1005f800 <LL_difference_counter>
1005f704:	17c1      	asrs	r1, r0, #31
1005f706:	1845      	adds	r5, r0, r1
1005f708:	404d      	eors	r5, r1
1005f70a:	f002 fba9 	bl	10061e60 <LL_link_get_own_sca_ppm>
1005f70e:	9005      	str	r0, [sp, #20]
1005f710:	88a0      	ldrh	r0, [r4, #4]
1005f712:	4368      	muls	r0, r5
1005f714:	0240      	lsls	r0, r0, #9
1005f716:	9906      	ldr	r1, [sp, #24]
1005f718:	0949      	lsrs	r1, r1, #5
1005f71a:	f002 fb1b 	bl	10061d54 <LL_link_calculate_window_widening>
1005f71e:	0040      	lsls	r0, r0, #1
1005f720:	6138      	str	r0, [r7, #16]
1005f722:	9907      	ldr	r1, [sp, #28]
1005f724:	17c8      	asrs	r0, r1, #31
1005f726:	1809      	adds	r1, r1, r0
1005f728:	4041      	eors	r1, r0
1005f72a:	9808      	ldr	r0, [sp, #32]
1005f72c:	4341      	muls	r1, r0
1005f72e:	9805      	ldr	r0, [sp, #20]
1005f730:	f002 fb07 	bl	10061d42 <LL_link_calculate_window_widening_from_ppm>
1005f734:	0040      	lsls	r0, r0, #1
1005f736:	6939      	ldr	r1, [r7, #16]
1005f738:	1808      	adds	r0, r1, r0
1005f73a:	990a      	ldr	r1, [sp, #40]	@ 0x28
1005f73c:	6138      	str	r0, [r7, #16]
1005f73e:	2904      	cmp	r1, #4
1005f740:	d100      	bne.n	1005f744 <LL_periodicscan_deploy_scanner_from_past+0xd0>
1005f742:	2103      	movs	r1, #3
1005f744:	7838      	ldrb	r0, [r7, #0]
1005f746:	2800      	cmp	r0, #0
1005f748:	d02a      	beq.n	1005f7a0 <LL_periodicscan_deploy_scanner_from_past+0x12c>
1005f74a:	910a      	str	r1, [sp, #40]	@ 0x28
1005f74c:	980c      	ldr	r0, [sp, #48]	@ 0x30
1005f74e:	3020      	adds	r0, #32
1005f750:	900c      	str	r0, [sp, #48]	@ 0x30
1005f752:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1005f754:	4628      	mov	r0, r5
1005f756:	3048      	adds	r0, #72	@ 0x48
1005f758:	9006      	str	r0, [sp, #24]
1005f75a:	357e      	adds	r5, #126	@ 0x7e
1005f75c:	9908      	ldr	r1, [sp, #32]
1005f75e:	9807      	ldr	r0, [sp, #28]
1005f760:	4341      	muls	r1, r0
1005f762:	9802      	ldr	r0, [sp, #8]
1005f764:	1808      	adds	r0, r1, r0
1005f766:	9008      	str	r0, [sp, #32]
1005f768:	7a68      	ldrb	r0, [r5, #9]
1005f76a:	f7f9 fed3 	bl	10059514 <llc_pscan_per_init>
1005f76e:	78e9      	ldrb	r1, [r5, #3]
1005f770:	783a      	ldrb	r2, [r7, #0]
1005f772:	2a02      	cmp	r2, #2
1005f774:	d318      	bcc.n	1005f7a8 <LL_periodicscan_deploy_scanner_from_past+0x134>
1005f776:	2002      	movs	r0, #2
1005f778:	4308      	orrs	r0, r1
1005f77a:	70e8      	strb	r0, [r5, #3]
1005f77c:	2a03      	cmp	r2, #3
1005f77e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1005f780:	9a06      	ldr	r2, [sp, #24]
1005f782:	d114      	bne.n	1005f7ae <LL_periodicscan_deploy_scanner_from_past+0x13a>
1005f784:	9801      	ldr	r0, [sp, #4]
1005f786:	4301      	orrs	r1, r0
1005f788:	70e9      	strb	r1, [r5, #3]
1005f78a:	4608      	mov	r0, r1
1005f78c:	e00f      	b.n	1005f7ae <LL_periodicscan_deploy_scanner_from_past+0x13a>
1005f78e:	ab0d      	add	r3, sp, #52	@ 0x34
1005f790:	200d      	movs	r0, #13
1005f792:	7018      	strb	r0, [r3, #0]
1005f794:	20a1      	movs	r0, #161	@ 0xa1
1005f796:	210a      	movs	r1, #10
1005f798:	2201      	movs	r2, #1
1005f79a:	f007 fa3d 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
1005f79e:	e77d      	b.n	1005f69c <LL_periodicscan_deploy_scanner_from_past+0x28>
1005f7a0:	9804      	ldr	r0, [sp, #16]
1005f7a2:	f003 f97b 	bl	10062a9c <LL_sched_release_taskslot>
1005f7a6:	e779      	b.n	1005f69c <LL_periodicscan_deploy_scanner_from_past+0x28>
1005f7a8:	4608      	mov	r0, r1
1005f7aa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1005f7ac:	9a06      	ldr	r2, [sp, #24]
1005f7ae:	9904      	ldr	r1, [sp, #16]
1005f7b0:	71a9      	strb	r1, [r5, #6]
1005f7b2:	702e      	strb	r6, [r5, #0]
1005f7b4:	79b9      	ldrb	r1, [r7, #6]
1005f7b6:	7229      	strb	r1, [r5, #8]
1005f7b8:	8879      	ldrh	r1, [r7, #2]
1005f7ba:	8011      	strh	r1, [r2, #0]
1005f7bc:	8821      	ldrh	r1, [r4, #0]
1005f7be:	8051      	strh	r1, [r2, #2]
1005f7c0:	2108      	movs	r1, #8
1005f7c2:	4301      	orrs	r1, r0
1005f7c4:	70e9      	strb	r1, [r5, #3]
1005f7c6:	9903      	ldr	r1, [sp, #12]
1005f7c8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1005f7ca:	7051      	strb	r1, [r2, #1]
1005f7cc:	2001      	movs	r0, #1
1005f7ce:	7010      	strb	r0, [r2, #0]
1005f7d0:	a80d      	add	r0, sp, #52	@ 0x34
1005f7d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1005f7d4:	7542      	strb	r2, [r0, #21]
1005f7d6:	7506      	strb	r6, [r0, #20]
1005f7d8:	88b8      	ldrh	r0, [r7, #4]
1005f7da:	0300      	lsls	r0, r0, #12
1005f7dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1005f7de:	6350      	str	r0, [r2, #52]	@ 0x34
1005f7e0:	930e      	str	r3, [sp, #56]	@ 0x38
1005f7e2:	920d      	str	r2, [sp, #52]	@ 0x34
1005f7e4:	9808      	ldr	r0, [sp, #32]
1005f7e6:	9011      	str	r0, [sp, #68]	@ 0x44
1005f7e8:	9816      	ldr	r0, [sp, #88]	@ 0x58
1005f7ea:	9013      	str	r0, [sp, #76]	@ 0x4c
1005f7ec:	9817      	ldr	r0, [sp, #92]	@ 0x5c
1005f7ee:	9014      	str	r0, [sp, #80]	@ 0x50
1005f7f0:	2900      	cmp	r1, #0
1005f7f2:	d001      	beq.n	1005f7f8 <LL_periodicscan_deploy_scanner_from_past+0x184>
1005f7f4:	3422      	adds	r4, #34	@ 0x22
1005f7f6:	940f      	str	r4, [sp, #60]	@ 0x3c
1005f7f8:	a80d      	add	r0, sp, #52	@ 0x34
1005f7fa:	f7ef f879 	bl	1004e8f0 <llc_pscan_synchronizing_ucfg>
1005f7fe:	e74d      	b.n	1005f69c <LL_periodicscan_deploy_scanner_from_past+0x28>

1005f800 <LL_difference_counter>:
1005f800:	b510      	push	{r4, lr}
1005f802:	4602      	mov	r2, r0
1005f804:	1a40      	subs	r0, r0, r1
1005f806:	17c3      	asrs	r3, r0, #31
1005f808:	18c4      	adds	r4, r0, r3
1005f80a:	405c      	eors	r4, r3
1005f80c:	2301      	movs	r3, #1
1005f80e:	03db      	lsls	r3, r3, #15
1005f810:	429c      	cmp	r4, r3
1005f812:	d907      	bls.n	1005f824 <LL_difference_counter+0x24>
1005f814:	1a89      	subs	r1, r1, r2
1005f816:	4299      	cmp	r1, r3
1005f818:	dd02      	ble.n	1005f820 <LL_difference_counter+0x20>
1005f81a:	4804      	ldr	r0, [pc, #16]	@ (1005f82c <__arm_cp.14_1>)
1005f81c:	1a40      	subs	r0, r0, r1
1005f81e:	bd10      	pop	{r4, pc}
1005f820:	4901      	ldr	r1, [pc, #4]	@ (1005f828 <__arm_cp.14_0>)
1005f822:	1840      	adds	r0, r0, r1
1005f824:	bd10      	pop	{r4, pc}
1005f826:	46c0      	nop			@ (mov r8, r8)

1005f828 <__arm_cp.14_0>:
1005f828:	ffff0001 	.word	0xffff0001

1005f82c <__arm_cp.14_1>:
1005f82c:	0000ffff 	.word	0x0000ffff

1005f830 <LL_past_default_params>:
1005f830:	b5b0      	push	{r4, r5, r7, lr}
1005f832:	4605      	mov	r5, r0
1005f834:	f7ff fd16 	bl	1005f264 <LL_past_get_past_context_overall>
1005f838:	4604      	mov	r4, r0
1005f83a:	4628      	mov	r0, r5
1005f83c:	f7ff fd22 	bl	1005f284 <LL_past_get_past_context_per>
1005f840:	79e1      	ldrb	r1, [r4, #7]
1005f842:	2900      	cmp	r1, #0
1005f844:	d007      	beq.n	1005f856 <LL_past_default_params+0x26>
1005f846:	7822      	ldrb	r2, [r4, #0]
1005f848:	7002      	strb	r2, [r0, #0]
1005f84a:	8862      	ldrh	r2, [r4, #2]
1005f84c:	8042      	strh	r2, [r0, #2]
1005f84e:	88a2      	ldrh	r2, [r4, #4]
1005f850:	8082      	strh	r2, [r0, #4]
1005f852:	79a2      	ldrb	r2, [r4, #6]
1005f854:	7182      	strb	r2, [r0, #6]
1005f856:	71c1      	strb	r1, [r0, #7]
1005f858:	bdb0      	pop	{r4, r5, r7, pc}

1005f85a <LL_past_get_past_context_per_window_widening>:
1005f85a:	b580      	push	{r7, lr}
1005f85c:	f7ff fd12 	bl	1005f284 <LL_past_get_past_context_per>
1005f860:	6900      	ldr	r0, [r0, #16]
1005f862:	bd80      	pop	{r7, pc}

1005f864 <llc_conn_init_pcl_ctxt_ucfg_weak>:
1005f864:	4770      	bx	lr

1005f866 <LLC_pcl_hal_cntxt_init_ucfg_weak>:
1005f866:	4770      	bx	lr

1005f868 <LLC_pcl_incr_rx_packets_ucfg_weak>:
1005f868:	4770      	bx	lr

1005f86a <LLC_pcl_update_avg_rssi_ucfg_weak>:
1005f86a:	4770      	bx	lr

1005f86c <LLC_pcl_set_radio_tx_power_conn_start_ucfg_weak>:
1005f86c:	b580      	push	{r7, lr}
1005f86e:	f7f6 fbcd 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005f872:	2141      	movs	r1, #65	@ 0x41
1005f874:	5c40      	ldrb	r0, [r0, r1]
1005f876:	4903      	ldr	r1, [pc, #12]	@ (1005f884 <__arm_cp.22_0>)
1005f878:	6809      	ldr	r1, [r1, #0]
1005f87a:	7a49      	ldrb	r1, [r1, #9]
1005f87c:	f7e6 fee8 	bl	10046650 <BLEPLAT_CNTR_SmSetTxPwr>
1005f880:	bd80      	pop	{r7, pc}
1005f882:	46c0      	nop			@ (mov r8, r8)

1005f884 <__arm_cp.22_0>:
1005f884:	20000894 	.word	0x20000894

1005f888 <LLC_pcl_set_radio_tx_power_and_eval_indication_ucfg_weak>:
1005f888:	4770      	bx	lr

1005f88a <LLC_pcl_offline_processing_ucfg_weak>:
1005f88a:	2000      	movs	r0, #0
1005f88c:	4770      	bx	lr

1005f88e <LL_phy_upd_pending_ucfg_weak>:
1005f88e:	2000      	movs	r0, #0
1005f890:	4770      	bx	lr

1005f892 <LL_phy_update_init_ucfg_weak>:
1005f892:	2000      	movs	r0, #0
1005f894:	4770      	bx	lr

1005f896 <LL_phy_update_init_per_st_data_ucfg_weak>:
1005f896:	2000      	movs	r0, #0
1005f898:	4770      	bx	lr

1005f89a <LL_phy_upd_evt_pending_check_isr_ucfg_weak>:
1005f89a:	4770      	bx	lr

1005f89c <LL_version_exchange>:
1005f89c:	b5f0      	push	{r4, r5, r6, r7, lr}
1005f89e:	b087      	sub	sp, #28
1005f8a0:	461f      	mov	r7, r3
1005f8a2:	4616      	mov	r6, r2
1005f8a4:	460c      	mov	r4, r1
1005f8a6:	4605      	mov	r5, r0
1005f8a8:	f7fd fb73 	bl	1005cf92 <LL_cpe_get_cntxt>
1005f8ac:	9004      	str	r0, [sp, #16]
1005f8ae:	4628      	mov	r0, r5
1005f8b0:	f7f6 fbac 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005f8b4:	22ff      	movs	r2, #255	@ 0xff
1005f8b6:	2e06      	cmp	r6, #6
1005f8b8:	d900      	bls.n	1005f8bc <LL_version_exchange+0x20>
1005f8ba:	e0b2      	b.n	1005fa22 <LL_version_exchange+0x186>
1005f8bc:	4603      	mov	r3, r0
1005f8be:	46c0      	nop			@ (mov r8, r8)
1005f8c0:	447e      	add	r6, pc
1005f8c2:	7936      	ldrb	r6, [r6, #4]
1005f8c4:	0076      	lsls	r6, r6, #1
1005f8c6:	44b7      	add	pc, r6
1005f8c8:	3aac0e03 	.word	0x3aac0e03
1005f8cc:	0053acac 	.word	0x0053acac
1005f8d0:	2c01      	cmp	r4, #1
1005f8d2:	d15c      	bne.n	1005f98e <LL_version_exchange+0xf2>
1005f8d4:	208c      	movs	r0, #140	@ 0x8c
1005f8d6:	5818      	ldr	r0, [r3, r0]
1005f8d8:	0601      	lsls	r1, r0, #24
1005f8da:	338c      	adds	r3, #140	@ 0x8c
1005f8dc:	2900      	cmp	r1, #0
1005f8de:	9904      	ldr	r1, [sp, #16]
1005f8e0:	d460      	bmi.n	1005f9a4 <LL_version_exchange+0x108>
1005f8e2:	220c      	movs	r2, #12
1005f8e4:	e06c      	b.n	1005f9c0 <LL_version_exchange+0x124>
1005f8e6:	9302      	str	r3, [sp, #8]
1005f8e8:	9203      	str	r2, [sp, #12]
1005f8ea:	4628      	mov	r0, r5
1005f8ec:	f000 f8d4 	bl	1005fa98 <LL_conn_get_version_exchange_cached>
1005f8f0:	2800      	cmp	r0, #0
1005f8f2:	d000      	beq.n	1005f8f6 <LL_version_exchange+0x5a>
1005f8f4:	e094      	b.n	1005fa20 <LL_version_exchange+0x184>
1005f8f6:	1cf8      	adds	r0, r7, #3
1005f8f8:	2205      	movs	r2, #5
1005f8fa:	9201      	str	r2, [sp, #4]
1005f8fc:	9e04      	ldr	r6, [sp, #16]
1005f8fe:	4631      	mov	r1, r6
1005f900:	f005 fe1e 	bl	10065540 <char_copy>
1005f904:	9f02      	ldr	r7, [sp, #8]
1005f906:	4639      	mov	r1, r7
1005f908:	313c      	adds	r1, #60	@ 0x3c
1005f90a:	4630      	mov	r0, r6
1005f90c:	9a01      	ldr	r2, [sp, #4]
1005f90e:	f005 fe17 	bl	10065540 <char_copy>
1005f912:	208c      	movs	r0, #140	@ 0x8c
1005f914:	5838      	ldr	r0, [r7, r0]
1005f916:	0642      	lsls	r2, r0, #25
1005f918:	4639      	mov	r1, r7
1005f91a:	318c      	adds	r1, #140	@ 0x8c
1005f91c:	2a00      	cmp	r2, #0
1005f91e:	d46e      	bmi.n	1005f9fe <LL_version_exchange+0x162>
1005f920:	2201      	movs	r2, #1
1005f922:	0212      	lsls	r2, r2, #8
1005f924:	4310      	orrs	r0, r2
1005f926:	6008      	str	r0, [r1, #0]
1005f928:	4628      	mov	r0, r5
1005f92a:	4621      	mov	r1, r4
1005f92c:	f7fd fb24 	bl	1005cf78 <LL_cpe_set_prepare_tx_pdu>
1005f930:	2205      	movs	r2, #5
1005f932:	2300      	movs	r3, #0
1005f934:	4628      	mov	r0, r5
1005f936:	4621      	mov	r1, r4
1005f938:	f7fd fad5 	bl	1005cee6 <LL_cpe_set_active>
1005f93c:	e070      	b.n	1005fa20 <LL_version_exchange+0x184>
1005f93e:	78b8      	ldrb	r0, [r7, #2]
1005f940:	280c      	cmp	r0, #12
1005f942:	d16e      	bne.n	1005fa22 <LL_version_exchange+0x186>
1005f944:	1cf8      	adds	r0, r7, #3
1005f946:	2605      	movs	r6, #5
1005f948:	9f04      	ldr	r7, [sp, #16]
1005f94a:	4639      	mov	r1, r7
1005f94c:	9203      	str	r2, [sp, #12]
1005f94e:	4632      	mov	r2, r6
1005f950:	9302      	str	r3, [sp, #8]
1005f952:	f005 fdf5 	bl	10065540 <char_copy>
1005f956:	4628      	mov	r0, r5
1005f958:	4621      	mov	r1, r4
1005f95a:	4632      	mov	r2, r6
1005f95c:	f7fd fada 	bl	1005cf14 <LL_cpe_clr_active>
1005f960:	9802      	ldr	r0, [sp, #8]
1005f962:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
1005f964:	4639      	mov	r1, r7
1005f966:	f000 f86f 	bl	1005fa48 <hci_read_remote_version_information_complete_event_push>
1005f96a:	4628      	mov	r0, r5
1005f96c:	4639      	mov	r1, r7
1005f96e:	e055      	b.n	1005fa1c <LL_version_exchange+0x180>
1005f970:	4616      	mov	r6, r2
1005f972:	a806      	add	r0, sp, #24
1005f974:	2130      	movs	r1, #48	@ 0x30
1005f976:	8001      	strh	r1, [r0, #0]
1005f978:	2c01      	cmp	r4, #1
1005f97a:	d12a      	bne.n	1005f9d2 <LL_version_exchange+0x136>
1005f97c:	208c      	movs	r0, #140	@ 0x8c
1005f97e:	5818      	ldr	r0, [r3, r0]
1005f980:	05c1      	lsls	r1, r0, #23
1005f982:	d421      	bmi.n	1005f9c8 <LL_version_exchange+0x12c>
1005f984:	338c      	adds	r3, #140	@ 0x8c
1005f986:	2140      	movs	r1, #64	@ 0x40
1005f988:	4308      	orrs	r0, r1
1005f98a:	6018      	str	r0, [r3, #0]
1005f98c:	e021      	b.n	1005f9d2 <LL_version_exchange+0x136>
1005f98e:	4616      	mov	r6, r2
1005f990:	2205      	movs	r2, #5
1005f992:	4628      	mov	r0, r5
1005f994:	4621      	mov	r1, r4
1005f996:	f7fd fabd 	bl	1005cf14 <LL_cpe_clr_active>
1005f99a:	4628      	mov	r0, r5
1005f99c:	9904      	ldr	r1, [sp, #16]
1005f99e:	f000 f843 	bl	1005fa28 <LL_conn_version_exchange_set_cached>
1005f9a2:	e02a      	b.n	1005f9fa <LL_version_exchange+0x15e>
1005f9a4:	4628      	mov	r0, r5
1005f9a6:	461c      	mov	r4, r3
1005f9a8:	f000 f83e 	bl	1005fa28 <LL_conn_version_exchange_set_cached>
1005f9ac:	2101      	movs	r1, #1
1005f9ae:	2205      	movs	r2, #5
1005f9b0:	4628      	mov	r0, r5
1005f9b2:	f7fd faaf 	bl	1005cf14 <LL_cpe_clr_active>
1005f9b6:	4623      	mov	r3, r4
1005f9b8:	6820      	ldr	r0, [r4, #0]
1005f9ba:	2180      	movs	r1, #128	@ 0x80
1005f9bc:	4388      	bics	r0, r1
1005f9be:	22ff      	movs	r2, #255	@ 0xff
1005f9c0:	2140      	movs	r1, #64	@ 0x40
1005f9c2:	4388      	bics	r0, r1
1005f9c4:	6018      	str	r0, [r3, #0]
1005f9c6:	e02c      	b.n	1005fa22 <LL_version_exchange+0x186>
1005f9c8:	2101      	movs	r1, #1
1005f9ca:	2205      	movs	r2, #5
1005f9cc:	4628      	mov	r0, r5
1005f9ce:	f7fd faa1 	bl	1005cf14 <LL_cpe_clr_active>
1005f9d2:	200d      	movs	r0, #13
1005f9d4:	70f8      	strb	r0, [r7, #3]
1005f9d6:	200c      	movs	r0, #12
1005f9d8:	70b8      	strb	r0, [r7, #2]
1005f9da:	2006      	movs	r0, #6
1005f9dc:	7078      	strb	r0, [r7, #1]
1005f9de:	2003      	movs	r0, #3
1005f9e0:	7038      	strb	r0, [r7, #0]
1005f9e2:	1d39      	adds	r1, r7, #4
1005f9e4:	a806      	add	r0, sp, #24
1005f9e6:	2402      	movs	r4, #2
1005f9e8:	4622      	mov	r2, r4
1005f9ea:	f005 fda9 	bl	10065540 <char_copy>
1005f9ee:	a805      	add	r0, sp, #20
1005f9f0:	8004      	strh	r4, [r0, #0]
1005f9f2:	1db9      	adds	r1, r7, #6
1005f9f4:	4622      	mov	r2, r4
1005f9f6:	f005 fda3 	bl	10065540 <char_copy>
1005f9fa:	4632      	mov	r2, r6
1005f9fc:	e011      	b.n	1005fa22 <LL_version_exchange+0x186>
1005f9fe:	2280      	movs	r2, #128	@ 0x80
1005fa00:	4310      	orrs	r0, r2
1005fa02:	6008      	str	r0, [r1, #0]
1005fa04:	2205      	movs	r2, #5
1005fa06:	4628      	mov	r0, r5
1005fa08:	4621      	mov	r1, r4
1005fa0a:	463c      	mov	r4, r7
1005fa0c:	f7fd fa82 	bl	1005cf14 <LL_cpe_clr_active>
1005fa10:	8f78      	ldrh	r0, [r7, #58]	@ 0x3a
1005fa12:	4631      	mov	r1, r6
1005fa14:	f000 f818 	bl	1005fa48 <hci_read_remote_version_information_complete_event_push>
1005fa18:	4628      	mov	r0, r5
1005fa1a:	4631      	mov	r1, r6
1005fa1c:	f000 f804 	bl	1005fa28 <LL_conn_version_exchange_set_cached>
1005fa20:	9a03      	ldr	r2, [sp, #12]
1005fa22:	4610      	mov	r0, r2
1005fa24:	b007      	add	sp, #28
1005fa26:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005fa28 <LL_conn_version_exchange_set_cached>:
1005fa28:	b510      	push	{r4, lr}
1005fa2a:	460c      	mov	r4, r1
1005fa2c:	f7f6 faee 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005fa30:	4601      	mov	r1, r0
1005fa32:	208c      	movs	r0, #140	@ 0x8c
1005fa34:	580a      	ldr	r2, [r1, r0]
1005fa36:	2308      	movs	r3, #8
1005fa38:	4313      	orrs	r3, r2
1005fa3a:	500b      	str	r3, [r1, r0]
1005fa3c:	313c      	adds	r1, #60	@ 0x3c
1005fa3e:	2205      	movs	r2, #5
1005fa40:	4620      	mov	r0, r4
1005fa42:	f005 fd7d 	bl	10065540 <char_copy>
1005fa46:	bd10      	pop	{r4, pc}

1005fa48 <hci_read_remote_version_information_complete_event_push>:
1005fa48:	b570      	push	{r4, r5, r6, lr}
1005fa4a:	460c      	mov	r4, r1
1005fa4c:	4605      	mov	r5, r0
1005fa4e:	4810      	ldr	r0, [pc, #64]	@ (1005fa90 <__arm_cp.2_0>)
1005fa50:	6800      	ldr	r0, [r0, #0]
1005fa52:	2137      	movs	r1, #55	@ 0x37
1005fa54:	5c40      	ldrb	r0, [r0, r1]
1005fa56:	0700      	lsls	r0, r0, #28
1005fa58:	d519      	bpl.n	1005fa8e <hci_read_remote_version_information_complete_event_push+0x46>
1005fa5a:	480e      	ldr	r0, [pc, #56]	@ (1005fa94 <__arm_cp.2_1>)
1005fa5c:	6800      	ldr	r0, [r0, #0]
1005fa5e:	6980      	ldr	r0, [r0, #24]
1005fa60:	2102      	movs	r1, #2
1005fa62:	2221      	movs	r2, #33	@ 0x21
1005fa64:	2303      	movs	r3, #3
1005fa66:	f7f0 fc4b 	bl	10050300 <aci_event_fifo_push_header>
1005fa6a:	2800      	cmp	r0, #0
1005fa6c:	d00f      	beq.n	1005fa8e <hci_read_remote_version_information_complete_event_push+0x46>
1005fa6e:	4606      	mov	r6, r0
1005fa70:	1d00      	adds	r0, r0, #4
1005fa72:	4629      	mov	r1, r5
1005fa74:	4622      	mov	r2, r4
1005fa76:	f7f0 ffcb 	bl	10050a10 <hci_read_remote_version_information_complete_event_copy>
1005fa7a:	2008      	movs	r0, #8
1005fa7c:	71b0      	strb	r0, [r6, #6]
1005fa7e:	200c      	movs	r0, #12
1005fa80:	7170      	strb	r0, [r6, #5]
1005fa82:	2004      	movs	r0, #4
1005fa84:	7130      	strb	r0, [r6, #4]
1005fa86:	2002      	movs	r0, #2
1005fa88:	4631      	mov	r1, r6
1005fa8a:	f7f0 fcd6 	bl	1005043a <aci_event_fifo_push>
1005fa8e:	bd70      	pop	{r4, r5, r6, pc}

1005fa90 <__arm_cp.2_0>:
1005fa90:	20000894 	.word	0x20000894

1005fa94 <__arm_cp.2_1>:
1005fa94:	20000840 	.word	0x20000840

1005fa98 <LL_conn_get_version_exchange_cached>:
1005fa98:	b580      	push	{r7, lr}
1005fa9a:	f7f6 fab7 	bl	1005600c <llc_conn_get_cntxt_per_p>
1005fa9e:	218c      	movs	r1, #140	@ 0x8c
1005faa0:	5840      	ldr	r0, [r0, r1]
1005faa2:	0700      	lsls	r0, r0, #28
1005faa4:	0fc0      	lsrs	r0, r0, #31
1005faa6:	bd80      	pop	{r7, pc}

1005faa8 <llc_cte_get_ctxt>:
1005faa8:	4802      	ldr	r0, [pc, #8]	@ (1005fab4 <__arm_cp.2_0>)
1005faaa:	6800      	ldr	r0, [r0, #0]
1005faac:	219c      	movs	r1, #156	@ 0x9c
1005faae:	5840      	ldr	r0, [r0, r1]
1005fab0:	6d00      	ldr	r0, [r0, #80]	@ 0x50
1005fab2:	4770      	bx	lr

1005fab4 <__arm_cp.2_0>:
1005fab4:	20000894 	.word	0x20000894

1005fab8 <LLC_blueapi_cte_ucfg_weak>:
1005fab8:	4770      	bx	lr

1005faba <LLC_connless_process_rx_cte_ucfg_weak>:
1005faba:	4770      	bx	lr

1005fabc <LLC_check_iq_samples_ready_ucfg_weak>:
1005fabc:	2000      	movs	r0, #0
1005fabe:	4770      	bx	lr

1005fac0 <llc_cte_init_ucfg_weak>:
1005fac0:	4770      	bx	lr

1005fac2 <llc_cte_mem_allocate_ucfg_weak>:
1005fac2:	4770      	bx	lr

1005fac4 <llc_cte_timer_error_ucfg_weak>:
1005fac4:	4770      	bx	lr

1005fac6 <llc_cte_timer_start_ucfg_weak>:
1005fac6:	4770      	bx	lr

1005fac8 <llc_cte_timer_stop_ucfg_weak>:
1005fac8:	2000      	movs	r0, #0
1005faca:	4770      	bx	lr

1005facc <LL_dtm_init>:
1005facc:	b5b0      	push	{r4, r5, r7, lr}
1005face:	480e      	ldr	r0, [pc, #56]	@ (1005fb08 <__arm_cp.0_0>)
1005fad0:	6800      	ldr	r0, [r0, #0]
1005fad2:	21ac      	movs	r1, #172	@ 0xac
1005fad4:	5844      	ldr	r4, [r0, r1]
1005fad6:	20ff      	movs	r0, #255	@ 0xff
1005fad8:	77a0      	strb	r0, [r4, #30]
1005fada:	2500      	movs	r5, #0
1005fadc:	77e5      	strb	r5, [r4, #31]
1005fade:	f7f5 fb21 	bl	10055124 <cte_csr_ucfg_weak>
1005fae2:	2801      	cmp	r0, #1
1005fae4:	d10f      	bne.n	1005fb06 <LL_dtm_init+0x3a>
1005fae6:	f7ff ffdf 	bl	1005faa8 <llc_cte_get_ctxt>
1005faea:	2224      	movs	r2, #36	@ 0x24
1005faec:	4907      	ldr	r1, [pc, #28]	@ (1005fb0c <__arm_cp.0_1>)
1005faee:	5c8a      	ldrb	r2, [r1, r2]
1005faf0:	2a00      	cmp	r2, #0
1005faf2:	462a      	mov	r2, r5
1005faf4:	d000      	beq.n	1005faf8 <LL_dtm_init+0x2c>
1005faf6:	6802      	ldr	r2, [r0, #0]
1005faf8:	62a2      	str	r2, [r4, #40]	@ 0x28
1005fafa:	2223      	movs	r2, #35	@ 0x23
1005fafc:	5c89      	ldrb	r1, [r1, r2]
1005fafe:	2900      	cmp	r1, #0
1005fb00:	d000      	beq.n	1005fb04 <LL_dtm_init+0x38>
1005fb02:	6845      	ldr	r5, [r0, #4]
1005fb04:	62e5      	str	r5, [r4, #44]	@ 0x2c
1005fb06:	bdb0      	pop	{r4, r5, r7, pc}

1005fb08 <__arm_cp.0_0>:
1005fb08:	20000894 	.word	0x20000894

1005fb0c <__arm_cp.0_1>:
1005fb0c:	200008a8 	.word	0x200008a8

1005fb10 <LL_eadv_data_struc_are_data_present>:
1005fb10:	7c00      	ldrb	r0, [r0, #16]
1005fb12:	1e41      	subs	r1, r0, #1
1005fb14:	4188      	sbcs	r0, r1
1005fb16:	4770      	bx	lr

1005fb18 <LL_eadv_switchbackupdata_data_struc>:
1005fb18:	b510      	push	{r4, lr}
1005fb1a:	7c01      	ldrb	r1, [r0, #16]
1005fb1c:	2902      	cmp	r1, #2
1005fb1e:	d109      	bne.n	1005fb34 <LL_eadv_switchbackupdata_data_struc+0x1c>
1005fb20:	2401      	movs	r4, #1
1005fb22:	7404      	strb	r4, [r0, #16]
1005fb24:	6801      	ldr	r1, [r0, #0]
1005fb26:	6882      	ldr	r2, [r0, #8]
1005fb28:	68c3      	ldr	r3, [r0, #12]
1005fb2a:	c00c      	stmia	r0!, {r2, r3}
1005fb2c:	20a1      	movs	r0, #161	@ 0xa1
1005fb2e:	f007 f8ad 	bl	10066c8c <aci_hal_adv_scan_resp_data_update_event_push_noinline>
1005fb32:	e000      	b.n	1005fb36 <LL_eadv_switchbackupdata_data_struc+0x1e>
1005fb34:	2400      	movs	r4, #0
1005fb36:	4620      	mov	r0, r4
1005fb38:	bd10      	pop	{r4, pc}

1005fb3a <LL_eadv_data_struc_reset_data_tosend>:
1005fb3a:	2100      	movs	r1, #0
1005fb3c:	8081      	strh	r1, [r0, #4]
1005fb3e:	4770      	bx	lr

1005fb40 <LL_eadv_Blue_Tx>:
1005fb40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005fb42:	461e      	mov	r6, r3
1005fb44:	4617      	mov	r7, r2
1005fb46:	460d      	mov	r5, r1
1005fb48:	4604      	mov	r4, r0
1005fb4a:	f7e6 f939 	bl	10045dc0 <BLEPLAT_CNTR_PacketInitTo0>
1005fb4e:	4620      	mov	r0, r4
1005fb50:	f7e6 f944 	bl	10045ddc <BLEPLAT_CNTR_PacketSetAdvPduFormat>
1005fb54:	4620      	mov	r0, r4
1005fb56:	f7e6 f9c0 	bl	10045eda <BLEPLAT_CNTR_PacketSetKeepsemareq>
1005fb5a:	4620      	mov	r0, r4
1005fb5c:	4621      	mov	r1, r4
1005fb5e:	f7e6 f9c9 	bl	10045ef4 <BLEPLAT_CNTR_PacketSetNextPtr>
1005fb62:	4620      	mov	r0, r4
1005fb64:	4639      	mov	r1, r7
1005fb66:	f7e6 f960 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
1005fb6a:	4620      	mov	r0, r4
1005fb6c:	4631      	mov	r1, r6
1005fb6e:	f7e6 fa1b 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
1005fb72:	9f06      	ldr	r7, [sp, #24]
1005fb74:	2e00      	cmp	r6, #0
1005fb76:	d002      	beq.n	1005fb7e <LL_eadv_Blue_Tx+0x3e>
1005fb78:	4620      	mov	r0, r4
1005fb7a:	f7e6 fa24 	bl	10045fc6 <BLEPLAT_CNTR_PacketSetTimer2Active>
1005fb7e:	4620      	mov	r0, r4
1005fb80:	f7e6 f8f8 	bl	10045d74 <BLEPLAT_CNTR_PacketClrIncChan>
1005fb84:	4620      	mov	r0, r4
1005fb86:	f7e6 f977 	bl	10045e78 <BLEPLAT_CNTR_PacketSetIntDone>
1005fb8a:	4620      	mov	r0, r4
1005fb8c:	f7e6 fa41 	bl	10046012 <BLEPLAT_CNTR_PacketSetTxReady>
1005fb90:	4620      	mov	r0, r4
1005fb92:	2f81      	cmp	r7, #129	@ 0x81
1005fb94:	d109      	bne.n	1005fbaa <LL_eadv_Blue_Tx+0x6a>
1005fb96:	4629      	mov	r1, r5
1005fb98:	f7e6 f9c8 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
1005fb9c:	4620      	mov	r0, r4
1005fb9e:	f7e6 f9e9 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005fba2:	4620      	mov	r0, r4
1005fba4:	f7e6 fa1b 	bl	10045fde <BLEPLAT_CNTR_PacketSetTimerTrigDone>
1005fba8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005fbaa:	f7e6 fa25 	bl	10045ff8 <BLEPLAT_CNTR_PacketSetTimerTrigRcv>
1005fbae:	4620      	mov	r0, r4
1005fbb0:	f7e6 f9af 	bl	10045f12 <BLEPLAT_CNTR_PacketSetNextRxMode>
1005fbb4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005fbb6 <LL_eadv_Blue_Rx>:
1005fbb6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005fbb8:	461e      	mov	r6, r3
1005fbba:	4617      	mov	r7, r2
1005fbbc:	460d      	mov	r5, r1
1005fbbe:	4604      	mov	r4, r0
1005fbc0:	f7e6 f8fe 	bl	10045dc0 <BLEPLAT_CNTR_PacketInitTo0>
1005fbc4:	4620      	mov	r0, r4
1005fbc6:	f7e6 f909 	bl	10045ddc <BLEPLAT_CNTR_PacketSetAdvPduFormat>
1005fbca:	4620      	mov	r0, r4
1005fbcc:	f7e6 f985 	bl	10045eda <BLEPLAT_CNTR_PacketSetKeepsemareq>
1005fbd0:	4620      	mov	r0, r4
1005fbd2:	4621      	mov	r1, r4
1005fbd4:	f7e6 f98e 	bl	10045ef4 <BLEPLAT_CNTR_PacketSetNextPtr>
1005fbd8:	4620      	mov	r0, r4
1005fbda:	4639      	mov	r1, r7
1005fbdc:	f7e6 f925 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
1005fbe0:	4620      	mov	r0, r4
1005fbe2:	4631      	mov	r1, r6
1005fbe4:	f7e6 f9e0 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
1005fbe8:	9f07      	ldr	r7, [sp, #28]
1005fbea:	2e00      	cmp	r6, #0
1005fbec:	d002      	beq.n	1005fbf4 <LL_eadv_Blue_Rx+0x3e>
1005fbee:	4620      	mov	r0, r4
1005fbf0:	f7e6 f9e9 	bl	10045fc6 <BLEPLAT_CNTR_PacketSetTimer2Active>
1005fbf4:	4620      	mov	r0, r4
1005fbf6:	f7e6 f9a4 	bl	10045f42 <BLEPLAT_CNTR_PacketSetNextTxMode>
1005fbfa:	4620      	mov	r0, r4
1005fbfc:	f7e6 f8ba 	bl	10045d74 <BLEPLAT_CNTR_PacketClrIncChan>
1005fc00:	4620      	mov	r0, r4
1005fc02:	f7e6 f939 	bl	10045e78 <BLEPLAT_CNTR_PacketSetIntDone>
1005fc06:	4620      	mov	r0, r4
1005fc08:	f7e6 f9f6 	bl	10045ff8 <BLEPLAT_CNTR_PacketSetTimerTrigRcv>
1005fc0c:	4620      	mov	r0, r4
1005fc0e:	f7e6 f93f 	bl	10045e90 <BLEPLAT_CNTR_PacketSetIntRcvOk>
1005fc12:	4620      	mov	r0, r4
1005fc14:	f7e6 f9bb 	bl	10045f8e <BLEPLAT_CNTR_PacketSetRxReady>
1005fc18:	2f81      	cmp	r7, #129	@ 0x81
1005fc1a:	d107      	bne.n	1005fc2c <LL_eadv_Blue_Rx+0x76>
1005fc1c:	4620      	mov	r0, r4
1005fc1e:	4629      	mov	r1, r5
1005fc20:	f7e6 f984 	bl	10045f2c <BLEPLAT_CNTR_PacketSetNextSlot>
1005fc24:	4620      	mov	r0, r4
1005fc26:	f7e6 f8b1 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
1005fc2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005fc2c:	4620      	mov	r0, r4
1005fc2e:	f7e6 f9a1 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1005fc32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005fc34 <LL_eadv_BLUE_SM>:
1005fc34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005fc36:	461d      	mov	r5, r3
1005fc38:	4616      	mov	r6, r2
1005fc3a:	460f      	mov	r7, r1
1005fc3c:	4604      	mov	r4, r0
1005fc3e:	f7e6 fb75 	bl	1004632c <BLEPLAT_CNTR_SmInitTo0>
1005fc42:	4911      	ldr	r1, [pc, #68]	@ (1005fc88 <__arm_cp.10_0>)
1005fc44:	4620      	mov	r0, r4
1005fc46:	f7e6 fb8f 	bl	10046368 <BLEPLAT_CNTR_SmSetAccessAddr>
1005fc4a:	4910      	ldr	r1, [pc, #64]	@ (1005fc8c <__arm_cp.10_1>)
1005fc4c:	4620      	mov	r0, r4
1005fc4e:	f7e6 fbce 	bl	100463ee <BLEPLAT_CNTR_SmSetCrcInit>
1005fc52:	4620      	mov	r0, r4
1005fc54:	4639      	mov	r1, r7
1005fc56:	f7e6 fcfb 	bl	10046650 <BLEPLAT_CNTR_SmSetTxPwr>
1005fc5a:	4620      	mov	r0, r4
1005fc5c:	4631      	mov	r1, r6
1005fc5e:	f7e6 fcd0 	bl	10046602 <BLEPLAT_CNTR_SmSetTxPacketPtr>
1005fc62:	4620      	mov	r0, r4
1005fc64:	4629      	mov	r1, r5
1005fc66:	f7e6 fc60 	bl	1004652a <BLEPLAT_CNTR_SmSetRxPacketPtr>
1005fc6a:	9806      	ldr	r0, [sp, #24]
1005fc6c:	2881      	cmp	r0, #129	@ 0x81
1005fc6e:	d103      	bne.n	1005fc78 <LL_eadv_BLUE_SM+0x44>
1005fc70:	4620      	mov	r0, r4
1005fc72:	f7e6 fcb7 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
1005fc76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005fc78:	4620      	mov	r0, r4
1005fc7a:	f7e6 fc47 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
1005fc7e:	2101      	movs	r1, #1
1005fc80:	4620      	mov	r0, r4
1005fc82:	f7e6 fbdb 	bl	1004643c <BLEPLAT_CNTR_SmSetHopIncr>
1005fc86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005fc88 <__arm_cp.10_0>:
1005fc88:	8e89bed6 	.word	0x8e89bed6

1005fc8c <__arm_cp.10_1>:
1005fc8c:	00555555 	.word	0x00555555

1005fc90 <UTIL_Intervalconv>:
1005fc90:	788a      	ldrb	r2, [r1, #2]
1005fc92:	0412      	lsls	r2, r2, #16
1005fc94:	784b      	ldrb	r3, [r1, #1]
1005fc96:	021b      	lsls	r3, r3, #8
1005fc98:	189a      	adds	r2, r3, r2
1005fc9a:	7809      	ldrb	r1, [r1, #0]
1005fc9c:	1851      	adds	r1, r2, r1
1005fc9e:	6001      	str	r1, [r0, #0]
1005fca0:	4770      	bx	lr
	...

1005fca4 <llc_get_advertising_set_index>:
1005fca4:	b570      	push	{r4, r5, r6, lr}
1005fca6:	4604      	mov	r4, r0
1005fca8:	f002 fb0a 	bl	100622c0 <llc_get_linkms_cntxt_p>
1005fcac:	214d      	movs	r1, #77	@ 0x4d
1005fcae:	5c41      	ldrb	r1, [r0, r1]
1005fcb0:	4d09      	ldr	r5, [pc, #36]	@ (1005fcd8 <__arm_cp.12_0>)
1005fcb2:	2200      	movs	r2, #0
1005fcb4:	23be      	movs	r3, #190	@ 0xbe
1005fcb6:	4291      	cmp	r1, r2
1005fcb8:	d00b      	beq.n	1005fcd2 <llc_get_advertising_set_index+0x2e>
1005fcba:	6806      	ldr	r6, [r0, #0]
1005fcbc:	5af6      	ldrh	r6, [r6, r3]
1005fcbe:	42a6      	cmp	r6, r4
1005fcc0:	4616      	mov	r6, r2
1005fcc2:	d000      	beq.n	1005fcc6 <llc_get_advertising_set_index+0x22>
1005fcc4:	462e      	mov	r6, r5
1005fcc6:	2501      	movs	r5, #1
1005fcc8:	022d      	lsls	r5, r5, #8
1005fcca:	195b      	adds	r3, r3, r5
1005fccc:	1c52      	adds	r2, r2, #1
1005fcce:	4635      	mov	r5, r6
1005fcd0:	e7f1      	b.n	1005fcb6 <llc_get_advertising_set_index+0x12>
1005fcd2:	b2a8      	uxth	r0, r5
1005fcd4:	bd70      	pop	{r4, r5, r6, pc}
1005fcd6:	46c0      	nop			@ (mov r8, r8)

1005fcd8 <__arm_cp.12_0>:
1005fcd8:	0000ffff 	.word	0x0000ffff

1005fcdc <llc_eadv_max_supported_data_check>:
1005fcdc:	b570      	push	{r4, r5, r6, lr}
1005fcde:	460c      	mov	r4, r1
1005fce0:	4605      	mov	r5, r0
1005fce2:	4608      	mov	r0, r1
1005fce4:	f000 f80d 	bl	1005fd02 <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start>
1005fce8:	4606      	mov	r6, r0
1005fcea:	4620      	mov	r0, r4
1005fcec:	4629      	mov	r1, r5
1005fcee:	f000 f823 	bl	1005fd38 <llc_eadv_get_adv_event_length>
1005fcf2:	1980      	adds	r0, r0, r6
1005fcf4:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
1005fcf6:	4288      	cmp	r0, r1
1005fcf8:	d801      	bhi.n	1005fcfe <llc_eadv_max_supported_data_check+0x22>
1005fcfa:	2000      	movs	r0, #0
1005fcfc:	bd70      	pop	{r4, r5, r6, pc}
1005fcfe:	2045      	movs	r0, #69	@ 0x45
1005fd00:	bd70      	pop	{r4, r5, r6, pc}

1005fd02 <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start>:
1005fd02:	21ff      	movs	r1, #255	@ 0xff
1005fd04:	3168      	adds	r1, #104	@ 0x68
1005fd06:	4602      	mov	r2, r0
1005fd08:	32c2      	adds	r2, #194	@ 0xc2
1005fd0a:	78d2      	ldrb	r2, [r2, #3]
1005fd0c:	2a04      	cmp	r2, #4
1005fd0e:	460b      	mov	r3, r1
1005fd10:	d000      	beq.n	1005fd14 <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start+0x12>
1005fd12:	23b3      	movs	r3, #179	@ 0xb3
1005fd14:	2a03      	cmp	r2, #3
1005fd16:	d001      	beq.n	1005fd1c <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start+0x1a>
1005fd18:	4619      	mov	r1, r3
1005fd1a:	e000      	b.n	1005fd1e <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start+0x1c>
1005fd1c:	31f3      	adds	r1, #243	@ 0xf3
1005fd1e:	22c2      	movs	r2, #194	@ 0xc2
1005fd20:	5c80      	ldrb	r0, [r0, r2]
1005fd22:	2201      	movs	r2, #1
1005fd24:	4002      	ands	r2, r0
1005fd26:	0783      	lsls	r3, r0, #30
1005fd28:	0fdb      	lsrs	r3, r3, #31
1005fd2a:	189a      	adds	r2, r3, r2
1005fd2c:	0740      	lsls	r0, r0, #29
1005fd2e:	0fc0      	lsrs	r0, r0, #31
1005fd30:	1810      	adds	r0, r2, r0
1005fd32:	4348      	muls	r0, r1
1005fd34:	30bb      	adds	r0, #187	@ 0xbb
1005fd36:	4770      	bx	lr

1005fd38 <llc_eadv_get_adv_event_length>:
1005fd38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005fd3a:	460a      	mov	r2, r1
1005fd3c:	4601      	mov	r1, r0
1005fd3e:	2000      	movs	r0, #0
1005fd40:	9000      	str	r0, [sp, #0]
1005fd42:	9001      	str	r0, [sp, #4]
1005fd44:	9002      	str	r0, [sp, #8]
1005fd46:	237e      	movs	r3, #126	@ 0x7e
1005fd48:	43db      	mvns	r3, r3
1005fd4a:	f7fc ffc3 	bl	1005ccd4 <llc_get_adv_event_length>
1005fd4e:	b004      	add	sp, #16
1005fd50:	bd80      	pop	{r7, pc}
	...

1005fd54 <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list>:
1005fd54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1005fd56:	4604      	mov	r4, r0
1005fd58:	f002 fab2 	bl	100622c0 <llc_get_linkms_cntxt_p>
1005fd5c:	4601      	mov	r1, r0
1005fd5e:	204d      	movs	r0, #77	@ 0x4d
1005fd60:	5c08      	ldrb	r0, [r1, r0]
1005fd62:	0202      	lsls	r2, r0, #8
1005fd64:	2000      	movs	r0, #0
1005fd66:	4b0d      	ldr	r3, [pc, #52]	@ (1005fd9c <__arm_cp.17_0>)
1005fd68:	4605      	mov	r5, r0
1005fd6a:	42aa      	cmp	r2, r5
1005fd6c:	d013      	beq.n	1005fd96 <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list+0x42>
1005fd6e:	680e      	ldr	r6, [r1, #0]
1005fd70:	1976      	adds	r6, r6, r5
1005fd72:	27be      	movs	r7, #190	@ 0xbe
1005fd74:	5bf7      	ldrh	r7, [r6, r7]
1005fd76:	429f      	cmp	r7, r3
1005fd78:	d003      	beq.n	1005fd82 <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list+0x2e>
1005fd7a:	27ce      	movs	r7, #206	@ 0xce
1005fd7c:	5df7      	ldrb	r7, [r6, r7]
1005fd7e:	2f01      	cmp	r7, #1
1005fd80:	d003      	beq.n	1005fd8a <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list+0x36>
1005fd82:	2601      	movs	r6, #1
1005fd84:	0236      	lsls	r6, r6, #8
1005fd86:	19ad      	adds	r5, r5, r6
1005fd88:	e7ef      	b.n	1005fd6a <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list+0x16>
1005fd8a:	2c00      	cmp	r4, #0
1005fd8c:	d004      	beq.n	1005fd98 <llc_eadv_any_adv_enabled_and_use_of_filter_accept_list+0x44>
1005fd8e:	20c3      	movs	r0, #195	@ 0xc3
1005fd90:	5c30      	ldrb	r0, [r6, r0]
1005fd92:	1e41      	subs	r1, r0, #1
1005fd94:	4188      	sbcs	r0, r1
1005fd96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1005fd98:	2001      	movs	r0, #1
1005fd9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1005fd9c <__arm_cp.17_0>:
1005fd9c:	0000ffff 	.word	0x0000ffff

1005fda0 <llc_eadv_generate_new_rpa_for_one_adv_set>:
1005fda0:	b5b0      	push	{r4, r5, r7, lr}
1005fda2:	4604      	mov	r4, r0
1005fda4:	20d6      	movs	r0, #214	@ 0xd6
1005fda6:	5c20      	ldrb	r0, [r4, r0]
1005fda8:	0780      	lsls	r0, r0, #30
1005fdaa:	d401      	bmi.n	1005fdb0 <llc_eadv_generate_new_rpa_for_one_adv_set+0x10>
1005fdac:	2000      	movs	r0, #0
1005fdae:	bdb0      	pop	{r4, r5, r7, pc}
1005fdb0:	4625      	mov	r5, r4
1005fdb2:	3584      	adds	r5, #132	@ 0x84
1005fdb4:	4628      	mov	r0, r5
1005fdb6:	f7f9 fa1c 	bl	100591f2 <llc_priv_init_random_part_of_one_local_rpa_ucfg_weak>
1005fdba:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
1005fdbc:	4628      	mov	r0, r5
1005fdbe:	f7f9 fa10 	bl	100591e2 <llc_priv_generate_local_rpa_from_peer_id_ucfg_weak>
1005fdc2:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
1005fdc4:	3008      	adds	r0, #8
1005fdc6:	2100      	movs	r1, #0
1005fdc8:	f7f9 f9a8 	bl	1005911c <llc_priv_generate_peer_rpa_from_peer_id_ucfg_weak>
1005fdcc:	6f60      	ldr	r0, [r4, #116]	@ 0x74
1005fdce:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
1005fdd0:	6761      	str	r1, [r4, #116]	@ 0x74
1005fdd2:	67a0      	str	r0, [r4, #120]	@ 0x78
1005fdd4:	2001      	movs	r0, #1
1005fdd6:	bdb0      	pop	{r4, r5, r7, pc}

1005fdd8 <EADV_init>:
1005fdd8:	b5f0      	push	{r4, r5, r6, r7, lr}
1005fdda:	b085      	sub	sp, #20
1005fddc:	9204      	str	r2, [sp, #16]
1005fdde:	460e      	mov	r6, r1
1005fde0:	4605      	mov	r5, r0
1005fde2:	244d      	movs	r4, #77	@ 0x4d
1005fde4:	f002 fa6c 	bl	100622c0 <llc_get_linkms_cntxt_p>
1005fde8:	5505      	strb	r5, [r0, r4]
1005fdea:	6006      	str	r6, [r0, #0]
1005fdec:	9003      	str	r0, [sp, #12]
1005fdee:	304d      	adds	r0, #77	@ 0x4d
1005fdf0:	2101      	movs	r1, #1
1005fdf2:	9002      	str	r0, [sp, #8]
1005fdf4:	7041      	strb	r1, [r0, #1]
1005fdf6:	9101      	str	r1, [sp, #4]
1005fdf8:	04cb      	lsls	r3, r1, #19
1005fdfa:	2600      	movs	r6, #0
1005fdfc:	277c      	movs	r7, #124	@ 0x7c
1005fdfe:	9a04      	ldr	r2, [sp, #16]
1005fe00:	b2e8      	uxtb	r0, r5
1005fe02:	4286      	cmp	r6, r0
1005fe04:	d226      	bcs.n	1005fe54 <EADV_init+0x7c>
1005fe06:	9803      	ldr	r0, [sp, #12]
1005fe08:	6800      	ldr	r0, [r0, #0]
1005fe0a:	51c3      	str	r3, [r0, r7]
1005fe0c:	19c5      	adds	r5, r0, r7
1005fe0e:	2054      	movs	r0, #84	@ 0x54
1005fe10:	4911      	ldr	r1, [pc, #68]	@ (1005fe58 <__arm_cp.19_0>)
1005fe12:	5229      	strh	r1, [r5, r0]
1005fe14:	2452      	movs	r4, #82	@ 0x52
1005fe16:	2000      	movs	r0, #0
1005fe18:	5328      	strh	r0, [r5, r4]
1005fe1a:	2442      	movs	r4, #66	@ 0x42
1005fe1c:	5329      	strh	r1, [r5, r4]
1005fe1e:	245e      	movs	r4, #94	@ 0x5e
1005fe20:	5528      	strb	r0, [r5, r4]
1005fe22:	245c      	movs	r4, #92	@ 0x5c
1005fe24:	21ff      	movs	r1, #255	@ 0xff
1005fe26:	5529      	strb	r1, [r5, r4]
1005fe28:	215a      	movs	r1, #90	@ 0x5a
1005fe2a:	5468      	strb	r0, [r5, r1]
1005fe2c:	2146      	movs	r1, #70	@ 0x46
1005fe2e:	2407      	movs	r4, #7
1005fe30:	526c      	strh	r4, [r5, r1]
1005fe32:	6128      	str	r0, [r5, #16]
1005fe34:	6168      	str	r0, [r5, #20]
1005fe36:	606b      	str	r3, [r5, #4]
1005fe38:	9904      	ldr	r1, [sp, #16]
1005fe3a:	2900      	cmp	r1, #0
1005fe3c:	d002      	beq.n	1005fe44 <EADV_init+0x6c>
1005fe3e:	6550      	str	r0, [r2, #84]	@ 0x54
1005fe40:	3d2c      	subs	r5, #44	@ 0x2c
1005fe42:	602a      	str	r2, [r5, #0]
1005fe44:	9801      	ldr	r0, [sp, #4]
1005fe46:	0200      	lsls	r0, r0, #8
1005fe48:	183f      	adds	r7, r7, r0
1005fe4a:	325c      	adds	r2, #92	@ 0x5c
1005fe4c:	9802      	ldr	r0, [sp, #8]
1005fe4e:	7805      	ldrb	r5, [r0, #0]
1005fe50:	1c76      	adds	r6, r6, #1
1005fe52:	e7d5      	b.n	1005fe00 <EADV_init+0x28>
1005fe54:	b005      	add	sp, #20
1005fe56:	bdf0      	pop	{r4, r5, r6, r7, pc}

1005fe58 <__arm_cp.19_0>:
1005fe58:	0000ffff 	.word	0x0000ffff

1005fe5c <LL_Context_ReturnFree>:
1005fe5c:	b510      	push	{r4, lr}
1005fe5e:	f002 fa2f 	bl	100622c0 <llc_get_linkms_cntxt_p>
1005fe62:	214d      	movs	r1, #77	@ 0x4d
1005fe64:	5c42      	ldrb	r2, [r0, r1]
1005fe66:	2100      	movs	r1, #0
1005fe68:	23be      	movs	r3, #190	@ 0xbe
1005fe6a:	428a      	cmp	r2, r1
1005fe6c:	d008      	beq.n	1005fe80 <LL_Context_ReturnFree+0x24>
1005fe6e:	6804      	ldr	r4, [r0, #0]
1005fe70:	5ae4      	ldrh	r4, [r4, r3]
1005fe72:	0b24      	lsrs	r4, r4, #12
1005fe74:	d105      	bne.n	1005fe82 <LL_Context_ReturnFree+0x26>
1005fe76:	2401      	movs	r4, #1
1005fe78:	0224      	lsls	r4, r4, #8
1005fe7a:	191b      	adds	r3, r3, r4
1005fe7c:	1c49      	adds	r1, r1, #1
1005fe7e:	e7f4      	b.n	1005fe6a <LL_Context_ReturnFree+0xe>
1005fe80:	21ff      	movs	r1, #255	@ 0xff
1005fe82:	b2c8      	uxtb	r0, r1
1005fe84:	bd10      	pop	{r4, pc}
	...

1005fe88 <LL_Set_Extented_Advertising_Enable>:
1005fe88:	b5f0      	push	{r4, r5, r6, r7, lr}
1005fe8a:	b08f      	sub	sp, #60	@ 0x3c
1005fe8c:	930e      	str	r3, [sp, #56]	@ 0x38
1005fe8e:	4617      	mov	r7, r2
1005fe90:	460d      	mov	r5, r1
1005fe92:	4606      	mov	r6, r0
1005fe94:	4305      	orrs	r5, r0
1005fe96:	f002 fa13 	bl	100622c0 <llc_get_linkms_cntxt_p>
1005fe9a:	4604      	mov	r4, r0
1005fe9c:	2d00      	cmp	r5, #0
1005fe9e:	d007      	beq.n	1005feb0 <LL_Set_Extented_Advertising_Enable+0x28>
1005fea0:	4638      	mov	r0, r7
1005fea2:	f7ff feff 	bl	1005fca4 <llc_get_advertising_set_index>
1005fea6:	49a7      	ldr	r1, [pc, #668]	@ (10060144 <__arm_cp.24_1>)
1005fea8:	4288      	cmp	r0, r1
1005feaa:	d118      	bne.n	1005fede <LL_Set_Extented_Advertising_Enable+0x56>
1005feac:	2042      	movs	r0, #66	@ 0x42
1005feae:	e04a      	b.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005feb0:	4625      	mov	r5, r4
1005feb2:	354d      	adds	r5, #77	@ 0x4d
1005feb4:	2600      	movs	r6, #0
1005feb6:	4637      	mov	r7, r6
1005feb8:	960e      	str	r6, [sp, #56]	@ 0x38
1005feba:	7828      	ldrb	r0, [r5, #0]
1005febc:	4286      	cmp	r6, r0
1005febe:	d20c      	bcs.n	1005feda <LL_Set_Extented_Advertising_Enable+0x52>
1005fec0:	6820      	ldr	r0, [r4, #0]
1005fec2:	19c0      	adds	r0, r0, r7
1005fec4:	21ce      	movs	r1, #206	@ 0xce
1005fec6:	5c41      	ldrb	r1, [r0, r1]
1005fec8:	2901      	cmp	r1, #1
1005feca:	d101      	bne.n	1005fed0 <LL_Set_Extented_Advertising_Enable+0x48>
1005fecc:	f000 fa78 	bl	100603c0 <EADV_stop>
1005fed0:	2001      	movs	r0, #1
1005fed2:	0200      	lsls	r0, r0, #8
1005fed4:	183f      	adds	r7, r7, r0
1005fed6:	1c76      	adds	r6, r6, #1
1005fed8:	e7ef      	b.n	1005feba <LL_Set_Extented_Advertising_Enable+0x32>
1005feda:	980e      	ldr	r0, [sp, #56]	@ 0x38
1005fedc:	e033      	b.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005fede:	0201      	lsls	r1, r0, #8
1005fee0:	6822      	ldr	r2, [r4, #0]
1005fee2:	1854      	adds	r4, r2, r1
1005fee4:	21ce      	movs	r1, #206	@ 0xce
1005fee6:	5c61      	ldrb	r1, [r4, r1]
1005fee8:	2e01      	cmp	r6, #1
1005feea:	d124      	bne.n	1005ff36 <LL_Set_Extented_Advertising_Enable+0xae>
1005feec:	0200      	lsls	r0, r0, #8
1005feee:	1815      	adds	r5, r2, r0
1005fef0:	20d6      	movs	r0, #214	@ 0xd6
1005fef2:	5c28      	ldrb	r0, [r5, r0]
1005fef4:	2701      	movs	r7, #1
1005fef6:	4038      	ands	r0, r7
1005fef8:	2900      	cmp	r1, #0
1005fefa:	d026      	beq.n	1005ff4a <LL_Set_Extented_Advertising_Enable+0xc2>
1005fefc:	2800      	cmp	r0, #0
1005fefe:	d00a      	beq.n	1005ff16 <LL_Set_Extented_Advertising_Enable+0x8e>
1005ff00:	208c      	movs	r0, #140	@ 0x8c
1005ff02:	5828      	ldr	r0, [r5, r0]
1005ff04:	6fa9      	ldr	r1, [r5, #120]	@ 0x78
1005ff06:	462a      	mov	r2, r5
1005ff08:	328c      	adds	r2, #140	@ 0x8c
1005ff0a:	6852      	ldr	r2, [r2, #4]
1005ff0c:	c105      	stmia	r1!, {r0, r2}
1005ff0e:	6f68      	ldr	r0, [r5, #116]	@ 0x74
1005ff10:	6fa9      	ldr	r1, [r5, #120]	@ 0x78
1005ff12:	6769      	str	r1, [r5, #116]	@ 0x74
1005ff14:	67a8      	str	r0, [r5, #120]	@ 0x78
1005ff16:	2094      	movs	r0, #148	@ 0x94
1005ff18:	5828      	ldr	r0, [r5, r0]
1005ff1a:	2600      	movs	r6, #0
1005ff1c:	2800      	cmp	r0, #0
1005ff1e:	d008      	beq.n	1005ff32 <LL_Set_Extented_Advertising_Enable+0xaa>
1005ff20:	3594      	adds	r5, #148	@ 0x94
1005ff22:	207d      	movs	r0, #125	@ 0x7d
1005ff24:	0144      	lsls	r4, r0, #5
1005ff26:	980e      	ldr	r0, [sp, #56]	@ 0x38
1005ff28:	4344      	muls	r4, r0
1005ff2a:	f7e4 fe2f 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1005ff2e:	1820      	adds	r0, r4, r0
1005ff30:	6028      	str	r0, [r5, #0]
1005ff32:	4630      	mov	r0, r6
1005ff34:	e007      	b.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005ff36:	2000      	movs	r0, #0
1005ff38:	2901      	cmp	r1, #1
1005ff3a:	d104      	bne.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005ff3c:	4605      	mov	r5, r0
1005ff3e:	4620      	mov	r0, r4
1005ff40:	f000 fa3e 	bl	100603c0 <EADV_stop>
1005ff44:	4628      	mov	r0, r5
1005ff46:	b00f      	add	sp, #60	@ 0x3c
1005ff48:	bdf0      	pop	{r4, r5, r6, r7, pc}
1005ff4a:	2800      	cmp	r0, #0
1005ff4c:	d007      	beq.n	1005ff5e <LL_Set_Extented_Advertising_Enable+0xd6>
1005ff4e:	208c      	movs	r0, #140	@ 0x8c
1005ff50:	5828      	ldr	r0, [r5, r0]
1005ff52:	2800      	cmp	r0, #0
1005ff54:	d103      	bne.n	1005ff5e <LL_Set_Extented_Advertising_Enable+0xd6>
1005ff56:	2090      	movs	r0, #144	@ 0x90
1005ff58:	5828      	ldr	r0, [r5, r0]
1005ff5a:	2800      	cmp	r0, #0
1005ff5c:	d006      	beq.n	1005ff6c <LL_Set_Extented_Advertising_Enable+0xe4>
1005ff5e:	20b8      	movs	r0, #184	@ 0xb8
1005ff60:	5a28      	ldrh	r0, [r5, r0]
1005ff62:	07c1      	lsls	r1, r0, #31
1005ff64:	d004      	beq.n	1005ff70 <LL_Set_Extented_Advertising_Enable+0xe8>
1005ff66:	8de9      	ldrh	r1, [r5, #46]	@ 0x2e
1005ff68:	29f5      	cmp	r1, #245	@ 0xf5
1005ff6a:	d901      	bls.n	1005ff70 <LL_Set_Extented_Advertising_Enable+0xe8>
1005ff6c:	2012      	movs	r0, #18
1005ff6e:	e7ea      	b.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005ff70:	2312      	movs	r3, #18
1005ff72:	4601      	mov	r1, r0
1005ff74:	461a      	mov	r2, r3
1005ff76:	4019      	ands	r1, r3
1005ff78:	2902      	cmp	r1, #2
1005ff7a:	d103      	bne.n	1005ff84 <LL_Set_Extented_Advertising_Enable+0xfc>
1005ff7c:	2142      	movs	r1, #66	@ 0x42
1005ff7e:	5a69      	ldrh	r1, [r5, r1]
1005ff80:	2900      	cmp	r1, #0
1005ff82:	d040      	beq.n	10060006 <LL_Set_Extented_Advertising_Enable+0x17e>
1005ff84:	0700      	lsls	r0, r0, #28
1005ff86:	d50f      	bpl.n	1005ffa8 <LL_Set_Extented_Advertising_Enable+0x120>
1005ff88:	486d      	ldr	r0, [pc, #436]	@ (10060140 <__arm_cp.24_0>)
1005ff8a:	21be      	movs	r1, #190	@ 0xbe
1005ff8c:	5a69      	ldrh	r1, [r5, r1]
1005ff8e:	4281      	cmp	r1, r0
1005ff90:	d001      	beq.n	1005ff96 <LL_Set_Extented_Advertising_Enable+0x10e>
1005ff92:	980e      	ldr	r0, [sp, #56]	@ 0x38
1005ff94:	e000      	b.n	1005ff98 <LL_Set_Extented_Advertising_Enable+0x110>
1005ff96:	2080      	movs	r0, #128	@ 0x80
1005ff98:	2880      	cmp	r0, #128	@ 0x80
1005ff9a:	d901      	bls.n	1005ffa0 <LL_Set_Extented_Advertising_Enable+0x118>
1005ff9c:	4610      	mov	r0, r2
1005ff9e:	e7d2      	b.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005ffa0:	900e      	str	r0, [sp, #56]	@ 0x38
1005ffa2:	2800      	cmp	r0, #0
1005ffa4:	4610      	mov	r0, r2
1005ffa6:	d0ce      	beq.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005ffa8:	9814      	ldr	r0, [sp, #80]	@ 0x50
1005ffaa:	21ba      	movs	r1, #186	@ 0xba
1005ffac:	5268      	strh	r0, [r5, r1]
1005ffae:	267d      	movs	r6, #125	@ 0x7d
1005ffb0:	0171      	lsls	r1, r6, #5
1005ffb2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1005ffb4:	4351      	muls	r1, r2
1005ffb6:	2294      	movs	r2, #148	@ 0x94
1005ffb8:	50a9      	str	r1, [r5, r2]
1005ffba:	2800      	cmp	r0, #0
1005ffbc:	d001      	beq.n	1005ffc2 <LL_Set_Extented_Advertising_Enable+0x13a>
1005ffbe:	21cf      	movs	r1, #207	@ 0xcf
1005ffc0:	546f      	strb	r7, [r5, r1]
1005ffc2:	21bc      	movs	r1, #188	@ 0xbc
1005ffc4:	5268      	strh	r0, [r5, r1]
1005ffc6:	4620      	mov	r0, r4
1005ffc8:	f7ee ff27 	bl	1004ee1a <EADV_start_request_radio_tasks_ucfg>
1005ffcc:	2800      	cmp	r0, #0
1005ffce:	d1ba      	bne.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1005ffd0:	4629      	mov	r1, r5
1005ffd2:	31d6      	adds	r1, #214	@ 0xd6
1005ffd4:	4628      	mov	r0, r5
1005ffd6:	3064      	adds	r0, #100	@ 0x64
1005ffd8:	462a      	mov	r2, r5
1005ffda:	3254      	adds	r2, #84	@ 0x54
1005ffdc:	676a      	str	r2, [r5, #116]	@ 0x74
1005ffde:	67a8      	str	r0, [r5, #120]	@ 0x78
1005ffe0:	462b      	mov	r3, r5
1005ffe2:	3378      	adds	r3, #120	@ 0x78
1005ffe4:	7809      	ldrb	r1, [r1, #0]
1005ffe6:	07c9      	lsls	r1, r1, #31
1005ffe8:	930d      	str	r3, [sp, #52]	@ 0x34
1005ffea:	d10e      	bne.n	1006000a <LL_Set_Extented_Advertising_Enable+0x182>
1005ffec:	2100      	movs	r1, #0
1005ffee:	6001      	str	r1, [r0, #0]
1005fff0:	66a9      	str	r1, [r5, #104]	@ 0x68
1005fff2:	4855      	ldr	r0, [pc, #340]	@ (10060148 <__arm_cp.24_2>)
1005fff4:	6801      	ldr	r1, [r0, #0]
1005fff6:	4620      	mov	r0, r4
1005fff8:	3065      	adds	r0, #101	@ 0x65
1005fffa:	2206      	movs	r2, #6
1005fffc:	f7e4 fcd2 	bl	100449a4 <BLEPLAT_MemCpy>
10060000:	980d      	ldr	r0, [sp, #52]	@ 0x34
10060002:	6800      	ldr	r0, [r0, #0]
10060004:	e008      	b.n	10060018 <LL_Set_Extented_Advertising_Enable+0x190>
10060006:	200c      	movs	r0, #12
10060008:	e79d      	b.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1006000a:	218c      	movs	r1, #140	@ 0x8c
1006000c:	5869      	ldr	r1, [r5, r1]
1006000e:	462a      	mov	r2, r5
10060010:	328c      	adds	r2, #140	@ 0x8c
10060012:	6852      	ldr	r2, [r2, #4]
10060014:	c006      	stmia	r0!, {r1, r2}
10060016:	3808      	subs	r0, #8
10060018:	4629      	mov	r1, r5
1006001a:	3194      	adds	r1, #148	@ 0x94
1006001c:	910e      	str	r1, [sp, #56]	@ 0x38
1006001e:	2184      	movs	r1, #132	@ 0x84
10060020:	5869      	ldr	r1, [r5, r1]
10060022:	462a      	mov	r2, r5
10060024:	3284      	adds	r2, #132	@ 0x84
10060026:	6852      	ldr	r2, [r2, #4]
10060028:	6081      	str	r1, [r0, #8]
1006002a:	60c2      	str	r2, [r0, #12]
1006002c:	4620      	mov	r0, r4
1006002e:	f7ff feb7 	bl	1005fda0 <llc_eadv_generate_new_rpa_for_one_adv_set>
10060032:	2800      	cmp	r0, #0
10060034:	960c      	str	r6, [sp, #48]	@ 0x30
10060036:	d002      	beq.n	1006003e <LL_Set_Extented_Advertising_Enable+0x1b6>
10060038:	f7f9 f8d9 	bl	100591ee <llc_priv_start_privacy_timer_ucfg_weak>
1006003c:	e006      	b.n	1006004c <LL_Set_Extented_Advertising_Enable+0x1c4>
1006003e:	4628      	mov	r0, r5
10060040:	3074      	adds	r0, #116	@ 0x74
10060042:	6801      	ldr	r1, [r0, #0]
10060044:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10060046:	681a      	ldr	r2, [r3, #0]
10060048:	6002      	str	r2, [r0, #0]
1006004a:	6019      	str	r1, [r3, #0]
1006004c:	990e      	ldr	r1, [sp, #56]	@ 0x38
1006004e:	4626      	mov	r6, r4
10060050:	36ce      	adds	r6, #206	@ 0xce
10060052:	4628      	mov	r0, r5
10060054:	30b8      	adds	r0, #184	@ 0xb8
10060056:	900d      	str	r0, [sp, #52]	@ 0x34
10060058:	6808      	ldr	r0, [r1, #0]
1006005a:	2800      	cmp	r0, #0
1006005c:	d005      	beq.n	1006006a <LL_Set_Extented_Advertising_Enable+0x1e2>
1006005e:	f7e4 fd95 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10060062:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10060064:	6811      	ldr	r1, [r2, #0]
10060066:	1808      	adds	r0, r1, r0
10060068:	6010      	str	r0, [r2, #0]
1006006a:	7037      	strb	r7, [r6, #0]
1006006c:	20c4      	movs	r0, #196	@ 0xc4
1006006e:	5c29      	ldrb	r1, [r5, r0]
10060070:	27d0      	movs	r7, #208	@ 0xd0
10060072:	5de8      	ldrb	r0, [r5, r7]
10060074:	2281      	movs	r2, #129	@ 0x81
10060076:	920e      	str	r2, [sp, #56]	@ 0x38
10060078:	9200      	str	r2, [sp, #0]
1006007a:	462e      	mov	r6, r5
1006007c:	3614      	adds	r6, #20
1006007e:	4622      	mov	r2, r4
10060080:	4633      	mov	r3, r6
10060082:	f7ff fdd7 	bl	1005fc34 <LL_eadv_BLUE_SM>
10060086:	5de8      	ldrb	r0, [r5, r7]
10060088:	2125      	movs	r1, #37	@ 0x25
1006008a:	f7e6 f9c2 	bl	10046412 <BLEPLAT_CNTR_SmSetDataLength>
1006008e:	462f      	mov	r7, r5
10060090:	37d0      	adds	r7, #208	@ 0xd0
10060092:	980d      	ldr	r0, [sp, #52]	@ 0x34
10060094:	8800      	ldrh	r0, [r0, #0]
10060096:	06c0      	lsls	r0, r0, #27
10060098:	d403      	bmi.n	100600a2 <LL_Set_Extented_Advertising_Enable+0x21a>
1006009a:	4620      	mov	r0, r4
1006009c:	f7ee fedd 	bl	1004ee5a <LL_eadv_start_extended_ucfg>
100600a0:	e042      	b.n	10060128 <LL_Set_Extented_Advertising_Enable+0x2a0>
100600a2:	f7e4 fd73 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
100600a6:	219c      	movs	r1, #156	@ 0x9c
100600a8:	910b      	str	r1, [sp, #44]	@ 0x2c
100600aa:	5068      	str	r0, [r5, r1]
100600ac:	f002 f8ec 	bl	10062288 <LL_get_tx_common_buffer_p>
100600b0:	9009      	str	r0, [sp, #36]	@ 0x24
100600b2:	f002 f8f1 	bl	10062298 <LL_get_rx_common_buffer_p>
100600b6:	900a      	str	r0, [sp, #40]	@ 0x28
100600b8:	7838      	ldrb	r0, [r7, #0]
100600ba:	9008      	str	r0, [sp, #32]
100600bc:	2094      	movs	r0, #148	@ 0x94
100600be:	2100      	movs	r1, #0
100600c0:	910d      	str	r1, [sp, #52]	@ 0x34
100600c2:	460a      	mov	r2, r1
100600c4:	f7e5 fd03 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
100600c8:	4603      	mov	r3, r0
100600ca:	980e      	ldr	r0, [sp, #56]	@ 0x38
100600cc:	9000      	str	r0, [sp, #0]
100600ce:	4620      	mov	r0, r4
100600d0:	9908      	ldr	r1, [sp, #32]
100600d2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
100600d4:	f7ff fd34 	bl	1005fb40 <LL_eadv_Blue_Tx>
100600d8:	7838      	ldrb	r0, [r7, #0]
100600da:	9009      	str	r0, [sp, #36]	@ 0x24
100600dc:	2096      	movs	r0, #150	@ 0x96
100600de:	2101      	movs	r1, #1
100600e0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100600e2:	f7e5 fcf4 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
100600e6:	4603      	mov	r3, r0
100600e8:	980d      	ldr	r0, [sp, #52]	@ 0x34
100600ea:	9000      	str	r0, [sp, #0]
100600ec:	980e      	ldr	r0, [sp, #56]	@ 0x38
100600ee:	9001      	str	r0, [sp, #4]
100600f0:	4630      	mov	r0, r6
100600f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
100600f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100600f6:	f7ff fd5e 	bl	1005fbb6 <LL_eadv_Blue_Rx>
100600fa:	6fe9      	ldr	r1, [r5, #124]	@ 0x7c
100600fc:	980b      	ldr	r0, [sp, #44]	@ 0x2c
100600fe:	582a      	ldr	r2, [r5, r0]
10060100:	7838      	ldrb	r0, [r7, #0]
10060102:	4b12      	ldr	r3, [pc, #72]	@ (1006014c <__arm_cp.24_3>)
10060104:	9307      	str	r3, [sp, #28]
10060106:	4b12      	ldr	r3, [pc, #72]	@ (10060150 <__arm_cp.24_4>)
10060108:	9306      	str	r3, [sp, #24]
1006010a:	4b12      	ldr	r3, [pc, #72]	@ (10060154 <__arm_cp.24_5>)
1006010c:	9305      	str	r3, [sp, #20]
1006010e:	4b12      	ldr	r3, [pc, #72]	@ (10060158 <__arm_cp.24_6>)
10060110:	9304      	str	r3, [sp, #16]
10060112:	2314      	movs	r3, #20
10060114:	9303      	str	r3, [sp, #12]
10060116:	231f      	movs	r3, #31
10060118:	ae00      	add	r6, sp, #0
1006011a:	c60e      	stmia	r6!, {r1, r2, r3}
1006011c:	990c      	ldr	r1, [sp, #48]	@ 0x30
1006011e:	00cb      	lsls	r3, r1, #3
10060120:	4621      	mov	r1, r4
10060122:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10060124:	f002 f95e 	bl	100623e4 <LL_sched_enable_taskslot>
10060128:	249c      	movs	r4, #156	@ 0x9c
1006012a:	5929      	ldr	r1, [r5, r4]
1006012c:	7838      	ldrb	r0, [r7, #0]
1006012e:	f002 f935 	bl	1006239c <LL_sched_set_anchor>
10060132:	5928      	ldr	r0, [r5, r4]
10060134:	7839      	ldrb	r1, [r7, #0]
10060136:	f002 fcbd 	bl	10062ab4 <LL_sched_check_and_call_sched>
1006013a:	2000      	movs	r0, #0
1006013c:	e703      	b.n	1005ff46 <LL_Set_Extented_Advertising_Enable+0xbe>
1006013e:	46c0      	nop			@ (mov r8, r8)

10060140 <__arm_cp.24_0>:
10060140:	0000fffc 	.word	0x0000fffc

10060144 <__arm_cp.24_1>:
10060144:	0000ffff 	.word	0x0000ffff

10060148 <__arm_cp.24_2>:
10060148:	2000083c 	.word	0x2000083c

1006014c <__arm_cp.24_3>:
1006014c:	10060405 	.word	0x10060405

10060150 <__arm_cp.24_4>:
10060150:	10060869 	.word	0x10060869

10060154 <__arm_cp.24_5>:
10060154:	100606d9 	.word	0x100606d9

10060158 <__arm_cp.24_6>:
10060158:	1006040d 	.word	0x1006040d

1006015c <LL_Set_Extented_Advertising_Set_Random_Address>:
1006015c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006015e:	460c      	mov	r4, r1
10060160:	4606      	mov	r6, r0
10060162:	f002 f8ad 	bl	100622c0 <llc_get_linkms_cntxt_p>
10060166:	4607      	mov	r7, r0
10060168:	4630      	mov	r0, r6
1006016a:	f7ff fd9b 	bl	1005fca4 <llc_get_advertising_set_index>
1006016e:	4605      	mov	r5, r0
10060170:	4816      	ldr	r0, [pc, #88]	@ (100601cc <__arm_cp.25_0>)
10060172:	4285      	cmp	r5, r0
10060174:	d027      	beq.n	100601c6 <LL_Set_Extented_Advertising_Set_Random_Address+0x6a>
10060176:	0228      	lsls	r0, r5, #8
10060178:	683f      	ldr	r7, [r7, #0]
1006017a:	1838      	adds	r0, r7, r0
1006017c:	21be      	movs	r1, #190	@ 0xbe
1006017e:	5246      	strh	r6, [r0, r1]
10060180:	21b8      	movs	r1, #184	@ 0xb8
10060182:	5c40      	ldrb	r0, [r0, r1]
10060184:	07c0      	lsls	r0, r0, #31
10060186:	d007      	beq.n	10060198 <LL_Set_Extented_Advertising_Set_Random_Address+0x3c>
10060188:	0228      	lsls	r0, r5, #8
1006018a:	1838      	adds	r0, r7, r0
1006018c:	21ce      	movs	r1, #206	@ 0xce
1006018e:	5c40      	ldrb	r0, [r0, r1]
10060190:	2801      	cmp	r0, #1
10060192:	d101      	bne.n	10060198 <LL_Set_Extented_Advertising_Set_Random_Address+0x3c>
10060194:	250c      	movs	r5, #12
10060196:	e017      	b.n	100601c8 <LL_Set_Extented_Advertising_Set_Random_Address+0x6c>
10060198:	480d      	ldr	r0, [pc, #52]	@ (100601d0 <__arm_cp.25_1>)
1006019a:	6800      	ldr	r0, [r0, #0]
1006019c:	3056      	adds	r0, #86	@ 0x56
1006019e:	2606      	movs	r6, #6
100601a0:	4621      	mov	r1, r4
100601a2:	4632      	mov	r2, r6
100601a4:	f7e4 fbfe 	bl	100449a4 <BLEPLAT_MemCpy>
100601a8:	0228      	lsls	r0, r5, #8
100601aa:	1838      	adds	r0, r7, r0
100601ac:	218c      	movs	r1, #140	@ 0x8c
100601ae:	2201      	movs	r2, #1
100601b0:	5042      	str	r2, [r0, r1]
100601b2:	4601      	mov	r1, r0
100601b4:	318c      	adds	r1, #140	@ 0x8c
100601b6:	2500      	movs	r5, #0
100601b8:	604d      	str	r5, [r1, #4]
100601ba:	308d      	adds	r0, #141	@ 0x8d
100601bc:	4621      	mov	r1, r4
100601be:	4632      	mov	r2, r6
100601c0:	f7e4 fbf0 	bl	100449a4 <BLEPLAT_MemCpy>
100601c4:	e000      	b.n	100601c8 <LL_Set_Extented_Advertising_Set_Random_Address+0x6c>
100601c6:	2512      	movs	r5, #18
100601c8:	4628      	mov	r0, r5
100601ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100601cc <__arm_cp.25_0>:
100601cc:	0000ffff 	.word	0x0000ffff

100601d0 <__arm_cp.25_1>:
100601d0:	20000894 	.word	0x20000894

100601d4 <LL_Set_Extented_Advertising_Parameters>:
100601d4:	b5f0      	push	{r4, r5, r6, r7, lr}
100601d6:	b0c3      	sub	sp, #268	@ 0x10c
100601d8:	4604      	mov	r4, r0
100601da:	f002 f871 	bl	100622c0 <llc_get_linkms_cntxt_p>
100601de:	4605      	mov	r5, r0
100601e0:	7820      	ldrb	r0, [r4, #0]
100601e2:	af03      	add	r7, sp, #12
100601e4:	f7ff fd5e 	bl	1005fca4 <llc_get_advertising_set_index>
100601e8:	496b      	ldr	r1, [pc, #428]	@ (10060398 <__arm_cp.26_0>)
100601ea:	4288      	cmp	r0, r1
100601ec:	d02f      	beq.n	1006024e <LL_Set_Extented_Advertising_Parameters+0x7a>
100601ee:	0202      	lsls	r2, r0, #8
100601f0:	6829      	ldr	r1, [r5, #0]
100601f2:	188d      	adds	r5, r1, r2
100601f4:	22ce      	movs	r2, #206	@ 0xce
100601f6:	5caa      	ldrb	r2, [r5, r2]
100601f8:	260c      	movs	r6, #12
100601fa:	2a01      	cmp	r2, #1
100601fc:	d100      	bne.n	10060200 <LL_Set_Extented_Advertising_Parameters+0x2c>
100601fe:	e0c7      	b.n	10060390 <LL_Set_Extented_Advertising_Parameters+0x1bc>
10060200:	8862      	ldrh	r2, [r4, #2]
10060202:	06d3      	lsls	r3, r2, #27
10060204:	d505      	bpl.n	10060212 <LL_Set_Extented_Advertising_Parameters+0x3e>
10060206:	0203      	lsls	r3, r0, #8
10060208:	18cb      	adds	r3, r1, r3
1006020a:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
1006020c:	2b1f      	cmp	r3, #31
1006020e:	d900      	bls.n	10060212 <LL_Set_Extented_Advertising_Parameters+0x3e>
10060210:	e0be      	b.n	10060390 <LL_Set_Extented_Advertising_Parameters+0x1bc>
10060212:	9602      	str	r6, [sp, #8]
10060214:	9501      	str	r5, [sp, #4]
10060216:	2308      	movs	r3, #8
10060218:	4616      	mov	r6, r2
1006021a:	439e      	bics	r6, r3
1006021c:	2e15      	cmp	r6, #21
1006021e:	d104      	bne.n	1006022a <LL_Set_Extented_Advertising_Parameters+0x56>
10060220:	0203      	lsls	r3, r0, #8
10060222:	18cb      	adds	r3, r1, r3
10060224:	8ddb      	ldrh	r3, [r3, #46]	@ 0x2e
10060226:	2b00      	cmp	r3, #0
10060228:	d174      	bne.n	10060314 <LL_Set_Extented_Advertising_Parameters+0x140>
1006022a:	0200      	lsls	r0, r0, #8
1006022c:	1808      	adds	r0, r1, r0
1006022e:	6d01      	ldr	r1, [r0, #80]	@ 0x50
10060230:	2900      	cmp	r1, #0
10060232:	9e01      	ldr	r6, [sp, #4]
10060234:	d01e      	beq.n	10060274 <LL_Set_Extented_Advertising_Parameters+0xa0>
10060236:	6d49      	ldr	r1, [r1, #84]	@ 0x54
10060238:	2900      	cmp	r1, #0
1006023a:	9e02      	ldr	r6, [sp, #8]
1006023c:	d073      	beq.n	10060326 <LL_Set_Extented_Advertising_Parameters+0x152>
1006023e:	7a09      	ldrb	r1, [r1, #8]
10060240:	2900      	cmp	r1, #0
10060242:	d070      	beq.n	10060326 <LL_Set_Extented_Advertising_Parameters+0x152>
10060244:	2133      	movs	r1, #51	@ 0x33
10060246:	420a      	tst	r2, r1
10060248:	d068      	beq.n	1006031c <LL_Set_Extented_Advertising_Parameters+0x148>
1006024a:	2612      	movs	r6, #18
1006024c:	e0a0      	b.n	10060390 <LL_Set_Extented_Advertising_Parameters+0x1bc>
1006024e:	f7ff fe05 	bl	1005fe5c <LL_Context_ReturnFree>
10060252:	28ff      	cmp	r0, #255	@ 0xff
10060254:	d060      	beq.n	10060318 <LL_Set_Extented_Advertising_Parameters+0x144>
10060256:	0200      	lsls	r0, r0, #8
10060258:	6829      	ldr	r1, [r5, #0]
1006025a:	180e      	adds	r6, r1, r0
1006025c:	7820      	ldrb	r0, [r4, #0]
1006025e:	21be      	movs	r1, #190	@ 0xbe
10060260:	5270      	strh	r0, [r6, r1]
10060262:	204c      	movs	r0, #76	@ 0x4c
10060264:	2100      	movs	r1, #0
10060266:	5431      	strb	r1, [r6, r0]
10060268:	2038      	movs	r0, #56	@ 0x38
1006026a:	5431      	strb	r1, [r6, r0]
1006026c:	63f1      	str	r1, [r6, #60]	@ 0x3c
1006026e:	6431      	str	r1, [r6, #64]	@ 0x40
10060270:	62b1      	str	r1, [r6, #40]	@ 0x28
10060272:	62f1      	str	r1, [r6, #44]	@ 0x2c
10060274:	7b20      	ldrb	r0, [r4, #12]
10060276:	21c2      	movs	r1, #194	@ 0xc2
10060278:	5470      	strb	r0, [r6, r1]
1006027a:	4637      	mov	r7, r6
1006027c:	37c2      	adds	r7, #194	@ 0xc2
1006027e:	7d60      	ldrb	r0, [r4, #21]
10060280:	7078      	strb	r0, [r7, #1]
10060282:	7da0      	ldrb	r0, [r4, #22]
10060284:	70b8      	strb	r0, [r7, #2]
10060286:	7e60      	ldrb	r0, [r4, #25]
10060288:	7138      	strb	r0, [r7, #4]
1006028a:	7f20      	ldrb	r0, [r4, #28]
1006028c:	72b8      	strb	r0, [r7, #10]
1006028e:	7e23      	ldrb	r3, [r4, #24]
10060290:	22fd      	movs	r2, #253	@ 0xfd
10060292:	4013      	ands	r3, r2
10060294:	2004      	movs	r0, #4
10060296:	2103      	movs	r1, #3
10060298:	2b01      	cmp	r3, #1
1006029a:	4603      	mov	r3, r0
1006029c:	d000      	beq.n	100602a0 <LL_Set_Extented_Advertising_Parameters+0xcc>
1006029e:	460b      	mov	r3, r1
100602a0:	7de5      	ldrb	r5, [r4, #23]
100602a2:	2d03      	cmp	r5, #3
100602a4:	d000      	beq.n	100602a8 <LL_Set_Extented_Advertising_Parameters+0xd4>
100602a6:	462b      	mov	r3, r5
100602a8:	70fb      	strb	r3, [r7, #3]
100602aa:	7ee3      	ldrb	r3, [r4, #27]
100602ac:	4013      	ands	r3, r2
100602ae:	2b01      	cmp	r3, #1
100602b0:	d000      	beq.n	100602b4 <LL_Set_Extented_Advertising_Parameters+0xe0>
100602b2:	4608      	mov	r0, r1
100602b4:	7ea1      	ldrb	r1, [r4, #26]
100602b6:	2903      	cmp	r1, #3
100602b8:	d000      	beq.n	100602bc <LL_Set_Extented_Advertising_Parameters+0xe8>
100602ba:	4608      	mov	r0, r1
100602bc:	7178      	strb	r0, [r7, #5]
100602be:	4630      	mov	r0, r6
100602c0:	30b6      	adds	r0, #182	@ 0xb6
100602c2:	f000 f86d 	bl	100603a0 <LL_eadv_update_did>
100602c6:	68a0      	ldr	r0, [r4, #8]
100602c8:	0200      	lsls	r0, r0, #8
100602ca:	2180      	movs	r1, #128	@ 0x80
100602cc:	5070      	str	r0, [r6, r1]
100602ce:	6860      	ldr	r0, [r4, #4]
100602d0:	9001      	str	r0, [sp, #4]
100602d2:	7ba0      	ldrb	r0, [r4, #14]
100602d4:	9000      	str	r0, [sp, #0]
100602d6:	7b62      	ldrb	r2, [r4, #13]
100602d8:	8863      	ldrh	r3, [r4, #2]
100602da:	7f61      	ldrb	r1, [r4, #29]
100602dc:	4635      	mov	r5, r6
100602de:	3680      	adds	r6, #128	@ 0x80
100602e0:	2000      	movs	r0, #0
100602e2:	6070      	str	r0, [r6, #4]
100602e4:	9002      	str	r0, [sp, #8]
100602e6:	60b0      	str	r0, [r6, #8]
100602e8:	72f9      	strb	r1, [r7, #11]
100602ea:	8733      	strh	r3, [r6, #56]	@ 0x38
100602ec:	753a      	strb	r2, [r7, #20]
100602ee:	9800      	ldr	r0, [sp, #0]
100602f0:	7578      	strb	r0, [r7, #21]
100602f2:	9801      	ldr	r0, [sp, #4]
100602f4:	0200      	lsls	r0, r0, #8
100602f6:	67e8      	str	r0, [r5, #124]	@ 0x7c
100602f8:	7ba0      	ldrb	r0, [r4, #14]
100602fa:	7130      	strb	r0, [r6, #4]
100602fc:	4628      	mov	r0, r5
100602fe:	3085      	adds	r0, #133	@ 0x85
10060300:	340f      	adds	r4, #15
10060302:	2206      	movs	r2, #6
10060304:	4621      	mov	r1, r4
10060306:	f7e4 fb4d 	bl	100449a4 <BLEPLAT_MemCpy>
1006030a:	8f30      	ldrh	r0, [r6, #56]	@ 0x38
1006030c:	0700      	lsls	r0, r0, #28
1006030e:	d501      	bpl.n	10060314 <LL_Set_Extented_Advertising_Parameters+0x140>
10060310:	4822      	ldr	r0, [pc, #136]	@ (1006039c <__arm_cp.26_1>)
10060312:	67e8      	str	r0, [r5, #124]	@ 0x7c
10060314:	9e02      	ldr	r6, [sp, #8]
10060316:	e03b      	b.n	10060390 <LL_Set_Extented_Advertising_Parameters+0x1bc>
10060318:	2607      	movs	r6, #7
1006031a:	e039      	b.n	10060390 <LL_Set_Extented_Advertising_Parameters+0x1bc>
1006031c:	21c7      	movs	r1, #199	@ 0xc7
1006031e:	5c41      	ldrb	r1, [r0, r1]
10060320:	7ea3      	ldrb	r3, [r4, #26]
10060322:	428b      	cmp	r3, r1
10060324:	d134      	bne.n	10060390 <LL_Set_Extented_Advertising_Parameters+0x1bc>
10060326:	4639      	mov	r1, r7
10060328:	3180      	adds	r1, #128	@ 0x80
1006032a:	37c2      	adds	r7, #194	@ 0xc2
1006032c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
1006032e:	ad03      	add	r5, sp, #12
10060330:	9502      	str	r5, [sp, #8]
10060332:	85eb      	strh	r3, [r5, #46]	@ 0x2e
10060334:	870a      	strh	r2, [r1, #56]	@ 0x38
10060336:	7b22      	ldrb	r2, [r4, #12]
10060338:	703a      	strb	r2, [r7, #0]
1006033a:	7e62      	ldrb	r2, [r4, #25]
1006033c:	713a      	strb	r2, [r7, #4]
1006033e:	68a2      	ldr	r2, [r4, #8]
10060340:	0212      	lsls	r2, r2, #8
10060342:	600a      	str	r2, [r1, #0]
10060344:	7e22      	ldrb	r2, [r4, #24]
10060346:	25fd      	movs	r5, #253	@ 0xfd
10060348:	402a      	ands	r2, r5
1006034a:	2304      	movs	r3, #4
1006034c:	2103      	movs	r1, #3
1006034e:	2a01      	cmp	r2, #1
10060350:	461a      	mov	r2, r3
10060352:	d000      	beq.n	10060356 <LL_Set_Extented_Advertising_Parameters+0x182>
10060354:	460a      	mov	r2, r1
10060356:	7de6      	ldrb	r6, [r4, #23]
10060358:	2e03      	cmp	r6, #3
1006035a:	d000      	beq.n	1006035e <LL_Set_Extented_Advertising_Parameters+0x18a>
1006035c:	4632      	mov	r2, r6
1006035e:	70fa      	strb	r2, [r7, #3]
10060360:	7ee2      	ldrb	r2, [r4, #27]
10060362:	402a      	ands	r2, r5
10060364:	2a01      	cmp	r2, #1
10060366:	d000      	beq.n	1006036a <LL_Set_Extented_Advertising_Parameters+0x196>
10060368:	460b      	mov	r3, r1
1006036a:	7ea1      	ldrb	r1, [r4, #26]
1006036c:	2903      	cmp	r1, #3
1006036e:	9e01      	ldr	r6, [sp, #4]
10060370:	d000      	beq.n	10060374 <LL_Set_Extented_Advertising_Parameters+0x1a0>
10060372:	460b      	mov	r3, r1
10060374:	717b      	strb	r3, [r7, #5]
10060376:	2100      	movs	r1, #0
10060378:	9117      	str	r1, [sp, #92]	@ 0x5c
1006037a:	6861      	ldr	r1, [r4, #4]
1006037c:	0209      	lsls	r1, r1, #8
1006037e:	9122      	str	r1, [sp, #136]	@ 0x88
10060380:	8dc0      	ldrh	r0, [r0, #46]	@ 0x2e
10060382:	9902      	ldr	r1, [sp, #8]
10060384:	f7ee fd56 	bl	1004ee34 <llc_eadv_max_supported_data_check_ucfg>
10060388:	2800      	cmp	r0, #0
1006038a:	d100      	bne.n	1006038e <LL_Set_Extented_Advertising_Parameters+0x1ba>
1006038c:	e772      	b.n	10060274 <LL_Set_Extented_Advertising_Parameters+0xa0>
1006038e:	2645      	movs	r6, #69	@ 0x45
10060390:	4630      	mov	r0, r6
10060392:	b043      	add	sp, #268	@ 0x10c
10060394:	bdf0      	pop	{r4, r5, r6, r7, pc}
10060396:	46c0      	nop			@ (mov r8, r8)

10060398 <__arm_cp.26_0>:
10060398:	0000ffff 	.word	0x0000ffff

1006039c <__arm_cp.26_1>:
1006039c:	000005dc 	.word	0x000005dc

100603a0 <LL_eadv_update_did>:
100603a0:	b510      	push	{r4, lr}
100603a2:	4604      	mov	r4, r0
100603a4:	2000      	movs	r0, #0
100603a6:	f005 fa3d 	bl	10065824 <Hal_Get_Random_Number>
100603aa:	4904      	ldr	r1, [pc, #16]	@ (100603bc <__arm_cp.27_0>)
100603ac:	4001      	ands	r1, r0
100603ae:	8820      	ldrh	r0, [r4, #0]
100603b0:	1a40      	subs	r0, r0, r1
100603b2:	4242      	negs	r2, r0
100603b4:	4142      	adcs	r2, r0
100603b6:	404a      	eors	r2, r1
100603b8:	8022      	strh	r2, [r4, #0]
100603ba:	bd10      	pop	{r4, pc}

100603bc <__arm_cp.27_0>:
100603bc:	00000fff 	.word	0x00000fff

100603c0 <EADV_stop>:
100603c0:	b5b0      	push	{r4, r5, r7, lr}
100603c2:	4604      	mov	r4, r0
100603c4:	f3ef 8010 	mrs	r0, PRIMASK
100603c8:	b672      	cpsid	i
100603ca:	4625      	mov	r5, r4
100603cc:	35ce      	adds	r5, #206	@ 0xce
100603ce:	78a8      	ldrb	r0, [r5, #2]
100603d0:	f001 fff6 	bl	100623c0 <LL_sched_set_cancel_request>
100603d4:	20d1      	movs	r0, #209	@ 0xd1
100603d6:	5c20      	ldrb	r0, [r4, r0]
100603d8:	f001 fff2 	bl	100623c0 <LL_sched_set_cancel_request>
100603dc:	b662      	cpsie	i
100603de:	78a8      	ldrb	r0, [r5, #2]
100603e0:	f002 fb78 	bl	10062ad4 <LL_sched_check_and_wait_sched>
100603e4:	20ce      	movs	r0, #206	@ 0xce
100603e6:	2100      	movs	r1, #0
100603e8:	5221      	strh	r1, [r4, r0]
100603ea:	7aa8      	ldrb	r0, [r5, #10]
100603ec:	28ff      	cmp	r0, #255	@ 0xff
100603ee:	d001      	beq.n	100603f4 <EADV_stop+0x34>
100603f0:	f7f6 fe2e 	bl	10057050 <llc_conn_release_conn_idx>
100603f4:	20ff      	movs	r0, #255	@ 0xff
100603f6:	72a8      	strb	r0, [r5, #10]
100603f8:	7a28      	ldrb	r0, [r5, #8]
100603fa:	0780      	lsls	r0, r0, #30
100603fc:	d501      	bpl.n	10060402 <EADV_stop+0x42>
100603fe:	f7f8 fef7 	bl	100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>
10060402:	bdb0      	pop	{r4, r5, r7, pc}

10060404 <ADV_cancelslot>:
10060404:	21d0      	movs	r1, #208	@ 0xd0
10060406:	22ff      	movs	r2, #255	@ 0xff
10060408:	5442      	strb	r2, [r0, r1]
1006040a:	4770      	bx	lr

1006040c <ADV_skiproutine>:
1006040c:	b5f0      	push	{r4, r5, r6, r7, lr}
1006040e:	b08d      	sub	sp, #52	@ 0x34
10060410:	4607      	mov	r7, r0
10060412:	20d0      	movs	r0, #208	@ 0xd0
10060414:	5c38      	ldrb	r0, [r7, r0]
10060416:	232c      	movs	r3, #44	@ 0x2c
10060418:	4358      	muls	r0, r3
1006041a:	4a5f      	ldr	r2, [pc, #380]	@ (10060598 <__arm_cp.40_0>)
1006041c:	6812      	ldr	r2, [r2, #0]
1006041e:	1810      	adds	r0, r2, r0
10060420:	7d80      	ldrb	r0, [r0, #22]
10060422:	463c      	mov	r4, r7
10060424:	3494      	adds	r4, #148	@ 0x94
10060426:	463a      	mov	r2, r7
10060428:	32b4      	adds	r2, #180	@ 0xb4
1006042a:	9203      	str	r2, [sp, #12]
1006042c:	463a      	mov	r2, r7
1006042e:	32d6      	adds	r2, #214	@ 0xd6
10060430:	9202      	str	r2, [sp, #8]
10060432:	2814      	cmp	r0, #20
10060434:	9301      	str	r3, [sp, #4]
10060436:	d10a      	bne.n	1006044e <ADV_skiproutine+0x42>
10060438:	f7e4 fba8 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1006043c:	4605      	mov	r5, r0
1006043e:	f001 ff8d 	bl	1006235c <LL_sched_engine_return_actual_scheduler_margin>
10060442:	9b03      	ldr	r3, [sp, #12]
10060444:	1828      	adds	r0, r5, r0
10060446:	3032      	adds	r0, #50	@ 0x32
10060448:	60a0      	str	r0, [r4, #8]
1006044a:	2501      	movs	r5, #1
1006044c:	e01b      	b.n	10060486 <ADV_skiproutine+0x7a>
1006044e:	68a2      	ldr	r2, [r4, #8]
10060450:	1856      	adds	r6, r2, r1
10060452:	2500      	movs	r5, #0
10060454:	4630      	mov	r0, r6
10060456:	4611      	mov	r1, r2
10060458:	f001 ff7c 	bl	10062354 <LL_sched_time_t1_ge_t2>
1006045c:	2800      	cmp	r0, #0
1006045e:	d005      	beq.n	1006046c <ADV_skiproutine+0x60>
10060460:	6ff8      	ldr	r0, [r7, #124]	@ 0x7c
10060462:	68a1      	ldr	r1, [r4, #8]
10060464:	180a      	adds	r2, r1, r0
10060466:	60a2      	str	r2, [r4, #8]
10060468:	1c6d      	adds	r5, r5, #1
1006046a:	e7f3      	b.n	10060454 <ADV_skiproutine+0x48>
1006046c:	9b03      	ldr	r3, [sp, #12]
1006046e:	8898      	ldrh	r0, [r3, #4]
10060470:	0700      	lsls	r0, r0, #28
10060472:	d408      	bmi.n	10060486 <ADV_skiproutine+0x7a>
10060474:	2001      	movs	r0, #1
10060476:	f005 f9dc 	bl	10065832 <Hal_Get_Random_Number32>
1006047a:	9b03      	ldr	r3, [sp, #12]
1006047c:	4947      	ldr	r1, [pc, #284]	@ (1006059c <__arm_cp.40_1>)
1006047e:	4001      	ands	r1, r0
10060480:	68a0      	ldr	r0, [r4, #8]
10060482:	1840      	adds	r0, r0, r1
10060484:	60a0      	str	r0, [r4, #8]
10060486:	8898      	ldrh	r0, [r3, #4]
10060488:	2103      	movs	r1, #3
1006048a:	4001      	ands	r1, r0
1006048c:	1e48      	subs	r0, r1, #1
1006048e:	4181      	sbcs	r1, r0
10060490:	0048      	lsls	r0, r1, #1
10060492:	8018      	strh	r0, [r3, #0]
10060494:	7b98      	ldrb	r0, [r3, #14]
10060496:	2201      	movs	r2, #1
10060498:	4601      	mov	r1, r0
1006049a:	9200      	str	r2, [sp, #0]
1006049c:	4011      	ands	r1, r2
1006049e:	0782      	lsls	r2, r0, #30
100604a0:	0fd2      	lsrs	r2, r2, #31
100604a2:	1889      	adds	r1, r1, r2
100604a4:	0740      	lsls	r0, r0, #29
100604a6:	0fc0      	lsrs	r0, r0, #31
100604a8:	1808      	adds	r0, r1, r0
100604aa:	1e40      	subs	r0, r0, #1
100604ac:	7798      	strb	r0, [r3, #30]
100604ae:	4638      	mov	r0, r7
100604b0:	f000 f87a 	bl	100605a8 <UTIL_u8GetNextAdvChannel>
100604b4:	4601      	mov	r1, r0
100604b6:	9803      	ldr	r0, [sp, #12]
100604b8:	7f00      	ldrb	r0, [r0, #28]
100604ba:	f7e5 ffd4 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
100604be:	9803      	ldr	r0, [sp, #12]
100604c0:	7f00      	ldrb	r0, [r0, #28]
100604c2:	f7e6 f88f 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
100604c6:	2600      	movs	r6, #0
100604c8:	9802      	ldr	r0, [sp, #8]
100604ca:	7146      	strb	r6, [r0, #5]
100604cc:	4638      	mov	r0, r7
100604ce:	3028      	adds	r0, #40	@ 0x28
100604d0:	f7ff fb22 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
100604d4:	4638      	mov	r0, r7
100604d6:	303c      	adds	r0, #60	@ 0x3c
100604d8:	f7ff fb1e 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
100604dc:	9b03      	ldr	r3, [sp, #12]
100604de:	68a1      	ldr	r1, [r4, #8]
100604e0:	6820      	ldr	r0, [r4, #0]
100604e2:	88da      	ldrh	r2, [r3, #6]
100604e4:	2a00      	cmp	r2, #0
100604e6:	d102      	bne.n	100604ee <ADV_skiproutine+0xe2>
100604e8:	7eda      	ldrb	r2, [r3, #27]
100604ea:	2a01      	cmp	r2, #1
100604ec:	d003      	beq.n	100604f6 <ADV_skiproutine+0xea>
100604ee:	4288      	cmp	r0, r1
100604f0:	da4a      	bge.n	10060588 <ADV_skiproutine+0x17c>
100604f2:	2800      	cmp	r0, #0
100604f4:	d048      	beq.n	10060588 <ADV_skiproutine+0x17c>
100604f6:	7e98      	ldrb	r0, [r3, #26]
100604f8:	2800      	cmp	r0, #0
100604fa:	d045      	beq.n	10060588 <ADV_skiproutine+0x17c>
100604fc:	8898      	ldrh	r0, [r3, #4]
100604fe:	0700      	lsls	r0, r0, #28
10060500:	d51e      	bpl.n	10060540 <ADV_skiproutine+0x134>
10060502:	a90b      	add	r1, sp, #44	@ 0x2c
10060504:	808e      	strh	r6, [r1, #4]
10060506:	960b      	str	r6, [sp, #44]	@ 0x2c
10060508:	a804      	add	r0, sp, #16
1006050a:	9a00      	ldr	r2, [sp, #0]
1006050c:	7642      	strb	r2, [r0, #25]
1006050e:	223c      	movs	r2, #60	@ 0x3c
10060510:	7682      	strb	r2, [r0, #26]
10060512:	22ff      	movs	r2, #255	@ 0xff
10060514:	7582      	strb	r2, [r0, #22]
10060516:	81c6      	strh	r6, [r0, #14]
10060518:	4a21      	ldr	r2, [pc, #132]	@ (100605a0 <__arm_cp.40_2>)
1006051a:	8282      	strh	r2, [r0, #20]
1006051c:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
1006051e:	7a13      	ldrb	r3, [r2, #8]
10060520:	7603      	strb	r3, [r0, #24]
10060522:	8186      	strh	r6, [r0, #12]
10060524:	75c6      	strb	r6, [r0, #23]
10060526:	9105      	str	r1, [sp, #20]
10060528:	3209      	adds	r2, #9
1006052a:	9204      	str	r2, [sp, #16]
1006052c:	9608      	str	r6, [sp, #32]
1006052e:	9106      	str	r1, [sp, #24]
10060530:	f7f6 f934 	bl	1005679c <llc_conn_push_connection_complete_event>
10060534:	9802      	ldr	r0, [sp, #8]
10060536:	7800      	ldrb	r0, [r0, #0]
10060538:	0780      	lsls	r0, r0, #30
1006053a:	d501      	bpl.n	10060540 <ADV_skiproutine+0x134>
1006053c:	f7f8 fe58 	bl	100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>
10060540:	2002      	movs	r0, #2
10060542:	f7f4 fd5d 	bl	10055000 <hci_check_legacy_ext_flag>
10060546:	2801      	cmp	r0, #1
10060548:	d119      	bne.n	1006057e <ADV_skiproutine+0x172>
1006054a:	9b03      	ldr	r3, [sp, #12]
1006054c:	88da      	ldrh	r2, [r3, #6]
1006054e:	2a00      	cmp	r2, #0
10060550:	d001      	beq.n	10060556 <ADV_skiproutine+0x14a>
10060552:	203c      	movs	r0, #60	@ 0x3c
10060554:	e000      	b.n	10060558 <ADV_skiproutine+0x14c>
10060556:	2043      	movs	r0, #67	@ 0x43
10060558:	9000      	str	r0, [sp, #0]
1006055a:	4812      	ldr	r0, [pc, #72]	@ (100605a4 <__arm_cp.40_3>)
1006055c:	6800      	ldr	r0, [r0, #0]
1006055e:	9901      	ldr	r1, [sp, #4]
10060560:	5c40      	ldrb	r0, [r0, r1]
10060562:	0100      	lsls	r0, r0, #4
10060564:	43c0      	mvns	r0, r0
10060566:	4619      	mov	r1, r3
10060568:	23a1      	movs	r3, #161	@ 0xa1
1006056a:	4303      	orrs	r3, r0
1006056c:	20b1      	movs	r0, #177	@ 0xb1
1006056e:	4018      	ands	r0, r3
10060570:	7a0b      	ldrb	r3, [r1, #8]
10060572:	1a9a      	subs	r2, r3, r2
10060574:	b2d3      	uxtb	r3, r2
10060576:	7a8a      	ldrb	r2, [r1, #10]
10060578:	9900      	ldr	r1, [sp, #0]
1006057a:	f000 f85d 	bl	10060638 <hci_le_advertising_set_terminated_event_push>
1006057e:	4638      	mov	r0, r7
10060580:	f000 f894 	bl	100606ac <EADV_stop_isr>
10060584:	68a1      	ldr	r1, [r4, #8]
10060586:	9b03      	ldr	r3, [sp, #12]
10060588:	7f18      	ldrb	r0, [r3, #28]
1006058a:	f001 ff07 	bl	1006239c <LL_sched_set_anchor>
1006058e:	9802      	ldr	r0, [sp, #8]
10060590:	7146      	strb	r6, [r0, #5]
10060592:	4628      	mov	r0, r5
10060594:	b00d      	add	sp, #52	@ 0x34
10060596:	bdf0      	pop	{r4, r5, r6, r7, pc}

10060598 <__arm_cp.40_0>:
10060598:	2000089c 	.word	0x2000089c

1006059c <__arm_cp.40_1>:
1006059c:	00000fff 	.word	0x00000fff

100605a0 <__arm_cp.40_2>:
100605a0:	0000ffff 	.word	0x0000ffff

100605a4 <__arm_cp.40_3>:
100605a4:	2000083c 	.word	0x2000083c

100605a8 <UTIL_u8GetNextAdvChannel>:
100605a8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100605aa:	4604      	mov	r4, r0
100605ac:	20c2      	movs	r0, #194	@ 0xc2
100605ae:	5c27      	ldrb	r7, [r4, r0]
100605b0:	2501      	movs	r5, #1
100605b2:	403d      	ands	r5, r7
100605b4:	07ba      	lsls	r2, r7, #30
100605b6:	0fd0      	lsrs	r0, r2, #31
100605b8:	1828      	adds	r0, r5, r0
100605ba:	0779      	lsls	r1, r7, #29
100605bc:	0fc9      	lsrs	r1, r1, #31
100605be:	1840      	adds	r0, r0, r1
100605c0:	1e40      	subs	r0, r0, #1
100605c2:	b2c0      	uxtb	r0, r0
100605c4:	34c2      	adds	r4, #194	@ 0xc2
100605c6:	7c26      	ldrb	r6, [r4, #16]
100605c8:	42b0      	cmp	r0, r6
100605ca:	d10f      	bne.n	100605ec <UTIL_u8GetNextAdvChannel+0x44>
100605cc:	9201      	str	r2, [sp, #4]
100605ce:	2001      	movs	r0, #1
100605d0:	9002      	str	r0, [sp, #8]
100605d2:	f005 f927 	bl	10065824 <Hal_Get_Random_Number>
100605d6:	2e01      	cmp	r6, #1
100605d8:	d00a      	beq.n	100605f0 <UTIL_u8GetNextAdvChannel+0x48>
100605da:	2e02      	cmp	r6, #2
100605dc:	d10e      	bne.n	100605fc <UTIL_u8GetNextAdvChannel+0x54>
100605de:	b2c0      	uxtb	r0, r0
100605e0:	2106      	movs	r1, #6
100605e2:	f7df feb3 	bl	1004034c <__aeabi_uidivmod>
100605e6:	a012      	add	r0, pc, #72	@ (adr r0, 10060630 <UTIL_u8GetNextAdvChannel+0x88>)
100605e8:	5c40      	ldrb	r0, [r0, r1]
100605ea:	e012      	b.n	10060612 <UTIL_u8GetNextAdvChannel+0x6a>
100605ec:	7c60      	ldrb	r0, [r4, #17]
100605ee:	e011      	b.n	10060614 <UTIL_u8GetNextAdvChannel+0x6c>
100605f0:	9902      	ldr	r1, [sp, #8]
100605f2:	4008      	ands	r0, r1
100605f4:	2d00      	cmp	r5, #0
100605f6:	d104      	bne.n	10060602 <UTIL_u8GetNextAdvChannel+0x5a>
100605f8:	a10c      	add	r1, pc, #48	@ (adr r1, 1006062c <UTIL_u8GetNextAdvChannel+0x84>)
100605fa:	e008      	b.n	1006060e <UTIL_u8GetNextAdvChannel+0x66>
100605fc:	08b8      	lsrs	r0, r7, #2
100605fe:	1a38      	subs	r0, r7, r0
10060600:	e007      	b.n	10060612 <UTIL_u8GetNextAdvChannel+0x6a>
10060602:	9901      	ldr	r1, [sp, #4]
10060604:	2900      	cmp	r1, #0
10060606:	d401      	bmi.n	1006060c <UTIL_u8GetNextAdvChannel+0x64>
10060608:	a107      	add	r1, pc, #28	@ (adr r1, 10060628 <UTIL_u8GetNextAdvChannel+0x80>)
1006060a:	e000      	b.n	1006060e <UTIL_u8GetNextAdvChannel+0x66>
1006060c:	a105      	add	r1, pc, #20	@ (adr r1, 10060624 <UTIL_u8GetNextAdvChannel+0x7c>)
1006060e:	1808      	adds	r0, r1, r0
10060610:	7800      	ldrb	r0, [r0, #0]
10060612:	7460      	strb	r0, [r4, #17]
10060614:	0071      	lsls	r1, r6, #1
10060616:	b2c2      	uxtb	r2, r0
10060618:	40ca      	lsrs	r2, r1
1006061a:	2003      	movs	r0, #3
1006061c:	4010      	ands	r0, r2
1006061e:	3024      	adds	r0, #36	@ 0x24
10060620:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10060622:	46c0      	nop			@ (mov r8, r8)
10060624:	00000906 	.word	0x00000906
10060628:	00000d07 	.word	0x00000d07
1006062c:	00000e0b 	.word	0x00000e0b
10060630:	2d271e1b 	.word	0x2d271e1b
10060634:	00003936 	.word	0x00003936

10060638 <hci_le_advertising_set_terminated_event_push>:
10060638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006063a:	461f      	mov	r7, r3
1006063c:	4616      	mov	r6, r2
1006063e:	460d      	mov	r5, r1
10060640:	4604      	mov	r4, r0
10060642:	06c0      	lsls	r0, r0, #27
10060644:	d40b      	bmi.n	1006065e <hci_le_advertising_set_terminated_event_push+0x26>
10060646:	4817      	ldr	r0, [pc, #92]	@ (100606a4 <__arm_cp.42_0>)
10060648:	6800      	ldr	r0, [r0, #0]
1006064a:	213d      	movs	r1, #61	@ 0x3d
1006064c:	5c41      	ldrb	r1, [r0, r1]
1006064e:	0689      	lsls	r1, r1, #26
10060650:	d527      	bpl.n	100606a2 <hci_le_advertising_set_terminated_event_push+0x6a>
10060652:	303d      	adds	r0, #61	@ 0x3d
10060654:	7ac0      	ldrb	r0, [r0, #11]
10060656:	0780      	lsls	r0, r0, #30
10060658:	d523      	bpl.n	100606a2 <hci_le_advertising_set_terminated_event_push+0x6a>
1006065a:	221f      	movs	r2, #31
1006065c:	e002      	b.n	10060664 <hci_le_advertising_set_terminated_event_push+0x2c>
1006065e:	20bf      	movs	r0, #191	@ 0xbf
10060660:	4004      	ands	r4, r0
10060662:	2211      	movs	r2, #17
10060664:	4810      	ldr	r0, [pc, #64]	@ (100606a8 <__arm_cp.42_1>)
10060666:	6800      	ldr	r0, [r0, #0]
10060668:	0761      	lsls	r1, r4, #29
1006066a:	0ec9      	lsrs	r1, r1, #27
1006066c:	1840      	adds	r0, r0, r1
1006066e:	6900      	ldr	r0, [r0, #16]
10060670:	2303      	movs	r3, #3
10060672:	4621      	mov	r1, r4
10060674:	f7ef fe44 	bl	10050300 <aci_event_fifo_push_header>
10060678:	2800      	cmp	r0, #0
1006067a:	d012      	beq.n	100606a2 <hci_le_advertising_set_terminated_event_push+0x6a>
1006067c:	4601      	mov	r1, r0
1006067e:	200f      	movs	r0, #15
10060680:	72c8      	strb	r0, [r1, #11]
10060682:	20ff      	movs	r0, #255	@ 0xff
10060684:	7288      	strb	r0, [r1, #10]
10060686:	730f      	strb	r7, [r1, #12]
10060688:	724e      	strb	r6, [r1, #9]
1006068a:	720d      	strb	r5, [r1, #8]
1006068c:	2012      	movs	r0, #18
1006068e:	71c8      	strb	r0, [r1, #7]
10060690:	2006      	movs	r0, #6
10060692:	7188      	strb	r0, [r1, #6]
10060694:	203e      	movs	r0, #62	@ 0x3e
10060696:	7148      	strb	r0, [r1, #5]
10060698:	2004      	movs	r0, #4
1006069a:	7108      	strb	r0, [r1, #4]
1006069c:	4620      	mov	r0, r4
1006069e:	f7ef fecc 	bl	1005043a <aci_event_fifo_push>
100606a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100606a4 <__arm_cp.42_0>:
100606a4:	20000894 	.word	0x20000894

100606a8 <__arm_cp.42_1>:
100606a8:	20000840 	.word	0x20000840

100606ac <EADV_stop_isr>:
100606ac:	b5b0      	push	{r4, r5, r7, lr}
100606ae:	4604      	mov	r4, r0
100606b0:	20d1      	movs	r0, #209	@ 0xd1
100606b2:	5c20      	ldrb	r0, [r4, r0]
100606b4:	f001 fe84 	bl	100623c0 <LL_sched_set_cancel_request>
100606b8:	4625      	mov	r5, r4
100606ba:	35ce      	adds	r5, #206	@ 0xce
100606bc:	78a8      	ldrb	r0, [r5, #2]
100606be:	f001 fe7f 	bl	100623c0 <LL_sched_set_cancel_request>
100606c2:	20ce      	movs	r0, #206	@ 0xce
100606c4:	2100      	movs	r1, #0
100606c6:	5221      	strh	r1, [r4, r0]
100606c8:	7aa8      	ldrb	r0, [r5, #10]
100606ca:	28ff      	cmp	r0, #255	@ 0xff
100606cc:	d001      	beq.n	100606d2 <EADV_stop_isr+0x26>
100606ce:	f7f6 fcbf 	bl	10057050 <llc_conn_release_conn_idx>
100606d2:	20ff      	movs	r0, #255	@ 0xff
100606d4:	72a8      	strb	r0, [r5, #10]
100606d6:	bdb0      	pop	{r4, r5, r7, pc}

100606d8 <ADV_createslot>:
100606d8:	b570      	push	{r4, r5, r6, lr}
100606da:	4604      	mov	r4, r0
100606dc:	20c5      	movs	r0, #197	@ 0xc5
100606de:	5c20      	ldrb	r0, [r4, r0]
100606e0:	f7fc fa78 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
100606e4:	4605      	mov	r5, r0
100606e6:	4626      	mov	r6, r4
100606e8:	36c5      	adds	r6, #197	@ 0xc5
100606ea:	7af0      	ldrb	r0, [r6, #11]
100606ec:	4629      	mov	r1, r5
100606ee:	f7e5 ff9a 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
100606f2:	7af0      	ldrb	r0, [r6, #11]
100606f4:	4629      	mov	r1, r5
100606f6:	f7e5 ff2a 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
100606fa:	f7e5 fa67 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
100606fe:	f001 fdc3 	bl	10062288 <LL_get_tx_common_buffer_p>
10060702:	4602      	mov	r2, r0
10060704:	7db0      	ldrb	r0, [r6, #22]
10060706:	4621      	mov	r1, r4
10060708:	f000 f801 	bl	1006070e <EADV_vPrepareAdvOrRspLegacyPacket>
1006070c:	bd70      	pop	{r4, r5, r6, pc}

1006070e <EADV_vPrepareAdvOrRspLegacyPacket>:
1006070e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10060710:	4614      	mov	r4, r2
10060712:	460d      	mov	r5, r1
10060714:	4606      	mov	r6, r0
10060716:	460f      	mov	r7, r1
10060718:	37b8      	adds	r7, #184	@ 0xb8
1006071a:	2004      	movs	r0, #4
1006071c:	2e00      	cmp	r6, #0
1006071e:	4601      	mov	r1, r0
10060720:	d10d      	bne.n	1006073e <EADV_vPrepareAdvOrRspLegacyPacket+0x30>
10060722:	8839      	ldrh	r1, [r7, #0]
10060724:	074a      	lsls	r2, r1, #29
10060726:	d407      	bmi.n	10060738 <EADV_vPrepareAdvOrRspLegacyPacket+0x2a>
10060728:	2203      	movs	r2, #3
1006072a:	4011      	ands	r1, r2
1006072c:	424a      	negs	r2, r1
1006072e:	414a      	adcs	r2, r1
10060730:	2902      	cmp	r1, #2
10060732:	d003      	beq.n	1006073c <EADV_vPrepareAdvOrRspLegacyPacket+0x2e>
10060734:	0051      	lsls	r1, r2, #1
10060736:	e002      	b.n	1006073e <EADV_vPrepareAdvOrRspLegacyPacket+0x30>
10060738:	2101      	movs	r1, #1
1006073a:	e000      	b.n	1006073e <EADV_vPrepareAdvOrRspLegacyPacket+0x30>
1006073c:	2106      	movs	r1, #6
1006073e:	7021      	strb	r1, [r4, #0]
10060740:	2e00      	cmp	r6, #0
10060742:	d107      	bne.n	10060754 <EADV_vPrepareAdvOrRspLegacyPacket+0x46>
10060744:	8839      	ldrh	r1, [r7, #0]
10060746:	4001      	ands	r1, r0
10060748:	d104      	bne.n	10060754 <EADV_vPrepareAdvOrRspLegacyPacket+0x46>
1006074a:	202e      	movs	r0, #46	@ 0x2e
1006074c:	5c28      	ldrb	r0, [r5, r0]
1006074e:	1d80      	adds	r0, r0, #6
10060750:	7060      	strb	r0, [r4, #1]
10060752:	e00f      	b.n	10060774 <EADV_vPrepareAdvOrRspLegacyPacket+0x66>
10060754:	2e00      	cmp	r6, #0
10060756:	d004      	beq.n	10060762 <EADV_vPrepareAdvOrRspLegacyPacket+0x54>
10060758:	4628      	mov	r0, r5
1006075a:	3042      	adds	r0, #66	@ 0x42
1006075c:	7800      	ldrb	r0, [r0, #0]
1006075e:	1d80      	adds	r0, r0, #6
10060760:	e000      	b.n	10060764 <EADV_vPrepareAdvOrRspLegacyPacket+0x56>
10060762:	200c      	movs	r0, #12
10060764:	7060      	strb	r0, [r4, #1]
10060766:	4620      	mov	r0, r4
10060768:	3008      	adds	r0, #8
1006076a:	6f69      	ldr	r1, [r5, #116]	@ 0x74
1006076c:	3109      	adds	r1, #9
1006076e:	2206      	movs	r2, #6
10060770:	f7e4 f918 	bl	100449a4 <BLEPLAT_MemCpy>
10060774:	6f69      	ldr	r1, [r5, #116]	@ 0x74
10060776:	1ca0      	adds	r0, r4, #2
10060778:	1c49      	adds	r1, r1, #1
1006077a:	2206      	movs	r2, #6
1006077c:	f7e4 f912 	bl	100449a4 <BLEPLAT_MemCpy>
10060780:	7820      	ldrb	r0, [r4, #0]
10060782:	212f      	movs	r1, #47	@ 0x2f
10060784:	4001      	ands	r1, r0
10060786:	7021      	strb	r1, [r4, #0]
10060788:	6f68      	ldr	r0, [r5, #116]	@ 0x74
1006078a:	7800      	ldrb	r0, [r0, #0]
1006078c:	07c0      	lsls	r0, r0, #31
1006078e:	0e40      	lsrs	r0, r0, #25
10060790:	1840      	adds	r0, r0, r1
10060792:	7020      	strb	r0, [r4, #0]
10060794:	6f69      	ldr	r1, [r5, #116]	@ 0x74
10060796:	7a09      	ldrb	r1, [r1, #8]
10060798:	01c9      	lsls	r1, r1, #7
1006079a:	1808      	adds	r0, r1, r0
1006079c:	7020      	strb	r0, [r4, #0]
1006079e:	f001 f847 	bl	10061830 <llc_get_channel_sel_algo2_enabled>
100607a2:	7821      	ldrb	r1, [r4, #0]
100607a4:	0140      	lsls	r0, r0, #5
100607a6:	4308      	orrs	r0, r1
100607a8:	7020      	strb	r0, [r4, #0]
100607aa:	4271      	negs	r1, r6
100607ac:	4171      	adcs	r1, r6
100607ae:	8838      	ldrh	r0, [r7, #0]
100607b0:	2204      	movs	r2, #4
100607b2:	4002      	ands	r2, r0
100607b4:	0890      	lsrs	r0, r2, #2
100607b6:	4008      	ands	r0, r1
100607b8:	d101      	bne.n	100607be <EADV_vPrepareAdvOrRspLegacyPacket+0xb0>
100607ba:	2708      	movs	r7, #8
100607bc:	e000      	b.n	100607c0 <EADV_vPrepareAdvOrRspLegacyPacket+0xb2>
100607be:	270e      	movs	r7, #14
100607c0:	2800      	cmp	r0, #0
100607c2:	d001      	beq.n	100607c8 <EADV_vPrepareAdvOrRspLegacyPacket+0xba>
100607c4:	200c      	movs	r0, #12
100607c6:	e011      	b.n	100607ec <EADV_vPrepareAdvOrRspLegacyPacket+0xde>
100607c8:	2e00      	cmp	r6, #0
100607ca:	d001      	beq.n	100607d0 <EADV_vPrepareAdvOrRspLegacyPacket+0xc2>
100607cc:	203c      	movs	r0, #60	@ 0x3c
100607ce:	e000      	b.n	100607d2 <EADV_vPrepareAdvOrRspLegacyPacket+0xc4>
100607d0:	2028      	movs	r0, #40	@ 0x28
100607d2:	5829      	ldr	r1, [r5, r0]
100607d4:	2e00      	cmp	r6, #0
100607d6:	d001      	beq.n	100607dc <EADV_vPrepareAdvOrRspLegacyPacket+0xce>
100607d8:	2042      	movs	r0, #66	@ 0x42
100607da:	e000      	b.n	100607de <EADV_vPrepareAdvOrRspLegacyPacket+0xd0>
100607dc:	202e      	movs	r0, #46	@ 0x2e
100607de:	5a2d      	ldrh	r5, [r5, r0]
100607e0:	19e0      	adds	r0, r4, r7
100607e2:	462a      	mov	r2, r5
100607e4:	f7e4 f8de 	bl	100449a4 <BLEPLAT_MemCpy>
100607e8:	1978      	adds	r0, r7, r5
100607ea:	1e80      	subs	r0, r0, #2
100607ec:	7060      	strb	r0, [r4, #1]
100607ee:	2000      	movs	r0, #0
100607f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

100607f4 <ADV_ISR_connect_request_received>:
100607f4:	b5f0      	push	{r4, r5, r6, r7, lr}
100607f6:	b085      	sub	sp, #20
100607f8:	4616      	mov	r6, r2
100607fa:	460d      	mov	r5, r1
100607fc:	4604      	mov	r4, r0
100607fe:	f7e5 fac5 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
10060802:	f7e4 fa04 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10060806:	2003      	movs	r0, #3
10060808:	43c0      	mvns	r0, r0
1006080a:	1cc1      	adds	r1, r0, #3
1006080c:	4668      	mov	r0, sp
1006080e:	8101      	strh	r1, [r0, #8]
10060810:	2101      	movs	r1, #1
10060812:	8201      	strh	r1, [r0, #16]
10060814:	7341      	strb	r1, [r0, #13]
10060816:	21be      	movs	r1, #190	@ 0xbe
10060818:	5a61      	ldrh	r1, [r4, r1]
1006081a:	7281      	strb	r1, [r0, #10]
1006081c:	4627      	mov	r7, r4
1006081e:	37be      	adds	r7, #190	@ 0xbe
10060820:	7eba      	ldrb	r2, [r7, #26]
10060822:	72c2      	strb	r2, [r0, #11]
10060824:	7cba      	ldrb	r2, [r7, #18]
10060826:	7382      	strb	r2, [r0, #14]
10060828:	4a0e      	ldr	r2, [pc, #56]	@ (10060864 <__arm_cp.47_0>)
1006082a:	1a89      	subs	r1, r1, r2
1006082c:	1e4a      	subs	r2, r1, #1
1006082e:	4191      	sbcs	r1, r2
10060830:	73c1      	strb	r1, [r0, #15]
10060832:	7301      	strb	r1, [r0, #12]
10060834:	9601      	str	r6, [sp, #4]
10060836:	9500      	str	r5, [sp, #0]
10060838:	f7f6 fc1e 	bl	10057078 <llc_conn_go_to_connect>
1006083c:	4620      	mov	r0, r4
1006083e:	3028      	adds	r0, #40	@ 0x28
10060840:	f7ff f96a 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
10060844:	343c      	adds	r4, #60	@ 0x3c
10060846:	4620      	mov	r0, r4
10060848:	f7ff f966 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
1006084c:	2000      	movs	r0, #0
1006084e:	7438      	strb	r0, [r7, #16]
10060850:	7cb8      	ldrb	r0, [r7, #18]
10060852:	f001 fe25 	bl	100624a0 <LL_sched_engine>
10060856:	7e38      	ldrb	r0, [r7, #24]
10060858:	0780      	lsls	r0, r0, #30
1006085a:	d501      	bpl.n	10060860 <ADV_ISR_connect_request_received+0x6c>
1006085c:	f7f8 fcc8 	bl	100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>
10060860:	b005      	add	sp, #20
10060862:	bdf0      	pop	{r4, r5, r6, r7, pc}

10060864 <__arm_cp.47_0>:
10060864:	0000fffc 	.word	0x0000fffc

10060868 <ADV_ISR>:
10060868:	b5f0      	push	{r4, r5, r6, r7, lr}
1006086a:	b08d      	sub	sp, #52	@ 0x34
1006086c:	4605      	mov	r5, r0
1006086e:	f001 fd13 	bl	10062298 <LL_get_rx_common_buffer_p>
10060872:	9005      	str	r0, [sp, #20]
10060874:	4c85      	ldr	r4, [pc, #532]	@ (10060a8c <__arm_cp.48_0>)
10060876:	6820      	ldr	r0, [r4, #0]
10060878:	f7e5 fa41 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
1006087c:	4606      	mov	r6, r0
1006087e:	6820      	ldr	r0, [r4, #0]
10060880:	f7e5 fa54 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
10060884:	4607      	mov	r7, r0
10060886:	20d0      	movs	r0, #208	@ 0xd0
10060888:	5c28      	ldrb	r0, [r5, r0]
1006088a:	212c      	movs	r1, #44	@ 0x2c
1006088c:	4341      	muls	r1, r0
1006088e:	4a80      	ldr	r2, [pc, #512]	@ (10060a90 <__arm_cp.48_1>)
10060890:	6812      	ldr	r2, [r2, #0]
10060892:	1851      	adds	r1, r2, r1
10060894:	7d89      	ldrb	r1, [r1, #22]
10060896:	2914      	cmp	r1, #20
10060898:	d103      	bne.n	100608a2 <ADV_ISR+0x3a>
1006089a:	210a      	movs	r1, #10
1006089c:	2203      	movs	r2, #3
1006089e:	f001 ffc5 	bl	1006282c <LL_sched_set_priority>
100608a2:	462c      	mov	r4, r5
100608a4:	34b4      	adds	r4, #180	@ 0xb4
100608a6:	4628      	mov	r0, r5
100608a8:	30db      	adds	r0, #219	@ 0xdb
100608aa:	9004      	str	r0, [sp, #16]
100608ac:	2e00      	cmp	r6, #0
100608ae:	d038      	beq.n	10060922 <ADV_ISR+0xba>
100608b0:	9506      	str	r5, [sp, #24]
100608b2:	2700      	movs	r7, #0
100608b4:	970c      	str	r7, [sp, #48]	@ 0x30
100608b6:	970b      	str	r7, [sp, #44]	@ 0x2c
100608b8:	9d05      	ldr	r5, [sp, #20]
100608ba:	7828      	ldrb	r0, [r5, #0]
100608bc:	09c0      	lsrs	r0, r0, #7
100608be:	a90b      	add	r1, sp, #44	@ 0x2c
100608c0:	7008      	strb	r0, [r1, #0]
100608c2:	4874      	ldr	r0, [pc, #464]	@ (10060a94 <__arm_cp.48_2>)
100608c4:	6800      	ldr	r0, [r0, #0]
100608c6:	22d8      	movs	r2, #216	@ 0xd8
100608c8:	5c80      	ldrb	r0, [r0, r2]
100608ca:	9003      	str	r0, [sp, #12]
100608cc:	1c48      	adds	r0, r1, #1
100608ce:	4629      	mov	r1, r5
100608d0:	3108      	adds	r1, #8
100608d2:	2606      	movs	r6, #6
100608d4:	4632      	mov	r2, r6
100608d6:	f7e4 f865 	bl	100449a4 <BLEPLAT_MemCpy>
100608da:	970a      	str	r7, [sp, #40]	@ 0x28
100608dc:	9709      	str	r7, [sp, #36]	@ 0x24
100608de:	7828      	ldrb	r0, [r5, #0]
100608e0:	0640      	lsls	r0, r0, #25
100608e2:	0fc0      	lsrs	r0, r0, #31
100608e4:	a909      	add	r1, sp, #36	@ 0x24
100608e6:	7008      	strb	r0, [r1, #0]
100608e8:	1c48      	adds	r0, r1, #1
100608ea:	1ca9      	adds	r1, r5, #2
100608ec:	4632      	mov	r2, r6
100608ee:	f7e4 f859 	bl	100449a4 <BLEPLAT_MemCpy>
100608f2:	7828      	ldrb	r0, [r5, #0]
100608f4:	260f      	movs	r6, #15
100608f6:	4006      	ands	r6, r0
100608f8:	2e05      	cmp	r6, #5
100608fa:	d101      	bne.n	10060900 <ADV_ISR+0x98>
100608fc:	f7e4 f987 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10060900:	7be3      	ldrb	r3, [r4, #15]
10060902:	7922      	ldrb	r2, [r4, #4]
10060904:	9702      	str	r7, [sp, #8]
10060906:	ad07      	add	r5, sp, #28
10060908:	9501      	str	r5, [sp, #4]
1006090a:	9806      	ldr	r0, [sp, #24]
1006090c:	3084      	adds	r0, #132	@ 0x84
1006090e:	9000      	str	r0, [sp, #0]
10060910:	a809      	add	r0, sp, #36	@ 0x24
10060912:	4631      	mov	r1, r6
10060914:	f008 fb8c 	bl	10069030 <llc_check_sreq_or_creq_tx_addr_ucfg_weak>
10060918:	0841      	lsrs	r1, r0, #1
1006091a:	297e      	cmp	r1, #126	@ 0x7e
1006091c:	d807      	bhi.n	1006092e <ADV_ISR+0xc6>
1006091e:	4601      	mov	r1, r0
10060920:	e006      	b.n	10060930 <ADV_ISR+0xc8>
10060922:	2601      	movs	r6, #1
10060924:	2f00      	cmp	r7, #0
10060926:	d14f      	bne.n	100609c8 <ADV_ISR+0x160>
10060928:	2700      	movs	r7, #0
1006092a:	8027      	strh	r7, [r4, #0]
1006092c:	e051      	b.n	100609d2 <ADV_ISR+0x16a>
1006092e:	2101      	movs	r1, #1
10060930:	7029      	strb	r1, [r5, #0]
10060932:	9d06      	ldr	r5, [sp, #24]
10060934:	6f69      	ldr	r1, [r5, #116]	@ 0x74
10060936:	680a      	ldr	r2, [r1, #0]
10060938:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1006093a:	429a      	cmp	r2, r3
1006093c:	d12d      	bne.n	1006099a <ADV_ISR+0x132>
1006093e:	6849      	ldr	r1, [r1, #4]
10060940:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060942:	4291      	cmp	r1, r2
10060944:	d129      	bne.n	1006099a <ADV_ISR+0x132>
10060946:	4607      	mov	r7, r0
10060948:	3fff      	subs	r7, #255	@ 0xff
1006094a:	1e79      	subs	r1, r7, #1
1006094c:	418f      	sbcs	r7, r1
1006094e:	2e03      	cmp	r6, #3
10060950:	d123      	bne.n	1006099a <ADV_ISR+0x132>
10060952:	28ff      	cmp	r0, #255	@ 0xff
10060954:	d021      	beq.n	1006099a <ADV_ISR+0x132>
10060956:	88a0      	ldrh	r0, [r4, #4]
10060958:	2701      	movs	r7, #1
1006095a:	0780      	lsls	r0, r0, #30
1006095c:	d51d      	bpl.n	1006099a <ADV_ISR+0x132>
1006095e:	9803      	ldr	r0, [sp, #12]
10060960:	2801      	cmp	r0, #1
10060962:	d11a      	bne.n	1006099a <ADV_ISR+0x132>
10060964:	4628      	mov	r0, r5
10060966:	f7e5 fa11 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
1006096a:	7e60      	ldrb	r0, [r4, #25]
1006096c:	2801      	cmp	r0, #1
1006096e:	d109      	bne.n	10060984 <ADV_ISR+0x11c>
10060970:	8960      	ldrh	r0, [r4, #10]
10060972:	4949      	ldr	r1, [pc, #292]	@ (10060a98 <__arm_cp.48_3>)
10060974:	4288      	cmp	r0, r1
10060976:	d005      	beq.n	10060984 <ADV_ISR+0x11c>
10060978:	aa07      	add	r2, sp, #28
1006097a:	7811      	ldrb	r1, [r2, #0]
1006097c:	b2c0      	uxtb	r0, r0
1006097e:	1c52      	adds	r2, r2, #1
10060980:	f000 f88e 	bl	10060aa0 <hci_le_scan_request_received_event_push>
10060984:	7f20      	ldrb	r0, [r4, #28]
10060986:	f7e5 fe2d 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
1006098a:	2001      	movs	r0, #1
1006098c:	9904      	ldr	r1, [sp, #16]
1006098e:	7008      	strb	r0, [r1, #0]
10060990:	4628      	mov	r0, r5
10060992:	f7ff fea1 	bl	100606d8 <ADV_createslot>
10060996:	2600      	movs	r6, #0
10060998:	e01b      	b.n	100609d2 <ADV_ISR+0x16a>
1006099a:	88a0      	ldrh	r0, [r4, #4]
1006099c:	07c0      	lsls	r0, r0, #31
1006099e:	d015      	beq.n	100609cc <ADV_ISR+0x164>
100609a0:	2e05      	cmp	r6, #5
100609a2:	d113      	bne.n	100609cc <ADV_ISR+0x164>
100609a4:	9908      	ldr	r1, [sp, #32]
100609a6:	9807      	ldr	r0, [sp, #28]
100609a8:	f7f5 fe98 	bl	100566dc <llc_conn_list_search_address>
100609ac:	4241      	negs	r1, r0
100609ae:	4141      	adcs	r1, r0
100609b0:	4039      	ands	r1, r7
100609b2:	2901      	cmp	r1, #1
100609b4:	d10a      	bne.n	100609cc <ADV_ISR+0x164>
100609b6:	9803      	ldr	r0, [sp, #12]
100609b8:	2801      	cmp	r0, #1
100609ba:	d107      	bne.n	100609cc <ADV_ISR+0x164>
100609bc:	aa07      	add	r2, sp, #28
100609be:	4628      	mov	r0, r5
100609c0:	9905      	ldr	r1, [sp, #20]
100609c2:	f7ee f9ff 	bl	1004edc4 <ADV_ISR_connect_request_received_ucfg>
100609c6:	2601      	movs	r6, #1
100609c8:	2700      	movs	r7, #0
100609ca:	e002      	b.n	100609d2 <ADV_ISR+0x16a>
100609cc:	2700      	movs	r7, #0
100609ce:	8027      	strh	r7, [r4, #0]
100609d0:	2601      	movs	r6, #1
100609d2:	8821      	ldrh	r1, [r4, #0]
100609d4:	7fa0      	ldrb	r0, [r4, #30]
100609d6:	2800      	cmp	r0, #0
100609d8:	d022      	beq.n	10060a20 <ADV_ISR+0x1b8>
100609da:	2900      	cmp	r1, #0
100609dc:	d122      	bne.n	10060a24 <ADV_ISR+0x1bc>
100609de:	1e40      	subs	r0, r0, #1
100609e0:	77a0      	strb	r0, [r4, #30]
100609e2:	88a0      	ldrh	r0, [r4, #4]
100609e4:	2103      	movs	r1, #3
100609e6:	4001      	ands	r1, r0
100609e8:	1e48      	subs	r0, r1, #1
100609ea:	4181      	sbcs	r1, r0
100609ec:	0048      	lsls	r0, r1, #1
100609ee:	8020      	strh	r0, [r4, #0]
100609f0:	4628      	mov	r0, r5
100609f2:	f7ff fdd9 	bl	100605a8 <UTIL_u8GetNextAdvChannel>
100609f6:	4601      	mov	r1, r0
100609f8:	7f20      	ldrb	r0, [r4, #28]
100609fa:	f7e5 fd34 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
100609fe:	7f20      	ldrb	r0, [r4, #28]
10060a00:	f7e5 fdf0 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
10060a04:	4628      	mov	r0, r5
10060a06:	f7e5 fab5 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10060a0a:	f7e4 f900 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10060a0e:	2000      	movs	r0, #0
10060a10:	9904      	ldr	r1, [sp, #16]
10060a12:	7008      	strb	r0, [r1, #0]
10060a14:	4628      	mov	r0, r5
10060a16:	f7ff fe5f 	bl	100606d8 <ADV_createslot>
10060a1a:	f7e4 f910 	bl	10044c3e <BLEPLAT_SetRadioCloseTimeout>
10060a1e:	e02a      	b.n	10060a76 <ADV_ISR+0x20e>
10060a20:	2900      	cmp	r1, #0
10060a22:	d019      	beq.n	10060a58 <ADV_ISR+0x1f0>
10060a24:	4819      	ldr	r0, [pc, #100]	@ (10060a8c <__arm_cp.48_0>)
10060a26:	6800      	ldr	r0, [r0, #0]
10060a28:	f7e5 f980 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
10060a2c:	2800      	cmp	r0, #0
10060a2e:	d022      	beq.n	10060a76 <ADV_ISR+0x20e>
10060a30:	4628      	mov	r0, r5
10060a32:	f7e5 fa9f 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10060a36:	7c60      	ldrb	r0, [r4, #17]
10060a38:	2801      	cmp	r0, #1
10060a3a:	d001      	beq.n	10060a40 <ADV_ISR+0x1d8>
10060a3c:	4917      	ldr	r1, [pc, #92]	@ (10060a9c <__arm_cp.48_4>)
10060a3e:	e000      	b.n	10060a42 <ADV_ISR+0x1da>
10060a40:	2146      	movs	r1, #70	@ 0x46
10060a42:	3514      	adds	r5, #20
10060a44:	4628      	mov	r0, r5
10060a46:	f7e5 faf6 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
10060a4a:	8820      	ldrh	r0, [r4, #0]
10060a4c:	1e40      	subs	r0, r0, #1
10060a4e:	8020      	strh	r0, [r4, #0]
10060a50:	f7e5 f8bc 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10060a54:	2600      	movs	r6, #0
10060a56:	e00e      	b.n	10060a76 <ADV_ISR+0x20e>
10060a58:	f7e4 f8d9 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10060a5c:	4628      	mov	r0, r5
10060a5e:	f7e5 fa89 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10060a62:	88e0      	ldrh	r0, [r4, #6]
10060a64:	1e40      	subs	r0, r0, #1
10060a66:	80e0      	strh	r0, [r4, #6]
10060a68:	2100      	movs	r1, #0
10060a6a:	4628      	mov	r0, r5
10060a6c:	f7ff fcce 	bl	1006040c <ADV_skiproutine>
10060a70:	7f20      	ldrb	r0, [r4, #28]
10060a72:	f001 fd15 	bl	100624a0 <LL_sched_engine>
10060a76:	2f00      	cmp	r7, #0
10060a78:	d002      	beq.n	10060a80 <ADV_ISR+0x218>
10060a7a:	8820      	ldrh	r0, [r4, #0]
10060a7c:	1e40      	subs	r0, r0, #1
10060a7e:	8020      	strh	r0, [r4, #0]
10060a80:	f7ef fc3b 	bl	100502fa <log_notify_us_flush_ucfg_weak>
10060a84:	4630      	mov	r0, r6
10060a86:	b00d      	add	sp, #52	@ 0x34
10060a88:	bdf0      	pop	{r4, r5, r6, r7, pc}
10060a8a:	46c0      	nop			@ (mov r8, r8)

10060a8c <__arm_cp.48_0>:
10060a8c:	20000890 	.word	0x20000890

10060a90 <__arm_cp.48_1>:
10060a90:	2000089c 	.word	0x2000089c

10060a94 <__arm_cp.48_2>:
10060a94:	20000894 	.word	0x20000894

10060a98 <__arm_cp.48_3>:
10060a98:	0000fffc 	.word	0x0000fffc

10060a9c <__arm_cp.48_4>:
10060a9c:	000002ee 	.word	0x000002ee

10060aa0 <hci_le_scan_request_received_event_push>:
10060aa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10060aa2:	460e      	mov	r6, r1
10060aa4:	4605      	mov	r5, r0
10060aa6:	4815      	ldr	r0, [pc, #84]	@ (10060afc <__arm_cp.49_0>)
10060aa8:	6800      	ldr	r0, [r0, #0]
10060aaa:	213d      	movs	r1, #61	@ 0x3d
10060aac:	5c41      	ldrb	r1, [r0, r1]
10060aae:	0689      	lsls	r1, r1, #26
10060ab0:	d522      	bpl.n	10060af8 <hci_le_scan_request_received_event_push+0x58>
10060ab2:	303d      	adds	r0, #61	@ 0x3d
10060ab4:	7ac0      	ldrb	r0, [r0, #11]
10060ab6:	0740      	lsls	r0, r0, #29
10060ab8:	d51e      	bpl.n	10060af8 <hci_le_scan_request_received_event_push+0x58>
10060aba:	4614      	mov	r4, r2
10060abc:	4810      	ldr	r0, [pc, #64]	@ (10060b00 <__arm_cp.49_1>)
10060abe:	6800      	ldr	r0, [r0, #0]
10060ac0:	6940      	ldr	r0, [r0, #20]
10060ac2:	21a1      	movs	r1, #161	@ 0xa1
10060ac4:	222b      	movs	r2, #43	@ 0x2b
10060ac6:	2303      	movs	r3, #3
10060ac8:	f7ef fc1a 	bl	10050300 <aci_event_fifo_push_header>
10060acc:	2800      	cmp	r0, #0
10060ace:	d013      	beq.n	10060af8 <hci_le_scan_request_received_event_push+0x58>
10060ad0:	4607      	mov	r7, r0
10060ad2:	7246      	strb	r6, [r0, #9]
10060ad4:	7205      	strb	r5, [r0, #8]
10060ad6:	300a      	adds	r0, #10
10060ad8:	2206      	movs	r2, #6
10060ada:	4621      	mov	r1, r4
10060adc:	f7e3 ff62 	bl	100449a4 <BLEPLAT_MemCpy>
10060ae0:	2013      	movs	r0, #19
10060ae2:	71f8      	strb	r0, [r7, #7]
10060ae4:	2009      	movs	r0, #9
10060ae6:	71b8      	strb	r0, [r7, #6]
10060ae8:	203e      	movs	r0, #62	@ 0x3e
10060aea:	7178      	strb	r0, [r7, #5]
10060aec:	2004      	movs	r0, #4
10060aee:	7138      	strb	r0, [r7, #4]
10060af0:	20a1      	movs	r0, #161	@ 0xa1
10060af2:	4639      	mov	r1, r7
10060af4:	f7ef fca1 	bl	1005043a <aci_event_fifo_push>
10060af8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10060afa:	46c0      	nop			@ (mov r8, r8)

10060afc <__arm_cp.49_0>:
10060afc:	20000894 	.word	0x20000894

10060b00 <__arm_cp.49_1>:
10060b00:	20000840 	.word	0x20000840

10060b04 <LL_eadv_EauxSkipRoutine>:
10060b04:	b570      	push	{r4, r5, r6, lr}
10060b06:	460e      	mov	r6, r1
10060b08:	4604      	mov	r4, r0
10060b0a:	4605      	mov	r5, r0
10060b0c:	359c      	adds	r5, #156	@ 0x9c
10060b0e:	6868      	ldr	r0, [r5, #4]
10060b10:	490d      	ldr	r1, [pc, #52]	@ (10060b48 <__arm_cp.50_0>)
10060b12:	1841      	adds	r1, r0, r1
10060b14:	4620      	mov	r0, r4
10060b16:	30d0      	adds	r0, #208	@ 0xd0
10060b18:	7840      	ldrb	r0, [r0, #1]
10060b1a:	f001 fc3f 	bl	1006239c <LL_sched_set_anchor>
10060b1e:	4620      	mov	r0, r4
10060b20:	f7ff f8ef 	bl	1005fd02 <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start>
10060b24:	1980      	adds	r0, r0, r6
10060b26:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
10060b28:	1a08      	subs	r0, r1, r0
10060b2a:	4629      	mov	r1, r5
10060b2c:	4622      	mov	r2, r4
10060b2e:	f000 f80d 	bl	10060b4c <LL_eadv_advance_anchor_time_and_state_eadv>
10060b32:	4620      	mov	r0, r4
10060b34:	f000 f850 	bl	10060bd8 <LL_eadv_deploy_new_overall_adv_event>
10060b38:	209c      	movs	r0, #156	@ 0x9c
10060b3a:	5821      	ldr	r1, [r4, r0]
10060b3c:	20d0      	movs	r0, #208	@ 0xd0
10060b3e:	5c20      	ldrb	r0, [r4, r0]
10060b40:	f001 fc2c 	bl	1006239c <LL_sched_set_anchor>
10060b44:	2001      	movs	r0, #1
10060b46:	bd70      	pop	{r4, r5, r6, pc}

10060b48 <__arm_cp.50_0>:
10060b48:	0fffffff 	.word	0x0fffffff

10060b4c <LL_eadv_advance_anchor_time_and_state_eadv>:
10060b4c:	b5f0      	push	{r4, r5, r6, r7, lr}
10060b4e:	b085      	sub	sp, #20
10060b50:	4614      	mov	r4, r2
10060b52:	9103      	str	r1, [sp, #12]
10060b54:	4617      	mov	r7, r2
10060b56:	37b4      	adds	r7, #180	@ 0xb4
10060b58:	2100      	movs	r1, #0
10060b5a:	9701      	str	r7, [sp, #4]
10060b5c:	2800      	cmp	r0, #0
10060b5e:	dc36      	bgt.n	10060bce <LL_eadv_advance_anchor_time_and_state_eadv+0x82>
10060b60:	9004      	str	r0, [sp, #16]
10060b62:	2600      	movs	r6, #0
10060b64:	5fbd      	ldrsh	r5, [r7, r6]
10060b66:	2d00      	cmp	r5, #0
10060b68:	d413      	bmi.n	10060b92 <LL_eadv_advance_anchor_time_and_state_eadv+0x46>
10060b6a:	7cb8      	ldrb	r0, [r7, #18]
10060b6c:	1b47      	subs	r7, r0, r5
10060b6e:	1cb8      	adds	r0, r7, #2
10060b70:	b280      	uxth	r0, r0
10060b72:	4621      	mov	r1, r4
10060b74:	f000 fff6 	bl	10061b64 <llc_eadv_predictable_delay>
10060b78:	9002      	str	r0, [sp, #8]
10060b7a:	1c78      	adds	r0, r7, #1
10060b7c:	b280      	uxth	r0, r0
10060b7e:	4621      	mov	r1, r4
10060b80:	f000 fff0 	bl	10061b64 <llc_eadv_predictable_delay>
10060b84:	2d00      	cmp	r5, #0
10060b86:	d00b      	beq.n	10060ba0 <LL_eadv_advance_anchor_time_and_state_eadv+0x54>
10060b88:	9902      	ldr	r1, [sp, #8]
10060b8a:	1a08      	subs	r0, r1, r0
10060b8c:	9f01      	ldr	r7, [sp, #4]
10060b8e:	9e04      	ldr	r6, [sp, #16]
10060b90:	e010      	b.n	10060bb4 <LL_eadv_advance_anchor_time_and_state_eadv+0x68>
10060b92:	2001      	movs	r0, #1
10060b94:	f004 fe4d 	bl	10065832 <Hal_Get_Random_Number32>
10060b98:	490e      	ldr	r1, [pc, #56]	@ (10060bd4 <__arm_cp.51_0>)
10060b9a:	4008      	ands	r0, r1
10060b9c:	9e04      	ldr	r6, [sp, #16]
10060b9e:	e00b      	b.n	10060bb8 <LL_eadv_advance_anchor_time_and_state_eadv+0x6c>
10060ba0:	2001      	movs	r0, #1
10060ba2:	f004 fe46 	bl	10065832 <Hal_Get_Random_Number32>
10060ba6:	9f01      	ldr	r7, [sp, #4]
10060ba8:	5fbd      	ldrsh	r5, [r7, r6]
10060baa:	490a      	ldr	r1, [pc, #40]	@ (10060bd4 <__arm_cp.51_0>)
10060bac:	4008      	ands	r0, r1
10060bae:	2d01      	cmp	r5, #1
10060bb0:	9e04      	ldr	r6, [sp, #16]
10060bb2:	db01      	blt.n	10060bb8 <LL_eadv_advance_anchor_time_and_state_eadv+0x6c>
10060bb4:	1e69      	subs	r1, r5, #1
10060bb6:	8039      	strh	r1, [r7, #0]
10060bb8:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
10060bba:	1809      	adds	r1, r1, r0
10060bbc:	9b03      	ldr	r3, [sp, #12]
10060bbe:	681a      	ldr	r2, [r3, #0]
10060bc0:	1889      	adds	r1, r1, r2
10060bc2:	6019      	str	r1, [r3, #0]
10060bc4:	1980      	adds	r0, r0, r6
10060bc6:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
10060bc8:	1840      	adds	r0, r0, r1
10060bca:	2101      	movs	r1, #1
10060bcc:	e7c6      	b.n	10060b5c <LL_eadv_advance_anchor_time_and_state_eadv+0x10>
10060bce:	b2c8      	uxtb	r0, r1
10060bd0:	b005      	add	sp, #20
10060bd2:	bdf0      	pop	{r4, r5, r6, r7, pc}

10060bd4 <__arm_cp.51_0>:
10060bd4:	00000fff 	.word	0x00000fff

10060bd8 <LL_eadv_deploy_new_overall_adv_event>:
10060bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
10060bda:	b089      	sub	sp, #36	@ 0x24
10060bdc:	4604      	mov	r4, r0
10060bde:	20d9      	movs	r0, #217	@ 0xd9
10060be0:	2500      	movs	r5, #0
10060be2:	5425      	strb	r5, [r4, r0]
10060be4:	2001      	movs	r0, #1
10060be6:	9004      	str	r0, [sp, #16]
10060be8:	f004 fe1c 	bl	10065824 <Hal_Get_Random_Number>
10060bec:	a908      	add	r1, sp, #32
10060bee:	8008      	strh	r0, [r1, #0]
10060bf0:	6d20      	ldr	r0, [r4, #80]	@ 0x50
10060bf2:	9503      	str	r5, [sp, #12]
10060bf4:	8645      	strh	r5, [r0, #50]	@ 0x32
10060bf6:	4620      	mov	r0, r4
10060bf8:	3040      	adds	r0, #64	@ 0x40
10060bfa:	9002      	str	r0, [sp, #8]
10060bfc:	4620      	mov	r0, r4
10060bfe:	3094      	adds	r0, #148	@ 0x94
10060c00:	9005      	str	r0, [sp, #20]
10060c02:	4620      	mov	r0, r4
10060c04:	30b4      	adds	r0, #180	@ 0xb4
10060c06:	9006      	str	r0, [sp, #24]
10060c08:	4620      	mov	r0, r4
10060c0a:	30d4      	adds	r0, #212	@ 0xd4
10060c0c:	9007      	str	r0, [sp, #28]
10060c0e:	2732      	movs	r7, #50	@ 0x32
10060c10:	4e32      	ldr	r6, [pc, #200]	@ (10060cdc <__arm_cp.52_0>)
10060c12:	2f52      	cmp	r7, #82	@ 0x52
10060c14:	d00a      	beq.n	10060c2c <LL_eadv_deploy_new_overall_adv_event+0x54>
10060c16:	a808      	add	r0, sp, #32
10060c18:	f001 fb8c 	bl	10062334 <wyhash16>
10060c1c:	4030      	ands	r0, r6
10060c1e:	6d21      	ldr	r1, [r4, #80]	@ 0x50
10060c20:	5bca      	ldrh	r2, [r1, r7]
10060c22:	1810      	adds	r0, r2, r0
10060c24:	19c9      	adds	r1, r1, r7
10060c26:	8048      	strh	r0, [r1, #2]
10060c28:	1cbf      	adds	r7, r7, #2
10060c2a:	e7f2      	b.n	10060c12 <LL_eadv_deploy_new_overall_adv_event+0x3a>
10060c2c:	4620      	mov	r0, r4
10060c2e:	f7ff f868 	bl	1005fd02 <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start>
10060c32:	9001      	str	r0, [sp, #4]
10060c34:	6fe5      	ldr	r5, [r4, #124]	@ 0x7c
10060c36:	9e06      	ldr	r6, [sp, #24]
10060c38:	7cb7      	ldrb	r7, [r6, #18]
10060c3a:	4638      	mov	r0, r7
10060c3c:	4621      	mov	r1, r4
10060c3e:	f000 ff91 	bl	10061b64 <llc_eadv_predictable_delay>
10060c42:	9a03      	ldr	r2, [sp, #12]
10060c44:	81b2      	strh	r2, [r6, #12]
10060c46:	1c79      	adds	r1, r7, #1
10060c48:	8031      	strh	r1, [r6, #0]
10060c4a:	2102      	movs	r1, #2
10060c4c:	9b07      	ldr	r3, [sp, #28]
10060c4e:	71d9      	strb	r1, [r3, #7]
10060c50:	85a2      	strh	r2, [r4, #44]	@ 0x2c
10060c52:	9902      	ldr	r1, [sp, #8]
10060c54:	800a      	strh	r2, [r1, #0]
10060c56:	437d      	muls	r5, r7
10060c58:	9901      	ldr	r1, [sp, #4]
10060c5a:	1949      	adds	r1, r1, r5
10060c5c:	1808      	adds	r0, r1, r0
10060c5e:	30c8      	adds	r0, #200	@ 0xc8
10060c60:	9d05      	ldr	r5, [sp, #20]
10060c62:	6068      	str	r0, [r5, #4]
10060c64:	68a9      	ldr	r1, [r5, #8]
10060c66:	1840      	adds	r0, r0, r1
10060c68:	60e8      	str	r0, [r5, #12]
10060c6a:	7bb0      	ldrb	r0, [r6, #14]
10060c6c:	9a04      	ldr	r2, [sp, #16]
10060c6e:	4002      	ands	r2, r0
10060c70:	0781      	lsls	r1, r0, #30
10060c72:	0fc9      	lsrs	r1, r1, #31
10060c74:	1851      	adds	r1, r2, r1
10060c76:	0740      	lsls	r0, r0, #29
10060c78:	0fc0      	lsrs	r0, r0, #31
10060c7a:	1808      	adds	r0, r1, r0
10060c7c:	1e40      	subs	r0, r0, #1
10060c7e:	77b0      	strb	r0, [r6, #30]
10060c80:	f000 ff7c 	bl	10061b7c <EADV_Return_Random_Channel_EAUX>
10060c84:	9907      	ldr	r1, [sp, #28]
10060c86:	7008      	strb	r0, [r1, #0]
10060c88:	88f2      	ldrh	r2, [r6, #6]
10060c8a:	68a9      	ldr	r1, [r5, #8]
10060c8c:	6828      	ldr	r0, [r5, #0]
10060c8e:	2a00      	cmp	r2, #0
10060c90:	d102      	bne.n	10060c98 <LL_eadv_deploy_new_overall_adv_event+0xc0>
10060c92:	7ef3      	ldrb	r3, [r6, #27]
10060c94:	2b01      	cmp	r3, #1
10060c96:	d003      	beq.n	10060ca0 <LL_eadv_deploy_new_overall_adv_event+0xc8>
10060c98:	4288      	cmp	r0, r1
10060c9a:	da1c      	bge.n	10060cd6 <LL_eadv_deploy_new_overall_adv_event+0xfe>
10060c9c:	2800      	cmp	r0, #0
10060c9e:	d01a      	beq.n	10060cd6 <LL_eadv_deploy_new_overall_adv_event+0xfe>
10060ca0:	7eb0      	ldrb	r0, [r6, #26]
10060ca2:	2800      	cmp	r0, #0
10060ca4:	d017      	beq.n	10060cd6 <LL_eadv_deploy_new_overall_adv_event+0xfe>
10060ca6:	2a00      	cmp	r2, #0
10060ca8:	d001      	beq.n	10060cae <LL_eadv_deploy_new_overall_adv_event+0xd6>
10060caa:	213c      	movs	r1, #60	@ 0x3c
10060cac:	e000      	b.n	10060cb0 <LL_eadv_deploy_new_overall_adv_event+0xd8>
10060cae:	2143      	movs	r1, #67	@ 0x43
10060cb0:	480b      	ldr	r0, [pc, #44]	@ (10060ce0 <__arm_cp.52_1>)
10060cb2:	6800      	ldr	r0, [r0, #0]
10060cb4:	232c      	movs	r3, #44	@ 0x2c
10060cb6:	5cc0      	ldrb	r0, [r0, r3]
10060cb8:	0100      	lsls	r0, r0, #4
10060cba:	43c0      	mvns	r0, r0
10060cbc:	23a1      	movs	r3, #161	@ 0xa1
10060cbe:	4303      	orrs	r3, r0
10060cc0:	20b1      	movs	r0, #177	@ 0xb1
10060cc2:	4018      	ands	r0, r3
10060cc4:	7a33      	ldrb	r3, [r6, #8]
10060cc6:	1a9a      	subs	r2, r3, r2
10060cc8:	b2d3      	uxtb	r3, r2
10060cca:	7ab2      	ldrb	r2, [r6, #10]
10060ccc:	f7ff fcb4 	bl	10060638 <hci_le_advertising_set_terminated_event_push>
10060cd0:	4620      	mov	r0, r4
10060cd2:	f7ff fceb 	bl	100606ac <EADV_stop_isr>
10060cd6:	b009      	add	sp, #36	@ 0x24
10060cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10060cda:	46c0      	nop			@ (mov r8, r8)

10060cdc <__arm_cp.52_0>:
10060cdc:	00000fff 	.word	0x00000fff

10060ce0 <__arm_cp.52_1>:
10060ce0:	2000083c 	.word	0x2000083c

10060ce4 <LL_eadv_EauxCreateSlot>:
10060ce4:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10060ce6:	4604      	mov	r4, r0
10060ce8:	20c7      	movs	r0, #199	@ 0xc7
10060cea:	5c20      	ldrb	r0, [r4, r0]
10060cec:	f7fb ff72 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
10060cf0:	4605      	mov	r5, r0
10060cf2:	26d1      	movs	r6, #209	@ 0xd1
10060cf4:	5da0      	ldrb	r0, [r4, r6]
10060cf6:	4629      	mov	r1, r5
10060cf8:	f7e5 fc95 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
10060cfc:	5da0      	ldrb	r0, [r4, r6]
10060cfe:	4629      	mov	r1, r5
10060d00:	f7e5 fc25 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
10060d04:	5da0      	ldrb	r0, [r4, r6]
10060d06:	f7e5 fc6d 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
10060d0a:	20d4      	movs	r0, #212	@ 0xd4
10060d0c:	5c21      	ldrb	r1, [r4, r0]
10060d0e:	5da0      	ldrb	r0, [r4, r6]
10060d10:	f7e5 fba9 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
10060d14:	f7e4 ff5a 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10060d18:	20db      	movs	r0, #219	@ 0xdb
10060d1a:	5c20      	ldrb	r0, [r4, r0]
10060d1c:	4625      	mov	r5, r4
10060d1e:	35b8      	adds	r5, #184	@ 0xb8
10060d20:	4626      	mov	r6, r4
10060d22:	36db      	adds	r6, #219	@ 0xdb
10060d24:	2806      	cmp	r0, #6
10060d26:	d001      	beq.n	10060d2c <LL_eadv_EauxCreateSlot+0x48>
10060d28:	2805      	cmp	r0, #5
10060d2a:	d102      	bne.n	10060d32 <LL_eadv_EauxCreateSlot+0x4e>
10060d2c:	4627      	mov	r7, r4
10060d2e:	373c      	adds	r7, #60	@ 0x3c
10060d30:	e001      	b.n	10060d36 <LL_eadv_EauxCreateSlot+0x52>
10060d32:	4627      	mov	r7, r4
10060d34:	3728      	adds	r7, #40	@ 0x28
10060d36:	4620      	mov	r0, r4
10060d38:	f7ed fcd5 	bl	1004e6e6 <llc_padv_check_if_syncinfo_is_included_and_start_periodic_advertising_ucfg>
10060d3c:	4602      	mov	r2, r0
10060d3e:	8829      	ldrh	r1, [r5, #0]
10060d40:	7830      	ldrb	r0, [r6, #0]
10060d42:	9400      	str	r4, [sp, #0]
10060d44:	9701      	str	r7, [sp, #4]
10060d46:	2300      	movs	r3, #0
10060d48:	f000 f801 	bl	10060d4e <llc_eadv_prepare_extended_advertising_packet>
10060d4c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10060d4e <llc_eadv_prepare_extended_advertising_packet>:
10060d4e:	b5f0      	push	{r4, r5, r6, r7, lr}
10060d50:	b093      	sub	sp, #76	@ 0x4c
10060d52:	461e      	mov	r6, r3
10060d54:	4607      	mov	r7, r0
10060d56:	a80f      	add	r0, sp, #60	@ 0x3c
10060d58:	9005      	str	r0, [sp, #20]
10060d5a:	a810      	add	r0, sp, #64	@ 0x40
10060d5c:	9004      	str	r0, [sp, #16]
10060d5e:	a811      	add	r0, sp, #68	@ 0x44
10060d60:	9003      	str	r0, [sp, #12]
10060d62:	a812      	add	r0, sp, #72	@ 0x48
10060d64:	9002      	str	r0, [sp, #8]
10060d66:	9819      	ldr	r0, [sp, #100]	@ 0x64
10060d68:	900b      	str	r0, [sp, #44]	@ 0x2c
10060d6a:	9001      	str	r0, [sp, #4]
10060d6c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
10060d6e:	9400      	str	r4, [sp, #0]
10060d70:	4638      	mov	r0, r7
10060d72:	910a      	str	r1, [sp, #40]	@ 0x28
10060d74:	f000 fd9a 	bl	100618ac <llc_eadv_get_packet_information>
10060d78:	900d      	str	r0, [sp, #52]	@ 0x34
10060d7a:	f001 fa85 	bl	10062288 <LL_get_tx_common_buffer_p>
10060d7e:	4605      	mov	r5, r0
10060d80:	2e00      	cmp	r6, #0
10060d82:	d007      	beq.n	10060d94 <llc_eadv_prepare_extended_advertising_packet+0x46>
10060d84:	a811      	add	r0, sp, #68	@ 0x44
10060d86:	7801      	ldrb	r1, [r0, #0]
10060d88:	1d2a      	adds	r2, r5, #4
10060d8a:	4620      	mov	r0, r4
10060d8c:	f7ed fcc8 	bl	1004e720 <llc_padv_prepare_periodic_advertising_payload_ucfg>
10060d90:	2600      	movs	r6, #0
10060d92:	e091      	b.n	10060eb8 <llc_eadv_prepare_extended_advertising_packet+0x16a>
10060d94:	1d28      	adds	r0, r5, #4
10060d96:	a911      	add	r1, sp, #68	@ 0x44
10060d98:	780a      	ldrb	r2, [r1, #0]
10060d9a:	07d1      	lsls	r1, r2, #31
10060d9c:	9008      	str	r0, [sp, #32]
10060d9e:	920c      	str	r2, [sp, #48]	@ 0x30
10060da0:	d102      	bne.n	10060da8 <llc_eadv_prepare_extended_advertising_packet+0x5a>
10060da2:	2600      	movs	r6, #0
10060da4:	960e      	str	r6, [sp, #56]	@ 0x38
10060da6:	e00a      	b.n	10060dbe <llc_eadv_prepare_extended_advertising_packet+0x70>
10060da8:	6f61      	ldr	r1, [r4, #116]	@ 0x74
10060daa:	1c49      	adds	r1, r1, #1
10060dac:	2206      	movs	r2, #6
10060dae:	920e      	str	r2, [sp, #56]	@ 0x38
10060db0:	f7e3 fdf8 	bl	100449a4 <BLEPLAT_MemCpy>
10060db4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060db6:	6f60      	ldr	r0, [r4, #116]	@ 0x74
10060db8:	7800      	ldrb	r0, [r0, #0]
10060dba:	07c0      	lsls	r0, r0, #31
10060dbc:	0e46      	lsrs	r6, r0, #25
10060dbe:	0790      	lsls	r0, r2, #30
10060dc0:	9409      	str	r4, [sp, #36]	@ 0x24
10060dc2:	d511      	bpl.n	10060de8 <llc_eadv_prepare_extended_advertising_packet+0x9a>
10060dc4:	9808      	ldr	r0, [sp, #32]
10060dc6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10060dc8:	1900      	adds	r0, r0, r4
10060dca:	9909      	ldr	r1, [sp, #36]	@ 0x24
10060dcc:	6f49      	ldr	r1, [r1, #116]	@ 0x74
10060dce:	3109      	adds	r1, #9
10060dd0:	2206      	movs	r2, #6
10060dd2:	f7e3 fde7 	bl	100449a4 <BLEPLAT_MemCpy>
10060dd6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060dd8:	9809      	ldr	r0, [sp, #36]	@ 0x24
10060dda:	6f40      	ldr	r0, [r0, #116]	@ 0x74
10060ddc:	7a00      	ldrb	r0, [r0, #8]
10060dde:	01c0      	lsls	r0, r0, #7
10060de0:	1986      	adds	r6, r0, r6
10060de2:	1da4      	adds	r4, r4, #6
10060de4:	940e      	str	r4, [sp, #56]	@ 0x38
10060de6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10060de8:	4623      	mov	r3, r4
10060dea:	3398      	adds	r3, #152	@ 0x98
10060dec:	4621      	mov	r1, r4
10060dee:	31c4      	adds	r1, #196	@ 0xc4
10060df0:	0710      	lsls	r0, r2, #28
10060df2:	9107      	str	r1, [sp, #28]
10060df4:	9306      	str	r3, [sp, #24]
10060df6:	d511      	bpl.n	10060e1c <llc_eadv_prepare_extended_advertising_packet+0xce>
10060df8:	7a08      	ldrb	r0, [r1, #8]
10060dfa:	8bd9      	ldrh	r1, [r3, #30]
10060dfc:	9a08      	ldr	r2, [sp, #32]
10060dfe:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10060e00:	5511      	strb	r1, [r2, r4]
10060e02:	1912      	adds	r2, r2, r4
10060e04:	230f      	movs	r3, #15
10060e06:	021b      	lsls	r3, r3, #8
10060e08:	400b      	ands	r3, r1
10060e0a:	9907      	ldr	r1, [sp, #28]
10060e0c:	0300      	lsls	r0, r0, #12
10060e0e:	18c0      	adds	r0, r0, r3
10060e10:	0a00      	lsrs	r0, r0, #8
10060e12:	7050      	strb	r0, [r2, #1]
10060e14:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060e16:	1ca4      	adds	r4, r4, #2
10060e18:	940e      	str	r4, [sp, #56]	@ 0x38
10060e1a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10060e1c:	06d0      	lsls	r0, r2, #27
10060e1e:	d516      	bpl.n	10060e4e <llc_eadv_prepare_extended_advertising_packet+0x100>
10060e20:	1ef8      	subs	r0, r7, #3
10060e22:	2803      	cmp	r0, #3
10060e24:	d805      	bhi.n	10060e32 <llc_eadv_prepare_extended_advertising_packet+0xe4>
10060e26:	f000 fea9 	bl	10061b7c <EADV_Return_Random_Channel_EAUX>
10060e2a:	9907      	ldr	r1, [sp, #28]
10060e2c:	4602      	mov	r2, r0
10060e2e:	7448      	strb	r0, [r1, #17]
10060e30:	e000      	b.n	10060e34 <llc_eadv_prepare_extended_advertising_packet+0xe6>
10060e32:	7c0a      	ldrb	r2, [r1, #16]
10060e34:	9808      	ldr	r0, [sp, #32]
10060e36:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10060e38:	1900      	adds	r0, r0, r4
10060e3a:	78cb      	ldrb	r3, [r1, #3]
10060e3c:	9906      	ldr	r1, [sp, #24]
10060e3e:	6809      	ldr	r1, [r1, #0]
10060e40:	f000 fe0d 	bl	10061a5e <llc_eadv_set_auxptr>
10060e44:	9907      	ldr	r1, [sp, #28]
10060e46:	1ce4      	adds	r4, r4, #3
10060e48:	940e      	str	r4, [sp, #56]	@ 0x38
10060e4a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060e4c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10060e4e:	0690      	lsls	r0, r2, #26
10060e50:	d51b      	bpl.n	10060e8a <llc_eadv_prepare_extended_advertising_packet+0x13c>
10060e52:	9806      	ldr	r0, [sp, #24]
10060e54:	6881      	ldr	r1, [r0, #8]
10060e56:	6d20      	ldr	r0, [r4, #80]	@ 0x50
10060e58:	6d40      	ldr	r0, [r0, #84]	@ 0x54
10060e5a:	9006      	str	r0, [sp, #24]
10060e5c:	f7ed fc50 	bl	1004e700 <llc_padv_update_sync_info_ucfg>
10060e60:	2800      	cmp	r0, #0
10060e62:	d00c      	beq.n	10060e7e <llc_eadv_prepare_extended_advertising_packet+0x130>
10060e64:	9808      	ldr	r0, [sp, #32]
10060e66:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10060e68:	1900      	adds	r0, r0, r4
10060e6a:	9906      	ldr	r1, [sp, #24]
10060e6c:	3158      	adds	r1, #88	@ 0x58
10060e6e:	2212      	movs	r2, #18
10060e70:	f7e3 fd98 	bl	100449a4 <BLEPLAT_MemCpy>
10060e74:	3412      	adds	r4, #18
10060e76:	940e      	str	r4, [sp, #56]	@ 0x38
10060e78:	9c09      	ldr	r4, [sp, #36]	@ 0x24
10060e7a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060e7c:	e004      	b.n	10060e88 <llc_eadv_prepare_extended_advertising_packet+0x13a>
10060e7e:	20df      	movs	r0, #223	@ 0xdf
10060e80:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060e82:	4002      	ands	r2, r0
10060e84:	a811      	add	r0, sp, #68	@ 0x44
10060e86:	7002      	strb	r2, [r0, #0]
10060e88:	9907      	ldr	r1, [sp, #28]
10060e8a:	0650      	lsls	r0, r2, #25
10060e8c:	d401      	bmi.n	10060e92 <llc_eadv_prepare_extended_advertising_packet+0x144>
10060e8e:	9908      	ldr	r1, [sp, #32]
10060e90:	e009      	b.n	10060ea6 <llc_eadv_prepare_extended_advertising_packet+0x158>
10060e92:	7808      	ldrb	r0, [r1, #0]
10060e94:	920c      	str	r2, [sp, #48]	@ 0x30
10060e96:	f000 ff4b 	bl	10061d30 <convert_power>
10060e9a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10060e9c:	9908      	ldr	r1, [sp, #32]
10060e9e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10060ea0:	54c8      	strb	r0, [r1, r3]
10060ea2:	1c5b      	adds	r3, r3, #1
10060ea4:	930e      	str	r3, [sp, #56]	@ 0x38
10060ea6:	b250      	sxtb	r0, r2
10060ea8:	2800      	cmp	r0, #0
10060eaa:	d505      	bpl.n	10060eb8 <llc_eadv_prepare_extended_advertising_packet+0x16a>
10060eac:	980e      	ldr	r0, [sp, #56]	@ 0x38
10060eae:	1809      	adds	r1, r1, r0
10060eb0:	6d20      	ldr	r0, [r4, #80]	@ 0x50
10060eb2:	6d40      	ldr	r0, [r0, #84]	@ 0x54
10060eb4:	f7ed fc8c 	bl	1004e7d0 <llc_padv_wr_set_acad_ucfg>
10060eb8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
10060eba:	9812      	ldr	r0, [sp, #72]	@ 0x48
10060ebc:	7068      	strb	r0, [r5, #1]
10060ebe:	2f07      	cmp	r7, #7
10060ec0:	d001      	beq.n	10060ec6 <llc_eadv_prepare_extended_advertising_packet+0x178>
10060ec2:	2007      	movs	r0, #7
10060ec4:	e000      	b.n	10060ec8 <llc_eadv_prepare_extended_advertising_packet+0x17a>
10060ec6:	2008      	movs	r0, #8
10060ec8:	4306      	orrs	r6, r0
10060eca:	702e      	strb	r6, [r5, #0]
10060ecc:	a811      	add	r0, sp, #68	@ 0x44
10060ece:	8800      	ldrh	r0, [r0, #0]
10060ed0:	217f      	movs	r1, #127	@ 0x7f
10060ed2:	4001      	ands	r1, r0
10060ed4:	70e9      	strb	r1, [r5, #3]
10060ed6:	21fe      	movs	r1, #254	@ 0xfe
10060ed8:	400f      	ands	r7, r1
10060eda:	2f02      	cmp	r7, #2
10060edc:	d001      	beq.n	10060ee2 <llc_eadv_prepare_extended_advertising_packet+0x194>
10060ede:	2100      	movs	r1, #0
10060ee0:	e001      	b.n	10060ee6 <llc_eadv_prepare_extended_advertising_packet+0x198>
10060ee2:	990a      	ldr	r1, [sp, #40]	@ 0x28
10060ee4:	0189      	lsls	r1, r1, #6
10060ee6:	aa10      	add	r2, sp, #64	@ 0x40
10060ee8:	8813      	ldrh	r3, [r2, #0]
10060eea:	223f      	movs	r2, #63	@ 0x3f
10060eec:	401a      	ands	r2, r3
10060eee:	1851      	adds	r1, r2, r1
10060ef0:	70a9      	strb	r1, [r5, #2]
10060ef2:	05c0      	lsls	r0, r0, #23
10060ef4:	d50b      	bpl.n	10060f0e <llc_eadv_prepare_extended_advertising_packet+0x1c0>
10060ef6:	a80f      	add	r0, sp, #60	@ 0x3c
10060ef8:	7802      	ldrb	r2, [r0, #0]
10060efa:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10060efc:	88b0      	ldrh	r0, [r6, #4]
10060efe:	1881      	adds	r1, r0, r2
10060f00:	80b1      	strh	r1, [r6, #4]
10060f02:	6831      	ldr	r1, [r6, #0]
10060f04:	1809      	adds	r1, r1, r0
10060f06:	1958      	adds	r0, r3, r5
10060f08:	1cc0      	adds	r0, r0, #3
10060f0a:	f7e3 fd4b 	bl	100449a4 <BLEPLAT_MemCpy>
10060f0e:	4620      	mov	r0, r4
10060f10:	b013      	add	sp, #76	@ 0x4c
10060f12:	bdf0      	pop	{r4, r5, r6, r7, pc}

10060f14 <LL_eadv_EauxCancelSlot>:
10060f14:	21d1      	movs	r1, #209	@ 0xd1
10060f16:	22ff      	movs	r2, #255	@ 0xff
10060f18:	5442      	strb	r2, [r0, r1]
10060f1a:	4770      	bx	lr

10060f1c <LL_eadv_EadvCancelSlot>:
10060f1c:	21d0      	movs	r1, #208	@ 0xd0
10060f1e:	22ff      	movs	r2, #255	@ 0xff
10060f20:	5442      	strb	r2, [r0, r1]
10060f22:	4770      	bx	lr

10060f24 <LL_eadv_EauxIsr_process_rx_timeout_or_unexpected_rx_pdu>:
10060f24:	b510      	push	{r4, lr}
10060f26:	4604      	mov	r4, r0
10060f28:	f7e3 fe71 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10060f2c:	20ba      	movs	r0, #186	@ 0xba
10060f2e:	5a21      	ldrh	r1, [r4, r0]
10060f30:	1e49      	subs	r1, r1, #1
10060f32:	5221      	strh	r1, [r4, r0]
10060f34:	20d1      	movs	r0, #209	@ 0xd1
10060f36:	5c20      	ldrb	r0, [r4, r0]
10060f38:	f001 fab2 	bl	100624a0 <LL_sched_engine>
10060f3c:	bd10      	pop	{r4, pc}
	...

10060f40 <LL_eadv_EauxIsr_connect_response_sent>:
10060f40:	b5f0      	push	{r4, r5, r6, r7, lr}
10060f42:	b087      	sub	sp, #28
10060f44:	4604      	mov	r4, r0
10060f46:	f7e3 fe62 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10060f4a:	a802      	add	r0, sp, #8
10060f4c:	4919      	ldr	r1, [pc, #100]	@ (10060fb4 <__arm_cp.59_0>)
10060f4e:	8101      	strh	r1, [r0, #8]
10060f50:	2600      	movs	r6, #0
10060f52:	8206      	strh	r6, [r0, #16]
10060f54:	2101      	movs	r1, #1
10060f56:	73c1      	strb	r1, [r0, #15]
10060f58:	21ff      	movs	r1, #255	@ 0xff
10060f5a:	9101      	str	r1, [sp, #4]
10060f5c:	3104      	adds	r1, #4
10060f5e:	8181      	strh	r1, [r0, #12]
10060f60:	21be      	movs	r1, #190	@ 0xbe
10060f62:	5c61      	ldrb	r1, [r4, r1]
10060f64:	7281      	strb	r1, [r0, #10]
10060f66:	4627      	mov	r7, r4
10060f68:	37be      	adds	r7, #190	@ 0xbe
10060f6a:	7eb9      	ldrb	r1, [r7, #26]
10060f6c:	72c1      	strb	r1, [r0, #11]
10060f6e:	25d1      	movs	r5, #209	@ 0xd1
10060f70:	5d61      	ldrb	r1, [r4, r5]
10060f72:	7381      	strb	r1, [r0, #14]
10060f74:	4621      	mov	r1, r4
10060f76:	31dc      	adds	r1, #220	@ 0xdc
10060f78:	9102      	str	r1, [sp, #8]
10060f7a:	6d21      	ldr	r1, [r4, #80]	@ 0x50
10060f7c:	3128      	adds	r1, #40	@ 0x28
10060f7e:	9103      	str	r1, [sp, #12]
10060f80:	f7f6 f87a 	bl	10057078 <llc_conn_go_to_connect>
10060f84:	4620      	mov	r0, r4
10060f86:	3028      	adds	r0, #40	@ 0x28
10060f88:	f7fe fdc6 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
10060f8c:	4620      	mov	r0, r4
10060f8e:	303c      	adds	r0, #60	@ 0x3c
10060f90:	f7fe fdc2 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
10060f94:	7cb8      	ldrb	r0, [r7, #18]
10060f96:	f001 fa13 	bl	100623c0 <LL_sched_set_cancel_request>
10060f9a:	743e      	strb	r6, [r7, #16]
10060f9c:	5d60      	ldrb	r0, [r4, r5]
10060f9e:	f001 fa7f 	bl	100624a0 <LL_sched_engine>
10060fa2:	9801      	ldr	r0, [sp, #4]
10060fa4:	5560      	strb	r0, [r4, r5]
10060fa6:	7e38      	ldrb	r0, [r7, #24]
10060fa8:	0780      	lsls	r0, r0, #30
10060faa:	d501      	bpl.n	10060fb0 <LL_eadv_EauxIsr_connect_response_sent+0x70>
10060fac:	f7f8 f920 	bl	100591f0 <llc_priv_stop_privacy_timer_ucfg_weak>
10060fb0:	b007      	add	sp, #28
10060fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}

10060fb4 <__arm_cp.59_0>:
10060fb4:	0000ffff 	.word	0x0000ffff

10060fb8 <LL_eadv_EauxIsr_connect_request_received>:
10060fb8:	b570      	push	{r4, r5, r6, lr}
10060fba:	4604      	mov	r4, r0
10060fbc:	2500      	movs	r5, #0
10060fbe:	700d      	strb	r5, [r1, #0]
10060fc0:	6d00      	ldr	r0, [r0, #80]	@ 0x50
10060fc2:	f7e4 fee3 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
10060fc6:	f7e4 fe01 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10060fca:	20db      	movs	r0, #219	@ 0xdb
10060fcc:	2107      	movs	r1, #7
10060fce:	5421      	strb	r1, [r4, r0]
10060fd0:	6f60      	ldr	r0, [r4, #116]	@ 0x74
10060fd2:	6085      	str	r5, [r0, #8]
10060fd4:	6f60      	ldr	r0, [r4, #116]	@ 0x74
10060fd6:	60c5      	str	r5, [r0, #12]
10060fd8:	20dc      	movs	r0, #220	@ 0xdc
10060fda:	5c20      	ldrb	r0, [r4, r0]
10060fdc:	0640      	lsls	r0, r0, #25
10060fde:	0fc0      	lsrs	r0, r0, #31
10060fe0:	6f61      	ldr	r1, [r4, #116]	@ 0x74
10060fe2:	7a0a      	ldrb	r2, [r1, #8]
10060fe4:	4302      	orrs	r2, r0
10060fe6:	720a      	strb	r2, [r1, #8]
10060fe8:	6f60      	ldr	r0, [r4, #116]	@ 0x74
10060fea:	4621      	mov	r1, r4
10060fec:	31de      	adds	r1, #222	@ 0xde
10060fee:	3009      	adds	r0, #9
10060ff0:	2206      	movs	r2, #6
10060ff2:	f7e3 fcd7 	bl	100449a4 <BLEPLAT_MemCpy>
10060ff6:	4625      	mov	r5, r4
10060ff8:	3598      	adds	r5, #152	@ 0x98
10060ffa:	4626      	mov	r6, r4
10060ffc:	36c7      	adds	r6, #199	@ 0xc7
10060ffe:	f7f8 f8f2 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
10061002:	2801      	cmp	r0, #1
10061004:	d108      	bne.n	10061018 <LL_eadv_EauxIsr_connect_request_received+0x60>
10061006:	6d20      	ldr	r0, [r4, #80]	@ 0x50
10061008:	2130      	movs	r1, #48	@ 0x30
1006100a:	5c40      	ldrb	r0, [r0, r1]
1006100c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
1006100e:	3308      	adds	r3, #8
10061010:	2100      	movs	r1, #0
10061012:	2201      	movs	r2, #1
10061014:	f7f7 fffe 	bl	10059014 <llc_priv_generate_rpa_from_rl_index>
10061018:	7830      	ldrb	r0, [r6, #0]
1006101a:	2100      	movs	r1, #0
1006101c:	460a      	mov	r2, r1
1006101e:	f7fb fde7 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
10061022:	307b      	adds	r0, #123	@ 0x7b
10061024:	6028      	str	r0, [r5, #0]
10061026:	4620      	mov	r0, r4
10061028:	f7ff fe5c 	bl	10060ce4 <LL_eadv_EauxCreateSlot>
1006102c:	4801      	ldr	r0, [pc, #4]	@ (10061034 <__arm_cp.61_0>)
1006102e:	83a8      	strh	r0, [r5, #28]
10061030:	bd70      	pop	{r4, r5, r6, pc}
10061032:	46c0      	nop			@ (mov r8, r8)

10061034 <__arm_cp.61_0>:
10061034:	0000fff9 	.word	0x0000fff9

10061038 <LL_eadv_EadvSkipRoutine>:
10061038:	b5f0      	push	{r4, r5, r6, r7, lr}
1006103a:	b087      	sub	sp, #28
1006103c:	460d      	mov	r5, r1
1006103e:	4604      	mov	r4, r0
10061040:	20d0      	movs	r0, #208	@ 0xd0
10061042:	5c20      	ldrb	r0, [r4, r0]
10061044:	212c      	movs	r1, #44	@ 0x2c
10061046:	4341      	muls	r1, r0
10061048:	4a4c      	ldr	r2, [pc, #304]	@ (1006117c <__arm_cp.62_0>)
1006104a:	6812      	ldr	r2, [r2, #0]
1006104c:	1851      	adds	r1, r2, r1
1006104e:	7d89      	ldrb	r1, [r1, #22]
10061050:	4626      	mov	r6, r4
10061052:	3698      	adds	r6, #152	@ 0x98
10061054:	4627      	mov	r7, r4
10061056:	37b8      	adds	r7, #184	@ 0xb8
10061058:	2914      	cmp	r1, #20
1006105a:	d109      	bne.n	10061070 <LL_eadv_EadvSkipRoutine+0x38>
1006105c:	f7e3 fd96 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10061060:	4604      	mov	r4, r0
10061062:	f001 f97b 	bl	1006235c <LL_sched_engine_return_actual_scheduler_margin>
10061066:	1821      	adds	r1, r4, r0
10061068:	3132      	adds	r1, #50	@ 0x32
1006106a:	6071      	str	r1, [r6, #4]
1006106c:	7e38      	ldrb	r0, [r7, #24]
1006106e:	e009      	b.n	10061084 <LL_eadv_EadvSkipRoutine+0x4c>
10061070:	9702      	str	r7, [sp, #8]
10061072:	2d00      	cmp	r5, #0
10061074:	d00a      	beq.n	1006108c <LL_eadv_EadvSkipRoutine+0x54>
10061076:	211c      	movs	r1, #28
10061078:	5e71      	ldrsh	r1, [r6, r1]
1006107a:	2900      	cmp	r1, #0
1006107c:	d506      	bpl.n	1006108c <LL_eadv_EadvSkipRoutine+0x54>
1006107e:	6871      	ldr	r1, [r6, #4]
10061080:	4a40      	ldr	r2, [pc, #256]	@ (10061184 <__arm_cp.62_2>)
10061082:	1889      	adds	r1, r1, r2
10061084:	f001 f98a 	bl	1006239c <LL_sched_set_anchor>
10061088:	2701      	movs	r7, #1
1006108a:	e072      	b.n	10061172 <LL_eadv_EadvSkipRoutine+0x13a>
1006108c:	4268      	negs	r0, r5
1006108e:	1d31      	adds	r1, r6, #4
10061090:	4622      	mov	r2, r4
10061092:	f7ff fd5b 	bl	10060b4c <LL_eadv_advance_anchor_time_and_state_eadv>
10061096:	4607      	mov	r7, r0
10061098:	2d00      	cmp	r5, #0
1006109a:	d100      	bne.n	1006109e <LL_eadv_EadvSkipRoutine+0x66>
1006109c:	462f      	mov	r7, r5
1006109e:	4621      	mov	r1, r4
100610a0:	31d9      	adds	r1, #217	@ 0xd9
100610a2:	6875      	ldr	r5, [r6, #4]
100610a4:	8bb0      	ldrh	r0, [r6, #28]
100610a6:	2800      	cmp	r0, #0
100610a8:	d016      	beq.n	100610d8 <LL_eadv_EadvSkipRoutine+0xa0>
100610aa:	2002      	movs	r0, #2
100610ac:	7088      	strb	r0, [r1, #2]
100610ae:	68b0      	ldr	r0, [r6, #8]
100610b0:	1b40      	subs	r0, r0, r5
100610b2:	6030      	str	r0, [r6, #0]
100610b4:	9c02      	ldr	r4, [sp, #8]
100610b6:	7aa1      	ldrb	r1, [r4, #10]
100610b8:	2201      	movs	r2, #1
100610ba:	400a      	ands	r2, r1
100610bc:	078b      	lsls	r3, r1, #30
100610be:	0fdb      	lsrs	r3, r3, #31
100610c0:	18d2      	adds	r2, r2, r3
100610c2:	0749      	lsls	r1, r1, #29
100610c4:	0fc9      	lsrs	r1, r1, #31
100610c6:	1851      	adds	r1, r2, r1
100610c8:	1e49      	subs	r1, r1, #1
100610ca:	76a1      	strb	r1, [r4, #26]
100610cc:	a903      	add	r1, sp, #12
100610ce:	aa04      	add	r2, sp, #16
100610d0:	f000 f85a 	bl	10061188 <llc_eadv_calculate_aux_ptr_offset>
100610d4:	1945      	adds	r5, r0, r5
100610d6:	e048      	b.n	1006116a <LL_eadv_EadvSkipRoutine+0x132>
100610d8:	7808      	ldrb	r0, [r1, #0]
100610da:	2800      	cmp	r0, #0
100610dc:	d01c      	beq.n	10061118 <LL_eadv_EadvSkipRoutine+0xe0>
100610de:	2003      	movs	r0, #3
100610e0:	7088      	strb	r0, [r1, #2]
100610e2:	aa06      	add	r2, sp, #24
100610e4:	9201      	str	r2, [sp, #4]
100610e6:	ab05      	add	r3, sp, #20
100610e8:	4621      	mov	r1, r4
100610ea:	f000 fba7 	bl	1006183c <llc_eadv_get_payload_length_and_extended_header_flags>
100610ee:	9000      	str	r0, [sp, #0]
100610f0:	9801      	ldr	r0, [sp, #4]
100610f2:	7801      	ldrb	r1, [r0, #0]
100610f4:	9802      	ldr	r0, [sp, #8]
100610f6:	7bc0      	ldrb	r0, [r0, #15]
100610f8:	2200      	movs	r2, #0
100610fa:	f7fb fd79 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
100610fe:	2109      	movs	r1, #9
10061100:	43c9      	mvns	r1, r1
10061102:	3109      	adds	r1, #9
10061104:	83b1      	strh	r1, [r6, #28]
10061106:	30d0      	adds	r0, #208	@ 0xd0
10061108:	6030      	str	r0, [r6, #0]
1006110a:	9802      	ldr	r0, [sp, #8]
1006110c:	7800      	ldrb	r0, [r0, #0]
1006110e:	0780      	lsls	r0, r0, #30
10061110:	481b      	ldr	r0, [pc, #108]	@ (10061180 <__arm_cp.62_1>)
10061112:	d006      	beq.n	10061122 <LL_eadv_EadvSkipRoutine+0xea>
10061114:	83b0      	strh	r0, [r6, #28]
10061116:	e013      	b.n	10061140 <LL_eadv_EadvSkipRoutine+0x108>
10061118:	4620      	mov	r0, r4
1006111a:	f7ff fd5d 	bl	10060bd8 <LL_eadv_deploy_new_overall_adv_event>
1006111e:	9c02      	ldr	r4, [sp, #8]
10061120:	e023      	b.n	1006116a <LL_eadv_EadvSkipRoutine+0x132>
10061122:	9900      	ldr	r1, [sp, #0]
10061124:	2900      	cmp	r1, #0
10061126:	d027      	beq.n	10061178 <LL_eadv_EadvSkipRoutine+0x140>
10061128:	6d20      	ldr	r0, [r4, #80]	@ 0x50
1006112a:	9001      	str	r0, [sp, #4]
1006112c:	207d      	movs	r0, #125	@ 0x7d
1006112e:	0080      	lsls	r0, r0, #2
10061130:	2102      	movs	r1, #2
10061132:	2201      	movs	r2, #1
10061134:	f7e4 fccb 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
10061138:	4601      	mov	r1, r0
1006113a:	9801      	ldr	r0, [sp, #4]
1006113c:	f7e4 ff34 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
10061140:	4620      	mov	r0, r4
10061142:	3028      	adds	r0, #40	@ 0x28
10061144:	f7fe fce8 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
10061148:	9001      	str	r0, [sp, #4]
1006114a:	4620      	mov	r0, r4
1006114c:	303c      	adds	r0, #60	@ 0x3c
1006114e:	f7fe fce3 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
10061152:	9901      	ldr	r1, [sp, #4]
10061154:	4308      	orrs	r0, r1
10061156:	d003      	beq.n	10061160 <LL_eadv_EadvSkipRoutine+0x128>
10061158:	34b6      	adds	r4, #182	@ 0xb6
1006115a:	4620      	mov	r0, r4
1006115c:	f7ff f920 	bl	100603a0 <LL_eadv_update_did>
10061160:	68b1      	ldr	r1, [r6, #8]
10061162:	9c02      	ldr	r4, [sp, #8]
10061164:	7e60      	ldrb	r0, [r4, #25]
10061166:	f001 f919 	bl	1006239c <LL_sched_set_anchor>
1006116a:	7e20      	ldrb	r0, [r4, #24]
1006116c:	4629      	mov	r1, r5
1006116e:	f001 f915 	bl	1006239c <LL_sched_set_anchor>
10061172:	4638      	mov	r0, r7
10061174:	b007      	add	sp, #28
10061176:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061178:	1dc0      	adds	r0, r0, #7
1006117a:	e7cb      	b.n	10061114 <LL_eadv_EadvSkipRoutine+0xdc>

1006117c <__arm_cp.62_0>:
1006117c:	2000089c 	.word	0x2000089c

10061180 <__arm_cp.62_1>:
10061180:	0000fff6 	.word	0x0000fff6

10061184 <__arm_cp.62_2>:
10061184:	000186a0 	.word	0x000186a0

10061188 <llc_eadv_calculate_aux_ptr_offset>:
10061188:	b5b0      	push	{r4, r5, r7, lr}
1006118a:	460c      	mov	r4, r1
1006118c:	4915      	ldr	r1, [pc, #84]	@ (100611e4 <__arm_cp.63_0>)
1006118e:	4341      	muls	r1, r0
10061190:	0a0d      	lsrs	r5, r1, #8
10061192:	4915      	ldr	r1, [pc, #84]	@ (100611e8 <__arm_cp.63_1>)
10061194:	4288      	cmp	r0, r1
10061196:	d30d      	bcc.n	100611b4 <llc_eadv_calculate_aux_ptr_offset+0x2c>
10061198:	2001      	movs	r0, #1
1006119a:	7010      	strb	r0, [r2, #0]
1006119c:	4a14      	ldr	r2, [pc, #80]	@ (100611f0 <__arm_cp.63_3>)
1006119e:	2100      	movs	r1, #0
100611a0:	4628      	mov	r0, r5
100611a2:	460b      	mov	r3, r1
100611a4:	f7df fa4a 	bl	1004063c <__aeabi_lmul>
100611a8:	1a68      	subs	r0, r5, r1
100611aa:	0840      	lsrs	r0, r0, #1
100611ac:	1840      	adds	r0, r0, r1
100611ae:	0a00      	lsrs	r0, r0, #8
100611b0:	4910      	ldr	r1, [pc, #64]	@ (100611f4 <__arm_cp.63_4>)
100611b2:	e00c      	b.n	100611ce <llc_eadv_calculate_aux_ptr_offset+0x46>
100611b4:	2100      	movs	r1, #0
100611b6:	7011      	strb	r1, [r2, #0]
100611b8:	4a0c      	ldr	r2, [pc, #48]	@ (100611ec <__arm_cp.63_2>)
100611ba:	4628      	mov	r0, r5
100611bc:	460b      	mov	r3, r1
100611be:	f7df fa3d 	bl	1004063c <__aeabi_lmul>
100611c2:	1a68      	subs	r0, r5, r1
100611c4:	0840      	lsrs	r0, r0, #1
100611c6:	1840      	adds	r0, r0, r1
100611c8:	0900      	lsrs	r0, r0, #4
100611ca:	211d      	movs	r1, #29
100611cc:	43c9      	mvns	r1, r1
100611ce:	4341      	muls	r1, r0
100611d0:	6020      	str	r0, [r4, #0]
100611d2:	1948      	adds	r0, r1, r5
100611d4:	0200      	lsls	r0, r0, #8
100611d6:	2127      	movs	r1, #39	@ 0x27
100611d8:	00c9      	lsls	r1, r1, #3
100611da:	1840      	adds	r0, r0, r1
100611dc:	4901      	ldr	r1, [pc, #4]	@ (100611e4 <__arm_cp.63_0>)
100611de:	f7df f82f 	bl	10040240 <__udivsi3>
100611e2:	bdb0      	pop	{r4, r5, r7, pc}

100611e4 <__arm_cp.63_0>:
100611e4:	00000271 	.word	0x00000271

100611e8 <__arm_cp.63_1>:
100611e8:	0001891f 	.word	0x0001891f

100611ec <__arm_cp.63_2>:
100611ec:	11111112 	.word	0x11111112

100611f0 <__arm_cp.63_3>:
100611f0:	b4e81b4f 	.word	0xb4e81b4f

100611f4 <__arm_cp.63_4>:
100611f4:	fffffed4 	.word	0xfffffed4

100611f8 <LL_eadv_EadvCreateSlot>:
100611f8:	b57c      	push	{r2, r3, r4, r5, r6, lr}
100611fa:	4604      	mov	r4, r0
100611fc:	f7ff f9d4 	bl	100605a8 <UTIL_u8GetNextAdvChannel>
10061200:	4601      	mov	r1, r0
10061202:	26d0      	movs	r6, #208	@ 0xd0
10061204:	5da0      	ldrb	r0, [r4, r6]
10061206:	f7e5 f92e 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
1006120a:	20c5      	movs	r0, #197	@ 0xc5
1006120c:	5c20      	ldrb	r0, [r4, r0]
1006120e:	f7fb fce1 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
10061212:	4605      	mov	r5, r0
10061214:	5da0      	ldrb	r0, [r4, r6]
10061216:	4629      	mov	r1, r5
10061218:	f7e5 fa05 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
1006121c:	5da0      	ldrb	r0, [r4, r6]
1006121e:	4629      	mov	r1, r5
10061220:	f7e5 f995 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
10061224:	20db      	movs	r0, #219	@ 0xdb
10061226:	5c20      	ldrb	r0, [r4, r0]
10061228:	4621      	mov	r1, r4
1006122a:	31b8      	adds	r1, #184	@ 0xb8
1006122c:	2806      	cmp	r0, #6
1006122e:	d001      	beq.n	10061234 <LL_eadv_EadvCreateSlot+0x3c>
10061230:	2805      	cmp	r0, #5
10061232:	d102      	bne.n	1006123a <LL_eadv_EadvCreateSlot+0x42>
10061234:	4622      	mov	r2, r4
10061236:	323c      	adds	r2, #60	@ 0x3c
10061238:	e001      	b.n	1006123e <LL_eadv_EadvCreateSlot+0x46>
1006123a:	4622      	mov	r2, r4
1006123c:	3228      	adds	r2, #40	@ 0x28
1006123e:	8809      	ldrh	r1, [r1, #0]
10061240:	9400      	str	r4, [sp, #0]
10061242:	9201      	str	r2, [sp, #4]
10061244:	2200      	movs	r2, #0
10061246:	4613      	mov	r3, r2
10061248:	f7ff fd81 	bl	10060d4e <llc_eadv_prepare_extended_advertising_packet>
1006124c:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
	...

10061250 <LL_eadv_EadvIsr>:
10061250:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10061252:	4604      	mov	r4, r0
10061254:	4e2b      	ldr	r6, [pc, #172]	@ (10061304 <__arm_cp.65_0>)
10061256:	6830      	ldr	r0, [r6, #0]
10061258:	f7e4 fd68 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
1006125c:	4605      	mov	r5, r0
1006125e:	6830      	ldr	r0, [r6, #0]
10061260:	4627      	mov	r7, r4
10061262:	37d0      	adds	r7, #208	@ 0xd0
10061264:	f7e4 fcc8 	bl	10045bf8 <BLEPLAT_CNTR_IntGetIntStatusAnyHwError>
10061268:	4606      	mov	r6, r0
1006126a:	2001      	movs	r0, #1
1006126c:	7278      	strb	r0, [r7, #9]
1006126e:	20d0      	movs	r0, #208	@ 0xd0
10061270:	5c20      	ldrb	r0, [r4, r0]
10061272:	212c      	movs	r1, #44	@ 0x2c
10061274:	4341      	muls	r1, r0
10061276:	4a24      	ldr	r2, [pc, #144]	@ (10061308 <__arm_cp.65_1>)
10061278:	6812      	ldr	r2, [r2, #0]
1006127a:	1851      	adds	r1, r2, r1
1006127c:	7d89      	ldrb	r1, [r1, #22]
1006127e:	2914      	cmp	r1, #20
10061280:	d103      	bne.n	1006128a <LL_eadv_EadvIsr+0x3a>
10061282:	210a      	movs	r1, #10
10061284:	2207      	movs	r2, #7
10061286:	f001 fad1 	bl	1006282c <LL_sched_set_priority>
1006128a:	2e00      	cmp	r6, #0
1006128c:	d004      	beq.n	10061298 <LL_eadv_EadvIsr+0x48>
1006128e:	7838      	ldrb	r0, [r7, #0]
10061290:	f001 f906 	bl	100624a0 <LL_sched_engine>
10061294:	2001      	movs	r0, #1
10061296:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10061298:	4626      	mov	r6, r4
1006129a:	3698      	adds	r6, #152	@ 0x98
1006129c:	2d00      	cmp	r5, #0
1006129e:	d023      	beq.n	100612e8 <LL_eadv_EadvIsr+0x98>
100612a0:	78b8      	ldrb	r0, [r7, #2]
100612a2:	2800      	cmp	r0, #0
100612a4:	d020      	beq.n	100612e8 <LL_eadv_EadvIsr+0x98>
100612a6:	f7e3 fcb2 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100612aa:	4620      	mov	r0, r4
100612ac:	f7e4 fe62 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
100612b0:	68b0      	ldr	r0, [r6, #8]
100612b2:	4916      	ldr	r1, [pc, #88]	@ (1006130c <__arm_cp.65_2>)
100612b4:	6809      	ldr	r1, [r1, #0]
100612b6:	680d      	ldr	r5, [r1, #0]
100612b8:	357b      	adds	r5, #123	@ 0x7b
100612ba:	1b40      	subs	r0, r0, r5
100612bc:	6030      	str	r0, [r6, #0]
100612be:	a902      	add	r1, sp, #8
100612c0:	aa01      	add	r2, sp, #4
100612c2:	f7ff ff61 	bl	10061188 <llc_eadv_calculate_aux_ptr_offset>
100612c6:	1940      	adds	r0, r0, r5
100612c8:	2101      	movs	r1, #1
100612ca:	460a      	mov	r2, r1
100612cc:	f7e3 fc85 	bl	10044bda <BLEPLAT_SetRadioTimerValue>
100612d0:	4605      	mov	r5, r0
100612d2:	78b8      	ldrb	r0, [r7, #2]
100612d4:	1e40      	subs	r0, r0, #1
100612d6:	70b8      	strb	r0, [r7, #2]
100612d8:	4620      	mov	r0, r4
100612da:	f7ff ff8d 	bl	100611f8 <LL_eadv_EadvCreateSlot>
100612de:	f7e4 fc75 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
100612e2:	2d00      	cmp	r5, #0
100612e4:	d1d3      	bne.n	1006128e <LL_eadv_EadvIsr+0x3e>
100612e6:	e7d5      	b.n	10061294 <LL_eadv_EadvIsr+0x44>
100612e8:	201c      	movs	r0, #28
100612ea:	5e30      	ldrsh	r0, [r6, r0]
100612ec:	2800      	cmp	r0, #0
100612ee:	d406      	bmi.n	100612fe <LL_eadv_EadvIsr+0xae>
100612f0:	f7e3 fc8d 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100612f4:	2100      	movs	r1, #0
100612f6:	4620      	mov	r0, r4
100612f8:	f7ff fe9e 	bl	10061038 <LL_eadv_EadvSkipRoutine>
100612fc:	e7c7      	b.n	1006128e <LL_eadv_EadvIsr+0x3e>
100612fe:	f7e4 fc65 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10061302:	e7c7      	b.n	10061294 <LL_eadv_EadvIsr+0x44>

10061304 <__arm_cp.65_0>:
10061304:	20000890 	.word	0x20000890

10061308 <__arm_cp.65_1>:
10061308:	2000089c 	.word	0x2000089c

1006130c <__arm_cp.65_2>:
1006130c:	20000894 	.word	0x20000894

10061310 <LL_eadv_start_extended>:
10061310:	b5f0      	push	{r4, r5, r6, r7, lr}
10061312:	b095      	sub	sp, #84	@ 0x54
10061314:	4607      	mov	r7, r0
10061316:	4604      	mov	r4, r0
10061318:	34c4      	adds	r4, #196	@ 0xc4
1006131a:	f7fe fcf2 	bl	1005fd02 <llc_eadv_calc_time_between_first_prim_adv_start_and_first_sec_adv_start>
1006131e:	900f      	str	r0, [sp, #60]	@ 0x3c
10061320:	78a0      	ldrb	r0, [r4, #2]
10061322:	900e      	str	r0, [sp, #56]	@ 0x38
10061324:	6ff8      	ldr	r0, [r7, #124]	@ 0x7c
10061326:	900c      	str	r0, [sp, #48]	@ 0x30
10061328:	2600      	movs	r6, #0
1006132a:	4638      	mov	r0, r7
1006132c:	4631      	mov	r1, r6
1006132e:	f7fe fd03 	bl	1005fd38 <llc_eadv_get_adv_event_length>
10061332:	900b      	str	r0, [sp, #44]	@ 0x2c
10061334:	f000 ffa8 	bl	10062288 <LL_get_tx_common_buffer_p>
10061338:	4605      	mov	r5, r0
1006133a:	900d      	str	r0, [sp, #52]	@ 0x34
1006133c:	f000 ffac 	bl	10062298 <LL_get_rx_common_buffer_p>
10061340:	9011      	str	r0, [sp, #68]	@ 0x44
10061342:	7b21      	ldrb	r1, [r4, #12]
10061344:	2081      	movs	r0, #129	@ 0x81
10061346:	9012      	str	r0, [sp, #72]	@ 0x48
10061348:	9000      	str	r0, [sp, #0]
1006134a:	4638      	mov	r0, r7
1006134c:	462a      	mov	r2, r5
1006134e:	4633      	mov	r3, r6
10061350:	f7fe fbf6 	bl	1005fb40 <LL_eadv_Blue_Tx>
10061354:	4638      	mov	r0, r7
10061356:	f7e4 fdf4 	bl	10045f42 <BLEPLAT_CNTR_PacketSetNextTxMode>
1006135a:	209c      	movs	r0, #156	@ 0x9c
1006135c:	9010      	str	r0, [sp, #64]	@ 0x40
1006135e:	5839      	ldr	r1, [r7, r0]
10061360:	7b20      	ldrb	r0, [r4, #12]
10061362:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
10061364:	4b41      	ldr	r3, [pc, #260]	@ (1006146c <__arm_cp.66_0>)
10061366:	9307      	str	r3, [sp, #28]
10061368:	4b41      	ldr	r3, [pc, #260]	@ (10061470 <__arm_cp.66_1>)
1006136a:	9306      	str	r3, [sp, #24]
1006136c:	4b41      	ldr	r3, [pc, #260]	@ (10061474 <__arm_cp.66_2>)
1006136e:	9305      	str	r3, [sp, #20]
10061370:	4b41      	ldr	r3, [pc, #260]	@ (10061478 <__arm_cp.66_3>)
10061372:	9304      	str	r3, [sp, #16]
10061374:	2314      	movs	r3, #20
10061376:	9303      	str	r3, [sp, #12]
10061378:	231f      	movs	r3, #31
1006137a:	930a      	str	r3, [sp, #40]	@ 0x28
1006137c:	9302      	str	r3, [sp, #8]
1006137e:	9101      	str	r1, [sp, #4]
10061380:	9200      	str	r2, [sp, #0]
10061382:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10061384:	990c      	ldr	r1, [sp, #48]	@ 0x30
10061386:	4351      	muls	r1, r2
10061388:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1006138a:	1859      	adds	r1, r3, r1
1006138c:	1c52      	adds	r2, r2, #1
1006138e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10061390:	435a      	muls	r2, r3
10061392:	188b      	adds	r3, r1, r2
10061394:	4639      	mov	r1, r7
10061396:	9d12      	ldr	r5, [sp, #72]	@ 0x48
10061398:	462a      	mov	r2, r5
1006139a:	f001 f823 	bl	100623e4 <LL_sched_enable_taskslot>
1006139e:	4638      	mov	r0, r7
100613a0:	4631      	mov	r1, r6
100613a2:	f7fe fcc9 	bl	1005fd38 <llc_eadv_get_adv_event_length>
100613a6:	900f      	str	r0, [sp, #60]	@ 0x3c
100613a8:	f7e3 fbf0 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
100613ac:	900e      	str	r0, [sp, #56]	@ 0x38
100613ae:	20c4      	movs	r0, #196	@ 0xc4
100613b0:	5c39      	ldrb	r1, [r7, r0]
100613b2:	7b60      	ldrb	r0, [r4, #13]
100613b4:	6d3a      	ldr	r2, [r7, #80]	@ 0x50
100613b6:	9500      	str	r5, [sp, #0]
100613b8:	4613      	mov	r3, r2
100613ba:	3314      	adds	r3, #20
100613bc:	f7fe fc3a 	bl	1005fc34 <LL_eadv_BLUE_SM>
100613c0:	a913      	add	r1, sp, #76	@ 0x4c
100613c2:	980a      	ldr	r0, [sp, #40]	@ 0x28
100613c4:	7108      	strb	r0, [r1, #4]
100613c6:	43f0      	mvns	r0, r6
100613c8:	9013      	str	r0, [sp, #76]	@ 0x4c
100613ca:	7b60      	ldrb	r0, [r4, #13]
100613cc:	f7e4 ffde 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
100613d0:	7b60      	ldrb	r0, [r4, #13]
100613d2:	21ff      	movs	r1, #255	@ 0xff
100613d4:	f7e5 f81d 	bl	10046412 <BLEPLAT_CNTR_SmSetDataLength>
100613d8:	7b60      	ldrb	r0, [r4, #13]
100613da:	900c      	str	r0, [sp, #48]	@ 0x30
100613dc:	9409      	str	r4, [sp, #36]	@ 0x24
100613de:	6d3d      	ldr	r5, [r7, #80]	@ 0x50
100613e0:	2094      	movs	r0, #148	@ 0x94
100613e2:	9608      	str	r6, [sp, #32]
100613e4:	4631      	mov	r1, r6
100613e6:	4632      	mov	r2, r6
100613e8:	f7e4 fb71 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
100613ec:	4603      	mov	r3, r0
100613ee:	9e12      	ldr	r6, [sp, #72]	@ 0x48
100613f0:	9600      	str	r6, [sp, #0]
100613f2:	4628      	mov	r0, r5
100613f4:	990c      	ldr	r1, [sp, #48]	@ 0x30
100613f6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100613f8:	f7fe fba2 	bl	1005fb40 <LL_eadv_Blue_Tx>
100613fc:	7b60      	ldrb	r0, [r4, #13]
100613fe:	900d      	str	r0, [sp, #52]	@ 0x34
10061400:	6d3d      	ldr	r5, [r7, #80]	@ 0x50
10061402:	2096      	movs	r0, #150	@ 0x96
10061404:	2101      	movs	r1, #1
10061406:	9c08      	ldr	r4, [sp, #32]
10061408:	4622      	mov	r2, r4
1006140a:	f7e4 fb60 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
1006140e:	4603      	mov	r3, r0
10061410:	9400      	str	r4, [sp, #0]
10061412:	9601      	str	r6, [sp, #4]
10061414:	3514      	adds	r5, #20
10061416:	4628      	mov	r0, r5
10061418:	990d      	ldr	r1, [sp, #52]	@ 0x34
1006141a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
1006141c:	f7fe fbcb 	bl	1005fbb6 <LL_eadv_Blue_Rx>
10061420:	6d38      	ldr	r0, [r7, #80]	@ 0x50
10061422:	f7e4 fd8e 	bl	10045f42 <BLEPLAT_CNTR_PacketSetNextTxMode>
10061426:	f7e3 fbb1 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1006142a:	30c8      	adds	r0, #200	@ 0xc8
1006142c:	9910      	ldr	r1, [sp, #64]	@ 0x40
1006142e:	5078      	str	r0, [r7, r1]
10061430:	4638      	mov	r0, r7
10061432:	f7ff fbd1 	bl	10060bd8 <LL_eadv_deploy_new_overall_adv_event>
10061436:	9809      	ldr	r0, [sp, #36]	@ 0x24
10061438:	7b40      	ldrb	r0, [r0, #13]
1006143a:	4910      	ldr	r1, [pc, #64]	@ (1006147c <__arm_cp.66_4>)
1006143c:	9107      	str	r1, [sp, #28]
1006143e:	4910      	ldr	r1, [pc, #64]	@ (10061480 <__arm_cp.66_5>)
10061440:	9106      	str	r1, [sp, #24]
10061442:	4910      	ldr	r1, [pc, #64]	@ (10061484 <__arm_cp.66_6>)
10061444:	9105      	str	r1, [sp, #20]
10061446:	4910      	ldr	r1, [pc, #64]	@ (10061488 <__arm_cp.66_7>)
10061448:	9104      	str	r1, [sp, #16]
1006144a:	2106      	movs	r1, #6
1006144c:	9103      	str	r1, [sp, #12]
1006144e:	210a      	movs	r1, #10
10061450:	9102      	str	r1, [sp, #8]
10061452:	490e      	ldr	r1, [pc, #56]	@ (1006148c <__arm_cp.66_8>)
10061454:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10061456:	1852      	adds	r2, r2, r1
10061458:	9201      	str	r2, [sp, #4]
1006145a:	9100      	str	r1, [sp, #0]
1006145c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1006145e:	3380      	adds	r3, #128	@ 0x80
10061460:	4639      	mov	r1, r7
10061462:	4632      	mov	r2, r6
10061464:	f000 ffbe 	bl	100623e4 <LL_sched_enable_taskslot>
10061468:	b015      	add	sp, #84	@ 0x54
1006146a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006146c <__arm_cp.66_0>:
1006146c:	10060f1d 	.word	0x10060f1d

10061470 <__arm_cp.66_1>:
10061470:	10061251 	.word	0x10061251

10061474 <__arm_cp.66_2>:
10061474:	100611f9 	.word	0x100611f9

10061478 <__arm_cp.66_3>:
10061478:	10061039 	.word	0x10061039

1006147c <__arm_cp.66_4>:
1006147c:	10060f15 	.word	0x10060f15

10061480 <__arm_cp.66_5>:
10061480:	10061491 	.word	0x10061491

10061484 <__arm_cp.66_6>:
10061484:	10060ce5 	.word	0x10060ce5

10061488 <__arm_cp.66_7>:
10061488:	10060b05 	.word	0x10060b05

1006148c <__arm_cp.66_8>:
1006148c:	0fffffff 	.word	0x0fffffff

10061490 <LL_eadv_EauxIsr>:
10061490:	b5f0      	push	{r4, r5, r6, r7, lr}
10061492:	b091      	sub	sp, #68	@ 0x44
10061494:	4604      	mov	r4, r0
10061496:	a80c      	add	r0, sp, #48	@ 0x30
10061498:	2100      	movs	r1, #0
1006149a:	9108      	str	r1, [sp, #32]
1006149c:	7001      	strb	r1, [r0, #0]
1006149e:	a80a      	add	r0, sp, #40	@ 0x28
100614a0:	2501      	movs	r5, #1
100614a2:	7005      	strb	r5, [r0, #0]
100614a4:	48c1      	ldr	r0, [pc, #772]	@ (100617ac <__arm_cp.67_0>)
100614a6:	6800      	ldr	r0, [r0, #0]
100614a8:	21d8      	movs	r1, #216	@ 0xd8
100614aa:	5c46      	ldrb	r6, [r0, r1]
100614ac:	4fc0      	ldr	r7, [pc, #768]	@ (100617b0 <__arm_cp.67_1>)
100614ae:	6838      	ldr	r0, [r7, #0]
100614b0:	9409      	str	r4, [sp, #36]	@ 0x24
100614b2:	34b8      	adds	r4, #184	@ 0xb8
100614b4:	f7e4 fba0 	bl	10045bf8 <BLEPLAT_CNTR_IntGetIntStatusAnyHwError>
100614b8:	2800      	cmp	r0, #0
100614ba:	d005      	beq.n	100614c8 <LL_eadv_EauxIsr+0x38>
100614bc:	f7e3 fba7 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100614c0:	7e60      	ldrb	r0, [r4, #25]
100614c2:	f000 ffed 	bl	100624a0 <LL_sched_engine>
100614c6:	e12e      	b.n	10061726 <LL_eadv_EauxIsr+0x296>
100614c8:	2e01      	cmp	r6, #1
100614ca:	d004      	beq.n	100614d6 <LL_eadv_EauxIsr+0x46>
100614cc:	6838      	ldr	r0, [r7, #0]
100614ce:	f7e4 fc2d 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
100614d2:	2800      	cmp	r0, #0
100614d4:	d0f2      	beq.n	100614bc <LL_eadv_EauxIsr+0x2c>
100614d6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
100614d8:	462e      	mov	r6, r5
100614da:	3698      	adds	r6, #152	@ 0x98
100614dc:	6838      	ldr	r0, [r7, #0]
100614de:	f7e4 fc0e 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
100614e2:	9607      	str	r6, [sp, #28]
100614e4:	8bb2      	ldrh	r2, [r6, #28]
100614e6:	49b3      	ldr	r1, [pc, #716]	@ (100617b4 <__arm_cp.67_2>)
100614e8:	428a      	cmp	r2, r1
100614ea:	d122      	bne.n	10061532 <LL_eadv_EauxIsr+0xa2>
100614ec:	9006      	str	r0, [sp, #24]
100614ee:	462e      	mov	r6, r5
100614f0:	6838      	ldr	r0, [r7, #0]
100614f2:	f7e4 fc1b 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
100614f6:	2800      	cmp	r0, #0
100614f8:	d017      	beq.n	1006152a <LL_eadv_EauxIsr+0x9a>
100614fa:	a80a      	add	r0, sp, #40	@ 0x28
100614fc:	2500      	movs	r5, #0
100614fe:	7005      	strb	r5, [r0, #0]
10061500:	7e60      	ldrb	r0, [r4, #25]
10061502:	f7e5 f803 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
10061506:	6d36      	ldr	r6, [r6, #80]	@ 0x50
10061508:	2094      	movs	r0, #148	@ 0x94
1006150a:	4629      	mov	r1, r5
1006150c:	462a      	mov	r2, r5
1006150e:	f7e4 fade 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
10061512:	4601      	mov	r1, r0
10061514:	4630      	mov	r0, r6
10061516:	f7e4 fd47 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
1006151a:	7be0      	ldrb	r0, [r4, #15]
1006151c:	1e40      	subs	r0, r0, #1
1006151e:	2802      	cmp	r0, #2
10061520:	d31a      	bcc.n	10061558 <LL_eadv_EauxIsr+0xc8>
10061522:	207d      	movs	r0, #125	@ 0x7d
10061524:	0081      	lsls	r1, r0, #2
10061526:	31fa      	adds	r1, #250	@ 0xfa
10061528:	e017      	b.n	1006155a <LL_eadv_EauxIsr+0xca>
1006152a:	9807      	ldr	r0, [sp, #28]
1006152c:	8b82      	ldrh	r2, [r0, #28]
1006152e:	4635      	mov	r5, r6
10061530:	9806      	ldr	r0, [sp, #24]
10061532:	462f      	mov	r7, r5
10061534:	37db      	adds	r7, #219	@ 0xdb
10061536:	49a0      	ldr	r1, [pc, #640]	@ (100617b8 <__arm_cp.67_3>)
10061538:	1851      	adds	r1, r2, r1
1006153a:	2906      	cmp	r1, #6
1006153c:	462e      	mov	r6, r5
1006153e:	d814      	bhi.n	1006156a <LL_eadv_EauxIsr+0xda>
10061540:	4479      	add	r1, pc
10061542:	7909      	ldrb	r1, [r1, #4]
10061544:	0049      	lsls	r1, r1, #1
10061546:	448f      	add	pc, r1
10061548:	60101003 	.word	0x60101003
1006154c:	00891073 	.word	0x00891073
10061550:	4630      	mov	r0, r6
10061552:	f7ed fc47 	bl	1004ede4 <LL_eadv_EauxIsr_connect_response_sent_ucfg>
10061556:	e0e2      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
10061558:	2146      	movs	r1, #70	@ 0x46
1006155a:	9809      	ldr	r0, [sp, #36]	@ 0x24
1006155c:	6d00      	ldr	r0, [r0, #80]	@ 0x50
1006155e:	3014      	adds	r0, #20
10061560:	f7e4 fd69 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
10061564:	f7e4 fb32 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10061568:	e0d9      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
1006156a:	2800      	cmp	r0, #0
1006156c:	d100      	bne.n	10061570 <LL_eadv_EauxIsr+0xe0>
1006156e:	e0d3      	b.n	10061718 <LL_eadv_EauxIsr+0x288>
10061570:	6d30      	ldr	r0, [r6, #80]	@ 0x50
10061572:	3014      	adds	r0, #20
10061574:	f7e4 fc17 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
10061578:	4605      	mov	r5, r0
1006157a:	7800      	ldrb	r0, [r0, #0]
1006157c:	230f      	movs	r3, #15
1006157e:	4003      	ands	r3, r0
10061580:	7868      	ldrb	r0, [r5, #1]
10061582:	2b05      	cmp	r3, #5
10061584:	d002      	beq.n	1006158c <LL_eadv_EauxIsr+0xfc>
10061586:	2b03      	cmp	r3, #3
10061588:	d000      	beq.n	1006158c <LL_eadv_EauxIsr+0xfc>
1006158a:	e0c8      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
1006158c:	2822      	cmp	r0, #34	@ 0x22
1006158e:	d900      	bls.n	10061592 <LL_eadv_EauxIsr+0x102>
10061590:	e0c5      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
10061592:	9703      	str	r7, [sp, #12]
10061594:	1c82      	adds	r2, r0, #2
10061596:	4630      	mov	r0, r6
10061598:	30dc      	adds	r0, #220	@ 0xdc
1006159a:	4f88      	ldr	r7, [pc, #544]	@ (100617bc <__arm_cp.67_4>)
1006159c:	4629      	mov	r1, r5
1006159e:	9305      	str	r3, [sp, #20]
100615a0:	47b8      	blx	r7
100615a2:	9f08      	ldr	r7, [sp, #32]
100615a4:	9710      	str	r7, [sp, #64]	@ 0x40
100615a6:	970f      	str	r7, [sp, #60]	@ 0x3c
100615a8:	7828      	ldrb	r0, [r5, #0]
100615aa:	09c0      	lsrs	r0, r0, #7
100615ac:	a90f      	add	r1, sp, #60	@ 0x3c
100615ae:	7008      	strb	r0, [r1, #0]
100615b0:	1c48      	adds	r0, r1, #1
100615b2:	4629      	mov	r1, r5
100615b4:	3108      	adds	r1, #8
100615b6:	2206      	movs	r2, #6
100615b8:	9204      	str	r2, [sp, #16]
100615ba:	4b80      	ldr	r3, [pc, #512]	@ (100617bc <__arm_cp.67_4>)
100615bc:	4798      	blx	r3
100615be:	970e      	str	r7, [sp, #56]	@ 0x38
100615c0:	970d      	str	r7, [sp, #52]	@ 0x34
100615c2:	7828      	ldrb	r0, [r5, #0]
100615c4:	0640      	lsls	r0, r0, #25
100615c6:	0fc0      	lsrs	r0, r0, #31
100615c8:	a90d      	add	r1, sp, #52	@ 0x34
100615ca:	9106      	str	r1, [sp, #24]
100615cc:	7008      	strb	r0, [r1, #0]
100615ce:	1c48      	adds	r0, r1, #1
100615d0:	1ca9      	adds	r1, r5, #2
100615d2:	9a04      	ldr	r2, [sp, #16]
100615d4:	4b79      	ldr	r3, [pc, #484]	@ (100617bc <__arm_cp.67_4>)
100615d6:	4798      	blx	r3
100615d8:	7ae3      	ldrb	r3, [r4, #11]
100615da:	7822      	ldrb	r2, [r4, #0]
100615dc:	6d30      	ldr	r0, [r6, #80]	@ 0x50
100615de:	4601      	mov	r1, r0
100615e0:	3130      	adds	r1, #48	@ 0x30
100615e2:	3028      	adds	r0, #40	@ 0x28
100615e4:	4635      	mov	r5, r6
100615e6:	3584      	adds	r5, #132	@ 0x84
100615e8:	9500      	str	r5, [sp, #0]
100615ea:	9001      	str	r0, [sp, #4]
100615ec:	9102      	str	r1, [sp, #8]
100615ee:	9806      	ldr	r0, [sp, #24]
100615f0:	9905      	ldr	r1, [sp, #20]
100615f2:	460d      	mov	r5, r1
100615f4:	f007 fd1c 	bl	10069030 <llc_check_sreq_or_creq_tx_addr_ucfg_weak>
100615f8:	6d31      	ldr	r1, [r6, #80]	@ 0x50
100615fa:	2228      	movs	r2, #40	@ 0x28
100615fc:	9206      	str	r2, [sp, #24]
100615fe:	548f      	strb	r7, [r1, r2]
10061600:	0841      	lsrs	r1, r0, #1
10061602:	297e      	cmp	r1, #126	@ 0x7e
10061604:	d856      	bhi.n	100616b4 <LL_eadv_EauxIsr+0x224>
10061606:	4601      	mov	r1, r0
10061608:	e055      	b.n	100616b6 <LL_eadv_EauxIsr+0x226>
1006160a:	6d30      	ldr	r0, [r6, #80]	@ 0x50
1006160c:	f7e4 fcb2 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10061610:	6d35      	ldr	r5, [r6, #80]	@ 0x50
10061612:	207d      	movs	r0, #125	@ 0x7d
10061614:	0080      	lsls	r0, r0, #2
10061616:	2102      	movs	r1, #2
10061618:	2201      	movs	r2, #1
1006161a:	f7e4 fa58 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
1006161e:	4601      	mov	r1, r0
10061620:	4628      	mov	r0, r5
10061622:	f7e4 fcc1 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
10061626:	2006      	movs	r0, #6
10061628:	7038      	strb	r0, [r7, #0]
1006162a:	7f61      	ldrb	r1, [r4, #29]
1006162c:	7721      	strb	r1, [r4, #28]
1006162e:	e024      	b.n	1006167a <LL_eadv_EauxIsr+0x1ea>
10061630:	f7e3 faed 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10061634:	6d30      	ldr	r0, [r6, #80]	@ 0x50
10061636:	f7e4 fc9d 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
1006163a:	6d35      	ldr	r5, [r6, #80]	@ 0x50
1006163c:	2094      	movs	r0, #148	@ 0x94
1006163e:	2100      	movs	r1, #0
10061640:	460a      	mov	r2, r1
10061642:	f7e4 fa44 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
10061646:	4601      	mov	r1, r0
10061648:	4628      	mov	r0, r5
1006164a:	f7e4 fcad 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
1006164e:	8860      	ldrh	r0, [r4, #2]
10061650:	1e40      	subs	r0, r0, #1
10061652:	8060      	strh	r0, [r4, #2]
10061654:	7e60      	ldrb	r0, [r4, #25]
10061656:	f000 ff23 	bl	100624a0 <LL_sched_engine>
1006165a:	e060      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
1006165c:	7f60      	ldrb	r0, [r4, #29]
1006165e:	7720      	strb	r0, [r4, #28]
10061660:	6d35      	ldr	r5, [r6, #80]	@ 0x50
10061662:	207d      	movs	r0, #125	@ 0x7d
10061664:	0080      	lsls	r0, r0, #2
10061666:	2102      	movs	r1, #2
10061668:	2201      	movs	r2, #1
1006166a:	f7e4 fa30 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
1006166e:	4601      	mov	r1, r0
10061670:	4628      	mov	r0, r5
10061672:	f7e4 fc99 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
10061676:	2004      	movs	r0, #4
10061678:	7038      	strb	r0, [r7, #0]
1006167a:	4637      	mov	r7, r6
1006167c:	ae0c      	add	r6, sp, #48	@ 0x30
1006167e:	ab0b      	add	r3, sp, #44	@ 0x2c
10061680:	4639      	mov	r1, r7
10061682:	4632      	mov	r2, r6
10061684:	f000 f8da 	bl	1006183c <llc_eadv_get_payload_length_and_extended_header_flags>
10061688:	4605      	mov	r5, r0
1006168a:	7831      	ldrb	r1, [r6, #0]
1006168c:	7be0      	ldrb	r0, [r4, #15]
1006168e:	2200      	movs	r2, #0
10061690:	f7fb faae 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
10061694:	30d0      	adds	r0, #208	@ 0xd0
10061696:	9907      	ldr	r1, [sp, #28]
10061698:	6008      	str	r0, [r1, #0]
1006169a:	4638      	mov	r0, r7
1006169c:	f000 fa80 	bl	10061ba0 <LL_eadv_Eaux_Blue_configure_in_ISR>
100616a0:	4638      	mov	r0, r7
100616a2:	f7ff fb1f 	bl	10060ce4 <LL_eadv_EauxCreateSlot>
100616a6:	2d00      	cmp	r5, #0
100616a8:	d139      	bne.n	1006171e <LL_eadv_EauxIsr+0x28e>
100616aa:	4842      	ldr	r0, [pc, #264]	@ (100617b4 <__arm_cp.67_2>)
100616ac:	1dc0      	adds	r0, r0, #7
100616ae:	9907      	ldr	r1, [sp, #28]
100616b0:	8388      	strh	r0, [r1, #28]
100616b2:	e034      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
100616b4:	2101      	movs	r1, #1
100616b6:	6d32      	ldr	r2, [r6, #80]	@ 0x50
100616b8:	9f06      	ldr	r7, [sp, #24]
100616ba:	5dd3      	ldrb	r3, [r2, r7]
100616bc:	430b      	orrs	r3, r1
100616be:	55d3      	strb	r3, [r2, r7]
100616c0:	6f71      	ldr	r1, [r6, #116]	@ 0x74
100616c2:	680a      	ldr	r2, [r1, #0]
100616c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100616c6:	429a      	cmp	r2, r3
100616c8:	d111      	bne.n	100616ee <LL_eadv_EauxIsr+0x25e>
100616ca:	6849      	ldr	r1, [r1, #4]
100616cc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
100616ce:	4291      	cmp	r1, r2
100616d0:	d10d      	bne.n	100616ee <LL_eadv_EauxIsr+0x25e>
100616d2:	4602      	mov	r2, r0
100616d4:	3aff      	subs	r2, #255	@ 0xff
100616d6:	1e51      	subs	r1, r2, #1
100616d8:	418a      	sbcs	r2, r1
100616da:	9208      	str	r2, [sp, #32]
100616dc:	2d03      	cmp	r5, #3
100616de:	d106      	bne.n	100616ee <LL_eadv_EauxIsr+0x25e>
100616e0:	28ff      	cmp	r0, #255	@ 0xff
100616e2:	d004      	beq.n	100616ee <LL_eadv_EauxIsr+0x25e>
100616e4:	8820      	ldrh	r0, [r4, #0]
100616e6:	0780      	lsls	r0, r0, #30
100616e8:	d420      	bmi.n	1006172c <LL_eadv_EauxIsr+0x29c>
100616ea:	2001      	movs	r0, #1
100616ec:	9008      	str	r0, [sp, #32]
100616ee:	8820      	ldrh	r0, [r4, #0]
100616f0:	07c0      	lsls	r0, r0, #31
100616f2:	d011      	beq.n	10061718 <LL_eadv_EauxIsr+0x288>
100616f4:	2d05      	cmp	r5, #5
100616f6:	d10f      	bne.n	10061718 <LL_eadv_EauxIsr+0x288>
100616f8:	6d31      	ldr	r1, [r6, #80]	@ 0x50
100616fa:	6a88      	ldr	r0, [r1, #40]	@ 0x28
100616fc:	6ac9      	ldr	r1, [r1, #44]	@ 0x2c
100616fe:	f7f4 ffed 	bl	100566dc <llc_conn_list_search_address>
10061702:	4241      	negs	r1, r0
10061704:	4141      	adcs	r1, r0
10061706:	9808      	ldr	r0, [sp, #32]
10061708:	4001      	ands	r1, r0
1006170a:	2901      	cmp	r1, #1
1006170c:	d104      	bne.n	10061718 <LL_eadv_EauxIsr+0x288>
1006170e:	a90a      	add	r1, sp, #40	@ 0x28
10061710:	4630      	mov	r0, r6
10061712:	f7ed fb73 	bl	1004edfc <LL_eadv_EauxIsr_connect_request_received_ucfg>
10061716:	e002      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
10061718:	4630      	mov	r0, r6
1006171a:	f7ff fc03 	bl	10060f24 <LL_eadv_EauxIsr_process_rx_timeout_or_unexpected_rx_pdu>
1006171e:	f7ee fdec 	bl	100502fa <log_notify_us_flush_ucfg_weak>
10061722:	a80a      	add	r0, sp, #40	@ 0x28
10061724:	7805      	ldrb	r5, [r0, #0]
10061726:	4628      	mov	r0, r5
10061728:	b011      	add	sp, #68	@ 0x44
1006172a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006172c:	a80a      	add	r0, sp, #40	@ 0x28
1006172e:	2100      	movs	r1, #0
10061730:	7001      	strb	r1, [r0, #0]
10061732:	6d30      	ldr	r0, [r6, #80]	@ 0x50
10061734:	f7e4 fb2a 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
10061738:	2005      	movs	r0, #5
1006173a:	9903      	ldr	r1, [sp, #12]
1006173c:	7008      	strb	r0, [r1, #0]
1006173e:	aa0c      	add	r2, sp, #48	@ 0x30
10061740:	ab0b      	add	r3, sp, #44	@ 0x2c
10061742:	4631      	mov	r1, r6
10061744:	f000 f87a 	bl	1006183c <llc_eadv_get_payload_length_and_extended_header_flags>
10061748:	2800      	cmp	r0, #0
1006174a:	d011      	beq.n	10061770 <LL_eadv_EauxIsr+0x2e0>
1006174c:	4819      	ldr	r0, [pc, #100]	@ (100617b4 <__arm_cp.67_2>)
1006174e:	1d80      	adds	r0, r0, #6
10061750:	9d07      	ldr	r5, [sp, #28]
10061752:	83a8      	strh	r0, [r5, #28]
10061754:	9809      	ldr	r0, [sp, #36]	@ 0x24
10061756:	6d06      	ldr	r6, [r0, #80]	@ 0x50
10061758:	207d      	movs	r0, #125	@ 0x7d
1006175a:	0080      	lsls	r0, r0, #2
1006175c:	2102      	movs	r1, #2
1006175e:	2201      	movs	r2, #1
10061760:	f7e4 f9b5 	bl	10045ace <BLEPLAT_CNTR_GetTimer2TimeoutForIfs>
10061764:	4601      	mov	r1, r0
10061766:	4630      	mov	r0, r6
10061768:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1006176a:	f7e4 fc1d 	bl	10045fa8 <BLEPLAT_CNTR_PacketSetTimeout>
1006176e:	e003      	b.n	10061778 <LL_eadv_EauxIsr+0x2e8>
10061770:	4810      	ldr	r0, [pc, #64]	@ (100617b4 <__arm_cp.67_2>)
10061772:	1dc0      	adds	r0, r0, #7
10061774:	9d07      	ldr	r5, [sp, #28]
10061776:	83a8      	strh	r0, [r5, #28]
10061778:	f7e4 fa28 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
1006177c:	a80c      	add	r0, sp, #48	@ 0x30
1006177e:	7801      	ldrb	r1, [r0, #0]
10061780:	7be0      	ldrb	r0, [r4, #15]
10061782:	2200      	movs	r2, #0
10061784:	f7fb fa34 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
10061788:	30d0      	adds	r0, #208	@ 0xd0
1006178a:	6028      	str	r0, [r5, #0]
1006178c:	4630      	mov	r0, r6
1006178e:	f7ff faa9 	bl	10060ce4 <LL_eadv_EauxCreateSlot>
10061792:	7d60      	ldrb	r0, [r4, #21]
10061794:	2801      	cmp	r0, #1
10061796:	d1c2      	bne.n	1006171e <LL_eadv_EauxIsr+0x28e>
10061798:	6d32      	ldr	r2, [r6, #80]	@ 0x50
1006179a:	9806      	ldr	r0, [sp, #24]
1006179c:	5c11      	ldrb	r1, [r2, r0]
1006179e:	79a0      	ldrb	r0, [r4, #6]
100617a0:	3228      	adds	r2, #40	@ 0x28
100617a2:	1c52      	adds	r2, r2, #1
100617a4:	f7ff f97c 	bl	10060aa0 <hci_le_scan_request_received_event_push>
100617a8:	e7b9      	b.n	1006171e <LL_eadv_EauxIsr+0x28e>
100617aa:	46c0      	nop			@ (mov r8, r8)

100617ac <__arm_cp.67_0>:
100617ac:	20000894 	.word	0x20000894

100617b0 <__arm_cp.67_1>:
100617b0:	20000890 	.word	0x20000890

100617b4 <__arm_cp.67_2>:
100617b4:	0000fff6 	.word	0x0000fff6

100617b8 <__arm_cp.67_3>:
100617b8:	ffff0007 	.word	0xffff0007

100617bc <__arm_cp.67_4>:
100617bc:	100449a5 	.word	0x100449a5

100617c0 <EADV_start_request_radio_tasks>:
100617c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100617c2:	4604      	mov	r4, r0
100617c4:	20d8      	movs	r0, #216	@ 0xd8
100617c6:	21ff      	movs	r1, #255	@ 0xff
100617c8:	5421      	strb	r1, [r4, r0]
100617ca:	20b8      	movs	r0, #184	@ 0xb8
100617cc:	5a25      	ldrh	r5, [r4, r0]
100617ce:	2701      	movs	r7, #1
100617d0:	402f      	ands	r7, r5
100617d2:	4626      	mov	r6, r4
100617d4:	36d8      	adds	r6, #216	@ 0xd8
100617d6:	2f00      	cmp	r7, #0
100617d8:	d004      	beq.n	100617e4 <EADV_start_request_radio_tasks+0x24>
100617da:	f7f5 ffdb 	bl	10057794 <llc_conn_reserve_conn_idx>
100617de:	7030      	strb	r0, [r6, #0]
100617e0:	28ff      	cmp	r0, #255	@ 0xff
100617e2:	d022      	beq.n	1006182a <EADV_start_request_radio_tasks+0x6a>
100617e4:	34b8      	adds	r4, #184	@ 0xb8
100617e6:	f001 f937 	bl	10062a58 <LL_sched_reserve_taskslot>
100617ea:	7620      	strb	r0, [r4, #24]
100617ec:	28ff      	cmp	r0, #255	@ 0xff
100617ee:	d013      	beq.n	10061818 <EADV_start_request_radio_tasks+0x58>
100617f0:	2100      	movs	r1, #0
100617f2:	06e8      	lsls	r0, r5, #27
100617f4:	d41a      	bmi.n	1006182c <EADV_start_request_radio_tasks+0x6c>
100617f6:	460d      	mov	r5, r1
100617f8:	f001 f92e 	bl	10062a58 <LL_sched_reserve_taskslot>
100617fc:	4629      	mov	r1, r5
100617fe:	7660      	strb	r0, [r4, #25]
10061800:	28ff      	cmp	r0, #255	@ 0xff
10061802:	d113      	bne.n	1006182c <EADV_start_request_radio_tasks+0x6c>
10061804:	2f00      	cmp	r7, #0
10061806:	d002      	beq.n	1006180e <EADV_start_request_radio_tasks+0x4e>
10061808:	7830      	ldrb	r0, [r6, #0]
1006180a:	f7f5 fc21 	bl	10057050 <llc_conn_release_conn_idx>
1006180e:	7e20      	ldrb	r0, [r4, #24]
10061810:	f001 f944 	bl	10062a9c <LL_sched_release_taskslot>
10061814:	2107      	movs	r1, #7
10061816:	e009      	b.n	1006182c <EADV_start_request_radio_tasks+0x6c>
10061818:	2107      	movs	r1, #7
1006181a:	2f00      	cmp	r7, #0
1006181c:	d006      	beq.n	1006182c <EADV_start_request_radio_tasks+0x6c>
1006181e:	7830      	ldrb	r0, [r6, #0]
10061820:	460c      	mov	r4, r1
10061822:	f7f5 fc15 	bl	10057050 <llc_conn_release_conn_idx>
10061826:	4621      	mov	r1, r4
10061828:	e000      	b.n	1006182c <EADV_start_request_radio_tasks+0x6c>
1006182a:	210c      	movs	r1, #12
1006182c:	4608      	mov	r0, r1
1006182e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10061830 <llc_get_channel_sel_algo2_enabled>:
10061830:	b580      	push	{r7, lr}
10061832:	f000 fd45 	bl	100622c0 <llc_get_linkms_cntxt_p>
10061836:	214e      	movs	r1, #78	@ 0x4e
10061838:	5c40      	ldrb	r0, [r0, r1]
1006183a:	bd80      	pop	{r7, pc}

1006183c <llc_eadv_get_payload_length_and_extended_header_flags>:
1006183c:	b5f0      	push	{r4, r5, r6, r7, lr}
1006183e:	b08f      	sub	sp, #60	@ 0x3c
10061840:	461f      	mov	r7, r3
10061842:	460d      	mov	r5, r1
10061844:	4604      	mov	r4, r0
10061846:	20fe      	movs	r0, #254	@ 0xfe
10061848:	4020      	ands	r0, r4
1006184a:	2808      	cmp	r0, #8
1006184c:	d103      	bne.n	10061856 <llc_eadv_get_payload_length_and_extended_header_flags+0x1a>
1006184e:	6fae      	ldr	r6, [r5, #120]	@ 0x78
10061850:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
10061852:	3608      	adds	r6, #8
10061854:	e00d      	b.n	10061872 <llc_eadv_get_payload_length_and_extended_header_flags+0x36>
10061856:	4620      	mov	r0, r4
10061858:	380a      	subs	r0, #10
1006185a:	b2c0      	uxtb	r0, r0
1006185c:	2880      	cmp	r0, #128	@ 0x80
1006185e:	d80a      	bhi.n	10061876 <llc_eadv_get_payload_length_and_extended_header_flags+0x3a>
10061860:	ae0a      	add	r6, sp, #40	@ 0x28
10061862:	4628      	mov	r0, r5
10061864:	4621      	mov	r1, r4
10061866:	9207      	str	r2, [sp, #28]
10061868:	4632      	mov	r2, r6
1006186a:	f007 ffad 	bl	100697c8 <llc_padv_wr_prepare_data_struc_from_packet_type>
1006186e:	9a07      	ldr	r2, [sp, #28]
10061870:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
10061872:	2301      	movs	r3, #1
10061874:	e009      	b.n	1006188a <llc_eadv_get_payload_length_and_extended_header_flags+0x4e>
10061876:	1f60      	subs	r0, r4, #5
10061878:	b2c0      	uxtb	r0, r0
1006187a:	2802      	cmp	r0, #2
1006187c:	d301      	bcc.n	10061882 <llc_eadv_get_payload_length_and_extended_header_flags+0x46>
1006187e:	2028      	movs	r0, #40	@ 0x28
10061880:	e000      	b.n	10061884 <llc_eadv_get_payload_length_and_extended_header_flags+0x48>
10061882:	203c      	movs	r0, #60	@ 0x3c
10061884:	182e      	adds	r6, r5, r0
10061886:	2300      	movs	r3, #0
10061888:	4628      	mov	r0, r5
1006188a:	21b8      	movs	r1, #184	@ 0xb8
1006188c:	5a41      	ldrh	r1, [r0, r1]
1006188e:	a808      	add	r0, sp, #32
10061890:	9005      	str	r0, [sp, #20]
10061892:	a809      	add	r0, sp, #36	@ 0x24
10061894:	9004      	str	r0, [sp, #16]
10061896:	9703      	str	r7, [sp, #12]
10061898:	9202      	str	r2, [sp, #8]
1006189a:	9601      	str	r6, [sp, #4]
1006189c:	9500      	str	r5, [sp, #0]
1006189e:	2200      	movs	r2, #0
100618a0:	4620      	mov	r0, r4
100618a2:	f000 f803 	bl	100618ac <llc_eadv_get_packet_information>
100618a6:	b00f      	add	sp, #60	@ 0x3c
100618a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

100618ac <llc_eadv_get_packet_information>:
100618ac:	b5f0      	push	{r4, r5, r6, r7, lr}
100618ae:	b087      	sub	sp, #28
100618b0:	461e      	mov	r6, r3
100618b2:	4614      	mov	r4, r2
100618b4:	9005      	str	r0, [sp, #20]
100618b6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
100618b8:	2b00      	cmp	r3, #0
100618ba:	d003      	beq.n	100618c4 <llc_eadv_get_packet_information+0x18>
100618bc:	6fd0      	ldr	r0, [r2, #124]	@ 0x7c
100618be:	4617      	mov	r7, r2
100618c0:	4615      	mov	r5, r2
100618c2:	e002      	b.n	100618ca <llc_eadv_get_packet_information+0x1e>
100618c4:	2500      	movs	r5, #0
100618c6:	4617      	mov	r7, r2
100618c8:	4610      	mov	r0, r2
100618ca:	22c7      	movs	r2, #199	@ 0xc7
100618cc:	5c82      	ldrb	r2, [r0, r2]
100618ce:	2301      	movs	r3, #1
100618d0:	9805      	ldr	r0, [sp, #20]
100618d2:	9306      	str	r3, [sp, #24]
100618d4:	f000 f8e6 	bl	10061aa4 <llc_eadv_get_extended_header_flags_with_data_ind>
100618d8:	2c00      	cmp	r4, #0
100618da:	d001      	beq.n	100618e0 <llc_eadv_get_packet_information+0x34>
100618dc:	4604      	mov	r4, r0
100618de:	e002      	b.n	100618e6 <llc_eadv_get_packet_information+0x3a>
100618e0:	2120      	movs	r1, #32
100618e2:	4604      	mov	r4, r0
100618e4:	438c      	bics	r4, r1
100618e6:	2e00      	cmp	r6, #0
100618e8:	d011      	beq.n	1006190e <llc_eadv_get_packet_information+0x62>
100618ea:	356d      	adds	r5, #109	@ 0x6d
100618ec:	78a9      	ldrb	r1, [r5, #2]
100618ee:	2900      	cmp	r1, #0
100618f0:	d004      	beq.n	100618fc <llc_eadv_get_packet_information+0x50>
100618f2:	79e9      	ldrb	r1, [r5, #7]
100618f4:	424b      	negs	r3, r1
100618f6:	414b      	adcs	r3, r1
100618f8:	9306      	str	r3, [sp, #24]
100618fa:	e003      	b.n	10061904 <llc_eadv_get_packet_information+0x58>
100618fc:	2104      	movs	r1, #4
100618fe:	438c      	bics	r4, r1
10061900:	2101      	movs	r1, #1
10061902:	9106      	str	r1, [sp, #24]
10061904:	7829      	ldrb	r1, [r5, #0]
10061906:	2900      	cmp	r1, #0
10061908:	d101      	bne.n	1006190e <llc_eadv_get_packet_information+0x62>
1006190a:	2108      	movs	r1, #8
1006190c:	438c      	bics	r4, r1
1006190e:	06c5      	lsls	r5, r0, #27
10061910:	b2e0      	uxtb	r0, r4
10061912:	4631      	mov	r1, r6
10061914:	463a      	mov	r2, r7
10061916:	f000 f853 	bl	100619c0 <llc_eadv_calculate_extended_header_length>
1006191a:	9003      	str	r0, [sp, #12]
1006191c:	9806      	ldr	r0, [sp, #24]
1006191e:	2800      	cmp	r0, #0
10061920:	4621      	mov	r1, r4
10061922:	d002      	beq.n	1006192a <llc_eadv_get_packet_information+0x7e>
10061924:	2010      	movs	r0, #16
10061926:	4621      	mov	r1, r4
10061928:	4381      	bics	r1, r0
1006192a:	0fed      	lsrs	r5, r5, #31
1006192c:	9104      	str	r1, [sp, #16]
1006192e:	b2c8      	uxtb	r0, r1
10061930:	4631      	mov	r1, r6
10061932:	463a      	mov	r2, r7
10061934:	f000 f844 	bl	100619c0 <llc_eadv_calculate_extended_header_length>
10061938:	05e1      	lsls	r1, r4, #23
1006193a:	2200      	movs	r2, #0
1006193c:	2900      	cmp	r1, #0
1006193e:	d401      	bmi.n	10061944 <llc_eadv_get_packet_information+0x98>
10061940:	9501      	str	r5, [sp, #4]
10061942:	e012      	b.n	1006196a <llc_eadv_get_packet_information+0xbe>
10061944:	990d      	ldr	r1, [sp, #52]	@ 0x34
10061946:	888b      	ldrh	r3, [r1, #4]
10061948:	88c9      	ldrh	r1, [r1, #6]
1006194a:	1ac9      	subs	r1, r1, r3
1006194c:	040b      	lsls	r3, r1, #16
1006194e:	d009      	beq.n	10061964 <llc_eadv_get_packet_information+0xb8>
10061950:	22fe      	movs	r2, #254	@ 0xfe
10061952:	1a13      	subs	r3, r2, r0
10061954:	b28d      	uxth	r5, r1
10061956:	42ab      	cmp	r3, r5
10061958:	da29      	bge.n	100619ae <llc_eadv_get_packet_information+0x102>
1006195a:	9903      	ldr	r1, [sp, #12]
1006195c:	1a51      	subs	r1, r2, r1
1006195e:	2201      	movs	r2, #1
10061960:	9201      	str	r2, [sp, #4]
10061962:	e003      	b.n	1006196c <llc_eadv_get_packet_information+0xc0>
10061964:	9501      	str	r5, [sp, #4]
10061966:	4915      	ldr	r1, [pc, #84]	@ (100619bc <__arm_cp.73_0>)
10061968:	400c      	ands	r4, r1
1006196a:	4611      	mov	r1, r2
1006196c:	9402      	str	r4, [sp, #8]
1006196e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10061970:	b28a      	uxth	r2, r1
10061972:	4255      	negs	r5, r2
10061974:	4155      	adcs	r5, r2
10061976:	9a05      	ldr	r2, [sp, #20]
10061978:	1e92      	subs	r2, r2, #2
1006197a:	1e56      	subs	r6, r2, #1
1006197c:	41b2      	sbcs	r2, r6
1006197e:	402a      	ands	r2, r5
10061980:	d100      	bne.n	10061984 <llc_eadv_get_packet_information+0xd8>
10061982:	9803      	ldr	r0, [sp, #12]
10061984:	9d11      	ldr	r5, [sp, #68]	@ 0x44
10061986:	9e10      	ldr	r6, [sp, #64]	@ 0x40
10061988:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
1006198a:	180c      	adds	r4, r1, r0
1006198c:	1c64      	adds	r4, r4, #1
1006198e:	701c      	strb	r4, [r3, #0]
10061990:	2a00      	cmp	r2, #0
10061992:	9b04      	ldr	r3, [sp, #16]
10061994:	d100      	bne.n	10061998 <llc_eadv_get_packet_information+0xec>
10061996:	9b02      	ldr	r3, [sp, #8]
10061998:	803b      	strh	r3, [r7, #0]
1006199a:	8030      	strh	r0, [r6, #0]
1006199c:	7029      	strb	r1, [r5, #0]
1006199e:	9906      	ldr	r1, [sp, #24]
100619a0:	4248      	negs	r0, r1
100619a2:	4148      	adcs	r0, r1
100619a4:	2a00      	cmp	r2, #0
100619a6:	d100      	bne.n	100619aa <llc_eadv_get_packet_information+0xfe>
100619a8:	9801      	ldr	r0, [sp, #4]
100619aa:	b007      	add	sp, #28
100619ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
100619ae:	9a06      	ldr	r2, [sp, #24]
100619b0:	4253      	negs	r3, r2
100619b2:	4153      	adcs	r3, r2
100619b4:	9301      	str	r3, [sp, #4]
100619b6:	9c04      	ldr	r4, [sp, #16]
100619b8:	9003      	str	r0, [sp, #12]
100619ba:	e7d7      	b.n	1006196c <llc_eadv_get_packet_information+0xc0>

100619bc <__arm_cp.73_0>:
100619bc:	0000feff 	.word	0x0000feff

100619c0 <llc_eadv_calculate_extended_header_length>:
100619c0:	b510      	push	{r4, lr}
100619c2:	07c3      	lsls	r3, r0, #31
100619c4:	d001      	beq.n	100619ca <llc_eadv_calculate_extended_header_length+0xa>
100619c6:	2307      	movs	r3, #7
100619c8:	e000      	b.n	100619cc <llc_eadv_calculate_extended_header_length+0xc>
100619ca:	2301      	movs	r3, #1
100619cc:	0784      	lsls	r4, r0, #30
100619ce:	d500      	bpl.n	100619d2 <llc_eadv_calculate_extended_header_length+0x12>
100619d0:	1d9b      	adds	r3, r3, #6
100619d2:	0744      	lsls	r4, r0, #29
100619d4:	0fe4      	lsrs	r4, r4, #31
100619d6:	191b      	adds	r3, r3, r4
100619d8:	0704      	lsls	r4, r0, #28
100619da:	d500      	bpl.n	100619de <llc_eadv_calculate_extended_header_length+0x1e>
100619dc:	1c9b      	adds	r3, r3, #2
100619de:	06c4      	lsls	r4, r0, #27
100619e0:	d500      	bpl.n	100619e4 <llc_eadv_calculate_extended_header_length+0x24>
100619e2:	1cdb      	adds	r3, r3, #3
100619e4:	0684      	lsls	r4, r0, #26
100619e6:	d500      	bpl.n	100619ea <llc_eadv_calculate_extended_header_length+0x2a>
100619e8:	3312      	adds	r3, #18
100619ea:	0644      	lsls	r4, r0, #25
100619ec:	0fe4      	lsrs	r4, r4, #31
100619ee:	191c      	adds	r4, r3, r4
100619f0:	b240      	sxtb	r0, r0
100619f2:	2800      	cmp	r0, #0
100619f4:	d523      	bpl.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
100619f6:	2a00      	cmp	r2, #0
100619f8:	d021      	beq.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
100619fa:	2900      	cmp	r1, #0
100619fc:	d010      	beq.n	10061a20 <llc_eadv_calculate_extended_header_length+0x60>
100619fe:	7ad0      	ldrb	r0, [r2, #11]
10061a00:	2800      	cmp	r0, #0
10061a02:	d000      	beq.n	10061a06 <llc_eadv_calculate_extended_header_length+0x46>
10061a04:	3409      	adds	r4, #9
10061a06:	6fd0      	ldr	r0, [r2, #124]	@ 0x7c
10061a08:	21be      	movs	r1, #190	@ 0xbe
10061a0a:	5c40      	ldrb	r0, [r0, r1]
10061a0c:	f006 fc97 	bl	1006833e <llc_big_brc_get_group_descr_of_adv_ucfg_weak>
10061a10:	2800      	cmp	r0, #0
10061a12:	d014      	beq.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
10061a14:	6840      	ldr	r0, [r0, #4]
10061a16:	7f80      	ldrb	r0, [r0, #30]
10061a18:	2800      	cmp	r0, #0
10061a1a:	d00f      	beq.n	10061a3c <llc_eadv_calculate_extended_header_length+0x7c>
10061a1c:	343b      	adds	r4, #59	@ 0x3b
10061a1e:	e00e      	b.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
10061a20:	6d10      	ldr	r0, [r2, #80]	@ 0x50
10061a22:	2800      	cmp	r0, #0
10061a24:	d00b      	beq.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
10061a26:	6d40      	ldr	r0, [r0, #84]	@ 0x54
10061a28:	2800      	cmp	r0, #0
10061a2a:	d008      	beq.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
10061a2c:	7a41      	ldrb	r1, [r0, #9]
10061a2e:	2900      	cmp	r1, #0
10061a30:	d005      	beq.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
10061a32:	7a00      	ldrb	r0, [r0, #8]
10061a34:	2802      	cmp	r0, #2
10061a36:	d102      	bne.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
10061a38:	340a      	adds	r4, #10
10061a3a:	e000      	b.n	10061a3e <llc_eadv_calculate_extended_header_length+0x7e>
10061a3c:	3423      	adds	r4, #35	@ 0x23
10061a3e:	b2e0      	uxtb	r0, r4
10061a40:	bd10      	pop	{r4, pc}

10061a42 <llc_eadv_set_adi>:
10061a42:	30b6      	adds	r0, #182	@ 0xb6
10061a44:	2a00      	cmp	r2, #0
10061a46:	d100      	bne.n	10061a4a <llc_eadv_set_adi+0x8>
10061a48:	8803      	ldrh	r3, [r0, #0]
10061a4a:	7d80      	ldrb	r0, [r0, #22]
10061a4c:	700b      	strb	r3, [r1, #0]
10061a4e:	220f      	movs	r2, #15
10061a50:	0212      	lsls	r2, r2, #8
10061a52:	401a      	ands	r2, r3
10061a54:	0300      	lsls	r0, r0, #12
10061a56:	1880      	adds	r0, r0, r2
10061a58:	0a00      	lsrs	r0, r0, #8
10061a5a:	7048      	strb	r0, [r1, #1]
10061a5c:	4770      	bx	lr

10061a5e <llc_eadv_set_auxptr>:
10061a5e:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10061a60:	4615      	mov	r5, r2
10061a62:	4604      	mov	r4, r0
10061a64:	1e5e      	subs	r6, r3, #1
10061a66:	2000      	movs	r0, #0
10061a68:	2980      	cmp	r1, #128	@ 0x80
10061a6a:	4602      	mov	r2, r0
10061a6c:	d308      	bcc.n	10061a80 <llc_eadv_set_auxptr+0x22>
10061a6e:	ab01      	add	r3, sp, #4
10061a70:	466a      	mov	r2, sp
10061a72:	4608      	mov	r0, r1
10061a74:	4619      	mov	r1, r3
10061a76:	f7ff fb87 	bl	10061188 <llc_eadv_calculate_aux_ptr_offset>
10061a7a:	9800      	ldr	r0, [sp, #0]
10061a7c:	01c2      	lsls	r2, r0, #7
10061a7e:	9801      	ldr	r0, [sp, #4]
10061a80:	213f      	movs	r1, #63	@ 0x3f
10061a82:	400d      	ands	r5, r1
10061a84:	4315      	orrs	r5, r2
10061a86:	7025      	strb	r5, [r4, #0]
10061a88:	7060      	strb	r0, [r4, #1]
10061a8a:	211f      	movs	r1, #31
10061a8c:	0409      	lsls	r1, r1, #16
10061a8e:	0200      	lsls	r0, r0, #8
10061a90:	4008      	ands	r0, r1
10061a92:	2e02      	cmp	r6, #2
10061a94:	d300      	bcc.n	10061a98 <llc_eadv_set_auxptr+0x3a>
10061a96:	2602      	movs	r6, #2
10061a98:	0571      	lsls	r1, r6, #21
10061a9a:	1840      	adds	r0, r0, r1
10061a9c:	0c00      	lsrs	r0, r0, #16
10061a9e:	70a0      	strb	r0, [r4, #2]
10061aa0:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
	...

10061aa4 <llc_eadv_get_extended_header_flags_with_data_ind>:
10061aa4:	b5f0      	push	{r4, r5, r6, r7, lr}
10061aa6:	2445      	movs	r4, #69	@ 0x45
10061aa8:	00a4      	lsls	r4, r4, #2
10061aaa:	064d      	lsls	r5, r1, #25
10061aac:	0fed      	lsrs	r5, r5, #31
10061aae:	1e86      	subs	r6, r0, #2
10061ab0:	2e07      	cmp	r6, #7
10061ab2:	d80a      	bhi.n	10061aca <llc_eadv_get_extended_header_flags_with_data_ind+0x26>
10061ab4:	1d20      	adds	r0, r4, #4
10061ab6:	46c0      	nop			@ (mov r8, r8)
10061ab8:	447e      	add	r6, pc
10061aba:	7936      	ldrb	r6, [r6, #4]
10061abc:	0076      	lsls	r6, r6, #1
10061abe:	44b7      	add	pc, r6
10061ac0:	13030f0a 	.word	0x13030f0a
10061ac4:	1d191703 	.word	0x1d191703
10061ac8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061aca:	288b      	cmp	r0, #139	@ 0x8b
10061acc:	d11b      	bne.n	10061b06 <llc_eadv_get_extended_header_flags_with_data_ind+0x62>
10061ace:	2d00      	cmp	r5, #0
10061ad0:	d020      	beq.n	10061b14 <llc_eadv_get_extended_header_flags_with_data_ind+0x70>
10061ad2:	20b1      	movs	r0, #177	@ 0xb1
10061ad4:	e02b      	b.n	10061b2e <llc_eadv_get_extended_header_flags_with_data_ind+0x8a>
10061ad6:	2118      	movs	r1, #24
10061ad8:	2d00      	cmp	r5, #0
10061ada:	d11d      	bne.n	10061b18 <llc_eadv_get_extended_header_flags_with_data_ind+0x74>
10061adc:	4608      	mov	r0, r1
10061ade:	e01c      	b.n	10061b1a <llc_eadv_get_extended_header_flags_with_data_ind+0x76>
10061ae0:	0788      	lsls	r0, r1, #30
10061ae2:	d51e      	bpl.n	10061b22 <llc_eadv_get_extended_header_flags_with_data_ind+0x7e>
10061ae4:	2480      	movs	r4, #128	@ 0x80
10061ae6:	e01d      	b.n	10061b24 <llc_eadv_get_extended_header_flags_with_data_ind+0x80>
10061ae8:	2d00      	cmp	r5, #0
10061aea:	d01f      	beq.n	10061b2c <llc_eadv_get_extended_header_flags_with_data_ind+0x88>
10061aec:	20c5      	movs	r0, #197	@ 0xc5
10061aee:	e01e      	b.n	10061b2e <llc_eadv_get_extended_header_flags_with_data_ind+0x8a>
10061af0:	2003      	movs	r0, #3
10061af2:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061af4:	2b00      	cmp	r3, #0
10061af6:	d01c      	beq.n	10061b32 <llc_eadv_get_extended_header_flags_with_data_ind+0x8e>
10061af8:	2088      	movs	r0, #136	@ 0x88
10061afa:	e02d      	b.n	10061b58 <llc_eadv_get_extended_header_flags_with_data_ind+0xb4>
10061afc:	2b00      	cmp	r3, #0
10061afe:	d000      	beq.n	10061b02 <llc_eadv_get_extended_header_flags_with_data_ind+0x5e>
10061b00:	3408      	adds	r4, #8
10061b02:	4620      	mov	r0, r4
10061b04:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061b06:	380a      	subs	r0, #10
10061b08:	2880      	cmp	r0, #128	@ 0x80
10061b0a:	d822      	bhi.n	10061b52 <llc_eadv_get_extended_header_flags_with_data_ind+0xae>
10061b0c:	2b00      	cmp	r3, #0
10061b0e:	d022      	beq.n	10061b56 <llc_eadv_get_extended_header_flags_with_data_ind+0xb2>
10061b10:	2078      	movs	r0, #120	@ 0x78
10061b12:	e021      	b.n	10061b58 <llc_eadv_get_extended_header_flags_with_data_ind+0xb4>
10061b14:	2071      	movs	r0, #113	@ 0x71
10061b16:	e00a      	b.n	10061b2e <llc_eadv_get_extended_header_flags_with_data_ind+0x8a>
10061b18:	2058      	movs	r0, #88	@ 0x58
10061b1a:	2a02      	cmp	r2, #2
10061b1c:	d8d4      	bhi.n	10061ac8 <llc_eadv_get_extended_header_flags_with_data_ind+0x24>
10061b1e:	4608      	mov	r0, r1
10061b20:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061b22:	346c      	adds	r4, #108	@ 0x6c
10061b24:	2800      	cmp	r0, #0
10061b26:	d006      	beq.n	10061b36 <llc_eadv_get_extended_header_flags_with_data_ind+0x92>
10061b28:	2008      	movs	r0, #8
10061b2a:	e005      	b.n	10061b38 <llc_eadv_get_extended_header_flags_with_data_ind+0x94>
10061b2c:	2085      	movs	r0, #133	@ 0x85
10061b2e:	1820      	adds	r0, r4, r0
10061b30:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061b32:	2080      	movs	r0, #128	@ 0x80
10061b34:	e010      	b.n	10061b58 <llc_eadv_get_extended_header_flags_with_data_ind+0xb4>
10061b36:	2038      	movs	r0, #56	@ 0x38
10061b38:	084a      	lsrs	r2, r1, #1
10061b3a:	2302      	movs	r3, #2
10061b3c:	4013      	ands	r3, r2
10061b3e:	0689      	lsls	r1, r1, #26
10061b40:	0fc9      	lsrs	r1, r1, #31
10061b42:	18c9      	adds	r1, r1, r3
10061b44:	1808      	adds	r0, r1, r0
10061b46:	4320      	orrs	r0, r4
10061b48:	01a9      	lsls	r1, r5, #6
10061b4a:	4301      	orrs	r1, r0
10061b4c:	2001      	movs	r0, #1
10061b4e:	4048      	eors	r0, r1
10061b50:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061b52:	2000      	movs	r0, #0
10061b54:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061b56:	2070      	movs	r0, #112	@ 0x70
10061b58:	1821      	adds	r1, r4, r0
10061b5a:	01a8      	lsls	r0, r5, #6
10061b5c:	4308      	orrs	r0, r1
10061b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10061b60 <ext_adv_scan_enabled>:
10061b60:	2001      	movs	r0, #1
10061b62:	4770      	bx	lr

10061b64 <llc_eadv_predictable_delay>:
10061b64:	6d09      	ldr	r1, [r1, #80]	@ 0x50
10061b66:	2252      	movs	r2, #82	@ 0x52
10061b68:	5a8a      	ldrh	r2, [r1, r2]
10061b6a:	0903      	lsrs	r3, r0, #4
10061b6c:	4353      	muls	r3, r2
10061b6e:	0700      	lsls	r0, r0, #28
10061b70:	0ec0      	lsrs	r0, r0, #27
10061b72:	1808      	adds	r0, r1, r0
10061b74:	8e40      	ldrh	r0, [r0, #50]	@ 0x32
10061b76:	1818      	adds	r0, r3, r0
10061b78:	4770      	bx	lr
	...

10061b7c <EADV_Return_Random_Channel_EAUX>:
10061b7c:	b510      	push	{r4, lr}
10061b7e:	b08a      	sub	sp, #40	@ 0x28
10061b80:	4806      	ldr	r0, [pc, #24]	@ (10061b9c <__arm_cp.86_0>)
10061b82:	6800      	ldr	r0, [r0, #0]
10061b84:	219c      	movs	r1, #156	@ 0x9c
10061b86:	5841      	ldr	r1, [r0, r1]
10061b88:	3148      	adds	r1, #72	@ 0x48
10061b8a:	466c      	mov	r4, sp
10061b8c:	4620      	mov	r0, r4
10061b8e:	f7f5 ffbb 	bl	10057b08 <llc_mngm_csa2_update_remapping_table>
10061b92:	4620      	mov	r0, r4
10061b94:	f7f6 f866 	bl	10057c64 <llc_mngm_csa2_select_random_channel>
10061b98:	b00a      	add	sp, #40	@ 0x28
10061b9a:	bd10      	pop	{r4, pc}

10061b9c <__arm_cp.86_0>:
10061b9c:	20000894 	.word	0x20000894

10061ba0 <LL_eadv_Eaux_Blue_configure_in_ISR>:
10061ba0:	b5b0      	push	{r4, r5, r7, lr}
10061ba2:	4604      	mov	r4, r0
10061ba4:	20c7      	movs	r0, #199	@ 0xc7
10061ba6:	5c20      	ldrb	r0, [r4, r0]
10061ba8:	f7fb f814 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
10061bac:	4605      	mov	r5, r0
10061bae:	34c7      	adds	r4, #199	@ 0xc7
10061bb0:	7aa0      	ldrb	r0, [r4, #10]
10061bb2:	4629      	mov	r1, r5
10061bb4:	f7e4 fd37 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
10061bb8:	7aa0      	ldrb	r0, [r4, #10]
10061bba:	4629      	mov	r1, r5
10061bbc:	f7e4 fcc7 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
10061bc0:	7aa0      	ldrb	r0, [r4, #10]
10061bc2:	f7e4 fd0f 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
10061bc6:	7b61      	ldrb	r1, [r4, #13]
10061bc8:	7aa0      	ldrb	r0, [r4, #10]
10061bca:	f7e4 fc4c 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
10061bce:	f7e3 fffd 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10061bd2:	bdb0      	pop	{r4, r5, r7, pc}

10061bd4 <BLE_STACK_EndOfRadioActivityCb>:
10061bd4:	4770      	bx	lr
	...

10061bd8 <BLE_STACK_RadioHandler>:
10061bd8:	b5f0      	push	{r4, r5, r6, r7, lr}
10061bda:	b083      	sub	sp, #12
10061bdc:	4604      	mov	r4, r0
10061bde:	484c      	ldr	r0, [pc, #304]	@ (10061d10 <__arm_cp.1_0>)
10061be0:	6004      	str	r4, [r0, #0]
10061be2:	4620      	mov	r0, r4
10061be4:	f7e4 f867 	bl	10045cb6 <BLEPLAT_CNTR_IntGetIntStatusTxRxSkip>
10061be8:	4605      	mov	r5, r0
10061bea:	4620      	mov	r0, r4
10061bec:	f7e4 f833 	bl	10045c56 <BLEPLAT_CNTR_IntGetIntStatusDone>
10061bf0:	4606      	mov	r6, r0
10061bf2:	4668      	mov	r0, sp
10061bf4:	f7e3 f814 	bl	10044c20 <BLEPLAT_GetAnchorPoint>
10061bf8:	9900      	ldr	r1, [sp, #0]
10061bfa:	1a09      	subs	r1, r1, r0
10061bfc:	0b4b      	lsrs	r3, r1, #13
10061bfe:	4945      	ldr	r1, [pc, #276]	@ (10061d14 <__arm_cp.1_1>)
10061c00:	680a      	ldr	r2, [r1, #0]
10061c02:	4611      	mov	r1, r2
10061c04:	31d8      	adds	r1, #216	@ 0xd8
10061c06:	2b00      	cmp	r3, #0
10061c08:	d102      	bne.n	10061c10 <BLE_STACK_RadioHandler+0x38>
10061c0a:	6010      	str	r0, [r2, #0]
10061c0c:	2001      	movs	r0, #1
10061c0e:	e000      	b.n	10061c12 <BLE_STACK_RadioHandler+0x3a>
10061c10:	2000      	movs	r0, #0
10061c12:	7008      	strb	r0, [r1, #0]
10061c14:	4840      	ldr	r0, [pc, #256]	@ (10061d18 <__arm_cp.1_2>)
10061c16:	6800      	ldr	r0, [r0, #0]
10061c18:	7b44      	ldrb	r4, [r0, #13]
10061c1a:	2100      	movs	r1, #0
10061c1c:	2cff      	cmp	r4, #255	@ 0xff
10061c1e:	d00a      	beq.n	10061c36 <BLE_STACK_RadioHandler+0x5e>
10061c20:	202c      	movs	r0, #44	@ 0x2c
10061c22:	4360      	muls	r0, r4
10061c24:	4a3d      	ldr	r2, [pc, #244]	@ (10061d1c <__arm_cp.1_3>)
10061c26:	6812      	ldr	r2, [r2, #0]
10061c28:	1810      	adds	r0, r2, r0
10061c2a:	7c82      	ldrb	r2, [r0, #18]
10061c2c:	2a00      	cmp	r2, #0
10061c2e:	d002      	beq.n	10061c36 <BLE_STACK_RadioHandler+0x5e>
10061c30:	6a41      	ldr	r1, [r0, #36]	@ 0x24
10061c32:	68c0      	ldr	r0, [r0, #12]
10061c34:	e7ff      	b.n	10061c36 <BLE_STACK_RadioHandler+0x5e>
10061c36:	2701      	movs	r7, #1
10061c38:	2e00      	cmp	r6, #0
10061c3a:	d003      	beq.n	10061c44 <BLE_STACK_RadioHandler+0x6c>
10061c3c:	2d00      	cmp	r5, #0
10061c3e:	d101      	bne.n	10061c44 <BLE_STACK_RadioHandler+0x6c>
10061c40:	2900      	cmp	r1, #0
10061c42:	e011      	b.n	10061c68 <BLE_STACK_RadioHandler+0x90>
10061c44:	2d00      	cmp	r5, #0
10061c46:	d015      	beq.n	10061c74 <BLE_STACK_RadioHandler+0x9c>
10061c48:	4a35      	ldr	r2, [pc, #212]	@ (10061d20 <__arm_cp.1_4>)
10061c4a:	1a8b      	subs	r3, r1, r2
10061c4c:	425a      	negs	r2, r3
10061c4e:	415a      	adcs	r2, r3
10061c50:	4b34      	ldr	r3, [pc, #208]	@ (10061d24 <__arm_cp.1_5>)
10061c52:	1acd      	subs	r5, r1, r3
10061c54:	426b      	negs	r3, r5
10061c56:	416b      	adcs	r3, r5
10061c58:	4d33      	ldr	r5, [pc, #204]	@ (10061d28 <__arm_cp.1_6>)
10061c5a:	1b4e      	subs	r6, r1, r5
10061c5c:	4275      	negs	r5, r6
10061c5e:	4175      	adcs	r5, r6
10061c60:	2900      	cmp	r1, #0
10061c62:	d007      	beq.n	10061c74 <BLE_STACK_RadioHandler+0x9c>
10061c64:	4313      	orrs	r3, r2
10061c66:	431d      	orrs	r5, r3
10061c68:	4e2a      	ldr	r6, [pc, #168]	@ (10061d14 <__arm_cp.1_1>)
10061c6a:	4d29      	ldr	r5, [pc, #164]	@ (10061d10 <__arm_cp.1_0>)
10061c6c:	d004      	beq.n	10061c78 <BLE_STACK_RadioHandler+0xa0>
10061c6e:	4788      	blx	r1
10061c70:	2700      	movs	r7, #0
10061c72:	e001      	b.n	10061c78 <BLE_STACK_RadioHandler+0xa0>
10061c74:	4e27      	ldr	r6, [pc, #156]	@ (10061d14 <__arm_cp.1_1>)
10061c76:	4d26      	ldr	r5, [pc, #152]	@ (10061d10 <__arm_cp.1_0>)
10061c78:	6828      	ldr	r0, [r5, #0]
10061c7a:	f7e4 f810 	bl	10045c9e <BLEPLAT_CNTR_IntGetIntStatusNoactiveError>
10061c7e:	2800      	cmp	r0, #0
10061c80:	d001      	beq.n	10061c86 <BLE_STACK_RadioHandler+0xae>
10061c82:	2504      	movs	r5, #4
10061c84:	e020      	b.n	10061cc8 <BLE_STACK_RadioHandler+0xf0>
10061c86:	6828      	ldr	r0, [r5, #0]
10061c88:	f7e3 ffc4 	bl	10045c14 <BLEPLAT_CNTR_IntGetIntStatusBitAct2Error>
10061c8c:	2800      	cmp	r0, #0
10061c8e:	d001      	beq.n	10061c94 <BLE_STACK_RadioHandler+0xbc>
10061c90:	2501      	movs	r5, #1
10061c92:	e019      	b.n	10061cc8 <BLE_STACK_RadioHandler+0xf0>
10061c94:	6828      	ldr	r0, [r5, #0]
10061c96:	f7e3 ffc9 	bl	10045c2c <BLEPLAT_CNTR_IntGetIntStatusBitTimerOverrun>
10061c9a:	2800      	cmp	r0, #0
10061c9c:	d001      	beq.n	10061ca2 <BLE_STACK_RadioHandler+0xca>
10061c9e:	2502      	movs	r5, #2
10061ca0:	e012      	b.n	10061cc8 <BLE_STACK_RadioHandler+0xf0>
10061ca2:	6828      	ldr	r0, [r5, #0]
10061ca4:	f7e4 f813 	bl	10045cce <BLEPLAT_CNTR_IntGetIntStatusTxError1>
10061ca8:	4629      	mov	r1, r5
10061caa:	2505      	movs	r5, #5
10061cac:	2800      	cmp	r0, #0
10061cae:	d10b      	bne.n	10061cc8 <BLE_STACK_RadioHandler+0xf0>
10061cb0:	6808      	ldr	r0, [r1, #0]
10061cb2:	f7e4 f818 	bl	10045ce6 <BLEPLAT_CNTR_IntGetIntStatusTxError3>
10061cb6:	2800      	cmp	r0, #0
10061cb8:	d106      	bne.n	10061cc8 <BLE_STACK_RadioHandler+0xf0>
10061cba:	4815      	ldr	r0, [pc, #84]	@ (10061d10 <__arm_cp.1_0>)
10061cbc:	6800      	ldr	r0, [r0, #0]
10061cbe:	f7e3 ff9b 	bl	10045bf8 <BLEPLAT_CNTR_IntGetIntStatusAnyHwError>
10061cc2:	2800      	cmp	r0, #0
10061cc4:	d020      	beq.n	10061d08 <BLE_STACK_RadioHandler+0x130>
10061cc6:	2500      	movs	r5, #0
10061cc8:	2001      	movs	r0, #1
10061cca:	40a8      	lsls	r0, r5
10061ccc:	4917      	ldr	r1, [pc, #92]	@ (10061d2c <__arm_cp.1_7>)
10061cce:	6809      	ldr	r1, [r1, #0]
10061cd0:	680a      	ldr	r2, [r1, #0]
10061cd2:	4302      	orrs	r2, r0
10061cd4:	600a      	str	r2, [r1, #0]
10061cd6:	2000      	movs	r0, #0
10061cd8:	f003 faaa 	bl	10065230 <tsk_notify_idx>
10061cdc:	f7e0 fdfb 	bl	100428d6 <BLE_STACK_ProcessRequest>
10061ce0:	f7e2 ff95 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10061ce4:	4620      	mov	r0, r4
10061ce6:	f000 fbdb 	bl	100624a0 <LL_sched_engine>
10061cea:	6834      	ldr	r4, [r6, #0]
10061cec:	7d60      	ldrb	r0, [r4, #21]
10061cee:	2801      	cmp	r0, #1
10061cf0:	d108      	bne.n	10061d04 <BLE_STACK_RadioHandler+0x12c>
10061cf2:	7c21      	ldrb	r1, [r4, #16]
10061cf4:	200f      	movs	r0, #15
10061cf6:	4008      	ands	r0, r1
10061cf8:	68e2      	ldr	r2, [r4, #12]
10061cfa:	0909      	lsrs	r1, r1, #4
10061cfc:	f7ff ff6a 	bl	10061bd4 <BLE_STACK_EndOfRadioActivityCb>
10061d00:	2000      	movs	r0, #0
10061d02:	7560      	strb	r0, [r4, #21]
10061d04:	b003      	add	sp, #12
10061d06:	bdf0      	pop	{r4, r5, r6, r7, pc}
10061d08:	2f00      	cmp	r7, #0
10061d0a:	d1e9      	bne.n	10061ce0 <BLE_STACK_RadioHandler+0x108>
10061d0c:	e7ed      	b.n	10061cea <BLE_STACK_RadioHandler+0x112>
10061d0e:	46c0      	nop			@ (mov r8, r8)

10061d10 <__arm_cp.1_0>:
10061d10:	20000890 	.word	0x20000890

10061d14 <__arm_cp.1_1>:
10061d14:	20000894 	.word	0x20000894

10061d18 <__arm_cp.1_2>:
10061d18:	20000898 	.word	0x20000898

10061d1c <__arm_cp.1_3>:
10061d1c:	2000089c 	.word	0x2000089c

10061d20 <__arm_cp.1_4>:
10061d20:	1004ea89 	.word	0x1004ea89

10061d24 <__arm_cp.1_5>:
10061d24:	1004e82f 	.word	0x1004e82f

10061d28 <__arm_cp.1_6>:
10061d28:	1004eaa3 	.word	0x1004eaa3

10061d2c <__arm_cp.1_7>:
10061d2c:	20000840 	.word	0x20000840

10061d30 <convert_power>:
10061d30:	b510      	push	{r4, lr}
10061d32:	f7e2 feec 	bl	10044b0e <BLEPLAT_PALevelToDBm>
10061d36:	4604      	mov	r4, r0
10061d38:	f000 fa8e 	bl	10062258 <get_rf_tx_path_compensation_db>
10061d3c:	1820      	adds	r0, r4, r0
10061d3e:	b240      	sxtb	r0, r0
10061d40:	bd10      	pop	{r4, pc}

10061d42 <LL_link_calculate_window_widening_from_ppm>:
10061d42:	22ff      	movs	r2, #255	@ 0xff
10061d44:	320e      	adds	r2, #14
10061d46:	4342      	muls	r2, r0
10061d48:	0a10      	lsrs	r0, r2, #8
10061d4a:	0889      	lsrs	r1, r1, #2
10061d4c:	4341      	muls	r1, r0
10061d4e:	0c88      	lsrs	r0, r1, #18
10061d50:	1c40      	adds	r0, r0, #1
10061d52:	4770      	bx	lr

10061d54 <LL_link_calculate_window_widening>:
10061d54:	b510      	push	{r4, lr}
10061d56:	4604      	mov	r4, r0
10061d58:	4608      	mov	r0, r1
10061d5a:	f7fa fe25 	bl	1005c9a8 <llc_convert_sca_to_ppm>
10061d5e:	21ff      	movs	r1, #255	@ 0xff
10061d60:	310e      	adds	r1, #14
10061d62:	4341      	muls	r1, r0
10061d64:	0a08      	lsrs	r0, r1, #8
10061d66:	08a1      	lsrs	r1, r4, #2
10061d68:	4341      	muls	r1, r0
10061d6a:	0c88      	lsrs	r0, r1, #18
10061d6c:	1c40      	adds	r0, r0, #1
10061d6e:	bd10      	pop	{r4, pc}

10061d70 <llc_generate_access_address>:
10061d70:	b510      	push	{r4, lr}
10061d72:	2001      	movs	r0, #1
10061d74:	f003 fd5d 	bl	10065832 <Hal_Get_Random_Number32>
10061d78:	4604      	mov	r4, r0
10061d7a:	f000 f805 	bl	10061d88 <llc_check_access_address>
10061d7e:	2800      	cmp	r0, #0
10061d80:	d0f7      	beq.n	10061d72 <llc_generate_access_address+0x2>
10061d82:	4620      	mov	r0, r4
10061d84:	bd10      	pop	{r4, pc}
	...

10061d88 <llc_check_access_address>:
10061d88:	b5f0      	push	{r4, r5, r6, r7, lr}
10061d8a:	0843      	lsrs	r3, r0, #1
10061d8c:	4043      	eors	r3, r0
10061d8e:	085c      	lsrs	r4, r3, #1
10061d90:	4621      	mov	r1, r4
10061d92:	4319      	orrs	r1, r3
10061d94:	089d      	lsrs	r5, r3, #2
10061d96:	4329      	orrs	r1, r5
10061d98:	08ca      	lsrs	r2, r1, #3
10061d9a:	430a      	orrs	r2, r1
10061d9c:	0192      	lsls	r2, r2, #6
10061d9e:	2100      	movs	r1, #0
10061da0:	3240      	adds	r2, #64	@ 0x40
10061da2:	d139      	bne.n	10061e18 <llc_check_access_address+0x90>
10061da4:	4a1d      	ldr	r2, [pc, #116]	@ (10061e1c <__arm_cp.6_0>)
10061da6:	461e      	mov	r6, r3
10061da8:	4016      	ands	r6, r2
10061daa:	005f      	lsls	r7, r3, #1
10061dac:	4017      	ands	r7, r2
10061dae:	19be      	adds	r6, r7, r6
10061db0:	4014      	ands	r4, r2
10061db2:	1934      	adds	r4, r6, r4
10061db4:	4015      	ands	r5, r2
10061db6:	1964      	adds	r4, r4, r5
10061db8:	08db      	lsrs	r3, r3, #3
10061dba:	4013      	ands	r3, r2
10061dbc:	18e3      	adds	r3, r4, r3
10061dbe:	0f1c      	lsrs	r4, r3, #28
10061dc0:	d02a      	beq.n	10061e18 <llc_check_access_address+0x90>
10061dc2:	095c      	lsrs	r4, r3, #5
10061dc4:	18e3      	adds	r3, r4, r3
10061dc6:	0a9c      	lsrs	r4, r3, #10
10061dc8:	18e3      	adds	r3, r4, r3
10061dca:	0d1c      	lsrs	r4, r3, #20
10061dcc:	18e4      	adds	r4, r4, r3
10061dce:	237c      	movs	r3, #124	@ 0x7c
10061dd0:	401c      	ands	r4, r3
10061dd2:	2c5c      	cmp	r4, #92	@ 0x5c
10061dd4:	d820      	bhi.n	10061e18 <llc_check_access_address+0x90>
10061dd6:	b2c4      	uxtb	r4, r0
10061dd8:	4d11      	ldr	r5, [pc, #68]	@ (10061e20 <__arm_cp.6_1>)
10061dda:	4365      	muls	r5, r4
10061ddc:	42c5      	cmn	r5, r0
10061dde:	d01b      	beq.n	10061e18 <llc_check_access_address+0x90>
10061de0:	4910      	ldr	r1, [pc, #64]	@ (10061e24 <__arm_cp.6_2>)
10061de2:	4048      	eors	r0, r1
10061de4:	4601      	mov	r1, r0
10061de6:	4011      	ands	r1, r2
10061de8:	0844      	lsrs	r4, r0, #1
10061dea:	4014      	ands	r4, r2
10061dec:	1861      	adds	r1, r4, r1
10061dee:	0884      	lsrs	r4, r0, #2
10061df0:	4014      	ands	r4, r2
10061df2:	1909      	adds	r1, r1, r4
10061df4:	08c4      	lsrs	r4, r0, #3
10061df6:	4014      	ands	r4, r2
10061df8:	1909      	adds	r1, r1, r4
10061dfa:	0900      	lsrs	r0, r0, #4
10061dfc:	4010      	ands	r0, r2
10061dfe:	1808      	adds	r0, r1, r0
10061e00:	0941      	lsrs	r1, r0, #5
10061e02:	1808      	adds	r0, r1, r0
10061e04:	0a81      	lsrs	r1, r0, #10
10061e06:	1808      	adds	r0, r1, r0
10061e08:	0d01      	lsrs	r1, r0, #20
10061e0a:	1808      	adds	r0, r1, r0
10061e0c:	4018      	ands	r0, r3
10061e0e:	2804      	cmp	r0, #4
10061e10:	d801      	bhi.n	10061e16 <llc_check_access_address+0x8e>
10061e12:	2100      	movs	r1, #0
10061e14:	e000      	b.n	10061e18 <llc_check_access_address+0x90>
10061e16:	2101      	movs	r1, #1
10061e18:	4608      	mov	r0, r1
10061e1a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10061e1c <__arm_cp.6_0>:
10061e1c:	08421084 	.word	0x08421084

10061e20 <__arm_cp.6_1>:
10061e20:	fefefeff 	.word	0xfefefeff

10061e24 <__arm_cp.6_2>:
10061e24:	8e89bed6 	.word	0x8e89bed6

10061e28 <LL_link_calc_packetlength>:
10061e28:	2804      	cmp	r0, #4
10061e2a:	d005      	beq.n	10061e38 <LL_link_calc_packetlength+0x10>
10061e2c:	2801      	cmp	r0, #1
10061e2e:	d106      	bne.n	10061e3e <LL_link_calc_packetlength+0x16>
10061e30:	20ff      	movs	r0, #255	@ 0xff
10061e32:	30a4      	adds	r0, #164	@ 0xa4
10061e34:	4a07      	ldr	r2, [pc, #28]	@ (10061e54 <__arm_cp.7_2>)
10061e36:	e004      	b.n	10061e42 <LL_link_calc_packetlength+0x1a>
10061e38:	4a04      	ldr	r2, [pc, #16]	@ (10061e4c <__arm_cp.7_0>)
10061e3a:	4805      	ldr	r0, [pc, #20]	@ (10061e50 <__arm_cp.7_1>)
10061e3c:	e001      	b.n	10061e42 <LL_link_calc_packetlength+0x1a>
10061e3e:	4a06      	ldr	r2, [pc, #24]	@ (10061e58 <__arm_cp.7_3>)
10061e40:	4806      	ldr	r0, [pc, #24]	@ (10061e5c <__arm_cp.7_4>)
10061e42:	4341      	muls	r1, r0
10061e44:	1888      	adds	r0, r1, r2
10061e46:	0a00      	lsrs	r0, r0, #8
10061e48:	4770      	bx	lr
10061e4a:	46c0      	nop			@ (mov r8, r8)

10061e4c <__arm_cp.7_0>:
10061e4c:	000126e9 	.word	0x000126e9

10061e50 <__arm_cp.7_1>:
10061e50:	00001a38 	.word	0x00001a38

10061e54 <__arm_cp.7_2>:
10061e54:	00001206 	.word	0x00001206

10061e58 <__arm_cp.7_3>:
10061e58:	000020c6 	.word	0x000020c6

10061e5c <__arm_cp.7_4>:
10061e5c:	00000347 	.word	0x00000347

10061e60 <LL_link_get_own_sca_ppm>:
10061e60:	4801      	ldr	r0, [pc, #4]	@ (10061e68 <__arm_cp.8_0>)
10061e62:	6800      	ldr	r0, [r0, #0]
10061e64:	8b00      	ldrh	r0, [r0, #24]
10061e66:	4770      	bx	lr

10061e68 <__arm_cp.8_0>:
10061e68:	20000894 	.word	0x20000894

10061e6c <LL_link_get_own_sca_bitfield>:
10061e6c:	b580      	push	{r7, lr}
10061e6e:	4803      	ldr	r0, [pc, #12]	@ (10061e7c <__arm_cp.9_0>)
10061e70:	6800      	ldr	r0, [r0, #0]
10061e72:	8b00      	ldrh	r0, [r0, #24]
10061e74:	f000 f804 	bl	10061e80 <LL_link_central_sca>
10061e78:	bd80      	pop	{r7, pc}
10061e7a:	46c0      	nop			@ (mov r8, r8)

10061e7c <__arm_cp.9_0>:
10061e7c:	20000894 	.word	0x20000894

10061e80 <LL_link_central_sca>:
10061e80:	4a06      	ldr	r2, [pc, #24]	@ (10061e9c <__arm_cp.10_0>)
10061e82:	320e      	adds	r2, #14
10061e84:	2108      	movs	r1, #8
10061e86:	1e49      	subs	r1, r1, #1
10061e88:	d005      	beq.n	10061e96 <LL_link_central_sca+0x16>
10061e8a:	1e93      	subs	r3, r2, #2
10061e8c:	8812      	ldrh	r2, [r2, #0]
10061e8e:	4282      	cmp	r2, r0
10061e90:	461a      	mov	r2, r3
10061e92:	d3f8      	bcc.n	10061e86 <LL_link_central_sca+0x6>
10061e94:	e000      	b.n	10061e98 <LL_link_central_sca+0x18>
10061e96:	2100      	movs	r1, #0
10061e98:	b2c8      	uxtb	r0, r1
10061e9a:	4770      	bx	lr

10061e9c <__arm_cp.10_0>:
10061e9c:	1006e9b0 	.word	0x1006e9b0

10061ea0 <LL_link_is_arg_in_range>:
10061ea0:	4290      	cmp	r0, r2
10061ea2:	d801      	bhi.n	10061ea8 <LL_link_is_arg_in_range+0x8>
10061ea4:	4288      	cmp	r0, r1
10061ea6:	d201      	bcs.n	10061eac <LL_link_is_arg_in_range+0xc>
10061ea8:	2012      	movs	r0, #18
10061eaa:	4770      	bx	lr
10061eac:	2000      	movs	r0, #0
10061eae:	4770      	bx	lr

10061eb0 <LL_link_is_bitmap_valid>:
10061eb0:	4008      	ands	r0, r1
10061eb2:	d000      	beq.n	10061eb6 <LL_link_is_bitmap_valid+0x6>
10061eb4:	2012      	movs	r0, #18
10061eb6:	4770      	bx	lr

10061eb8 <Data_Len_Update_Offline_Processing_ucfg_weak>:
10061eb8:	2000      	movs	r0, #0
10061eba:	4770      	bx	lr

10061ebc <llc_timers_callback_wrapper>:
10061ebc:	b580      	push	{r7, lr}
10061ebe:	6940      	ldr	r0, [r0, #20]
10061ec0:	4901      	ldr	r1, [pc, #4]	@ (10061ec8 <__arm_cp.4_0>)
10061ec2:	f003 faec 	bl	1006549e <cst_sharedCallback>
10061ec6:	bd80      	pop	{r7, pc}

10061ec8 <__arm_cp.4_0>:
10061ec8:	10061ecd 	.word	0x10061ecd

10061ecc <llc_timers_callback>:
10061ecc:	b580      	push	{r7, lr}
10061ece:	4903      	ldr	r1, [pc, #12]	@ (10061edc <__arm_cp.5_0>)
10061ed0:	7ac9      	ldrb	r1, [r1, #11]
10061ed2:	4281      	cmp	r1, r0
10061ed4:	d901      	bls.n	10061eda <llc_timers_callback+0xe>
10061ed6:	f7fd f8df 	bl	1005f098 <LLC_authenticated_payload_timeout_cb>
10061eda:	bd80      	pop	{r7, pc}

10061edc <__arm_cp.5_0>:
10061edc:	200008a8 	.word	0x200008a8

10061ee0 <LL_init_ucfg_weak>:
10061ee0:	b5f0      	push	{r4, r5, r6, r7, lr}
10061ee2:	b091      	sub	sp, #68	@ 0x44
10061ee4:	9306      	str	r3, [sp, #24]
10061ee6:	4614      	mov	r4, r2
10061ee8:	910d      	str	r1, [sp, #52]	@ 0x34
10061eea:	900b      	str	r0, [sp, #44]	@ 0x2c
10061eec:	48b8      	ldr	r0, [pc, #736]	@ (100621d0 <__arm_cp.6_0>)
10061eee:	7ac1      	ldrb	r1, [r0, #11]
10061ef0:	910c      	str	r1, [sp, #48]	@ 0x30
10061ef2:	7f01      	ldrb	r1, [r0, #28]
10061ef4:	9109      	str	r1, [sp, #36]	@ 0x24
10061ef6:	7ec1      	ldrb	r1, [r0, #27]
10061ef8:	910a      	str	r1, [sp, #40]	@ 0x28
10061efa:	7e81      	ldrb	r1, [r0, #26]
10061efc:	9108      	str	r1, [sp, #32]
10061efe:	7fc7      	ldrb	r7, [r0, #31]
10061f00:	2501      	movs	r5, #1
10061f02:	21e8      	movs	r1, #232	@ 0xe8
10061f04:	4628      	mov	r0, r5
10061f06:	f000 ff95 	bl	10062e34 <csmem_mem_0_assign>
10061f0a:	4eb2      	ldr	r6, [pc, #712]	@ (100621d4 <__arm_cp.6_1>)
10061f0c:	6030      	str	r0, [r6, #0]
10061f0e:	2158      	movs	r1, #88	@ 0x58
10061f10:	4628      	mov	r0, r5
10061f12:	f000 ff8f 	bl	10062e34 <csmem_mem_0_assign>
10061f16:	6831      	ldr	r1, [r6, #0]
10061f18:	229c      	movs	r2, #156	@ 0x9c
10061f1a:	9207      	str	r2, [sp, #28]
10061f1c:	5088      	str	r0, [r1, r2]
10061f1e:	4638      	mov	r0, r7
10061f20:	f007 f8fe 	bl	10069120 <llc_wl_mem_allocate>
10061f24:	2107      	movs	r1, #7
10061f26:	4039      	ands	r1, r7
10061f28:	9806      	ldr	r0, [sp, #24]
10061f2a:	f007 fc65 	bl	100697f8 <llc_priv_mem_allocate>
10061f2e:	981c      	ldr	r0, [sp, #112]	@ 0x70
10061f30:	9000      	str	r0, [sp, #0]
10061f32:	ab19      	add	r3, sp, #100	@ 0x64
10061f34:	cb0e      	ldmia	r3, {r1, r2, r3}
10061f36:	980d      	ldr	r0, [sp, #52]	@ 0x34
10061f38:	9106      	str	r1, [sp, #24]
10061f3a:	930d      	str	r3, [sp, #52]	@ 0x34
10061f3c:	f7f4 f98a 	bl	10056254 <llc_conn_mem_allocate>
10061f40:	2c01      	cmp	r4, #1
10061f42:	d000      	beq.n	10061f46 <LL_init_ucfg_weak+0x66>
10061f44:	9508      	str	r5, [sp, #32]
10061f46:	2000      	movs	r0, #0
10061f48:	2c01      	cmp	r4, #1
10061f4a:	d000      	beq.n	10061f4e <LL_init_ucfg_weak+0x6e>
10061f4c:	900a      	str	r0, [sp, #40]	@ 0x28
10061f4e:	2c01      	cmp	r4, #1
10061f50:	4fa0      	ldr	r7, [pc, #640]	@ (100621d4 <__arm_cp.6_1>)
10061f52:	d000      	beq.n	10061f56 <LL_init_ucfg_weak+0x76>
10061f54:	9009      	str	r0, [sp, #36]	@ 0x24
10061f56:	9a17      	ldr	r2, [sp, #92]	@ 0x5c
10061f58:	980d      	ldr	r0, [sp, #52]	@ 0x34
10061f5a:	2801      	cmp	r0, #1
10061f5c:	9205      	str	r2, [sp, #20]
10061f5e:	d118      	bne.n	10061f92 <LL_init_ucfg_weak+0xb2>
10061f60:	2029      	movs	r0, #41	@ 0x29
10061f62:	499b      	ldr	r1, [pc, #620]	@ (100621d0 <__arm_cp.6_0>)
10061f64:	5c08      	ldrb	r0, [r1, r0]
10061f66:	1e41      	subs	r1, r0, #1
10061f68:	4188      	sbcs	r0, r1
10061f6a:	4310      	orrs	r0, r2
10061f6c:	d001      	beq.n	10061f72 <LL_init_ucfg_weak+0x92>
10061f6e:	2530      	movs	r5, #48	@ 0x30
10061f70:	e000      	b.n	10061f74 <LL_init_ucfg_weak+0x94>
10061f72:	2520      	movs	r5, #32
10061f74:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
10061f76:	4630      	mov	r0, r6
10061f78:	4629      	mov	r1, r5
10061f7a:	f000 ff5b 	bl	10062e34 <csmem_mem_0_assign>
10061f7e:	6839      	ldr	r1, [r7, #0]
10061f80:	2294      	movs	r2, #148	@ 0x94
10061f82:	5088      	str	r0, [r1, r2]
10061f84:	4630      	mov	r0, r6
10061f86:	4629      	mov	r1, r5
10061f88:	f000 ff54 	bl	10062e34 <csmem_mem_0_assign>
10061f8c:	6839      	ldr	r1, [r7, #0]
10061f8e:	2298      	movs	r2, #152	@ 0x98
10061f90:	5088      	str	r0, [r1, r2]
10061f92:	262c      	movs	r6, #44	@ 0x2c
10061f94:	980c      	ldr	r0, [sp, #48]	@ 0x30
10061f96:	4631      	mov	r1, r6
10061f98:	f000 ff4c 	bl	10062e34 <csmem_mem_0_assign>
10061f9c:	6839      	ldr	r1, [r7, #0]
10061f9e:	22a4      	movs	r2, #164	@ 0xa4
10061fa0:	5088      	str	r0, [r1, r2]
10061fa2:	2041      	movs	r0, #65	@ 0x41
10061fa4:	0082      	lsls	r2, r0, #2
10061fa6:	2c01      	cmp	r4, #1
10061fa8:	9402      	str	r4, [sp, #8]
10061faa:	d10a      	bne.n	10061fc2 <LL_init_ucfg_weak+0xe2>
10061fac:	4611      	mov	r1, r2
10061fae:	3120      	adds	r1, #32
10061fb0:	2001      	movs	r0, #1
10061fb2:	4614      	mov	r4, r2
10061fb4:	f000 ff3e 	bl	10062e34 <csmem_mem_0_assign>
10061fb8:	6839      	ldr	r1, [r7, #0]
10061fba:	228c      	movs	r2, #140	@ 0x8c
10061fbc:	5088      	str	r0, [r1, r2]
10061fbe:	4621      	mov	r1, r4
10061fc0:	e038      	b.n	10062034 <LL_init_ucfg_weak+0x154>
10061fc2:	2125      	movs	r1, #37	@ 0x25
10061fc4:	4882      	ldr	r0, [pc, #520]	@ (100621d0 <__arm_cp.6_0>)
10061fc6:	910c      	str	r1, [sp, #48]	@ 0x30
10061fc8:	5c41      	ldrb	r1, [r0, r1]
10061fca:	4610      	mov	r0, r2
10061fcc:	3020      	adds	r0, #32
10061fce:	2900      	cmp	r1, #0
10061fd0:	9201      	str	r2, [sp, #4]
10061fd2:	d001      	beq.n	10061fd8 <LL_init_ucfg_weak+0xf8>
10061fd4:	4601      	mov	r1, r0
10061fd6:	e000      	b.n	10061fda <LL_init_ucfg_weak+0xfa>
10061fd8:	2144      	movs	r1, #68	@ 0x44
10061fda:	2726      	movs	r7, #38	@ 0x26
10061fdc:	4a7c      	ldr	r2, [pc, #496]	@ (100621d0 <__arm_cp.6_0>)
10061fde:	5dd2      	ldrb	r2, [r2, r7]
10061fe0:	2a00      	cmp	r2, #0
10061fe2:	d000      	beq.n	10061fe6 <LL_init_ucfg_weak+0x106>
10061fe4:	4601      	mov	r1, r0
10061fe6:	2529      	movs	r5, #41	@ 0x29
10061fe8:	4a79      	ldr	r2, [pc, #484]	@ (100621d0 <__arm_cp.6_0>)
10061fea:	5d52      	ldrb	r2, [r2, r5]
10061fec:	2a00      	cmp	r2, #0
10061fee:	d000      	beq.n	10061ff2 <LL_init_ucfg_weak+0x112>
10061ff0:	4601      	mov	r1, r0
10061ff2:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10061ff4:	2a01      	cmp	r2, #1
10061ff6:	d100      	bne.n	10061ffa <LL_init_ucfg_weak+0x11a>
10061ff8:	4601      	mov	r1, r0
10061ffa:	2001      	movs	r0, #1
10061ffc:	f000 ff1a 	bl	10062e34 <csmem_mem_0_assign>
10062000:	4974      	ldr	r1, [pc, #464]	@ (100621d4 <__arm_cp.6_1>)
10062002:	6809      	ldr	r1, [r1, #0]
10062004:	228c      	movs	r2, #140	@ 0x8c
10062006:	5088      	str	r0, [r1, r2]
10062008:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1006200a:	2801      	cmp	r0, #1
1006200c:	9c01      	ldr	r4, [sp, #4]
1006200e:	4621      	mov	r1, r4
10062010:	d010      	beq.n	10062034 <LL_init_ucfg_weak+0x154>
10062012:	486f      	ldr	r0, [pc, #444]	@ (100621d0 <__arm_cp.6_0>)
10062014:	5d40      	ldrb	r0, [r0, r5]
10062016:	2800      	cmp	r0, #0
10062018:	4621      	mov	r1, r4
1006201a:	d10b      	bne.n	10062034 <LL_init_ucfg_weak+0x154>
1006201c:	486c      	ldr	r0, [pc, #432]	@ (100621d0 <__arm_cp.6_0>)
1006201e:	5dc0      	ldrb	r0, [r0, r7]
10062020:	2800      	cmp	r0, #0
10062022:	4621      	mov	r1, r4
10062024:	d106      	bne.n	10062034 <LL_init_ucfg_weak+0x154>
10062026:	486a      	ldr	r0, [pc, #424]	@ (100621d0 <__arm_cp.6_0>)
10062028:	990c      	ldr	r1, [sp, #48]	@ 0x30
1006202a:	5c40      	ldrb	r0, [r0, r1]
1006202c:	2800      	cmp	r0, #0
1006202e:	d000      	beq.n	10062032 <LL_init_ucfg_weak+0x152>
10062030:	4626      	mov	r6, r4
10062032:	4631      	mov	r1, r6
10062034:	9818      	ldr	r0, [sp, #96]	@ 0x60
10062036:	900b      	str	r0, [sp, #44]	@ 0x2c
10062038:	9816      	ldr	r0, [sp, #88]	@ 0x58
1006203a:	9003      	str	r0, [sp, #12]
1006203c:	2601      	movs	r6, #1
1006203e:	4d66      	ldr	r5, [pc, #408]	@ (100621d8 <__arm_cp.6_2>)
10062040:	4630      	mov	r0, r6
10062042:	47a8      	blx	r5
10062044:	4f63      	ldr	r7, [pc, #396]	@ (100621d4 <__arm_cp.6_1>)
10062046:	6839      	ldr	r1, [r7, #0]
10062048:	2290      	movs	r2, #144	@ 0x90
1006204a:	5088      	str	r0, [r1, r2]
1006204c:	2110      	movs	r1, #16
1006204e:	4630      	mov	r0, r6
10062050:	47a8      	blx	r5
10062052:	6839      	ldr	r1, [r7, #0]
10062054:	22a0      	movs	r2, #160	@ 0xa0
10062056:	9204      	str	r2, [sp, #16]
10062058:	5088      	str	r0, [r1, r2]
1006205a:	2104      	movs	r1, #4
1006205c:	4630      	mov	r0, r6
1006205e:	47a8      	blx	r5
10062060:	6839      	ldr	r1, [r7, #0]
10062062:	22a8      	movs	r2, #168	@ 0xa8
10062064:	5088      	str	r0, [r1, r2]
10062066:	2134      	movs	r1, #52	@ 0x34
10062068:	960c      	str	r6, [sp, #48]	@ 0x30
1006206a:	4630      	mov	r0, r6
1006206c:	47a8      	blx	r5
1006206e:	6839      	ldr	r1, [r7, #0]
10062070:	22ac      	movs	r2, #172	@ 0xac
10062072:	5088      	str	r0, [r1, r2]
10062074:	9808      	ldr	r0, [sp, #32]
10062076:	b2c7      	uxtb	r7, r0
10062078:	1f21      	subs	r1, r4, #4
1006207a:	4638      	mov	r0, r7
1006207c:	47a8      	blx	r5
1006207e:	4605      	mov	r5, r0
10062080:	9c02      	ldr	r4, [sp, #8]
10062082:	2c01      	cmp	r4, #1
10062084:	d105      	bne.n	10062092 <LL_init_ucfg_weak+0x1b2>
10062086:	215c      	movs	r1, #92	@ 0x5c
10062088:	4638      	mov	r0, r7
1006208a:	f000 fed3 	bl	10062e34 <csmem_mem_0_assign>
1006208e:	4602      	mov	r2, r0
10062090:	e000      	b.n	10062094 <LL_init_ucfg_weak+0x1b4>
10062092:	2200      	movs	r2, #0
10062094:	4638      	mov	r0, r7
10062096:	4629      	mov	r1, r5
10062098:	f7fd fe9e 	bl	1005fdd8 <EADV_init>
1006209c:	ab10      	add	r3, sp, #64	@ 0x40
1006209e:	9809      	ldr	r0, [sp, #36]	@ 0x24
100620a0:	70d8      	strb	r0, [r3, #3]
100620a2:	980a      	ldr	r0, [sp, #40]	@ 0x28
100620a4:	7098      	strb	r0, [r3, #2]
100620a6:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100620a8:	705e      	strb	r6, [r3, #1]
100620aa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
100620ac:	7018      	strb	r0, [r3, #0]
100620ae:	4620      	mov	r0, r4
100620b0:	9d05      	ldr	r5, [sp, #20]
100620b2:	4629      	mov	r1, r5
100620b4:	463a      	mov	r2, r7
100620b6:	f7ec faf1 	bl	1004e69c <llc_padv_mem_allocate_ucfg>
100620ba:	9f03      	ldr	r7, [sp, #12]
100620bc:	4638      	mov	r0, r7
100620be:	4621      	mov	r1, r4
100620c0:	f7ec fd39 	bl	1004eb36 <llc_scan_mem_allocate_ucfg>
100620c4:	4638      	mov	r0, r7
100620c6:	4621      	mov	r1, r4
100620c8:	462a      	mov	r2, r5
100620ca:	f7ec fbc4 	bl	1004e856 <llc_pscan_mem_allocate_ucfg>
100620ce:	4638      	mov	r0, r7
100620d0:	4621      	mov	r1, r4
100620d2:	462a      	mov	r2, r5
100620d4:	4633      	mov	r3, r6
100620d6:	f7ec fe03 	bl	1004ece0 <llc_past_mem_allocate_ucfg>
100620da:	9600      	str	r6, [sp, #0]
100620dc:	463e      	mov	r6, r7
100620de:	4638      	mov	r0, r7
100620e0:	4621      	mov	r1, r4
100620e2:	462a      	mov	r2, r5
100620e4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100620e6:	f7ec fc16 	bl	1004e916 <llc_pscan_wr_mem_allocate_ucfg>
100620ea:	f7f5 fe4e 	bl	10057d8a <llc_iso_cmn_mem_alloc_ucfg_weak>
100620ee:	2c01      	cmp	r4, #1
100620f0:	d107      	bne.n	10062102 <LL_init_ucfg_weak+0x222>
100620f2:	2d01      	cmp	r5, #1
100620f4:	d105      	bne.n	10062102 <LL_init_ucfg_weak+0x222>
100620f6:	f006 f917 	bl	10068328 <llc_big_brc_mem_alloc_ucfg_weak>
100620fa:	2e01      	cmp	r6, #1
100620fc:	d101      	bne.n	10062102 <LL_init_ucfg_weak+0x222>
100620fe:	f006 f920 	bl	10068342 <llc_big_sync_mem_alloc_ucfg_weak>
10062102:	980d      	ldr	r0, [sp, #52]	@ 0x34
10062104:	2801      	cmp	r0, #1
10062106:	4f33      	ldr	r7, [pc, #204]	@ (100621d4 <__arm_cp.6_1>)
10062108:	d101      	bne.n	1006210e <LL_init_ucfg_weak+0x22e>
1006210a:	f006 f91c 	bl	10068346 <llc_cig_cmn_mem_alloc_ucfg_weak>
1006210e:	f7f5 fe35 	bl	10057d7c <llc_isoal_mem_alloc_ucfg_weak>
10062112:	9806      	ldr	r0, [sp, #24]
10062114:	4631      	mov	r1, r6
10062116:	4622      	mov	r2, r4
10062118:	462b      	mov	r3, r5
1006211a:	f7fd fcd2 	bl	1005fac2 <llc_cte_mem_allocate_ucfg_weak>
1006211e:	4e2c      	ldr	r6, [pc, #176]	@ (100621d0 <__arm_cp.6_0>)
10062120:	7af0      	ldrb	r0, [r6, #11]
10062122:	1c41      	adds	r1, r0, #1
10062124:	4d2d      	ldr	r5, [pc, #180]	@ (100621dc <__arm_cp.6_3>)
10062126:	4628      	mov	r0, r5
10062128:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1006212a:	f000 fe71 	bl	10062e10 <csmem_mem_assign>
1006212e:	6839      	ldr	r1, [r7, #0]
10062130:	22d0      	movs	r2, #208	@ 0xd0
10062132:	5088      	str	r0, [r1, r2]
10062134:	7af1      	ldrb	r1, [r6, #11]
10062136:	2202      	movs	r2, #2
10062138:	4628      	mov	r0, r5
1006213a:	f000 fe69 	bl	10062e10 <csmem_mem_assign>
1006213e:	6839      	ldr	r1, [r7, #0]
10062140:	460a      	mov	r2, r1
10062142:	32a0      	adds	r2, #160	@ 0xa0
10062144:	6350      	str	r0, [r2, #52]	@ 0x34
10062146:	9804      	ldr	r0, [sp, #16]
10062148:	5808      	ldr	r0, [r1, r0]
1006214a:	6078      	str	r0, [r7, #4]
1006214c:	6850      	ldr	r0, [r2, #4]
1006214e:	60b8      	str	r0, [r7, #8]
10062150:	4620      	mov	r0, r4
10062152:	f7ec fce1 	bl	1004eb18 <llc_scan_init_ucfg>
10062156:	f7ec fb77 	bl	1004e848 <llc_pscan_init_ucfg>
1006215a:	f000 f905 	bl	10062368 <LL_sched_init>
1006215e:	f7fd fcb5 	bl	1005facc <LL_dtm_init>
10062162:	f7ec fab9 	bl	1004e6d8 <llc_padv_init_ucfg>
10062166:	f7fd fcab 	bl	1005fac0 <llc_cte_init_ucfg_weak>
1006216a:	f7f2 febf 	bl	10054eec <HCI_Init>
1006216e:	f7e2 fce6 	bl	10044b3e <BLEPLAT_GetDefaultPALevel>
10062172:	6839      	ldr	r1, [r7, #0]
10062174:	2400      	movs	r4, #0
10062176:	728c      	strb	r4, [r1, #10]
10062178:	7248      	strb	r0, [r1, #9]
1006217a:	4620      	mov	r0, r4
1006217c:	f7e2 fce7 	bl	10044b4e <BLEPLAT_SetHighPower>
10062180:	f7ed fda0 	bl	1004fcc4 <ble_HAL_Init>
10062184:	6838      	ldr	r0, [r7, #0]
10062186:	6e40      	ldr	r0, [r0, #100]	@ 0x64
10062188:	f7fd fb6d 	bl	1005f866 <LLC_pcl_hal_cntxt_init_ucfg_weak>
1006218c:	6838      	ldr	r0, [r7, #0]
1006218e:	9d07      	ldr	r5, [sp, #28]
10062190:	5940      	ldr	r0, [r0, r5]
10062192:	300c      	adds	r0, #12
10062194:	f003 fb3f 	bl	10065816 <addr8_list_clear>
10062198:	463e      	mov	r6, r7
1006219a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
1006219c:	4638      	mov	r0, r7
1006219e:	f7f7 f81f 	bl	100591e0 <llc_priv_init_ucfg_weak>
100621a2:	6830      	ldr	r0, [r6, #0]
100621a4:	5941      	ldr	r1, [r0, r5]
100621a6:	2240      	movs	r2, #64	@ 0x40
100621a8:	548c      	strb	r4, [r1, r2]
100621aa:	4a09      	ldr	r2, [pc, #36]	@ (100621d0 <__arm_cp.6_0>)
100621ac:	8b12      	ldrh	r2, [r2, #24]
100621ae:	8302      	strh	r2, [r0, #24]
100621b0:	201f      	movs	r0, #31
100621b2:	900f      	str	r0, [sp, #60]	@ 0x3c
100621b4:	43e0      	mvns	r0, r4
100621b6:	900e      	str	r0, [sp, #56]	@ 0x38
100621b8:	3148      	adds	r1, #72	@ 0x48
100621ba:	a80e      	add	r0, sp, #56	@ 0x38
100621bc:	2205      	movs	r2, #5
100621be:	f003 f9bf 	bl	10065540 <char_copy>
100621c2:	6830      	ldr	r0, [r6, #0]
100621c4:	5940      	ldr	r0, [r0, r5]
100621c6:	02f9      	lsls	r1, r7, #11
100621c8:	2254      	movs	r2, #84	@ 0x54
100621ca:	5281      	strh	r1, [r0, r2]
100621cc:	b011      	add	sp, #68	@ 0x44
100621ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

100621d0 <__arm_cp.6_0>:
100621d0:	200008a8 	.word	0x200008a8

100621d4 <__arm_cp.6_1>:
100621d4:	20000894 	.word	0x20000894

100621d8 <__arm_cp.6_2>:
100621d8:	10062e35 	.word	0x10062e35

100621dc <__arm_cp.6_3>:
100621dc:	200008a4 	.word	0x200008a4

100621e0 <LL_init>:
100621e0:	b5b0      	push	{r4, r5, r7, lr}
100621e2:	b088      	sub	sp, #32
100621e4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
100621e6:	9406      	str	r4, [sp, #24]
100621e8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
100621ea:	9405      	str	r4, [sp, #20]
100621ec:	9d10      	ldr	r5, [sp, #64]	@ 0x40
100621ee:	9504      	str	r5, [sp, #16]
100621f0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100621f2:	9503      	str	r5, [sp, #12]
100621f4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100621f6:	9502      	str	r5, [sp, #8]
100621f8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
100621fa:	9501      	str	r5, [sp, #4]
100621fc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100621fe:	9500      	str	r5, [sp, #0]
10062200:	f7ff fe6e 	bl	10061ee0 <LL_init_ucfg_weak>
10062204:	2c01      	cmp	r4, #1
10062206:	d112      	bne.n	1006222e <LL_init+0x4e>
10062208:	f7ec fb7e 	bl	1004e908 <llc_pscan_wr_init_ucfg>
1006220c:	f7f3 ff32 	bl	10056074 <llc_conn_init>
10062210:	f7ec fd40 	bl	1004ec94 <LL_cpe_init_ucfg>
10062214:	4807      	ldr	r0, [pc, #28]	@ (10062234 <__arm_cp.7_0>)
10062216:	7ac1      	ldrb	r1, [r0, #11]
10062218:	4807      	ldr	r0, [pc, #28]	@ (10062238 <__arm_cp.7_1>)
1006221a:	6800      	ldr	r0, [r0, #0]
1006221c:	30b0      	adds	r0, #176	@ 0xb0
1006221e:	4a07      	ldr	r2, [pc, #28]	@ (1006223c <__arm_cp.7_2>)
10062220:	2305      	movs	r3, #5
10062222:	f003 f863 	bl	100652ec <CST_init>
10062226:	f7ed fdc1 	bl	1004fdac <Acl_Init>
1006222a:	f7fb feca 	bl	1005dfc2 <LLC_chc_ll_cntxt_init_ucfg_weak>
1006222e:	b008      	add	sp, #32
10062230:	bdb0      	pop	{r4, r5, r7, pc}
10062232:	46c0      	nop			@ (mov r8, r8)

10062234 <__arm_cp.7_0>:
10062234:	200008a8 	.word	0x200008a8

10062238 <__arm_cp.7_1>:
10062238:	20000894 	.word	0x20000894

1006223c <__arm_cp.7_2>:
1006223c:	10061ebd 	.word	0x10061ebd

10062240 <Is_Address_Initialized>:
10062240:	2100      	movs	r1, #0
10062242:	460a      	mov	r2, r1
10062244:	2906      	cmp	r1, #6
10062246:	d005      	beq.n	10062254 <Is_Address_Initialized+0x14>
10062248:	5c43      	ldrb	r3, [r0, r1]
1006224a:	2b00      	cmp	r3, #0
1006224c:	d000      	beq.n	10062250 <Is_Address_Initialized+0x10>
1006224e:	2201      	movs	r2, #1
10062250:	1c49      	adds	r1, r1, #1
10062252:	e7f7      	b.n	10062244 <Is_Address_Initialized+0x4>
10062254:	b2d0      	uxtb	r0, r2
10062256:	4770      	bx	lr

10062258 <get_rf_tx_path_compensation_db>:
10062258:	4804      	ldr	r0, [pc, #16]	@ (1006226c <__arm_cp.9_0>)
1006225a:	6800      	ldr	r0, [r0, #0]
1006225c:	215c      	movs	r1, #92	@ 0x5c
1006225e:	5e40      	ldrsh	r0, [r0, r1]
10062260:	210d      	movs	r1, #13
10062262:	4341      	muls	r1, r0
10062264:	3140      	adds	r1, #64	@ 0x40
10062266:	11c8      	asrs	r0, r1, #7
10062268:	4770      	bx	lr
1006226a:	46c0      	nop			@ (mov r8, r8)

1006226c <__arm_cp.9_0>:
1006226c:	20000894 	.word	0x20000894

10062270 <get_rf_rx_path_compensation_db>:
10062270:	4804      	ldr	r0, [pc, #16]	@ (10062284 <__arm_cp.10_0>)
10062272:	6800      	ldr	r0, [r0, #0]
10062274:	215e      	movs	r1, #94	@ 0x5e
10062276:	5e40      	ldrsh	r0, [r0, r1]
10062278:	210d      	movs	r1, #13
1006227a:	4341      	muls	r1, r0
1006227c:	3140      	adds	r1, #64	@ 0x40
1006227e:	11c8      	asrs	r0, r1, #7
10062280:	4770      	bx	lr
10062282:	46c0      	nop			@ (mov r8, r8)

10062284 <__arm_cp.10_0>:
10062284:	20000894 	.word	0x20000894

10062288 <LL_get_tx_common_buffer_p>:
10062288:	4802      	ldr	r0, [pc, #8]	@ (10062294 <__arm_cp.11_0>)
1006228a:	6800      	ldr	r0, [r0, #0]
1006228c:	218c      	movs	r1, #140	@ 0x8c
1006228e:	5840      	ldr	r0, [r0, r1]
10062290:	4770      	bx	lr
10062292:	46c0      	nop			@ (mov r8, r8)

10062294 <__arm_cp.11_0>:
10062294:	20000894 	.word	0x20000894

10062298 <LL_get_rx_common_buffer_p>:
10062298:	4802      	ldr	r0, [pc, #8]	@ (100622a4 <__arm_cp.12_0>)
1006229a:	6800      	ldr	r0, [r0, #0]
1006229c:	2190      	movs	r1, #144	@ 0x90
1006229e:	5840      	ldr	r0, [r0, r1]
100622a0:	4770      	bx	lr
100622a2:	46c0      	nop			@ (mov r8, r8)

100622a4 <__arm_cp.12_0>:
100622a4:	20000894 	.word	0x20000894

100622a8 <LL_get_control_pdu_size>:
100622a8:	2800      	cmp	r0, #0
100622aa:	d001      	beq.n	100622b0 <LL_get_control_pdu_size+0x8>
100622ac:	2030      	movs	r0, #48	@ 0x30
100622ae:	4770      	bx	lr
100622b0:	2020      	movs	r0, #32
100622b2:	4770      	bx	lr

100622b4 <llc_utils_stop_timer_and_skip_tx_rx>:
100622b4:	b580      	push	{r7, lr}
100622b6:	f7e2 fcaa 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100622ba:	f7e3 fc78 	bl	10045bae <BLEPLAT_CNTR_TxRxSkip>
100622be:	bd80      	pop	{r7, pc}

100622c0 <llc_get_linkms_cntxt_p>:
100622c0:	4802      	ldr	r0, [pc, #8]	@ (100622cc <__arm_cp.15_0>)
100622c2:	6800      	ldr	r0, [r0, #0]
100622c4:	219c      	movs	r1, #156	@ 0x9c
100622c6:	5840      	ldr	r0, [r0, r1]
100622c8:	4770      	bx	lr
100622ca:	46c0      	nop			@ (mov r8, r8)

100622cc <__arm_cp.15_0>:
100622cc:	20000894 	.word	0x20000894

100622d0 <llc_get_next_free_conn_handle>:
100622d0:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100622d2:	4815      	ldr	r0, [pc, #84]	@ (10062328 <__arm_cp.16_0>)
100622d4:	6800      	ldr	r0, [r0, #0]
100622d6:	219c      	movs	r1, #156	@ 0x9c
100622d8:	9102      	str	r1, [sp, #8]
100622da:	5841      	ldr	r1, [r0, r1]
100622dc:	2054      	movs	r0, #84	@ 0x54
100622de:	9001      	str	r0, [sp, #4]
100622e0:	5a08      	ldrh	r0, [r1, r0]
100622e2:	6bcf      	ldr	r7, [r1, #60]	@ 0x3c
100622e4:	4c12      	ldr	r4, [pc, #72]	@ (10062330 <__arm_cp.16_2>)
100622e6:	1c45      	adds	r5, r0, #1
100622e8:	b2a9      	uxth	r1, r5
100622ea:	0a09      	lsrs	r1, r1, #8
100622ec:	290e      	cmp	r1, #14
100622ee:	d901      	bls.n	100622f4 <llc_get_next_free_conn_handle+0x24>
100622f0:	490e      	ldr	r1, [pc, #56]	@ (1006232c <__arm_cp.16_1>)
100622f2:	1845      	adds	r5, r0, r1
100622f4:	2f00      	cmp	r7, #0
100622f6:	d00f      	beq.n	10062318 <llc_get_next_free_conn_handle+0x48>
100622f8:	2600      	movs	r6, #0
100622fa:	6820      	ldr	r0, [r4, #0]
100622fc:	2134      	movs	r1, #52	@ 0x34
100622fe:	5c41      	ldrb	r1, [r0, r1]
10062300:	b2f0      	uxtb	r0, r6
10062302:	4288      	cmp	r0, r1
10062304:	d208      	bcs.n	10062318 <llc_get_next_free_conn_handle+0x48>
10062306:	f7f3 fe81 	bl	1005600c <llc_conn_get_cntxt_per_p>
1006230a:	1c76      	adds	r6, r6, #1
1006230c:	b2a9      	uxth	r1, r5
1006230e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
10062310:	4281      	cmp	r1, r0
10062312:	d1f2      	bne.n	100622fa <llc_get_next_free_conn_handle+0x2a>
10062314:	4628      	mov	r0, r5
10062316:	e7e6      	b.n	100622e6 <llc_get_next_free_conn_handle+0x16>
10062318:	4803      	ldr	r0, [pc, #12]	@ (10062328 <__arm_cp.16_0>)
1006231a:	6800      	ldr	r0, [r0, #0]
1006231c:	9902      	ldr	r1, [sp, #8]
1006231e:	5840      	ldr	r0, [r0, r1]
10062320:	9901      	ldr	r1, [sp, #4]
10062322:	5245      	strh	r5, [r0, r1]
10062324:	b2a8      	uxth	r0, r5
10062326:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10062328 <__arm_cp.16_0>:
10062328:	20000894 	.word	0x20000894

1006232c <__arm_cp.16_1>:
1006232c:	fffff102 	.word	0xfffff102

10062330 <__arm_cp.16_2>:
10062330:	2000083c 	.word	0x2000083c

10062334 <wyhash16>:
10062334:	8801      	ldrh	r1, [r0, #0]
10062336:	4a05      	ldr	r2, [pc, #20]	@ (1006234c <__arm_cp.17_0>)
10062338:	1889      	adds	r1, r1, r2
1006233a:	8001      	strh	r1, [r0, #0]
1006233c:	b288      	uxth	r0, r1
1006233e:	4904      	ldr	r1, [pc, #16]	@ (10062350 <__arm_cp.17_1>)
10062340:	4341      	muls	r1, r0
10062342:	0c08      	lsrs	r0, r1, #16
10062344:	4048      	eors	r0, r1
10062346:	b280      	uxth	r0, r0
10062348:	4770      	bx	lr
1006234a:	46c0      	nop			@ (mov r8, r8)

1006234c <__arm_cp.17_0>:
1006234c:	fffffc15 	.word	0xfffffc15

10062350 <__arm_cp.17_1>:
10062350:	000002ab 	.word	0x000002ab

10062354 <LL_sched_time_t1_ge_t2>:
10062354:	43c0      	mvns	r0, r0
10062356:	1840      	adds	r0, r0, r1
10062358:	0fc0      	lsrs	r0, r0, #31
1006235a:	4770      	bx	lr

1006235c <LL_sched_engine_return_actual_scheduler_margin>:
1006235c:	4801      	ldr	r0, [pc, #4]	@ (10062364 <__arm_cp.2_0>)
1006235e:	6800      	ldr	r0, [r0, #0]
10062360:	6880      	ldr	r0, [r0, #8]
10062362:	4770      	bx	lr

10062364 <__arm_cp.2_0>:
10062364:	20000898 	.word	0x20000898

10062368 <LL_sched_init>:
10062368:	4809      	ldr	r0, [pc, #36]	@ (10062390 <__arm_cp.4_0>)
1006236a:	7ac0      	ldrb	r0, [r0, #11]
1006236c:	4909      	ldr	r1, [pc, #36]	@ (10062394 <__arm_cp.4_1>)
1006236e:	6809      	ldr	r1, [r1, #0]
10062370:	3112      	adds	r1, #18
10062372:	2800      	cmp	r0, #0
10062374:	d004      	beq.n	10062380 <LL_sched_init+0x18>
10062376:	2200      	movs	r2, #0
10062378:	800a      	strh	r2, [r1, #0]
1006237a:	312c      	adds	r1, #44	@ 0x2c
1006237c:	1e40      	subs	r0, r0, #1
1006237e:	e7f8      	b.n	10062372 <LL_sched_init+0xa>
10062380:	4805      	ldr	r0, [pc, #20]	@ (10062398 <__arm_cp.4_2>)
10062382:	6800      	ldr	r0, [r0, #0]
10062384:	2100      	movs	r1, #0
10062386:	73c1      	strb	r1, [r0, #15]
10062388:	21ff      	movs	r1, #255	@ 0xff
1006238a:	0209      	lsls	r1, r1, #8
1006238c:	8181      	strh	r1, [r0, #12]
1006238e:	4770      	bx	lr

10062390 <__arm_cp.4_0>:
10062390:	200008a8 	.word	0x200008a8

10062394 <__arm_cp.4_1>:
10062394:	2000089c 	.word	0x2000089c

10062398 <__arm_cp.4_2>:
10062398:	20000898 	.word	0x20000898

1006239c <LL_sched_set_anchor>:
1006239c:	222c      	movs	r2, #44	@ 0x2c
1006239e:	4342      	muls	r2, r0
100623a0:	4801      	ldr	r0, [pc, #4]	@ (100623a8 <__arm_cp.5_0>)
100623a2:	6800      	ldr	r0, [r0, #0]
100623a4:	5081      	str	r1, [r0, r2]
100623a6:	4770      	bx	lr

100623a8 <__arm_cp.5_0>:
100623a8:	2000089c 	.word	0x2000089c

100623ac <LL_sched_set_taskslot_length_anchor>:
100623ac:	232c      	movs	r3, #44	@ 0x2c
100623ae:	4343      	muls	r3, r0
100623b0:	4802      	ldr	r0, [pc, #8]	@ (100623bc <__arm_cp.6_0>)
100623b2:	6800      	ldr	r0, [r0, #0]
100623b4:	50c2      	str	r2, [r0, r3]
100623b6:	18c0      	adds	r0, r0, r3
100623b8:	6041      	str	r1, [r0, #4]
100623ba:	4770      	bx	lr

100623bc <__arm_cp.6_0>:
100623bc:	2000089c 	.word	0x2000089c

100623c0 <LL_sched_set_cancel_request>:
100623c0:	28ff      	cmp	r0, #255	@ 0xff
100623c2:	d00b      	beq.n	100623dc <LL_sched_set_cancel_request+0x1c>
100623c4:	212c      	movs	r1, #44	@ 0x2c
100623c6:	4341      	muls	r1, r0
100623c8:	4805      	ldr	r0, [pc, #20]	@ (100623e0 <__arm_cp.9_0>)
100623ca:	6800      	ldr	r0, [r0, #0]
100623cc:	1840      	adds	r0, r0, r1
100623ce:	7c81      	ldrb	r1, [r0, #18]
100623d0:	2908      	cmp	r1, #8
100623d2:	d001      	beq.n	100623d8 <LL_sched_set_cancel_request+0x18>
100623d4:	2110      	movs	r1, #16
100623d6:	e000      	b.n	100623da <LL_sched_set_cancel_request+0x1a>
100623d8:	2120      	movs	r1, #32
100623da:	7481      	strb	r1, [r0, #18]
100623dc:	4770      	bx	lr
100623de:	46c0      	nop			@ (mov r8, r8)

100623e0 <__arm_cp.9_0>:
100623e0:	2000089c 	.word	0x2000089c

100623e4 <LL_sched_enable_taskslot>:
100623e4:	b5f0      	push	{r4, r5, r6, r7, lr}
100623e6:	b088      	sub	sp, #32
100623e8:	9307      	str	r3, [sp, #28]
100623ea:	272c      	movs	r7, #44	@ 0x2c
100623ec:	4347      	muls	r7, r0
100623ee:	481a      	ldr	r0, [pc, #104]	@ (10062458 <__arm_cp.10_0>)
100623f0:	6806      	ldr	r6, [r0, #0]
100623f2:	19f0      	adds	r0, r6, r7
100623f4:	7c84      	ldrb	r4, [r0, #18]
100623f6:	2c01      	cmp	r4, #1
100623f8:	d12b      	bne.n	10062452 <LL_sched_enable_taskslot+0x6e>
100623fa:	4603      	mov	r3, r0
100623fc:	3312      	adds	r3, #18
100623fe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
10062400:	9506      	str	r5, [sp, #24]
10062402:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
10062404:	9505      	str	r5, [sp, #20]
10062406:	9d12      	ldr	r5, [sp, #72]	@ 0x48
10062408:	9503      	str	r5, [sp, #12]
1006240a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
1006240c:	9502      	str	r5, [sp, #8]
1006240e:	9104      	str	r1, [sp, #16]
10062410:	9910      	ldr	r1, [sp, #64]	@ 0x40
10062412:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10062414:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10062416:	9400      	str	r4, [sp, #0]
10062418:	9201      	str	r2, [sp, #4]
1006241a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1006241c:	9c07      	ldr	r4, [sp, #28]
1006241e:	6044      	str	r4, [r0, #4]
10062420:	6082      	str	r2, [r0, #8]
10062422:	9a00      	ldr	r2, [sp, #0]
10062424:	51f2      	str	r2, [r6, r7]
10062426:	221f      	movs	r2, #31
10062428:	4015      	ands	r5, r2
1006242a:	7545      	strb	r5, [r0, #21]
1006242c:	4011      	ands	r1, r2
1006242e:	7581      	strb	r1, [r0, #22]
10062430:	2101      	movs	r1, #1
10062432:	7501      	strb	r1, [r0, #20]
10062434:	9a01      	ldr	r2, [sp, #4]
10062436:	74c2      	strb	r2, [r0, #19]
10062438:	8201      	strh	r1, [r0, #16]
1006243a:	9902      	ldr	r1, [sp, #8]
1006243c:	61c1      	str	r1, [r0, #28]
1006243e:	9903      	ldr	r1, [sp, #12]
10062440:	6201      	str	r1, [r0, #32]
10062442:	9905      	ldr	r1, [sp, #20]
10062444:	6241      	str	r1, [r0, #36]	@ 0x24
10062446:	9906      	ldr	r1, [sp, #24]
10062448:	6281      	str	r1, [r0, #40]	@ 0x28
1006244a:	9904      	ldr	r1, [sp, #16]
1006244c:	60c1      	str	r1, [r0, #12]
1006244e:	2002      	movs	r0, #2
10062450:	7018      	strb	r0, [r3, #0]
10062452:	b008      	add	sp, #32
10062454:	bdf0      	pop	{r4, r5, r6, r7, pc}
10062456:	46c0      	nop			@ (mov r8, r8)

10062458 <__arm_cp.10_0>:
10062458:	2000089c 	.word	0x2000089c

1006245c <LL_sched_is_scheduler_call_pending>:
1006245c:	b580      	push	{r7, lr}
1006245e:	490a      	ldr	r1, [pc, #40]	@ (10062488 <__arm_cp.11_0>)
10062460:	6809      	ldr	r1, [r1, #0]
10062462:	7b0a      	ldrb	r2, [r1, #12]
10062464:	2a01      	cmp	r2, #1
10062466:	d106      	bne.n	10062476 <LL_sched_is_scheduler_call_pending+0x1a>
10062468:	7bca      	ldrb	r2, [r1, #15]
1006246a:	2a03      	cmp	r2, #3
1006246c:	d105      	bne.n	1006247a <LL_sched_is_scheduler_call_pending+0x1e>
1006246e:	2000      	movs	r0, #0
10062470:	f7ec fbeb 	bl	1004ec4a <llc_scan_stop_ucfg>
10062474:	bd80      	pop	{r7, pc}
10062476:	2000      	movs	r0, #0
10062478:	bd80      	pop	{r7, pc}
1006247a:	6809      	ldr	r1, [r1, #0]
1006247c:	1a08      	subs	r0, r1, r0
1006247e:	4903      	ldr	r1, [pc, #12]	@ (1006248c <__arm_cp.11_1>)
10062480:	1840      	adds	r0, r0, r1
10062482:	0fc0      	lsrs	r0, r0, #31
10062484:	bd80      	pop	{r7, pc}
10062486:	46c0      	nop			@ (mov r8, r8)

10062488 <__arm_cp.11_0>:
10062488:	20000898 	.word	0x20000898

1006248c <__arm_cp.11_1>:
1006248c:	fffffe0b 	.word	0xfffffe0b

10062490 <LL_sched_anchorstretch>:
10062490:	4902      	ldr	r1, [pc, #8]	@ (1006249c <__arm_cp.12_0>)
10062492:	6809      	ldr	r1, [r1, #0]
10062494:	684a      	ldr	r2, [r1, #4]
10062496:	6002      	str	r2, [r0, #0]
10062498:	7b88      	ldrb	r0, [r1, #14]
1006249a:	4770      	bx	lr

1006249c <__arm_cp.12_0>:
1006249c:	20000898 	.word	0x20000898

100624a0 <LL_sched_engine>:
100624a0:	b5f0      	push	{r4, r5, r6, r7, lr}
100624a2:	b0b3      	sub	sp, #204	@ 0xcc
100624a4:	4607      	mov	r7, r0
100624a6:	48dc      	ldr	r0, [pc, #880]	@ (10062818 <__arm_cp.13_0>)
100624a8:	6800      	ldr	r0, [r0, #0]
100624aa:	900b      	str	r0, [sp, #44]	@ 0x2c
100624ac:	2001      	movs	r0, #1
100624ae:	9001      	str	r0, [sp, #4]
100624b0:	9009      	str	r0, [sp, #36]	@ 0x24
100624b2:	2100      	movs	r1, #0
100624b4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
100624b6:	7381      	strb	r1, [r0, #14]
100624b8:	48d8      	ldr	r0, [pc, #864]	@ (1006281c <__arm_cp.13_1>)
100624ba:	6803      	ldr	r3, [r0, #0]
100624bc:	910a      	str	r1, [sp, #40]	@ 0x28
100624be:	7219      	strb	r1, [r3, #8]
100624c0:	20ff      	movs	r0, #255	@ 0xff
100624c2:	9008      	str	r0, [sp, #32]
100624c4:	3002      	adds	r0, #2
100624c6:	8298      	strh	r0, [r3, #20]
100624c8:	7c18      	ldrb	r0, [r3, #16]
100624ca:	21f0      	movs	r1, #240	@ 0xf0
100624cc:	4001      	ands	r1, r0
100624ce:	090a      	lsrs	r2, r1, #4
100624d0:	1888      	adds	r0, r1, r2
100624d2:	7418      	strb	r0, [r3, #16]
100624d4:	8a59      	ldrh	r1, [r3, #18]
100624d6:	40d1      	lsrs	r1, r2
100624d8:	07c9      	lsls	r1, r1, #31
100624da:	49d1      	ldr	r1, [pc, #836]	@ (10062820 <__arm_cp.13_2>)
100624dc:	6809      	ldr	r1, [r1, #0]
100624de:	9107      	str	r1, [sp, #28]
100624e0:	9305      	str	r3, [sp, #20]
100624e2:	d006      	beq.n	100624f2 <LL_sched_engine+0x52>
100624e4:	2000      	movs	r0, #0
100624e6:	f002 fea3 	bl	10065230 <tsk_notify_idx>
100624ea:	f7e0 f9f4 	bl	100428d6 <BLE_STACK_ProcessRequest>
100624ee:	9b05      	ldr	r3, [sp, #20]
100624f0:	7c18      	ldrb	r0, [r3, #16]
100624f2:	210f      	movs	r1, #15
100624f4:	9102      	str	r1, [sp, #8]
100624f6:	4008      	ands	r0, r1
100624f8:	7418      	strb	r0, [r3, #16]
100624fa:	2196      	movs	r1, #150	@ 0x96
100624fc:	9809      	ldr	r0, [sp, #36]	@ 0x24
100624fe:	4341      	muls	r1, r0
10062500:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10062502:	9112      	str	r1, [sp, #72]	@ 0x48
10062504:	6081      	str	r1, [r0, #8]
10062506:	2001      	movs	r0, #1
10062508:	9004      	str	r0, [sp, #16]
1006250a:	43c0      	mvns	r0, r0
1006250c:	b279      	sxtb	r1, r7
1006250e:	4281      	cmp	r1, r0
10062510:	dc10      	bgt.n	10062534 <LL_sched_engine+0x94>
10062512:	207f      	movs	r0, #127	@ 0x7f
10062514:	4007      	ands	r7, r0
10062516:	252c      	movs	r5, #44	@ 0x2c
10062518:	437d      	muls	r5, r7
1006251a:	9c07      	ldr	r4, [sp, #28]
1006251c:	1960      	adds	r0, r4, r5
1006251e:	900a      	str	r0, [sp, #40]	@ 0x28
10062520:	5966      	ldr	r6, [r4, r5]
10062522:	f7e2 fb33 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10062526:	1a30      	subs	r0, r6, r0
10062528:	49be      	ldr	r1, [pc, #760]	@ (10062824 <__arm_cp.13_3>)
1006252a:	1840      	adds	r0, r0, r1
1006252c:	d500      	bpl.n	10062530 <LL_sched_engine+0x90>
1006252e:	e0ef      	b.n	10062710 <LL_sched_engine+0x270>
10062530:	4638      	mov	r0, r7
10062532:	e004      	b.n	1006253e <LL_sched_engine+0x9e>
10062534:	b2f8      	uxtb	r0, r7
10062536:	28ff      	cmp	r0, #255	@ 0xff
10062538:	d00e      	beq.n	10062558 <LL_sched_engine+0xb8>
1006253a:	2100      	movs	r1, #0
1006253c:	910a      	str	r1, [sp, #40]	@ 0x28
1006253e:	212c      	movs	r1, #44	@ 0x2c
10062540:	4341      	muls	r1, r0
10062542:	9807      	ldr	r0, [sp, #28]
10062544:	1840      	adds	r0, r0, r1
10062546:	2101      	movs	r1, #1
10062548:	7501      	strb	r1, [r0, #20]
1006254a:	7c81      	ldrb	r1, [r0, #18]
1006254c:	2908      	cmp	r1, #8
1006254e:	d102      	bne.n	10062556 <LL_sched_engine+0xb6>
10062550:	3012      	adds	r0, #18
10062552:	2104      	movs	r1, #4
10062554:	7001      	strb	r1, [r0, #0]
10062556:	9708      	str	r7, [sp, #32]
10062558:	f7e2 fb18 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1006255c:	9912      	ldr	r1, [sp, #72]	@ 0x48
1006255e:	180c      	adds	r4, r1, r0
10062560:	48af      	ldr	r0, [pc, #700]	@ (10062820 <__arm_cp.13_2>)
10062562:	6807      	ldr	r7, [r0, #0]
10062564:	3728      	adds	r7, #40	@ 0x28
10062566:	2500      	movs	r5, #0
10062568:	4628      	mov	r0, r5
1006256a:	49af      	ldr	r1, [pc, #700]	@ (10062828 <__arm_cp.13_4>)
1006256c:	7aca      	ldrb	r2, [r1, #11]
1006256e:	4295      	cmp	r5, r2
10062570:	d23a      	bcs.n	100625e8 <LL_sched_engine+0x148>
10062572:	463e      	mov	r6, r7
10062574:	3e16      	subs	r6, #22
10062576:	7831      	ldrb	r1, [r6, #0]
10062578:	070a      	lsls	r2, r1, #28
1006257a:	0f52      	lsrs	r2, r2, #29
1006257c:	d01e      	beq.n	100625bc <LL_sched_engine+0x11c>
1006257e:	2104      	movs	r1, #4
10062580:	7031      	strb	r1, [r6, #0]
10062582:	4639      	mov	r1, r7
10062584:	3928      	subs	r1, #40	@ 0x28
10062586:	6809      	ldr	r1, [r1, #0]
10062588:	43ca      	mvns	r2, r1
1006258a:	18a2      	adds	r2, r4, r2
1006258c:	d429      	bmi.n	100625e2 <LL_sched_engine+0x142>
1006258e:	1a61      	subs	r1, r4, r1
10062590:	4638      	mov	r0, r7
10062592:	381c      	subs	r0, #28
10062594:	6800      	ldr	r0, [r0, #0]
10062596:	463a      	mov	r2, r7
10062598:	3a0c      	subs	r2, #12
1006259a:	6812      	ldr	r2, [r2, #0]
1006259c:	4790      	blx	r2
1006259e:	4639      	mov	r1, r7
100625a0:	3918      	subs	r1, #24
100625a2:	880a      	ldrh	r2, [r1, #0]
100625a4:	1812      	adds	r2, r2, r0
100625a6:	800a      	strh	r2, [r1, #0]
100625a8:	4639      	mov	r1, r7
100625aa:	3914      	subs	r1, #20
100625ac:	780a      	ldrb	r2, [r1, #0]
100625ae:	1880      	adds	r0, r0, r2
100625b0:	287f      	cmp	r0, #127	@ 0x7f
100625b2:	d300      	bcc.n	100625b6 <LL_sched_engine+0x116>
100625b4:	207f      	movs	r0, #127	@ 0x7f
100625b6:	7008      	strb	r0, [r1, #0]
100625b8:	7831      	ldrb	r1, [r6, #0]
100625ba:	2001      	movs	r0, #1
100625bc:	0689      	lsls	r1, r1, #26
100625be:	0f89      	lsrs	r1, r1, #30
100625c0:	d00f      	beq.n	100625e2 <LL_sched_engine+0x142>
100625c2:	6839      	ldr	r1, [r7, #0]
100625c4:	2900      	cmp	r1, #0
100625c6:	d006      	beq.n	100625d6 <LL_sched_engine+0x136>
100625c8:	4638      	mov	r0, r7
100625ca:	381c      	subs	r0, #28
100625cc:	6800      	ldr	r0, [r0, #0]
100625ce:	4788      	blx	r1
100625d0:	7830      	ldrb	r0, [r6, #0]
100625d2:	2801      	cmp	r0, #1
100625d4:	d004      	beq.n	100625e0 <LL_sched_engine+0x140>
100625d6:	2000      	movs	r0, #0
100625d8:	7030      	strb	r0, [r6, #0]
100625da:	4639      	mov	r1, r7
100625dc:	3915      	subs	r1, #21
100625de:	7008      	strb	r0, [r1, #0]
100625e0:	2001      	movs	r0, #1
100625e2:	372c      	adds	r7, #44	@ 0x2c
100625e4:	1c6d      	adds	r5, r5, #1
100625e6:	e7c0      	b.n	1006256a <LL_sched_engine+0xca>
100625e8:	2800      	cmp	r0, #0
100625ea:	d1b5      	bne.n	10062558 <LL_sched_engine+0xb8>
100625ec:	488c      	ldr	r0, [pc, #560]	@ (10062820 <__arm_cp.13_2>)
100625ee:	6800      	ldr	r0, [r0, #0]
100625f0:	4603      	mov	r3, r0
100625f2:	3312      	adds	r3, #18
100625f4:	2400      	movs	r4, #0
100625f6:	4621      	mov	r1, r4
100625f8:	42a2      	cmp	r2, r4
100625fa:	d009      	beq.n	10062610 <LL_sched_engine+0x170>
100625fc:	781d      	ldrb	r5, [r3, #0]
100625fe:	2d04      	cmp	r5, #4
10062600:	d103      	bne.n	1006260a <LL_sched_engine+0x16a>
10062602:	b2cd      	uxtb	r5, r1
10062604:	ae13      	add	r6, sp, #76	@ 0x4c
10062606:	5574      	strb	r4, [r6, r5]
10062608:	1c49      	adds	r1, r1, #1
1006260a:	332c      	adds	r3, #44	@ 0x2c
1006260c:	1c64      	adds	r4, r4, #1
1006260e:	e7f3      	b.n	100625f8 <LL_sched_engine+0x158>
10062610:	060a      	lsls	r2, r1, #24
10062612:	d074      	beq.n	100626fe <LL_sched_engine+0x25e>
10062614:	b2ca      	uxtb	r2, r1
10062616:	920e      	str	r2, [sp, #56]	@ 0x38
10062618:	2200      	movs	r2, #0
1006261a:	9206      	str	r2, [sp, #24]
1006261c:	460c      	mov	r4, r1
1006261e:	9203      	str	r2, [sp, #12]
10062620:	4616      	mov	r6, r2
10062622:	910d      	str	r1, [sp, #52]	@ 0x34
10062624:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10062626:	4296      	cmp	r6, r2
10062628:	d06e      	beq.n	10062708 <LL_sched_engine+0x268>
1006262a:	9612      	str	r6, [sp, #72]	@ 0x48
1006262c:	9410      	str	r4, [sp, #64]	@ 0x40
1006262e:	b2e3      	uxtb	r3, r4
10062630:	2700      	movs	r7, #0
10062632:	462c      	mov	r4, r5
10062634:	463e      	mov	r6, r7
10062636:	42bb      	cmp	r3, r7
10062638:	d00d      	beq.n	10062656 <LL_sched_engine+0x1b6>
1006263a:	aa13      	add	r2, sp, #76	@ 0x4c
1006263c:	5dd2      	ldrb	r2, [r2, r7]
1006263e:	252c      	movs	r5, #44	@ 0x2c
10062640:	4355      	muls	r5, r2
10062642:	5945      	ldr	r5, [r0, r5]
10062644:	2f00      	cmp	r7, #0
10062646:	d002      	beq.n	1006264e <LL_sched_engine+0x1ae>
10062648:	43f2      	mvns	r2, r6
1006264a:	18aa      	adds	r2, r5, r2
1006264c:	d501      	bpl.n	10062652 <LL_sched_engine+0x1b2>
1006264e:	463c      	mov	r4, r7
10062650:	462e      	mov	r6, r5
10062652:	1c7f      	adds	r7, r7, #1
10062654:	e7ef      	b.n	10062636 <LL_sched_engine+0x196>
10062656:	9d12      	ldr	r5, [sp, #72]	@ 0x48
10062658:	1b4a      	subs	r2, r1, r5
1006265a:	b2d2      	uxtb	r2, r2
1006265c:	1e51      	subs	r1, r2, #1
1006265e:	aa13      	add	r2, sp, #76	@ 0x4c
10062660:	5c53      	ldrb	r3, [r2, r1]
10062662:	b2e4      	uxtb	r4, r4
10062664:	5d17      	ldrb	r7, [r2, r4]
10062666:	5457      	strb	r7, [r2, r1]
10062668:	5513      	strb	r3, [r2, r4]
1006266a:	910f      	str	r1, [sp, #60]	@ 0x3c
1006266c:	b2cb      	uxtb	r3, r1
1006266e:	5cd3      	ldrb	r3, [r2, r3]
10062670:	2d00      	cmp	r5, #0
10062672:	d02e      	beq.n	100626d2 <LL_sched_engine+0x232>
10062674:	461d      	mov	r5, r3
10062676:	9911      	ldr	r1, [sp, #68]	@ 0x44
10062678:	b2ca      	uxtb	r2, r1
1006267a:	ac13      	add	r4, sp, #76	@ 0x4c
1006267c:	5ca4      	ldrb	r4, [r4, r2]
1006267e:	272c      	movs	r7, #44	@ 0x2c
10062680:	437c      	muls	r4, r7
10062682:	5902      	ldr	r2, [r0, r4]
10062684:	1b91      	subs	r1, r2, r6
10062686:	1904      	adds	r4, r0, r4
10062688:	6863      	ldr	r3, [r4, #4]
1006268a:	18c9      	adds	r1, r1, r3
1006268c:	3195      	adds	r1, #149	@ 0x95
1006268e:	d44a      	bmi.n	10062726 <LL_sched_engine+0x286>
10062690:	43d1      	mvns	r1, r2
10062692:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10062694:	1851      	adds	r1, r2, r1
10062696:	d449      	bmi.n	1006272c <LL_sched_engine+0x28c>
10062698:	436f      	muls	r7, r5
1006269a:	19c1      	adds	r1, r0, r7
1006269c:	7d8a      	ldrb	r2, [r1, #22]
1006269e:	7d0b      	ldrb	r3, [r1, #20]
100626a0:	4093      	lsls	r3, r2
100626a2:	7d49      	ldrb	r1, [r1, #21]
100626a4:	2601      	movs	r6, #1
100626a6:	4632      	mov	r2, r6
100626a8:	408a      	lsls	r2, r1
100626aa:	429a      	cmp	r2, r3
100626ac:	d800      	bhi.n	100626b0 <LL_sched_engine+0x210>
100626ae:	4613      	mov	r3, r2
100626b0:	7da1      	ldrb	r1, [r4, #22]
100626b2:	7d27      	ldrb	r7, [r4, #20]
100626b4:	408f      	lsls	r7, r1
100626b6:	7d61      	ldrb	r1, [r4, #21]
100626b8:	408e      	lsls	r6, r1
100626ba:	42be      	cmp	r6, r7
100626bc:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100626be:	d800      	bhi.n	100626c2 <LL_sched_engine+0x222>
100626c0:	4637      	mov	r7, r6
100626c2:	429f      	cmp	r7, r3
100626c4:	462b      	mov	r3, r5
100626c6:	990d      	ldr	r1, [sp, #52]	@ 0x34
100626c8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
100626ca:	d300      	bcc.n	100626ce <LL_sched_engine+0x22e>
100626cc:	9b11      	ldr	r3, [sp, #68]	@ 0x44
100626ce:	9e12      	ldr	r6, [sp, #72]	@ 0x48
100626d0:	e011      	b.n	100626f6 <LL_sched_engine+0x256>
100626d2:	990d      	ldr	r1, [sp, #52]	@ 0x34
100626d4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100626d6:	2a01      	cmp	r2, #1
100626d8:	d101      	bne.n	100626de <LL_sched_engine+0x23e>
100626da:	2202      	movs	r2, #2
100626dc:	9206      	str	r2, [sp, #24]
100626de:	9c10      	ldr	r4, [sp, #64]	@ 0x40
100626e0:	9e12      	ldr	r6, [sp, #72]	@ 0x48
100626e2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
100626e4:	222c      	movs	r2, #44	@ 0x2c
100626e6:	435a      	muls	r2, r3
100626e8:	5883      	ldr	r3, [r0, r2]
100626ea:	1882      	adds	r2, r0, r2
100626ec:	6852      	ldr	r2, [r2, #4]
100626ee:	189a      	adds	r2, r3, r2
100626f0:	3296      	adds	r2, #150	@ 0x96
100626f2:	920c      	str	r2, [sp, #48]	@ 0x30
100626f4:	462b      	mov	r3, r5
100626f6:	1e64      	subs	r4, r4, #1
100626f8:	1c76      	adds	r6, r6, #1
100626fa:	9311      	str	r3, [sp, #68]	@ 0x44
100626fc:	e792      	b.n	10062624 <LL_sched_engine+0x184>
100626fe:	2000      	movs	r0, #0
10062700:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10062702:	6048      	str	r0, [r1, #4]
10062704:	7388      	strb	r0, [r1, #14]
10062706:	e02d      	b.n	10062764 <LL_sched_engine+0x2c4>
10062708:	9a03      	ldr	r2, [sp, #12]
1006270a:	4616      	mov	r6, r2
1006270c:	9b06      	ldr	r3, [sp, #24]
1006270e:	e013      	b.n	10062738 <LL_sched_engine+0x298>
10062710:	1960      	adds	r0, r4, r5
10062712:	7c80      	ldrb	r0, [r0, #18]
10062714:	2810      	cmp	r0, #16
10062716:	d100      	bne.n	1006271a <LL_sched_engine+0x27a>
10062718:	e70a      	b.n	10062530 <LL_sched_engine+0x90>
1006271a:	2820      	cmp	r0, #32
1006271c:	d100      	bne.n	10062720 <LL_sched_engine+0x280>
1006271e:	e707      	b.n	10062530 <LL_sched_engine+0x90>
10062720:	2400      	movs	r4, #0
10062722:	463d      	mov	r5, r7
10062724:	e021      	b.n	1006276a <LL_sched_engine+0x2ca>
10062726:	3e96      	subs	r6, #150	@ 0x96
10062728:	9b04      	ldr	r3, [sp, #16]
1006272a:	e004      	b.n	10062736 <LL_sched_engine+0x296>
1006272c:	980d      	ldr	r0, [sp, #52]	@ 0x34
1006272e:	1e40      	subs	r0, r0, #1
10062730:	9011      	str	r0, [sp, #68]	@ 0x44
10062732:	2600      	movs	r6, #0
10062734:	4633      	mov	r3, r6
10062736:	9a03      	ldr	r2, [sp, #12]
10062738:	9811      	ldr	r0, [sp, #68]	@ 0x44
1006273a:	b2c0      	uxtb	r0, r0
1006273c:	a913      	add	r1, sp, #76	@ 0x4c
1006273e:	5c0d      	ldrb	r5, [r1, r0]
10062740:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10062742:	6042      	str	r2, [r0, #4]
10062744:	7383      	strb	r3, [r0, #14]
10062746:	2dff      	cmp	r5, #255	@ 0xff
10062748:	d00c      	beq.n	10062764 <LL_sched_engine+0x2c4>
1006274a:	202c      	movs	r0, #44	@ 0x2c
1006274c:	4368      	muls	r0, r5
1006274e:	9907      	ldr	r1, [sp, #28]
10062750:	1809      	adds	r1, r1, r0
10062752:	b2d8      	uxtb	r0, r3
10062754:	2801      	cmp	r0, #1
10062756:	910a      	str	r1, [sp, #40]	@ 0x28
10062758:	d105      	bne.n	10062766 <LL_sched_engine+0x2c6>
1006275a:	6808      	ldr	r0, [r1, #0]
1006275c:	1a30      	subs	r0, r6, r0
1006275e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10062760:	6048      	str	r0, [r1, #4]
10062762:	e000      	b.n	10062766 <LL_sched_engine+0x2c6>
10062764:	25ff      	movs	r5, #255	@ 0xff
10062766:	9c01      	ldr	r4, [sp, #4]
10062768:	9f08      	ldr	r7, [sp, #32]
1006276a:	f7e3 fa18 	bl	10045b9e <BLEPLAT_CNTR_ClearSemareq>
1006276e:	482a      	ldr	r0, [pc, #168]	@ (10062818 <__arm_cp.13_0>)
10062770:	6800      	ldr	r0, [r0, #0]
10062772:	2dff      	cmp	r5, #255	@ 0xff
10062774:	d02f      	beq.n	100627d6 <LL_sched_engine+0x336>
10062776:	9711      	str	r7, [sp, #68]	@ 0x44
10062778:	9412      	str	r4, [sp, #72]	@ 0x48
1006277a:	4604      	mov	r4, r0
1006277c:	2008      	movs	r0, #8
1006277e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
10062780:	74b8      	strb	r0, [r7, #18]
10062782:	f7fd f9a1 	bl	1005fac8 <llc_cte_timer_stop_ucfg_weak>
10062786:	7365      	strb	r5, [r4, #13]
10062788:	6a3a      	ldr	r2, [r7, #32]
1006278a:	68f8      	ldr	r0, [r7, #12]
1006278c:	6879      	ldr	r1, [r7, #4]
1006278e:	4790      	blx	r2
10062790:	683e      	ldr	r6, [r7, #0]
10062792:	940b      	str	r4, [sp, #44]	@ 0x2c
10062794:	6026      	str	r6, [r4, #0]
10062796:	4628      	mov	r0, r5
10062798:	f7e3 fa1f 	bl	10045bda <BLEPLAT_CNTR_GlobWriteSlot>
1006279c:	f7e3 fa16 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
100627a0:	9812      	ldr	r0, [sp, #72]	@ 0x48
100627a2:	2800      	cmp	r0, #0
100627a4:	d023      	beq.n	100627ee <LL_sched_engine+0x34e>
100627a6:	7cf8      	ldrb	r0, [r7, #19]
100627a8:	09c1      	lsrs	r1, r0, #7
100627aa:	2201      	movs	r2, #1
100627ac:	4630      	mov	r0, r6
100627ae:	f7e2 fa14 	bl	10044bda <BLEPLAT_SetRadioTimerValue>
100627b2:	2800      	cmp	r0, #0
100627b4:	d01d      	beq.n	100627f2 <LL_sched_engine+0x352>
100627b6:	9809      	ldr	r0, [sp, #36]	@ 0x24
100627b8:	0040      	lsls	r0, r0, #1
100627ba:	9009      	str	r0, [sp, #36]	@ 0x24
100627bc:	2810      	cmp	r0, #16
100627be:	9f11      	ldr	r7, [sp, #68]	@ 0x44
100627c0:	d200      	bcs.n	100627c4 <LL_sched_engine+0x324>
100627c2:	e676      	b.n	100624b2 <LL_sched_engine+0x12>
100627c4:	f7fd f97e 	bl	1005fac4 <llc_cte_timer_error_ucfg_weak>
100627c8:	20a1      	movs	r0, #161	@ 0xa1
100627ca:	2106      	movs	r1, #6
100627cc:	2200      	movs	r2, #0
100627ce:	4613      	mov	r3, r2
100627d0:	f004 fa22 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
100627d4:	e009      	b.n	100627ea <LL_sched_engine+0x34a>
100627d6:	4604      	mov	r4, r0
100627d8:	f7e2 fa19 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100627dc:	f7e3 f9ef 	bl	10045bbe <BLEPLAT_CNTR_GlobDisableBlue>
100627e0:	2000      	movs	r0, #0
100627e2:	73e0      	strb	r0, [r4, #15]
100627e4:	20ff      	movs	r0, #255	@ 0xff
100627e6:	0200      	lsls	r0, r0, #8
100627e8:	81a0      	strh	r0, [r4, #12]
100627ea:	9904      	ldr	r1, [sp, #16]
100627ec:	e00f      	b.n	1006280e <LL_sched_engine+0x36e>
100627ee:	f7e2 fa26 	bl	10044c3e <BLEPLAT_SetRadioCloseTimeout>
100627f2:	9b04      	ldr	r3, [sp, #16]
100627f4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
100627f6:	730b      	strb	r3, [r1, #12]
100627f8:	7cf8      	ldrb	r0, [r7, #19]
100627fa:	73c8      	strb	r0, [r1, #15]
100627fc:	9a05      	ldr	r2, [sp, #20]
100627fe:	60d6      	str	r6, [r2, #12]
10062800:	7c11      	ldrb	r1, [r2, #16]
10062802:	9c02      	ldr	r4, [sp, #8]
10062804:	4021      	ands	r1, r4
10062806:	0100      	lsls	r0, r0, #4
10062808:	1808      	adds	r0, r1, r0
1006280a:	4619      	mov	r1, r3
1006280c:	7410      	strb	r0, [r2, #16]
1006280e:	4803      	ldr	r0, [pc, #12]	@ (1006281c <__arm_cp.13_1>)
10062810:	6800      	ldr	r0, [r0, #0]
10062812:	7201      	strb	r1, [r0, #8]
10062814:	b033      	add	sp, #204	@ 0xcc
10062816:	bdf0      	pop	{r4, r5, r6, r7, pc}

10062818 <__arm_cp.13_0>:
10062818:	20000898 	.word	0x20000898

1006281c <__arm_cp.13_1>:
1006281c:	20000894 	.word	0x20000894

10062820 <__arm_cp.13_2>:
10062820:	2000089c 	.word	0x2000089c

10062824 <__arm_cp.13_3>:
10062824:	fffffed4 	.word	0xfffffed4

10062828 <__arm_cp.13_4>:
10062828:	200008a8 	.word	0x200008a8

1006282c <LL_sched_set_priority>:
1006282c:	b510      	push	{r4, lr}
1006282e:	231f      	movs	r3, #31
10062830:	401a      	ands	r2, r3
10062832:	242c      	movs	r4, #44	@ 0x2c
10062834:	4344      	muls	r4, r0
10062836:	4803      	ldr	r0, [pc, #12]	@ (10062844 <__arm_cp.14_0>)
10062838:	6800      	ldr	r0, [r0, #0]
1006283a:	1900      	adds	r0, r0, r4
1006283c:	7582      	strb	r2, [r0, #22]
1006283e:	4019      	ands	r1, r3
10062840:	7541      	strb	r1, [r0, #21]
10062842:	bd10      	pop	{r4, pc}

10062844 <__arm_cp.14_0>:
10062844:	2000089c 	.word	0x2000089c

10062848 <LL_sched_set_params>:
10062848:	b5b0      	push	{r4, r5, r7, lr}
1006284a:	242c      	movs	r4, #44	@ 0x2c
1006284c:	4344      	muls	r4, r0
1006284e:	480b      	ldr	r0, [pc, #44]	@ (1006287c <__arm_cp.15_0>)
10062850:	6800      	ldr	r0, [r0, #0]
10062852:	9d05      	ldr	r5, [sp, #20]
10062854:	5105      	str	r5, [r0, r4]
10062856:	1900      	adds	r0, r0, r4
10062858:	9c04      	ldr	r4, [sp, #16]
1006285a:	6084      	str	r4, [r0, #8]
1006285c:	60c1      	str	r1, [r0, #12]
1006285e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10062860:	6281      	str	r1, [r0, #40]	@ 0x28
10062862:	990a      	ldr	r1, [sp, #40]	@ 0x28
10062864:	6241      	str	r1, [r0, #36]	@ 0x24
10062866:	9909      	ldr	r1, [sp, #36]	@ 0x24
10062868:	6201      	str	r1, [r0, #32]
1006286a:	9908      	ldr	r1, [sp, #32]
1006286c:	61c1      	str	r1, [r0, #28]
1006286e:	9907      	ldr	r1, [sp, #28]
10062870:	7581      	strb	r1, [r0, #22]
10062872:	9906      	ldr	r1, [sp, #24]
10062874:	7541      	strb	r1, [r0, #21]
10062876:	74c2      	strb	r2, [r0, #19]
10062878:	6043      	str	r3, [r0, #4]
1006287a:	bdb0      	pop	{r4, r5, r7, pc}

1006287c <__arm_cp.15_0>:
1006287c:	2000089c 	.word	0x2000089c

10062880 <LL_sched_find_best_anchor>:
10062880:	b5f0      	push	{r4, r5, r6, r7, lr}
10062882:	b0d7      	sub	sp, #348	@ 0x15c
10062884:	9200      	str	r2, [sp, #0]
10062886:	910b      	str	r1, [sp, #44]	@ 0x2c
10062888:	4604      	mov	r4, r0
1006288a:	204b      	movs	r0, #75	@ 0x4b
1006288c:	0081      	lsls	r1, r0, #2
1006288e:	4620      	mov	r0, r4
10062890:	9108      	str	r1, [sp, #32]
10062892:	f7dd fcd5 	bl	10040240 <__udivsi3>
10062896:	9006      	str	r0, [sp, #24]
10062898:	940a      	str	r4, [sp, #40]	@ 0x28
1006289a:	08a0      	lsrs	r0, r4, #2
1006289c:	284b      	cmp	r0, #75	@ 0x4b
1006289e:	d201      	bcs.n	100628a4 <LL_sched_find_best_anchor+0x24>
100628a0:	2001      	movs	r0, #1
100628a2:	9006      	str	r0, [sp, #24]
100628a4:	a80c      	add	r0, sp, #48	@ 0x30
100628a6:	9908      	ldr	r1, [sp, #32]
100628a8:	2900      	cmp	r1, #0
100628aa:	d004      	beq.n	100628b6 <LL_sched_find_best_anchor+0x36>
100628ac:	2200      	movs	r2, #0
100628ae:	7002      	strb	r2, [r0, #0]
100628b0:	1c40      	adds	r0, r0, #1
100628b2:	1e49      	subs	r1, r1, #1
100628b4:	e7f8      	b.n	100628a8 <LL_sched_find_best_anchor+0x28>
100628b6:	240a      	movs	r4, #10
100628b8:	980a      	ldr	r0, [sp, #40]	@ 0x28
100628ba:	4344      	muls	r4, r0
100628bc:	f7e2 f966 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
100628c0:	9005      	str	r0, [sp, #20]
100628c2:	1820      	adds	r0, r4, r0
100628c4:	43c1      	mvns	r1, r0
100628c6:	4852      	ldr	r0, [pc, #328]	@ (10062a10 <__arm_cp.18_0>)
100628c8:	7ac0      	ldrb	r0, [r0, #11]
100628ca:	9001      	str	r0, [sp, #4]
100628cc:	4851      	ldr	r0, [pc, #324]	@ (10062a14 <__arm_cp.18_1>)
100628ce:	6800      	ldr	r0, [r0, #0]
100628d0:	9002      	str	r0, [sp, #8]
100628d2:	2500      	movs	r5, #0
100628d4:	9407      	str	r4, [sp, #28]
100628d6:	9801      	ldr	r0, [sp, #4]
100628d8:	4285      	cmp	r5, r0
100628da:	d051      	beq.n	10062980 <LL_sched_find_best_anchor+0x100>
100628dc:	222c      	movs	r2, #44	@ 0x2c
100628de:	436a      	muls	r2, r5
100628e0:	9802      	ldr	r0, [sp, #8]
100628e2:	1883      	adds	r3, r0, r2
100628e4:	7c98      	ldrb	r0, [r3, #18]
100628e6:	0700      	lsls	r0, r0, #28
100628e8:	0f80      	lsrs	r0, r0, #30
100628ea:	d046      	beq.n	1006297a <LL_sched_find_best_anchor+0xfa>
100628ec:	9800      	ldr	r0, [sp, #0]
100628ee:	4285      	cmp	r5, r0
100628f0:	d043      	beq.n	1006297a <LL_sched_find_best_anchor+0xfa>
100628f2:	7cd8      	ldrb	r0, [r3, #19]
100628f4:	2803      	cmp	r0, #3
100628f6:	d040      	beq.n	1006297a <LL_sched_find_best_anchor+0xfa>
100628f8:	2881      	cmp	r0, #129	@ 0x81
100628fa:	d03e      	beq.n	1006297a <LL_sched_find_best_anchor+0xfa>
100628fc:	288d      	cmp	r0, #141	@ 0x8d
100628fe:	d03c      	beq.n	1006297a <LL_sched_find_best_anchor+0xfa>
10062900:	6898      	ldr	r0, [r3, #8]
10062902:	9009      	str	r0, [sp, #36]	@ 0x24
10062904:	0900      	lsrs	r0, r0, #4
10062906:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
10062908:	4284      	cmp	r4, r0
1006290a:	d936      	bls.n	1006297a <LL_sched_find_best_anchor+0xfa>
1006290c:	9809      	ldr	r0, [sp, #36]	@ 0x24
1006290e:	0100      	lsls	r0, r0, #4
10062910:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
10062912:	42a0      	cmp	r0, r4
10062914:	d931      	bls.n	1006297a <LL_sched_find_best_anchor+0xfa>
10062916:	9802      	ldr	r0, [sp, #8]
10062918:	5880      	ldr	r0, [r0, r2]
1006291a:	9003      	str	r0, [sp, #12]
1006291c:	685c      	ldr	r4, [r3, #4]
1006291e:	2300      	movs	r3, #0
10062920:	9504      	str	r5, [sp, #16]
10062922:	9808      	ldr	r0, [sp, #32]
10062924:	4283      	cmp	r3, r0
10062926:	d028      	beq.n	1006297a <LL_sched_find_best_anchor+0xfa>
10062928:	9806      	ldr	r0, [sp, #24]
1006292a:	4358      	muls	r0, r3
1006292c:	9a05      	ldr	r2, [sp, #20]
1006292e:	1885      	adds	r5, r0, r2
10062930:	9a03      	ldr	r2, [sp, #12]
10062932:	1868      	adds	r0, r5, r1
10062934:	d51e      	bpl.n	10062974 <LL_sched_find_best_anchor+0xf4>
10062936:	43d0      	mvns	r0, r2
10062938:	1828      	adds	r0, r5, r0
1006293a:	d405      	bmi.n	10062948 <LL_sched_find_best_anchor+0xc8>
1006293c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1006293e:	1828      	adds	r0, r5, r0
10062940:	1916      	adds	r6, r2, r4
10062942:	43f7      	mvns	r7, r6
10062944:	19ee      	adds	r6, r5, r7
10062946:	e005      	b.n	10062954 <LL_sched_find_best_anchor+0xd4>
10062948:	980b      	ldr	r0, [sp, #44]	@ 0x2c
1006294a:	1828      	adds	r0, r5, r0
1006294c:	43c6      	mvns	r6, r0
1006294e:	1996      	adds	r6, r2, r6
10062950:	1917      	adds	r7, r2, r4
10062952:	43ff      	mvns	r7, r7
10062954:	19c0      	adds	r0, r0, r7
10062956:	2800      	cmp	r0, #0
10062958:	db01      	blt.n	1006295e <LL_sched_find_best_anchor+0xde>
1006295a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
1006295c:	19d2      	adds	r2, r2, r7
1006295e:	2800      	cmp	r0, #0
10062960:	da01      	bge.n	10062966 <LL_sched_find_best_anchor+0xe6>
10062962:	980a      	ldr	r0, [sp, #40]	@ 0x28
10062964:	182d      	adds	r5, r5, r0
10062966:	2e00      	cmp	r6, #0
10062968:	d5e3      	bpl.n	10062932 <LL_sched_find_best_anchor+0xb2>
1006296a:	a80c      	add	r0, sp, #48	@ 0x30
1006296c:	5cc6      	ldrb	r6, [r0, r3]
1006296e:	1c76      	adds	r6, r6, #1
10062970:	54c6      	strb	r6, [r0, r3]
10062972:	e7de      	b.n	10062932 <LL_sched_find_best_anchor+0xb2>
10062974:	1c5b      	adds	r3, r3, #1
10062976:	9d04      	ldr	r5, [sp, #16]
10062978:	e7d3      	b.n	10062922 <LL_sched_find_best_anchor+0xa2>
1006297a:	1c6d      	adds	r5, r5, #1
1006297c:	9c07      	ldr	r4, [sp, #28]
1006297e:	e7aa      	b.n	100628d6 <LL_sched_find_best_anchor+0x56>
10062980:	2000      	movs	r0, #0
10062982:	4601      	mov	r1, r0
10062984:	9a08      	ldr	r2, [sp, #32]
10062986:	428a      	cmp	r2, r1
10062988:	d00b      	beq.n	100629a2 <LL_sched_find_best_anchor+0x122>
1006298a:	aa0c      	add	r2, sp, #48	@ 0x30
1006298c:	5c53      	ldrb	r3, [r2, r1]
1006298e:	429c      	cmp	r4, r3
10062990:	460a      	mov	r2, r1
10062992:	d300      	bcc.n	10062996 <LL_sched_find_best_anchor+0x116>
10062994:	4602      	mov	r2, r0
10062996:	429c      	cmp	r4, r3
10062998:	d300      	bcc.n	1006299c <LL_sched_find_best_anchor+0x11c>
1006299a:	461c      	mov	r4, r3
1006299c:	1c49      	adds	r1, r1, #1
1006299e:	4610      	mov	r0, r2
100629a0:	e7f0      	b.n	10062984 <LL_sched_find_best_anchor+0x104>
100629a2:	9407      	str	r4, [sp, #28]
100629a4:	491c      	ldr	r1, [pc, #112]	@ (10062a18 <__arm_cp.18_2>)
100629a6:	1841      	adds	r1, r0, r1
100629a8:	9109      	str	r1, [sp, #36]	@ 0x24
100629aa:	2200      	movs	r2, #0
100629ac:	4613      	mov	r3, r2
100629ae:	4616      	mov	r6, r2
100629b0:	920a      	str	r2, [sp, #40]	@ 0x28
100629b2:	920b      	str	r2, [sp, #44]	@ 0x2c
100629b4:	4614      	mov	r4, r2
100629b6:	9f07      	ldr	r7, [sp, #28]
100629b8:	4917      	ldr	r1, [pc, #92]	@ (10062a18 <__arm_cp.18_2>)
100629ba:	1865      	adds	r5, r4, r1
100629bc:	d020      	beq.n	10062a00 <LL_sched_find_best_anchor+0x180>
100629be:	1905      	adds	r5, r0, r4
100629c0:	9908      	ldr	r1, [sp, #32]
100629c2:	1e49      	subs	r1, r1, #1
100629c4:	428d      	cmp	r5, r1
100629c6:	d901      	bls.n	100629cc <LL_sched_find_best_anchor+0x14c>
100629c8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100629ca:	190d      	adds	r5, r1, r4
100629cc:	a90c      	add	r1, sp, #48	@ 0x30
100629ce:	5d49      	ldrb	r1, [r1, r5]
100629d0:	428f      	cmp	r7, r1
100629d2:	d105      	bne.n	100629e0 <LL_sched_find_best_anchor+0x160>
100629d4:	1c5b      	adds	r3, r3, #1
100629d6:	2e00      	cmp	r6, #0
100629d8:	d110      	bne.n	100629fc <LL_sched_find_best_anchor+0x17c>
100629da:	2601      	movs	r6, #1
100629dc:	950b      	str	r5, [sp, #44]	@ 0x2c
100629de:	e00d      	b.n	100629fc <LL_sched_find_best_anchor+0x17c>
100629e0:	4293      	cmp	r3, r2
100629e2:	d801      	bhi.n	100629e8 <LL_sched_find_best_anchor+0x168>
100629e4:	990a      	ldr	r1, [sp, #40]	@ 0x28
100629e6:	910b      	str	r1, [sp, #44]	@ 0x2c
100629e8:	4293      	cmp	r3, r2
100629ea:	d800      	bhi.n	100629ee <LL_sched_find_best_anchor+0x16e>
100629ec:	4613      	mov	r3, r2
100629ee:	1c69      	adds	r1, r5, #1
100629f0:	2600      	movs	r6, #0
100629f2:	461a      	mov	r2, r3
100629f4:	4633      	mov	r3, r6
100629f6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
100629f8:	950a      	str	r5, [sp, #40]	@ 0x28
100629fa:	910b      	str	r1, [sp, #44]	@ 0x2c
100629fc:	1c64      	adds	r4, r4, #1
100629fe:	e7db      	b.n	100629b8 <LL_sched_find_best_anchor+0x138>
10062a00:	9806      	ldr	r0, [sp, #24]
10062a02:	990a      	ldr	r1, [sp, #40]	@ 0x28
10062a04:	4348      	muls	r0, r1
10062a06:	9905      	ldr	r1, [sp, #20]
10062a08:	1808      	adds	r0, r1, r0
10062a0a:	308f      	adds	r0, #143	@ 0x8f
10062a0c:	b057      	add	sp, #348	@ 0x15c
10062a0e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10062a10 <__arm_cp.18_0>:
10062a10:	200008a8 	.word	0x200008a8

10062a14 <__arm_cp.18_1>:
10062a14:	2000089c 	.word	0x2000089c

10062a18 <__arm_cp.18_2>:
10062a18:	fffffed4 	.word	0xfffffed4

10062a1c <LL_sched_delete_taskslot>:
10062a1c:	212c      	movs	r1, #44	@ 0x2c
10062a1e:	4341      	muls	r1, r0
10062a20:	4802      	ldr	r0, [pc, #8]	@ (10062a2c <__arm_cp.19_0>)
10062a22:	6800      	ldr	r0, [r0, #0]
10062a24:	1840      	adds	r0, r0, r1
10062a26:	2110      	movs	r1, #16
10062a28:	8241      	strh	r1, [r0, #18]
10062a2a:	4770      	bx	lr

10062a2c <__arm_cp.19_0>:
10062a2c:	2000089c 	.word	0x2000089c

10062a30 <LL_sched_set_per_event_type>:
10062a30:	222c      	movs	r2, #44	@ 0x2c
10062a32:	4342      	muls	r2, r0
10062a34:	4802      	ldr	r0, [pc, #8]	@ (10062a40 <__arm_cp.20_0>)
10062a36:	6800      	ldr	r0, [r0, #0]
10062a38:	1880      	adds	r0, r0, r2
10062a3a:	74c1      	strb	r1, [r0, #19]
10062a3c:	4770      	bx	lr
10062a3e:	46c0      	nop			@ (mov r8, r8)

10062a40 <__arm_cp.20_0>:
10062a40:	2000089c 	.word	0x2000089c

10062a44 <LL_sched_set_per_state>:
10062a44:	222c      	movs	r2, #44	@ 0x2c
10062a46:	4342      	muls	r2, r0
10062a48:	4802      	ldr	r0, [pc, #8]	@ (10062a54 <__arm_cp.21_0>)
10062a4a:	6800      	ldr	r0, [r0, #0]
10062a4c:	1880      	adds	r0, r0, r2
10062a4e:	7481      	strb	r1, [r0, #18]
10062a50:	4770      	bx	lr
10062a52:	46c0      	nop			@ (mov r8, r8)

10062a54 <__arm_cp.21_0>:
10062a54:	2000089c 	.word	0x2000089c

10062a58 <LL_sched_reserve_taskslot>:
10062a58:	b510      	push	{r4, lr}
10062a5a:	480e      	ldr	r0, [pc, #56]	@ (10062a94 <__arm_cp.22_0>)
10062a5c:	6801      	ldr	r1, [r0, #0]
10062a5e:	3128      	adds	r1, #40	@ 0x28
10062a60:	2000      	movs	r0, #0
10062a62:	4a0d      	ldr	r2, [pc, #52]	@ (10062a98 <__arm_cp.22_1>)
10062a64:	7ad3      	ldrb	r3, [r2, #11]
10062a66:	4298      	cmp	r0, r3
10062a68:	d20b      	bcs.n	10062a82 <LL_sched_reserve_taskslot+0x2a>
10062a6a:	f3ef 8310 	mrs	r3, PRIMASK
10062a6e:	b672      	cpsid	i
10062a70:	460b      	mov	r3, r1
10062a72:	3b16      	subs	r3, #22
10062a74:	781c      	ldrb	r4, [r3, #0]
10062a76:	2c00      	cmp	r4, #0
10062a78:	d005      	beq.n	10062a86 <LL_sched_reserve_taskslot+0x2e>
10062a7a:	b662      	cpsie	i
10062a7c:	312c      	adds	r1, #44	@ 0x2c
10062a7e:	1c40      	adds	r0, r0, #1
10062a80:	e7f0      	b.n	10062a64 <LL_sched_reserve_taskslot+0xc>
10062a82:	20ff      	movs	r0, #255	@ 0xff
10062a84:	e004      	b.n	10062a90 <LL_sched_reserve_taskslot+0x38>
10062a86:	2200      	movs	r2, #0
10062a88:	600a      	str	r2, [r1, #0]
10062a8a:	2101      	movs	r1, #1
10062a8c:	7019      	strb	r1, [r3, #0]
10062a8e:	b662      	cpsie	i
10062a90:	b2c0      	uxtb	r0, r0
10062a92:	bd10      	pop	{r4, pc}

10062a94 <__arm_cp.22_0>:
10062a94:	2000089c 	.word	0x2000089c

10062a98 <__arm_cp.22_1>:
10062a98:	200008a8 	.word	0x200008a8

10062a9c <LL_sched_release_taskslot>:
10062a9c:	28ff      	cmp	r0, #255	@ 0xff
10062a9e:	d006      	beq.n	10062aae <LL_sched_release_taskslot+0x12>
10062aa0:	212c      	movs	r1, #44	@ 0x2c
10062aa2:	4341      	muls	r1, r0
10062aa4:	4802      	ldr	r0, [pc, #8]	@ (10062ab0 <__arm_cp.23_0>)
10062aa6:	6800      	ldr	r0, [r0, #0]
10062aa8:	1840      	adds	r0, r0, r1
10062aaa:	2100      	movs	r1, #0
10062aac:	8241      	strh	r1, [r0, #18]
10062aae:	4770      	bx	lr

10062ab0 <__arm_cp.23_0>:
10062ab0:	2000089c 	.word	0x2000089c

10062ab4 <LL_sched_check_and_call_sched>:
10062ab4:	b510      	push	{r4, lr}
10062ab6:	460c      	mov	r4, r1
10062ab8:	f3ef 8110 	mrs	r1, PRIMASK
10062abc:	b672      	cpsid	i
10062abe:	f7ff fccd 	bl	1006245c <LL_sched_is_scheduler_call_pending>
10062ac2:	b662      	cpsie	i
10062ac4:	2800      	cmp	r0, #0
10062ac6:	d000      	beq.n	10062aca <LL_sched_check_and_call_sched+0x16>
10062ac8:	bd10      	pop	{r4, pc}
10062aca:	4620      	mov	r0, r4
10062acc:	f7ff fce8 	bl	100624a0 <LL_sched_engine>
10062ad0:	bd10      	pop	{r4, pc}
	...

10062ad4 <LL_sched_check_and_wait_sched>:
10062ad4:	b5b0      	push	{r4, r5, r7, lr}
10062ad6:	4604      	mov	r4, r0
10062ad8:	4813      	ldr	r0, [pc, #76]	@ (10062b28 <__arm_cp.25_0>)
10062ada:	7ac0      	ldrb	r0, [r0, #11]
10062adc:	42a0      	cmp	r0, r4
10062ade:	d922      	bls.n	10062b26 <LL_sched_check_and_wait_sched+0x52>
10062ae0:	f3ef 8010 	mrs	r0, PRIMASK
10062ae4:	b672      	cpsid	i
10062ae6:	25ff      	movs	r5, #255	@ 0xff
10062ae8:	35ec      	adds	r5, #236	@ 0xec
10062aea:	f7e2 f84f 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10062aee:	1940      	adds	r0, r0, r5
10062af0:	f7ff fcb4 	bl	1006245c <LL_sched_is_scheduler_call_pending>
10062af4:	4a0d      	ldr	r2, [pc, #52]	@ (10062b2c <__arm_cp.25_1>)
10062af6:	6813      	ldr	r3, [r2, #0]
10062af8:	2100      	movs	r1, #0
10062afa:	7219      	strb	r1, [r3, #8]
10062afc:	b662      	cpsie	i
10062afe:	2801      	cmp	r0, #1
10062b00:	d10c      	bne.n	10062b1c <LL_sched_check_and_wait_sched+0x48>
10062b02:	6810      	ldr	r0, [r2, #0]
10062b04:	6041      	str	r1, [r0, #4]
10062b06:	4a0a      	ldr	r2, [pc, #40]	@ (10062b30 <__arm_cp.25_2>)
10062b08:	6843      	ldr	r3, [r0, #4]
10062b0a:	4293      	cmp	r3, r2
10062b0c:	d80b      	bhi.n	10062b26 <LL_sched_check_and_wait_sched+0x52>
10062b0e:	7a03      	ldrb	r3, [r0, #8]
10062b10:	2b00      	cmp	r3, #0
10062b12:	d107      	bne.n	10062b24 <LL_sched_check_and_wait_sched+0x50>
10062b14:	6843      	ldr	r3, [r0, #4]
10062b16:	1c5b      	adds	r3, r3, #1
10062b18:	6043      	str	r3, [r0, #4]
10062b1a:	e7f5      	b.n	10062b08 <LL_sched_check_and_wait_sched+0x34>
10062b1c:	4620      	mov	r0, r4
10062b1e:	f7ff fcbf 	bl	100624a0 <LL_sched_engine>
10062b22:	bdb0      	pop	{r4, r5, r7, pc}
10062b24:	7201      	strb	r1, [r0, #8]
10062b26:	bdb0      	pop	{r4, r5, r7, pc}

10062b28 <__arm_cp.25_0>:
10062b28:	200008a8 	.word	0x200008a8

10062b2c <__arm_cp.25_1>:
10062b2c:	20000894 	.word	0x20000894

10062b30 <__arm_cp.25_2>:
10062b30:	0004e1ff 	.word	0x0004e1ff

10062b34 <LL_sched_force_to_reserved>:
10062b34:	212c      	movs	r1, #44	@ 0x2c
10062b36:	4341      	muls	r1, r0
10062b38:	4806      	ldr	r0, [pc, #24]	@ (10062b54 <__arm_cp.28_0>)
10062b3a:	6800      	ldr	r0, [r0, #0]
10062b3c:	1840      	adds	r0, r0, r1
10062b3e:	7c81      	ldrb	r1, [r0, #18]
10062b40:	2910      	cmp	r1, #16
10062b42:	d001      	beq.n	10062b48 <LL_sched_force_to_reserved+0x14>
10062b44:	2920      	cmp	r1, #32
10062b46:	d100      	bne.n	10062b4a <LL_sched_force_to_reserved+0x16>
10062b48:	4770      	bx	lr
10062b4a:	3012      	adds	r0, #18
10062b4c:	2101      	movs	r1, #1
10062b4e:	7001      	strb	r1, [r0, #0]
10062b50:	4770      	bx	lr
10062b52:	46c0      	nop			@ (mov r8, r8)

10062b54 <__arm_cp.28_0>:
10062b54:	2000089c 	.word	0x2000089c

10062b58 <MBM_init>:
10062b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10062b5a:	4c18      	ldr	r4, [pc, #96]	@ (10062bbc <__arm_cp.1_0>)
10062b5c:	2501      	movs	r5, #1
10062b5e:	2204      	movs	r2, #4
10062b60:	4e17      	ldr	r6, [pc, #92]	@ (10062bc0 <__arm_cp.1_1>)
10062b62:	4620      	mov	r0, r4
10062b64:	4629      	mov	r1, r5
10062b66:	47b0      	blx	r6
10062b68:	4f16      	ldr	r7, [pc, #88]	@ (10062bc4 <__arm_cp.1_2>)
10062b6a:	6038      	str	r0, [r7, #0]
10062b6c:	2210      	movs	r2, #16
10062b6e:	4620      	mov	r0, r4
10062b70:	4629      	mov	r1, r5
10062b72:	47b0      	blx	r6
10062b74:	6839      	ldr	r1, [r7, #0]
10062b76:	6008      	str	r0, [r1, #0]
10062b78:	220c      	movs	r2, #12
10062b7a:	4620      	mov	r0, r4
10062b7c:	4629      	mov	r1, r5
10062b7e:	47b0      	blx	r6
10062b80:	6839      	ldr	r1, [r7, #0]
10062b82:	6809      	ldr	r1, [r1, #0]
10062b84:	60c8      	str	r0, [r1, #12]
10062b86:	4d10      	ldr	r5, [pc, #64]	@ (10062bc8 <__arm_cp.1_3>)
10062b88:	89e9      	ldrh	r1, [r5, #14]
10062b8a:	2224      	movs	r2, #36	@ 0x24
10062b8c:	4620      	mov	r0, r4
10062b8e:	47b0      	blx	r6
10062b90:	4601      	mov	r1, r0
10062b92:	6838      	ldr	r0, [r7, #0]
10062b94:	6802      	ldr	r2, [r0, #0]
10062b96:	68d0      	ldr	r0, [r2, #12]
10062b98:	6081      	str	r1, [r0, #8]
10062b9a:	2100      	movs	r1, #0
10062b9c:	2908      	cmp	r1, #8
10062b9e:	d003      	beq.n	10062ba8 <MBM_init+0x50>
10062ba0:	2300      	movs	r3, #0
10062ba2:	5253      	strh	r3, [r2, r1]
10062ba4:	1c89      	adds	r1, r1, #2
10062ba6:	e7f9      	b.n	10062b9c <MBM_init+0x44>
10062ba8:	89e9      	ldrh	r1, [r5, #14]
10062baa:	80d1      	strh	r1, [r2, #6]
10062bac:	2100      	movs	r1, #0
10062bae:	8111      	strh	r1, [r2, #8]
10062bb0:	89e9      	ldrh	r1, [r5, #14]
10062bb2:	8041      	strh	r1, [r0, #2]
10062bb4:	f000 f948 	bl	10062e48 <Mem_Buff_init>
10062bb8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10062bba:	46c0      	nop			@ (mov r8, r8)

10062bbc <__arm_cp.1_0>:
10062bbc:	200008a4 	.word	0x200008a4

10062bc0 <__arm_cp.1_1>:
10062bc0:	10062e11 	.word	0x10062e11

10062bc4 <__arm_cp.1_2>:
10062bc4:	200008a0 	.word	0x200008a0

10062bc8 <__arm_cp.1_3>:
10062bc8:	200008a8 	.word	0x200008a8

10062bcc <MBM_get>:
10062bcc:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10062bce:	4a1a      	ldr	r2, [pc, #104]	@ (10062c38 <__arm_cp.2_0>)
10062bd0:	6812      	ldr	r2, [r2, #0]
10062bd2:	6813      	ldr	r3, [r2, #0]
10062bd4:	f3ef 8210 	mrs	r2, PRIMASK
10062bd8:	b672      	cpsid	i
10062bda:	2206      	movs	r2, #6
10062bdc:	5e9c      	ldrsh	r4, [r3, r2]
10062bde:	17e2      	asrs	r2, r4, #31
10062be0:	4627      	mov	r7, r4
10062be2:	4397      	bics	r7, r2
10062be4:	0040      	lsls	r0, r0, #1
10062be6:	9000      	str	r0, [sp, #0]
10062be8:	5e18      	ldrsh	r0, [r3, r0]
10062bea:	4a14      	ldr	r2, [pc, #80]	@ (10062c3c <__arm_cp.2_1>)
10062bec:	9102      	str	r1, [sp, #8]
10062bee:	1889      	adds	r1, r1, r2
10062bf0:	0949      	lsrs	r1, r1, #5
10062bf2:	1c4d      	adds	r5, r1, #1
10062bf4:	2801      	cmp	r0, #1
10062bf6:	9501      	str	r5, [sp, #4]
10062bf8:	db05      	blt.n	10062c06 <MBM_get+0x3a>
10062bfa:	1b42      	subs	r2, r0, r5
10062bfc:	4256      	negs	r6, r2
10062bfe:	b212      	sxth	r2, r2
10062c00:	13d5      	asrs	r5, r2, #15
10062c02:	4035      	ands	r5, r6
10062c04:	183f      	adds	r7, r7, r0
10062c06:	68d8      	ldr	r0, [r3, #12]
10062c08:	2200      	movs	r2, #0
10062c0a:	5e86      	ldrsh	r6, [r0, r2]
10062c0c:	b209      	sxth	r1, r1
10062c0e:	428e      	cmp	r6, r1
10062c10:	dd0e      	ble.n	10062c30 <MBM_get+0x64>
10062c12:	b23e      	sxth	r6, r7
10062c14:	428e      	cmp	r6, r1
10062c16:	dd0b      	ble.n	10062c30 <MBM_get+0x64>
10062c18:	9900      	ldr	r1, [sp, #0]
10062c1a:	1859      	adds	r1, r3, r1
10062c1c:	1b62      	subs	r2, r4, r5
10062c1e:	80da      	strh	r2, [r3, #6]
10062c20:	880a      	ldrh	r2, [r1, #0]
10062c22:	9b01      	ldr	r3, [sp, #4]
10062c24:	1ad2      	subs	r2, r2, r3
10062c26:	800a      	strh	r2, [r1, #0]
10062c28:	9902      	ldr	r1, [sp, #8]
10062c2a:	f000 f943 	bl	10062eb4 <Mem_Buff_get>
10062c2e:	4602      	mov	r2, r0
10062c30:	b662      	cpsie	i
10062c32:	4610      	mov	r0, r2
10062c34:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10062c36:	46c0      	nop			@ (mov r8, r8)

10062c38 <__arm_cp.2_0>:
10062c38:	200008a0 	.word	0x200008a0

10062c3c <__arm_cp.2_1>:
10062c3c:	001fffff 	.word	0x001fffff

10062c40 <MBM_release>:
10062c40:	b5b0      	push	{r4, r5, r7, lr}
10062c42:	460d      	mov	r5, r1
10062c44:	4604      	mov	r4, r0
10062c46:	f000 f95b 	bl	10062f00 <Mem_Buff_get_chain_count>
10062c4a:	4601      	mov	r1, r0
10062c4c:	4628      	mov	r0, r5
10062c4e:	f000 f80b 	bl	10062c68 <MBM_release_balance>
10062c52:	4804      	ldr	r0, [pc, #16]	@ (10062c64 <__arm_cp.3_0>)
10062c54:	6800      	ldr	r0, [r0, #0]
10062c56:	6800      	ldr	r0, [r0, #0]
10062c58:	68c0      	ldr	r0, [r0, #12]
10062c5a:	4621      	mov	r1, r4
10062c5c:	f000 f90f 	bl	10062e7e <Mem_Buff_release>
10062c60:	bdb0      	pop	{r4, r5, r7, pc}
10062c62:	46c0      	nop			@ (mov r8, r8)

10062c64 <__arm_cp.3_0>:
10062c64:	200008a0 	.word	0x200008a0

10062c68 <MBM_release_balance>:
10062c68:	b510      	push	{r4, lr}
10062c6a:	4a0b      	ldr	r2, [pc, #44]	@ (10062c98 <__arm_cp.4_0>)
10062c6c:	6812      	ldr	r2, [r2, #0]
10062c6e:	6812      	ldr	r2, [r2, #0]
10062c70:	f3ef 8310 	mrs	r3, PRIMASK
10062c74:	b672      	cpsid	i
10062c76:	0043      	lsls	r3, r0, #1
10062c78:	5ed0      	ldrsh	r0, [r2, r3]
10062c7a:	1844      	adds	r4, r0, r1
10062c7c:	52d4      	strh	r4, [r2, r3]
10062c7e:	b20b      	sxth	r3, r1
10062c80:	18c3      	adds	r3, r0, r3
10062c82:	2b01      	cmp	r3, #1
10062c84:	db02      	blt.n	10062c8c <MBM_release_balance+0x24>
10062c86:	4243      	negs	r3, r0
10062c88:	0bc1      	lsrs	r1, r0, #15
10062c8a:	4019      	ands	r1, r3
10062c8c:	88d0      	ldrh	r0, [r2, #6]
10062c8e:	1808      	adds	r0, r1, r0
10062c90:	80d0      	strh	r0, [r2, #6]
10062c92:	b662      	cpsie	i
10062c94:	bd10      	pop	{r4, pc}
10062c96:	46c0      	nop			@ (mov r8, r8)

10062c98 <__arm_cp.4_0>:
10062c98:	200008a0 	.word	0x200008a0

10062c9c <MBM_get_available_mem_buffers>:
10062c9c:	4908      	ldr	r1, [pc, #32]	@ (10062cc0 <__arm_cp.5_0>)
10062c9e:	6809      	ldr	r1, [r1, #0]
10062ca0:	680a      	ldr	r2, [r1, #0]
10062ca2:	f3ef 8110 	mrs	r1, PRIMASK
10062ca6:	b672      	cpsid	i
10062ca8:	2106      	movs	r1, #6
10062caa:	5e51      	ldrsh	r1, [r2, r1]
10062cac:	17cb      	asrs	r3, r1, #31
10062cae:	4399      	bics	r1, r3
10062cb0:	0040      	lsls	r0, r0, #1
10062cb2:	5e10      	ldrsh	r0, [r2, r0]
10062cb4:	2800      	cmp	r0, #0
10062cb6:	dd00      	ble.n	10062cba <MBM_get_available_mem_buffers+0x1e>
10062cb8:	1809      	adds	r1, r1, r0
10062cba:	b288      	uxth	r0, r1
10062cbc:	b662      	cpsie	i
10062cbe:	4770      	bx	lr

10062cc0 <__arm_cp.5_0>:
10062cc0:	200008a0 	.word	0x200008a0

10062cc4 <MBM_resize>:
10062cc4:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10062cc6:	2481      	movs	r4, #129	@ 0x81
10062cc8:	2800      	cmp	r0, #0
10062cca:	d032      	beq.n	10062d32 <MBM_resize+0x6e>
10062ccc:	4606      	mov	r6, r0
10062cce:	9102      	str	r1, [sp, #8]
10062cd0:	9401      	str	r4, [sp, #4]
10062cd2:	4819      	ldr	r0, [pc, #100]	@ (10062d38 <__arm_cp.6_0>)
10062cd4:	6800      	ldr	r0, [r0, #0]
10062cd6:	6800      	ldr	r0, [r0, #0]
10062cd8:	9000      	str	r0, [sp, #0]
10062cda:	1e50      	subs	r0, r2, #1
10062cdc:	211f      	movs	r1, #31
10062cde:	4301      	orrs	r1, r0
10062ce0:	1c4c      	adds	r4, r1, #1
10062ce2:	b2a7      	uxth	r7, r4
10062ce4:	4630      	mov	r0, r6
10062ce6:	f000 f913 	bl	10062f10 <Mem_Buff_get_chain_size>
10062cea:	4605      	mov	r5, r0
10062cec:	4287      	cmp	r7, r0
10062cee:	d90c      	bls.n	10062d0a <MBM_resize+0x46>
10062cf0:	1b60      	subs	r0, r4, r5
10062cf2:	b281      	uxth	r1, r0
10062cf4:	9802      	ldr	r0, [sp, #8]
10062cf6:	f7ff ff69 	bl	10062bcc <MBM_get>
10062cfa:	2800      	cmp	r0, #0
10062cfc:	9c01      	ldr	r4, [sp, #4]
10062cfe:	d018      	beq.n	10062d32 <MBM_resize+0x6e>
10062d00:	4601      	mov	r1, r0
10062d02:	4630      	mov	r0, r6
10062d04:	f000 fa29 	bl	1006315a <Mem_Buff_append>
10062d08:	e012      	b.n	10062d30 <MBM_resize+0x6c>
10062d0a:	42af      	cmp	r7, r5
10062d0c:	d210      	bcs.n	10062d30 <MBM_resize+0x6c>
10062d0e:	9800      	ldr	r0, [sp, #0]
10062d10:	68c0      	ldr	r0, [r0, #12]
10062d12:	4631      	mov	r1, r6
10062d14:	463a      	mov	r2, r7
10062d16:	f000 f907 	bl	10062f28 <Mem_Buff_resize>
10062d1a:	4604      	mov	r4, r0
10062d1c:	1e78      	subs	r0, r7, #1
10062d1e:	0940      	lsrs	r0, r0, #5
10062d20:	1e69      	subs	r1, r5, #1
10062d22:	0949      	lsrs	r1, r1, #5
10062d24:	1a08      	subs	r0, r1, r0
10062d26:	b281      	uxth	r1, r0
10062d28:	9802      	ldr	r0, [sp, #8]
10062d2a:	f7ff ff9d 	bl	10062c68 <MBM_release_balance>
10062d2e:	e000      	b.n	10062d32 <MBM_resize+0x6e>
10062d30:	2400      	movs	r4, #0
10062d32:	4620      	mov	r0, r4
10062d34:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10062d36:	46c0      	nop			@ (mov r8, r8)

10062d38 <__arm_cp.6_0>:
10062d38:	200008a0 	.word	0x200008a0

10062d3c <MBM_reserve>:
10062d3c:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10062d3e:	460c      	mov	r4, r1
10062d40:	4601      	mov	r1, r0
10062d42:	481c      	ldr	r0, [pc, #112]	@ (10062db4 <__arm_cp.7_0>)
10062d44:	6800      	ldr	r0, [r0, #0]
10062d46:	6805      	ldr	r5, [r0, #0]
10062d48:	8928      	ldrh	r0, [r5, #8]
10062d4a:	68ea      	ldr	r2, [r5, #12]
10062d4c:	8852      	ldrh	r2, [r2, #2]
10062d4e:	1a13      	subs	r3, r2, r0
10062d50:	42a3      	cmp	r3, r4
10062d52:	da26      	bge.n	10062da2 <MBM_reserve+0x66>
10062d54:	1aa1      	subs	r1, r4, r2
10062d56:	1808      	adds	r0, r1, r0
10062d58:	a901      	add	r1, sp, #4
10062d5a:	8008      	strh	r0, [r1, #0]
10062d5c:	4816      	ldr	r0, [pc, #88]	@ (10062db8 <__arm_cp.7_1>)
10062d5e:	6800      	ldr	r0, [r0, #0]
10062d60:	6980      	ldr	r0, [r0, #24]
10062d62:	2142      	movs	r1, #66	@ 0x42
10062d64:	2240      	movs	r2, #64	@ 0x40
10062d66:	2303      	movs	r3, #3
10062d68:	f7ed faca 	bl	10050300 <aci_event_fifo_push_header>
10062d6c:	2800      	cmp	r0, #0
10062d6e:	d017      	beq.n	10062da0 <MBM_reserve+0x64>
10062d70:	4604      	mov	r4, r0
10062d72:	2202      	movs	r2, #2
10062d74:	72c2      	strb	r2, [r0, #11]
10062d76:	2009      	movs	r0, #9
10062d78:	72a0      	strb	r0, [r4, #10]
10062d7a:	4620      	mov	r0, r4
10062d7c:	300c      	adds	r0, #12
10062d7e:	a901      	add	r1, sp, #4
10062d80:	f7e1 fe10 	bl	100449a4 <BLEPLAT_MemCpy>
10062d84:	2000      	movs	r0, #0
10062d86:	7260      	strb	r0, [r4, #9]
10062d88:	2106      	movs	r1, #6
10062d8a:	7221      	strb	r1, [r4, #8]
10062d8c:	71e0      	strb	r0, [r4, #7]
10062d8e:	71a1      	strb	r1, [r4, #6]
10062d90:	20ff      	movs	r0, #255	@ 0xff
10062d92:	7160      	strb	r0, [r4, #5]
10062d94:	2082      	movs	r0, #130	@ 0x82
10062d96:	7120      	strb	r0, [r4, #4]
10062d98:	2042      	movs	r0, #66	@ 0x42
10062d9a:	4621      	mov	r1, r4
10062d9c:	f7ed fb4d 	bl	1005043a <aci_event_fifo_push>
10062da0:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
10062da2:	2003      	movs	r0, #3
10062da4:	4622      	mov	r2, r4
10062da6:	f000 f809 	bl	10062dbc <MBM_move_class>
10062daa:	8928      	ldrh	r0, [r5, #8]
10062dac:	1900      	adds	r0, r0, r4
10062dae:	8128      	strh	r0, [r5, #8]
10062db0:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
10062db2:	46c0      	nop			@ (mov r8, r8)

10062db4 <__arm_cp.7_0>:
10062db4:	200008a0 	.word	0x200008a0

10062db8 <__arm_cp.7_1>:
10062db8:	20000840 	.word	0x20000840

10062dbc <MBM_move_class>:
10062dbc:	b510      	push	{r4, lr}
10062dbe:	4b08      	ldr	r3, [pc, #32]	@ (10062de0 <__arm_cp.8_0>)
10062dc0:	681b      	ldr	r3, [r3, #0]
10062dc2:	681b      	ldr	r3, [r3, #0]
10062dc4:	f3ef 8410 	mrs	r4, PRIMASK
10062dc8:	b672      	cpsid	i
10062dca:	0040      	lsls	r0, r0, #1
10062dcc:	5a1c      	ldrh	r4, [r3, r0]
10062dce:	1aa4      	subs	r4, r4, r2
10062dd0:	521c      	strh	r4, [r3, r0]
10062dd2:	0048      	lsls	r0, r1, #1
10062dd4:	5a19      	ldrh	r1, [r3, r0]
10062dd6:	1889      	adds	r1, r1, r2
10062dd8:	5219      	strh	r1, [r3, r0]
10062dda:	b662      	cpsie	i
10062ddc:	bd10      	pop	{r4, pc}
10062dde:	46c0      	nop			@ (mov r8, r8)

10062de0 <__arm_cp.8_0>:
10062de0:	200008a0 	.word	0x200008a0

10062de4 <MBM_unreserve>:
10062de4:	b5b0      	push	{r4, r5, r7, lr}
10062de6:	460c      	mov	r4, r1
10062de8:	4905      	ldr	r1, [pc, #20]	@ (10062e00 <__arm_cp.9_0>)
10062dea:	6809      	ldr	r1, [r1, #0]
10062dec:	680d      	ldr	r5, [r1, #0]
10062dee:	2103      	movs	r1, #3
10062df0:	4622      	mov	r2, r4
10062df2:	f7ff ffe3 	bl	10062dbc <MBM_move_class>
10062df6:	8928      	ldrh	r0, [r5, #8]
10062df8:	1b00      	subs	r0, r0, r4
10062dfa:	8128      	strh	r0, [r5, #8]
10062dfc:	bdb0      	pop	{r4, r5, r7, pc}
10062dfe:	46c0      	nop			@ (mov r8, r8)

10062e00 <__arm_cp.9_0>:
10062e00:	200008a0 	.word	0x200008a0

10062e04 <csmem_init>:
10062e04:	4801      	ldr	r0, [pc, #4]	@ (10062e0c <__arm_cp.0_0>)
10062e06:	6841      	ldr	r1, [r0, #4]
10062e08:	6001      	str	r1, [r0, #0]
10062e0a:	4770      	bx	lr

10062e0c <__arm_cp.0_0>:
10062e0c:	200008a4 	.word	0x200008a4

10062e10 <csmem_mem_assign>:
10062e10:	b570      	push	{r4, r5, r6, lr}
10062e12:	4614      	mov	r4, r2
10062e14:	4605      	mov	r5, r0
10062e16:	434c      	muls	r4, r1
10062e18:	6800      	ldr	r0, [r0, #0]
10062e1a:	1e40      	subs	r0, r0, #1
10062e1c:	2103      	movs	r1, #3
10062e1e:	4301      	orrs	r1, r0
10062e20:	1c4e      	adds	r6, r1, #1
10062e22:	2100      	movs	r1, #0
10062e24:	4630      	mov	r0, r6
10062e26:	4622      	mov	r2, r4
10062e28:	f7e1 fdcc 	bl	100449c4 <BLEPLAT_MemSet>
10062e2c:	1930      	adds	r0, r6, r4
10062e2e:	6028      	str	r0, [r5, #0]
10062e30:	4630      	mov	r0, r6
10062e32:	bd70      	pop	{r4, r5, r6, pc}

10062e34 <csmem_mem_0_assign>:
10062e34:	b580      	push	{r7, lr}
10062e36:	460a      	mov	r2, r1
10062e38:	4601      	mov	r1, r0
10062e3a:	4802      	ldr	r0, [pc, #8]	@ (10062e44 <__arm_cp.3_0>)
10062e3c:	f7ff ffe8 	bl	10062e10 <csmem_mem_assign>
10062e40:	bd80      	pop	{r7, pc}
10062e42:	46c0      	nop			@ (mov r8, r8)

10062e44 <__arm_cp.3_0>:
10062e44:	200008a4 	.word	0x200008a4

10062e48 <Mem_Buff_init>:
10062e48:	b5f0      	push	{r4, r5, r6, r7, lr}
10062e4a:	b081      	sub	sp, #4
10062e4c:	4605      	mov	r5, r0
10062e4e:	8840      	ldrh	r0, [r0, #2]
10062e50:	2486      	movs	r4, #134	@ 0x86
10062e52:	2800      	cmp	r0, #0
10062e54:	d010      	beq.n	10062e78 <Mem_Buff_init+0x30>
10062e56:	68ae      	ldr	r6, [r5, #8]
10062e58:	2e00      	cmp	r6, #0
10062e5a:	d00d      	beq.n	10062e78 <Mem_Buff_init+0x30>
10062e5c:	2400      	movs	r4, #0
10062e5e:	606c      	str	r4, [r5, #4]
10062e60:	802c      	strh	r4, [r5, #0]
10062e62:	4627      	mov	r7, r4
10062e64:	6034      	str	r4, [r6, #0]
10062e66:	4628      	mov	r0, r5
10062e68:	4631      	mov	r1, r6
10062e6a:	f000 f808 	bl	10062e7e <Mem_Buff_release>
10062e6e:	3624      	adds	r6, #36	@ 0x24
10062e70:	1c7f      	adds	r7, r7, #1
10062e72:	8868      	ldrh	r0, [r5, #2]
10062e74:	4287      	cmp	r7, r0
10062e76:	d3f5      	bcc.n	10062e64 <Mem_Buff_init+0x1c>
10062e78:	4620      	mov	r0, r4
10062e7a:	b001      	add	sp, #4
10062e7c:	bdf0      	pop	{r4, r5, r6, r7, pc}

10062e7e <Mem_Buff_release>:
10062e7e:	b510      	push	{r4, lr}
10062e80:	2900      	cmp	r1, #0
10062e82:	d015      	beq.n	10062eb0 <Mem_Buff_release+0x32>
10062e84:	2200      	movs	r2, #0
10062e86:	460c      	mov	r4, r1
10062e88:	4623      	mov	r3, r4
10062e8a:	1c52      	adds	r2, r2, #1
10062e8c:	6824      	ldr	r4, [r4, #0]
10062e8e:	2c00      	cmp	r4, #0
10062e90:	d1fa      	bne.n	10062e88 <Mem_Buff_release+0xa>
10062e92:	f3ef 8410 	mrs	r4, PRIMASK
10062e96:	b672      	cpsid	i
10062e98:	6844      	ldr	r4, [r0, #4]
10062e9a:	6041      	str	r1, [r0, #4]
10062e9c:	601c      	str	r4, [r3, #0]
10062e9e:	8801      	ldrh	r1, [r0, #0]
10062ea0:	1889      	adds	r1, r1, r2
10062ea2:	8001      	strh	r1, [r0, #0]
10062ea4:	b662      	cpsie	i
10062ea6:	2000      	movs	r0, #0
10062ea8:	f002 f9ea 	bl	10065280 <tsk_signal_resource_idx>
10062eac:	f7df fd13 	bl	100428d6 <BLE_STACK_ProcessRequest>
10062eb0:	bd10      	pop	{r4, pc}
	...

10062eb4 <Mem_Buff_get>:
10062eb4:	b5f0      	push	{r4, r5, r6, r7, lr}
10062eb6:	4a11      	ldr	r2, [pc, #68]	@ (10062efc <__arm_cp.2_0>)
10062eb8:	1889      	adds	r1, r1, r2
10062eba:	0949      	lsrs	r1, r1, #5
10062ebc:	1c4a      	adds	r2, r1, #1
10062ebe:	b294      	uxth	r4, r2
10062ec0:	f3ef 8110 	mrs	r1, PRIMASK
10062ec4:	b672      	cpsid	i
10062ec6:	2100      	movs	r1, #0
10062ec8:	2c00      	cmp	r4, #0
10062eca:	d013      	beq.n	10062ef4 <Mem_Buff_get+0x40>
10062ecc:	8803      	ldrh	r3, [r0, #0]
10062ece:	429c      	cmp	r4, r3
10062ed0:	d810      	bhi.n	10062ef4 <Mem_Buff_get+0x40>
10062ed2:	1e64      	subs	r4, r4, #1
10062ed4:	6841      	ldr	r1, [r0, #4]
10062ed6:	460d      	mov	r5, r1
10062ed8:	d006      	beq.n	10062ee8 <Mem_Buff_get+0x34>
10062eda:	2600      	movs	r6, #0
10062edc:	460d      	mov	r5, r1
10062ede:	682d      	ldr	r5, [r5, #0]
10062ee0:	1c76      	adds	r6, r6, #1
10062ee2:	b2b7      	uxth	r7, r6
10062ee4:	42bc      	cmp	r4, r7
10062ee6:	d8fa      	bhi.n	10062ede <Mem_Buff_get+0x2a>
10062ee8:	682c      	ldr	r4, [r5, #0]
10062eea:	6044      	str	r4, [r0, #4]
10062eec:	2400      	movs	r4, #0
10062eee:	602c      	str	r4, [r5, #0]
10062ef0:	1a9a      	subs	r2, r3, r2
10062ef2:	8002      	strh	r2, [r0, #0]
10062ef4:	b662      	cpsie	i
10062ef6:	4608      	mov	r0, r1
10062ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10062efa:	46c0      	nop			@ (mov r8, r8)

10062efc <__arm_cp.2_0>:
10062efc:	001fffff 	.word	0x001fffff

10062f00 <Mem_Buff_get_chain_count>:
10062f00:	2100      	movs	r1, #0
10062f02:	2800      	cmp	r0, #0
10062f04:	d002      	beq.n	10062f0c <Mem_Buff_get_chain_count+0xc>
10062f06:	6800      	ldr	r0, [r0, #0]
10062f08:	1c49      	adds	r1, r1, #1
10062f0a:	e7fa      	b.n	10062f02 <Mem_Buff_get_chain_count+0x2>
10062f0c:	b288      	uxth	r0, r1
10062f0e:	4770      	bx	lr

10062f10 <Mem_Buff_get_chain_size>:
10062f10:	2800      	cmp	r0, #0
10062f12:	d006      	beq.n	10062f22 <Mem_Buff_get_chain_size+0x12>
10062f14:	2100      	movs	r1, #0
10062f16:	6800      	ldr	r0, [r0, #0]
10062f18:	1c49      	adds	r1, r1, #1
10062f1a:	2800      	cmp	r0, #0
10062f1c:	d1fb      	bne.n	10062f16 <Mem_Buff_get_chain_size+0x6>
10062f1e:	0148      	lsls	r0, r1, #5
10062f20:	e000      	b.n	10062f24 <Mem_Buff_get_chain_size+0x14>
10062f22:	2000      	movs	r0, #0
10062f24:	b280      	uxth	r0, r0
10062f26:	4770      	bx	lr

10062f28 <Mem_Buff_resize>:
10062f28:	b570      	push	{r4, r5, r6, lr}
10062f2a:	2400      	movs	r4, #0
10062f2c:	2900      	cmp	r1, #0
10062f2e:	d00a      	beq.n	10062f46 <Mem_Buff_resize+0x1e>
10062f30:	2600      	movs	r6, #0
10062f32:	460d      	mov	r5, r1
10062f34:	6809      	ldr	r1, [r1, #0]
10062f36:	4633      	mov	r3, r6
10062f38:	3320      	adds	r3, #32
10062f3a:	b29e      	uxth	r6, r3
10062f3c:	4296      	cmp	r6, r2
10062f3e:	d20e      	bcs.n	10062f5e <Mem_Buff_resize+0x36>
10062f40:	2900      	cmp	r1, #0
10062f42:	d1f6      	bne.n	10062f32 <Mem_Buff_resize+0xa>
10062f44:	e001      	b.n	10062f4a <Mem_Buff_resize+0x22>
10062f46:	4623      	mov	r3, r4
10062f48:	4625      	mov	r5, r4
10062f4a:	1ad1      	subs	r1, r2, r3
10062f4c:	b289      	uxth	r1, r1
10062f4e:	f7ff ffb1 	bl	10062eb4 <Mem_Buff_get>
10062f52:	6028      	str	r0, [r5, #0]
10062f54:	2800      	cmp	r0, #0
10062f56:	d10a      	bne.n	10062f6e <Mem_Buff_resize+0x46>
10062f58:	2079      	movs	r0, #121	@ 0x79
10062f5a:	43c4      	mvns	r4, r0
10062f5c:	e007      	b.n	10062f6e <Mem_Buff_resize+0x46>
10062f5e:	2900      	cmp	r1, #0
10062f60:	d004      	beq.n	10062f6c <Mem_Buff_resize+0x44>
10062f62:	f7ff ff8c 	bl	10062e7e <Mem_Buff_release>
10062f66:	2400      	movs	r4, #0
10062f68:	602c      	str	r4, [r5, #0]
10062f6a:	e000      	b.n	10062f6e <Mem_Buff_resize+0x46>
10062f6c:	2400      	movs	r4, #0
10062f6e:	b2e0      	uxtb	r0, r4
10062f70:	bd70      	pop	{r4, r5, r6, pc}

10062f72 <Mem_Buff_get_buff_off>:
10062f72:	2900      	cmp	r1, #0
10062f74:	d008      	beq.n	10062f88 <Mem_Buff_get_buff_off+0x16>
10062f76:	2800      	cmp	r0, #0
10062f78:	d009      	beq.n	10062f8e <Mem_Buff_get_buff_off+0x1c>
10062f7a:	b28b      	uxth	r3, r1
10062f7c:	2b20      	cmp	r3, #32
10062f7e:	d304      	bcc.n	10062f8a <Mem_Buff_get_buff_off+0x18>
10062f80:	6800      	ldr	r0, [r0, #0]
10062f82:	3920      	subs	r1, #32
10062f84:	040b      	lsls	r3, r1, #16
10062f86:	d1f6      	bne.n	10062f76 <Mem_Buff_get_buff_off+0x4>
10062f88:	2100      	movs	r1, #0
10062f8a:	8011      	strh	r1, [r2, #0]
10062f8c:	4770      	bx	lr
10062f8e:	2000      	movs	r0, #0
10062f90:	4770      	bx	lr

10062f92 <Mem_Buff_write>:
10062f92:	b5f0      	push	{r4, r5, r6, r7, lr}
10062f94:	b081      	sub	sp, #4
10062f96:	4606      	mov	r6, r0
10062f98:	0950      	lsrs	r0, r2, #5
10062f9a:	0604      	lsls	r4, r0, #24
10062f9c:	d004      	beq.n	10062fa8 <Mem_Buff_write+0x16>
10062f9e:	2e00      	cmp	r6, #0
10062fa0:	d02d      	beq.n	10062ffe <Mem_Buff_write+0x6c>
10062fa2:	6836      	ldr	r6, [r6, #0]
10062fa4:	1e40      	subs	r0, r0, #1
10062fa6:	e7f8      	b.n	10062f9a <Mem_Buff_write+0x8>
10062fa8:	461c      	mov	r4, r3
10062faa:	1e5b      	subs	r3, r3, #1
10062fac:	4620      	mov	r0, r4
10062fae:	4198      	sbcs	r0, r3
10062fb0:	2c00      	cmp	r4, #0
10062fb2:	d01f      	beq.n	10062ff4 <Mem_Buff_write+0x62>
10062fb4:	2e00      	cmp	r6, #0
10062fb6:	d01d      	beq.n	10062ff4 <Mem_Buff_write+0x62>
10062fb8:	201f      	movs	r0, #31
10062fba:	4002      	ands	r2, r0
10062fbc:	2020      	movs	r0, #32
10062fbe:	1a85      	subs	r5, r0, r2
10062fc0:	b2a8      	uxth	r0, r5
10062fc2:	b2a3      	uxth	r3, r4
10062fc4:	4298      	cmp	r0, r3
10062fc6:	d300      	bcc.n	10062fca <Mem_Buff_write+0x38>
10062fc8:	4625      	mov	r5, r4
10062fca:	9500      	str	r5, [sp, #0]
10062fcc:	b2af      	uxth	r7, r5
10062fce:	18b0      	adds	r0, r6, r2
10062fd0:	1d00      	adds	r0, r0, #4
10062fd2:	463a      	mov	r2, r7
10062fd4:	460d      	mov	r5, r1
10062fd6:	f7e1 fce5 	bl	100449a4 <BLEPLAT_MemCpy>
10062fda:	9800      	ldr	r0, [sp, #0]
10062fdc:	1a24      	subs	r4, r4, r0
10062fde:	b2a1      	uxth	r1, r4
10062fe0:	1e4a      	subs	r2, r1, #1
10062fe2:	4608      	mov	r0, r1
10062fe4:	4190      	sbcs	r0, r2
10062fe6:	2900      	cmp	r1, #0
10062fe8:	d004      	beq.n	10062ff4 <Mem_Buff_write+0x62>
10062fea:	19e9      	adds	r1, r5, r7
10062fec:	6836      	ldr	r6, [r6, #0]
10062fee:	2200      	movs	r2, #0
10062ff0:	2e00      	cmp	r6, #0
10062ff2:	d1e3      	bne.n	10062fbc <Mem_Buff_write+0x2a>
10062ff4:	2800      	cmp	r0, #0
10062ff6:	d003      	beq.n	10063000 <Mem_Buff_write+0x6e>
10062ff8:	207e      	movs	r0, #126	@ 0x7e
10062ffa:	43c0      	mvns	r0, r0
10062ffc:	e000      	b.n	10063000 <Mem_Buff_write+0x6e>
10062ffe:	2081      	movs	r0, #129	@ 0x81
10063000:	b2c0      	uxtb	r0, r0
10063002:	b001      	add	sp, #4
10063004:	bdf0      	pop	{r4, r5, r6, r7, pc}

10063006 <Mem_Buff_read>:
10063006:	b5f0      	push	{r4, r5, r6, r7, lr}
10063008:	b081      	sub	sp, #4
1006300a:	460d      	mov	r5, r1
1006300c:	4606      	mov	r6, r0
1006300e:	2a00      	cmp	r2, #0
10063010:	d008      	beq.n	10063024 <Mem_Buff_read+0x1e>
10063012:	2e00      	cmp	r6, #0
10063014:	d02a      	beq.n	1006306c <Mem_Buff_read+0x66>
10063016:	b290      	uxth	r0, r2
10063018:	2820      	cmp	r0, #32
1006301a:	d306      	bcc.n	1006302a <Mem_Buff_read+0x24>
1006301c:	6836      	ldr	r6, [r6, #0]
1006301e:	3a20      	subs	r2, #32
10063020:	0410      	lsls	r0, r2, #16
10063022:	d1f6      	bne.n	10063012 <Mem_Buff_read+0xc>
10063024:	2e00      	cmp	r6, #0
10063026:	d021      	beq.n	1006306c <Mem_Buff_read+0x66>
10063028:	2200      	movs	r2, #0
1006302a:	2b00      	cmp	r3, #0
1006302c:	d020      	beq.n	10063070 <Mem_Buff_read+0x6a>
1006302e:	2020      	movs	r0, #32
10063030:	1a84      	subs	r4, r0, r2
10063032:	b2a0      	uxth	r0, r4
10063034:	b299      	uxth	r1, r3
10063036:	4288      	cmp	r0, r1
10063038:	d300      	bcc.n	1006303c <Mem_Buff_read+0x36>
1006303a:	461c      	mov	r4, r3
1006303c:	b2a7      	uxth	r7, r4
1006303e:	b290      	uxth	r0, r2
10063040:	1830      	adds	r0, r6, r0
10063042:	1d01      	adds	r1, r0, #4
10063044:	4628      	mov	r0, r5
10063046:	463a      	mov	r2, r7
10063048:	9300      	str	r3, [sp, #0]
1006304a:	f7e1 fcab 	bl	100449a4 <BLEPLAT_MemCpy>
1006304e:	9b00      	ldr	r3, [sp, #0]
10063050:	1b1b      	subs	r3, r3, r4
10063052:	0418      	lsls	r0, r3, #16
10063054:	d004      	beq.n	10063060 <Mem_Buff_read+0x5a>
10063056:	19ed      	adds	r5, r5, r7
10063058:	6836      	ldr	r6, [r6, #0]
1006305a:	2200      	movs	r2, #0
1006305c:	2e00      	cmp	r6, #0
1006305e:	d1e6      	bne.n	1006302e <Mem_Buff_read+0x28>
10063060:	b298      	uxth	r0, r3
10063062:	2800      	cmp	r0, #0
10063064:	d005      	beq.n	10063072 <Mem_Buff_read+0x6c>
10063066:	207e      	movs	r0, #126	@ 0x7e
10063068:	43c0      	mvns	r0, r0
1006306a:	e002      	b.n	10063072 <Mem_Buff_read+0x6c>
1006306c:	2081      	movs	r0, #129	@ 0x81
1006306e:	e000      	b.n	10063072 <Mem_Buff_read+0x6c>
10063070:	2000      	movs	r0, #0
10063072:	b2c0      	uxtb	r0, r0
10063074:	b001      	add	sp, #4
10063076:	bdf0      	pop	{r4, r5, r6, r7, pc}

10063078 <Mem_Buff_cmp>:
10063078:	b5f0      	push	{r4, r5, r6, r7, lr}
1006307a:	b083      	sub	sp, #12
1006307c:	9102      	str	r1, [sp, #8]
1006307e:	4606      	mov	r6, r0
10063080:	2a00      	cmp	r2, #0
10063082:	d008      	beq.n	10063096 <Mem_Buff_cmp+0x1e>
10063084:	2e00      	cmp	r6, #0
10063086:	d033      	beq.n	100630f0 <Mem_Buff_cmp+0x78>
10063088:	b290      	uxth	r0, r2
1006308a:	2820      	cmp	r0, #32
1006308c:	d306      	bcc.n	1006309c <Mem_Buff_cmp+0x24>
1006308e:	6836      	ldr	r6, [r6, #0]
10063090:	3a20      	subs	r2, #32
10063092:	0410      	lsls	r0, r2, #16
10063094:	d1f6      	bne.n	10063084 <Mem_Buff_cmp+0xc>
10063096:	2e00      	cmp	r6, #0
10063098:	d02a      	beq.n	100630f0 <Mem_Buff_cmp+0x78>
1006309a:	2200      	movs	r2, #0
1006309c:	2b00      	cmp	r3, #0
1006309e:	9301      	str	r3, [sp, #4]
100630a0:	d020      	beq.n	100630e4 <Mem_Buff_cmp+0x6c>
100630a2:	2700      	movs	r7, #0
100630a4:	461d      	mov	r5, r3
100630a6:	b290      	uxth	r0, r2
100630a8:	281f      	cmp	r0, #31
100630aa:	d814      	bhi.n	100630d6 <Mem_Buff_cmp+0x5e>
100630ac:	2120      	movs	r1, #32
100630ae:	1a8c      	subs	r4, r1, r2
100630b0:	b2a1      	uxth	r1, r4
100630b2:	b2aa      	uxth	r2, r5
100630b4:	4291      	cmp	r1, r2
100630b6:	d300      	bcc.n	100630ba <Mem_Buff_cmp+0x42>
100630b8:	462c      	mov	r4, r5
100630ba:	b2a2      	uxth	r2, r4
100630bc:	b2b9      	uxth	r1, r7
100630be:	9b02      	ldr	r3, [sp, #8]
100630c0:	1859      	adds	r1, r3, r1
100630c2:	1830      	adds	r0, r6, r0
100630c4:	1d00      	adds	r0, r0, #4
100630c6:	f7e1 fc8d 	bl	100449e4 <BLEPLAT_MemCmp>
100630ca:	2800      	cmp	r0, #0
100630cc:	d10f      	bne.n	100630ee <Mem_Buff_cmp+0x76>
100630ce:	1b2d      	subs	r5, r5, r4
100630d0:	19e7      	adds	r7, r4, r7
100630d2:	2200      	movs	r2, #0
100630d4:	e000      	b.n	100630d8 <Mem_Buff_cmp+0x60>
100630d6:	3a20      	subs	r2, #32
100630d8:	0428      	lsls	r0, r5, #16
100630da:	d004      	beq.n	100630e6 <Mem_Buff_cmp+0x6e>
100630dc:	6836      	ldr	r6, [r6, #0]
100630de:	2e00      	cmp	r6, #0
100630e0:	d1e1      	bne.n	100630a6 <Mem_Buff_cmp+0x2e>
100630e2:	e000      	b.n	100630e6 <Mem_Buff_cmp+0x6e>
100630e4:	2700      	movs	r7, #0
100630e6:	b2b8      	uxth	r0, r7
100630e8:	9b01      	ldr	r3, [sp, #4]
100630ea:	1a1b      	subs	r3, r3, r0
100630ec:	e000      	b.n	100630f0 <Mem_Buff_cmp+0x78>
100630ee:	4603      	mov	r3, r0
100630f0:	4618      	mov	r0, r3
100630f2:	b003      	add	sp, #12
100630f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

100630f6 <Mem_Buff_block_copy>:
100630f6:	b510      	push	{r4, lr}
100630f8:	1e52      	subs	r2, r2, #1
100630fa:	231f      	movs	r3, #31
100630fc:	4313      	orrs	r3, r2
100630fe:	b29a      	uxth	r2, r3
10063100:	1c53      	adds	r3, r2, #1
10063102:	b29a      	uxth	r2, r3
10063104:	429a      	cmp	r2, r3
10063106:	d001      	beq.n	1006310c <Mem_Buff_block_copy+0x16>
10063108:	2200      	movs	r2, #0
1006310a:	e00d      	b.n	10063128 <Mem_Buff_block_copy+0x32>
1006310c:	0953      	lsrs	r3, r2, #5
1006310e:	460a      	mov	r2, r1
10063110:	2100      	movs	r1, #0
10063112:	1854      	adds	r4, r2, r1
10063114:	6864      	ldr	r4, [r4, #4]
10063116:	5044      	str	r4, [r0, r1]
10063118:	1d09      	adds	r1, r1, #4
1006311a:	2920      	cmp	r1, #32
1006311c:	d1f9      	bne.n	10063112 <Mem_Buff_block_copy+0x1c>
1006311e:	6811      	ldr	r1, [r2, #0]
10063120:	3020      	adds	r0, #32
10063122:	1e5b      	subs	r3, r3, #1
10063124:	041c      	lsls	r4, r3, #16
10063126:	d1f2      	bne.n	1006310e <Mem_Buff_block_copy+0x18>
10063128:	4610      	mov	r0, r2
1006312a:	bd10      	pop	{r4, pc}

1006312c <Mem_Buff_block_write>:
1006312c:	b5b0      	push	{r4, r5, r7, lr}
1006312e:	1e52      	subs	r2, r2, #1
10063130:	231f      	movs	r3, #31
10063132:	4313      	orrs	r3, r2
10063134:	b29a      	uxth	r2, r3
10063136:	1c53      	adds	r3, r2, #1
10063138:	b29a      	uxth	r2, r3
1006313a:	429a      	cmp	r2, r3
1006313c:	d10c      	bne.n	10063158 <Mem_Buff_block_write+0x2c>
1006313e:	0952      	lsrs	r2, r2, #5
10063140:	1d03      	adds	r3, r0, #4
10063142:	2400      	movs	r4, #0
10063144:	590d      	ldr	r5, [r1, r4]
10063146:	511d      	str	r5, [r3, r4]
10063148:	1d24      	adds	r4, r4, #4
1006314a:	2c20      	cmp	r4, #32
1006314c:	d1fa      	bne.n	10063144 <Mem_Buff_block_write+0x18>
1006314e:	6800      	ldr	r0, [r0, #0]
10063150:	3120      	adds	r1, #32
10063152:	1e52      	subs	r2, r2, #1
10063154:	0413      	lsls	r3, r2, #16
10063156:	d1f3      	bne.n	10063140 <Mem_Buff_block_write+0x14>
10063158:	bdb0      	pop	{r4, r5, r7, pc}

1006315a <Mem_Buff_append>:
1006315a:	4602      	mov	r2, r0
1006315c:	6800      	ldr	r0, [r0, #0]
1006315e:	2800      	cmp	r0, #0
10063160:	d1fb      	bne.n	1006315a <Mem_Buff_append>
10063162:	6011      	str	r1, [r2, #0]
10063164:	4770      	bx	lr
	...

10063168 <BlueNRG_Stack_Initialize_RAM_check>:
10063168:	b5f0      	push	{r4, r5, r6, r7, lr}
1006316a:	b097      	sub	sp, #92	@ 0x5c
1006316c:	4ce5      	ldr	r4, [pc, #916]	@ (10063504 <__arm_cp.0_4>)
1006316e:	2067      	movs	r0, #103	@ 0x67
10063170:	43c5      	mvns	r5, r0
10063172:	f7eb f98c 	bl	1004e48e <conn_supp_csr_ucfg>
10063176:	4ee4      	ldr	r6, [pc, #912]	@ (10063508 <__arm_cp.0_5>)
10063178:	2801      	cmp	r0, #1
1006317a:	d002      	beq.n	10063182 <BlueNRG_Stack_Initialize_RAM_check+0x1a>
1006317c:	7af0      	ldrb	r0, [r6, #11]
1006317e:	2800      	cmp	r0, #0
10063180:	d010      	beq.n	100631a4 <BlueNRG_Stack_Initialize_RAM_check+0x3c>
10063182:	4627      	mov	r7, r4
10063184:	462c      	mov	r4, r5
10063186:	3438      	adds	r4, #56	@ 0x38
10063188:	f7eb f981 	bl	1004e48e <conn_supp_csr_ucfg>
1006318c:	7af1      	ldrb	r1, [r6, #11]
1006318e:	4361      	muls	r1, r4
10063190:	4378      	muls	r0, r7
10063192:	1838      	adds	r0, r7, r0
10063194:	1844      	adds	r4, r0, r1
10063196:	f7eb f97a 	bl	1004e48e <conn_supp_csr_ucfg>
1006319a:	7af1      	ldrb	r1, [r6, #11]
1006319c:	4341      	muls	r1, r0
1006319e:	48db      	ldr	r0, [pc, #876]	@ (1006350c <__arm_cp.0_6>)
100631a0:	4348      	muls	r0, r1
100631a2:	1824      	adds	r4, r4, r0
100631a4:	3416      	adds	r4, #22
100631a6:	f7eb f972 	bl	1004e48e <conn_supp_csr_ucfg>
100631aa:	2801      	cmp	r0, #1
100631ac:	d10e      	bne.n	100631cc <BlueNRG_Stack_Initialize_RAM_check+0x64>
100631ae:	4628      	mov	r0, r5
100631b0:	3060      	adds	r0, #96	@ 0x60
100631b2:	8931      	ldrh	r1, [r6, #8]
100631b4:	4341      	muls	r1, r0
100631b6:	4628      	mov	r0, r5
100631b8:	3044      	adds	r0, #68	@ 0x44
100631ba:	7ab2      	ldrb	r2, [r6, #10]
100631bc:	4342      	muls	r2, r0
100631be:	1850      	adds	r0, r2, r1
100631c0:	4629      	mov	r1, r5
100631c2:	3148      	adds	r1, #72	@ 0x48
100631c4:	7b32      	ldrb	r2, [r6, #12]
100631c6:	434a      	muls	r2, r1
100631c8:	1880      	adds	r0, r0, r2
100631ca:	e000      	b.n	100631ce <BlueNRG_Stack_Initialize_RAM_check+0x66>
100631cc:	2000      	movs	r0, #0
100631ce:	9003      	str	r0, [sp, #12]
100631d0:	89f0      	ldrh	r0, [r6, #14]
100631d2:	900a      	str	r0, [sp, #40]	@ 0x28
100631d4:	f7f2 f958 	bl	10055488 <data_length_extension_csr_ucfg_weak>
100631d8:	2801      	cmp	r0, #1
100631da:	d001      	beq.n	100631e0 <BlueNRG_Stack_Initialize_RAM_check+0x78>
100631dc:	f7eb fe49 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
100631e0:	f7f2 fa20 	bl	10055624 <phy_upd_csr_ucfg_weak>
100631e4:	2801      	cmp	r0, #1
100631e6:	9411      	str	r4, [sp, #68]	@ 0x44
100631e8:	d109      	bne.n	100631fe <BlueNRG_Stack_Initialize_RAM_check+0x96>
100631ea:	462c      	mov	r4, r5
100631ec:	3438      	adds	r4, #56	@ 0x38
100631ee:	f7eb f94e 	bl	1004e48e <conn_supp_csr_ucfg>
100631f2:	4360      	muls	r0, r4
100631f4:	7af1      	ldrb	r1, [r6, #11]
100631f6:	4341      	muls	r1, r0
100631f8:	3908      	subs	r1, #8
100631fa:	9109      	str	r1, [sp, #36]	@ 0x24
100631fc:	e001      	b.n	10063202 <BlueNRG_Stack_Initialize_RAM_check+0x9a>
100631fe:	2000      	movs	r0, #0
10063200:	9009      	str	r0, [sp, #36]	@ 0x24
10063202:	48f2      	ldr	r0, [pc, #968]	@ (100635cc <__arm_cp.0_3>)
10063204:	304c      	adds	r0, #76	@ 0x4c
10063206:	9013      	str	r0, [sp, #76]	@ 0x4c
10063208:	f7eb fe33 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
1006320c:	2801      	cmp	r0, #1
1006320e:	d015      	beq.n	1006323c <BlueNRG_Stack_Initialize_RAM_check+0xd4>
10063210:	f7f2 f93a 	bl	10055488 <data_length_extension_csr_ucfg_weak>
10063214:	2801      	cmp	r0, #1
10063216:	d011      	beq.n	1006323c <BlueNRG_Stack_Initialize_RAM_check+0xd4>
10063218:	2029      	movs	r0, #41	@ 0x29
1006321a:	5c30      	ldrb	r0, [r6, r0]
1006321c:	2800      	cmp	r0, #0
1006321e:	d10d      	bne.n	1006323c <BlueNRG_Stack_Initialize_RAM_check+0xd4>
10063220:	2025      	movs	r0, #37	@ 0x25
10063222:	5c30      	ldrb	r0, [r6, r0]
10063224:	2800      	cmp	r0, #0
10063226:	d109      	bne.n	1006323c <BlueNRG_Stack_Initialize_RAM_check+0xd4>
10063228:	2026      	movs	r0, #38	@ 0x26
1006322a:	5c30      	ldrb	r0, [r6, r0]
1006322c:	2800      	cmp	r0, #0
1006322e:	d002      	beq.n	10063236 <BlueNRG_Stack_Initialize_RAM_check+0xce>
10063230:	48e6      	ldr	r0, [pc, #920]	@ (100635cc <__arm_cp.0_3>)
10063232:	304c      	adds	r0, #76	@ 0x4c
10063234:	e001      	b.n	1006323a <BlueNRG_Stack_Initialize_RAM_check+0xd2>
10063236:	4628      	mov	r0, r5
10063238:	3024      	adds	r0, #36	@ 0x24
1006323a:	9013      	str	r0, [sp, #76]	@ 0x4c
1006323c:	48e3      	ldr	r0, [pc, #908]	@ (100635cc <__arm_cp.0_3>)
1006323e:	306c      	adds	r0, #108	@ 0x6c
10063240:	9012      	str	r0, [sp, #72]	@ 0x48
10063242:	f7eb fe16 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
10063246:	2801      	cmp	r0, #1
10063248:	d015      	beq.n	10063276 <BlueNRG_Stack_Initialize_RAM_check+0x10e>
1006324a:	f7f2 f91d 	bl	10055488 <data_length_extension_csr_ucfg_weak>
1006324e:	2801      	cmp	r0, #1
10063250:	d011      	beq.n	10063276 <BlueNRG_Stack_Initialize_RAM_check+0x10e>
10063252:	2029      	movs	r0, #41	@ 0x29
10063254:	5c30      	ldrb	r0, [r6, r0]
10063256:	2800      	cmp	r0, #0
10063258:	d10d      	bne.n	10063276 <BlueNRG_Stack_Initialize_RAM_check+0x10e>
1006325a:	2025      	movs	r0, #37	@ 0x25
1006325c:	5c30      	ldrb	r0, [r6, r0]
1006325e:	2800      	cmp	r0, #0
10063260:	d109      	bne.n	10063276 <BlueNRG_Stack_Initialize_RAM_check+0x10e>
10063262:	2026      	movs	r0, #38	@ 0x26
10063264:	5c30      	ldrb	r0, [r6, r0]
10063266:	2800      	cmp	r0, #0
10063268:	d002      	beq.n	10063270 <BlueNRG_Stack_Initialize_RAM_check+0x108>
1006326a:	48d8      	ldr	r0, [pc, #864]	@ (100635cc <__arm_cp.0_3>)
1006326c:	306c      	adds	r0, #108	@ 0x6c
1006326e:	e001      	b.n	10063274 <BlueNRG_Stack_Initialize_RAM_check+0x10c>
10063270:	4628      	mov	r0, r5
10063272:	303c      	adds	r0, #60	@ 0x3c
10063274:	9012      	str	r0, [sp, #72]	@ 0x48
10063276:	f7eb fdfc 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
1006327a:	9010      	str	r0, [sp, #64]	@ 0x40
1006327c:	7eb0      	ldrb	r0, [r6, #26]
1006327e:	9000      	str	r0, [sp, #0]
10063280:	7ff0      	ldrb	r0, [r6, #31]
10063282:	900f      	str	r0, [sp, #60]	@ 0x3c
10063284:	f7eb f903 	bl	1004e48e <conn_supp_csr_ucfg>
10063288:	9007      	str	r0, [sp, #28]
1006328a:	7ff0      	ldrb	r0, [r6, #31]
1006328c:	9001      	str	r0, [sp, #4]
1006328e:	f7f5 ffaa 	bl	100591e6 <llc_priv_controller_privacy_csr_ucfg_weak>
10063292:	9008      	str	r0, [sp, #32]
10063294:	7ff0      	ldrb	r0, [r6, #31]
10063296:	9002      	str	r0, [sp, #8]
10063298:	f001 fd8e 	bl	10064db8 <secure_connections_csr_ucfg_weak>
1006329c:	2700      	movs	r7, #0
1006329e:	f7eb f8ee 	bl	1004e47e <scan_csr_ucfg>
100632a2:	2801      	cmp	r0, #1
100632a4:	4638      	mov	r0, r7
100632a6:	9515      	str	r5, [sp, #84]	@ 0x54
100632a8:	9716      	str	r7, [sp, #88]	@ 0x58
100632aa:	d14f      	bne.n	1006334c <BlueNRG_Stack_Initialize_RAM_check+0x1e4>
100632ac:	7f70      	ldrb	r0, [r6, #29]
100632ae:	280a      	cmp	r0, #10
100632b0:	d300      	bcc.n	100632b4 <BlueNRG_Stack_Initialize_RAM_check+0x14c>
100632b2:	200a      	movs	r0, #10
100632b4:	462c      	mov	r4, r5
100632b6:	3438      	adds	r4, #56	@ 0x38
100632b8:	4344      	muls	r4, r0
100632ba:	3cc0      	subs	r4, #192	@ 0xc0
100632bc:	2500      	movs	r5, #0
100632be:	f7eb fa43 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
100632c2:	2801      	cmp	r0, #1
100632c4:	462f      	mov	r7, r5
100632c6:	d120      	bne.n	1006330a <BlueNRG_Stack_Initialize_RAM_check+0x1a2>
100632c8:	f7eb f8e1 	bl	1004e48e <conn_supp_csr_ucfg>
100632cc:	2801      	cmp	r0, #1
100632ce:	950e      	str	r5, [sp, #56]	@ 0x38
100632d0:	d003      	beq.n	100632da <BlueNRG_Stack_Initialize_RAM_check+0x172>
100632d2:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100632d4:	4618      	mov	r0, r3
100632d6:	3054      	adds	r0, #84	@ 0x54
100632d8:	e002      	b.n	100632e0 <BlueNRG_Stack_Initialize_RAM_check+0x178>
100632da:	9b15      	ldr	r3, [sp, #84]	@ 0x54
100632dc:	4618      	mov	r0, r3
100632de:	3048      	adds	r0, #72	@ 0x48
100632e0:	49ba      	ldr	r1, [pc, #744]	@ (100635cc <__arm_cp.0_3>)
100632e2:	31e0      	adds	r1, #224	@ 0xe0
100632e4:	7fb2      	ldrb	r2, [r6, #30]
100632e6:	434a      	muls	r2, r1
100632e8:	1810      	adds	r0, r2, r0
100632ea:	4619      	mov	r1, r3
100632ec:	3160      	adds	r1, #96	@ 0x60
100632ee:	7ff2      	ldrb	r2, [r6, #31]
100632f0:	4091      	lsls	r1, r2
100632f2:	461d      	mov	r5, r3
100632f4:	1847      	adds	r7, r0, r1
100632f6:	f7eb f8ca 	bl	1004e48e <conn_supp_csr_ucfg>
100632fa:	2801      	cmp	r0, #1
100632fc:	d104      	bne.n	10063308 <BlueNRG_Stack_Initialize_RAM_check+0x1a0>
100632fe:	4628      	mov	r0, r5
10063300:	3050      	adds	r0, #80	@ 0x50
10063302:	7af1      	ldrb	r1, [r6, #11]
10063304:	4341      	muls	r1, r0
10063306:	187f      	adds	r7, r7, r1
10063308:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
1006330a:	19e0      	adds	r0, r4, r7
1006330c:	9014      	str	r0, [sp, #80]	@ 0x50
1006330e:	f7eb fa7a 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
10063312:	4607      	mov	r7, r0
10063314:	f7eb fa18 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
10063318:	4604      	mov	r4, r0
1006331a:	403c      	ands	r4, r7
1006331c:	f7eb f8b7 	bl	1004e48e <conn_supp_csr_ucfg>
10063320:	4020      	ands	r0, r4
10063322:	2801      	cmp	r0, #1
10063324:	d108      	bne.n	10063338 <BlueNRG_Stack_Initialize_RAM_check+0x1d0>
10063326:	7ef0      	ldrb	r0, [r6, #27]
10063328:	1e40      	subs	r0, r0, #1
1006332a:	2103      	movs	r1, #3
1006332c:	4301      	orrs	r1, r0
1006332e:	7fb0      	ldrb	r0, [r6, #30]
10063330:	22b0      	movs	r2, #176	@ 0xb0
10063332:	4342      	muls	r2, r0
10063334:	43d0      	mvns	r0, r2
10063336:	1a45      	subs	r5, r0, r1
10063338:	9814      	ldr	r0, [sp, #80]	@ 0x50
1006333a:	1944      	adds	r4, r0, r5
1006333c:	f7eb fd99 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
10063340:	4360      	muls	r0, r4
10063342:	49a2      	ldr	r1, [pc, #648]	@ (100635cc <__arm_cp.0_3>)
10063344:	1808      	adds	r0, r1, r0
10063346:	302c      	adds	r0, #44	@ 0x2c
10063348:	9d15      	ldr	r5, [sp, #84]	@ 0x54
1006334a:	9f16      	ldr	r7, [sp, #88]	@ 0x58
1006334c:	9006      	str	r0, [sp, #24]
1006334e:	f7eb f89e 	bl	1004e48e <conn_supp_csr_ucfg>
10063352:	2801      	cmp	r0, #1
10063354:	4639      	mov	r1, r7
10063356:	d109      	bne.n	1006336c <BlueNRG_Stack_Initialize_RAM_check+0x204>
10063358:	f7f2 fb4c 	bl	100559f4 <l2c_cos_csr_ucfg_weak>
1006335c:	2801      	cmp	r0, #1
1006335e:	4639      	mov	r1, r7
10063360:	d104      	bne.n	1006336c <BlueNRG_Stack_Initialize_RAM_check+0x204>
10063362:	2022      	movs	r0, #34	@ 0x22
10063364:	5c30      	ldrb	r0, [r6, r0]
10063366:	4629      	mov	r1, r5
10063368:	3114      	adds	r1, #20
1006336a:	4341      	muls	r1, r0
1006336c:	9105      	str	r1, [sp, #20]
1006336e:	f7eb f9eb 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
10063372:	2801      	cmp	r0, #1
10063374:	4638      	mov	r0, r7
10063376:	d121      	bne.n	100633bc <BlueNRG_Stack_Initialize_RAM_check+0x254>
10063378:	4894      	ldr	r0, [pc, #592]	@ (100635cc <__arm_cp.0_3>)
1006337a:	30d4      	adds	r0, #212	@ 0xd4
1006337c:	7eb1      	ldrb	r1, [r6, #26]
1006337e:	4341      	muls	r1, r0
10063380:	4628      	mov	r0, r5
10063382:	3048      	adds	r0, #72	@ 0x48
10063384:	7af2      	ldrb	r2, [r6, #11]
10063386:	4342      	muls	r2, r0
10063388:	1854      	adds	r4, r2, r1
1006338a:	2700      	movs	r7, #0
1006338c:	f7eb fa3b 	bl	1004e806 <llc_padv_periodic_adv_sync_wr_csr_ucfg>
10063390:	2801      	cmp	r0, #1
10063392:	d110      	bne.n	100633b6 <BlueNRG_Stack_Initialize_RAM_check+0x24e>
10063394:	f7eb f87b 	bl	1004e48e <conn_supp_csr_ucfg>
10063398:	2801      	cmp	r0, #1
1006339a:	d10c      	bne.n	100633b6 <BlueNRG_Stack_Initialize_RAM_check+0x24e>
1006339c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1006339e:	4610      	mov	r0, r2
100633a0:	3058      	adds	r0, #88	@ 0x58
100633a2:	7f31      	ldrb	r1, [r6, #28]
100633a4:	4341      	muls	r1, r0
100633a6:	4610      	mov	r0, r2
100633a8:	3060      	adds	r0, #96	@ 0x60
100633aa:	7ef2      	ldrb	r2, [r6, #27]
100633ac:	4342      	muls	r2, r0
100633ae:	1850      	adds	r0, r2, r1
100633b0:	3884      	subs	r0, #132	@ 0x84
100633b2:	7eb7      	ldrb	r7, [r6, #26]
100633b4:	4347      	muls	r7, r0
100633b6:	19e0      	adds	r0, r4, r7
100633b8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
100633ba:	9f16      	ldr	r7, [sp, #88]	@ 0x58
100633bc:	900e      	str	r0, [sp, #56]	@ 0x38
100633be:	f7f1 feb1 	bl	10055124 <cte_csr_ucfg_weak>
100633c2:	2801      	cmp	r0, #1
100633c4:	4638      	mov	r0, r7
100633c6:	d133      	bne.n	10063430 <BlueNRG_Stack_Initialize_RAM_check+0x2c8>
100633c8:	f7eb f861 	bl	1004e48e <conn_supp_csr_ucfg>
100633cc:	2801      	cmp	r0, #1
100633ce:	d002      	beq.n	100633d6 <BlueNRG_Stack_Initialize_RAM_check+0x26e>
100633d0:	462f      	mov	r7, r5
100633d2:	375c      	adds	r7, #92	@ 0x5c
100633d4:	e004      	b.n	100633e0 <BlueNRG_Stack_Initialize_RAM_check+0x278>
100633d6:	4628      	mov	r0, r5
100633d8:	3060      	adds	r0, #96	@ 0x60
100633da:	7af7      	ldrb	r7, [r6, #11]
100633dc:	4347      	muls	r7, r0
100633de:	3f0c      	subs	r7, #12
100633e0:	2523      	movs	r5, #35	@ 0x23
100633e2:	5d70      	ldrb	r0, [r6, r5]
100633e4:	2400      	movs	r4, #0
100633e6:	2800      	cmp	r0, #0
100633e8:	4620      	mov	r0, r4
100633ea:	d005      	beq.n	100633f8 <BlueNRG_Stack_Initialize_RAM_check+0x290>
100633ec:	f7eb f84f 	bl	1004e48e <conn_supp_csr_ucfg>
100633f0:	5d70      	ldrb	r0, [r6, r5]
100633f2:	4240      	negs	r0, r0
100633f4:	2103      	movs	r1, #3
100633f6:	4388      	bics	r0, r1
100633f8:	19c0      	adds	r0, r0, r7
100633fa:	2724      	movs	r7, #36	@ 0x24
100633fc:	5df1      	ldrb	r1, [r6, r7]
100633fe:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10063400:	3264      	adds	r2, #100	@ 0x64
10063402:	434a      	muls	r2, r1
10063404:	1885      	adds	r5, r0, r2
10063406:	f7eb f83a 	bl	1004e47e <scan_csr_ucfg>
1006340a:	2801      	cmp	r0, #1
1006340c:	d10d      	bne.n	1006342a <BlueNRG_Stack_Initialize_RAM_check+0x2c2>
1006340e:	f7eb fd30 	bl	1004ee72 <ext_adv_scan_enabled_ucfg>
10063412:	2801      	cmp	r0, #1
10063414:	d109      	bne.n	1006342a <BlueNRG_Stack_Initialize_RAM_check+0x2c2>
10063416:	f7eb f997 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
1006341a:	2801      	cmp	r0, #1
1006341c:	d105      	bne.n	1006342a <BlueNRG_Stack_Initialize_RAM_check+0x2c2>
1006341e:	5df4      	ldrb	r4, [r6, r7]
10063420:	2c00      	cmp	r4, #0
10063422:	9815      	ldr	r0, [sp, #84]	@ 0x54
10063424:	d001      	beq.n	1006342a <BlueNRG_Stack_Initialize_RAM_check+0x2c2>
10063426:	4604      	mov	r4, r0
10063428:	3450      	adds	r4, #80	@ 0x50
1006342a:	1928      	adds	r0, r5, r4
1006342c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
1006342e:	9f16      	ldr	r7, [sp, #88]	@ 0x58
10063430:	900d      	str	r0, [sp, #52]	@ 0x34
10063432:	f7eb f82c 	bl	1004e48e <conn_supp_csr_ucfg>
10063436:	2801      	cmp	r0, #1
10063438:	4639      	mov	r1, r7
1006343a:	d109      	bne.n	10063450 <BlueNRG_Stack_Initialize_RAM_check+0x2e8>
1006343c:	f7f2 f8f0 	bl	10055620 <pcl_csr_ucfg_weak>
10063440:	2801      	cmp	r0, #1
10063442:	4639      	mov	r1, r7
10063444:	d104      	bne.n	10063450 <BlueNRG_Stack_Initialize_RAM_check+0x2e8>
10063446:	4628      	mov	r0, r5
10063448:	3048      	adds	r0, #72	@ 0x48
1006344a:	7af1      	ldrb	r1, [r6, #11]
1006344c:	4341      	muls	r1, r0
1006344e:	3914      	subs	r1, #20
10063450:	910c      	str	r1, [sp, #48]	@ 0x30
10063452:	f7eb f81c 	bl	1004e48e <conn_supp_csr_ucfg>
10063456:	2801      	cmp	r0, #1
10063458:	463a      	mov	r2, r7
1006345a:	d108      	bne.n	1006346e <BlueNRG_Stack_Initialize_RAM_check+0x306>
1006345c:	f7f1 fd44 	bl	10054ee8 <chc_csr_ucfg_weak>
10063460:	2801      	cmp	r0, #1
10063462:	463a      	mov	r2, r7
10063464:	d103      	bne.n	1006346e <BlueNRG_Stack_Initialize_RAM_check+0x306>
10063466:	4628      	mov	r0, r5
10063468:	304c      	adds	r0, #76	@ 0x4c
1006346a:	7af2      	ldrb	r2, [r6, #11]
1006346c:	4342      	muls	r2, r0
1006346e:	2026      	movs	r0, #38	@ 0x26
10063470:	5c31      	ldrb	r1, [r6, r0]
10063472:	2025      	movs	r0, #37	@ 0x25
10063474:	5c34      	ldrb	r4, [r6, r0]
10063476:	1863      	adds	r3, r4, r1
10063478:	2029      	movs	r0, #41	@ 0x29
1006347a:	5c30      	ldrb	r0, [r6, r0]
1006347c:	9304      	str	r3, [sp, #16]
1006347e:	2b00      	cmp	r3, #0
10063480:	9014      	str	r0, [sp, #80]	@ 0x50
10063482:	d010      	beq.n	100634a6 <BlueNRG_Stack_Initialize_RAM_check+0x33e>
10063484:	2028      	movs	r0, #40	@ 0x28
10063486:	5c33      	ldrb	r3, [r6, r0]
10063488:	4628      	mov	r0, r5
1006348a:	3060      	adds	r0, #96	@ 0x60
1006348c:	4358      	muls	r0, r3
1006348e:	38f8      	subs	r0, #248	@ 0xf8
10063490:	4348      	muls	r0, r1
10063492:	2327      	movs	r3, #39	@ 0x27
10063494:	5cf3      	ldrb	r3, [r6, r3]
10063496:	3554      	adds	r5, #84	@ 0x54
10063498:	435d      	muls	r5, r3
1006349a:	4b4c      	ldr	r3, [pc, #304]	@ (100635cc <__arm_cp.0_3>)
1006349c:	195b      	adds	r3, r3, r5
1006349e:	3348      	adds	r3, #72	@ 0x48
100634a0:	4363      	muls	r3, r4
100634a2:	181f      	adds	r7, r3, r0
100634a4:	9814      	ldr	r0, [sp, #80]	@ 0x50
100634a6:	2800      	cmp	r0, #0
100634a8:	9716      	str	r7, [sp, #88]	@ 0x58
100634aa:	920b      	str	r2, [sp, #44]	@ 0x2c
100634ac:	d00d      	beq.n	100634ca <BlueNRG_Stack_Initialize_RAM_check+0x362>
100634ae:	4602      	mov	r2, r0
100634b0:	202a      	movs	r0, #42	@ 0x2a
100634b2:	5c30      	ldrb	r0, [r6, r0]
100634b4:	4d45      	ldr	r5, [pc, #276]	@ (100635cc <__arm_cp.0_3>)
100634b6:	462b      	mov	r3, r5
100634b8:	33b0      	adds	r3, #176	@ 0xb0
100634ba:	4343      	muls	r3, r0
100634bc:	4637      	mov	r7, r6
100634be:	462e      	mov	r6, r5
100634c0:	36c8      	adds	r6, #200	@ 0xc8
100634c2:	4356      	muls	r6, r2
100634c4:	18f3      	adds	r3, r6, r3
100634c6:	3b48      	subs	r3, #72	@ 0x48
100634c8:	e003      	b.n	100634d2 <BlueNRG_Stack_Initialize_RAM_check+0x36a>
100634ca:	202a      	movs	r0, #42	@ 0x2a
100634cc:	5c30      	ldrb	r0, [r6, r0]
100634ce:	2300      	movs	r3, #0
100634d0:	4637      	mov	r7, r6
100634d2:	2628      	movs	r6, #40	@ 0x28
100634d4:	5dbe      	ldrb	r6, [r7, r6]
100634d6:	4371      	muls	r1, r6
100634d8:	1809      	adds	r1, r1, r0
100634da:	2627      	movs	r6, #39	@ 0x27
100634dc:	463d      	mov	r5, r7
100634de:	5dbe      	ldrb	r6, [r7, r6]
100634e0:	4374      	muls	r4, r6
100634e2:	1824      	adds	r4, r4, r0
100634e4:	1860      	adds	r0, r4, r1
100634e6:	d013      	beq.n	10063510 <__arm_cp.0_6+0x4>
100634e8:	9f15      	ldr	r7, [sp, #84]	@ 0x54
100634ea:	463e      	mov	r6, r7
100634ec:	364c      	adds	r6, #76	@ 0x4c
100634ee:	4366      	muls	r6, r4
100634f0:	463c      	mov	r4, r7
100634f2:	3434      	adds	r4, #52	@ 0x34
100634f4:	434c      	muls	r4, r1
100634f6:	19a1      	adds	r1, r4, r6
100634f8:	463c      	mov	r4, r7
100634fa:	345c      	adds	r4, #92	@ 0x5c
100634fc:	4344      	muls	r4, r0
100634fe:	190c      	adds	r4, r1, r4
10063500:	3c14      	subs	r4, #20
10063502:	e007      	b.n	10063514 <__arm_cp.0_6+0x8>

10063504 <__arm_cp.0_4>:
10063504:	fffffc18 	.word	0xfffffc18

10063508 <__arm_cp.0_5>:
10063508:	200008a8 	.word	0x200008a8

1006350c <__arm_cp.0_6>:
1006350c:	fffffd70 	.word	0xfffffd70
10063510:	2400      	movs	r4, #0
10063512:	9f15      	ldr	r7, [sp, #84]	@ 0x54
10063514:	9903      	ldr	r1, [sp, #12]
10063516:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10063518:	9811      	ldr	r0, [sp, #68]	@ 0x44
1006351a:	1808      	adds	r0, r1, r0
1006351c:	4639      	mov	r1, r7
1006351e:	3144      	adds	r1, #68	@ 0x44
10063520:	4371      	muls	r1, r6
10063522:	1840      	adds	r0, r0, r1
10063524:	9909      	ldr	r1, [sp, #36]	@ 0x24
10063526:	1840      	adds	r0, r0, r1
10063528:	9913      	ldr	r1, [sp, #76]	@ 0x4c
1006352a:	1840      	adds	r0, r0, r1
1006352c:	9912      	ldr	r1, [sp, #72]	@ 0x48
1006352e:	1841      	adds	r1, r0, r1
10063530:	4638      	mov	r0, r7
10063532:	3060      	adds	r0, #96	@ 0x60
10063534:	4606      	mov	r6, r0
10063536:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10063538:	4096      	lsls	r6, r2
1006353a:	1989      	adds	r1, r1, r6
1006353c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
1006353e:	2a01      	cmp	r2, #1
10063540:	d106      	bne.n	10063550 <__arm_cp.0_6+0x44>
10063542:	4e22      	ldr	r6, [pc, #136]	@ (100635cc <__arm_cp.0_3>)
10063544:	9a00      	ldr	r2, [sp, #0]
10063546:	4356      	muls	r6, r2
10063548:	1871      	adds	r1, r6, r1
1006354a:	2645      	movs	r6, #69	@ 0x45
1006354c:	00b6      	lsls	r6, r6, #2
1006354e:	1989      	adds	r1, r1, r6
10063550:	462e      	mov	r6, r5
10063552:	9d07      	ldr	r5, [sp, #28]
10063554:	9a05      	ldr	r2, [sp, #20]
10063556:	2d01      	cmp	r5, #1
10063558:	d102      	bne.n	10063560 <__arm_cp.0_6+0x54>
1006355a:	9d01      	ldr	r5, [sp, #4]
1006355c:	40a8      	lsls	r0, r5
1006355e:	1809      	adds	r1, r1, r0
10063560:	9808      	ldr	r0, [sp, #32]
10063562:	2801      	cmp	r0, #1
10063564:	d105      	bne.n	10063572 <__arm_cp.0_6+0x66>
10063566:	4638      	mov	r0, r7
10063568:	3018      	adds	r0, #24
1006356a:	9d02      	ldr	r5, [sp, #8]
1006356c:	40a8      	lsls	r0, r5
1006356e:	1841      	adds	r1, r0, r1
10063570:	3970      	subs	r1, #112	@ 0x70
10063572:	9806      	ldr	r0, [sp, #24]
10063574:	9d04      	ldr	r5, [sp, #16]
10063576:	1808      	adds	r0, r1, r0
10063578:	1880      	adds	r0, r0, r2
1006357a:	990e      	ldr	r1, [sp, #56]	@ 0x38
1006357c:	1840      	adds	r0, r0, r1
1006357e:	990d      	ldr	r1, [sp, #52]	@ 0x34
10063580:	1840      	adds	r0, r0, r1
10063582:	990c      	ldr	r1, [sp, #48]	@ 0x30
10063584:	1840      	adds	r0, r0, r1
10063586:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10063588:	1840      	adds	r0, r0, r1
1006358a:	9914      	ldr	r1, [sp, #80]	@ 0x50
1006358c:	42cd      	cmn	r5, r1
1006358e:	d001      	beq.n	10063594 <__arm_cp.0_6+0x88>
10063590:	1838      	adds	r0, r7, r0
10063592:	3058      	adds	r0, #88	@ 0x58
10063594:	9916      	ldr	r1, [sp, #88]	@ 0x58
10063596:	1840      	adds	r0, r0, r1
10063598:	18c0      	adds	r0, r0, r3
1006359a:	1904      	adds	r4, r0, r4
1006359c:	f7ec feae 	bl	100502fc <log_csr_ucfg_weak>
100635a0:	2801      	cmp	r0, #1
100635a2:	d100      	bne.n	100635a6 <__arm_cp.0_6+0x9a>
100635a4:	19e4      	adds	r4, r4, r7
100635a6:	6870      	ldr	r0, [r6, #4]
100635a8:	1820      	adds	r0, r4, r0
100635aa:	2103      	movs	r1, #3
100635ac:	43c9      	mvns	r1, r1
100635ae:	8df2      	ldrh	r2, [r6, #46]	@ 0x2e
100635b0:	1cd2      	adds	r2, r2, #3
100635b2:	400a      	ands	r2, r1
100635b4:	8db3      	ldrh	r3, [r6, #44]	@ 0x2c
100635b6:	1cdb      	adds	r3, r3, #3
100635b8:	400b      	ands	r3, r1
100635ba:	189a      	adds	r2, r3, r2
100635bc:	8e33      	ldrh	r3, [r6, #48]	@ 0x30
100635be:	1cdb      	adds	r3, r3, #3
100635c0:	400b      	ands	r3, r1
100635c2:	18d1      	adds	r1, r2, r3
100635c4:	1a40      	subs	r0, r0, r1
100635c6:	b017      	add	sp, #92	@ 0x5c
100635c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
100635ca:	46c0      	nop			@ (mov r8, r8)

100635cc <__arm_cp.0_3>:
100635cc:	fffffe90 	.word	0xfffffe90

100635d0 <sdb_sap_get_security_records_count>:
100635d0:	b580      	push	{r7, lr}
100635d2:	f001 fdbe 	bl	10065152 <nvm_sec_db_get_record_count>
100635d6:	bd80      	pop	{r7, pc}

100635d8 <sdb_sap_add_security_record>:
100635d8:	b5b0      	push	{r4, r5, r7, lr}
100635da:	b094      	sub	sp, #80	@ 0x50
100635dc:	4604      	mov	r4, r0
100635de:	7841      	ldrb	r1, [r0, #1]
100635e0:	2501      	movs	r5, #1
100635e2:	4029      	ands	r1, r5
100635e4:	303e      	adds	r0, #62	@ 0x3e
100635e6:	466a      	mov	r2, sp
100635e8:	f000 f819 	bl	1006361e <sdb_sap_read_security_record>
100635ec:	2800      	cmp	r0, #0
100635ee:	d10c      	bne.n	1006360a <sdb_sap_add_security_record+0x32>
100635f0:	4669      	mov	r1, sp
100635f2:	2250      	movs	r2, #80	@ 0x50
100635f4:	4620      	mov	r0, r4
100635f6:	f7e1 f9f5 	bl	100449e4 <BLEPLAT_MemCmp>
100635fa:	2800      	cmp	r0, #0
100635fc:	d008      	beq.n	10063610 <sdb_sap_add_security_record+0x38>
100635fe:	4669      	mov	r1, sp
10063600:	7848      	ldrb	r0, [r1, #1]
10063602:	4028      	ands	r0, r5
10063604:	313e      	adds	r1, #62	@ 0x3e
10063606:	f000 f83b 	bl	10063680 <sdb_remove_security_record_by_address>
1006360a:	7860      	ldrb	r0, [r4, #1]
1006360c:	2810      	cmp	r0, #16
1006360e:	d201      	bcs.n	10063614 <sdb_sap_add_security_record+0x3c>
10063610:	2000      	movs	r0, #0
10063612:	e002      	b.n	1006361a <sdb_sap_add_security_record+0x42>
10063614:	4620      	mov	r0, r4
10063616:	f001 fd91 	bl	1006513c <nvm_sec_db_add_record>
1006361a:	b014      	add	sp, #80	@ 0x50
1006361c:	bdb0      	pop	{r4, r5, r7, pc}

1006361e <sdb_sap_read_security_record>:
1006361e:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10063620:	4614      	mov	r4, r2
10063622:	4606      	mov	r6, r0
10063624:	2501      	movs	r5, #1
10063626:	9102      	str	r1, [sp, #8]
10063628:	2901      	cmp	r1, #1
1006362a:	d105      	bne.n	10063638 <sdb_sap_read_security_record+0x1a>
1006362c:	7970      	ldrb	r0, [r6, #5]
1006362e:	21c0      	movs	r1, #192	@ 0xc0
10063630:	4001      	ands	r1, r0
10063632:	2940      	cmp	r1, #64	@ 0x40
10063634:	d100      	bne.n	10063638 <sdb_sap_read_security_record+0x1a>
10063636:	2500      	movs	r5, #0
10063638:	f001 fd68 	bl	1006510c <nvm_sec_db_read_init>
1006363c:	4620      	mov	r0, r4
1006363e:	303e      	adds	r0, #62	@ 0x3e
10063640:	9001      	str	r0, [sp, #4]
10063642:	4627      	mov	r7, r4
10063644:	371e      	adds	r7, #30
10063646:	4620      	mov	r0, r4
10063648:	f001 fd66 	bl	10065118 <nvm_sec_db_read_next_record>
1006364c:	2800      	cmp	r0, #0
1006364e:	d115      	bne.n	1006367c <sdb_sap_read_security_record+0x5e>
10063650:	2d00      	cmp	r5, #0
10063652:	d00b      	beq.n	1006366c <sdb_sap_read_security_record+0x4e>
10063654:	7860      	ldrb	r0, [r4, #1]
10063656:	2101      	movs	r1, #1
10063658:	4001      	ands	r1, r0
1006365a:	9802      	ldr	r0, [sp, #8]
1006365c:	4281      	cmp	r1, r0
1006365e:	d1f2      	bne.n	10063646 <sdb_sap_read_security_record+0x28>
10063660:	2206      	movs	r2, #6
10063662:	9801      	ldr	r0, [sp, #4]
10063664:	4631      	mov	r1, r6
10063666:	f7e1 f9bd 	bl	100449e4 <BLEPLAT_MemCmp>
1006366a:	e003      	b.n	10063674 <sdb_sap_read_security_record+0x56>
1006366c:	4630      	mov	r0, r6
1006366e:	4639      	mov	r1, r7
10063670:	f000 f980 	bl	10063974 <smp_sap_crt_resolve_rpa>
10063674:	2800      	cmp	r0, #0
10063676:	d1e6      	bne.n	10063646 <sdb_sap_read_security_record+0x28>
10063678:	2000      	movs	r0, #0
1006367a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006367c:	20b3      	movs	r0, #179	@ 0xb3
1006367e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10063680 <sdb_remove_security_record_by_address>:
10063680:	b5f0      	push	{r4, r5, r6, r7, lr}
10063682:	b095      	sub	sp, #84	@ 0x54
10063684:	460c      	mov	r4, r1
10063686:	4605      	mov	r5, r0
10063688:	f001 fd40 	bl	1006510c <nvm_sec_db_read_init>
1006368c:	ae01      	add	r6, sp, #4
1006368e:	363e      	adds	r6, #62	@ 0x3e
10063690:	27b3      	movs	r7, #179	@ 0xb3
10063692:	a801      	add	r0, sp, #4
10063694:	f001 fd40 	bl	10065118 <nvm_sec_db_read_next_record>
10063698:	2800      	cmp	r0, #0
1006369a:	d110      	bne.n	100636be <sdb_remove_security_record_by_address+0x3e>
1006369c:	2206      	movs	r2, #6
1006369e:	4630      	mov	r0, r6
100636a0:	4621      	mov	r1, r4
100636a2:	f7e1 f99f 	bl	100449e4 <BLEPLAT_MemCmp>
100636a6:	a901      	add	r1, sp, #4
100636a8:	7849      	ldrb	r1, [r1, #1]
100636aa:	2201      	movs	r2, #1
100636ac:	400a      	ands	r2, r1
100636ae:	42aa      	cmp	r2, r5
100636b0:	d1ef      	bne.n	10063692 <sdb_remove_security_record_by_address+0x12>
100636b2:	2800      	cmp	r0, #0
100636b4:	d1ed      	bne.n	10063692 <sdb_remove_security_record_by_address+0x12>
100636b6:	f001 fd5f 	bl	10065178 <nvm_discard_current_record>
100636ba:	2700      	movs	r7, #0
100636bc:	e7e9      	b.n	10063692 <sdb_remove_security_record_by_address+0x12>
100636be:	b2f8      	uxtb	r0, r7
100636c0:	b015      	add	sp, #84	@ 0x54
100636c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100636c4 <sdb_sap_read_security_record_sequential>:
100636c4:	b5b0      	push	{r4, r5, r7, lr}
100636c6:	4604      	mov	r4, r0
100636c8:	4d07      	ldr	r5, [pc, #28]	@ (100636e8 <__arm_cp.5_0>)
100636ca:	7828      	ldrb	r0, [r5, #0]
100636cc:	2800      	cmp	r0, #0
100636ce:	d103      	bne.n	100636d8 <sdb_sap_read_security_record_sequential+0x14>
100636d0:	f001 fd1c 	bl	1006510c <nvm_sec_db_read_init>
100636d4:	2001      	movs	r0, #1
100636d6:	7028      	strb	r0, [r5, #0]
100636d8:	4620      	mov	r0, r4
100636da:	f001 fd1d 	bl	10065118 <nvm_sec_db_read_next_record>
100636de:	2800      	cmp	r0, #0
100636e0:	d001      	beq.n	100636e6 <sdb_sap_read_security_record_sequential+0x22>
100636e2:	2100      	movs	r1, #0
100636e4:	7029      	strb	r1, [r5, #0]
100636e6:	bdb0      	pop	{r4, r5, r7, pc}

100636e8 <__arm_cp.5_0>:
100636e8:	200008dc 	.word	0x200008dc

100636ec <sdb_sap_del_bonded_device>:
100636ec:	b5bf      	push	{r0, r1, r2, r3, r4, r5, r7, lr}
100636ee:	460d      	mov	r5, r1
100636f0:	4604      	mov	r4, r0
100636f2:	aa01      	add	r2, sp, #4
100636f4:	4608      	mov	r0, r1
100636f6:	4621      	mov	r1, r4
100636f8:	f000 f87f 	bl	100637fa <sdb_gatt_search_record>
100636fc:	2800      	cmp	r0, #0
100636fe:	d101      	bne.n	10063704 <sdb_sap_del_bonded_device+0x18>
10063700:	f001 fd3a 	bl	10065178 <nvm_discard_current_record>
10063704:	4628      	mov	r0, r5
10063706:	4621      	mov	r1, r4
10063708:	f7ff ffba 	bl	10063680 <sdb_remove_security_record_by_address>
1006370c:	b004      	add	sp, #16
1006370e:	bdb0      	pop	{r4, r5, r7, pc}

10063710 <sdb_sap_read_security_record_matching>:
10063710:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10063712:	4614      	mov	r4, r2
10063714:	9101      	str	r1, [sp, #4]
10063716:	4606      	mov	r6, r0
10063718:	f001 fcf8 	bl	1006510c <nvm_sec_db_read_init>
1006371c:	4627      	mov	r7, r4
1006371e:	3744      	adds	r7, #68	@ 0x44
10063720:	4620      	mov	r0, r4
10063722:	f001 fcf9 	bl	10065118 <nvm_sec_db_read_next_record>
10063726:	2800      	cmp	r0, #0
10063728:	d111      	bne.n	1006374e <sdb_sap_read_security_record_matching+0x3e>
1006372a:	7860      	ldrb	r0, [r4, #1]
1006372c:	06c0      	lsls	r0, r0, #27
1006372e:	d5f7      	bpl.n	10063720 <sdb_sap_read_security_record_matching+0x10>
10063730:	ad02      	add	r5, sp, #8
10063732:	4638      	mov	r0, r7
10063734:	9901      	ldr	r1, [sp, #4]
10063736:	462a      	mov	r2, r5
10063738:	f000 f87a 	bl	10063830 <smp_sap_crt_generate_ediv>
1006373c:	2202      	movs	r2, #2
1006373e:	4628      	mov	r0, r5
10063740:	4631      	mov	r1, r6
10063742:	f7e1 f94f 	bl	100449e4 <BLEPLAT_MemCmp>
10063746:	2800      	cmp	r0, #0
10063748:	d1ea      	bne.n	10063720 <sdb_sap_read_security_record_matching+0x10>
1006374a:	2000      	movs	r0, #0
1006374c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006374e:	2081      	movs	r0, #129	@ 0x81
10063750:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10063752 <SDB_sap_write_peer_bonded_gatt_client_data>:
10063752:	b5f0      	push	{r4, r5, r6, r7, lr}
10063754:	b085      	sub	sp, #20
10063756:	461e      	mov	r6, r3
10063758:	4617      	mov	r7, r2
1006375a:	460d      	mov	r5, r1
1006375c:	4604      	mov	r4, r0
1006375e:	aa02      	add	r2, sp, #8
10063760:	4608      	mov	r0, r1
10063762:	4621      	mov	r1, r4
10063764:	f000 f849 	bl	100637fa <sdb_gatt_search_record>
10063768:	2800      	cmp	r0, #0
1006376a:	d10b      	bne.n	10063784 <SDB_sap_write_peer_bonded_gatt_client_data+0x32>
1006376c:	9804      	ldr	r0, [sp, #16]
1006376e:	42b8      	cmp	r0, r7
10063770:	d106      	bne.n	10063780 <SDB_sap_write_peer_bonded_gatt_client_data+0x2e>
10063772:	b2ba      	uxth	r2, r7
10063774:	200c      	movs	r0, #12
10063776:	4631      	mov	r1, r6
10063778:	f7e1 f8c4 	bl	10044904 <BLEPLAT_NvmCompare>
1006377c:	2800      	cmp	r0, #0
1006377e:	d016      	beq.n	100637ae <SDB_sap_write_peer_bonded_gatt_client_data+0x5c>
10063780:	f001 fcfa 	bl	10065178 <nvm_discard_current_record>
10063784:	9601      	str	r6, [sp, #4]
10063786:	ae02      	add	r6, sp, #8
10063788:	7035      	strb	r5, [r6, #0]
1006378a:	1c70      	adds	r0, r6, #1
1006378c:	2206      	movs	r2, #6
1006378e:	4621      	mov	r1, r4
10063790:	f7e1 f908 	bl	100449a4 <BLEPLAT_MemCpy>
10063794:	9704      	str	r7, [sp, #16]
10063796:	4630      	mov	r0, r6
10063798:	9901      	ldr	r1, [sp, #4]
1006379a:	f001 fcaa 	bl	100650f2 <nvm_gatt_db_update_record>
1006379e:	2800      	cmp	r0, #0
100637a0:	d005      	beq.n	100637ae <SDB_sap_write_peer_bonded_gatt_client_data+0x5c>
100637a2:	4606      	mov	r6, r0
100637a4:	4628      	mov	r0, r5
100637a6:	4621      	mov	r1, r4
100637a8:	f7ff ff6a 	bl	10063680 <sdb_remove_security_record_by_address>
100637ac:	e000      	b.n	100637b0 <SDB_sap_write_peer_bonded_gatt_client_data+0x5e>
100637ae:	2600      	movs	r6, #0
100637b0:	4630      	mov	r0, r6
100637b2:	b005      	add	sp, #20
100637b4:	bdf0      	pop	{r4, r5, r6, r7, pc}

100637b6 <SDB_sap_read_peer_bonded_gatt_client_data>:
100637b6:	b5b0      	push	{r4, r5, r7, lr}
100637b8:	b098      	sub	sp, #96	@ 0x60
100637ba:	461c      	mov	r4, r3
100637bc:	4615      	mov	r5, r2
100637be:	aa01      	add	r2, sp, #4
100637c0:	f7ff ff2d 	bl	1006361e <sdb_sap_read_security_record>
100637c4:	2800      	cmp	r0, #0
100637c6:	d116      	bne.n	100637f6 <SDB_sap_read_peer_bonded_gatt_client_data+0x40>
100637c8:	a901      	add	r1, sp, #4
100637ca:	784a      	ldrb	r2, [r1, #1]
100637cc:	2001      	movs	r0, #1
100637ce:	4010      	ands	r0, r2
100637d0:	313e      	adds	r1, #62	@ 0x3e
100637d2:	aa15      	add	r2, sp, #84	@ 0x54
100637d4:	f000 f811 	bl	100637fa <sdb_gatt_search_record>
100637d8:	2800      	cmp	r0, #0
100637da:	d001      	beq.n	100637e0 <SDB_sap_read_peer_bonded_gatt_client_data+0x2a>
100637dc:	20b3      	movs	r0, #179	@ 0xb3
100637de:	e00a      	b.n	100637f6 <SDB_sap_read_peer_bonded_gatt_client_data+0x40>
100637e0:	6829      	ldr	r1, [r5, #0]
100637e2:	9817      	ldr	r0, [sp, #92]	@ 0x5c
100637e4:	4288      	cmp	r0, r1
100637e6:	d901      	bls.n	100637ec <SDB_sap_read_peer_bonded_gatt_client_data+0x36>
100637e8:	2087      	movs	r0, #135	@ 0x87
100637ea:	e004      	b.n	100637f6 <SDB_sap_read_peer_bonded_gatt_client_data+0x40>
100637ec:	6028      	str	r0, [r5, #0]
100637ee:	b281      	uxth	r1, r0
100637f0:	4620      	mov	r0, r4
100637f2:	f001 fc73 	bl	100650dc <nvm_gatt_db_read_full_current_record>
100637f6:	b018      	add	sp, #96	@ 0x60
100637f8:	bdb0      	pop	{r4, r5, r7, pc}

100637fa <sdb_gatt_search_record>:
100637fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100637fc:	4614      	mov	r4, r2
100637fe:	460d      	mov	r5, r1
10063800:	4606      	mov	r6, r0
10063802:	f001 fc45 	bl	10065090 <nvm_gatt_db_read_init>
10063806:	1c67      	adds	r7, r4, #1
10063808:	4620      	mov	r0, r4
1006380a:	f001 fc47 	bl	1006509c <nvm_gatt_db_read_next_record>
1006380e:	2800      	cmp	r0, #0
10063810:	d10b      	bne.n	1006382a <sdb_gatt_search_record+0x30>
10063812:	2206      	movs	r2, #6
10063814:	4628      	mov	r0, r5
10063816:	4639      	mov	r1, r7
10063818:	f7e1 f8e4 	bl	100449e4 <BLEPLAT_MemCmp>
1006381c:	2800      	cmp	r0, #0
1006381e:	d1f3      	bne.n	10063808 <sdb_gatt_search_record+0xe>
10063820:	7820      	ldrb	r0, [r4, #0]
10063822:	42b0      	cmp	r0, r6
10063824:	d1f0      	bne.n	10063808 <sdb_gatt_search_record+0xe>
10063826:	2000      	movs	r0, #0
10063828:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006382a:	20b3      	movs	r0, #179	@ 0xb3
1006382c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

10063830 <smp_sap_crt_generate_ediv>:
10063830:	b5f0      	push	{r4, r5, r6, r7, lr}
10063832:	b091      	sub	sp, #68	@ 0x44
10063834:	9201      	str	r2, [sp, #4]
10063836:	9100      	str	r1, [sp, #0]
10063838:	4605      	mov	r5, r0
1006383a:	a908      	add	r1, sp, #32
1006383c:	2003      	movs	r0, #3
1006383e:	8008      	strh	r0, [r1, #0]
10063840:	aa07      	add	r2, sp, #28
10063842:	2400      	movs	r4, #0
10063844:	8014      	strh	r4, [r2, #0]
10063846:	4814      	ldr	r0, [pc, #80]	@ (10063898 <__arm_cp.0_0>)
10063848:	6800      	ldr	r0, [r0, #0]
1006384a:	3018      	adds	r0, #24
1006384c:	af03      	add	r7, sp, #12
1006384e:	463b      	mov	r3, r7
10063850:	f000 f824 	bl	1006389c <smp_crt_diversify>
10063854:	ae0d      	add	r6, sp, #52	@ 0x34
10063856:	2210      	movs	r2, #16
10063858:	4630      	mov	r0, r6
1006385a:	4621      	mov	r1, r4
1006385c:	f7e1 f8b2 	bl	100449c4 <BLEPLAT_MemSet>
10063860:	2208      	movs	r2, #8
10063862:	4630      	mov	r0, r6
10063864:	9900      	ldr	r1, [sp, #0]
10063866:	f7e1 f89d 	bl	100449a4 <BLEPLAT_MemCpy>
1006386a:	ac09      	add	r4, sp, #36	@ 0x24
1006386c:	4638      	mov	r0, r7
1006386e:	4631      	mov	r1, r6
10063870:	4622      	mov	r2, r4
10063872:	f7f1 fc59 	bl	10055128 <hci_le_encrypt>
10063876:	ae02      	add	r6, sp, #8
10063878:	2202      	movs	r2, #2
1006387a:	4630      	mov	r0, r6
1006387c:	4621      	mov	r1, r4
1006387e:	f7e1 f891 	bl	100449a4 <BLEPLAT_MemCpy>
10063882:	7828      	ldrb	r0, [r5, #0]
10063884:	9902      	ldr	r1, [sp, #8]
10063886:	4041      	eors	r1, r0
10063888:	9a01      	ldr	r2, [sp, #4]
1006388a:	7011      	strb	r1, [r2, #0]
1006388c:	7870      	ldrb	r0, [r6, #1]
1006388e:	7869      	ldrb	r1, [r5, #1]
10063890:	4041      	eors	r1, r0
10063892:	7051      	strb	r1, [r2, #1]
10063894:	b011      	add	sp, #68	@ 0x44
10063896:	bdf0      	pop	{r4, r5, r6, r7, pc}

10063898 <__arm_cp.0_0>:
10063898:	2000083c 	.word	0x2000083c

1006389c <smp_crt_diversify>:
1006389c:	b5bf      	push	{r0, r1, r2, r3, r4, r5, r7, lr}
1006389e:	780d      	ldrb	r5, [r1, #0]
100638a0:	466c      	mov	r4, sp
100638a2:	7025      	strb	r5, [r4, #0]
100638a4:	7849      	ldrb	r1, [r1, #1]
100638a6:	7061      	strb	r1, [r4, #1]
100638a8:	7811      	ldrb	r1, [r2, #0]
100638aa:	70a1      	strb	r1, [r4, #2]
100638ac:	7851      	ldrb	r1, [r2, #1]
100638ae:	70e1      	strb	r1, [r4, #3]
100638b0:	2100      	movs	r1, #0
100638b2:	9103      	str	r1, [sp, #12]
100638b4:	9102      	str	r1, [sp, #8]
100638b6:	9101      	str	r1, [sp, #4]
100638b8:	4621      	mov	r1, r4
100638ba:	461a      	mov	r2, r3
100638bc:	f7f1 fc34 	bl	10055128 <hci_le_encrypt>
100638c0:	bdbf      	pop	{r0, r1, r2, r3, r4, r5, r7, pc}
	...

100638c4 <smp_sap_crt_generate_local_irk>:
100638c4:	b5e0      	push	{r5, r6, r7, lr}
100638c6:	4603      	mov	r3, r0
100638c8:	a901      	add	r1, sp, #4
100638ca:	2001      	movs	r0, #1
100638cc:	8008      	strh	r0, [r1, #0]
100638ce:	466a      	mov	r2, sp
100638d0:	2000      	movs	r0, #0
100638d2:	8010      	strh	r0, [r2, #0]
100638d4:	4802      	ldr	r0, [pc, #8]	@ (100638e0 <__arm_cp.2_0>)
100638d6:	6800      	ldr	r0, [r0, #0]
100638d8:	3018      	adds	r0, #24
100638da:	f7ff ffdf 	bl	1006389c <smp_crt_diversify>
100638de:	bd8c      	pop	{r2, r3, r7, pc}

100638e0 <__arm_cp.2_0>:
100638e0:	2000083c 	.word	0x2000083c

100638e4 <smp_sap_crt_generate_rpa>:
100638e4:	b5f0      	push	{r4, r5, r6, r7, lr}
100638e6:	b087      	sub	sp, #28
100638e8:	9000      	str	r0, [sp, #0]
100638ea:	ae03      	add	r6, sp, #12
100638ec:	4630      	mov	r0, r6
100638ee:	f7ff ffe9 	bl	100638c4 <smp_sap_crt_generate_local_irk>
100638f2:	2700      	movs	r7, #0
100638f4:	4638      	mov	r0, r7
100638f6:	f001 ff95 	bl	10065824 <Hal_Get_Random_Number>
100638fa:	0a01      	lsrs	r1, r0, #8
100638fc:	ad02      	add	r5, sp, #8
100638fe:	7069      	strb	r1, [r5, #1]
10063900:	243f      	movs	r4, #63	@ 0x3f
10063902:	4004      	ands	r4, r0
10063904:	3440      	adds	r4, #64	@ 0x40
10063906:	4638      	mov	r0, r7
10063908:	f001 ff8c 	bl	10065824 <Hal_Get_Random_Number>
1006390c:	70ac      	strb	r4, [r5, #2]
1006390e:	7028      	strb	r0, [r5, #0]
10063910:	af01      	add	r7, sp, #4
10063912:	4630      	mov	r0, r6
10063914:	4629      	mov	r1, r5
10063916:	463a      	mov	r2, r7
10063918:	f000 f80e 	bl	10063938 <smp_crt_calculate_hash>
1006391c:	2603      	movs	r6, #3
1006391e:	9c00      	ldr	r4, [sp, #0]
10063920:	4620      	mov	r0, r4
10063922:	4639      	mov	r1, r7
10063924:	4632      	mov	r2, r6
10063926:	f7e1 f83d 	bl	100449a4 <BLEPLAT_MemCpy>
1006392a:	1ce0      	adds	r0, r4, #3
1006392c:	4629      	mov	r1, r5
1006392e:	4632      	mov	r2, r6
10063930:	f7e1 f838 	bl	100449a4 <BLEPLAT_MemCpy>
10063934:	b007      	add	sp, #28
10063936:	bdf0      	pop	{r4, r5, r6, r7, pc}

10063938 <smp_crt_calculate_hash>:
10063938:	b5f0      	push	{r4, r5, r6, r7, lr}
1006393a:	b089      	sub	sp, #36	@ 0x24
1006393c:	9200      	str	r2, [sp, #0]
1006393e:	460f      	mov	r7, r1
10063940:	4605      	mov	r5, r0
10063942:	ae05      	add	r6, sp, #20
10063944:	2100      	movs	r1, #0
10063946:	2210      	movs	r2, #16
10063948:	4630      	mov	r0, r6
1006394a:	f7e1 f83b 	bl	100449c4 <BLEPLAT_MemSet>
1006394e:	2403      	movs	r4, #3
10063950:	4630      	mov	r0, r6
10063952:	4639      	mov	r1, r7
10063954:	4622      	mov	r2, r4
10063956:	f7e1 f825 	bl	100449a4 <BLEPLAT_MemCpy>
1006395a:	af01      	add	r7, sp, #4
1006395c:	4628      	mov	r0, r5
1006395e:	4631      	mov	r1, r6
10063960:	463a      	mov	r2, r7
10063962:	f7f1 fbe1 	bl	10055128 <hci_le_encrypt>
10063966:	9800      	ldr	r0, [sp, #0]
10063968:	4639      	mov	r1, r7
1006396a:	4622      	mov	r2, r4
1006396c:	f7e1 f81a 	bl	100449a4 <BLEPLAT_MemCpy>
10063970:	b009      	add	sp, #36	@ 0x24
10063972:	bdf0      	pop	{r4, r5, r6, r7, pc}

10063974 <smp_sap_crt_resolve_rpa>:
10063974:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10063976:	460a      	mov	r2, r1
10063978:	4604      	mov	r4, r0
1006397a:	1cc1      	adds	r1, r0, #3
1006397c:	ad01      	add	r5, sp, #4
1006397e:	4610      	mov	r0, r2
10063980:	462a      	mov	r2, r5
10063982:	f7ff ffd9 	bl	10063938 <smp_crt_calculate_hash>
10063986:	2203      	movs	r2, #3
10063988:	4628      	mov	r0, r5
1006398a:	4621      	mov	r1, r4
1006398c:	f7e1 f82a 	bl	100449e4 <BLEPLAT_MemCmp>
10063990:	2800      	cmp	r0, #0
10063992:	d000      	beq.n	10063996 <smp_sap_crt_resolve_rpa+0x22>
10063994:	2081      	movs	r0, #129	@ 0x81
10063996:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10063998 <smp_crt_s1_generate_stk>:
10063998:	b5f0      	push	{r4, r5, r6, r7, lr}
1006399a:	b085      	sub	sp, #20
1006399c:	9300      	str	r3, [sp, #0]
1006399e:	4617      	mov	r7, r2
100639a0:	4605      	mov	r5, r0
100639a2:	ae01      	add	r6, sp, #4
100639a4:	4630      	mov	r0, r6
100639a6:	3008      	adds	r0, #8
100639a8:	2408      	movs	r4, #8
100639aa:	4622      	mov	r2, r4
100639ac:	f7e0 fffa 	bl	100449a4 <BLEPLAT_MemCpy>
100639b0:	4630      	mov	r0, r6
100639b2:	4639      	mov	r1, r7
100639b4:	4622      	mov	r2, r4
100639b6:	f7e0 fff5 	bl	100449a4 <BLEPLAT_MemCpy>
100639ba:	4628      	mov	r0, r5
100639bc:	4631      	mov	r1, r6
100639be:	9a00      	ldr	r2, [sp, #0]
100639c0:	f7f1 fbb2 	bl	10055128 <hci_le_encrypt>
100639c4:	b005      	add	sp, #20
100639c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100639c8 <smp_crt_generate_csrk>:
100639c8:	b5e0      	push	{r5, r6, r7, lr}
100639ca:	460b      	mov	r3, r1
100639cc:	4601      	mov	r1, r0
100639ce:	aa01      	add	r2, sp, #4
100639d0:	2001      	movs	r0, #1
100639d2:	8010      	strh	r0, [r2, #0]
100639d4:	4802      	ldr	r0, [pc, #8]	@ (100639e0 <__arm_cp.7_0>)
100639d6:	6800      	ldr	r0, [r0, #0]
100639d8:	3008      	adds	r0, #8
100639da:	f7ff ff5f 	bl	1006389c <smp_crt_diversify>
100639de:	bd8c      	pop	{r2, r3, r7, pc}

100639e0 <__arm_cp.7_0>:
100639e0:	2000083c 	.word	0x2000083c

100639e4 <smp_crt_generate_cmac_tag>:
100639e4:	b5f0      	push	{r4, r5, r6, r7, lr}
100639e6:	b095      	sub	sp, #84	@ 0x54
100639e8:	9301      	str	r3, [sp, #4]
100639ea:	4617      	mov	r7, r2
100639ec:	9103      	str	r1, [sp, #12]
100639ee:	2500      	movs	r5, #0
100639f0:	9514      	str	r5, [sp, #80]	@ 0x50
100639f2:	9513      	str	r5, [sp, #76]	@ 0x4c
100639f4:	9512      	str	r5, [sp, #72]	@ 0x48
100639f6:	9511      	str	r5, [sp, #68]	@ 0x44
100639f8:	a911      	add	r1, sp, #68	@ 0x44
100639fa:	ac0d      	add	r4, sp, #52	@ 0x34
100639fc:	9004      	str	r0, [sp, #16]
100639fe:	4622      	mov	r2, r4
10063a00:	f7f1 fb92 	bl	10055128 <hci_le_encrypt>
10063a04:	200f      	movs	r0, #15
10063a06:	9002      	str	r0, [sp, #8]
10063a08:	5626      	ldrsb	r6, [r4, r0]
10063a0a:	a909      	add	r1, sp, #36	@ 0x24
10063a0c:	4620      	mov	r0, r4
10063a0e:	f000 f885 	bl	10063b1c <smp_crt_left_shift>
10063a12:	2e00      	cmp	r6, #0
10063a14:	d467      	bmi.n	10063ae6 <smp_crt_generate_cmac_tag+0x102>
10063a16:	a809      	add	r0, sp, #36	@ 0x24
10063a18:	9902      	ldr	r1, [sp, #8]
10063a1a:	5644      	ldrsb	r4, [r0, r1]
10063a1c:	a905      	add	r1, sp, #20
10063a1e:	f000 f87d 	bl	10063b1c <smp_crt_left_shift>
10063a22:	2c00      	cmp	r4, #0
10063a24:	d46c      	bmi.n	10063b00 <smp_crt_generate_cmac_tag+0x11c>
10063a26:	a811      	add	r0, sp, #68	@ 0x44
10063a28:	2400      	movs	r4, #0
10063a2a:	2210      	movs	r2, #16
10063a2c:	4621      	mov	r1, r4
10063a2e:	f7e0 ffc9 	bl	100449c4 <BLEPLAT_MemSet>
10063a32:	b2fd      	uxtb	r5, r7
10063a34:	2d11      	cmp	r5, #17
10063a36:	d321      	bcc.n	10063a7c <smp_crt_generate_cmac_tag+0x98>
10063a38:	1d20      	adds	r0, r4, #4
10063a3a:	b281      	uxth	r1, r0
10063a3c:	2210      	movs	r2, #16
10063a3e:	ab0d      	add	r3, sp, #52	@ 0x34
10063a40:	9803      	ldr	r0, [sp, #12]
10063a42:	f7ec fac7 	bl	1004ffd4 <ACL_pkt_read>
10063a46:	2000      	movs	r0, #0
10063a48:	2810      	cmp	r0, #16
10063a4a:	d007      	beq.n	10063a5c <smp_crt_generate_cmac_tag+0x78>
10063a4c:	a90d      	add	r1, sp, #52	@ 0x34
10063a4e:	5c09      	ldrb	r1, [r1, r0]
10063a50:	aa11      	add	r2, sp, #68	@ 0x44
10063a52:	5c13      	ldrb	r3, [r2, r0]
10063a54:	404b      	eors	r3, r1
10063a56:	5413      	strb	r3, [r2, r0]
10063a58:	1c40      	adds	r0, r0, #1
10063a5a:	e7f5      	b.n	10063a48 <smp_crt_generate_cmac_tag+0x64>
10063a5c:	ad11      	add	r5, sp, #68	@ 0x44
10063a5e:	ae0d      	add	r6, sp, #52	@ 0x34
10063a60:	9804      	ldr	r0, [sp, #16]
10063a62:	4629      	mov	r1, r5
10063a64:	4632      	mov	r2, r6
10063a66:	f7f1 fb5f 	bl	10055128 <hci_le_encrypt>
10063a6a:	2210      	movs	r2, #16
10063a6c:	4628      	mov	r0, r5
10063a6e:	4631      	mov	r1, r6
10063a70:	f7e0 ff98 	bl	100449a4 <BLEPLAT_MemCpy>
10063a74:	3f10      	subs	r7, #16
10063a76:	3410      	adds	r4, #16
10063a78:	b2a4      	uxth	r4, r4
10063a7a:	e7da      	b.n	10063a32 <smp_crt_generate_cmac_tag+0x4e>
10063a7c:	2d10      	cmp	r5, #16
10063a7e:	d108      	bne.n	10063a92 <smp_crt_generate_cmac_tag+0xae>
10063a80:	1d20      	adds	r0, r4, #4
10063a82:	b281      	uxth	r1, r0
10063a84:	2210      	movs	r2, #16
10063a86:	ab0d      	add	r3, sp, #52	@ 0x34
10063a88:	9803      	ldr	r0, [sp, #12]
10063a8a:	f7ec faa3 	bl	1004ffd4 <ACL_pkt_read>
10063a8e:	a809      	add	r0, sp, #36	@ 0x24
10063a90:	e014      	b.n	10063abc <smp_crt_generate_cmac_tag+0xd8>
10063a92:	a80d      	add	r0, sp, #52	@ 0x34
10063a94:	2100      	movs	r1, #0
10063a96:	2210      	movs	r2, #16
10063a98:	f7e0 ff94 	bl	100449c4 <BLEPLAT_MemSet>
10063a9c:	0638      	lsls	r0, r7, #24
10063a9e:	d008      	beq.n	10063ab2 <smp_crt_generate_cmac_tag+0xce>
10063aa0:	a80d      	add	r0, sp, #52	@ 0x34
10063aa2:	1b43      	subs	r3, r0, r5
10063aa4:	3310      	adds	r3, #16
10063aa6:	1d20      	adds	r0, r4, #4
10063aa8:	b281      	uxth	r1, r0
10063aaa:	9803      	ldr	r0, [sp, #12]
10063aac:	462a      	mov	r2, r5
10063aae:	f7ec fa91 	bl	1004ffd4 <ACL_pkt_read>
10063ab2:	a80d      	add	r0, sp, #52	@ 0x34
10063ab4:	1b40      	subs	r0, r0, r5
10063ab6:	2180      	movs	r1, #128	@ 0x80
10063ab8:	73c1      	strb	r1, [r0, #15]
10063aba:	a805      	add	r0, sp, #20
10063abc:	9a01      	ldr	r2, [sp, #4]
10063abe:	2100      	movs	r1, #0
10063ac0:	2910      	cmp	r1, #16
10063ac2:	d009      	beq.n	10063ad8 <smp_crt_generate_cmac_tag+0xf4>
10063ac4:	ab0d      	add	r3, sp, #52	@ 0x34
10063ac6:	5c5c      	ldrb	r4, [r3, r1]
10063ac8:	5c43      	ldrb	r3, [r0, r1]
10063aca:	4063      	eors	r3, r4
10063acc:	ad11      	add	r5, sp, #68	@ 0x44
10063ace:	5c6c      	ldrb	r4, [r5, r1]
10063ad0:	405c      	eors	r4, r3
10063ad2:	546c      	strb	r4, [r5, r1]
10063ad4:	1c49      	adds	r1, r1, #1
10063ad6:	e7f3      	b.n	10063ac0 <smp_crt_generate_cmac_tag+0xdc>
10063ad8:	a911      	add	r1, sp, #68	@ 0x44
10063ada:	9804      	ldr	r0, [sp, #16]
10063adc:	f7f1 fb24 	bl	10055128 <hci_le_encrypt>
10063ae0:	2000      	movs	r0, #0
10063ae2:	b015      	add	sp, #84	@ 0x54
10063ae4:	bdf0      	pop	{r4, r5, r6, r7, pc}
10063ae6:	a811      	add	r0, sp, #68	@ 0x44
10063ae8:	2187      	movs	r1, #135	@ 0x87
10063aea:	7001      	strb	r1, [r0, #0]
10063aec:	2d0f      	cmp	r5, #15
10063aee:	d092      	beq.n	10063a16 <smp_crt_generate_cmac_tag+0x32>
10063af0:	a809      	add	r0, sp, #36	@ 0x24
10063af2:	5d41      	ldrb	r1, [r0, r5]
10063af4:	aa11      	add	r2, sp, #68	@ 0x44
10063af6:	5d52      	ldrb	r2, [r2, r5]
10063af8:	404a      	eors	r2, r1
10063afa:	5542      	strb	r2, [r0, r5]
10063afc:	1c6d      	adds	r5, r5, #1
10063afe:	e7f5      	b.n	10063aec <smp_crt_generate_cmac_tag+0x108>
10063b00:	a811      	add	r0, sp, #68	@ 0x44
10063b02:	2187      	movs	r1, #135	@ 0x87
10063b04:	7001      	strb	r1, [r0, #0]
10063b06:	2000      	movs	r0, #0
10063b08:	280f      	cmp	r0, #15
10063b0a:	d08c      	beq.n	10063a26 <smp_crt_generate_cmac_tag+0x42>
10063b0c:	a905      	add	r1, sp, #20
10063b0e:	5c0a      	ldrb	r2, [r1, r0]
10063b10:	ab11      	add	r3, sp, #68	@ 0x44
10063b12:	5c1b      	ldrb	r3, [r3, r0]
10063b14:	4053      	eors	r3, r2
10063b16:	540b      	strb	r3, [r1, r0]
10063b18:	1c40      	adds	r0, r0, #1
10063b1a:	e7f5      	b.n	10063b08 <smp_crt_generate_cmac_tag+0x124>

10063b1c <smp_crt_left_shift>:
10063b1c:	b510      	push	{r4, lr}
10063b1e:	7802      	ldrb	r2, [r0, #0]
10063b20:	0052      	lsls	r2, r2, #1
10063b22:	700a      	strb	r2, [r1, #0]
10063b24:	1c49      	adds	r1, r1, #1
10063b26:	2200      	movs	r2, #0
10063b28:	2a0f      	cmp	r2, #15
10063b2a:	d00b      	beq.n	10063b44 <smp_crt_left_shift+0x28>
10063b2c:	1883      	adds	r3, r0, r2
10063b2e:	785b      	ldrb	r3, [r3, #1]
10063b30:	005b      	lsls	r3, r3, #1
10063b32:	548b      	strb	r3, [r1, r2]
10063b34:	5684      	ldrsb	r4, [r0, r2]
10063b36:	2c00      	cmp	r4, #0
10063b38:	d502      	bpl.n	10063b40 <smp_crt_left_shift+0x24>
10063b3a:	2401      	movs	r4, #1
10063b3c:	4323      	orrs	r3, r4
10063b3e:	548b      	strb	r3, [r1, r2]
10063b40:	1c52      	adds	r2, r2, #1
10063b42:	e7f1      	b.n	10063b28 <smp_crt_left_shift+0xc>
10063b44:	bd10      	pop	{r4, pc}

10063b46 <smp_start_encryption>:
10063b46:	b5f0      	push	{r4, r5, r6, r7, lr}
10063b48:	b085      	sub	sp, #20
10063b4a:	4604      	mov	r4, r0
10063b4c:	20ac      	movs	r0, #172	@ 0xac
10063b4e:	72a0      	strb	r0, [r4, #10]
10063b50:	7ea0      	ldrb	r0, [r4, #26]
10063b52:	0781      	lsls	r1, r0, #30
10063b54:	d40a      	bmi.n	10063b6c <smp_start_encryption+0x26>
10063b56:	2105      	movs	r1, #5
10063b58:	4208      	tst	r0, r1
10063b5a:	d032      	beq.n	10063bc2 <smp_start_encryption+0x7c>
10063b5c:	7fa0      	ldrb	r0, [r4, #30]
10063b5e:	7fe1      	ldrb	r1, [r4, #31]
10063b60:	0209      	lsls	r1, r1, #8
10063b62:	180e      	adds	r6, r1, r0
10063b64:	4625      	mov	r5, r4
10063b66:	3520      	adds	r5, #32
10063b68:	27ae      	movs	r7, #174	@ 0xae
10063b6a:	e007      	b.n	10063b7c <smp_start_encryption+0x36>
10063b6c:	ad01      	add	r5, sp, #4
10063b6e:	2600      	movs	r6, #0
10063b70:	2210      	movs	r2, #16
10063b72:	4628      	mov	r0, r5
10063b74:	4631      	mov	r1, r6
10063b76:	f7e0 ff25 	bl	100449c4 <BLEPLAT_MemSet>
10063b7a:	27ad      	movs	r7, #173	@ 0xad
10063b7c:	8920      	ldrh	r0, [r4, #8]
10063b7e:	b2b2      	uxth	r2, r6
10063b80:	4623      	mov	r3, r4
10063b82:	3328      	adds	r3, #40	@ 0x28
10063b84:	4629      	mov	r1, r5
10063b86:	f7f1 faf1 	bl	1005516c <hci_le_enable_encryption_api>
10063b8a:	283a      	cmp	r0, #58	@ 0x3a
10063b8c:	d010      	beq.n	10063bb0 <smp_start_encryption+0x6a>
10063b8e:	4605      	mov	r5, r0
10063b90:	280c      	cmp	r0, #12
10063b92:	d00d      	beq.n	10063bb0 <smp_start_encryption+0x6a>
10063b94:	2d00      	cmp	r5, #0
10063b96:	d10c      	bne.n	10063bb2 <smp_start_encryption+0x6c>
10063b98:	7ea0      	ldrb	r0, [r4, #26]
10063b9a:	2101      	movs	r1, #1
10063b9c:	4001      	ands	r1, r0
10063b9e:	d001      	beq.n	10063ba4 <smp_start_encryption+0x5e>
10063ba0:	220e      	movs	r2, #14
10063ba2:	43d7      	mvns	r7, r2
10063ba4:	72a7      	strb	r7, [r4, #10]
10063ba6:	22f8      	movs	r2, #248	@ 0xf8
10063ba8:	4010      	ands	r0, r2
10063baa:	0109      	lsls	r1, r1, #4
10063bac:	4301      	orrs	r1, r0
10063bae:	76a1      	strb	r1, [r4, #26]
10063bb0:	2500      	movs	r5, #0
10063bb2:	200e      	movs	r0, #14
10063bb4:	f001 fb3c 	bl	10065230 <tsk_notify_idx>
10063bb8:	f7de fe8d 	bl	100428d6 <BLE_STACK_ProcessRequest>
10063bbc:	4628      	mov	r0, r5
10063bbe:	b005      	add	sp, #20
10063bc0:	bdf0      	pop	{r4, r5, r6, r7, pc}
10063bc2:	21f8      	movs	r1, #248	@ 0xf8
10063bc4:	4008      	ands	r0, r1
10063bc6:	76a0      	strb	r0, [r4, #26]
10063bc8:	250c      	movs	r5, #12
10063bca:	e7f7      	b.n	10063bbc <smp_start_encryption+0x76>

10063bcc <smp_pp1_cei_send_pairing_request>:
10063bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
10063bce:	b087      	sub	sp, #28
10063bd0:	6805      	ldr	r5, [r0, #0]
10063bd2:	7ea9      	ldrb	r1, [r5, #26]
10063bd4:	240c      	movs	r4, #12
10063bd6:	06ca      	lsls	r2, r1, #27
10063bd8:	d500      	bpl.n	10063bdc <smp_pp1_cei_send_pairing_request+0x10>
10063bda:	e0a2      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063bdc:	7983      	ldrb	r3, [r0, #6]
10063bde:	7946      	ldrb	r6, [r0, #5]
10063be0:	7907      	ldrb	r7, [r0, #4]
10063be2:	2e00      	cmp	r6, #0
10063be4:	d003      	beq.n	10063bee <smp_pp1_cei_send_pairing_request+0x22>
10063be6:	0608      	lsls	r0, r1, #24
10063be8:	d50c      	bpl.n	10063c04 <smp_pp1_cei_send_pairing_request+0x38>
10063bea:	2483      	movs	r4, #131	@ 0x83
10063bec:	e099      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063bee:	484e      	ldr	r0, [pc, #312]	@ (10063d28 <__arm_cp.0_0>)
10063bf0:	6800      	ldr	r0, [r0, #0]
10063bf2:	2232      	movs	r2, #50	@ 0x32
10063bf4:	5c82      	ldrb	r2, [r0, r2]
10063bf6:	0792      	lsls	r2, r2, #30
10063bf8:	d504      	bpl.n	10063c04 <smp_pp1_cei_send_pairing_request+0x38>
10063bfa:	3032      	adds	r0, #50	@ 0x32
10063bfc:	7c00      	ldrb	r0, [r0, #16]
10063bfe:	0740      	lsls	r0, r0, #29
10063c00:	d500      	bpl.n	10063c04 <smp_pp1_cei_send_pairing_request+0x38>
10063c02:	e08e      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063c04:	2080      	movs	r0, #128	@ 0x80
10063c06:	4001      	ands	r1, r0
10063c08:	76a9      	strb	r1, [r5, #26]
10063c0a:	7aa8      	ldrb	r0, [r5, #10]
10063c0c:	2800      	cmp	r0, #0
10063c0e:	d00d      	beq.n	10063c2c <smp_pp1_cei_send_pairing_request+0x60>
10063c10:	28f1      	cmp	r0, #241	@ 0xf1
10063c12:	d000      	beq.n	10063c16 <smp_pp1_cei_send_pairing_request+0x4a>
10063c14:	e085      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063c16:	07f8      	lsls	r0, r7, #31
10063c18:	d108      	bne.n	10063c2c <smp_pp1_cei_send_pairing_request+0x60>
10063c1a:	2101      	movs	r1, #1
10063c1c:	4628      	mov	r0, r5
10063c1e:	9104      	str	r1, [sp, #16]
10063c20:	461c      	mov	r4, r3
10063c22:	f001 f903 	bl	10064e2c <smp_get_sec_level_for_mode1>
10063c26:	4623      	mov	r3, r4
10063c28:	4284      	cmp	r4, r0
10063c2a:	d929      	bls.n	10063c80 <smp_pp1_cei_send_pairing_request+0xb4>
10063c2c:	9305      	str	r3, [sp, #20]
10063c2e:	8929      	ldrh	r1, [r5, #8]
10063c30:	2400      	movs	r4, #0
10063c32:	220b      	movs	r2, #11
10063c34:	4620      	mov	r0, r4
10063c36:	f7ec f98f 	bl	1004ff58 <ACL_pkt_get>
10063c3a:	2800      	cmp	r0, #0
10063c3c:	d00a      	beq.n	10063c54 <smp_pp1_cei_send_pairing_request+0x88>
10063c3e:	9004      	str	r0, [sp, #16]
10063c40:	2001      	movs	r0, #1
10063c42:	f000 f913 	bl	10063e6c <smp_pp1_get_next_free_pairing_idx>
10063c46:	2803      	cmp	r0, #3
10063c48:	d306      	bcc.n	10063c58 <smp_pp1_cei_send_pairing_request+0x8c>
10063c4a:	9804      	ldr	r0, [sp, #16]
10063c4c:	f7ec f9a6 	bl	1004ff9c <ACL_pkt_release>
10063c50:	2438      	movs	r4, #56	@ 0x38
10063c52:	e066      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063c54:	2488      	movs	r4, #136	@ 0x88
10063c56:	e064      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063c58:	21a0      	movs	r1, #160	@ 0xa0
10063c5a:	72a9      	strb	r1, [r5, #10]
10063c5c:	7528      	strb	r0, [r5, #20]
10063c5e:	7be8      	ldrb	r0, [r5, #15]
10063c60:	212f      	movs	r1, #47	@ 0x2f
10063c62:	4001      	ands	r1, r0
10063c64:	73e9      	strb	r1, [r5, #15]
10063c66:	07b8      	lsls	r0, r7, #30
10063c68:	d503      	bpl.n	10063c72 <smp_pp1_cei_send_pairing_request+0xa6>
10063c6a:	7ea8      	ldrb	r0, [r5, #26]
10063c6c:	2120      	movs	r1, #32
10063c6e:	4301      	orrs	r1, r0
10063c70:	76a9      	strb	r1, [r5, #26]
10063c72:	2e00      	cmp	r6, #0
10063c74:	9805      	ldr	r0, [sp, #20]
10063c76:	d00c      	beq.n	10063c92 <smp_pp1_cei_send_pairing_request+0xc6>
10063c78:	a906      	add	r1, sp, #24
10063c7a:	f000 fa53 	bl	10064124 <smp_pp1_auth_req_field_generate_from_security_level>
10063c7e:	e00b      	b.n	10063c98 <smp_pp1_cei_send_pairing_request+0xcc>
10063c80:	7ea8      	ldrb	r0, [r5, #26]
10063c82:	9904      	ldr	r1, [sp, #16]
10063c84:	4308      	orrs	r0, r1
10063c86:	76a8      	strb	r0, [r5, #26]
10063c88:	4628      	mov	r0, r5
10063c8a:	f7eb f938 	bl	1004eefe <smp_start_encryption_ucfg>
10063c8e:	4604      	mov	r4, r0
10063c90:	e047      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063c92:	a806      	add	r0, sp, #24
10063c94:	f000 fa2c 	bl	100640f0 <smp_pp1_auth_req_field_generate_from_device_config>
10063c98:	4628      	mov	r0, r5
10063c9a:	f000 fb03 	bl	100642a4 <smp_oob_check_is_remote_data_present>
10063c9e:	4822      	ldr	r0, [pc, #136]	@ (10063d28 <__arm_cp.0_0>)
10063ca0:	6800      	ldr	r0, [r0, #0]
10063ca2:	2135      	movs	r1, #53	@ 0x35
10063ca4:	5c41      	ldrb	r1, [r0, r1]
10063ca6:	aa06      	add	r2, sp, #24
10063ca8:	7813      	ldrb	r3, [r2, #0]
10063caa:	7b6a      	ldrb	r2, [r5, #13]
10063cac:	3035      	adds	r0, #53	@ 0x35
10063cae:	7847      	ldrb	r7, [r0, #1]
10063cb0:	7880      	ldrb	r0, [r0, #2]
10063cb2:	9100      	str	r1, [sp, #0]
10063cb4:	9701      	str	r7, [sp, #4]
10063cb6:	9002      	str	r0, [sp, #8]
10063cb8:	2701      	movs	r7, #1
10063cba:	9e04      	ldr	r6, [sp, #16]
10063cbc:	4630      	mov	r0, r6
10063cbe:	4639      	mov	r1, r7
10063cc0:	f000 fa90 	bl	100641e4 <smp_pp1_pairing_packet_build>
10063cc4:	4628      	mov	r0, r5
10063cc6:	4631      	mov	r1, r6
10063cc8:	f006 faba 	bl	1006a240 <smp_dep_l2c_send_acl_packet>
10063ccc:	2800      	cmp	r0, #0
10063cce:	d00c      	beq.n	10063cea <smp_pp1_cei_send_pairing_request+0x11e>
10063cd0:	4815      	ldr	r0, [pc, #84]	@ (10063d28 <__arm_cp.0_0>)
10063cd2:	6800      	ldr	r0, [r0, #0]
10063cd4:	21b1      	movs	r1, #177	@ 0xb1
10063cd6:	5c41      	ldrb	r1, [r0, r1]
10063cd8:	2481      	movs	r4, #129	@ 0x81
10063cda:	2900      	cmp	r1, #0
10063cdc:	d021      	beq.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063cde:	30b1      	adds	r0, #177	@ 0xb1
10063ce0:	7d2a      	ldrb	r2, [r5, #20]
10063ce2:	4097      	lsls	r7, r2
10063ce4:	43b9      	bics	r1, r7
10063ce6:	7001      	strb	r1, [r0, #0]
10063ce8:	e01b      	b.n	10063d22 <smp_pp1_cei_send_pairing_request+0x156>
10063cea:	4628      	mov	r0, r5
10063cec:	301c      	adds	r0, #28
10063cee:	223c      	movs	r2, #60	@ 0x3c
10063cf0:	4621      	mov	r1, r4
10063cf2:	f7e0 fe67 	bl	100449c4 <BLEPLAT_MemSet>
10063cf6:	a806      	add	r0, sp, #24
10063cf8:	7800      	ldrb	r0, [r0, #0]
10063cfa:	2118      	movs	r1, #24
10063cfc:	4001      	ands	r1, r0
10063cfe:	75e9      	strb	r1, [r5, #23]
10063d00:	7ba9      	ldrb	r1, [r5, #14]
10063d02:	07c2      	lsls	r2, r0, #31
10063d04:	0f92      	lsrs	r2, r2, #30
10063d06:	430a      	orrs	r2, r1
10063d08:	73aa      	strb	r2, [r5, #14]
10063d0a:	7be9      	ldrb	r1, [r5, #15]
10063d0c:	0740      	lsls	r0, r0, #29
10063d0e:	0fc0      	lsrs	r0, r0, #31
10063d10:	4308      	orrs	r0, r1
10063d12:	73e8      	strb	r0, [r5, #15]
10063d14:	4630      	mov	r0, r6
10063d16:	4621      	mov	r1, r4
10063d18:	462a      	mov	r2, r5
10063d1a:	f000 f8eb 	bl	10063ef4 <smp_pp1_reqrsp_pdu_copy_to_pairing_data>
10063d1e:	20a1      	movs	r0, #161	@ 0xa1
10063d20:	72a8      	strb	r0, [r5, #10]
10063d22:	4620      	mov	r0, r4
10063d24:	b007      	add	sp, #28
10063d26:	bdf0      	pop	{r4, r5, r6, r7, pc}

10063d28 <__arm_cp.0_0>:
10063d28:	200008e0 	.word	0x200008e0

10063d2c <smp_pp1_cei_rxp_security_request>:
10063d2c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10063d2e:	460c      	mov	r4, r1
10063d30:	7a89      	ldrb	r1, [r1, #10]
10063d32:	3160      	adds	r1, #96	@ 0x60
10063d34:	b2c9      	uxtb	r1, r1
10063d36:	2951      	cmp	r1, #81	@ 0x51
10063d38:	d338      	bcc.n	10063dac <smp_pp1_cei_rxp_security_request+0x80>
10063d3a:	6840      	ldr	r0, [r0, #4]
10063d3c:	7a46      	ldrb	r6, [r0, #9]
10063d3e:	4827      	ldr	r0, [pc, #156]	@ (10063ddc <__arm_cp.1_0>)
10063d40:	6800      	ldr	r0, [r0, #0]
10063d42:	2132      	movs	r1, #50	@ 0x32
10063d44:	5c40      	ldrb	r0, [r0, r1]
10063d46:	2802      	cmp	r0, #2
10063d48:	d10a      	bne.n	10063d60 <smp_pp1_cei_rxp_security_request+0x34>
10063d4a:	2008      	movs	r0, #8
10063d4c:	4030      	ands	r0, r6
10063d4e:	d107      	bne.n	10063d60 <smp_pp1_cei_rxp_security_request+0x34>
10063d50:	2103      	movs	r1, #3
10063d52:	2200      	movs	r2, #0
10063d54:	2301      	movs	r3, #1
10063d56:	4620      	mov	r0, r4
10063d58:	f006 fc6c 	bl	1006a634 <smp_pp3_pairing_failed_send>
10063d5c:	4606      	mov	r6, r0
10063d5e:	e026      	b.n	10063dae <smp_pp1_cei_rxp_security_request+0x82>
10063d60:	7ea0      	ldrb	r0, [r4, #26]
10063d62:	2180      	movs	r1, #128	@ 0x80
10063d64:	4301      	orrs	r1, r0
10063d66:	76a1      	strb	r1, [r4, #26]
10063d68:	8920      	ldrh	r0, [r4, #8]
10063d6a:	f000 fa59 	bl	10064220 <smp_get_remote_device_list_index>
10063d6e:	4602      	mov	r2, r0
10063d70:	2500      	movs	r5, #0
10063d72:	4b1b      	ldr	r3, [pc, #108]	@ (10063de0 <__arm_cp.1_1>)
10063d74:	4628      	mov	r0, r5
10063d76:	4629      	mov	r1, r5
10063d78:	f000 fd08 	bl	1006478c <smp_timer_reset>
10063d7c:	7aa0      	ldrb	r0, [r4, #10]
10063d7e:	2702      	movs	r7, #2
10063d80:	28f1      	cmp	r0, #241	@ 0xf1
10063d82:	d107      	bne.n	10063d94 <smp_pp1_cei_rxp_security_request+0x68>
10063d84:	0770      	lsls	r0, r6, #29
10063d86:	d505      	bpl.n	10063d94 <smp_pp1_cei_rxp_security_request+0x68>
10063d88:	7ae0      	ldrb	r0, [r4, #11]
10063d8a:	2106      	movs	r1, #6
10063d8c:	4001      	ands	r1, r0
10063d8e:	424d      	negs	r5, r1
10063d90:	414d      	adcs	r5, r1
10063d92:	2703      	movs	r7, #3
10063d94:	201f      	movs	r0, #31
10063d96:	4006      	ands	r6, r0
10063d98:	7566      	strb	r6, [r4, #21]
10063d9a:	4620      	mov	r0, r4
10063d9c:	f000 f9de 	bl	1006415c <smp_pp1_hndl_pairing_response_mode_through_event>
10063da0:	2800      	cmp	r0, #0
10063da2:	d006      	beq.n	10063db2 <smp_pp1_cei_rxp_security_request+0x86>
10063da4:	0128      	lsls	r0, r5, #4
10063da6:	7da1      	ldrb	r1, [r4, #22]
10063da8:	4301      	orrs	r1, r0
10063daa:	75a1      	strb	r1, [r4, #22]
10063dac:	2600      	movs	r6, #0
10063dae:	4630      	mov	r0, r6
10063db0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10063db2:	a801      	add	r0, sp, #4
10063db4:	7187      	strb	r7, [r0, #6]
10063db6:	2600      	movs	r6, #0
10063db8:	7146      	strb	r6, [r0, #5]
10063dba:	7105      	strb	r5, [r0, #4]
10063dbc:	9401      	str	r4, [sp, #4]
10063dbe:	f7eb f8ab 	bl	1004ef18 <smp_pp1_cei_send_pairing_request_ucfg>
10063dc2:	2800      	cmp	r0, #0
10063dc4:	d0f3      	beq.n	10063dae <smp_pp1_cei_rxp_security_request+0x82>
10063dc6:	7ea1      	ldrb	r1, [r4, #26]
10063dc8:	227f      	movs	r2, #127	@ 0x7f
10063dca:	400a      	ands	r2, r1
10063dcc:	76a2      	strb	r2, [r4, #26]
10063dce:	2888      	cmp	r0, #136	@ 0x88
10063dd0:	d101      	bne.n	10063dd6 <smp_pp1_cei_rxp_security_request+0xaa>
10063dd2:	2688      	movs	r6, #136	@ 0x88
10063dd4:	e7eb      	b.n	10063dae <smp_pp1_cei_rxp_security_request+0x82>
10063dd6:	2108      	movs	r1, #8
10063dd8:	e7bb      	b.n	10063d52 <smp_pp1_cei_rxp_security_request+0x26>
10063dda:	46c0      	nop			@ (mov r8, r8)

10063ddc <__arm_cp.1_0>:
10063ddc:	200008e0 	.word	0x200008e0

10063de0 <__arm_cp.1_1>:
10063de0:	00007530 	.word	0x00007530

10063de4 <smp_pp1_cei_rxp_pairing_response>:
10063de4:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10063de6:	460c      	mov	r4, r1
10063de8:	4605      	mov	r5, r0
10063dea:	f000 f85f 	bl	10063eac <smp_pp1_reqrsp_pdu_params_check>
10063dee:	4601      	mov	r1, r0
10063df0:	2800      	cmp	r0, #0
10063df2:	d123      	bne.n	10063e3c <smp_pp1_cei_rxp_pairing_response+0x58>
10063df4:	7de0      	ldrb	r0, [r4, #23]
10063df6:	0700      	lsls	r0, r0, #28
10063df8:	d401      	bmi.n	10063dfe <smp_pp1_cei_rxp_pairing_response+0x1a>
10063dfa:	26a4      	movs	r6, #164	@ 0xa4
10063dfc:	e008      	b.n	10063e10 <smp_pp1_cei_rxp_pairing_response+0x2c>
10063dfe:	9401      	str	r4, [sp, #4]
10063e00:	9500      	str	r5, [sp, #0]
10063e02:	4668      	mov	r0, sp
10063e04:	f000 f82f 	bl	10063e66 <smp_pp1_cei_rxp_pairing_response_excerpt_scp_ucfg_weak>
10063e08:	4601      	mov	r1, r0
10063e0a:	2800      	cmp	r0, #0
10063e0c:	d116      	bne.n	10063e3c <smp_pp1_cei_rxp_pairing_response+0x58>
10063e0e:	26a2      	movs	r6, #162	@ 0xa2
10063e10:	7ba0      	ldrb	r0, [r4, #14]
10063e12:	21fe      	movs	r1, #254	@ 0xfe
10063e14:	4001      	ands	r1, r0
10063e16:	73a1      	strb	r1, [r4, #14]
10063e18:	7be0      	ldrb	r0, [r4, #15]
10063e1a:	21fb      	movs	r1, #251	@ 0xfb
10063e1c:	4001      	ands	r1, r0
10063e1e:	73e1      	strb	r1, [r4, #15]
10063e20:	2101      	movs	r1, #1
10063e22:	4628      	mov	r0, r5
10063e24:	4622      	mov	r2, r4
10063e26:	f000 f865 	bl	10063ef4 <smp_pp1_reqrsp_pdu_copy_to_pairing_data>
10063e2a:	4620      	mov	r0, r4
10063e2c:	f000 f874 	bl	10063f18 <smp_pp1_reqrsp_pdu_extract_from_pairing_data>
10063e30:	4620      	mov	r0, r4
10063e32:	f000 f8bd 	bl	10063fb0 <smp_pp1_key_generation_method_selection>
10063e36:	4601      	mov	r1, r0
10063e38:	2800      	cmp	r0, #0
10063e3a:	d009      	beq.n	10063e50 <smp_pp1_cei_rxp_pairing_response+0x6c>
10063e3c:	2988      	cmp	r1, #136	@ 0x88
10063e3e:	d101      	bne.n	10063e44 <smp_pp1_cei_rxp_pairing_response+0x60>
10063e40:	2088      	movs	r0, #136	@ 0x88
10063e42:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10063e44:	2200      	movs	r2, #0
10063e46:	2301      	movs	r3, #1
10063e48:	4620      	mov	r0, r4
10063e4a:	f006 fbf3 	bl	1006a634 <smp_pp3_pairing_failed_send>
10063e4e:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}
10063e50:	7ce0      	ldrb	r0, [r4, #19]
10063e52:	2802      	cmp	r0, #2
10063e54:	d104      	bne.n	10063e60 <smp_pp1_cei_rxp_pairing_response+0x7c>
10063e56:	7be0      	ldrb	r0, [r4, #15]
10063e58:	06c0      	lsls	r0, r0, #27
10063e5a:	d401      	bmi.n	10063e60 <smp_pp1_cei_rxp_pairing_response+0x7c>
10063e5c:	205d      	movs	r0, #93	@ 0x5d
10063e5e:	43c6      	mvns	r6, r0
10063e60:	72a6      	strb	r6, [r4, #10]
10063e62:	2000      	movs	r0, #0
10063e64:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

10063e66 <smp_pp1_cei_rxp_pairing_response_excerpt_scp_ucfg_weak>:
10063e66:	201f      	movs	r0, #31
10063e68:	4770      	bx	lr
	...

10063e6c <smp_pp1_get_next_free_pairing_idx>:
10063e6c:	b510      	push	{r4, lr}
10063e6e:	490b      	ldr	r1, [pc, #44]	@ (10063e9c <__arm_cp.0_0>)
10063e70:	680a      	ldr	r2, [r1, #0]
10063e72:	21b1      	movs	r1, #177	@ 0xb1
10063e74:	5c53      	ldrb	r3, [r2, r1]
10063e76:	32b1      	adds	r2, #177	@ 0xb1
10063e78:	2100      	movs	r1, #0
10063e7a:	2903      	cmp	r1, #3
10063e7c:	d005      	beq.n	10063e8a <smp_pp1_get_next_free_pairing_idx+0x1e>
10063e7e:	2401      	movs	r4, #1
10063e80:	408c      	lsls	r4, r1
10063e82:	421c      	tst	r4, r3
10063e84:	d003      	beq.n	10063e8e <smp_pp1_get_next_free_pairing_idx+0x22>
10063e86:	1c49      	adds	r1, r1, #1
10063e88:	e7f7      	b.n	10063e7a <smp_pp1_get_next_free_pairing_idx+0xe>
10063e8a:	2103      	movs	r1, #3
10063e8c:	e003      	b.n	10063e96 <smp_pp1_get_next_free_pairing_idx+0x2a>
10063e8e:	2800      	cmp	r0, #0
10063e90:	d001      	beq.n	10063e96 <smp_pp1_get_next_free_pairing_idx+0x2a>
10063e92:	4323      	orrs	r3, r4
10063e94:	7013      	strb	r3, [r2, #0]
10063e96:	b2c8      	uxtb	r0, r1
10063e98:	bd10      	pop	{r4, pc}
10063e9a:	46c0      	nop			@ (mov r8, r8)

10063e9c <__arm_cp.0_0>:
10063e9c:	200008e0 	.word	0x200008e0

10063ea0 <smp_pp1_get_pairing_pdu_offset>:
10063ea0:	0100      	lsls	r0, r0, #4
10063ea2:	2900      	cmp	r1, #0
10063ea4:	d000      	beq.n	10063ea8 <smp_pp1_get_pairing_pdu_offset+0x8>
10063ea6:	3008      	adds	r0, #8
10063ea8:	b2c0      	uxtb	r0, r0
10063eaa:	4770      	bx	lr

10063eac <smp_pp1_reqrsp_pdu_params_check>:
10063eac:	b51c      	push	{r2, r3, r4, lr}
10063eae:	2104      	movs	r1, #4
10063eb0:	2207      	movs	r2, #7
10063eb2:	466c      	mov	r4, sp
10063eb4:	4623      	mov	r3, r4
10063eb6:	f7ec f88d 	bl	1004ffd4 <ACL_pkt_read>
10063eba:	7862      	ldrb	r2, [r4, #1]
10063ebc:	210a      	movs	r1, #10
10063ebe:	2a04      	cmp	r2, #4
10063ec0:	d813      	bhi.n	10063eea <smp_pp1_reqrsp_pdu_params_check+0x3e>
10063ec2:	466a      	mov	r2, sp
10063ec4:	7892      	ldrb	r2, [r2, #2]
10063ec6:	2a01      	cmp	r2, #1
10063ec8:	d80f      	bhi.n	10063eea <smp_pp1_reqrsp_pdu_params_check+0x3e>
10063eca:	466a      	mov	r2, sp
10063ecc:	78d2      	ldrb	r2, [r2, #3]
10063ece:	0792      	lsls	r2, r2, #30
10063ed0:	d40b      	bmi.n	10063eea <smp_pp1_reqrsp_pdu_params_check+0x3e>
10063ed2:	4907      	ldr	r1, [pc, #28]	@ (10063ef0 <__arm_cp.2_0>)
10063ed4:	6809      	ldr	r1, [r1, #0]
10063ed6:	2234      	movs	r2, #52	@ 0x34
10063ed8:	5c8a      	ldrb	r2, [r1, r2]
10063eda:	4669      	mov	r1, sp
10063edc:	7909      	ldrb	r1, [r1, #4]
10063ede:	4291      	cmp	r1, r2
10063ee0:	d302      	bcc.n	10063ee8 <smp_pp1_reqrsp_pdu_params_check+0x3c>
10063ee2:	2911      	cmp	r1, #17
10063ee4:	4601      	mov	r1, r0
10063ee6:	d300      	bcc.n	10063eea <smp_pp1_reqrsp_pdu_params_check+0x3e>
10063ee8:	2106      	movs	r1, #6
10063eea:	4608      	mov	r0, r1
10063eec:	bd1c      	pop	{r2, r3, r4, pc}
10063eee:	46c0      	nop			@ (mov r8, r8)

10063ef0 <__arm_cp.2_0>:
10063ef0:	200008e0 	.word	0x200008e0

10063ef4 <smp_pp1_reqrsp_pdu_copy_to_pairing_data>:
10063ef4:	b580      	push	{r7, lr}
10063ef6:	7d12      	ldrb	r2, [r2, #20]
10063ef8:	0112      	lsls	r2, r2, #4
10063efa:	2900      	cmp	r1, #0
10063efc:	d000      	beq.n	10063f00 <smp_pp1_reqrsp_pdu_copy_to_pairing_data+0xc>
10063efe:	3208      	adds	r2, #8
10063f00:	b2d1      	uxtb	r1, r2
10063f02:	4a04      	ldr	r2, [pc, #16]	@ (10063f14 <__arm_cp.3_0>)
10063f04:	6812      	ldr	r2, [r2, #0]
10063f06:	1853      	adds	r3, r2, r1
10063f08:	33b4      	adds	r3, #180	@ 0xb4
10063f0a:	2104      	movs	r1, #4
10063f0c:	2207      	movs	r2, #7
10063f0e:	f7ec f861 	bl	1004ffd4 <ACL_pkt_read>
10063f12:	bd80      	pop	{r7, pc}

10063f14 <__arm_cp.3_0>:
10063f14:	200008e0 	.word	0x200008e0

10063f18 <smp_pp1_reqrsp_pdu_extract_from_pairing_data>:
10063f18:	b5f0      	push	{r4, r5, r6, r7, lr}
10063f1a:	4924      	ldr	r1, [pc, #144]	@ (10063fac <__arm_cp.4_0>)
10063f1c:	6809      	ldr	r1, [r1, #0]
10063f1e:	7d02      	ldrb	r2, [r0, #20]
10063f20:	0112      	lsls	r2, r2, #4
10063f22:	3208      	adds	r2, #8
10063f24:	b2d2      	uxtb	r2, r2
10063f26:	188b      	adds	r3, r1, r2
10063f28:	24b5      	movs	r4, #181	@ 0xb5
10063f2a:	5d1c      	ldrb	r4, [r3, r4]
10063f2c:	7304      	strb	r4, [r0, #12]
10063f2e:	24b6      	movs	r4, #182	@ 0xb6
10063f30:	5d1b      	ldrb	r3, [r3, r4]
10063f32:	2b01      	cmp	r3, #1
10063f34:	d103      	bne.n	10063f3e <smp_pp1_reqrsp_pdu_extract_from_pairing_data+0x26>
10063f36:	7b43      	ldrb	r3, [r0, #13]
10063f38:	2402      	movs	r4, #2
10063f3a:	431c      	orrs	r4, r3
10063f3c:	7344      	strb	r4, [r0, #13]
10063f3e:	460b      	mov	r3, r1
10063f40:	3336      	adds	r3, #54	@ 0x36
10063f42:	2503      	movs	r5, #3
10063f44:	4315      	orrs	r5, r2
10063f46:	460c      	mov	r4, r1
10063f48:	34b4      	adds	r4, #180	@ 0xb4
10063f4a:	5d65      	ldrb	r5, [r4, r5]
10063f4c:	2601      	movs	r6, #1
10063f4e:	402e      	ands	r6, r5
10063f50:	7b87      	ldrb	r7, [r0, #14]
10063f52:	4337      	orrs	r7, r6
10063f54:	7387      	strb	r7, [r0, #14]
10063f56:	2604      	movs	r6, #4
10063f58:	4035      	ands	r5, r6
10063f5a:	7bc7      	ldrb	r7, [r0, #15]
10063f5c:	432f      	orrs	r7, r5
10063f5e:	73c7      	strb	r7, [r0, #15]
10063f60:	4316      	orrs	r6, r2
10063f62:	5da5      	ldrb	r5, [r4, r6]
10063f64:	7405      	strb	r5, [r0, #16]
10063f66:	2505      	movs	r5, #5
10063f68:	4315      	orrs	r5, r2
10063f6a:	5d64      	ldrb	r4, [r4, r5]
10063f6c:	2560      	movs	r5, #96	@ 0x60
10063f6e:	5d45      	ldrb	r5, [r0, r5]
10063f70:	07ed      	lsls	r5, r5, #31
10063f72:	d10e      	bne.n	10063f92 <smp_pp1_reqrsp_pdu_extract_from_pairing_data+0x7a>
10063f74:	781d      	ldrb	r5, [r3, #0]
10063f76:	402c      	ands	r4, r5
10063f78:	2507      	movs	r5, #7
10063f7a:	402c      	ands	r4, r5
10063f7c:	7484      	strb	r4, [r0, #18]
10063f7e:	2406      	movs	r4, #6
10063f80:	4322      	orrs	r2, r4
10063f82:	1889      	adds	r1, r1, r2
10063f84:	22b4      	movs	r2, #180	@ 0xb4
10063f86:	5c89      	ldrb	r1, [r1, r2]
10063f88:	785a      	ldrb	r2, [r3, #1]
10063f8a:	400a      	ands	r2, r1
10063f8c:	402a      	ands	r2, r5
10063f8e:	7442      	strb	r2, [r0, #17]
10063f90:	bdf0      	pop	{r4, r5, r6, r7, pc}
10063f92:	785d      	ldrb	r5, [r3, #1]
10063f94:	4025      	ands	r5, r4
10063f96:	7445      	strb	r5, [r0, #17]
10063f98:	2406      	movs	r4, #6
10063f9a:	4322      	orrs	r2, r4
10063f9c:	1889      	adds	r1, r1, r2
10063f9e:	22b4      	movs	r2, #180	@ 0xb4
10063fa0:	5c89      	ldrb	r1, [r1, r2]
10063fa2:	781a      	ldrb	r2, [r3, #0]
10063fa4:	400a      	ands	r2, r1
10063fa6:	7482      	strb	r2, [r0, #18]
10063fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10063faa:	46c0      	nop			@ (mov r8, r8)

10063fac <__arm_cp.4_0>:
10063fac:	200008e0 	.word	0x200008e0

10063fb0 <smp_pp1_key_generation_method_selection>:
10063fb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10063fb2:	7b01      	ldrb	r1, [r0, #12]
10063fb4:	7b42      	ldrb	r2, [r0, #13]
10063fb6:	07d3      	lsls	r3, r2, #31
10063fb8:	d001      	beq.n	10063fbe <smp_pp1_key_generation_method_selection+0xe>
10063fba:	0793      	lsls	r3, r2, #30
10063fbc:	d405      	bmi.n	10063fca <smp_pp1_key_generation_method_selection+0x1a>
10063fbe:	7dc3      	ldrb	r3, [r0, #23]
10063fc0:	2408      	movs	r4, #8
10063fc2:	401c      	ands	r4, r3
10063fc4:	d003      	beq.n	10063fce <smp_pp1_key_generation_method_selection+0x1e>
10063fc6:	0792      	lsls	r2, r2, #30
10063fc8:	d001      	beq.n	10063fce <smp_pp1_key_generation_method_selection+0x1e>
10063fca:	2203      	movs	r2, #3
10063fcc:	e019      	b.n	10064002 <smp_pp1_key_generation_method_selection+0x52>
10063fce:	7bc3      	ldrb	r3, [r0, #15]
10063fd0:	2205      	movs	r2, #5
10063fd2:	4213      	tst	r3, r2
10063fd4:	d014      	beq.n	10064000 <smp_pp1_key_generation_method_selection+0x50>
10063fd6:	4b42      	ldr	r3, [pc, #264]	@ (100640e0 <__arm_cp.5_0>)
10063fd8:	681b      	ldr	r3, [r3, #0]
10063fda:	2540      	movs	r5, #64	@ 0x40
10063fdc:	5d5d      	ldrb	r5, [r3, r5]
10063fde:	434a      	muls	r2, r1
10063fe0:	4b40      	ldr	r3, [pc, #256]	@ (100640e4 <__arm_cp.5_1>)
10063fe2:	189a      	adds	r2, r3, r2
10063fe4:	5d52      	ldrb	r2, [r2, r5]
10063fe6:	74c2      	strb	r2, [r0, #19]
10063fe8:	4603      	mov	r3, r0
10063fea:	3313      	adds	r3, #19
10063fec:	2a00      	cmp	r2, #0
10063fee:	d10b      	bne.n	10064008 <smp_pp1_key_generation_method_selection+0x58>
10063ff0:	2c00      	cmp	r4, #0
10063ff2:	d13d      	bne.n	10064070 <smp_pp1_key_generation_method_selection+0xc0>
10063ff4:	2901      	cmp	r1, #1
10063ff6:	d16f      	bne.n	100640d8 <smp_pp1_key_generation_method_selection+0x128>
10063ff8:	2d01      	cmp	r5, #1
10063ffa:	d16d      	bne.n	100640d8 <smp_pp1_key_generation_method_selection+0x128>
10063ffc:	2201      	movs	r2, #1
10063ffe:	e06c      	b.n	100640da <smp_pp1_key_generation_method_selection+0x12a>
10064000:	2201      	movs	r2, #1
10064002:	74c2      	strb	r2, [r0, #19]
10064004:	4603      	mov	r3, r0
10064006:	3313      	adds	r3, #19
10064008:	2460      	movs	r4, #96	@ 0x60
1006400a:	5d05      	ldrb	r5, [r0, r4]
1006400c:	2601      	movs	r6, #1
1006400e:	4035      	ands	r5, r6
10064010:	d103      	bne.n	1006401a <smp_pp1_key_generation_method_selection+0x6a>
10064012:	241a      	movs	r4, #26
10064014:	5704      	ldrsb	r4, [r0, r4]
10064016:	2c00      	cmp	r4, #0
10064018:	d426      	bmi.n	10064068 <smp_pp1_key_generation_method_selection+0xb8>
1006401a:	4604      	mov	r4, r0
1006401c:	340f      	adds	r4, #15
1006401e:	7824      	ldrb	r4, [r4, #0]
10064020:	07e4      	lsls	r4, r4, #31
10064022:	d004      	beq.n	1006402e <smp_pp1_key_generation_method_selection+0x7e>
10064024:	2a01      	cmp	r2, #1
10064026:	d102      	bne.n	1006402e <smp_pp1_key_generation_method_selection+0x7e>
10064028:	2403      	movs	r4, #3
1006402a:	701c      	strb	r4, [r3, #0]
1006402c:	e052      	b.n	100640d4 <smp_pp1_key_generation_method_selection+0x124>
1006402e:	7dc3      	ldrb	r3, [r0, #23]
10064030:	071b      	lsls	r3, r3, #28
10064032:	d503      	bpl.n	1006403c <smp_pp1_key_generation_method_selection+0x8c>
10064034:	2a02      	cmp	r2, #2
10064036:	d101      	bne.n	1006403c <smp_pp1_key_generation_method_selection+0x8c>
10064038:	2300      	movs	r3, #0
1006403a:	76c3      	strb	r3, [r0, #27]
1006403c:	2a02      	cmp	r2, #2
1006403e:	d111      	bne.n	10064064 <smp_pp1_key_generation_method_selection+0xb4>
10064040:	7bc2      	ldrb	r2, [r0, #15]
10064042:	23ef      	movs	r3, #239	@ 0xef
10064044:	4013      	ands	r3, r2
10064046:	73c3      	strb	r3, [r0, #15]
10064048:	4a25      	ldr	r2, [pc, #148]	@ (100640e0 <__arm_cp.5_0>)
1006404a:	6812      	ldr	r2, [r2, #0]
1006404c:	2340      	movs	r3, #64	@ 0x40
1006404e:	5cd2      	ldrb	r2, [r2, r3]
10064050:	2400      	movs	r4, #0
10064052:	2a02      	cmp	r2, #2
10064054:	4627      	mov	r7, r4
10064056:	d318      	bcc.n	1006408a <smp_pp1_key_generation_method_selection+0xda>
10064058:	2a04      	cmp	r2, #4
1006405a:	d00b      	beq.n	10064074 <smp_pp1_key_generation_method_selection+0xc4>
1006405c:	2a02      	cmp	r2, #2
1006405e:	d113      	bne.n	10064088 <smp_pp1_key_generation_method_selection+0xd8>
10064060:	4637      	mov	r7, r6
10064062:	e012      	b.n	1006408a <smp_pp1_key_generation_method_selection+0xda>
10064064:	2400      	movs	r4, #0
10064066:	e035      	b.n	100640d4 <smp_pp1_key_generation_method_selection+0x124>
10064068:	4c1d      	ldr	r4, [pc, #116]	@ (100640e0 <__arm_cp.5_0>)
1006406a:	6824      	ldr	r4, [r4, #0]
1006406c:	3431      	adds	r4, #49	@ 0x31
1006406e:	e7d6      	b.n	1006401e <smp_pp1_key_generation_method_selection+0x6e>
10064070:	2204      	movs	r2, #4
10064072:	e032      	b.n	100640da <smp_pp1_key_generation_method_selection+0x12a>
10064074:	2902      	cmp	r1, #2
10064076:	4637      	mov	r7, r6
10064078:	d307      	bcc.n	1006408a <smp_pp1_key_generation_method_selection+0xda>
1006407a:	2904      	cmp	r1, #4
1006407c:	462f      	mov	r7, r5
1006407e:	d004      	beq.n	1006408a <smp_pp1_key_generation_method_selection+0xda>
10064080:	2902      	cmp	r1, #2
10064082:	d101      	bne.n	10064088 <smp_pp1_key_generation_method_selection+0xd8>
10064084:	4627      	mov	r7, r4
10064086:	e000      	b.n	1006408a <smp_pp1_key_generation_method_selection+0xda>
10064088:	27ff      	movs	r7, #255	@ 0xff
1006408a:	4917      	ldr	r1, [pc, #92]	@ (100640e8 <__arm_cp.5_2>)
1006408c:	6809      	ldr	r1, [r1, #0]
1006408e:	224e      	movs	r2, #78	@ 0x4e
10064090:	5c89      	ldrb	r1, [r1, r2]
10064092:	0749      	lsls	r1, r1, #29
10064094:	d51e      	bpl.n	100640d4 <smp_pp1_key_generation_method_selection+0x124>
10064096:	8906      	ldrh	r6, [r0, #8]
10064098:	4814      	ldr	r0, [pc, #80]	@ (100640ec <__arm_cp.5_3>)
1006409a:	6800      	ldr	r0, [r0, #0]
1006409c:	6980      	ldr	r0, [r0, #24]
1006409e:	2502      	movs	r5, #2
100640a0:	2246      	movs	r2, #70	@ 0x46
100640a2:	2303      	movs	r3, #3
100640a4:	4629      	mov	r1, r5
100640a6:	f7ec f92b 	bl	10050300 <aci_event_fifo_push_header>
100640aa:	2800      	cmp	r0, #0
100640ac:	d012      	beq.n	100640d4 <smp_pp1_key_generation_method_selection+0x124>
100640ae:	4601      	mov	r1, r0
100640b0:	7286      	strb	r6, [r0, #10]
100640b2:	2004      	movs	r0, #4
100640b4:	7248      	strb	r0, [r1, #9]
100640b6:	720d      	strb	r5, [r1, #8]
100640b8:	2400      	movs	r4, #0
100640ba:	71cc      	strb	r4, [r1, #7]
100640bc:	2005      	movs	r0, #5
100640be:	7188      	strb	r0, [r1, #6]
100640c0:	730f      	strb	r7, [r1, #12]
100640c2:	20ff      	movs	r0, #255	@ 0xff
100640c4:	7148      	strb	r0, [r1, #5]
100640c6:	2082      	movs	r0, #130	@ 0x82
100640c8:	7108      	strb	r0, [r1, #4]
100640ca:	0a30      	lsrs	r0, r6, #8
100640cc:	72c8      	strb	r0, [r1, #11]
100640ce:	4628      	mov	r0, r5
100640d0:	f7ec f9b3 	bl	1005043a <aci_event_fifo_push>
100640d4:	4620      	mov	r0, r4
100640d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100640d8:	2202      	movs	r2, #2
100640da:	701a      	strb	r2, [r3, #0]
100640dc:	e794      	b.n	10064008 <smp_pp1_key_generation_method_selection+0x58>
100640de:	46c0      	nop			@ (mov r8, r8)

100640e0 <__arm_cp.5_0>:
100640e0:	200008e0 	.word	0x200008e0

100640e4 <__arm_cp.5_1>:
100640e4:	1006ea47 	.word	0x1006ea47

100640e8 <__arm_cp.5_2>:
100640e8:	20000894 	.word	0x20000894

100640ec <__arm_cp.5_3>:
100640ec:	20000840 	.word	0x20000840

100640f0 <smp_pp1_auth_req_field_generate_from_device_config>:
100640f0:	490b      	ldr	r1, [pc, #44]	@ (10064120 <__arm_cp.6_0>)
100640f2:	6809      	ldr	r1, [r1, #0]
100640f4:	2230      	movs	r2, #48	@ 0x30
100640f6:	5c8a      	ldrb	r2, [r1, r2]
100640f8:	2301      	movs	r3, #1
100640fa:	4013      	ands	r3, r2
100640fc:	3130      	adds	r1, #48	@ 0x30
100640fe:	784a      	ldrb	r2, [r1, #1]
10064100:	07d2      	lsls	r2, r2, #31
10064102:	0f52      	lsrs	r2, r2, #29
10064104:	18d2      	adds	r2, r2, r3
10064106:	78cb      	ldrb	r3, [r1, #3]
10064108:	07db      	lsls	r3, r3, #31
1006410a:	0edb      	lsrs	r3, r3, #27
1006410c:	18d2      	adds	r2, r2, r3
1006410e:	7889      	ldrb	r1, [r1, #2]
10064110:	084b      	lsrs	r3, r1, #1
10064112:	430b      	orrs	r3, r1
10064114:	07d9      	lsls	r1, r3, #31
10064116:	0f09      	lsrs	r1, r1, #28
10064118:	1851      	adds	r1, r2, r1
1006411a:	7001      	strb	r1, [r0, #0]
1006411c:	4770      	bx	lr
1006411e:	46c0      	nop			@ (mov r8, r8)

10064120 <__arm_cp.6_0>:
10064120:	200008e0 	.word	0x200008e0

10064124 <smp_pp1_auth_req_field_generate_from_security_level>:
10064124:	b510      	push	{r4, lr}
10064126:	2201      	movs	r2, #1
10064128:	2802      	cmp	r0, #2
1006412a:	4610      	mov	r0, r2
1006412c:	d800      	bhi.n	10064130 <smp_pp1_auth_req_field_generate_from_security_level+0xc>
1006412e:	2000      	movs	r0, #0
10064130:	0080      	lsls	r0, r0, #2
10064132:	4b09      	ldr	r3, [pc, #36]	@ (10064158 <__arm_cp.7_0>)
10064134:	681b      	ldr	r3, [r3, #0]
10064136:	2430      	movs	r4, #48	@ 0x30
10064138:	5d1c      	ldrb	r4, [r3, r4]
1006413a:	4014      	ands	r4, r2
1006413c:	1820      	adds	r0, r4, r0
1006413e:	3330      	adds	r3, #48	@ 0x30
10064140:	78da      	ldrb	r2, [r3, #3]
10064142:	07d2      	lsls	r2, r2, #31
10064144:	0ed2      	lsrs	r2, r2, #27
10064146:	1880      	adds	r0, r0, r2
10064148:	789a      	ldrb	r2, [r3, #2]
1006414a:	0853      	lsrs	r3, r2, #1
1006414c:	4313      	orrs	r3, r2
1006414e:	07da      	lsls	r2, r3, #31
10064150:	0f12      	lsrs	r2, r2, #28
10064152:	1880      	adds	r0, r0, r2
10064154:	7008      	strb	r0, [r1, #0]
10064156:	bd10      	pop	{r4, pc}

10064158 <__arm_cp.7_0>:
10064158:	200008e0 	.word	0x200008e0

1006415c <smp_pp1_hndl_pairing_response_mode_through_event>:
1006415c:	b570      	push	{r4, r5, r6, lr}
1006415e:	4605      	mov	r5, r0
10064160:	8900      	ldrh	r0, [r0, #8]
10064162:	f000 fee8 	bl	10064f36 <smp_sap_check_is_peer_device_bonded>
10064166:	4246      	negs	r6, r0
10064168:	4146      	adcs	r6, r0
1006416a:	491b      	ldr	r1, [pc, #108]	@ (100641d8 <__arm_cp.8_0>)
1006416c:	6809      	ldr	r1, [r1, #0]
1006416e:	223c      	movs	r2, #60	@ 0x3c
10064170:	5c89      	ldrb	r1, [r1, r2]
10064172:	2902      	cmp	r1, #2
10064174:	d004      	beq.n	10064180 <smp_pp1_hndl_pairing_response_mode_through_event+0x24>
10064176:	2400      	movs	r4, #0
10064178:	2901      	cmp	r1, #1
1006417a:	d12a      	bne.n	100641d2 <smp_pp1_hndl_pairing_response_mode_through_event+0x76>
1006417c:	2800      	cmp	r0, #0
1006417e:	d128      	bne.n	100641d2 <smp_pp1_hndl_pairing_response_mode_through_event+0x76>
10064180:	2008      	movs	r0, #8
10064182:	4301      	orrs	r1, r0
10064184:	75a9      	strb	r1, [r5, #22]
10064186:	4815      	ldr	r0, [pc, #84]	@ (100641dc <__arm_cp.8_1>)
10064188:	6800      	ldr	r0, [r0, #0]
1006418a:	214e      	movs	r1, #78	@ 0x4e
1006418c:	5c40      	ldrb	r0, [r0, r1]
1006418e:	2401      	movs	r4, #1
10064190:	0780      	lsls	r0, r0, #30
10064192:	d51e      	bpl.n	100641d2 <smp_pp1_hndl_pairing_response_mode_through_event+0x76>
10064194:	892d      	ldrh	r5, [r5, #8]
10064196:	4812      	ldr	r0, [pc, #72]	@ (100641e0 <__arm_cp.8_2>)
10064198:	6800      	ldr	r0, [r0, #0]
1006419a:	6980      	ldr	r0, [r0, #24]
1006419c:	2102      	movs	r1, #2
1006419e:	224b      	movs	r2, #75	@ 0x4b
100641a0:	2303      	movs	r3, #3
100641a2:	f7ec f8ad 	bl	10050300 <aci_event_fifo_push_header>
100641a6:	2800      	cmp	r0, #0
100641a8:	d013      	beq.n	100641d2 <smp_pp1_hndl_pairing_response_mode_through_event+0x76>
100641aa:	4601      	mov	r1, r0
100641ac:	7285      	strb	r5, [r0, #10]
100641ae:	2004      	movs	r0, #4
100641b0:	7248      	strb	r0, [r1, #9]
100641b2:	200b      	movs	r0, #11
100641b4:	7208      	strb	r0, [r1, #8]
100641b6:	2000      	movs	r0, #0
100641b8:	71c8      	strb	r0, [r1, #7]
100641ba:	2005      	movs	r0, #5
100641bc:	7188      	strb	r0, [r1, #6]
100641be:	730e      	strb	r6, [r1, #12]
100641c0:	20ff      	movs	r0, #255	@ 0xff
100641c2:	7148      	strb	r0, [r1, #5]
100641c4:	2082      	movs	r0, #130	@ 0x82
100641c6:	7108      	strb	r0, [r1, #4]
100641c8:	0a28      	lsrs	r0, r5, #8
100641ca:	72c8      	strb	r0, [r1, #11]
100641cc:	2002      	movs	r0, #2
100641ce:	f7ec f934 	bl	1005043a <aci_event_fifo_push>
100641d2:	4620      	mov	r0, r4
100641d4:	bd70      	pop	{r4, r5, r6, pc}
100641d6:	46c0      	nop			@ (mov r8, r8)

100641d8 <__arm_cp.8_0>:
100641d8:	200008e0 	.word	0x200008e0

100641dc <__arm_cp.8_1>:
100641dc:	20000894 	.word	0x20000894

100641e0 <__arm_cp.8_2>:
100641e0:	20000840 	.word	0x20000840

100641e4 <smp_pp1_pairing_packet_build>:
100641e4:	b510      	push	{r4, lr}
100641e6:	2407      	movs	r4, #7
100641e8:	8044      	strh	r4, [r0, #2]
100641ea:	6844      	ldr	r4, [r0, #4]
100641ec:	7221      	strb	r1, [r4, #8]
100641ee:	490b      	ldr	r1, [pc, #44]	@ (1006421c <__arm_cp.9_0>)
100641f0:	6809      	ldr	r1, [r1, #0]
100641f2:	2440      	movs	r4, #64	@ 0x40
100641f4:	5d09      	ldrb	r1, [r1, r4]
100641f6:	6844      	ldr	r4, [r0, #4]
100641f8:	7261      	strb	r1, [r4, #9]
100641fa:	2101      	movs	r1, #1
100641fc:	4011      	ands	r1, r2
100641fe:	6842      	ldr	r2, [r0, #4]
10064200:	7291      	strb	r1, [r2, #10]
10064202:	6841      	ldr	r1, [r0, #4]
10064204:	72cb      	strb	r3, [r1, #11]
10064206:	6841      	ldr	r1, [r0, #4]
10064208:	9a02      	ldr	r2, [sp, #8]
1006420a:	730a      	strb	r2, [r1, #12]
1006420c:	6841      	ldr	r1, [r0, #4]
1006420e:	9a03      	ldr	r2, [sp, #12]
10064210:	734a      	strb	r2, [r1, #13]
10064212:	6840      	ldr	r0, [r0, #4]
10064214:	9904      	ldr	r1, [sp, #16]
10064216:	7381      	strb	r1, [r0, #14]
10064218:	bd10      	pop	{r4, pc}
1006421a:	46c0      	nop			@ (mov r8, r8)

1006421c <__arm_cp.9_0>:
1006421c:	200008e0 	.word	0x200008e0

10064220 <smp_get_remote_device_list_index>:
10064220:	b5b0      	push	{r4, r5, r7, lr}
10064222:	490d      	ldr	r1, [pc, #52]	@ (10064258 <__arm_cp.0_0>)
10064224:	6809      	ldr	r1, [r1, #0]
10064226:	2234      	movs	r2, #52	@ 0x34
10064228:	5c89      	ldrb	r1, [r1, r2]
1006422a:	2800      	cmp	r0, #0
1006422c:	d011      	beq.n	10064252 <smp_get_remote_device_list_index+0x32>
1006422e:	4a0b      	ldr	r2, [pc, #44]	@ (1006425c <__arm_cp.0_1>)
10064230:	6812      	ldr	r2, [r2, #0]
10064232:	32a4      	adds	r2, #164	@ 0xa4
10064234:	2300      	movs	r3, #0
10064236:	b2dc      	uxtb	r4, r3
10064238:	428c      	cmp	r4, r1
1006423a:	d20a      	bcs.n	10064252 <smp_get_remote_device_list_index+0x32>
1006423c:	2570      	movs	r5, #112	@ 0x70
1006423e:	4365      	muls	r5, r4
10064240:	6814      	ldr	r4, [r2, #0]
10064242:	1964      	adds	r4, r4, r5
10064244:	8924      	ldrh	r4, [r4, #8]
10064246:	4044      	eors	r4, r0
10064248:	0524      	lsls	r4, r4, #20
1006424a:	d001      	beq.n	10064250 <smp_get_remote_device_list_index+0x30>
1006424c:	1c5b      	adds	r3, r3, #1
1006424e:	e7f2      	b.n	10064236 <smp_get_remote_device_list_index+0x16>
10064250:	4619      	mov	r1, r3
10064252:	b2c8      	uxtb	r0, r1
10064254:	bdb0      	pop	{r4, r5, r7, pc}
10064256:	46c0      	nop			@ (mov r8, r8)

10064258 <__arm_cp.0_0>:
10064258:	2000083c 	.word	0x2000083c

1006425c <__arm_cp.0_1>:
1006425c:	200008e0 	.word	0x200008e0

10064260 <smp_get_remote_device_list_item>:
10064260:	b5f0      	push	{r4, r5, r6, r7, lr}
10064262:	4601      	mov	r1, r0
10064264:	2000      	movs	r0, #0
10064266:	2900      	cmp	r1, #0
10064268:	d017      	beq.n	1006429a <smp_get_remote_device_list_item+0x3a>
1006426a:	4a0c      	ldr	r2, [pc, #48]	@ (1006429c <__arm_cp.1_0>)
1006426c:	6812      	ldr	r2, [r2, #0]
1006426e:	2334      	movs	r3, #52	@ 0x34
10064270:	5cd3      	ldrb	r3, [r2, r3]
10064272:	2270      	movs	r2, #112	@ 0x70
10064274:	435a      	muls	r2, r3
10064276:	236f      	movs	r3, #111	@ 0x6f
10064278:	43dd      	mvns	r5, r3
1006427a:	4b09      	ldr	r3, [pc, #36]	@ (100642a0 <__arm_cp.1_1>)
1006427c:	681b      	ldr	r3, [r3, #0]
1006427e:	33a4      	adds	r3, #164	@ 0xa4
10064280:	462c      	mov	r4, r5
10064282:	3470      	adds	r4, #112	@ 0x70
10064284:	42a2      	cmp	r2, r4
10064286:	d008      	beq.n	1006429a <smp_get_remote_device_list_item+0x3a>
10064288:	681e      	ldr	r6, [r3, #0]
1006428a:	1975      	adds	r5, r6, r5
1006428c:	2778      	movs	r7, #120	@ 0x78
1006428e:	5bed      	ldrh	r5, [r5, r7]
10064290:	404d      	eors	r5, r1
10064292:	052d      	lsls	r5, r5, #20
10064294:	4625      	mov	r5, r4
10064296:	d1f4      	bne.n	10064282 <smp_get_remote_device_list_item+0x22>
10064298:	1930      	adds	r0, r6, r4
1006429a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006429c <__arm_cp.1_0>:
1006429c:	2000083c 	.word	0x2000083c

100642a0 <__arm_cp.1_1>:
100642a0:	200008e0 	.word	0x200008e0

100642a4 <smp_oob_check_is_remote_data_present>:
100642a4:	b5b0      	push	{r4, r5, r7, lr}
100642a6:	4604      	mov	r4, r0
100642a8:	480b      	ldr	r0, [pc, #44]	@ (100642d8 <__arm_cp.2_0>)
100642aa:	6800      	ldr	r0, [r0, #0]
100642ac:	21ac      	movs	r1, #172	@ 0xac
100642ae:	5840      	ldr	r0, [r0, r1]
100642b0:	7845      	ldrb	r5, [r0, #1]
100642b2:	1c80      	adds	r0, r0, #2
100642b4:	1ca1      	adds	r1, r4, #2
100642b6:	2206      	movs	r2, #6
100642b8:	f7e0 fb94 	bl	100449e4 <BLEPLAT_MemCmp>
100642bc:	4601      	mov	r1, r0
100642be:	2000      	movs	r0, #0
100642c0:	2900      	cmp	r1, #0
100642c2:	d000      	beq.n	100642c6 <smp_oob_check_is_remote_data_present+0x22>
100642c4:	bdb0      	pop	{r4, r5, r7, pc}
100642c6:	7861      	ldrb	r1, [r4, #1]
100642c8:	428d      	cmp	r5, r1
100642ca:	d1fb      	bne.n	100642c4 <smp_oob_check_is_remote_data_present+0x20>
100642cc:	7b61      	ldrb	r1, [r4, #13]
100642ce:	2001      	movs	r0, #1
100642d0:	4301      	orrs	r1, r0
100642d2:	7361      	strb	r1, [r4, #13]
100642d4:	bdb0      	pop	{r4, r5, r7, pc}
100642d6:	46c0      	nop			@ (mov r8, r8)

100642d8 <__arm_cp.2_0>:
100642d8:	200008e0 	.word	0x200008e0

100642dc <smp_oob_clear_remote_data_entry>:
100642dc:	b580      	push	{r7, lr}
100642de:	2228      	movs	r2, #40	@ 0x28
100642e0:	4350      	muls	r0, r2
100642e2:	4904      	ldr	r1, [pc, #16]	@ (100642f4 <__arm_cp.4_0>)
100642e4:	6809      	ldr	r1, [r1, #0]
100642e6:	23ac      	movs	r3, #172	@ 0xac
100642e8:	58c9      	ldr	r1, [r1, r3]
100642ea:	1808      	adds	r0, r1, r0
100642ec:	2100      	movs	r1, #0
100642ee:	f7e0 fb69 	bl	100449c4 <BLEPLAT_MemSet>
100642f2:	bd80      	pop	{r7, pc}

100642f4 <__arm_cp.4_0>:
100642f4:	200008e0 	.word	0x200008e0

100642f8 <smp_scp_init_ucfg_weak>:
100642f8:	4770      	bx	lr

100642fa <smp_scp_continue_on_exclusive_sc_pairing_ucfg_weak>:
100642fa:	201f      	movs	r0, #31
100642fc:	4770      	bx	lr

100642fe <smp_scp_public_key_prepare_and_exchange_ucfg_weak>:
100642fe:	201f      	movs	r0, #31
10064300:	4770      	bx	lr

10064302 <smp_scp_stats_update_on_pairing_complete_ucfg_weak>:
10064302:	4770      	bx	lr

10064304 <smp_fsm_process_actions_wrt_state_tsk>:
10064304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10064306:	2700      	movs	r7, #0
10064308:	4b6b      	ldr	r3, [pc, #428]	@ (100644b8 <__arm_cp.0_0>)
1006430a:	4a6c      	ldr	r2, [pc, #432]	@ (100644bc <__arm_cp.0_1>)
1006430c:	463d      	mov	r5, r7
1006430e:	6818      	ldr	r0, [r3, #0]
10064310:	2134      	movs	r1, #52	@ 0x34
10064312:	5c40      	ldrb	r0, [r0, r1]
10064314:	4285      	cmp	r5, r0
10064316:	d300      	bcc.n	1006431a <smp_fsm_process_actions_wrt_state_tsk+0x16>
10064318:	e0cd      	b.n	100644b6 <smp_fsm_process_actions_wrt_state_tsk+0x1b2>
1006431a:	6810      	ldr	r0, [r2, #0]
1006431c:	21a4      	movs	r1, #164	@ 0xa4
1006431e:	5840      	ldr	r0, [r0, r1]
10064320:	2800      	cmp	r0, #0
10064322:	d100      	bne.n	10064326 <smp_fsm_process_actions_wrt_state_tsk+0x22>
10064324:	e0b2      	b.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
10064326:	19c4      	adds	r4, r0, r7
10064328:	8920      	ldrh	r0, [r4, #8]
1006432a:	2800      	cmp	r0, #0
1006432c:	d100      	bne.n	10064330 <smp_fsm_process_actions_wrt_state_tsk+0x2c>
1006432e:	e0ad      	b.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
10064330:	7aa0      	ldrb	r0, [r4, #10]
10064332:	4601      	mov	r1, r0
10064334:	39d1      	subs	r1, #209	@ 0xd1
10064336:	2905      	cmp	r1, #5
10064338:	d35d      	bcc.n	100643f6 <smp_fsm_process_actions_wrt_state_tsk+0xf2>
1006433a:	2800      	cmp	r0, #0
1006433c:	d100      	bne.n	10064340 <smp_fsm_process_actions_wrt_state_tsk+0x3c>
1006433e:	e0a5      	b.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
10064340:	28fe      	cmp	r0, #254	@ 0xfe
10064342:	d100      	bne.n	10064346 <smp_fsm_process_actions_wrt_state_tsk+0x42>
10064344:	e08a      	b.n	1006445c <smp_fsm_process_actions_wrt_state_tsk+0x158>
10064346:	28a2      	cmp	r0, #162	@ 0xa2
10064348:	d059      	beq.n	100643fe <smp_fsm_process_actions_wrt_state_tsk+0xfa>
1006434a:	28aa      	cmp	r0, #170	@ 0xaa
1006434c:	d100      	bne.n	10064350 <smp_fsm_process_actions_wrt_state_tsk+0x4c>
1006434e:	e081      	b.n	10064454 <smp_fsm_process_actions_wrt_state_tsk+0x150>
10064350:	28b2      	cmp	r0, #178	@ 0xb2
10064352:	d054      	beq.n	100643fe <smp_fsm_process_actions_wrt_state_tsk+0xfa>
10064354:	28b4      	cmp	r0, #180	@ 0xb4
10064356:	d100      	bne.n	1006435a <smp_fsm_process_actions_wrt_state_tsk+0x56>
10064358:	e08a      	b.n	10064470 <smp_fsm_process_actions_wrt_state_tsk+0x16c>
1006435a:	28ba      	cmp	r0, #186	@ 0xba
1006435c:	d07a      	beq.n	10064454 <smp_fsm_process_actions_wrt_state_tsk+0x150>
1006435e:	28bf      	cmp	r0, #191	@ 0xbf
10064360:	d100      	bne.n	10064364 <smp_fsm_process_actions_wrt_state_tsk+0x60>
10064362:	e089      	b.n	10064478 <smp_fsm_process_actions_wrt_state_tsk+0x174>
10064364:	28f0      	cmp	r0, #240	@ 0xf0
10064366:	d100      	bne.n	1006436a <smp_fsm_process_actions_wrt_state_tsk+0x66>
10064368:	e08b      	b.n	10064482 <smp_fsm_process_actions_wrt_state_tsk+0x17e>
1006436a:	2810      	cmp	r0, #16
1006436c:	d000      	beq.n	10064370 <smp_fsm_process_actions_wrt_state_tsk+0x6c>
1006436e:	e090      	b.n	10064492 <smp_fsm_process_actions_wrt_state_tsk+0x18e>
10064370:	2101      	movs	r1, #1
10064372:	4620      	mov	r0, r4
10064374:	f006 f826 	bl	1006a3c4 <smp_dep_sdb_find_bonding_record_by_conn_addr>
10064378:	2800      	cmp	r0, #0
1006437a:	d100      	bne.n	1006437e <smp_fsm_process_actions_wrt_state_tsk+0x7a>
1006437c:	e096      	b.n	100644ac <smp_fsm_process_actions_wrt_state_tsk+0x1a8>
1006437e:	2600      	movs	r6, #0
10064380:	72a6      	strb	r6, [r4, #10]
10064382:	f7ed fce1 	bl	10051d48 <GapIsPrivacySupported>
10064386:	2800      	cmp	r0, #0
10064388:	4b4b      	ldr	r3, [pc, #300]	@ (100644b8 <__arm_cp.0_0>)
1006438a:	4a4c      	ldr	r2, [pc, #304]	@ (100644bc <__arm_cp.0_1>)
1006438c:	d07e      	beq.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
1006438e:	2060      	movs	r0, #96	@ 0x60
10064390:	5c20      	ldrb	r0, [r4, r0]
10064392:	07c0      	lsls	r0, r0, #31
10064394:	d07a      	beq.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
10064396:	f005 ff86 	bl	1006a2a6 <smp_dep_sdb_get_bonding_records_count>
1006439a:	4a48      	ldr	r2, [pc, #288]	@ (100644bc <__arm_cp.0_1>)
1006439c:	4b46      	ldr	r3, [pc, #280]	@ (100644b8 <__arm_cp.0_0>)
1006439e:	2800      	cmp	r0, #0
100643a0:	d074      	beq.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
100643a2:	79e0      	ldrb	r0, [r4, #7]
100643a4:	21c0      	movs	r1, #192	@ 0xc0
100643a6:	4001      	ands	r1, r0
100643a8:	2940      	cmp	r1, #64	@ 0x40
100643aa:	d16f      	bne.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
100643ac:	4844      	ldr	r0, [pc, #272]	@ (100644c0 <__arm_cp.0_2>)
100643ae:	6800      	ldr	r0, [r0, #0]
100643b0:	214f      	movs	r1, #79	@ 0x4f
100643b2:	5c40      	ldrb	r0, [r0, r1]
100643b4:	0700      	lsls	r0, r0, #28
100643b6:	d569      	bpl.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
100643b8:	8924      	ldrh	r4, [r4, #8]
100643ba:	4842      	ldr	r0, [pc, #264]	@ (100644c4 <__arm_cp.0_3>)
100643bc:	6800      	ldr	r0, [r0, #0]
100643be:	6980      	ldr	r0, [r0, #24]
100643c0:	2248      	movs	r2, #72	@ 0x48
100643c2:	2102      	movs	r1, #2
100643c4:	460b      	mov	r3, r1
100643c6:	f7eb ff9b 	bl	10050300 <aci_event_fifo_push_header>
100643ca:	4a3c      	ldr	r2, [pc, #240]	@ (100644bc <__arm_cp.0_1>)
100643cc:	4b3a      	ldr	r3, [pc, #232]	@ (100644b8 <__arm_cp.0_0>)
100643ce:	2800      	cmp	r0, #0
100643d0:	d05c      	beq.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
100643d2:	4601      	mov	r1, r0
100643d4:	2004      	movs	r0, #4
100643d6:	7248      	strb	r0, [r1, #9]
100643d8:	2208      	movs	r2, #8
100643da:	720a      	strb	r2, [r1, #8]
100643dc:	71ce      	strb	r6, [r1, #7]
100643de:	7188      	strb	r0, [r1, #6]
100643e0:	728c      	strb	r4, [r1, #10]
100643e2:	20ff      	movs	r0, #255	@ 0xff
100643e4:	7148      	strb	r0, [r1, #5]
100643e6:	2082      	movs	r0, #130	@ 0x82
100643e8:	7108      	strb	r0, [r1, #4]
100643ea:	0a20      	lsrs	r0, r4, #8
100643ec:	72c8      	strb	r0, [r1, #11]
100643ee:	2002      	movs	r0, #2
100643f0:	f7ec f823 	bl	1005043a <aci_event_fifo_push>
100643f4:	e048      	b.n	10064488 <smp_fsm_process_actions_wrt_state_tsk+0x184>
100643f6:	4620      	mov	r0, r4
100643f8:	f006 fd80 	bl	1006aefc <smp_pp3_keys_distribution_send>
100643fc:	e044      	b.n	10064488 <smp_fsm_process_actions_wrt_state_tsk+0x184>
100643fe:	7de0      	ldrb	r0, [r4, #23]
10064400:	2601      	movs	r6, #1
10064402:	0700      	lsls	r0, r0, #28
10064404:	4630      	mov	r0, r6
10064406:	d513      	bpl.n	10064430 <smp_fsm_process_actions_wrt_state_tsk+0x12c>
10064408:	4620      	mov	r0, r4
1006440a:	f7ff ff78 	bl	100642fe <smp_scp_public_key_prepare_and_exchange_ucfg_weak>
1006440e:	2800      	cmp	r0, #0
10064410:	d006      	beq.n	10064420 <smp_fsm_process_actions_wrt_state_tsk+0x11c>
10064412:	2812      	cmp	r0, #18
10064414:	d004      	beq.n	10064420 <smp_fsm_process_actions_wrt_state_tsk+0x11c>
10064416:	200e      	movs	r0, #14
10064418:	f000 ff0a 	bl	10065230 <tsk_notify_idx>
1006441c:	f7de fa5b 	bl	100428d6 <BLE_STACK_ProcessRequest>
10064420:	7de0      	ldrb	r0, [r4, #23]
10064422:	2160      	movs	r1, #96	@ 0x60
10064424:	4001      	ands	r1, r0
10064426:	3960      	subs	r1, #96	@ 0x60
10064428:	4248      	negs	r0, r1
1006442a:	4148      	adcs	r0, r1
1006442c:	4b22      	ldr	r3, [pc, #136]	@ (100644b8 <__arm_cp.0_0>)
1006442e:	4a23      	ldr	r2, [pc, #140]	@ (100644bc <__arm_cp.0_1>)
10064430:	7ce1      	ldrb	r1, [r4, #19]
10064432:	2902      	cmp	r1, #2
10064434:	d104      	bne.n	10064440 <smp_fsm_process_actions_wrt_state_tsk+0x13c>
10064436:	7be1      	ldrb	r1, [r4, #15]
10064438:	2210      	movs	r2, #16
1006443a:	400a      	ands	r2, r1
1006443c:	0916      	lsrs	r6, r2, #4
1006443e:	4a1f      	ldr	r2, [pc, #124]	@ (100644bc <__arm_cp.0_1>)
10064440:	2800      	cmp	r0, #0
10064442:	d023      	beq.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
10064444:	2e00      	cmp	r6, #0
10064446:	d021      	beq.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
10064448:	2060      	movs	r0, #96	@ 0x60
1006444a:	5c20      	ldrb	r0, [r4, r0]
1006444c:	07c0      	lsls	r0, r0, #31
1006444e:	d024      	beq.n	1006449a <smp_fsm_process_actions_wrt_state_tsk+0x196>
10064450:	204b      	movs	r0, #75	@ 0x4b
10064452:	e023      	b.n	1006449c <smp_fsm_process_actions_wrt_state_tsk+0x198>
10064454:	4620      	mov	r0, r4
10064456:	f000 f85f 	bl	10064518 <smp_fsm_execute_actions_scp_phase2as2_ucfg_weak>
1006445a:	e015      	b.n	10064488 <smp_fsm_process_actions_wrt_state_tsk+0x184>
1006445c:	2060      	movs	r0, #96	@ 0x60
1006445e:	5620      	ldrsb	r0, [r4, r0]
10064460:	2800      	cmp	r0, #0
10064462:	d513      	bpl.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
10064464:	2100      	movs	r1, #0
10064466:	2270      	movs	r2, #112	@ 0x70
10064468:	4620      	mov	r0, r4
1006446a:	f7e0 faab 	bl	100449c4 <BLEPLAT_MemSet>
1006446e:	e00b      	b.n	10064488 <smp_fsm_process_actions_wrt_state_tsk+0x184>
10064470:	4620      	mov	r0, r4
10064472:	f006 fbad 	bl	1006abd0 <smp_pp2_per_auth_stage_1_start>
10064476:	e007      	b.n	10064488 <smp_fsm_process_actions_wrt_state_tsk+0x184>
10064478:	2100      	movs	r1, #0
1006447a:	4620      	mov	r0, r4
1006447c:	f006 fcf4 	bl	1006ae68 <smp_pp3_keys_distribution_start>
10064480:	e002      	b.n	10064488 <smp_fsm_process_actions_wrt_state_tsk+0x184>
10064482:	4620      	mov	r0, r4
10064484:	f006 f81e 	bl	1006a4c4 <smp_pp3_pairing_completed_successful>
10064488:	4a0c      	ldr	r2, [pc, #48]	@ (100644bc <__arm_cp.0_1>)
1006448a:	4b0b      	ldr	r3, [pc, #44]	@ (100644b8 <__arm_cp.0_0>)
1006448c:	3770      	adds	r7, #112	@ 0x70
1006448e:	1c6d      	adds	r5, r5, #1
10064490:	e73d      	b.n	1006430e <smp_fsm_process_actions_wrt_state_tsk+0xa>
10064492:	4620      	mov	r0, r4
10064494:	f7ea fd5c 	bl	1004ef50 <smp_fsm_execute_actions_excerpt_cei_ucfg>
10064498:	e00a      	b.n	100644b0 <smp_fsm_process_actions_wrt_state_tsk+0x1ac>
1006449a:	205b      	movs	r0, #91	@ 0x5b
1006449c:	43c0      	mvns	r0, r0
1006449e:	72a0      	strb	r0, [r4, #10]
100644a0:	200e      	movs	r0, #14
100644a2:	f000 fec5 	bl	10065230 <tsk_notify_idx>
100644a6:	f7de fa16 	bl	100428d6 <BLE_STACK_ProcessRequest>
100644aa:	e001      	b.n	100644b0 <smp_fsm_process_actions_wrt_state_tsk+0x1ac>
100644ac:	20f1      	movs	r0, #241	@ 0xf1
100644ae:	72a0      	strb	r0, [r4, #10]
100644b0:	4b01      	ldr	r3, [pc, #4]	@ (100644b8 <__arm_cp.0_0>)
100644b2:	4a02      	ldr	r2, [pc, #8]	@ (100644bc <__arm_cp.0_1>)
100644b4:	e7ea      	b.n	1006448c <smp_fsm_process_actions_wrt_state_tsk+0x188>
100644b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100644b8 <__arm_cp.0_0>:
100644b8:	2000083c 	.word	0x2000083c

100644bc <__arm_cp.0_1>:
100644bc:	200008e0 	.word	0x200008e0

100644c0 <__arm_cp.0_2>:
100644c0:	20000894 	.word	0x20000894

100644c4 <__arm_cp.0_3>:
100644c4:	20000840 	.word	0x20000840

100644c8 <smp_fsm_execute_actions_excerpt_cei>:
100644c8:	b580      	push	{r7, lr}
100644ca:	4602      	mov	r2, r0
100644cc:	2060      	movs	r0, #96	@ 0x60
100644ce:	5c10      	ldrb	r0, [r2, r0]
100644d0:	07c0      	lsls	r0, r0, #31
100644d2:	d110      	bne.n	100644f6 <smp_fsm_execute_actions_excerpt_cei+0x2e>
100644d4:	7a90      	ldrb	r0, [r2, #10]
100644d6:	28af      	cmp	r0, #175	@ 0xaf
100644d8:	d009      	beq.n	100644ee <smp_fsm_execute_actions_excerpt_cei+0x26>
100644da:	28a9      	cmp	r0, #169	@ 0xa9
100644dc:	d00c      	beq.n	100644f8 <smp_fsm_execute_actions_excerpt_cei+0x30>
100644de:	28ac      	cmp	r0, #172	@ 0xac
100644e0:	d016      	beq.n	10064510 <smp_fsm_execute_actions_excerpt_cei+0x48>
100644e2:	28a4      	cmp	r0, #164	@ 0xa4
100644e4:	d107      	bne.n	100644f6 <smp_fsm_execute_actions_excerpt_cei+0x2e>
100644e6:	4610      	mov	r0, r2
100644e8:	f006 f9c4 	bl	1006a874 <smp_pp2_cei_auth_stage_1_start>
100644ec:	bd80      	pop	{r7, pc}
100644ee:	2101      	movs	r1, #1
100644f0:	4610      	mov	r0, r2
100644f2:	f006 fcb9 	bl	1006ae68 <smp_pp3_keys_distribution_start>
100644f6:	bd80      	pop	{r7, pc}
100644f8:	2000      	movs	r0, #0
100644fa:	4611      	mov	r1, r2
100644fc:	f006 f9cc 	bl	1006a898 <smp_pp2_cei_rx_process_pairing_confirm>
10064500:	2800      	cmp	r0, #0
10064502:	d0f8      	beq.n	100644f6 <smp_fsm_execute_actions_excerpt_cei+0x2e>
10064504:	200e      	movs	r0, #14
10064506:	f000 fe93 	bl	10065230 <tsk_notify_idx>
1006450a:	f7de f9e4 	bl	100428d6 <BLE_STACK_ProcessRequest>
1006450e:	bd80      	pop	{r7, pc}
10064510:	4610      	mov	r0, r2
10064512:	f7ea fcf4 	bl	1004eefe <smp_start_encryption_ucfg>
10064516:	bd80      	pop	{r7, pc}

10064518 <smp_fsm_execute_actions_scp_phase2as2_ucfg_weak>:
10064518:	4770      	bx	lr
	...

1006451c <smp_rxp_process_rxed_packets_tsk>:
1006451c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1006451e:	4f60      	ldr	r7, [pc, #384]	@ (100646a0 <__arm_cp.0_0>)
10064520:	4c60      	ldr	r4, [pc, #384]	@ (100646a4 <__arm_cp.0_1>)
10064522:	6838      	ldr	r0, [r7, #0]
10064524:	6801      	ldr	r1, [r0, #0]
10064526:	2900      	cmp	r1, #0
10064528:	d100      	bne.n	1006452c <smp_rxp_process_rxed_packets_tsk+0x10>
1006452a:	e0b8      	b.n	1006469e <smp_rxp_process_rxed_packets_tsk+0x182>
1006452c:	f001 f89c 	bl	10065668 <ACL_list_remove_head>
10064530:	4605      	mov	r5, r0
10064532:	8800      	ldrh	r0, [r0, #0]
10064534:	f7ff fe94 	bl	10064260 <smp_get_remote_device_list_item>
10064538:	2800      	cmp	r0, #0
1006453a:	d0f2      	beq.n	10064522 <smp_rxp_process_rxed_packets_tsk+0x6>
1006453c:	4606      	mov	r6, r0
1006453e:	6838      	ldr	r0, [r7, #0]
10064540:	21b0      	movs	r1, #176	@ 0xb0
10064542:	5c40      	ldrb	r0, [r0, r1]
10064544:	2800      	cmp	r0, #0
10064546:	d00e      	beq.n	10064566 <smp_rxp_process_rxed_packets_tsk+0x4a>
10064548:	2108      	movs	r1, #8
1006454a:	2200      	movs	r2, #0
1006454c:	2301      	movs	r3, #1
1006454e:	4630      	mov	r0, r6
10064550:	f006 f870 	bl	1006a634 <smp_pp3_pairing_failed_send>
10064554:	2800      	cmp	r0, #0
10064556:	d00e      	beq.n	10064576 <smp_rxp_process_rxed_packets_tsk+0x5a>
10064558:	28fd      	cmp	r0, #253	@ 0xfd
1006455a:	d000      	beq.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
1006455c:	e096      	b.n	1006468c <smp_rxp_process_rxed_packets_tsk+0x170>
1006455e:	4628      	mov	r0, r5
10064560:	f7eb fd1c 	bl	1004ff9c <ACL_pkt_release>
10064564:	e7dd      	b.n	10064522 <smp_rxp_process_rxed_packets_tsk+0x6>
10064566:	6868      	ldr	r0, [r5, #4]
10064568:	7a00      	ldrb	r0, [r0, #8]
1006456a:	2805      	cmp	r0, #5
1006456c:	d10c      	bne.n	10064588 <smp_rxp_process_rxed_packets_tsk+0x6c>
1006456e:	4628      	mov	r0, r5
10064570:	4631      	mov	r1, r6
10064572:	f006 f833 	bl	1006a5dc <smp_pp3_pairing_failed_receive>
10064576:	4628      	mov	r0, r5
10064578:	f7eb fd10 	bl	1004ff9c <ACL_pkt_release>
1006457c:	200e      	movs	r0, #14
1006457e:	f000 fe57 	bl	10065230 <tsk_notify_idx>
10064582:	f7de f9a8 	bl	100428d6 <BLE_STACK_ProcessRequest>
10064586:	e7cc      	b.n	10064522 <smp_rxp_process_rxed_packets_tsk+0x6>
10064588:	7ab1      	ldrb	r1, [r6, #10]
1006458a:	29f1      	cmp	r1, #241	@ 0xf1
1006458c:	d001      	beq.n	10064592 <smp_rxp_process_rxed_packets_tsk+0x76>
1006458e:	2900      	cmp	r1, #0
10064590:	d10a      	bne.n	100645a8 <smp_rxp_process_rxed_packets_tsk+0x8c>
10064592:	2160      	movs	r1, #96	@ 0x60
10064594:	5c72      	ldrb	r2, [r6, r1]
10064596:	2101      	movs	r1, #1
10064598:	4011      	ands	r1, r2
1006459a:	d101      	bne.n	100645a0 <smp_rxp_process_rxed_packets_tsk+0x84>
1006459c:	280b      	cmp	r0, #11
1006459e:	d1de      	bne.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
100645a0:	2900      	cmp	r1, #0
100645a2:	d001      	beq.n	100645a8 <smp_rxp_process_rxed_packets_tsk+0x8c>
100645a4:	2801      	cmp	r0, #1
100645a6:	d1da      	bne.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
100645a8:	7df0      	ldrb	r0, [r6, #23]
100645aa:	0700      	lsls	r0, r0, #28
100645ac:	d506      	bpl.n	100645bc <smp_rxp_process_rxed_packets_tsk+0xa0>
100645ae:	9602      	str	r6, [sp, #8]
100645b0:	9501      	str	r5, [sp, #4]
100645b2:	a801      	add	r0, sp, #4
100645b4:	f000 f8cc 	bl	10064750 <smp_rxp_process_wrt_current_fsm_excerpt_scp_ucfg_weak>
100645b8:	28fc      	cmp	r0, #252	@ 0xfc
100645ba:	d1cb      	bne.n	10064554 <smp_rxp_process_rxed_packets_tsk+0x38>
100645bc:	2060      	movs	r0, #96	@ 0x60
100645be:	5c30      	ldrb	r0, [r6, r0]
100645c0:	07c0      	lsls	r0, r0, #31
100645c2:	d107      	bne.n	100645d4 <smp_rxp_process_rxed_packets_tsk+0xb8>
100645c4:	9602      	str	r6, [sp, #8]
100645c6:	9501      	str	r5, [sp, #4]
100645c8:	a801      	add	r0, sp, #4
100645ca:	f7ea fcdc 	bl	1004ef86 <smp_rxp_process_wrt_current_fsm_excerpt_cei_ucfg>
100645ce:	28fc      	cmp	r0, #252	@ 0xfc
100645d0:	d1c0      	bne.n	10064554 <smp_rxp_process_rxed_packets_tsk+0x38>
100645d2:	e022      	b.n	1006461a <smp_rxp_process_rxed_packets_tsk+0xfe>
100645d4:	6868      	ldr	r0, [r5, #4]
100645d6:	7a00      	ldrb	r0, [r0, #8]
100645d8:	2804      	cmp	r0, #4
100645da:	d031      	beq.n	10064640 <smp_rxp_process_rxed_packets_tsk+0x124>
100645dc:	2803      	cmp	r0, #3
100645de:	d037      	beq.n	10064650 <smp_rxp_process_rxed_packets_tsk+0x134>
100645e0:	2801      	cmp	r0, #1
100645e2:	d11a      	bne.n	1006461a <smp_rxp_process_rxed_packets_tsk+0xfe>
100645e4:	7ab0      	ldrb	r0, [r6, #10]
100645e6:	2800      	cmp	r0, #0
100645e8:	d003      	beq.n	100645f2 <smp_rxp_process_rxed_packets_tsk+0xd6>
100645ea:	28fb      	cmp	r0, #251	@ 0xfb
100645ec:	d047      	beq.n	1006467e <smp_rxp_process_rxed_packets_tsk+0x162>
100645ee:	28f1      	cmp	r0, #241	@ 0xf1
100645f0:	d1b5      	bne.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
100645f2:	8930      	ldrh	r0, [r6, #8]
100645f4:	f7ff fe14 	bl	10064220 <smp_get_remote_device_list_index>
100645f8:	4602      	mov	r2, r0
100645fa:	2000      	movs	r0, #0
100645fc:	4601      	mov	r1, r0
100645fe:	4623      	mov	r3, r4
10064600:	f000 f8c4 	bl	1006478c <smp_timer_reset>
10064604:	7e30      	ldrb	r0, [r6, #24]
10064606:	0781      	lsls	r1, r0, #30
10064608:	d502      	bpl.n	10064610 <smp_rxp_process_rxed_packets_tsk+0xf4>
1006460a:	2103      	movs	r1, #3
1006460c:	4308      	orrs	r0, r1
1006460e:	7630      	strb	r0, [r6, #24]
10064610:	4628      	mov	r0, r5
10064612:	4631      	mov	r1, r6
10064614:	f006 f824 	bl	1006a660 <smp_pp1_per_rxp_pairing_request>
10064618:	e7d9      	b.n	100645ce <smp_rxp_process_rxed_packets_tsk+0xb2>
1006461a:	4628      	mov	r0, r5
1006461c:	4631      	mov	r1, r6
1006461e:	f006 fd2f 	bl	1006b080 <smp_pp3_keys_distribution_receive>
10064622:	28fc      	cmp	r0, #252	@ 0xfc
10064624:	d003      	beq.n	1006462e <smp_rxp_process_rxed_packets_tsk+0x112>
10064626:	2886      	cmp	r0, #134	@ 0x86
10064628:	d099      	beq.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
1006462a:	2884      	cmp	r0, #132	@ 0x84
1006462c:	d192      	bne.n	10064554 <smp_rxp_process_rxed_packets_tsk+0x38>
1006462e:	7df0      	ldrb	r0, [r6, #23]
10064630:	0700      	lsls	r0, r0, #28
10064632:	d594      	bpl.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
10064634:	9602      	str	r6, [sp, #8]
10064636:	9501      	str	r5, [sp, #4]
10064638:	a801      	add	r0, sp, #4
1006463a:	f000 f887 	bl	1006474c <smp_rxp_process_exception_cases_excerpt_scp_ucfg_weak>
1006463e:	e789      	b.n	10064554 <smp_rxp_process_rxed_packets_tsk+0x38>
10064640:	7ab0      	ldrb	r0, [r6, #10]
10064642:	28b6      	cmp	r0, #182	@ 0xb6
10064644:	d18b      	bne.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
10064646:	4628      	mov	r0, r5
10064648:	4631      	mov	r1, r6
1006464a:	f006 fb73 	bl	1006ad34 <smp_pp2_per_rx_process_pairing_random>
1006464e:	e7be      	b.n	100645ce <smp_rxp_process_rxed_packets_tsk+0xb2>
10064650:	7ab0      	ldrb	r0, [r6, #10]
10064652:	28b2      	cmp	r0, #178	@ 0xb2
10064654:	d009      	beq.n	1006466a <smp_rxp_process_rxed_packets_tsk+0x14e>
10064656:	28b4      	cmp	r0, #180	@ 0xb4
10064658:	d007      	beq.n	1006466a <smp_rxp_process_rxed_packets_tsk+0x14e>
1006465a:	28b5      	cmp	r0, #181	@ 0xb5
1006465c:	d000      	beq.n	10064660 <smp_rxp_process_rxed_packets_tsk+0x144>
1006465e:	e77e      	b.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
10064660:	4628      	mov	r0, r5
10064662:	4631      	mov	r1, r6
10064664:	f006 fa76 	bl	1006ab54 <smp_pp2_per_rx_process_pairing_confirm>
10064668:	e7b1      	b.n	100645ce <smp_rxp_process_rxed_packets_tsk+0xb2>
1006466a:	7cf0      	ldrb	r0, [r6, #19]
1006466c:	2802      	cmp	r0, #2
1006466e:	d000      	beq.n	10064672 <smp_rxp_process_rxed_packets_tsk+0x156>
10064670:	e775      	b.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
10064672:	6838      	ldr	r0, [r7, #0]
10064674:	2140      	movs	r1, #64	@ 0x40
10064676:	5c41      	ldrb	r1, [r0, r1]
10064678:	2903      	cmp	r1, #3
1006467a:	d108      	bne.n	1006468e <smp_rxp_process_rxed_packets_tsk+0x172>
1006467c:	e76f      	b.n	1006455e <smp_rxp_process_rxed_packets_tsk+0x42>
1006467e:	2109      	movs	r1, #9
10064680:	2200      	movs	r2, #0
10064682:	2301      	movs	r3, #1
10064684:	4630      	mov	r0, r6
10064686:	f005 ffd5 	bl	1006a634 <smp_pp3_pairing_failed_send>
1006468a:	e7a0      	b.n	100645ce <smp_rxp_process_rxed_packets_tsk+0xb2>
1006468c:	6838      	ldr	r0, [r7, #0]
1006468e:	4629      	mov	r1, r5
10064690:	f000 ffcb 	bl	1006562a <ACL_list_insert_head>
10064694:	200f      	movs	r0, #15
10064696:	f000 fdcb 	bl	10065230 <tsk_notify_idx>
1006469a:	f7de f91c 	bl	100428d6 <BLE_STACK_ProcessRequest>
1006469e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100646a0 <__arm_cp.0_0>:
100646a0:	200008e0 	.word	0x200008e0

100646a4 <__arm_cp.0_1>:
100646a4:	00007530 	.word	0x00007530

100646a8 <smp_rxp_process_wrt_current_fsm_excerpt_cei>:
100646a8:	b510      	push	{r4, lr}
100646aa:	4601      	mov	r1, r0
100646ac:	6800      	ldr	r0, [r0, #0]
100646ae:	6842      	ldr	r2, [r0, #4]
100646b0:	7a12      	ldrb	r2, [r2, #8]
100646b2:	1e93      	subs	r3, r2, #2
100646b4:	22fc      	movs	r2, #252	@ 0xfc
100646b6:	2b09      	cmp	r3, #9
100646b8:	d82b      	bhi.n	10064712 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x6a>
100646ba:	6849      	ldr	r1, [r1, #4]
100646bc:	447b      	add	r3, pc
100646be:	791b      	ldrb	r3, [r3, #4]
100646c0:	005b      	lsls	r3, r3, #1
100646c2:	449f      	add	pc, r3
100646c4:	26140a04 	.word	0x26140a04
100646c8:	26262626 	.word	0x26262626
100646cc:	1a26      	.short	0x1a26
100646ce:	7a8a      	ldrb	r2, [r1, #10]
100646d0:	2aa1      	cmp	r2, #161	@ 0xa1
100646d2:	d11b      	bne.n	1006470c <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x64>
100646d4:	f7ff fb86 	bl	10063de4 <smp_pp1_cei_rxp_pairing_response>
100646d8:	e016      	b.n	10064708 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x60>
100646da:	7a8a      	ldrb	r2, [r1, #10]
100646dc:	2aa2      	cmp	r2, #162	@ 0xa2
100646de:	d017      	beq.n	10064710 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x68>
100646e0:	2aa4      	cmp	r2, #164	@ 0xa4
100646e2:	d015      	beq.n	10064710 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x68>
100646e4:	2aa5      	cmp	r2, #165	@ 0xa5
100646e6:	d111      	bne.n	1006470c <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x64>
100646e8:	f006 f8d6 	bl	1006a898 <smp_pp2_cei_rx_process_pairing_confirm>
100646ec:	e00c      	b.n	10064708 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x60>
100646ee:	7a8a      	ldrb	r2, [r1, #10]
100646f0:	2aa6      	cmp	r2, #166	@ 0xa6
100646f2:	d10b      	bne.n	1006470c <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x64>
100646f4:	f006 f912 	bl	1006a91c <smp_pp2_cei_rx_process_pairing_random>
100646f8:	e006      	b.n	10064708 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x60>
100646fa:	7a8a      	ldrb	r2, [r1, #10]
100646fc:	2af1      	cmp	r2, #241	@ 0xf1
100646fe:	d001      	beq.n	10064704 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x5c>
10064700:	2a00      	cmp	r2, #0
10064702:	d103      	bne.n	1006470c <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x64>
10064704:	f7ff fb12 	bl	10063d2c <smp_pp1_cei_rxp_security_request>
10064708:	4602      	mov	r2, r0
1006470a:	e002      	b.n	10064712 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x6a>
1006470c:	22fd      	movs	r2, #253	@ 0xfd
1006470e:	e000      	b.n	10064712 <smp_rxp_process_wrt_current_fsm_excerpt_cei+0x6a>
10064710:	22ff      	movs	r2, #255	@ 0xff
10064712:	4610      	mov	r0, r2
10064714:	bd10      	pop	{r4, pc}
	...

10064718 <smp_rxp_flush_packet_queues>:
10064718:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006471a:	4d0a      	ldr	r5, [pc, #40]	@ (10064744 <__arm_cp.4_0>)
1006471c:	4005      	ands	r5, r0
1006471e:	4e0a      	ldr	r6, [pc, #40]	@ (10064748 <__arm_cp.4_1>)
10064720:	6830      	ldr	r0, [r6, #0]
10064722:	6807      	ldr	r7, [r0, #0]
10064724:	2f00      	cmp	r7, #0
10064726:	d00c      	beq.n	10064742 <smp_rxp_flush_packet_queues+0x2a>
10064728:	463c      	mov	r4, r7
1006472a:	69ff      	ldr	r7, [r7, #28]
1006472c:	8820      	ldrh	r0, [r4, #0]
1006472e:	42a8      	cmp	r0, r5
10064730:	d1f8      	bne.n	10064724 <smp_rxp_flush_packet_queues+0xc>
10064732:	6830      	ldr	r0, [r6, #0]
10064734:	4621      	mov	r1, r4
10064736:	f000 ff81 	bl	1006563c <ACL_list_remove>
1006473a:	4620      	mov	r0, r4
1006473c:	f7eb fc2e 	bl	1004ff9c <ACL_pkt_release>
10064740:	e7f0      	b.n	10064724 <smp_rxp_flush_packet_queues+0xc>
10064742:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10064744 <__arm_cp.4_0>:
10064744:	00000fff 	.word	0x00000fff

10064748 <__arm_cp.4_1>:
10064748:	200008e0 	.word	0x200008e0

1006474c <smp_rxp_process_exception_cases_excerpt_scp_ucfg_weak>:
1006474c:	201f      	movs	r0, #31
1006474e:	4770      	bx	lr

10064750 <smp_rxp_process_wrt_current_fsm_excerpt_scp_ucfg_weak>:
10064750:	201f      	movs	r0, #31
10064752:	4770      	bx	lr

10064754 <smp_timer_init>:
10064754:	b580      	push	{r7, lr}
10064756:	4806      	ldr	r0, [pc, #24]	@ (10064770 <__arm_cp.0_0>)
10064758:	7ac1      	ldrb	r1, [r0, #11]
1006475a:	4806      	ldr	r0, [pc, #24]	@ (10064774 <__arm_cp.0_1>)
1006475c:	6800      	ldr	r0, [r0, #0]
1006475e:	3008      	adds	r0, #8
10064760:	1cc9      	adds	r1, r1, #3
10064762:	b2c9      	uxtb	r1, r1
10064764:	4a04      	ldr	r2, [pc, #16]	@ (10064778 <__arm_cp.0_2>)
10064766:	2307      	movs	r3, #7
10064768:	f000 fdc0 	bl	100652ec <CST_init>
1006476c:	bd80      	pop	{r7, pc}
1006476e:	46c0      	nop			@ (mov r8, r8)

10064770 <__arm_cp.0_0>:
10064770:	200008a8 	.word	0x200008a8

10064774 <__arm_cp.0_1>:
10064774:	200008e0 	.word	0x200008e0

10064778 <__arm_cp.0_2>:
10064778:	1006477d 	.word	0x1006477d

1006477c <smp_timers_cb_wrapper>:
1006477c:	b580      	push	{r7, lr}
1006477e:	6940      	ldr	r0, [r0, #20]
10064780:	4901      	ldr	r1, [pc, #4]	@ (10064788 <__arm_cp.1_0>)
10064782:	f000 fe8c 	bl	1006549e <cst_sharedCallback>
10064786:	bd80      	pop	{r7, pc}

10064788 <__arm_cp.1_0>:
10064788:	10064825 	.word	0x10064825

1006478c <smp_timer_reset>:
1006478c:	b510      	push	{r4, lr}
1006478e:	2900      	cmp	r1, #0
10064790:	d006      	beq.n	100647a0 <smp_timer_reset+0x14>
10064792:	2486      	movs	r4, #134	@ 0x86
10064794:	2901      	cmp	r1, #1
10064796:	d11b      	bne.n	100647d0 <smp_timer_reset+0x44>
10064798:	2a02      	cmp	r2, #2
1006479a:	d819      	bhi.n	100647d0 <smp_timer_reset+0x44>
1006479c:	2100      	movs	r1, #0
1006479e:	e000      	b.n	100647a2 <smp_timer_reset+0x16>
100647a0:	2103      	movs	r1, #3
100647a2:	2801      	cmp	r0, #1
100647a4:	d00a      	beq.n	100647bc <smp_timer_reset+0x30>
100647a6:	2800      	cmp	r0, #0
100647a8:	d111      	bne.n	100647ce <smp_timer_reset+0x42>
100647aa:	1888      	adds	r0, r1, r2
100647ac:	b2c1      	uxtb	r1, r0
100647ae:	4809      	ldr	r0, [pc, #36]	@ (100647d4 <__arm_cp.2_0>)
100647b0:	6800      	ldr	r0, [r0, #0]
100647b2:	3008      	adds	r0, #8
100647b4:	2201      	movs	r2, #1
100647b6:	f000 fde4 	bl	10065382 <CST_start>
100647ba:	e006      	b.n	100647ca <smp_timer_reset+0x3e>
100647bc:	1888      	adds	r0, r1, r2
100647be:	b2c1      	uxtb	r1, r0
100647c0:	4804      	ldr	r0, [pc, #16]	@ (100647d4 <__arm_cp.2_0>)
100647c2:	6800      	ldr	r0, [r0, #0]
100647c4:	3008      	adds	r0, #8
100647c6:	f000 fda6 	bl	10065316 <CST_stop>
100647ca:	4604      	mov	r4, r0
100647cc:	e000      	b.n	100647d0 <smp_timer_reset+0x44>
100647ce:	2400      	movs	r4, #0
100647d0:	4620      	mov	r0, r4
100647d2:	bd10      	pop	{r4, pc}

100647d4 <__arm_cp.2_0>:
100647d4:	200008e0 	.word	0x200008e0

100647d8 <smp_timers_protocol_timeout_cb>:
100647d8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100647da:	4605      	mov	r5, r0
100647dc:	2070      	movs	r0, #112	@ 0x70
100647de:	9002      	str	r0, [sp, #8]
100647e0:	4345      	muls	r5, r0
100647e2:	480f      	ldr	r0, [pc, #60]	@ (10064820 <__arm_cp.3_0>)
100647e4:	6800      	ldr	r0, [r0, #0]
100647e6:	21a4      	movs	r1, #164	@ 0xa4
100647e8:	9101      	str	r1, [sp, #4]
100647ea:	5840      	ldr	r0, [r0, r1]
100647ec:	1947      	adds	r7, r0, r5
100647ee:	8939      	ldrh	r1, [r7, #8]
100647f0:	2002      	movs	r0, #2
100647f2:	2401      	movs	r4, #1
100647f4:	2600      	movs	r6, #0
100647f6:	4622      	mov	r2, r4
100647f8:	4633      	mov	r3, r6
100647fa:	f002 fab3 	bl	10066d64 <aci_gap_pairing_complete_event_push_noinline>
100647fe:	4638      	mov	r0, r7
10064800:	4621      	mov	r1, r4
10064802:	f005 fec7 	bl	1006a594 <smp_pp3_pairing_completed_update_stats>
10064806:	8938      	ldrh	r0, [r7, #8]
10064808:	f7ff ff86 	bl	10064718 <smp_rxp_flush_packet_queues>
1006480c:	4804      	ldr	r0, [pc, #16]	@ (10064820 <__arm_cp.3_0>)
1006480e:	6800      	ldr	r0, [r0, #0]
10064810:	9901      	ldr	r1, [sp, #4]
10064812:	5840      	ldr	r0, [r0, r1]
10064814:	1940      	adds	r0, r0, r5
10064816:	4631      	mov	r1, r6
10064818:	9a02      	ldr	r2, [sp, #8]
1006481a:	f7e0 f8d3 	bl	100449c4 <BLEPLAT_MemSet>
1006481e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

10064820 <__arm_cp.3_0>:
10064820:	200008e0 	.word	0x200008e0

10064824 <smp_timers_cb>:
10064824:	b580      	push	{r7, lr}
10064826:	2802      	cmp	r0, #2
10064828:	d802      	bhi.n	10064830 <smp_timers_cb+0xc>
1006482a:	f006 fd41 	bl	1006b2b0 <smp_cmn_repeated_attacks_timer_cb>
1006482e:	bd80      	pop	{r7, pc}
10064830:	4904      	ldr	r1, [pc, #16]	@ (10064844 <__arm_cp.4_0>)
10064832:	7ac9      	ldrb	r1, [r1, #11]
10064834:	1cc9      	adds	r1, r1, #3
10064836:	4281      	cmp	r1, r0
10064838:	d903      	bls.n	10064842 <smp_timers_cb+0x1e>
1006483a:	1ec0      	subs	r0, r0, #3
1006483c:	b2c0      	uxtb	r0, r0
1006483e:	f7ff ffcb 	bl	100647d8 <smp_timers_protocol_timeout_cb>
10064842:	bd80      	pop	{r7, pc}

10064844 <__arm_cp.4_0>:
10064844:	200008a8 	.word	0x200008a8

10064848 <smp_init>:
10064848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006484a:	2029      	movs	r0, #41	@ 0x29
1006484c:	00c1      	lsls	r1, r0, #3
1006484e:	2401      	movs	r4, #1
10064850:	4d20      	ldr	r5, [pc, #128]	@ (100648d4 <__arm_cp.0_0>)
10064852:	4620      	mov	r0, r4
10064854:	47a8      	blx	r5
10064856:	4e20      	ldr	r6, [pc, #128]	@ (100648d8 <__arm_cp.0_1>)
10064858:	6030      	str	r0, [r6, #0]
1006485a:	4f20      	ldr	r7, [pc, #128]	@ (100648dc <__arm_cp.0_2>)
1006485c:	7af8      	ldrb	r0, [r7, #11]
1006485e:	2170      	movs	r1, #112	@ 0x70
10064860:	47a8      	blx	r5
10064862:	6831      	ldr	r1, [r6, #0]
10064864:	22a4      	movs	r2, #164	@ 0xa4
10064866:	5088      	str	r0, [r1, r2]
10064868:	f006 fcaa 	bl	1006b1c0 <smp_cmn_rejectlist_init>
1006486c:	2128      	movs	r1, #40	@ 0x28
1006486e:	4620      	mov	r0, r4
10064870:	47a8      	blx	r5
10064872:	6831      	ldr	r1, [r6, #0]
10064874:	22ac      	movs	r2, #172	@ 0xac
10064876:	5088      	str	r0, [r1, r2]
10064878:	7af8      	ldrb	r0, [r7, #11]
1006487a:	1cc0      	adds	r0, r0, #3
1006487c:	b2c0      	uxtb	r0, r0
1006487e:	1c41      	adds	r1, r0, #1
10064880:	4d17      	ldr	r5, [pc, #92]	@ (100648e0 <__arm_cp.0_3>)
10064882:	4628      	mov	r0, r5
10064884:	4622      	mov	r2, r4
10064886:	f7fe fac3 	bl	10062e10 <csmem_mem_assign>
1006488a:	6831      	ldr	r1, [r6, #0]
1006488c:	6288      	str	r0, [r1, #40]	@ 0x28
1006488e:	7af8      	ldrb	r0, [r7, #11]
10064890:	1cc0      	adds	r0, r0, #3
10064892:	b2c1      	uxtb	r1, r0
10064894:	2202      	movs	r2, #2
10064896:	4628      	mov	r0, r5
10064898:	f7fe faba 	bl	10062e10 <csmem_mem_assign>
1006489c:	6831      	ldr	r1, [r6, #0]
1006489e:	62c8      	str	r0, [r1, #44]	@ 0x2c
100648a0:	4608      	mov	r0, r1
100648a2:	f000 feb7 	bl	10065614 <ACL_list_init>
100648a6:	f7ff ff55 	bl	10064754 <smp_timer_init>
100648aa:	6830      	ldr	r0, [r6, #0]
100648ac:	2142      	movs	r1, #66	@ 0x42
100648ae:	2500      	movs	r5, #0
100648b0:	5245      	strh	r5, [r0, r1]
100648b2:	2140      	movs	r1, #64	@ 0x40
100648b4:	2203      	movs	r2, #3
100648b6:	5442      	strb	r2, [r0, r1]
100648b8:	490a      	ldr	r1, [pc, #40]	@ (100648e4 <__arm_cp.0_4>)
100648ba:	6304      	str	r4, [r0, #48]	@ 0x30
100648bc:	6341      	str	r1, [r0, #52]	@ 0x34
100648be:	6385      	str	r5, [r0, #56]	@ 0x38
100648c0:	3044      	adds	r0, #68	@ 0x44
100648c2:	2110      	movs	r1, #16
100648c4:	462a      	mov	r2, r5
100648c6:	f000 ffba 	bl	1006583e <HAL_Generate_Random_Bytes_To>
100648ca:	4628      	mov	r0, r5
100648cc:	f7ff fd14 	bl	100642f8 <smp_scp_init_ucfg_weak>
100648d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100648d2:	46c0      	nop			@ (mov r8, r8)

100648d4 <__arm_cp.0_0>:
100648d4:	10062e35 	.word	0x10062e35

100648d8 <__arm_cp.0_1>:
100648d8:	200008e0 	.word	0x200008e0

100648dc <__arm_cp.0_2>:
100648dc:	200008a8 	.word	0x200008a8

100648e0 <__arm_cp.0_3>:
100648e0:	200008a4 	.word	0x200008a4

100648e4 <__arm_cp.0_4>:
100648e4:	07071007 	.word	0x07071007

100648e8 <smp_sap_aci_set_io_capabilities>:
100648e8:	b510      	push	{r4, lr}
100648ea:	4604      	mov	r4, r0
100648ec:	f000 f80c 	bl	10064908 <smp_check_is_any_pairing_ongoing>
100648f0:	2800      	cmp	r0, #0
100648f2:	d001      	beq.n	100648f8 <smp_sap_aci_set_io_capabilities+0x10>
100648f4:	200c      	movs	r0, #12
100648f6:	bd10      	pop	{r4, pc}
100648f8:	4802      	ldr	r0, [pc, #8]	@ (10064904 <__arm_cp.2_0>)
100648fa:	6800      	ldr	r0, [r0, #0]
100648fc:	2140      	movs	r1, #64	@ 0x40
100648fe:	5444      	strb	r4, [r0, r1]
10064900:	2000      	movs	r0, #0
10064902:	bd10      	pop	{r4, pc}

10064904 <__arm_cp.2_0>:
10064904:	200008e0 	.word	0x200008e0

10064908 <smp_check_is_any_pairing_ongoing>:
10064908:	b570      	push	{r4, r5, r6, lr}
1006490a:	4810      	ldr	r0, [pc, #64]	@ (1006494c <__arm_cp.3_0>)
1006490c:	6800      	ldr	r0, [r0, #0]
1006490e:	2134      	movs	r1, #52	@ 0x34
10064910:	5c40      	ldrb	r0, [r0, r1]
10064912:	2170      	movs	r1, #112	@ 0x70
10064914:	4341      	muls	r1, r0
10064916:	480e      	ldr	r0, [pc, #56]	@ (10064950 <__arm_cp.3_1>)
10064918:	6802      	ldr	r2, [r0, #0]
1006491a:	32a4      	adds	r2, #164	@ 0xa4
1006491c:	2000      	movs	r0, #0
1006491e:	4603      	mov	r3, r0
10064920:	4299      	cmp	r1, r3
10064922:	d012      	beq.n	1006494a <smp_check_is_any_pairing_ongoing+0x42>
10064924:	6814      	ldr	r4, [r2, #0]
10064926:	18e5      	adds	r5, r4, r3
10064928:	7aac      	ldrb	r4, [r5, #10]
1006492a:	2660      	movs	r6, #96	@ 0x60
1006492c:	5dad      	ldrb	r5, [r5, r6]
1006492e:	07ed      	lsls	r5, r5, #31
10064930:	d104      	bne.n	1006493c <smp_check_is_any_pairing_ongoing+0x34>
10064932:	3460      	adds	r4, #96	@ 0x60
10064934:	b2e4      	uxtb	r4, r4
10064936:	2c51      	cmp	r4, #81	@ 0x51
10064938:	d204      	bcs.n	10064944 <smp_check_is_any_pairing_ongoing+0x3c>
1006493a:	e005      	b.n	10064948 <smp_check_is_any_pairing_ongoing+0x40>
1006493c:	3450      	adds	r4, #80	@ 0x50
1006493e:	b2e4      	uxtb	r4, r4
10064940:	2c41      	cmp	r4, #65	@ 0x41
10064942:	d301      	bcc.n	10064948 <smp_check_is_any_pairing_ongoing+0x40>
10064944:	3370      	adds	r3, #112	@ 0x70
10064946:	e7eb      	b.n	10064920 <smp_check_is_any_pairing_ongoing+0x18>
10064948:	2001      	movs	r0, #1
1006494a:	bd70      	pop	{r4, r5, r6, pc}

1006494c <__arm_cp.3_0>:
1006494c:	2000083c 	.word	0x2000083c

10064950 <__arm_cp.3_1>:
10064950:	200008e0 	.word	0x200008e0

10064954 <smp_sap_aci_set_authentication_req>:
10064954:	b510      	push	{r4, lr}
10064956:	4604      	mov	r4, r0
10064958:	f7ff ffd6 	bl	10064908 <smp_check_is_any_pairing_ongoing>
1006495c:	7861      	ldrb	r1, [r4, #1]
1006495e:	2901      	cmp	r1, #1
10064960:	d103      	bne.n	1006496a <smp_sap_aci_set_authentication_req+0x16>
10064962:	2800      	cmp	r0, #0
10064964:	d105      	bne.n	10064972 <smp_sap_aci_set_authentication_req+0x1e>
10064966:	4602      	mov	r2, r0
10064968:	e004      	b.n	10064974 <smp_sap_aci_set_authentication_req+0x20>
1006496a:	2800      	cmp	r0, #0
1006496c:	d00f      	beq.n	1006498e <smp_sap_aci_set_authentication_req+0x3a>
1006496e:	220c      	movs	r2, #12
10064970:	e016      	b.n	100649a0 <smp_sap_aci_set_authentication_req+0x4c>
10064972:	220c      	movs	r2, #12
10064974:	490b      	ldr	r1, [pc, #44]	@ (100649a4 <__arm_cp.4_0>)
10064976:	6809      	ldr	r1, [r1, #0]
10064978:	2340      	movs	r3, #64	@ 0x40
1006497a:	5ccb      	ldrb	r3, [r1, r3]
1006497c:	2b03      	cmp	r3, #3
1006497e:	d101      	bne.n	10064984 <smp_sap_aci_set_authentication_req+0x30>
10064980:	226e      	movs	r2, #110	@ 0x6e
10064982:	43d2      	mvns	r2, r2
10064984:	2b03      	cmp	r3, #3
10064986:	d00b      	beq.n	100649a0 <smp_sap_aci_set_authentication_req+0x4c>
10064988:	2800      	cmp	r0, #0
1006498a:	d002      	beq.n	10064992 <smp_sap_aci_set_authentication_req+0x3e>
1006498c:	e008      	b.n	100649a0 <smp_sap_aci_set_authentication_req+0x4c>
1006498e:	4805      	ldr	r0, [pc, #20]	@ (100649a4 <__arm_cp.4_0>)
10064990:	6801      	ldr	r1, [r0, #0]
10064992:	3130      	adds	r1, #48	@ 0x30
10064994:	2210      	movs	r2, #16
10064996:	4608      	mov	r0, r1
10064998:	4621      	mov	r1, r4
1006499a:	f7e0 f803 	bl	100449a4 <BLEPLAT_MemCpy>
1006499e:	2200      	movs	r2, #0
100649a0:	b2d0      	uxtb	r0, r2
100649a2:	bd10      	pop	{r4, pc}

100649a4 <__arm_cp.4_0>:
100649a4:	200008e0 	.word	0x200008e0

100649a8 <smp_sap_aci_passkey_response>:
100649a8:	b510      	push	{r4, lr}
100649aa:	460c      	mov	r4, r1
100649ac:	f7ff fc58 	bl	10064260 <smp_get_remote_device_list_item>
100649b0:	2800      	cmp	r0, #0
100649b2:	d010      	beq.n	100649d6 <smp_sap_aci_passkey_response+0x2e>
100649b4:	7cc1      	ldrb	r1, [r0, #19]
100649b6:	2902      	cmp	r1, #2
100649b8:	d10f      	bne.n	100649da <smp_sap_aci_passkey_response+0x32>
100649ba:	4909      	ldr	r1, [pc, #36]	@ (100649e0 <__arm_cp.5_0>)
100649bc:	6809      	ldr	r1, [r1, #0]
100649be:	638c      	str	r4, [r1, #56]	@ 0x38
100649c0:	7bc1      	ldrb	r1, [r0, #15]
100649c2:	2210      	movs	r2, #16
100649c4:	430a      	orrs	r2, r1
100649c6:	73c2      	strb	r2, [r0, #15]
100649c8:	200e      	movs	r0, #14
100649ca:	f000 fc31 	bl	10065230 <tsk_notify_idx>
100649ce:	f7dd ff82 	bl	100428d6 <BLE_STACK_ProcessRequest>
100649d2:	2000      	movs	r0, #0
100649d4:	bd10      	pop	{r4, pc}
100649d6:	2002      	movs	r0, #2
100649d8:	bd10      	pop	{r4, pc}
100649da:	200c      	movs	r0, #12
100649dc:	bd10      	pop	{r4, pc}
100649de:	46c0      	nop			@ (mov r8, r8)

100649e0 <__arm_cp.5_0>:
100649e0:	200008e0 	.word	0x200008e0

100649e4 <smp_sap_hci_le_connection_complete_evt_hndl>:
100649e4:	b5f0      	push	{r4, r5, r6, r7, lr}
100649e6:	b089      	sub	sp, #36	@ 0x24
100649e8:	9304      	str	r3, [sp, #16]
100649ea:	4615      	mov	r5, r2
100649ec:	9105      	str	r1, [sp, #20]
100649ee:	4607      	mov	r7, r0
100649f0:	ae06      	add	r6, sp, #24
100649f2:	ac08      	add	r4, sp, #32
100649f4:	4630      	mov	r0, r6
100649f6:	4621      	mov	r1, r4
100649f8:	f7ed faac 	bl	10051f54 <GAP_get_current_address>
100649fc:	7822      	ldrb	r2, [r4, #0]
100649fe:	2000      	movs	r0, #0
10064a00:	9500      	str	r5, [sp, #0]
10064a02:	9904      	ldr	r1, [sp, #16]
10064a04:	9101      	str	r1, [sp, #4]
10064a06:	9002      	str	r0, [sp, #8]
10064a08:	4638      	mov	r0, r7
10064a0a:	9905      	ldr	r1, [sp, #20]
10064a0c:	4633      	mov	r3, r6
10064a0e:	f000 f803 	bl	10064a18 <smp_connection_complete_handler>
10064a12:	b009      	add	sp, #36	@ 0x24
10064a14:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10064a18 <smp_connection_complete_handler>:
10064a18:	b5f0      	push	{r4, r5, r6, r7, lr}
10064a1a:	b087      	sub	sp, #28
10064a1c:	9302      	str	r3, [sp, #8]
10064a1e:	9200      	str	r2, [sp, #0]
10064a20:	9101      	str	r1, [sp, #4]
10064a22:	493a      	ldr	r1, [pc, #232]	@ (10064b0c <__arm_cp.1_0>)
10064a24:	6809      	ldr	r1, [r1, #0]
10064a26:	2334      	movs	r3, #52	@ 0x34
10064a28:	5cca      	ldrb	r2, [r1, r3]
10064a2a:	2770      	movs	r7, #112	@ 0x70
10064a2c:	4357      	muls	r7, r2
10064a2e:	2500      	movs	r5, #0
10064a30:	43ec      	mvns	r4, r5
10064a32:	4b37      	ldr	r3, [pc, #220]	@ (10064b10 <__arm_cp.1_1>)
10064a34:	681e      	ldr	r6, [r3, #0]
10064a36:	36a4      	adds	r6, #164	@ 0xa4
10064a38:	990c      	ldr	r1, [sp, #48]	@ 0x30
10064a3a:	9106      	str	r1, [sp, #24]
10064a3c:	990e      	ldr	r1, [sp, #56]	@ 0x38
10064a3e:	9103      	str	r1, [sp, #12]
10064a40:	990d      	ldr	r1, [sp, #52]	@ 0x34
10064a42:	9105      	str	r1, [sp, #20]
10064a44:	9404      	str	r4, [sp, #16]
10064a46:	42af      	cmp	r7, r5
10064a48:	d05e      	beq.n	10064b08 <smp_connection_complete_handler+0xf0>
10064a4a:	6833      	ldr	r3, [r6, #0]
10064a4c:	1959      	adds	r1, r3, r5
10064a4e:	8909      	ldrh	r1, [r1, #8]
10064a50:	3570      	adds	r5, #112	@ 0x70
10064a52:	1c64      	adds	r4, r4, #1
10064a54:	2900      	cmp	r1, #0
10064a56:	d1f6      	bne.n	10064a46 <smp_connection_complete_handler+0x2e>
10064a58:	4294      	cmp	r4, r2
10064a5a:	d255      	bcs.n	10064b08 <smp_connection_complete_handler+0xf0>
10064a5c:	195f      	adds	r7, r3, r5
10064a5e:	4639      	mov	r1, r7
10064a60:	3968      	subs	r1, #104	@ 0x68
10064a62:	8008      	strh	r0, [r1, #0]
10064a64:	4638      	mov	r0, r7
10064a66:	3870      	subs	r0, #112	@ 0x70
10064a68:	2105      	movs	r1, #5
10064a6a:	7001      	strb	r1, [r0, #0]
10064a6c:	4638      	mov	r0, r7
10064a6e:	380f      	subs	r0, #15
10064a70:	9900      	ldr	r1, [sp, #0]
10064a72:	7001      	strb	r1, [r0, #0]
10064a74:	4638      	mov	r0, r7
10064a76:	3810      	subs	r0, #16
10064a78:	9000      	str	r0, [sp, #0]
10064a7a:	9901      	ldr	r1, [sp, #4]
10064a7c:	7001      	strb	r1, [r0, #0]
10064a7e:	4638      	mov	r0, r7
10064a80:	380e      	subs	r0, #14
10064a82:	2206      	movs	r2, #6
10064a84:	4b23      	ldr	r3, [pc, #140]	@ (10064b14 <__arm_cp.1_2>)
10064a86:	9902      	ldr	r1, [sp, #8]
10064a88:	4616      	mov	r6, r2
10064a8a:	4798      	blx	r3
10064a8c:	20fe      	movs	r0, #254	@ 0xfe
10064a8e:	9a06      	ldr	r2, [sp, #24]
10064a90:	4010      	ands	r0, r2
10064a92:	2101      	movs	r1, #1
10064a94:	400a      	ands	r2, r1
10064a96:	2802      	cmp	r0, #2
10064a98:	d000      	beq.n	10064a9c <smp_connection_complete_handler+0x84>
10064a9a:	4611      	mov	r1, r2
10064a9c:	9206      	str	r2, [sp, #24]
10064a9e:	463c      	mov	r4, r7
10064aa0:	3c6f      	subs	r4, #111	@ 0x6f
10064aa2:	7021      	strb	r1, [r4, #0]
10064aa4:	2802      	cmp	r0, #2
10064aa6:	9805      	ldr	r0, [sp, #20]
10064aa8:	9903      	ldr	r1, [sp, #12]
10064aaa:	d000      	beq.n	10064aae <smp_connection_complete_handler+0x96>
10064aac:	4601      	mov	r1, r0
10064aae:	463d      	mov	r5, r7
10064ab0:	3d6e      	subs	r5, #110	@ 0x6e
10064ab2:	4628      	mov	r0, r5
10064ab4:	4632      	mov	r2, r6
10064ab6:	4b17      	ldr	r3, [pc, #92]	@ (10064b14 <__arm_cp.1_2>)
10064ab8:	4798      	blx	r3
10064aba:	4638      	mov	r0, r7
10064abc:	3817      	subs	r0, #23
10064abe:	9906      	ldr	r1, [sp, #24]
10064ac0:	7001      	strb	r1, [r0, #0]
10064ac2:	4638      	mov	r0, r7
10064ac4:	3816      	subs	r0, #22
10064ac6:	9905      	ldr	r1, [sp, #20]
10064ac8:	4632      	mov	r2, r6
10064aca:	4b12      	ldr	r3, [pc, #72]	@ (10064b14 <__arm_cp.1_2>)
10064acc:	4798      	blx	r3
10064ace:	4638      	mov	r0, r7
10064ad0:	3858      	subs	r0, #88	@ 0x58
10064ad2:	2100      	movs	r1, #0
10064ad4:	2204      	movs	r2, #4
10064ad6:	f7df ff75 	bl	100449c4 <BLEPLAT_MemSet>
10064ada:	1f38      	subs	r0, r7, #4
10064adc:	3f66      	subs	r7, #102	@ 0x66
10064ade:	2110      	movs	r1, #16
10064ae0:	7039      	strb	r1, [r7, #0]
10064ae2:	9904      	ldr	r1, [sp, #16]
10064ae4:	6001      	str	r1, [r0, #0]
10064ae6:	7820      	ldrb	r0, [r4, #0]
10064ae8:	4629      	mov	r1, r5
10064aea:	f006 fc51 	bl	1006b390 <smp_cmn_is_peer_rejectlisted>
10064aee:	2800      	cmp	r0, #0
10064af0:	d005      	beq.n	10064afe <smp_connection_complete_handler+0xe6>
10064af2:	9800      	ldr	r0, [sp, #0]
10064af4:	7800      	ldrb	r0, [r0, #0]
10064af6:	07c0      	lsls	r0, r0, #31
10064af8:	d001      	beq.n	10064afe <smp_connection_complete_handler+0xe6>
10064afa:	20fb      	movs	r0, #251	@ 0xfb
10064afc:	7038      	strb	r0, [r7, #0]
10064afe:	200e      	movs	r0, #14
10064b00:	f000 fb96 	bl	10065230 <tsk_notify_idx>
10064b04:	f7dd fee7 	bl	100428d6 <BLE_STACK_ProcessRequest>
10064b08:	b007      	add	sp, #28
10064b0a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10064b0c <__arm_cp.1_0>:
10064b0c:	2000083c 	.word	0x2000083c

10064b10 <__arm_cp.1_1>:
10064b10:	200008e0 	.word	0x200008e0

10064b14 <__arm_cp.1_2>:
10064b14:	100449a5 	.word	0x100449a5

10064b18 <smp_sap_hci_le_enhanced_connection_complete_evt_hndl>:
10064b18:	b5f0      	push	{r4, r5, r6, r7, lr}
10064b1a:	b089      	sub	sp, #36	@ 0x24
10064b1c:	9304      	str	r3, [sp, #16]
10064b1e:	4617      	mov	r7, r2
10064b20:	9105      	str	r1, [sp, #20]
10064b22:	4606      	mov	r6, r0
10064b24:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
10064b26:	4620      	mov	r0, r4
10064b28:	f7fd fb8a 	bl	10062240 <Is_Address_Initialized>
10064b2c:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10064b2e:	2800      	cmp	r0, #0
10064b30:	d008      	beq.n	10064b44 <smp_sap_hci_le_enhanced_connection_complete_evt_hndl+0x2c>
10064b32:	a807      	add	r0, sp, #28
10064b34:	2206      	movs	r2, #6
10064b36:	4621      	mov	r1, r4
10064b38:	f7df ff34 	bl	100449a4 <BLEPLAT_MemCpy>
10064b3c:	a806      	add	r0, sp, #24
10064b3e:	2201      	movs	r2, #1
10064b40:	7002      	strb	r2, [r0, #0]
10064b42:	e005      	b.n	10064b50 <smp_sap_hci_le_enhanced_connection_complete_evt_hndl+0x38>
10064b44:	a807      	add	r0, sp, #28
10064b46:	ac06      	add	r4, sp, #24
10064b48:	4621      	mov	r1, r4
10064b4a:	f7ed fa03 	bl	10051f54 <GAP_get_current_address>
10064b4e:	7822      	ldrb	r2, [r4, #0]
10064b50:	9700      	str	r7, [sp, #0]
10064b52:	9804      	ldr	r0, [sp, #16]
10064b54:	9001      	str	r0, [sp, #4]
10064b56:	9502      	str	r5, [sp, #8]
10064b58:	ab07      	add	r3, sp, #28
10064b5a:	4630      	mov	r0, r6
10064b5c:	9905      	ldr	r1, [sp, #20]
10064b5e:	f7ff ff5b 	bl	10064a18 <smp_connection_complete_handler>
10064b62:	b009      	add	sp, #36	@ 0x24
10064b64:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10064b68 <smp_sap_hci_le_long_term_key_request_evt_hndl>:
10064b68:	b5f0      	push	{r4, r5, r6, r7, lr}
10064b6a:	b089      	sub	sp, #36	@ 0x24
10064b6c:	4615      	mov	r5, r2
10064b6e:	460e      	mov	r6, r1
10064b70:	f7ff fb76 	bl	10064260 <smp_get_remote_device_list_item>
10064b74:	2800      	cmp	r0, #0
10064b76:	d070      	beq.n	10064c5a <smp_sap_hci_le_long_term_key_request_evt_hndl+0xf2>
10064b78:	4604      	mov	r4, r0
10064b7a:	7a80      	ldrb	r0, [r0, #10]
10064b7c:	28bc      	cmp	r0, #188	@ 0xbc
10064b7e:	d106      	bne.n	10064b8e <smp_sap_hci_le_long_term_key_request_evt_hndl+0x26>
10064b80:	8927      	ldrh	r7, [r4, #8]
10064b82:	a808      	add	r0, sp, #32
10064b84:	2100      	movs	r1, #0
10064b86:	8001      	strh	r1, [r0, #0]
10064b88:	4626      	mov	r6, r4
10064b8a:	3628      	adds	r6, #40	@ 0x28
10064b8c:	e056      	b.n	10064c3c <smp_sap_hci_le_long_term_key_request_evt_hndl+0xd4>
10064b8e:	4627      	mov	r7, r4
10064b90:	3730      	adds	r7, #48	@ 0x30
10064b92:	7de1      	ldrb	r1, [r4, #23]
10064b94:	0709      	lsls	r1, r1, #28
10064b96:	d409      	bmi.n	10064bac <smp_sap_hci_le_long_term_key_request_evt_hndl+0x44>
10064b98:	4620      	mov	r0, r4
10064b9a:	3028      	adds	r0, #40	@ 0x28
10064b9c:	2208      	movs	r2, #8
10064b9e:	4631      	mov	r1, r6
10064ba0:	f7df ff00 	bl	100449a4 <BLEPLAT_MemCpy>
10064ba4:	703d      	strb	r5, [r7, #0]
10064ba6:	0a28      	lsrs	r0, r5, #8
10064ba8:	7078      	strb	r0, [r7, #1]
10064baa:	7aa0      	ldrb	r0, [r4, #10]
10064bac:	8921      	ldrh	r1, [r4, #8]
10064bae:	9102      	str	r1, [sp, #8]
10064bb0:	a908      	add	r1, sp, #32
10064bb2:	2200      	movs	r2, #0
10064bb4:	800a      	strh	r2, [r1, #0]
10064bb6:	4626      	mov	r6, r4
10064bb8:	3628      	adds	r6, #40	@ 0x28
10064bba:	28bc      	cmp	r0, #188	@ 0xbc
10064bbc:	d03d      	beq.n	10064c3a <smp_sap_hci_le_long_term_key_request_evt_hndl+0xd2>
10064bbe:	4625      	mov	r5, r4
10064bc0:	351c      	adds	r5, #28
10064bc2:	28f1      	cmp	r0, #241	@ 0xf1
10064bc4:	d10f      	bne.n	10064be6 <smp_sap_hci_le_long_term_key_request_evt_hndl+0x7e>
10064bc6:	7de0      	ldrb	r0, [r4, #23]
10064bc8:	0700      	lsls	r0, r0, #28
10064bca:	d436      	bmi.n	10064c3a <smp_sap_hci_le_long_term_key_request_evt_hndl+0xd2>
10064bcc:	aa07      	add	r2, sp, #28
10064bce:	9201      	str	r2, [sp, #4]
10064bd0:	4628      	mov	r0, r5
10064bd2:	4631      	mov	r1, r6
10064bd4:	f7fe fe2c 	bl	10063830 <smp_sap_crt_generate_ediv>
10064bd8:	2202      	movs	r2, #2
10064bda:	9801      	ldr	r0, [sp, #4]
10064bdc:	4639      	mov	r1, r7
10064bde:	f7df ff01 	bl	100449e4 <BLEPLAT_MemCmp>
10064be2:	2800      	cmp	r0, #0
10064be4:	d021      	beq.n	10064c2a <smp_sap_hci_le_long_term_key_request_evt_hndl+0xc2>
10064be6:	4638      	mov	r0, r7
10064be8:	4631      	mov	r1, r6
10064bea:	4622      	mov	r2, r4
10064bec:	f005 fc59 	bl	1006a4a2 <smp_dep_sdb_find_matching_ltk_read_record>
10064bf0:	2800      	cmp	r0, #0
10064bf2:	d01a      	beq.n	10064c2a <smp_sap_hci_le_long_term_key_request_evt_hndl+0xc2>
10064bf4:	9d02      	ldr	r5, [sp, #8]
10064bf6:	4628      	mov	r0, r5
10064bf8:	f7f0 fae5 	bl	100551c6 <hci_le_long_term_key_request_negative_reply_api>
10064bfc:	7e20      	ldrb	r0, [r4, #24]
10064bfe:	0780      	lsls	r0, r0, #30
10064c00:	d00c      	beq.n	10064c1c <smp_sap_hci_le_long_term_key_request_evt_hndl+0xb4>
10064c02:	4628      	mov	r0, r5
10064c04:	f7ff fb0c 	bl	10064220 <smp_get_remote_device_list_index>
10064c08:	4602      	mov	r2, r0
10064c0a:	2001      	movs	r0, #1
10064c0c:	2100      	movs	r1, #0
10064c0e:	4b15      	ldr	r3, [pc, #84]	@ (10064c64 <__arm_cp.3_1>)
10064c10:	f7ff fdbc 	bl	1006478c <smp_timer_reset>
10064c14:	7e20      	ldrb	r0, [r4, #24]
10064c16:	21fc      	movs	r1, #252	@ 0xfc
10064c18:	4001      	ands	r1, r0
10064c1a:	7621      	strb	r1, [r4, #24]
10064c1c:	2002      	movs	r0, #2
10064c1e:	2203      	movs	r2, #3
10064c20:	2300      	movs	r3, #0
10064c22:	4629      	mov	r1, r5
10064c24:	f002 f89e 	bl	10066d64 <aci_gap_pairing_complete_event_push_noinline>
10064c28:	e017      	b.n	10064c5a <smp_sap_hci_le_long_term_key_request_evt_hndl+0xf2>
10064c2a:	480d      	ldr	r0, [pc, #52]	@ (10064c60 <__arm_cp.3_0>)
10064c2c:	6800      	ldr	r0, [r0, #0]
10064c2e:	3008      	adds	r0, #8
10064c30:	aa08      	add	r2, sp, #32
10064c32:	4629      	mov	r1, r5
10064c34:	4633      	mov	r3, r6
10064c36:	f7fe fe31 	bl	1006389c <smp_crt_diversify>
10064c3a:	9f02      	ldr	r7, [sp, #8]
10064c3c:	ad03      	add	r5, sp, #12
10064c3e:	2100      	movs	r1, #0
10064c40:	2210      	movs	r2, #16
10064c42:	4628      	mov	r0, r5
10064c44:	f7df febe 	bl	100449c4 <BLEPLAT_MemSet>
10064c48:	7c22      	ldrb	r2, [r4, #16]
10064c4a:	4628      	mov	r0, r5
10064c4c:	4631      	mov	r1, r6
10064c4e:	f7df fea9 	bl	100449a4 <BLEPLAT_MemCpy>
10064c52:	4638      	mov	r0, r7
10064c54:	4629      	mov	r1, r5
10064c56:	f7f0 faa7 	bl	100551a8 <hci_le_long_term_key_request_reply_api>
10064c5a:	b009      	add	sp, #36	@ 0x24
10064c5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
10064c5e:	46c0      	nop			@ (mov r8, r8)

10064c60 <__arm_cp.3_0>:
10064c60:	2000083c 	.word	0x2000083c

10064c64 <__arm_cp.3_1>:
10064c64:	00007530 	.word	0x00007530

10064c68 <smp_sap_hci_encryption_change_evt_hndl>:
10064c68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10064c6a:	460e      	mov	r6, r1
10064c6c:	4605      	mov	r5, r0
10064c6e:	4610      	mov	r0, r2
10064c70:	f7ff faf6 	bl	10064260 <smp_get_remote_device_list_item>
10064c74:	2800      	cmp	r0, #0
10064c76:	d056      	beq.n	10064d26 <smp_sap_hci_encryption_change_evt_hndl+0xbe>
10064c78:	4604      	mov	r4, r0
10064c7a:	4607      	mov	r7, r0
10064c7c:	2e00      	cmp	r6, #0
10064c7e:	d00b      	beq.n	10064c98 <smp_sap_hci_encryption_change_evt_hndl+0x30>
10064c80:	2000      	movs	r0, #0
10064c82:	72b8      	strb	r0, [r7, #10]
10064c84:	3408      	adds	r4, #8
10064c86:	2201      	movs	r2, #1
10064c88:	2d06      	cmp	r5, #6
10064c8a:	d132      	bne.n	10064cf2 <smp_sap_hci_encryption_change_evt_hndl+0x8a>
10064c8c:	8939      	ldrh	r1, [r7, #8]
10064c8e:	4615      	mov	r5, r2
10064c90:	2e06      	cmp	r6, #6
10064c92:	d00e      	beq.n	10064cb2 <smp_sap_hci_encryption_change_evt_hndl+0x4a>
10064c94:	2205      	movs	r2, #5
10064c96:	e00d      	b.n	10064cb4 <smp_sap_hci_encryption_change_evt_hndl+0x4c>
10064c98:	7af9      	ldrb	r1, [r7, #11]
10064c9a:	2001      	movs	r0, #1
10064c9c:	4308      	orrs	r0, r1
10064c9e:	72f8      	strb	r0, [r7, #11]
10064ca0:	7cf9      	ldrb	r1, [r7, #19]
10064ca2:	1e89      	subs	r1, r1, #2
10064ca4:	2902      	cmp	r1, #2
10064ca6:	d810      	bhi.n	10064cca <smp_sap_hci_encryption_change_evt_hndl+0x62>
10064ca8:	7df9      	ldrb	r1, [r7, #23]
10064caa:	0709      	lsls	r1, r1, #28
10064cac:	d508      	bpl.n	10064cc0 <smp_sap_hci_encryption_change_evt_hndl+0x58>
10064cae:	2104      	movs	r1, #4
10064cb0:	e007      	b.n	10064cc2 <smp_sap_hci_encryption_change_evt_hndl+0x5a>
10064cb2:	2204      	movs	r2, #4
10064cb4:	2002      	movs	r0, #2
10064cb6:	2300      	movs	r3, #0
10064cb8:	f002 f854 	bl	10066d64 <aci_gap_pairing_complete_event_push_noinline>
10064cbc:	462a      	mov	r2, r5
10064cbe:	e018      	b.n	10064cf2 <smp_sap_hci_encryption_change_evt_hndl+0x8a>
10064cc0:	2102      	movs	r1, #2
10064cc2:	22f9      	movs	r2, #249	@ 0xf9
10064cc4:	4010      	ands	r0, r2
10064cc6:	1840      	adds	r0, r0, r1
10064cc8:	72f8      	strb	r0, [r7, #11]
10064cca:	7ab8      	ldrb	r0, [r7, #10]
10064ccc:	28ad      	cmp	r0, #173	@ 0xad
10064cce:	d005      	beq.n	10064cdc <smp_sap_hci_encryption_change_evt_hndl+0x74>
10064cd0:	28ae      	cmp	r0, #174	@ 0xae
10064cd2:	d005      	beq.n	10064ce0 <smp_sap_hci_encryption_change_evt_hndl+0x78>
10064cd4:	28bc      	cmp	r0, #188	@ 0xbc
10064cd6:	d127      	bne.n	10064d28 <smp_sap_hci_encryption_change_evt_hndl+0xc0>
10064cd8:	20bf      	movs	r0, #191	@ 0xbf
10064cda:	e002      	b.n	10064ce2 <smp_sap_hci_encryption_change_evt_hndl+0x7a>
10064cdc:	20af      	movs	r0, #175	@ 0xaf
10064cde:	e000      	b.n	10064ce2 <smp_sap_hci_encryption_change_evt_hndl+0x7a>
10064ce0:	20f0      	movs	r0, #240	@ 0xf0
10064ce2:	72b8      	strb	r0, [r7, #10]
10064ce4:	3408      	adds	r4, #8
10064ce6:	200e      	movs	r0, #14
10064ce8:	f000 faa2 	bl	10065230 <tsk_notify_idx>
10064cec:	f7dd fdf3 	bl	100428d6 <BLE_STACK_ProcessRequest>
10064cf0:	2200      	movs	r2, #0
10064cf2:	2060      	movs	r0, #96	@ 0x60
10064cf4:	5c38      	ldrb	r0, [r7, r0]
10064cf6:	07c0      	lsls	r0, r0, #31
10064cf8:	d10b      	bne.n	10064d12 <smp_sap_hci_encryption_change_evt_hndl+0xaa>
10064cfa:	7eb8      	ldrb	r0, [r7, #26]
10064cfc:	06c1      	lsls	r1, r0, #27
10064cfe:	d505      	bpl.n	10064d0c <smp_sap_hci_encryption_change_evt_hndl+0xa4>
10064d00:	21ef      	movs	r1, #239	@ 0xef
10064d02:	4001      	ands	r1, r0
10064d04:	76b9      	strb	r1, [r7, #26]
10064d06:	b241      	sxtb	r1, r0
10064d08:	2900      	cmp	r1, #0
10064d0a:	d418      	bmi.n	10064d3e <smp_sap_hci_encryption_change_evt_hndl+0xd6>
10064d0c:	2a00      	cmp	r2, #0
10064d0e:	d119      	bne.n	10064d44 <smp_sap_hci_encryption_change_evt_hndl+0xdc>
10064d10:	e009      	b.n	10064d26 <smp_sap_hci_encryption_change_evt_hndl+0xbe>
10064d12:	7e38      	ldrb	r0, [r7, #24]
10064d14:	21fc      	movs	r1, #252	@ 0xfc
10064d16:	4001      	ands	r1, r0
10064d18:	7639      	strb	r1, [r7, #24]
10064d1a:	2103      	movs	r1, #3
10064d1c:	4001      	ands	r1, r0
10064d1e:	1e48      	subs	r0, r1, #1
10064d20:	4181      	sbcs	r1, r0
10064d22:	430a      	orrs	r2, r1
10064d24:	d10e      	bne.n	10064d44 <smp_sap_hci_encryption_change_evt_hndl+0xdc>
10064d26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10064d28:	2d06      	cmp	r5, #6
10064d2a:	d1db      	bne.n	10064ce4 <smp_sap_hci_encryption_change_evt_hndl+0x7c>
10064d2c:	28f1      	cmp	r0, #241	@ 0xf1
10064d2e:	d1d9      	bne.n	10064ce4 <smp_sap_hci_encryption_change_evt_hndl+0x7c>
10064d30:	8939      	ldrh	r1, [r7, #8]
10064d32:	2002      	movs	r0, #2
10064d34:	2200      	movs	r2, #0
10064d36:	4613      	mov	r3, r2
10064d38:	f002 f814 	bl	10066d64 <aci_gap_pairing_complete_event_push_noinline>
10064d3c:	e7d2      	b.n	10064ce4 <smp_sap_hci_encryption_change_evt_hndl+0x7c>
10064d3e:	216f      	movs	r1, #111	@ 0x6f
10064d40:	4008      	ands	r0, r1
10064d42:	76b8      	strb	r0, [r7, #26]
10064d44:	8820      	ldrh	r0, [r4, #0]
10064d46:	f7ff fa6b 	bl	10064220 <smp_get_remote_device_list_index>
10064d4a:	4602      	mov	r2, r0
10064d4c:	2001      	movs	r0, #1
10064d4e:	2100      	movs	r1, #0
10064d50:	4b01      	ldr	r3, [pc, #4]	@ (10064d58 <__arm_cp.4_0>)
10064d52:	f7ff fd1b 	bl	1006478c <smp_timer_reset>
10064d56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10064d58 <__arm_cp.4_0>:
10064d58:	00007530 	.word	0x00007530

10064d5c <smp_sap_hci_disconnection_complete_evt_hndl>:
10064d5c:	b510      	push	{r4, lr}
10064d5e:	f7ff fa7f 	bl	10064260 <smp_get_remote_device_list_item>
10064d62:	2800      	cmp	r0, #0
10064d64:	d025      	beq.n	10064db2 <smp_sap_hci_disconnection_complete_evt_hndl+0x56>
10064d66:	4604      	mov	r4, r0
10064d68:	8900      	ldrh	r0, [r0, #8]
10064d6a:	f7ff fa59 	bl	10064220 <smp_get_remote_device_list_index>
10064d6e:	4602      	mov	r2, r0
10064d70:	2001      	movs	r0, #1
10064d72:	2100      	movs	r1, #0
10064d74:	4b0f      	ldr	r3, [pc, #60]	@ (10064db4 <__arm_cp.5_0>)
10064d76:	f7ff fd09 	bl	1006478c <smp_timer_reset>
10064d7a:	8920      	ldrh	r0, [r4, #8]
10064d7c:	f7ff fccc 	bl	10064718 <smp_rxp_flush_packet_queues>
10064d80:	2060      	movs	r0, #96	@ 0x60
10064d82:	5c20      	ldrb	r0, [r4, r0]
10064d84:	07c0      	lsls	r0, r0, #31
10064d86:	7aa0      	ldrb	r0, [r4, #10]
10064d88:	d104      	bne.n	10064d94 <smp_sap_hci_disconnection_complete_evt_hndl+0x38>
10064d8a:	3060      	adds	r0, #96	@ 0x60
10064d8c:	b2c0      	uxtb	r0, r0
10064d8e:	2851      	cmp	r0, #81	@ 0x51
10064d90:	d304      	bcc.n	10064d9c <smp_sap_hci_disconnection_complete_evt_hndl+0x40>
10064d92:	e007      	b.n	10064da4 <smp_sap_hci_disconnection_complete_evt_hndl+0x48>
10064d94:	3050      	adds	r0, #80	@ 0x50
10064d96:	b2c0      	uxtb	r0, r0
10064d98:	2840      	cmp	r0, #64	@ 0x40
10064d9a:	d803      	bhi.n	10064da4 <smp_sap_hci_disconnection_complete_evt_hndl+0x48>
10064d9c:	2102      	movs	r1, #2
10064d9e:	4620      	mov	r0, r4
10064da0:	f005 fbf8 	bl	1006a594 <smp_pp3_pairing_completed_update_stats>
10064da4:	20fe      	movs	r0, #254	@ 0xfe
10064da6:	72a0      	strb	r0, [r4, #10]
10064da8:	200e      	movs	r0, #14
10064daa:	f000 fa41 	bl	10065230 <tsk_notify_idx>
10064dae:	f7dd fd92 	bl	100428d6 <BLE_STACK_ProcessRequest>
10064db2:	bd10      	pop	{r4, pc}

10064db4 <__arm_cp.5_0>:
10064db4:	00007530 	.word	0x00007530

10064db8 <secure_connections_csr_ucfg_weak>:
10064db8:	2000      	movs	r0, #0
10064dba:	4770      	bx	lr

10064dbc <smp_sap_hci_le_read_local_p256_public_key_complete_evt_hndl_ucfg_weak>:
10064dbc:	4770      	bx	lr

10064dbe <smp_sap_hci_le_generate_dhkey_complete_evt_hndl_ucfg_weak>:
10064dbe:	4770      	bx	lr

10064dc0 <smp_sap_l2c_acl_data_hndl>:
10064dc0:	b5b0      	push	{r4, r5, r7, lr}
10064dc2:	460c      	mov	r4, r1
10064dc4:	4605      	mov	r5, r0
10064dc6:	8808      	ldrh	r0, [r1, #0]
10064dc8:	f7ff fa4a 	bl	10064260 <smp_get_remote_device_list_item>
10064dcc:	2800      	cmp	r0, #0
10064dce:	d025      	beq.n	10064e1c <smp_sap_l2c_acl_data_hndl+0x5c>
10064dd0:	2d00      	cmp	r5, #0
10064dd2:	d00f      	beq.n	10064df4 <smp_sap_l2c_acl_data_hndl+0x34>
10064dd4:	2d01      	cmp	r5, #1
10064dd6:	d121      	bne.n	10064e1c <smp_sap_l2c_acl_data_hndl+0x5c>
10064dd8:	8860      	ldrh	r0, [r4, #2]
10064dda:	2841      	cmp	r0, #65	@ 0x41
10064ddc:	d81e      	bhi.n	10064e1c <smp_sap_l2c_acl_data_hndl+0x5c>
10064dde:	4812      	ldr	r0, [pc, #72]	@ (10064e28 <__arm_cp.0_0>)
10064de0:	6800      	ldr	r0, [r0, #0]
10064de2:	4621      	mov	r1, r4
10064de4:	f000 fc1a 	bl	1006561c <ACL_list_insert_tail>
10064de8:	200f      	movs	r0, #15
10064dea:	f000 fa21 	bl	10065230 <tsk_notify_idx>
10064dee:	f7dd fd72 	bl	100428d6 <BLE_STACK_ProcessRequest>
10064df2:	e016      	b.n	10064e22 <smp_sap_l2c_acl_data_hndl+0x62>
10064df4:	6861      	ldr	r1, [r4, #4]
10064df6:	7a09      	ldrb	r1, [r1, #8]
10064df8:	290b      	cmp	r1, #11
10064dfa:	d109      	bne.n	10064e10 <smp_sap_l2c_acl_data_hndl+0x50>
10064dfc:	7e01      	ldrb	r1, [r0, #24]
10064dfe:	2203      	movs	r2, #3
10064e00:	400a      	ands	r2, r1
10064e02:	2a01      	cmp	r2, #1
10064e04:	d10a      	bne.n	10064e1c <smp_sap_l2c_acl_data_hndl+0x5c>
10064e06:	22fc      	movs	r2, #252	@ 0xfc
10064e08:	4011      	ands	r1, r2
10064e0a:	1c89      	adds	r1, r1, #2
10064e0c:	7601      	strb	r1, [r0, #24]
10064e0e:	e005      	b.n	10064e1c <smp_sap_l2c_acl_data_hndl+0x5c>
10064e10:	1f8a      	subs	r2, r1, #6
10064e12:	b2d2      	uxtb	r2, r2
10064e14:	2a04      	cmp	r2, #4
10064e16:	d801      	bhi.n	10064e1c <smp_sap_l2c_acl_data_hndl+0x5c>
10064e18:	f006 f908 	bl	1006b02c <smp_pp3_keys_distribution_signaling_ack>
10064e1c:	4620      	mov	r0, r4
10064e1e:	f7eb f8bd 	bl	1004ff9c <ACL_pkt_release>
10064e22:	2000      	movs	r0, #0
10064e24:	bdb0      	pop	{r4, r5, r7, pc}
10064e26:	46c0      	nop			@ (mov r8, r8)

10064e28 <__arm_cp.0_0>:
10064e28:	200008e0 	.word	0x200008e0

10064e2c <smp_get_sec_level_for_mode1>:
10064e2c:	b510      	push	{r4, lr}
10064e2e:	7ac3      	ldrb	r3, [r0, #11]
10064e30:	075c      	lsls	r4, r3, #29
10064e32:	0fa2      	lsrs	r2, r4, #30
10064e34:	d009      	beq.n	10064e4a <smp_get_sec_level_for_mode1+0x1e>
10064e36:	2201      	movs	r2, #1
10064e38:	4013      	ands	r3, r2
10064e3a:	425a      	negs	r2, r3
10064e3c:	415a      	adcs	r2, r3
10064e3e:	7c03      	ldrb	r3, [r0, #16]
10064e40:	2003      	movs	r0, #3
10064e42:	2b10      	cmp	r3, #16
10064e44:	d009      	beq.n	10064e5a <smp_get_sec_level_for_mode1+0x2e>
10064e46:	4603      	mov	r3, r0
10064e48:	e008      	b.n	10064e5c <smp_get_sec_level_for_mode1+0x30>
10064e4a:	07da      	lsls	r2, r3, #31
10064e4c:	d10a      	bne.n	10064e64 <smp_get_sec_level_for_mode1+0x38>
10064e4e:	7a80      	ldrb	r0, [r0, #10]
10064e50:	2201      	movs	r2, #1
10064e52:	28f1      	cmp	r0, #241	@ 0xf1
10064e54:	d009      	beq.n	10064e6a <smp_get_sec_level_for_mode1+0x3e>
10064e56:	4613      	mov	r3, r2
10064e58:	e008      	b.n	10064e6c <smp_get_sec_level_for_mode1+0x40>
10064e5a:	2304      	movs	r3, #4
10064e5c:	2c00      	cmp	r4, #0
10064e5e:	d405      	bmi.n	10064e6c <smp_get_sec_level_for_mode1+0x40>
10064e60:	4603      	mov	r3, r0
10064e62:	e003      	b.n	10064e6c <smp_get_sec_level_for_mode1+0x40>
10064e64:	2302      	movs	r3, #2
10064e66:	2200      	movs	r2, #0
10064e68:	e000      	b.n	10064e6c <smp_get_sec_level_for_mode1+0x40>
10064e6a:	2302      	movs	r3, #2
10064e6c:	2a00      	cmp	r2, #0
10064e6e:	d101      	bne.n	10064e74 <smp_get_sec_level_for_mode1+0x48>
10064e70:	4618      	mov	r0, r3
10064e72:	e000      	b.n	10064e76 <smp_get_sec_level_for_mode1+0x4a>
10064e74:	2001      	movs	r0, #1
10064e76:	2900      	cmp	r1, #0
10064e78:	d000      	beq.n	10064e7c <smp_get_sec_level_for_mode1+0x50>
10064e7a:	4618      	mov	r0, r3
10064e7c:	bd10      	pop	{r4, pc}

10064e7e <smp_sap_get_security_level>:
10064e7e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10064e80:	461c      	mov	r4, r3
10064e82:	4616      	mov	r6, r2
10064e84:	460d      	mov	r5, r1
10064e86:	2100      	movs	r1, #0
10064e88:	7029      	strb	r1, [r5, #0]
10064e8a:	7011      	strb	r1, [r2, #0]
10064e8c:	7019      	strb	r1, [r3, #0]
10064e8e:	f7ff f9e7 	bl	10064260 <smp_get_remote_device_list_item>
10064e92:	2800      	cmp	r0, #0
10064e94:	d017      	beq.n	10064ec6 <smp_sap_get_security_level+0x48>
10064e96:	4607      	mov	r7, r0
10064e98:	2101      	movs	r1, #1
10064e9a:	7029      	strb	r1, [r5, #0]
10064e9c:	7a80      	ldrb	r0, [r0, #10]
10064e9e:	28f1      	cmp	r0, #241	@ 0xf1
10064ea0:	d110      	bne.n	10064ec4 <smp_sap_get_security_level+0x46>
10064ea2:	9100      	str	r1, [sp, #0]
10064ea4:	2100      	movs	r1, #0
10064ea6:	4638      	mov	r0, r7
10064ea8:	f7ff ffc0 	bl	10064e2c <smp_get_sec_level_for_mode1>
10064eac:	7030      	strb	r0, [r6, #0]
10064eae:	2801      	cmp	r0, #1
10064eb0:	d109      	bne.n	10064ec6 <smp_sap_get_security_level+0x48>
10064eb2:	2002      	movs	r0, #2
10064eb4:	7028      	strb	r0, [r5, #0]
10064eb6:	7af9      	ldrb	r1, [r7, #11]
10064eb8:	0749      	lsls	r1, r1, #29
10064eba:	0f89      	lsrs	r1, r1, #30
10064ebc:	d100      	bne.n	10064ec0 <smp_sap_get_security_level+0x42>
10064ebe:	9800      	ldr	r0, [sp, #0]
10064ec0:	7020      	strb	r0, [r4, #0]
10064ec2:	e000      	b.n	10064ec6 <smp_sap_get_security_level+0x48>
10064ec4:	7031      	strb	r1, [r6, #0]
10064ec6:	2000      	movs	r0, #0
10064ec8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10064eca <smp_sap_get_remote_address_check_addr_type>:
10064eca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10064ecc:	461c      	mov	r4, r3
10064ece:	4615      	mov	r5, r2
10064ed0:	460f      	mov	r7, r1
10064ed2:	f7ff f9c5 	bl	10064260 <smp_get_remote_device_list_item>
10064ed6:	2800      	cmp	r0, #0
10064ed8:	d016      	beq.n	10064f08 <smp_sap_get_remote_address_check_addr_type+0x3e>
10064eda:	4606      	mov	r6, r0
10064edc:	1c81      	adds	r1, r0, #2
10064ede:	2206      	movs	r2, #6
10064ee0:	4628      	mov	r0, r5
10064ee2:	f7df fd5f 	bl	100449a4 <BLEPLAT_MemCpy>
10064ee6:	7870      	ldrb	r0, [r6, #1]
10064ee8:	4669      	mov	r1, sp
10064eea:	7008      	strb	r0, [r1, #0]
10064eec:	2f00      	cmp	r7, #0
10064eee:	d01f      	beq.n	10064f30 <smp_sap_get_remote_address_check_addr_type+0x66>
10064ef0:	2800      	cmp	r0, #0
10064ef2:	d01d      	beq.n	10064f30 <smp_sap_get_remote_address_check_addr_type+0x66>
10064ef4:	2801      	cmp	r0, #1
10064ef6:	d109      	bne.n	10064f0c <smp_sap_get_remote_address_check_addr_type+0x42>
10064ef8:	79f1      	ldrb	r1, [r6, #7]
10064efa:	098a      	lsrs	r2, r1, #6
10064efc:	2001      	movs	r0, #1
10064efe:	2a02      	cmp	r2, #2
10064f00:	d816      	bhi.n	10064f30 <smp_sap_get_remote_address_check_addr_type+0x66>
10064f02:	2940      	cmp	r1, #64	@ 0x40
10064f04:	d203      	bcs.n	10064f0e <smp_sap_get_remote_address_check_addr_type+0x44>
10064f06:	e013      	b.n	10064f30 <smp_sap_get_remote_address_check_addr_type+0x66>
10064f08:	2002      	movs	r0, #2
10064f0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10064f0c:	79f1      	ldrb	r1, [r6, #7]
10064f0e:	20c0      	movs	r0, #192	@ 0xc0
10064f10:	4008      	ands	r0, r1
10064f12:	2840      	cmp	r0, #64	@ 0x40
10064f14:	d108      	bne.n	10064f28 <smp_sap_get_remote_address_check_addr_type+0x5e>
10064f16:	4669      	mov	r1, sp
10064f18:	4630      	mov	r0, r6
10064f1a:	462a      	mov	r2, r5
10064f1c:	f005 faaa 	bl	1006a474 <smp_dep_sdb_find_bonding_record_read_address>
10064f20:	2800      	cmp	r0, #0
10064f22:	d003      	beq.n	10064f2c <smp_sap_get_remote_address_check_addr_type+0x62>
10064f24:	2081      	movs	r0, #129	@ 0x81
10064f26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10064f28:	2086      	movs	r0, #134	@ 0x86
10064f2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10064f2c:	4668      	mov	r0, sp
10064f2e:	7800      	ldrb	r0, [r0, #0]
10064f30:	7020      	strb	r0, [r4, #0]
10064f32:	2000      	movs	r0, #0
10064f34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10064f36 <smp_sap_check_is_peer_device_bonded>:
10064f36:	b5b0      	push	{r4, r5, r7, lr}
10064f38:	f7ff f992 	bl	10064260 <smp_get_remote_device_list_item>
10064f3c:	2800      	cmp	r0, #0
10064f3e:	d011      	beq.n	10064f64 <smp_sap_check_is_peer_device_bonded+0x2e>
10064f40:	4604      	mov	r4, r0
10064f42:	2500      	movs	r5, #0
10064f44:	4629      	mov	r1, r5
10064f46:	f005 fa3d 	bl	1006a3c4 <smp_dep_sdb_find_bonding_record_by_conn_addr>
10064f4a:	2800      	cmp	r0, #0
10064f4c:	d00b      	beq.n	10064f66 <smp_sap_check_is_peer_device_bonded+0x30>
10064f4e:	7aa1      	ldrb	r1, [r4, #10]
10064f50:	29f1      	cmp	r1, #241	@ 0xf1
10064f52:	d105      	bne.n	10064f60 <smp_sap_check_is_peer_device_bonded+0x2a>
10064f54:	7ba1      	ldrb	r1, [r4, #14]
10064f56:	07ca      	lsls	r2, r1, #31
10064f58:	d002      	beq.n	10064f60 <smp_sap_check_is_peer_device_bonded+0x2a>
10064f5a:	0789      	lsls	r1, r1, #30
10064f5c:	d500      	bpl.n	10064f60 <smp_sap_check_is_peer_device_bonded+0x2a>
10064f5e:	2000      	movs	r0, #0
10064f60:	4605      	mov	r5, r0
10064f62:	e000      	b.n	10064f66 <smp_sap_check_is_peer_device_bonded+0x30>
10064f64:	2502      	movs	r5, #2
10064f66:	4628      	mov	r0, r5
10064f68:	bdb0      	pop	{r4, r5, r7, pc}

10064f6a <smp_sap_check_encryption_key_size>:
10064f6a:	b510      	push	{r4, lr}
10064f6c:	460c      	mov	r4, r1
10064f6e:	f7ff f977 	bl	10064260 <smp_get_remote_device_list_item>
10064f72:	2800      	cmp	r0, #0
10064f74:	d005      	beq.n	10064f82 <smp_sap_check_encryption_key_size+0x18>
10064f76:	7a81      	ldrb	r1, [r0, #10]
10064f78:	29f1      	cmp	r1, #241	@ 0xf1
10064f7a:	d102      	bne.n	10064f82 <smp_sap_check_encryption_key_size+0x18>
10064f7c:	7c00      	ldrb	r0, [r0, #16]
10064f7e:	42a0      	cmp	r0, r4
10064f80:	d201      	bcs.n	10064f86 <smp_sap_check_encryption_key_size+0x1c>
10064f82:	20b6      	movs	r0, #182	@ 0xb6
10064f84:	bd10      	pop	{r4, pc}
10064f86:	2000      	movs	r0, #0
10064f88:	bd10      	pop	{r4, pc}

10064f8a <smp_sap_forget_device_upon_disconnection>:
10064f8a:	b580      	push	{r7, lr}
10064f8c:	f7ff f968 	bl	10064260 <smp_get_remote_device_list_item>
10064f90:	2800      	cmp	r0, #0
10064f92:	d006      	beq.n	10064fa2 <smp_sap_forget_device_upon_disconnection+0x18>
10064f94:	2160      	movs	r1, #96	@ 0x60
10064f96:	5c42      	ldrb	r2, [r0, r1]
10064f98:	2380      	movs	r3, #128	@ 0x80
10064f9a:	4313      	orrs	r3, r2
10064f9c:	5443      	strb	r3, [r0, r1]
10064f9e:	2000      	movs	r0, #0
10064fa0:	bd80      	pop	{r7, pc}
10064fa2:	2081      	movs	r0, #129	@ 0x81
10064fa4:	bd80      	pop	{r7, pc}

10064fa6 <smp_sap_sm2_packet_data_signing_compute>:
10064fa6:	b5f0      	push	{r4, r5, r6, r7, lr}
10064fa8:	b089      	sub	sp, #36	@ 0x24
10064faa:	460e      	mov	r6, r1
10064fac:	f7ff f958 	bl	10064260 <smp_get_remote_device_list_item>
10064fb0:	2800      	cmp	r0, #0
10064fb2:	d025      	beq.n	10065000 <smp_sap_sm2_packet_data_signing_compute+0x5a>
10064fb4:	4605      	mov	r5, r0
10064fb6:	301c      	adds	r0, #28
10064fb8:	a905      	add	r1, sp, #20
10064fba:	9100      	str	r1, [sp, #0]
10064fbc:	f7fe fd04 	bl	100639c8 <smp_crt_generate_csrk>
10064fc0:	8874      	ldrh	r4, [r6, #2]
10064fc2:	462b      	mov	r3, r5
10064fc4:	3368      	adds	r3, #104	@ 0x68
10064fc6:	1d27      	adds	r7, r4, #4
10064fc8:	b2b9      	uxth	r1, r7
10064fca:	2204      	movs	r2, #4
10064fcc:	4630      	mov	r0, r6
10064fce:	f7eb f823 	bl	10050018 <ACL_pkt_write>
10064fd2:	b2fa      	uxtb	r2, r7
10064fd4:	af01      	add	r7, sp, #4
10064fd6:	9800      	ldr	r0, [sp, #0]
10064fd8:	4631      	mov	r1, r6
10064fda:	463b      	mov	r3, r7
10064fdc:	f7fe fd02 	bl	100639e4 <smp_crt_generate_cmac_tag>
10064fe0:	3708      	adds	r7, #8
10064fe2:	4620      	mov	r0, r4
10064fe4:	3008      	adds	r0, #8
10064fe6:	b281      	uxth	r1, r0
10064fe8:	2208      	movs	r2, #8
10064fea:	4630      	mov	r0, r6
10064fec:	463b      	mov	r3, r7
10064fee:	f7eb f813 	bl	10050018 <ACL_pkt_write>
10064ff2:	340c      	adds	r4, #12
10064ff4:	8074      	strh	r4, [r6, #2]
10064ff6:	6ea8      	ldr	r0, [r5, #104]	@ 0x68
10064ff8:	1c40      	adds	r0, r0, #1
10064ffa:	66a8      	str	r0, [r5, #104]	@ 0x68
10064ffc:	2000      	movs	r0, #0
10064ffe:	e000      	b.n	10065002 <smp_sap_sm2_packet_data_signing_compute+0x5c>
10065000:	2002      	movs	r0, #2
10065002:	b009      	add	sp, #36	@ 0x24
10065004:	bdf0      	pop	{r4, r5, r6, r7, pc}

10065006 <smp_sap_sm2_packet_data_signing_validate>:
10065006:	b5f0      	push	{r4, r5, r6, r7, lr}
10065008:	b08d      	sub	sp, #52	@ 0x34
1006500a:	460d      	mov	r5, r1
1006500c:	884f      	ldrh	r7, [r1, #2]
1006500e:	f7ff f927 	bl	10064260 <smp_get_remote_device_list_item>
10065012:	2800      	cmp	r0, #0
10065014:	d005      	beq.n	10065022 <smp_sap_sm2_packet_data_signing_validate+0x1c>
10065016:	4604      	mov	r4, r0
10065018:	7c40      	ldrb	r0, [r0, #17]
1006501a:	0640      	lsls	r0, r0, #25
1006501c:	d403      	bmi.n	10065026 <smp_sap_sm2_packet_data_signing_validate+0x20>
1006501e:	20b1      	movs	r0, #177	@ 0xb1
10065020:	e034      	b.n	1006508c <smp_sap_sm2_packet_data_signing_validate+0x86>
10065022:	2002      	movs	r0, #2
10065024:	e032      	b.n	1006508c <smp_sap_sm2_packet_data_signing_validate+0x86>
10065026:	4621      	mov	r1, r4
10065028:	3148      	adds	r1, #72	@ 0x48
1006502a:	a805      	add	r0, sp, #20
1006502c:	2210      	movs	r2, #16
1006502e:	f7df fcb9 	bl	100449a4 <BLEPLAT_MemCpy>
10065032:	3f08      	subs	r7, #8
10065034:	b2b9      	uxth	r1, r7
10065036:	220c      	movs	r2, #12
10065038:	ae02      	add	r6, sp, #8
1006503a:	4628      	mov	r0, r5
1006503c:	4633      	mov	r3, r6
1006503e:	f7ea ffc9 	bl	1004ffd4 <ACL_pkt_read>
10065042:	7830      	ldrb	r0, [r6, #0]
10065044:	7871      	ldrb	r1, [r6, #1]
10065046:	0209      	lsls	r1, r1, #8
10065048:	1808      	adds	r0, r1, r0
1006504a:	78b1      	ldrb	r1, [r6, #2]
1006504c:	0409      	lsls	r1, r1, #16
1006504e:	1840      	adds	r0, r0, r1
10065050:	78f1      	ldrb	r1, [r6, #3]
10065052:	0609      	lsls	r1, r1, #24
10065054:	1841      	adds	r1, r0, r1
10065056:	6ee0      	ldr	r0, [r4, #108]	@ 0x6c
10065058:	4281      	cmp	r1, r0
1006505a:	d801      	bhi.n	10065060 <smp_sap_sm2_packet_data_signing_validate+0x5a>
1006505c:	1c40      	adds	r0, r0, #1
1006505e:	d110      	bne.n	10065082 <smp_sap_sm2_packet_data_signing_validate+0x7c>
10065060:	9101      	str	r1, [sp, #4]
10065062:	b2fa      	uxtb	r2, r7
10065064:	a805      	add	r0, sp, #20
10065066:	ae09      	add	r6, sp, #36	@ 0x24
10065068:	4629      	mov	r1, r5
1006506a:	4633      	mov	r3, r6
1006506c:	f7fe fcba 	bl	100639e4 <smp_crt_generate_cmac_tag>
10065070:	a802      	add	r0, sp, #8
10065072:	1d00      	adds	r0, r0, #4
10065074:	3608      	adds	r6, #8
10065076:	2208      	movs	r2, #8
10065078:	4631      	mov	r1, r6
1006507a:	f7df fcb3 	bl	100449e4 <BLEPLAT_MemCmp>
1006507e:	2800      	cmp	r0, #0
10065080:	d001      	beq.n	10065086 <smp_sap_sm2_packet_data_signing_validate+0x80>
10065082:	2005      	movs	r0, #5
10065084:	e002      	b.n	1006508c <smp_sap_sm2_packet_data_signing_validate+0x86>
10065086:	9801      	ldr	r0, [sp, #4]
10065088:	66e0      	str	r0, [r4, #108]	@ 0x6c
1006508a:	2000      	movs	r0, #0
1006508c:	b00d      	add	sp, #52	@ 0x34
1006508e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10065090 <nvm_gatt_db_read_init>:
10065090:	4801      	ldr	r0, [pc, #4]	@ (10065098 <__arm_cp.0_0>)
10065092:	2100      	movs	r1, #0
10065094:	7001      	strb	r1, [r0, #0]
10065096:	4770      	bx	lr

10065098 <__arm_cp.0_0>:
10065098:	200008e4 	.word	0x200008e4

1006509c <nvm_gatt_db_read_next_record>:
1006509c:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
1006509e:	4603      	mov	r3, r0
100650a0:	4d06      	ldr	r5, [pc, #24]	@ (100650bc <__arm_cp.1_0>)
100650a2:	7828      	ldrb	r0, [r5, #0]
100650a4:	210c      	movs	r1, #12
100650a6:	9100      	str	r1, [sp, #0]
100650a8:	2401      	movs	r4, #1
100650aa:	2200      	movs	r2, #0
100650ac:	4621      	mov	r1, r4
100650ae:	f7df fbb1 	bl	10044814 <BLEPLAT_NvmGet>
100650b2:	702c      	strb	r4, [r5, #0]
100650b4:	f000 f804 	bl	100650c0 <nvm_convert_bleplat_to_blestack_status>
100650b8:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}
100650ba:	46c0      	nop			@ (mov r8, r8)

100650bc <__arm_cp.1_0>:
100650bc:	200008e4 	.word	0x200008e4

100650c0 <nvm_convert_bleplat_to_blestack_status>:
100650c0:	1cc0      	adds	r0, r0, #3
100650c2:	b2c0      	uxtb	r0, r0
100650c4:	2804      	cmp	r0, #4
100650c6:	d302      	bcc.n	100650ce <nvm_convert_bleplat_to_blestack_status+0xe>
100650c8:	207e      	movs	r0, #126	@ 0x7e
100650ca:	43c0      	mvns	r0, r0
100650cc:	e002      	b.n	100650d4 <nvm_convert_bleplat_to_blestack_status+0x14>
100650ce:	00c1      	lsls	r1, r0, #3
100650d0:	4801      	ldr	r0, [pc, #4]	@ (100650d8 <__arm_cp.2_0>)
100650d2:	40c8      	lsrs	r0, r1
100650d4:	b2c0      	uxtb	r0, r0
100650d6:	4770      	bx	lr

100650d8 <__arm_cp.2_0>:
100650d8:	00b4b7b3 	.word	0x00b4b7b3

100650dc <nvm_gatt_db_read_full_current_record>:
100650dc:	b5e0      	push	{r5, r6, r7, lr}
100650de:	4603      	mov	r3, r0
100650e0:	9100      	str	r1, [sp, #0]
100650e2:	2002      	movs	r0, #2
100650e4:	2101      	movs	r1, #1
100650e6:	220c      	movs	r2, #12
100650e8:	f7df fb94 	bl	10044814 <BLEPLAT_NvmGet>
100650ec:	f7ff ffe8 	bl	100650c0 <nvm_convert_bleplat_to_blestack_status>
100650f0:	bd8c      	pop	{r2, r3, r7, pc}

100650f2 <nvm_gatt_db_update_record>:
100650f2:	b5e0      	push	{r5, r6, r7, lr}
100650f4:	460b      	mov	r3, r1
100650f6:	4601      	mov	r1, r0
100650f8:	8900      	ldrh	r0, [r0, #8]
100650fa:	9000      	str	r0, [sp, #0]
100650fc:	2001      	movs	r0, #1
100650fe:	220c      	movs	r2, #12
10065100:	f7df fb3a 	bl	10044778 <BLEPLAT_NvmAdd>
10065104:	f7ff ffdc 	bl	100650c0 <nvm_convert_bleplat_to_blestack_status>
10065108:	bd8c      	pop	{r2, r3, r7, pc}
	...

1006510c <nvm_sec_db_read_init>:
1006510c:	4801      	ldr	r0, [pc, #4]	@ (10065114 <__arm_cp.5_0>)
1006510e:	2100      	movs	r1, #0
10065110:	7001      	strb	r1, [r0, #0]
10065112:	4770      	bx	lr

10065114 <__arm_cp.5_0>:
10065114:	200008e5 	.word	0x200008e5

10065118 <nvm_sec_db_read_next_record>:
10065118:	b51c      	push	{r2, r3, r4, lr}
1006511a:	4603      	mov	r3, r0
1006511c:	4c06      	ldr	r4, [pc, #24]	@ (10065138 <__arm_cp.6_0>)
1006511e:	7820      	ldrb	r0, [r4, #0]
10065120:	2150      	movs	r1, #80	@ 0x50
10065122:	9100      	str	r1, [sp, #0]
10065124:	2100      	movs	r1, #0
10065126:	460a      	mov	r2, r1
10065128:	f7df fb74 	bl	10044814 <BLEPLAT_NvmGet>
1006512c:	2101      	movs	r1, #1
1006512e:	7021      	strb	r1, [r4, #0]
10065130:	f7ff ffc6 	bl	100650c0 <nvm_convert_bleplat_to_blestack_status>
10065134:	bd1c      	pop	{r2, r3, r4, pc}
10065136:	46c0      	nop			@ (mov r8, r8)

10065138 <__arm_cp.6_0>:
10065138:	200008e5 	.word	0x200008e5

1006513c <nvm_sec_db_add_record>:
1006513c:	b5e0      	push	{r5, r6, r7, lr}
1006513e:	4601      	mov	r1, r0
10065140:	2000      	movs	r0, #0
10065142:	9000      	str	r0, [sp, #0]
10065144:	2250      	movs	r2, #80	@ 0x50
10065146:	4603      	mov	r3, r0
10065148:	f7df fb16 	bl	10044778 <BLEPLAT_NvmAdd>
1006514c:	f7ff ffb8 	bl	100650c0 <nvm_convert_bleplat_to_blestack_status>
10065150:	bd8c      	pop	{r2, r3, r7, pc}

10065152 <nvm_sec_db_get_record_count>:
10065152:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10065154:	2400      	movs	r4, #0
10065156:	4621      	mov	r1, r4
10065158:	4620      	mov	r0, r4
1006515a:	460d      	mov	r5, r1
1006515c:	9400      	str	r4, [sp, #0]
1006515e:	b2c0      	uxtb	r0, r0
10065160:	4621      	mov	r1, r4
10065162:	4622      	mov	r2, r4
10065164:	4623      	mov	r3, r4
10065166:	f7df fb55 	bl	10044814 <BLEPLAT_NvmGet>
1006516a:	1cc2      	adds	r2, r0, #3
1006516c:	1c69      	adds	r1, r5, #1
1006516e:	2001      	movs	r0, #1
10065170:	2a00      	cmp	r2, #0
10065172:	d1f2      	bne.n	1006515a <nvm_sec_db_get_record_count+0x8>
10065174:	b2e8      	uxtb	r0, r5
10065176:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10065178 <nvm_discard_current_record>:
10065178:	b580      	push	{r7, lr}
1006517a:	2002      	movs	r0, #2
1006517c:	f7df fbec 	bl	10044958 <BLEPLAT_NvmDiscard>
10065180:	bd80      	pop	{r7, pc}

10065182 <nvm_dev_id_data_get_record>:
10065182:	b5e0      	push	{r5, r6, r7, lr}
10065184:	4603      	mov	r3, r0
10065186:	2026      	movs	r0, #38	@ 0x26
10065188:	9000      	str	r0, [sp, #0]
1006518a:	2102      	movs	r1, #2
1006518c:	2000      	movs	r0, #0
1006518e:	4602      	mov	r2, r0
10065190:	f7df fb40 	bl	10044814 <BLEPLAT_NvmGet>
10065194:	2800      	cmp	r0, #0
10065196:	d000      	beq.n	1006519a <nvm_dev_id_data_get_record+0x18>
10065198:	2081      	movs	r0, #129	@ 0x81
1006519a:	bd8c      	pop	{r2, r3, r7, pc}

1006519c <nvm_dev_id_data_add_record>:
1006519c:	b5e0      	push	{r5, r6, r7, lr}
1006519e:	4601      	mov	r1, r0
100651a0:	2300      	movs	r3, #0
100651a2:	9300      	str	r3, [sp, #0]
100651a4:	2002      	movs	r0, #2
100651a6:	2226      	movs	r2, #38	@ 0x26
100651a8:	f7df fae6 	bl	10044778 <BLEPLAT_NvmAdd>
100651ac:	2800      	cmp	r0, #0
100651ae:	d000      	beq.n	100651b2 <nvm_dev_id_data_add_record+0x16>
100651b0:	2081      	movs	r0, #129	@ 0x81
100651b2:	bd8c      	pop	{r2, r3, r7, pc}

100651b4 <tsk_init>:
100651b4:	4803      	ldr	r0, [pc, #12]	@ (100651c4 <__arm_cp.0_0>)
100651b6:	6800      	ldr	r0, [r0, #0]
100651b8:	2100      	movs	r1, #0
100651ba:	6081      	str	r1, [r0, #8]
100651bc:	60c1      	str	r1, [r0, #12]
100651be:	6101      	str	r1, [r0, #16]
100651c0:	6001      	str	r1, [r0, #0]
100651c2:	4770      	bx	lr

100651c4 <__arm_cp.0_0>:
100651c4:	200008e8 	.word	0x200008e8

100651c8 <tsk_scheduler>:
100651c8:	b570      	push	{r4, r5, r6, lr}
100651ca:	4d17      	ldr	r5, [pc, #92]	@ (10065228 <__arm_cp.1_0>)
100651cc:	6828      	ldr	r0, [r5, #0]
100651ce:	f3ef 8110 	mrs	r1, PRIMASK
100651d2:	b672      	cpsid	i
100651d4:	6801      	ldr	r1, [r0, #0]
100651d6:	2600      	movs	r6, #0
100651d8:	6006      	str	r6, [r0, #0]
100651da:	6842      	ldr	r2, [r0, #4]
100651dc:	430a      	orrs	r2, r1
100651de:	6042      	str	r2, [r0, #4]
100651e0:	b662      	cpsie	i
100651e2:	682c      	ldr	r4, [r5, #0]
100651e4:	3410      	adds	r4, #16
100651e6:	6820      	ldr	r0, [r4, #0]
100651e8:	2800      	cmp	r0, #0
100651ea:	d00f      	beq.n	1006520c <tsk_scheduler+0x44>
100651ec:	4620      	mov	r0, r4
100651ee:	f000 f85b 	bl	100652a8 <lsbit>
100651f2:	0080      	lsls	r0, r0, #2
100651f4:	6829      	ldr	r1, [r5, #0]
100651f6:	1808      	adds	r0, r1, r0
100651f8:	f3ef 8210 	mrs	r2, PRIMASK
100651fc:	b672      	cpsid	i
100651fe:	6882      	ldr	r2, [r0, #8]
10065200:	6086      	str	r6, [r0, #8]
10065202:	6848      	ldr	r0, [r1, #4]
10065204:	4310      	orrs	r0, r2
10065206:	6048      	str	r0, [r1, #4]
10065208:	b662      	cpsie	i
1006520a:	e7ec      	b.n	100651e6 <tsk_scheduler+0x1e>
1006520c:	6828      	ldr	r0, [r5, #0]
1006520e:	1d04      	adds	r4, r0, #4
10065210:	4d06      	ldr	r5, [pc, #24]	@ (1006522c <__arm_cp.1_1>)
10065212:	6820      	ldr	r0, [r4, #0]
10065214:	2800      	cmp	r0, #0
10065216:	d006      	beq.n	10065226 <tsk_scheduler+0x5e>
10065218:	4620      	mov	r0, r4
1006521a:	f000 f845 	bl	100652a8 <lsbit>
1006521e:	0081      	lsls	r1, r0, #2
10065220:	5869      	ldr	r1, [r5, r1]
10065222:	4788      	blx	r1
10065224:	e7f5      	b.n	10065212 <tsk_scheduler+0x4a>
10065226:	bd70      	pop	{r4, r5, r6, pc}

10065228 <__arm_cp.1_0>:
10065228:	200008e8 	.word	0x200008e8

1006522c <__arm_cp.1_1>:
1006522c:	1006ea60 	.word	0x1006ea60

10065230 <tsk_notify_idx>:
10065230:	211f      	movs	r1, #31
10065232:	4001      	ands	r1, r0
10065234:	2201      	movs	r2, #1
10065236:	408a      	lsls	r2, r1
10065238:	f3ef 8110 	mrs	r1, PRIMASK
1006523c:	b672      	cpsid	i
1006523e:	4904      	ldr	r1, [pc, #16]	@ (10065250 <__arm_cp.3_0>)
10065240:	6809      	ldr	r1, [r1, #0]
10065242:	0940      	lsrs	r0, r0, #5
10065244:	0080      	lsls	r0, r0, #2
10065246:	580b      	ldr	r3, [r1, r0]
10065248:	4313      	orrs	r3, r2
1006524a:	500b      	str	r3, [r1, r0]
1006524c:	b662      	cpsie	i
1006524e:	4770      	bx	lr

10065250 <__arm_cp.3_0>:
10065250:	200008e8 	.word	0x200008e8

10065254 <tsk_wait_resource_idx>:
10065254:	221f      	movs	r2, #31
10065256:	4002      	ands	r2, r0
10065258:	2301      	movs	r3, #1
1006525a:	4093      	lsls	r3, r2
1006525c:	f3ef 8210 	mrs	r2, PRIMASK
10065260:	b672      	cpsid	i
10065262:	0089      	lsls	r1, r1, #2
10065264:	4a05      	ldr	r2, [pc, #20]	@ (1006527c <__arm_cp.4_0>)
10065266:	6812      	ldr	r2, [r2, #0]
10065268:	1851      	adds	r1, r2, r1
1006526a:	0940      	lsrs	r0, r0, #5
1006526c:	0080      	lsls	r0, r0, #2
1006526e:	1808      	adds	r0, r1, r0
10065270:	6881      	ldr	r1, [r0, #8]
10065272:	4319      	orrs	r1, r3
10065274:	6081      	str	r1, [r0, #8]
10065276:	b662      	cpsie	i
10065278:	4770      	bx	lr
1006527a:	46c0      	nop			@ (mov r8, r8)

1006527c <__arm_cp.4_0>:
1006527c:	200008e8 	.word	0x200008e8

10065280 <tsk_signal_resource_idx>:
10065280:	211f      	movs	r1, #31
10065282:	4001      	ands	r1, r0
10065284:	2201      	movs	r2, #1
10065286:	408a      	lsls	r2, r1
10065288:	f3ef 8110 	mrs	r1, PRIMASK
1006528c:	b672      	cpsid	i
1006528e:	4905      	ldr	r1, [pc, #20]	@ (100652a4 <__arm_cp.5_0>)
10065290:	6809      	ldr	r1, [r1, #0]
10065292:	0940      	lsrs	r0, r0, #5
10065294:	0080      	lsls	r0, r0, #2
10065296:	1808      	adds	r0, r1, r0
10065298:	6901      	ldr	r1, [r0, #16]
1006529a:	4311      	orrs	r1, r2
1006529c:	6101      	str	r1, [r0, #16]
1006529e:	b662      	cpsie	i
100652a0:	4770      	bx	lr
100652a2:	46c0      	nop			@ (mov r8, r8)

100652a4 <__arm_cp.5_0>:
100652a4:	200008e8 	.word	0x200008e8

100652a8 <lsbit>:
100652a8:	f3ef 8110 	mrs	r1, PRIMASK
100652ac:	b672      	cpsid	i
100652ae:	6801      	ldr	r1, [r0, #0]
100652b0:	424a      	negs	r2, r1
100652b2:	400a      	ands	r2, r1
100652b4:	4051      	eors	r1, r2
100652b6:	6001      	str	r1, [r0, #0]
100652b8:	4803      	ldr	r0, [pc, #12]	@ (100652c8 <__arm_cp.7_0>)
100652ba:	4350      	muls	r0, r2
100652bc:	0ec0      	lsrs	r0, r0, #27
100652be:	a103      	add	r1, pc, #12	@ (adr r1, 100652cc <__arm_cp.7_0+0x4>)
100652c0:	5c08      	ldrb	r0, [r1, r0]
100652c2:	b662      	cpsie	i
100652c4:	4770      	bx	lr
100652c6:	46c0      	nop			@ (mov r8, r8)

100652c8 <__arm_cp.7_0>:
100652c8:	04653adf 	.word	0x04653adf
100652cc:	06020100 	.word	0x06020100
100652d0:	10070b03 	.word	0x10070b03
100652d4:	150c0e04 	.word	0x150c0e04
100652d8:	1a111708 	.word	0x1a111708
100652dc:	0f0a051f 	.word	0x0f0a051f
100652e0:	1916140d 	.word	0x1916140d
100652e4:	1813091e 	.word	0x1813091e
100652e8:	1b1c121d 	.word	0x1b1c121d

100652ec <CST_init>:
100652ec:	b510      	push	{r4, lr}
100652ee:	2412      	movs	r4, #18
100652f0:	2800      	cmp	r0, #0
100652f2:	d00e      	beq.n	10065312 <CST_init+0x26>
100652f4:	2a00      	cmp	r2, #0
100652f6:	d00c      	beq.n	10065312 <CST_init+0x26>
100652f8:	2b0b      	cmp	r3, #11
100652fa:	d80a      	bhi.n	10065312 <CST_init+0x26>
100652fc:	7041      	strb	r1, [r0, #1]
100652fe:	7003      	strb	r3, [r0, #0]
10065300:	6a03      	ldr	r3, [r0, #32]
10065302:	5459      	strb	r1, [r3, r1]
10065304:	1e49      	subs	r1, r1, #1
10065306:	1c4b      	adds	r3, r1, #1
10065308:	d3fa      	bcc.n	10065300 <CST_init+0x14>
1006530a:	6102      	str	r2, [r0, #16]
1006530c:	2400      	movs	r4, #0
1006530e:	7504      	strb	r4, [r0, #20]
10065310:	61c0      	str	r0, [r0, #28]
10065312:	4620      	mov	r0, r4
10065314:	bd10      	pop	{r4, pc}

10065316 <CST_stop>:
10065316:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10065318:	4605      	mov	r5, r0
1006531a:	2012      	movs	r0, #18
1006531c:	2d00      	cmp	r5, #0
1006531e:	d01b      	beq.n	10065358 <CST_stop+0x42>
10065320:	460c      	mov	r4, r1
10065322:	786a      	ldrb	r2, [r5, #1]
10065324:	428a      	cmp	r2, r1
10065326:	d917      	bls.n	10065358 <CST_stop+0x42>
10065328:	6a2b      	ldr	r3, [r5, #32]
1006532a:	5d19      	ldrb	r1, [r3, r4]
1006532c:	42a1      	cmp	r1, r4
1006532e:	d101      	bne.n	10065334 <CST_stop+0x1e>
10065330:	2000      	movs	r0, #0
10065332:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10065334:	4617      	mov	r7, r2
10065336:	463e      	mov	r6, r7
10065338:	5ddf      	ldrb	r7, [r3, r7]
1006533a:	4297      	cmp	r7, r2
1006533c:	d001      	beq.n	10065342 <CST_stop+0x2c>
1006533e:	42a7      	cmp	r7, r4
10065340:	d1f9      	bne.n	10065336 <CST_stop+0x20>
10065342:	2000      	movs	r0, #0
10065344:	4297      	cmp	r7, r2
10065346:	d005      	beq.n	10065354 <CST_stop+0x3e>
10065348:	5599      	strb	r1, [r3, r6]
1006534a:	4296      	cmp	r6, r2
1006534c:	d102      	bne.n	10065354 <CST_stop+0x3e>
1006534e:	4628      	mov	r0, r5
10065350:	f000 f803 	bl	1006535a <Timer_TryStartFirstActive>
10065354:	6a29      	ldr	r1, [r5, #32]
10065356:	550c      	strb	r4, [r1, r4]
10065358:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1006535a <Timer_TryStartFirstActive>:
1006535a:	b510      	push	{r4, lr}
1006535c:	7842      	ldrb	r2, [r0, #1]
1006535e:	428a      	cmp	r2, r1
10065360:	d107      	bne.n	10065372 <Timer_TryStartFirstActive+0x18>
10065362:	7d01      	ldrb	r1, [r0, #20]
10065364:	2400      	movs	r4, #0
10065366:	2900      	cmp	r1, #0
10065368:	d009      	beq.n	1006537e <Timer_TryStartFirstActive+0x24>
1006536a:	3008      	adds	r0, #8
1006536c:	f7df fc29 	bl	10044bc2 <BLEPLAT_StopTimer>
10065370:	e005      	b.n	1006537e <Timer_TryStartFirstActive+0x24>
10065372:	0049      	lsls	r1, r1, #1
10065374:	6a42      	ldr	r2, [r0, #36]	@ 0x24
10065376:	5e51      	ldrsh	r1, [r2, r1]
10065378:	f000 f86a 	bl	10065450 <Timer_StartFirstActive_sysT>
1006537c:	4604      	mov	r4, r0
1006537e:	4620      	mov	r0, r4
10065380:	bd10      	pop	{r4, pc}

10065382 <CST_start>:
10065382:	b5f0      	push	{r4, r5, r6, r7, lr}
10065384:	b085      	sub	sp, #20
10065386:	2612      	movs	r6, #18
10065388:	2800      	cmp	r0, #0
1006538a:	d05e      	beq.n	1006544a <CST_start+0xc8>
1006538c:	461f      	mov	r7, r3
1006538e:	460d      	mov	r5, r1
10065390:	4604      	mov	r4, r0
10065392:	7843      	ldrb	r3, [r0, #1]
10065394:	428b      	cmp	r3, r1
10065396:	d958      	bls.n	1006544a <CST_start+0xc8>
10065398:	7820      	ldrb	r0, [r4, #0]
1006539a:	2105      	movs	r1, #5
1006539c:	0309      	lsls	r1, r1, #12
1006539e:	4081      	lsls	r1, r0
100653a0:	428f      	cmp	r7, r1
100653a2:	d852      	bhi.n	1006544a <CST_start+0xc8>
100653a4:	9204      	str	r2, [sp, #16]
100653a6:	9302      	str	r3, [sp, #8]
100653a8:	f7df fbf0 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
100653ac:	4602      	mov	r2, r0
100653ae:	7823      	ldrb	r3, [r4, #0]
100653b0:	6a20      	ldr	r0, [r4, #32]
100653b2:	5d40      	ldrb	r0, [r0, r5]
100653b4:	42a8      	cmp	r0, r5
100653b6:	d00c      	beq.n	100653d2 <CST_start+0x50>
100653b8:	9804      	ldr	r0, [sp, #16]
100653ba:	2800      	cmp	r0, #0
100653bc:	d045      	beq.n	1006544a <CST_start+0xc8>
100653be:	4620      	mov	r0, r4
100653c0:	9103      	str	r1, [sp, #12]
100653c2:	4629      	mov	r1, r5
100653c4:	9304      	str	r3, [sp, #16]
100653c6:	4616      	mov	r6, r2
100653c8:	f7ff ffa5 	bl	10065316 <CST_stop>
100653cc:	9903      	ldr	r1, [sp, #12]
100653ce:	4632      	mov	r2, r6
100653d0:	9b04      	ldr	r3, [sp, #16]
100653d2:	2033      	movs	r0, #51	@ 0x33
100653d4:	4378      	muls	r0, r7
100653d6:	460e      	mov	r6, r1
100653d8:	0a01      	lsrs	r1, r0, #8
100653da:	1808      	adds	r0, r1, r0
100653dc:	0c01      	lsrs	r1, r0, #16
100653de:	1808      	adds	r0, r1, r0
100653e0:	0771      	lsls	r1, r6, #29
100653e2:	08d2      	lsrs	r2, r2, #3
100653e4:	1851      	adds	r1, r2, r1
100653e6:	1842      	adds	r2, r0, r1
100653e8:	1d58      	adds	r0, r3, #5
100653ea:	b2c0      	uxtb	r0, r0
100653ec:	40c2      	lsrs	r2, r0
100653ee:	9501      	str	r5, [sp, #4]
100653f0:	0068      	lsls	r0, r5, #1
100653f2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
100653f4:	9204      	str	r2, [sp, #16]
100653f6:	520a      	strh	r2, [r1, r0]
100653f8:	f7df fbc8 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
100653fc:	08c0      	lsrs	r0, r0, #3
100653fe:	9003      	str	r0, [sp, #12]
10065400:	7862      	ldrb	r2, [r4, #1]
10065402:	6a20      	ldr	r0, [r4, #32]
10065404:	4617      	mov	r7, r2
10065406:	463b      	mov	r3, r7
10065408:	5dc7      	ldrb	r7, [r0, r7]
1006540a:	4297      	cmp	r7, r2
1006540c:	d00d      	beq.n	1006542a <CST_start+0xa8>
1006540e:	007d      	lsls	r5, r7, #1
10065410:	6a66      	ldr	r6, [r4, #36]	@ 0x24
10065412:	5b75      	ldrh	r5, [r6, r5]
10065414:	7826      	ldrb	r6, [r4, #0]
10065416:	1d76      	adds	r6, r6, #5
10065418:	9903      	ldr	r1, [sp, #12]
1006541a:	40f1      	lsrs	r1, r6
1006541c:	1a6d      	subs	r5, r5, r1
1006541e:	b22d      	sxth	r5, r5
10065420:	9e04      	ldr	r6, [sp, #16]
10065422:	1a71      	subs	r1, r6, r1
10065424:	b209      	sxth	r1, r1
10065426:	428d      	cmp	r5, r1
10065428:	dded      	ble.n	10065406 <CST_start+0x84>
1006542a:	5cc1      	ldrb	r1, [r0, r3]
1006542c:	9a01      	ldr	r2, [sp, #4]
1006542e:	5481      	strb	r1, [r0, r2]
10065430:	6a20      	ldr	r0, [r4, #32]
10065432:	54c2      	strb	r2, [r0, r3]
10065434:	9802      	ldr	r0, [sp, #8]
10065436:	4283      	cmp	r3, r0
10065438:	d106      	bne.n	10065448 <CST_start+0xc6>
1006543a:	9804      	ldr	r0, [sp, #16]
1006543c:	b201      	sxth	r1, r0
1006543e:	4620      	mov	r0, r4
10065440:	f000 f806 	bl	10065450 <Timer_StartFirstActive_sysT>
10065444:	4606      	mov	r6, r0
10065446:	e000      	b.n	1006544a <CST_start+0xc8>
10065448:	2600      	movs	r6, #0
1006544a:	4630      	mov	r0, r6
1006544c:	b005      	add	sp, #20
1006544e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10065450 <Timer_StartFirstActive_sysT>:
10065450:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10065452:	9101      	str	r1, [sp, #4]
10065454:	4604      	mov	r4, r0
10065456:	4607      	mov	r7, r0
10065458:	3708      	adds	r7, #8
1006545a:	f7df fb97 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1006545e:	9002      	str	r0, [sp, #8]
10065460:	460d      	mov	r5, r1
10065462:	7826      	ldrb	r6, [r4, #0]
10065464:	7d20      	ldrb	r0, [r4, #20]
10065466:	2800      	cmp	r0, #0
10065468:	d004      	beq.n	10065474 <Timer_StartFirstActive_sysT+0x24>
1006546a:	4638      	mov	r0, r7
1006546c:	f7df fba9 	bl	10044bc2 <BLEPLAT_StopTimer>
10065470:	7822      	ldrb	r2, [r4, #0]
10065472:	e000      	b.n	10065476 <Timer_StartFirstActive_sysT+0x26>
10065474:	4632      	mov	r2, r6
10065476:	1d70      	adds	r0, r6, #5
10065478:	9c02      	ldr	r4, [sp, #8]
1006547a:	08e1      	lsrs	r1, r4, #3
1006547c:	40c1      	lsrs	r1, r0
1006547e:	9801      	ldr	r0, [sp, #4]
10065480:	1a40      	subs	r0, r0, r1
10065482:	b200      	sxth	r0, r0
10065484:	1e40      	subs	r0, r0, #1
10065486:	17c1      	asrs	r1, r0, #31
10065488:	3208      	adds	r2, #8
1006548a:	f7db f84f 	bl	1004052c <__aeabi_llsl>
1006548e:	1902      	adds	r2, r0, r4
10065490:	414d      	adcs	r5, r1
10065492:	4638      	mov	r0, r7
10065494:	462b      	mov	r3, r5
10065496:	f7df fb83 	bl	10044ba0 <BLEPLAT_StartTimer>
1006549a:	b2c0      	uxtb	r0, r0
1006549c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

1006549e <cst_sharedCallback>:
1006549e:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100654a0:	9102      	str	r1, [sp, #8]
100654a2:	4605      	mov	r5, r0
100654a4:	7847      	ldrb	r7, [r0, #1]
100654a6:	6a00      	ldr	r0, [r0, #32]
100654a8:	5dc4      	ldrb	r4, [r0, r7]
100654aa:	f7df fb6f 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
100654ae:	08c0      	lsrs	r0, r0, #3
100654b0:	9001      	str	r0, [sp, #4]
100654b2:	4620      	mov	r0, r4
100654b4:	b2c2      	uxtb	r2, r0
100654b6:	42ba      	cmp	r2, r7
100654b8:	d00d      	beq.n	100654d6 <cst_sharedCallback+0x38>
100654ba:	0053      	lsls	r3, r2, #1
100654bc:	6a6e      	ldr	r6, [r5, #36]	@ 0x24
100654be:	5af3      	ldrh	r3, [r6, r3]
100654c0:	782e      	ldrb	r6, [r5, #0]
100654c2:	1d76      	adds	r6, r6, #5
100654c4:	9901      	ldr	r1, [sp, #4]
100654c6:	40f1      	lsrs	r1, r6
100654c8:	1a59      	subs	r1, r3, r1
100654ca:	b209      	sxth	r1, r1
100654cc:	2901      	cmp	r1, #1
100654ce:	dc03      	bgt.n	100654d8 <cst_sharedCallback+0x3a>
100654d0:	6a28      	ldr	r0, [r5, #32]
100654d2:	5c80      	ldrb	r0, [r0, r2]
100654d4:	e7ee      	b.n	100654b4 <cst_sharedCallback+0x16>
100654d6:	4638      	mov	r0, r7
100654d8:	6a29      	ldr	r1, [r5, #32]
100654da:	55c8      	strb	r0, [r1, r7]
100654dc:	b2c6      	uxtb	r6, r0
100654de:	4628      	mov	r0, r5
100654e0:	4631      	mov	r1, r6
100654e2:	f7ff ff3a 	bl	1006535a <Timer_TryStartFirstActive>
100654e6:	b2e0      	uxtb	r0, r4
100654e8:	42b0      	cmp	r0, r6
100654ea:	d006      	beq.n	100654fa <cst_sharedCallback+0x5c>
100654ec:	6a29      	ldr	r1, [r5, #32]
100654ee:	5c0f      	ldrb	r7, [r1, r0]
100654f0:	540c      	strb	r4, [r1, r0]
100654f2:	9902      	ldr	r1, [sp, #8]
100654f4:	4788      	blx	r1
100654f6:	463c      	mov	r4, r7
100654f8:	e7f5      	b.n	100654e6 <cst_sharedCallback+0x48>
100654fa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100654fc <copy_swap_buffer>:
100654fc:	b5f0      	push	{r4, r5, r6, r7, lr}
100654fe:	2a00      	cmp	r2, #0
10065500:	d00b      	beq.n	1006551a <copy_swap_buffer+0x1e>
10065502:	2400      	movs	r4, #0
10065504:	43e5      	mvns	r5, r4
10065506:	2b00      	cmp	r3, #0
10065508:	4626      	mov	r6, r4
1006550a:	d000      	beq.n	1006550e <copy_swap_buffer+0x12>
1006550c:	1956      	adds	r6, r2, r5
1006550e:	5d0f      	ldrb	r7, [r1, r4]
10065510:	5587      	strb	r7, [r0, r6]
10065512:	1e6d      	subs	r5, r5, #1
10065514:	1c64      	adds	r4, r4, #1
10065516:	42a2      	cmp	r2, r4
10065518:	d1f5      	bne.n	10065506 <copy_swap_buffer+0xa>
1006551a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006551c <is_Buffer_All_Set_To>:
1006551c:	b570      	push	{r4, r5, r6, lr}
1006551e:	4603      	mov	r3, r0
10065520:	2001      	movs	r0, #1
10065522:	2900      	cmp	r1, #0
10065524:	d009      	beq.n	1006553a <is_Buffer_All_Set_To+0x1e>
10065526:	2400      	movs	r4, #0
10065528:	4626      	mov	r6, r4
1006552a:	4625      	mov	r5, r4
1006552c:	5d96      	ldrb	r6, [r2, r6]
1006552e:	429e      	cmp	r6, r3
10065530:	d104      	bne.n	1006553c <is_Buffer_All_Set_To+0x20>
10065532:	1c6d      	adds	r5, r5, #1
10065534:	b2ee      	uxtb	r6, r5
10065536:	428e      	cmp	r6, r1
10065538:	d3f8      	bcc.n	1006552c <is_Buffer_All_Set_To+0x10>
1006553a:	bd70      	pop	{r4, r5, r6, pc}
1006553c:	4620      	mov	r0, r4
1006553e:	bd70      	pop	{r4, r5, r6, pc}

10065540 <char_copy>:
10065540:	2a00      	cmp	r2, #0
10065542:	d005      	beq.n	10065550 <char_copy+0x10>
10065544:	7803      	ldrb	r3, [r0, #0]
10065546:	700b      	strb	r3, [r1, #0]
10065548:	1e52      	subs	r2, r2, #1
1006554a:	1c49      	adds	r1, r1, #1
1006554c:	1c40      	adds	r0, r0, #1
1006554e:	e7f7      	b.n	10065540 <char_copy>
10065550:	4770      	bx	lr

10065552 <UUID_cmp>:
10065552:	b580      	push	{r7, lr}
10065554:	7c02      	ldrb	r2, [r0, #16]
10065556:	7c0b      	ldrb	r3, [r1, #16]
10065558:	429a      	cmp	r2, r3
1006555a:	d106      	bne.n	1006556a <UUID_cmp+0x18>
1006555c:	2a20      	cmp	r2, #32
1006555e:	d007      	beq.n	10065570 <UUID_cmp+0x1e>
10065560:	2a10      	cmp	r2, #16
10065562:	d109      	bne.n	10065578 <UUID_cmp+0x26>
10065564:	8989      	ldrh	r1, [r1, #12]
10065566:	8980      	ldrh	r0, [r0, #12]
10065568:	e008      	b.n	1006557c <UUID_cmp+0x2a>
1006556a:	2000      	movs	r0, #0
1006556c:	43c0      	mvns	r0, r0
1006556e:	bd80      	pop	{r7, pc}
10065570:	2210      	movs	r2, #16
10065572:	f7df fa37 	bl	100449e4 <BLEPLAT_MemCmp>
10065576:	bd80      	pop	{r7, pc}
10065578:	68c9      	ldr	r1, [r1, #12]
1006557a:	68c0      	ldr	r0, [r0, #12]
1006557c:	1a40      	subs	r0, r0, r1
1006557e:	bd80      	pop	{r7, pc}

10065580 <UUID_cmp_128bits>:
10065580:	b570      	push	{r4, r5, r6, lr}
10065582:	b08a      	sub	sp, #40	@ 0x28
10065584:	460c      	mov	r4, r1
10065586:	4601      	mov	r1, r0
10065588:	ad05      	add	r5, sp, #20
1006558a:	2614      	movs	r6, #20
1006558c:	4628      	mov	r0, r5
1006558e:	4632      	mov	r2, r6
10065590:	f7df fa08 	bl	100449a4 <BLEPLAT_MemCpy>
10065594:	4668      	mov	r0, sp
10065596:	4621      	mov	r1, r4
10065598:	4632      	mov	r2, r6
1006559a:	f7df fa03 	bl	100449a4 <BLEPLAT_MemCpy>
1006559e:	7c28      	ldrb	r0, [r5, #16]
100655a0:	2880      	cmp	r0, #128	@ 0x80
100655a2:	d007      	beq.n	100655b4 <UUID_cmp_128bits+0x34>
100655a4:	ac05      	add	r4, sp, #20
100655a6:	490d      	ldr	r1, [pc, #52]	@ (100655dc <__arm_cp.1_0>)
100655a8:	220c      	movs	r2, #12
100655aa:	4620      	mov	r0, r4
100655ac:	f7df f9fa 	bl	100449a4 <BLEPLAT_MemCpy>
100655b0:	2000      	movs	r0, #0
100655b2:	81e0      	strh	r0, [r4, #14]
100655b4:	4668      	mov	r0, sp
100655b6:	7c00      	ldrb	r0, [r0, #16]
100655b8:	2880      	cmp	r0, #128	@ 0x80
100655ba:	d007      	beq.n	100655cc <UUID_cmp_128bits+0x4c>
100655bc:	466c      	mov	r4, sp
100655be:	4907      	ldr	r1, [pc, #28]	@ (100655dc <__arm_cp.1_0>)
100655c0:	220c      	movs	r2, #12
100655c2:	4620      	mov	r0, r4
100655c4:	f7df f9ee 	bl	100449a4 <BLEPLAT_MemCpy>
100655c8:	2000      	movs	r0, #0
100655ca:	81e0      	strh	r0, [r4, #14]
100655cc:	a805      	add	r0, sp, #20
100655ce:	4669      	mov	r1, sp
100655d0:	2210      	movs	r2, #16
100655d2:	f7df fa07 	bl	100449e4 <BLEPLAT_MemCmp>
100655d6:	b00a      	add	sp, #40	@ 0x28
100655d8:	bd70      	pop	{r4, r5, r6, pc}
100655da:	46c0      	nop			@ (mov r8, r8)

100655dc <__arm_cp.1_0>:
100655dc:	1006eab8 	.word	0x1006eab8

100655e0 <UUID_write_to_flat>:
100655e0:	b510      	push	{r4, lr}
100655e2:	460a      	mov	r2, r1
100655e4:	4601      	mov	r1, r0
100655e6:	7c00      	ldrb	r0, [r0, #16]
100655e8:	2820      	cmp	r0, #32
100655ea:	d004      	beq.n	100655f6 <UUID_write_to_flat+0x16>
100655ec:	2810      	cmp	r0, #16
100655ee:	d105      	bne.n	100655fc <UUID_write_to_flat+0x1c>
100655f0:	310c      	adds	r1, #12
100655f2:	2402      	movs	r4, #2
100655f4:	e003      	b.n	100655fe <UUID_write_to_flat+0x1e>
100655f6:	310c      	adds	r1, #12
100655f8:	2404      	movs	r4, #4
100655fa:	e000      	b.n	100655fe <UUID_write_to_flat+0x1e>
100655fc:	2410      	movs	r4, #16
100655fe:	4610      	mov	r0, r2
10065600:	4622      	mov	r2, r4
10065602:	f7df f9cf 	bl	100449a4 <BLEPLAT_MemCpy>
10065606:	4620      	mov	r0, r4
10065608:	bd10      	pop	{r4, pc}

1006560a <UUID_get_value_p>:
1006560a:	7c01      	ldrb	r1, [r0, #16]
1006560c:	2980      	cmp	r1, #128	@ 0x80
1006560e:	d000      	beq.n	10065612 <UUID_get_value_p+0x8>
10065610:	300c      	adds	r0, #12
10065612:	4770      	bx	lr

10065614 <ACL_list_init>:
10065614:	2100      	movs	r1, #0
10065616:	6001      	str	r1, [r0, #0]
10065618:	6040      	str	r0, [r0, #4]
1006561a:	4770      	bx	lr

1006561c <ACL_list_insert_tail>:
1006561c:	2200      	movs	r2, #0
1006561e:	61ca      	str	r2, [r1, #28]
10065620:	6842      	ldr	r2, [r0, #4]
10065622:	6011      	str	r1, [r2, #0]
10065624:	311c      	adds	r1, #28
10065626:	6041      	str	r1, [r0, #4]
10065628:	4770      	bx	lr

1006562a <ACL_list_insert_head>:
1006562a:	6802      	ldr	r2, [r0, #0]
1006562c:	61ca      	str	r2, [r1, #28]
1006562e:	2a00      	cmp	r2, #0
10065630:	d102      	bne.n	10065638 <ACL_list_insert_head+0xe>
10065632:	460a      	mov	r2, r1
10065634:	321c      	adds	r2, #28
10065636:	6042      	str	r2, [r0, #4]
10065638:	6001      	str	r1, [r0, #0]
1006563a:	4770      	bx	lr

1006563c <ACL_list_remove>:
1006563c:	6803      	ldr	r3, [r0, #0]
1006563e:	428b      	cmp	r3, r1
10065640:	d009      	beq.n	10065656 <ACL_list_remove+0x1a>
10065642:	461a      	mov	r2, r3
10065644:	69db      	ldr	r3, [r3, #28]
10065646:	428b      	cmp	r3, r1
10065648:	d1fb      	bne.n	10065642 <ACL_list_remove+0x6>
1006564a:	69cb      	ldr	r3, [r1, #28]
1006564c:	61d3      	str	r3, [r2, #28]
1006564e:	2b00      	cmp	r3, #0
10065650:	d107      	bne.n	10065662 <ACL_list_remove+0x26>
10065652:	321c      	adds	r2, #28
10065654:	e004      	b.n	10065660 <ACL_list_remove+0x24>
10065656:	69ca      	ldr	r2, [r1, #28]
10065658:	6002      	str	r2, [r0, #0]
1006565a:	2a00      	cmp	r2, #0
1006565c:	d101      	bne.n	10065662 <ACL_list_remove+0x26>
1006565e:	4602      	mov	r2, r0
10065660:	6042      	str	r2, [r0, #4]
10065662:	2000      	movs	r0, #0
10065664:	61c8      	str	r0, [r1, #28]
10065666:	4770      	bx	lr

10065668 <ACL_list_remove_head>:
10065668:	4601      	mov	r1, r0
1006566a:	6800      	ldr	r0, [r0, #0]
1006566c:	69c2      	ldr	r2, [r0, #28]
1006566e:	600a      	str	r2, [r1, #0]
10065670:	2a00      	cmp	r2, #0
10065672:	d100      	bne.n	10065676 <ACL_list_remove_head+0xe>
10065674:	6049      	str	r1, [r1, #4]
10065676:	2100      	movs	r1, #0
10065678:	61c1      	str	r1, [r0, #28]
1006567a:	4770      	bx	lr

1006567c <ACL_list_get_pckt_count>:
1006567c:	2100      	movs	r1, #0
1006567e:	6800      	ldr	r0, [r0, #0]
10065680:	2800      	cmp	r0, #0
10065682:	d002      	beq.n	1006568a <ACL_list_get_pckt_count+0xe>
10065684:	301c      	adds	r0, #28
10065686:	1c49      	adds	r1, r1, #1
10065688:	e7f9      	b.n	1006567e <ACL_list_get_pckt_count+0x2>
1006568a:	b288      	uxth	r0, r1
1006568c:	4770      	bx	lr
	...

10065690 <addr8_list_search>:
10065690:	b5f0      	push	{r4, r5, r6, r7, lr}
10065692:	b083      	sub	sp, #12
10065694:	9202      	str	r2, [sp, #8]
10065696:	9d08      	ldr	r5, [sp, #32]
10065698:	2d00      	cmp	r5, #0
1006569a:	d101      	bne.n	100656a0 <addr8_list_search+0x10>
1006569c:	462e      	mov	r6, r5
1006569e:	e002      	b.n	100656a6 <addr8_list_search+0x16>
100656a0:	24ff      	movs	r4, #255	@ 0xff
100656a2:	0626      	lsls	r6, r4, #24
100656a4:	401e      	ands	r6, r3
100656a6:	060c      	lsls	r4, r1, #24
100656a8:	9c09      	ldr	r4, [sp, #36]	@ 0x24
100656aa:	d02a      	beq.n	10065702 <addr8_list_search+0x72>
100656ac:	9501      	str	r5, [sp, #4]
100656ae:	9400      	str	r4, [sp, #0]
100656b0:	4a18      	ldr	r2, [pc, #96]	@ (10065714 <__arm_cp.0_0>)
100656b2:	4013      	ands	r3, r2
100656b4:	431e      	orrs	r6, r3
100656b6:	1e4a      	subs	r2, r1, #1
100656b8:	b2c9      	uxtb	r1, r1
100656ba:	0849      	lsrs	r1, r1, #1
100656bc:	2400      	movs	r4, #0
100656be:	b2cd      	uxtb	r5, r1
100656c0:	00ed      	lsls	r5, r5, #3
100656c2:	1947      	adds	r7, r0, r5
100656c4:	687f      	ldr	r7, [r7, #4]
100656c6:	9b01      	ldr	r3, [sp, #4]
100656c8:	2b00      	cmp	r3, #0
100656ca:	d101      	bne.n	100656d0 <addr8_list_search+0x40>
100656cc:	4b11      	ldr	r3, [pc, #68]	@ (10065714 <__arm_cp.0_0>)
100656ce:	401f      	ands	r7, r3
100656d0:	5945      	ldr	r5, [r0, r5]
100656d2:	9b02      	ldr	r3, [sp, #8]
100656d4:	42ab      	cmp	r3, r5
100656d6:	d101      	bne.n	100656dc <addr8_list_search+0x4c>
100656d8:	42be      	cmp	r6, r7
100656da:	d015      	beq.n	10065708 <addr8_list_search+0x78>
100656dc:	42be      	cmp	r6, r7
100656de:	d803      	bhi.n	100656e8 <addr8_list_search+0x58>
100656e0:	d104      	bne.n	100656ec <addr8_list_search+0x5c>
100656e2:	9b02      	ldr	r3, [sp, #8]
100656e4:	42ab      	cmp	r3, r5
100656e6:	d901      	bls.n	100656ec <addr8_list_search+0x5c>
100656e8:	1c4c      	adds	r4, r1, #1
100656ea:	e000      	b.n	100656ee <addr8_list_search+0x5e>
100656ec:	1e4a      	subs	r2, r1, #1
100656ee:	1b11      	subs	r1, r2, r4
100656f0:	b2c9      	uxtb	r1, r1
100656f2:	1c4d      	adds	r5, r1, #1
100656f4:	b2ef      	uxtb	r7, r5
100656f6:	0879      	lsrs	r1, r7, #1
100656f8:	1909      	adds	r1, r1, r4
100656fa:	42af      	cmp	r7, r5
100656fc:	d0df      	beq.n	100656be <addr8_list_search+0x2e>
100656fe:	2000      	movs	r0, #0
10065700:	e003      	b.n	1006570a <addr8_list_search+0x7a>
10065702:	2100      	movs	r1, #0
10065704:	4608      	mov	r0, r1
10065706:	e001      	b.n	1006570c <addr8_list_search+0x7c>
10065708:	2001      	movs	r0, #1
1006570a:	9c00      	ldr	r4, [sp, #0]
1006570c:	7021      	strb	r1, [r4, #0]
1006570e:	b003      	add	sp, #12
10065710:	bdf0      	pop	{r4, r5, r6, r7, pc}
10065712:	46c0      	nop			@ (mov r8, r8)

10065714 <__arm_cp.0_0>:
10065714:	00ffffff 	.word	0x00ffffff

10065718 <addr8_list_add>:
10065718:	b5f0      	push	{r4, r5, r6, r7, lr}
1006571a:	b089      	sub	sp, #36	@ 0x24
1006571c:	4615      	mov	r5, r2
1006571e:	460f      	mov	r7, r1
10065720:	4604      	mov	r4, r0
10065722:	7906      	ldrb	r6, [r0, #4]
10065724:	6800      	ldr	r0, [r0, #0]
10065726:	6861      	ldr	r1, [r4, #4]
10065728:	aa08      	add	r2, sp, #32
1006572a:	9300      	str	r3, [sp, #0]
1006572c:	9201      	str	r2, [sp, #4]
1006572e:	463a      	mov	r2, r7
10065730:	462b      	mov	r3, r5
10065732:	f7ff ffad 	bl	10065690 <addr8_list_search>
10065736:	2100      	movs	r1, #0
10065738:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
1006573a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
1006573c:	2800      	cmp	r0, #0
1006573e:	9207      	str	r2, [sp, #28]
10065740:	d126      	bne.n	10065790 <addr8_list_add+0x78>
10065742:	9706      	str	r7, [sp, #24]
10065744:	7967      	ldrb	r7, [r4, #5]
10065746:	42be      	cmp	r6, r7
10065748:	d222      	bcs.n	10065790 <addr8_list_add+0x78>
1006574a:	9302      	str	r3, [sp, #8]
1006574c:	9003      	str	r0, [sp, #12]
1006574e:	9504      	str	r5, [sp, #16]
10065750:	a908      	add	r1, sp, #32
10065752:	7808      	ldrb	r0, [r1, #0]
10065754:	9605      	str	r6, [sp, #20]
10065756:	4286      	cmp	r6, r0
10065758:	d00d      	beq.n	10065776 <addr8_list_add+0x5e>
1006575a:	9f05      	ldr	r7, [sp, #20]
1006575c:	6822      	ldr	r2, [r4, #0]
1006575e:	b2fd      	uxtb	r5, r7
10065760:	00ed      	lsls	r5, r5, #3
10065762:	1956      	adds	r6, r2, r5
10065764:	4633      	mov	r3, r6
10065766:	3b08      	subs	r3, #8
10065768:	cb0a      	ldmia	r3, {r1, r3}
1006576a:	5151      	str	r1, [r2, r5]
1006576c:	6073      	str	r3, [r6, #4]
1006576e:	1e7f      	subs	r7, r7, #1
10065770:	b2f9      	uxtb	r1, r7
10065772:	4281      	cmp	r1, r0
10065774:	d1f2      	bne.n	1006575c <addr8_list_add+0x44>
10065776:	6821      	ldr	r1, [r4, #0]
10065778:	00c0      	lsls	r0, r0, #3
1006577a:	9a06      	ldr	r2, [sp, #24]
1006577c:	500a      	str	r2, [r1, r0]
1006577e:	1808      	adds	r0, r1, r0
10065780:	9904      	ldr	r1, [sp, #16]
10065782:	6041      	str	r1, [r0, #4]
10065784:	9805      	ldr	r0, [sp, #20]
10065786:	1c40      	adds	r0, r0, #1
10065788:	7120      	strb	r0, [r4, #4]
1006578a:	2101      	movs	r1, #1
1006578c:	9803      	ldr	r0, [sp, #12]
1006578e:	9b02      	ldr	r3, [sp, #8]
10065790:	9a08      	ldr	r2, [sp, #32]
10065792:	9c07      	ldr	r4, [sp, #28]
10065794:	7022      	strb	r2, [r4, #0]
10065796:	7018      	strb	r0, [r3, #0]
10065798:	4608      	mov	r0, r1
1006579a:	b009      	add	sp, #36	@ 0x24
1006579c:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006579e <addr8_list_remove_by_addr>:
1006579e:	b5f0      	push	{r4, r5, r6, r7, lr}
100657a0:	b087      	sub	sp, #28
100657a2:	460f      	mov	r7, r1
100657a4:	4601      	mov	r1, r0
100657a6:	7900      	ldrb	r0, [r0, #4]
100657a8:	2600      	movs	r6, #0
100657aa:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
100657ac:	2800      	cmp	r0, #0
100657ae:	d02f      	beq.n	10065810 <addr8_list_remove_by_addr+0x72>
100657b0:	9003      	str	r0, [sp, #12]
100657b2:	6808      	ldr	r0, [r1, #0]
100657b4:	9104      	str	r1, [sp, #16]
100657b6:	6849      	ldr	r1, [r1, #4]
100657b8:	9205      	str	r2, [sp, #20]
100657ba:	ad06      	add	r5, sp, #24
100657bc:	9300      	str	r3, [sp, #0]
100657be:	9501      	str	r5, [sp, #4]
100657c0:	463a      	mov	r2, r7
100657c2:	9b05      	ldr	r3, [sp, #20]
100657c4:	f7ff ff64 	bl	10065690 <addr8_list_search>
100657c8:	2800      	cmp	r0, #0
100657ca:	d021      	beq.n	10065810 <addr8_list_remove_by_addr+0x72>
100657cc:	9002      	str	r0, [sp, #8]
100657ce:	9405      	str	r4, [sp, #20]
100657d0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100657d2:	9c04      	ldr	r4, [sp, #16]
100657d4:	6823      	ldr	r3, [r4, #0]
100657d6:	a906      	add	r1, sp, #24
100657d8:	7809      	ldrb	r1, [r1, #0]
100657da:	00cd      	lsls	r5, r1, #3
100657dc:	195b      	adds	r3, r3, r5
100657de:	79db      	ldrb	r3, [r3, #7]
100657e0:	7013      	strb	r3, [r2, #0]
100657e2:	9803      	ldr	r0, [sp, #12]
100657e4:	1e40      	subs	r0, r0, #1
100657e6:	9003      	str	r0, [sp, #12]
100657e8:	b2c0      	uxtb	r0, r0
100657ea:	4281      	cmp	r1, r0
100657ec:	4623      	mov	r3, r4
100657ee:	d00b      	beq.n	10065808 <addr8_list_remove_by_addr+0x6a>
100657f0:	681d      	ldr	r5, [r3, #0]
100657f2:	b2ce      	uxtb	r6, r1
100657f4:	00f6      	lsls	r6, r6, #3
100657f6:	19af      	adds	r7, r5, r6
100657f8:	68ba      	ldr	r2, [r7, #8]
100657fa:	68fc      	ldr	r4, [r7, #12]
100657fc:	51aa      	str	r2, [r5, r6]
100657fe:	607c      	str	r4, [r7, #4]
10065800:	1c49      	adds	r1, r1, #1
10065802:	b2ca      	uxtb	r2, r1
10065804:	4282      	cmp	r2, r0
10065806:	d1f3      	bne.n	100657f0 <addr8_list_remove_by_addr+0x52>
10065808:	9803      	ldr	r0, [sp, #12]
1006580a:	7118      	strb	r0, [r3, #4]
1006580c:	9e02      	ldr	r6, [sp, #8]
1006580e:	9c05      	ldr	r4, [sp, #20]
10065810:	7026      	strb	r6, [r4, #0]
10065812:	b007      	add	sp, #28
10065814:	bdf0      	pop	{r4, r5, r6, r7, pc}

10065816 <addr8_list_clear>:
10065816:	2100      	movs	r1, #0
10065818:	7101      	strb	r1, [r0, #4]
1006581a:	4770      	bx	lr

1006581c <BLEPLAT_aes128_encrypt>:
1006581c:	b580      	push	{r7, lr}
1006581e:	f7df f90e 	bl	10044a3e <BLEPLAT_AesEcbEncrypt>
10065822:	bd80      	pop	{r7, pc}

10065824 <Hal_Get_Random_Number>:
10065824:	b51c      	push	{r2, r3, r4, lr}
10065826:	ac01      	add	r4, sp, #4
10065828:	4620      	mov	r0, r4
1006582a:	f7df f947 	bl	10044abc <BLEPLAT_RngGetRandom16>
1006582e:	8820      	ldrh	r0, [r4, #0]
10065830:	bd1c      	pop	{r2, r3, r4, pc}

10065832 <Hal_Get_Random_Number32>:
10065832:	b5e0      	push	{r5, r6, r7, lr}
10065834:	a801      	add	r0, sp, #4
10065836:	f7df f94d 	bl	10044ad4 <BLEPLAT_RngGetRandom32>
1006583a:	9801      	ldr	r0, [sp, #4]
1006583c:	bd8c      	pop	{r2, r3, r7, pc}

1006583e <HAL_Generate_Random_Bytes_To>:
1006583e:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10065840:	460c      	mov	r4, r1
10065842:	4605      	mov	r5, r0
10065844:	2000      	movs	r0, #0
10065846:	b2c6      	uxtb	r6, r0
10065848:	42a6      	cmp	r6, r4
1006584a:	d20e      	bcs.n	1006586a <HAL_Generate_Random_Bytes_To+0x2c>
1006584c:	2000      	movs	r0, #0
1006584e:	f7ff ffe9 	bl	10065824 <Hal_Get_Random_Number>
10065852:	55a8      	strb	r0, [r5, r6]
10065854:	a901      	add	r1, sp, #4
10065856:	7008      	strb	r0, [r1, #0]
10065858:	0a00      	lsrs	r0, r0, #8
1006585a:	4669      	mov	r1, sp
1006585c:	7008      	strb	r0, [r1, #0]
1006585e:	1c71      	adds	r1, r6, #1
10065860:	42a1      	cmp	r1, r4
10065862:	d200      	bcs.n	10065866 <HAL_Generate_Random_Bytes_To+0x28>
10065864:	5468      	strb	r0, [r5, r1]
10065866:	1cb0      	adds	r0, r6, #2
10065868:	e7ed      	b.n	10065846 <HAL_Generate_Random_Bytes_To+0x8>
1006586a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

1006586c <IDD_Initialize_Device_IDs>:
1006586c:	b5f0      	push	{r4, r5, r6, r7, lr}
1006586e:	b095      	sub	sp, #84	@ 0x54
10065870:	4839      	ldr	r0, [pc, #228]	@ (10065958 <__arm_cp.0_0>)
10065872:	6800      	ldr	r0, [r0, #0]
10065874:	9000      	str	r0, [sp, #0]
10065876:	a80b      	add	r0, sp, #44	@ 0x2c
10065878:	f7ff fc83 	bl	10065182 <nvm_dev_id_data_get_record>
1006587c:	2800      	cmp	r0, #0
1006587e:	d031      	beq.n	100658e4 <IDD_Initialize_Device_IDs+0x78>
10065880:	af01      	add	r7, sp, #4
10065882:	2406      	movs	r4, #6
10065884:	2500      	movs	r5, #0
10065886:	4b35      	ldr	r3, [pc, #212]	@ (1006595c <__arm_cp.0_1>)
10065888:	4638      	mov	r0, r7
1006588a:	4621      	mov	r1, r4
1006588c:	462a      	mov	r2, r5
1006588e:	4798      	blx	r3
10065890:	7978      	ldrb	r0, [r7, #5]
10065892:	21c0      	movs	r1, #192	@ 0xc0
10065894:	4301      	orrs	r1, r0
10065896:	7179      	strb	r1, [r7, #5]
10065898:	ae0b      	add	r6, sp, #44	@ 0x2c
1006589a:	4630      	mov	r0, r6
1006589c:	3020      	adds	r0, #32
1006589e:	4b30      	ldr	r3, [pc, #192]	@ (10065960 <__arm_cp.0_2>)
100658a0:	4639      	mov	r1, r7
100658a2:	4622      	mov	r2, r4
100658a4:	4798      	blx	r3
100658a6:	ac07      	add	r4, sp, #28
100658a8:	2710      	movs	r7, #16
100658aa:	4620      	mov	r0, r4
100658ac:	4639      	mov	r1, r7
100658ae:	462a      	mov	r2, r5
100658b0:	4b2a      	ldr	r3, [pc, #168]	@ (1006595c <__arm_cp.0_1>)
100658b2:	4798      	blx	r3
100658b4:	4630      	mov	r0, r6
100658b6:	4621      	mov	r1, r4
100658b8:	463a      	mov	r2, r7
100658ba:	4b29      	ldr	r3, [pc, #164]	@ (10065960 <__arm_cp.0_2>)
100658bc:	4798      	blx	r3
100658be:	ac03      	add	r4, sp, #12
100658c0:	4620      	mov	r0, r4
100658c2:	4639      	mov	r1, r7
100658c4:	462a      	mov	r2, r5
100658c6:	4b25      	ldr	r3, [pc, #148]	@ (1006595c <__arm_cp.0_1>)
100658c8:	4798      	blx	r3
100658ca:	4630      	mov	r0, r6
100658cc:	3010      	adds	r0, #16
100658ce:	4621      	mov	r1, r4
100658d0:	463a      	mov	r2, r7
100658d2:	4b23      	ldr	r3, [pc, #140]	@ (10065960 <__arm_cp.0_2>)
100658d4:	4798      	blx	r3
100658d6:	4630      	mov	r0, r6
100658d8:	f7ff fc60 	bl	1006519c <nvm_dev_id_data_add_record>
100658dc:	2800      	cmp	r0, #0
100658de:	d103      	bne.n	100658e8 <IDD_Initialize_Device_IDs+0x7c>
100658e0:	4605      	mov	r5, r0
100658e2:	e003      	b.n	100658ec <IDD_Initialize_Device_IDs+0x80>
100658e4:	2500      	movs	r5, #0
100658e6:	e001      	b.n	100658ec <IDD_Initialize_Device_IDs+0x80>
100658e8:	200e      	movs	r0, #14
100658ea:	43c5      	mvns	r5, r0
100658ec:	4c1d      	ldr	r4, [pc, #116]	@ (10065964 <__arm_cp.0_3>)
100658ee:	6822      	ldr	r2, [r4, #0]
100658f0:	322e      	adds	r2, #46	@ 0x2e
100658f2:	2600      	movs	r6, #0
100658f4:	2706      	movs	r7, #6
100658f6:	4630      	mov	r0, r6
100658f8:	4639      	mov	r1, r7
100658fa:	f7ff fe0f 	bl	1006551c <is_Buffer_All_Set_To>
100658fe:	a90b      	add	r1, sp, #44	@ 0x2c
10065900:	2800      	cmp	r0, #0
10065902:	d001      	beq.n	10065908 <IDD_Initialize_Device_IDs+0x9c>
10065904:	3120      	adds	r1, #32
10065906:	e001      	b.n	1006590c <IDD_Initialize_Device_IDs+0xa0>
10065908:	6821      	ldr	r1, [r4, #0]
1006590a:	312e      	adds	r1, #46	@ 0x2e
1006590c:	9800      	ldr	r0, [sp, #0]
1006590e:	3060      	adds	r0, #96	@ 0x60
10065910:	463a      	mov	r2, r7
10065912:	f7df f847 	bl	100449a4 <BLEPLAT_MemCpy>
10065916:	6822      	ldr	r2, [r4, #0]
10065918:	3208      	adds	r2, #8
1006591a:	2110      	movs	r1, #16
1006591c:	4630      	mov	r0, r6
1006591e:	f7ff fdfd 	bl	1006551c <is_Buffer_All_Set_To>
10065922:	2800      	cmp	r0, #0
10065924:	d005      	beq.n	10065932 <IDD_Initialize_Device_IDs+0xc6>
10065926:	6820      	ldr	r0, [r4, #0]
10065928:	3008      	adds	r0, #8
1006592a:	a90b      	add	r1, sp, #44	@ 0x2c
1006592c:	2210      	movs	r2, #16
1006592e:	f7df f839 	bl	100449a4 <BLEPLAT_MemCpy>
10065932:	6822      	ldr	r2, [r4, #0]
10065934:	3218      	adds	r2, #24
10065936:	2000      	movs	r0, #0
10065938:	2110      	movs	r1, #16
1006593a:	f7ff fdef 	bl	1006551c <is_Buffer_All_Set_To>
1006593e:	2800      	cmp	r0, #0
10065940:	d006      	beq.n	10065950 <IDD_Initialize_Device_IDs+0xe4>
10065942:	a90b      	add	r1, sp, #44	@ 0x2c
10065944:	3110      	adds	r1, #16
10065946:	6820      	ldr	r0, [r4, #0]
10065948:	3018      	adds	r0, #24
1006594a:	2210      	movs	r2, #16
1006594c:	f7df f82a 	bl	100449a4 <BLEPLAT_MemCpy>
10065950:	b2e8      	uxtb	r0, r5
10065952:	b015      	add	sp, #84	@ 0x54
10065954:	bdf0      	pop	{r4, r5, r6, r7, pc}
10065956:	46c0      	nop			@ (mov r8, r8)

10065958 <__arm_cp.0_0>:
10065958:	20000844 	.word	0x20000844

1006595c <__arm_cp.0_1>:
1006595c:	1006583f 	.word	0x1006583f

10065960 <__arm_cp.0_2>:
10065960:	100449a5 	.word	0x100449a5

10065964 <__arm_cp.0_3>:
10065964:	2000083c 	.word	0x2000083c

10065968 <aci_gatt_clt_notification_event_notify>:
10065968:	b5b0      	push	{r4, r5, r7, lr}
1006596a:	b0ff      	sub	sp, #508	@ 0x1fc
1006596c:	b083      	sub	sp, #12
1006596e:	461c      	mov	r4, r3
10065970:	466d      	mov	r5, sp
10065972:	732b      	strb	r3, [r5, #12]
10065974:	72aa      	strb	r2, [r5, #10]
10065976:	7229      	strb	r1, [r5, #8]
10065978:	71a8      	strb	r0, [r5, #6]
1006597a:	0a1b      	lsrs	r3, r3, #8
1006597c:	736b      	strb	r3, [r5, #13]
1006597e:	0a12      	lsrs	r2, r2, #8
10065980:	72ea      	strb	r2, [r5, #11]
10065982:	0a09      	lsrs	r1, r1, #8
10065984:	7269      	strb	r1, [r5, #9]
10065986:	0a00      	lsrs	r0, r0, #8
10065988:	71e8      	strb	r0, [r5, #7]
1006598a:	4628      	mov	r0, r5
1006598c:	300e      	adds	r0, #14
1006598e:	9986      	ldr	r1, [sp, #536]	@ 0x218
10065990:	4622      	mov	r2, r4
10065992:	f7df f807 	bl	100449a4 <BLEPLAT_MemCpy>
10065996:	4620      	mov	r0, r4
10065998:	300a      	adds	r0, #10
1006599a:	70a8      	strb	r0, [r5, #2]
1006599c:	0a00      	lsrs	r0, r0, #8
1006599e:	70e8      	strb	r0, [r5, #3]
100659a0:	200f      	movs	r0, #15
100659a2:	7128      	strb	r0, [r5, #4]
100659a4:	20ff      	movs	r0, #255	@ 0xff
100659a6:	7068      	strb	r0, [r5, #1]
100659a8:	2082      	movs	r0, #130	@ 0x82
100659aa:	7028      	strb	r0, [r5, #0]
100659ac:	200c      	movs	r0, #12
100659ae:	7168      	strb	r0, [r5, #5]
100659b0:	340e      	adds	r4, #14
100659b2:	b2a1      	uxth	r1, r4
100659b4:	4628      	mov	r0, r5
100659b6:	f7e8 fb07 	bl	1004dfc8 <BLE_STACK_Event>
100659ba:	b07f      	add	sp, #508	@ 0x1fc
100659bc:	b003      	add	sp, #12
100659be:	bdb0      	pop	{r4, r5, r7, pc}

100659c0 <aci_gatt_clt_indication_event_cb>:
100659c0:	b5b0      	push	{r4, r5, r7, lr}
100659c2:	b0ff      	sub	sp, #508	@ 0x1fc
100659c4:	b083      	sub	sp, #12
100659c6:	460c      	mov	r4, r1
100659c8:	4605      	mov	r5, r0
100659ca:	688b      	ldr	r3, [r1, #8]
100659cc:	88ca      	ldrh	r2, [r1, #6]
100659ce:	8889      	ldrh	r1, [r1, #4]
100659d0:	4668      	mov	r0, sp
100659d2:	1d80      	adds	r0, r0, #6
100659d4:	f7eb f98f 	bl	10050cf6 <aci_gatt_clt_indication_event_copy>
100659d8:	0728      	lsls	r0, r5, #28
100659da:	d502      	bpl.n	100659e2 <aci_gatt_clt_indication_event_cb+0x22>
100659dc:	68a0      	ldr	r0, [r4, #8]
100659de:	f7ea fadd 	bl	1004ff9c <ACL_pkt_release>
100659e2:	9903      	ldr	r1, [sp, #12]
100659e4:	460a      	mov	r2, r1
100659e6:	320a      	adds	r2, #10
100659e8:	4668      	mov	r0, sp
100659ea:	7082      	strb	r2, [r0, #2]
100659ec:	0a12      	lsrs	r2, r2, #8
100659ee:	70c2      	strb	r2, [r0, #3]
100659f0:	220e      	movs	r2, #14
100659f2:	7102      	strb	r2, [r0, #4]
100659f4:	4a05      	ldr	r2, [pc, #20]	@ (10065a0c <__arm_cp.1_0>)
100659f6:	8002      	strh	r2, [r0, #0]
100659f8:	220c      	movs	r2, #12
100659fa:	7142      	strb	r2, [r0, #5]
100659fc:	310e      	adds	r1, #14
100659fe:	b289      	uxth	r1, r1
10065a00:	f7e8 fae2 	bl	1004dfc8 <BLE_STACK_Event>
10065a04:	b07f      	add	sp, #508	@ 0x1fc
10065a06:	b003      	add	sp, #12
10065a08:	bdb0      	pop	{r4, r5, r7, pc}
10065a0a:	46c0      	nop			@ (mov r8, r8)

10065a0c <__arm_cp.1_0>:
10065a0c:	0000ff82 	.word	0x0000ff82

10065a10 <aci_gatt_clt_notification_event_cb>:
10065a10:	b5b0      	push	{r4, r5, r7, lr}
10065a12:	b0ff      	sub	sp, #508	@ 0x1fc
10065a14:	b085      	sub	sp, #20
10065a16:	460c      	mov	r4, r1
10065a18:	4605      	mov	r5, r0
10065a1a:	688b      	ldr	r3, [r1, #8]
10065a1c:	88ca      	ldrh	r2, [r1, #6]
10065a1e:	8889      	ldrh	r1, [r1, #4]
10065a20:	a802      	add	r0, sp, #8
10065a22:	1d80      	adds	r0, r0, #6
10065a24:	f7eb f98c 	bl	10050d40 <aci_gatt_clt_notification_event_copy>
10065a28:	0728      	lsls	r0, r5, #28
10065a2a:	d502      	bpl.n	10065a32 <aci_gatt_clt_notification_event_cb+0x22>
10065a2c:	68a0      	ldr	r0, [r4, #8]
10065a2e:	f7ea fab5 	bl	1004ff9c <ACL_pkt_release>
10065a32:	ac02      	add	r4, sp, #8
10065a34:	89a3      	ldrh	r3, [r4, #12]
10065a36:	8962      	ldrh	r2, [r4, #10]
10065a38:	8921      	ldrh	r1, [r4, #8]
10065a3a:	88e0      	ldrh	r0, [r4, #6]
10065a3c:	340e      	adds	r4, #14
10065a3e:	9400      	str	r4, [sp, #0]
10065a40:	f7ff ff92 	bl	10065968 <aci_gatt_clt_notification_event_notify>
10065a44:	b07f      	add	sp, #508	@ 0x1fc
10065a46:	b005      	add	sp, #20
10065a48:	bdb0      	pop	{r4, r5, r7, pc}
	...

10065a4c <aci_gatt_srv_write_event_cb>:
10065a4c:	b5f0      	push	{r4, r5, r6, r7, lr}
10065a4e:	b0ff      	sub	sp, #508	@ 0x1fc
10065a50:	b086      	sub	sp, #24
10065a52:	460c      	mov	r4, r1
10065a54:	4605      	mov	r5, r0
10065a56:	7a0b      	ldrb	r3, [r1, #8]
10065a58:	88ca      	ldrh	r2, [r1, #6]
10065a5a:	8889      	ldrh	r1, [r1, #4]
10065a5c:	8960      	ldrh	r0, [r4, #10]
10065a5e:	89a6      	ldrh	r6, [r4, #12]
10065a60:	6927      	ldr	r7, [r4, #16]
10065a62:	9000      	str	r0, [sp, #0]
10065a64:	9601      	str	r6, [sp, #4]
10065a66:	9702      	str	r7, [sp, #8]
10065a68:	a803      	add	r0, sp, #12
10065a6a:	1d80      	adds	r0, r0, #6
10065a6c:	f7eb f9b1 	bl	10050dd2 <aci_gatt_srv_write_event_copy>
10065a70:	0728      	lsls	r0, r5, #28
10065a72:	d502      	bpl.n	10065a7a <aci_gatt_srv_write_event_cb+0x2e>
10065a74:	6920      	ldr	r0, [r4, #16]
10065a76:	f7ea fa91 	bl	1004ff9c <ACL_pkt_release>
10065a7a:	a803      	add	r0, sp, #12
10065a7c:	7b41      	ldrb	r1, [r0, #13]
10065a7e:	7b82      	ldrb	r2, [r0, #14]
10065a80:	0212      	lsls	r2, r2, #8
10065a82:	1851      	adds	r1, r2, r1
10065a84:	460a      	mov	r2, r1
10065a86:	320b      	adds	r2, #11
10065a88:	7082      	strb	r2, [r0, #2]
10065a8a:	0a12      	lsrs	r2, r2, #8
10065a8c:	70c2      	strb	r2, [r0, #3]
10065a8e:	221a      	movs	r2, #26
10065a90:	7102      	strb	r2, [r0, #4]
10065a92:	4a05      	ldr	r2, [pc, #20]	@ (10065aa8 <__arm_cp.3_0>)
10065a94:	8002      	strh	r2, [r0, #0]
10065a96:	220c      	movs	r2, #12
10065a98:	7142      	strb	r2, [r0, #5]
10065a9a:	310f      	adds	r1, #15
10065a9c:	b289      	uxth	r1, r1
10065a9e:	f7e8 fa93 	bl	1004dfc8 <BLE_STACK_Event>
10065aa2:	b07f      	add	sp, #508	@ 0x1fc
10065aa4:	b006      	add	sp, #24
10065aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10065aa8 <__arm_cp.3_0>:
10065aa8:	0000ff82 	.word	0x0000ff82

10065aac <aci_gatt_clt_multi_notification_int_event_cb>:
10065aac:	b5f0      	push	{r4, r5, r6, r7, lr}
10065aae:	b0ff      	sub	sp, #508	@ 0x1fc
10065ab0:	b08c      	sub	sp, #48	@ 0x30
10065ab2:	460c      	mov	r4, r1
10065ab4:	4605      	mov	r5, r0
10065ab6:	688b      	ldr	r3, [r1, #8]
10065ab8:	88ca      	ldrh	r2, [r1, #6]
10065aba:	8889      	ldrh	r1, [r1, #4]
10065abc:	a807      	add	r0, sp, #28
10065abe:	1d80      	adds	r0, r0, #6
10065ac0:	f7eb f9bf 	bl	10050e42 <aci_gatt_clt_multi_notification_int_event_copy>
10065ac4:	0728      	lsls	r0, r5, #28
10065ac6:	d502      	bpl.n	10065ace <aci_gatt_clt_multi_notification_int_event_cb+0x22>
10065ac8:	68a0      	ldr	r0, [r4, #8]
10065aca:	f7ea fa67 	bl	1004ff9c <ACL_pkt_release>
10065ace:	a807      	add	r0, sp, #28
10065ad0:	8941      	ldrh	r1, [r0, #10]
10065ad2:	9105      	str	r1, [sp, #20]
10065ad4:	8901      	ldrh	r1, [r0, #8]
10065ad6:	9103      	str	r1, [sp, #12]
10065ad8:	88c1      	ldrh	r1, [r0, #6]
10065ada:	9102      	str	r1, [sp, #8]
10065adc:	300c      	adds	r0, #12
10065ade:	9004      	str	r0, [sp, #16]
10065ae0:	2500      	movs	r5, #0
10065ae2:	9e04      	ldr	r6, [sp, #16]
10065ae4:	b2a8      	uxth	r0, r5
10065ae6:	9905      	ldr	r1, [sp, #20]
10065ae8:	4288      	cmp	r0, r1
10065aea:	d21c      	bcs.n	10065b26 <aci_gatt_clt_multi_notification_int_event_cb+0x7a>
10065aec:	1831      	adds	r1, r6, r0
10065aee:	a88a      	add	r0, sp, #552	@ 0x228
10065af0:	9006      	str	r0, [sp, #24]
10065af2:	2402      	movs	r4, #2
10065af4:	4622      	mov	r2, r4
10065af6:	f7de ff55 	bl	100449a4 <BLEPLAT_MemCpy>
10065afa:	1ca8      	adds	r0, r5, #2
10065afc:	b280      	uxth	r0, r0
10065afe:	1831      	adds	r1, r6, r0
10065b00:	af89      	add	r7, sp, #548	@ 0x224
10065b02:	4638      	mov	r0, r7
10065b04:	4622      	mov	r2, r4
10065b06:	f7de ff4d 	bl	100449a4 <BLEPLAT_MemCpy>
10065b0a:	1d28      	adds	r0, r5, #4
10065b0c:	b284      	uxth	r4, r0
10065b0e:	1930      	adds	r0, r6, r4
10065b10:	883b      	ldrh	r3, [r7, #0]
10065b12:	9906      	ldr	r1, [sp, #24]
10065b14:	880a      	ldrh	r2, [r1, #0]
10065b16:	9000      	str	r0, [sp, #0]
10065b18:	9802      	ldr	r0, [sp, #8]
10065b1a:	9903      	ldr	r1, [sp, #12]
10065b1c:	f7ff ff24 	bl	10065968 <aci_gatt_clt_notification_event_notify>
10065b20:	8838      	ldrh	r0, [r7, #0]
10065b22:	1825      	adds	r5, r4, r0
10065b24:	e7de      	b.n	10065ae4 <aci_gatt_clt_multi_notification_int_event_cb+0x38>
10065b26:	b07f      	add	sp, #508	@ 0x1fc
10065b28:	b00c      	add	sp, #48	@ 0x30
10065b2a:	bdf0      	pop	{r4, r5, r6, r7, pc}

10065b2c <aci_att_clt_find_info_resp_event_cb>:
10065b2c:	b5b0      	push	{r4, r5, r7, lr}
10065b2e:	b0ff      	sub	sp, #508	@ 0x1fc
10065b30:	b083      	sub	sp, #12
10065b32:	460c      	mov	r4, r1
10065b34:	4605      	mov	r5, r0
10065b36:	688b      	ldr	r3, [r1, #8]
10065b38:	88ca      	ldrh	r2, [r1, #6]
10065b3a:	8889      	ldrh	r1, [r1, #4]
10065b3c:	4668      	mov	r0, sp
10065b3e:	1d80      	adds	r0, r0, #6
10065b40:	f7ea fff8 	bl	10050b34 <aci_att_clt_find_info_resp_event_copy>
10065b44:	0728      	lsls	r0, r5, #28
10065b46:	d502      	bpl.n	10065b4e <aci_att_clt_find_info_resp_event_cb+0x22>
10065b48:	68a0      	ldr	r0, [r4, #8]
10065b4a:	f7ea fa27 	bl	1004ff9c <ACL_pkt_release>
10065b4e:	4668      	mov	r0, sp
10065b50:	7ac1      	ldrb	r1, [r0, #11]
10065b52:	9a03      	ldr	r2, [sp, #12]
10065b54:	0212      	lsls	r2, r2, #8
10065b56:	1851      	adds	r1, r2, r1
10065b58:	460a      	mov	r2, r1
10065b5a:	3209      	adds	r2, #9
10065b5c:	7082      	strb	r2, [r0, #2]
10065b5e:	0a12      	lsrs	r2, r2, #8
10065b60:	70c2      	strb	r2, [r0, #3]
10065b62:	2204      	movs	r2, #4
10065b64:	7102      	strb	r2, [r0, #4]
10065b66:	4a05      	ldr	r2, [pc, #20]	@ (10065b7c <__arm_cp.5_0>)
10065b68:	8002      	strh	r2, [r0, #0]
10065b6a:	220c      	movs	r2, #12
10065b6c:	7142      	strb	r2, [r0, #5]
10065b6e:	310d      	adds	r1, #13
10065b70:	b289      	uxth	r1, r1
10065b72:	f7e8 fa29 	bl	1004dfc8 <BLE_STACK_Event>
10065b76:	b07f      	add	sp, #508	@ 0x1fc
10065b78:	b003      	add	sp, #12
10065b7a:	bdb0      	pop	{r4, r5, r7, pc}

10065b7c <__arm_cp.5_0>:
10065b7c:	0000ff82 	.word	0x0000ff82

10065b80 <aci_att_clt_find_by_type_value_resp_event_cb>:
10065b80:	b5b0      	push	{r4, r5, r7, lr}
10065b82:	b0ff      	sub	sp, #508	@ 0x1fc
10065b84:	b083      	sub	sp, #12
10065b86:	460c      	mov	r4, r1
10065b88:	4605      	mov	r5, r0
10065b8a:	688b      	ldr	r3, [r1, #8]
10065b8c:	88ca      	ldrh	r2, [r1, #6]
10065b8e:	8889      	ldrh	r1, [r1, #4]
10065b90:	4668      	mov	r0, sp
10065b92:	1d80      	adds	r0, r0, #6
10065b94:	f7ea ffec 	bl	10050b70 <aci_att_clt_find_by_type_value_resp_event_copy>
10065b98:	0728      	lsls	r0, r5, #28
10065b9a:	d502      	bpl.n	10065ba2 <aci_att_clt_find_by_type_value_resp_event_cb+0x22>
10065b9c:	68a0      	ldr	r0, [r4, #8]
10065b9e:	f7ea f9fd 	bl	1004ff9c <ACL_pkt_release>
10065ba2:	4668      	mov	r0, sp
10065ba4:	7a81      	ldrb	r1, [r0, #10]
10065ba6:	0089      	lsls	r1, r1, #2
10065ba8:	1dca      	adds	r2, r1, #7
10065baa:	7082      	strb	r2, [r0, #2]
10065bac:	0a12      	lsrs	r2, r2, #8
10065bae:	70c2      	strb	r2, [r0, #3]
10065bb0:	2205      	movs	r2, #5
10065bb2:	7102      	strb	r2, [r0, #4]
10065bb4:	4a04      	ldr	r2, [pc, #16]	@ (10065bc8 <__arm_cp.6_0>)
10065bb6:	8002      	strh	r2, [r0, #0]
10065bb8:	220c      	movs	r2, #12
10065bba:	7142      	strb	r2, [r0, #5]
10065bbc:	310b      	adds	r1, #11
10065bbe:	f7e8 fa03 	bl	1004dfc8 <BLE_STACK_Event>
10065bc2:	b07f      	add	sp, #508	@ 0x1fc
10065bc4:	b003      	add	sp, #12
10065bc6:	bdb0      	pop	{r4, r5, r7, pc}

10065bc8 <__arm_cp.6_0>:
10065bc8:	0000ff82 	.word	0x0000ff82

10065bcc <aci_att_clt_read_by_type_resp_event_cb>:
10065bcc:	b5b0      	push	{r4, r5, r7, lr}
10065bce:	b0ff      	sub	sp, #508	@ 0x1fc
10065bd0:	b083      	sub	sp, #12
10065bd2:	460c      	mov	r4, r1
10065bd4:	4605      	mov	r5, r0
10065bd6:	688b      	ldr	r3, [r1, #8]
10065bd8:	88ca      	ldrh	r2, [r1, #6]
10065bda:	8889      	ldrh	r1, [r1, #4]
10065bdc:	4668      	mov	r0, sp
10065bde:	1d80      	adds	r0, r0, #6
10065be0:	f7ea ffdb 	bl	10050b9a <aci_att_clt_read_by_type_resp_event_copy>
10065be4:	0728      	lsls	r0, r5, #28
10065be6:	d502      	bpl.n	10065bee <aci_att_clt_read_by_type_resp_event_cb+0x22>
10065be8:	68a0      	ldr	r0, [r4, #8]
10065bea:	f7ea f9d7 	bl	1004ff9c <ACL_pkt_release>
10065bee:	4668      	mov	r0, sp
10065bf0:	7ac1      	ldrb	r1, [r0, #11]
10065bf2:	9a03      	ldr	r2, [sp, #12]
10065bf4:	0212      	lsls	r2, r2, #8
10065bf6:	1851      	adds	r1, r2, r1
10065bf8:	460a      	mov	r2, r1
10065bfa:	3209      	adds	r2, #9
10065bfc:	7082      	strb	r2, [r0, #2]
10065bfe:	0a12      	lsrs	r2, r2, #8
10065c00:	70c2      	strb	r2, [r0, #3]
10065c02:	2206      	movs	r2, #6
10065c04:	7102      	strb	r2, [r0, #4]
10065c06:	4a05      	ldr	r2, [pc, #20]	@ (10065c1c <__arm_cp.7_0>)
10065c08:	8002      	strh	r2, [r0, #0]
10065c0a:	220c      	movs	r2, #12
10065c0c:	7142      	strb	r2, [r0, #5]
10065c0e:	310d      	adds	r1, #13
10065c10:	b289      	uxth	r1, r1
10065c12:	f7e8 f9d9 	bl	1004dfc8 <BLE_STACK_Event>
10065c16:	b07f      	add	sp, #508	@ 0x1fc
10065c18:	b003      	add	sp, #12
10065c1a:	bdb0      	pop	{r4, r5, r7, pc}

10065c1c <__arm_cp.7_0>:
10065c1c:	0000ff82 	.word	0x0000ff82

10065c20 <aci_att_clt_read_resp_event_cb>:
10065c20:	b5b0      	push	{r4, r5, r7, lr}
10065c22:	b0ff      	sub	sp, #508	@ 0x1fc
10065c24:	b083      	sub	sp, #12
10065c26:	460c      	mov	r4, r1
10065c28:	4605      	mov	r5, r0
10065c2a:	688b      	ldr	r3, [r1, #8]
10065c2c:	88ca      	ldrh	r2, [r1, #6]
10065c2e:	8889      	ldrh	r1, [r1, #4]
10065c30:	4668      	mov	r0, sp
10065c32:	1d80      	adds	r0, r0, #6
10065c34:	f7ea ffcf 	bl	10050bd6 <aci_att_clt_read_resp_event_copy>
10065c38:	0728      	lsls	r0, r5, #28
10065c3a:	d502      	bpl.n	10065c42 <aci_att_clt_read_resp_event_cb+0x22>
10065c3c:	68a0      	ldr	r0, [r4, #8]
10065c3e:	f7ea f9ad 	bl	1004ff9c <ACL_pkt_release>
10065c42:	4668      	mov	r0, sp
10065c44:	8941      	ldrh	r1, [r0, #10]
10065c46:	460a      	mov	r2, r1
10065c48:	3208      	adds	r2, #8
10065c4a:	7082      	strb	r2, [r0, #2]
10065c4c:	0a12      	lsrs	r2, r2, #8
10065c4e:	70c2      	strb	r2, [r0, #3]
10065c50:	2207      	movs	r2, #7
10065c52:	7102      	strb	r2, [r0, #4]
10065c54:	4a05      	ldr	r2, [pc, #20]	@ (10065c6c <__arm_cp.8_0>)
10065c56:	8002      	strh	r2, [r0, #0]
10065c58:	220c      	movs	r2, #12
10065c5a:	7142      	strb	r2, [r0, #5]
10065c5c:	310c      	adds	r1, #12
10065c5e:	b289      	uxth	r1, r1
10065c60:	f7e8 f9b2 	bl	1004dfc8 <BLE_STACK_Event>
10065c64:	b07f      	add	sp, #508	@ 0x1fc
10065c66:	b003      	add	sp, #12
10065c68:	bdb0      	pop	{r4, r5, r7, pc}
10065c6a:	46c0      	nop			@ (mov r8, r8)

10065c6c <__arm_cp.8_0>:
10065c6c:	0000ff82 	.word	0x0000ff82

10065c70 <aci_att_clt_read_blob_resp_event_cb>:
10065c70:	b5b0      	push	{r4, r5, r7, lr}
10065c72:	b0ff      	sub	sp, #508	@ 0x1fc
10065c74:	b083      	sub	sp, #12
10065c76:	460c      	mov	r4, r1
10065c78:	4605      	mov	r5, r0
10065c7a:	688b      	ldr	r3, [r1, #8]
10065c7c:	88ca      	ldrh	r2, [r1, #6]
10065c7e:	8889      	ldrh	r1, [r1, #4]
10065c80:	4668      	mov	r0, sp
10065c82:	1d80      	adds	r0, r0, #6
10065c84:	f7ea ffbd 	bl	10050c02 <aci_att_clt_read_blob_resp_event_copy>
10065c88:	0728      	lsls	r0, r5, #28
10065c8a:	d502      	bpl.n	10065c92 <aci_att_clt_read_blob_resp_event_cb+0x22>
10065c8c:	68a0      	ldr	r0, [r4, #8]
10065c8e:	f7ea f985 	bl	1004ff9c <ACL_pkt_release>
10065c92:	4668      	mov	r0, sp
10065c94:	8941      	ldrh	r1, [r0, #10]
10065c96:	460a      	mov	r2, r1
10065c98:	3208      	adds	r2, #8
10065c9a:	7082      	strb	r2, [r0, #2]
10065c9c:	0a12      	lsrs	r2, r2, #8
10065c9e:	70c2      	strb	r2, [r0, #3]
10065ca0:	2208      	movs	r2, #8
10065ca2:	7102      	strb	r2, [r0, #4]
10065ca4:	4a05      	ldr	r2, [pc, #20]	@ (10065cbc <__arm_cp.9_0>)
10065ca6:	8002      	strh	r2, [r0, #0]
10065ca8:	220c      	movs	r2, #12
10065caa:	7142      	strb	r2, [r0, #5]
10065cac:	310c      	adds	r1, #12
10065cae:	b289      	uxth	r1, r1
10065cb0:	f7e8 f98a 	bl	1004dfc8 <BLE_STACK_Event>
10065cb4:	b07f      	add	sp, #508	@ 0x1fc
10065cb6:	b003      	add	sp, #12
10065cb8:	bdb0      	pop	{r4, r5, r7, pc}
10065cba:	46c0      	nop			@ (mov r8, r8)

10065cbc <__arm_cp.9_0>:
10065cbc:	0000ff82 	.word	0x0000ff82

10065cc0 <aci_att_clt_read_multiple_resp_event_cb>:
10065cc0:	b5b0      	push	{r4, r5, r7, lr}
10065cc2:	b0ff      	sub	sp, #508	@ 0x1fc
10065cc4:	b083      	sub	sp, #12
10065cc6:	460c      	mov	r4, r1
10065cc8:	4605      	mov	r5, r0
10065cca:	688b      	ldr	r3, [r1, #8]
10065ccc:	88ca      	ldrh	r2, [r1, #6]
10065cce:	8889      	ldrh	r1, [r1, #4]
10065cd0:	4668      	mov	r0, sp
10065cd2:	1d80      	adds	r0, r0, #6
10065cd4:	f7ea ffab 	bl	10050c2e <aci_att_clt_read_multiple_resp_event_copy>
10065cd8:	0728      	lsls	r0, r5, #28
10065cda:	d502      	bpl.n	10065ce2 <aci_att_clt_read_multiple_resp_event_cb+0x22>
10065cdc:	68a0      	ldr	r0, [r4, #8]
10065cde:	f7ea f95d 	bl	1004ff9c <ACL_pkt_release>
10065ce2:	4668      	mov	r0, sp
10065ce4:	8941      	ldrh	r1, [r0, #10]
10065ce6:	460a      	mov	r2, r1
10065ce8:	3208      	adds	r2, #8
10065cea:	7082      	strb	r2, [r0, #2]
10065cec:	0a12      	lsrs	r2, r2, #8
10065cee:	70c2      	strb	r2, [r0, #3]
10065cf0:	2209      	movs	r2, #9
10065cf2:	7102      	strb	r2, [r0, #4]
10065cf4:	4a05      	ldr	r2, [pc, #20]	@ (10065d0c <__arm_cp.10_0>)
10065cf6:	8002      	strh	r2, [r0, #0]
10065cf8:	220c      	movs	r2, #12
10065cfa:	7142      	strb	r2, [r0, #5]
10065cfc:	310c      	adds	r1, #12
10065cfe:	b289      	uxth	r1, r1
10065d00:	f7e8 f962 	bl	1004dfc8 <BLE_STACK_Event>
10065d04:	b07f      	add	sp, #508	@ 0x1fc
10065d06:	b003      	add	sp, #12
10065d08:	bdb0      	pop	{r4, r5, r7, pc}
10065d0a:	46c0      	nop			@ (mov r8, r8)

10065d0c <__arm_cp.10_0>:
10065d0c:	0000ff82 	.word	0x0000ff82

10065d10 <aci_att_clt_read_by_group_type_resp_event_cb>:
10065d10:	b5b0      	push	{r4, r5, r7, lr}
10065d12:	b0ff      	sub	sp, #508	@ 0x1fc
10065d14:	b083      	sub	sp, #12
10065d16:	460c      	mov	r4, r1
10065d18:	4605      	mov	r5, r0
10065d1a:	688b      	ldr	r3, [r1, #8]
10065d1c:	88ca      	ldrh	r2, [r1, #6]
10065d1e:	8889      	ldrh	r1, [r1, #4]
10065d20:	4668      	mov	r0, sp
10065d22:	1d80      	adds	r0, r0, #6
10065d24:	f7ea ff99 	bl	10050c5a <aci_att_clt_read_by_group_type_resp_event_copy>
10065d28:	0728      	lsls	r0, r5, #28
10065d2a:	d502      	bpl.n	10065d32 <aci_att_clt_read_by_group_type_resp_event_cb+0x22>
10065d2c:	68a0      	ldr	r0, [r4, #8]
10065d2e:	f7ea f935 	bl	1004ff9c <ACL_pkt_release>
10065d32:	4668      	mov	r0, sp
10065d34:	7ac1      	ldrb	r1, [r0, #11]
10065d36:	9a03      	ldr	r2, [sp, #12]
10065d38:	0212      	lsls	r2, r2, #8
10065d3a:	1851      	adds	r1, r2, r1
10065d3c:	460a      	mov	r2, r1
10065d3e:	3209      	adds	r2, #9
10065d40:	7082      	strb	r2, [r0, #2]
10065d42:	0a12      	lsrs	r2, r2, #8
10065d44:	70c2      	strb	r2, [r0, #3]
10065d46:	220a      	movs	r2, #10
10065d48:	7102      	strb	r2, [r0, #4]
10065d4a:	4a05      	ldr	r2, [pc, #20]	@ (10065d60 <__arm_cp.11_0>)
10065d4c:	8002      	strh	r2, [r0, #0]
10065d4e:	220c      	movs	r2, #12
10065d50:	7142      	strb	r2, [r0, #5]
10065d52:	310d      	adds	r1, #13
10065d54:	b289      	uxth	r1, r1
10065d56:	f7e8 f937 	bl	1004dfc8 <BLE_STACK_Event>
10065d5a:	b07f      	add	sp, #508	@ 0x1fc
10065d5c:	b003      	add	sp, #12
10065d5e:	bdb0      	pop	{r4, r5, r7, pc}

10065d60 <__arm_cp.11_0>:
10065d60:	0000ff82 	.word	0x0000ff82

10065d64 <aci_att_clt_prepare_write_resp_event_cb>:
10065d64:	b5b0      	push	{r4, r5, r7, lr}
10065d66:	b0ff      	sub	sp, #508	@ 0x1fc
10065d68:	b083      	sub	sp, #12
10065d6a:	460c      	mov	r4, r1
10065d6c:	4605      	mov	r5, r0
10065d6e:	688b      	ldr	r3, [r1, #8]
10065d70:	88ca      	ldrh	r2, [r1, #6]
10065d72:	8889      	ldrh	r1, [r1, #4]
10065d74:	4668      	mov	r0, sp
10065d76:	1d80      	adds	r0, r0, #6
10065d78:	f7ea ff8d 	bl	10050c96 <aci_att_clt_prepare_write_resp_event_copy>
10065d7c:	0728      	lsls	r0, r5, #28
10065d7e:	d502      	bpl.n	10065d86 <aci_att_clt_prepare_write_resp_event_cb+0x22>
10065d80:	68a0      	ldr	r0, [r4, #8]
10065d82:	f7ea f90b 	bl	1004ff9c <ACL_pkt_release>
10065d86:	4668      	mov	r0, sp
10065d88:	89c1      	ldrh	r1, [r0, #14]
10065d8a:	460a      	mov	r2, r1
10065d8c:	320c      	adds	r2, #12
10065d8e:	7082      	strb	r2, [r0, #2]
10065d90:	0a12      	lsrs	r2, r2, #8
10065d92:	70c2      	strb	r2, [r0, #3]
10065d94:	220c      	movs	r2, #12
10065d96:	7102      	strb	r2, [r0, #4]
10065d98:	4b04      	ldr	r3, [pc, #16]	@ (10065dac <__arm_cp.12_0>)
10065d9a:	8003      	strh	r3, [r0, #0]
10065d9c:	7142      	strb	r2, [r0, #5]
10065d9e:	3110      	adds	r1, #16
10065da0:	b289      	uxth	r1, r1
10065da2:	f7e8 f911 	bl	1004dfc8 <BLE_STACK_Event>
10065da6:	b07f      	add	sp, #508	@ 0x1fc
10065da8:	b003      	add	sp, #12
10065daa:	bdb0      	pop	{r4, r5, r7, pc}

10065dac <__arm_cp.12_0>:
10065dac:	0000ff82 	.word	0x0000ff82

10065db0 <aci_att_srv_prepare_write_req_event_cb>:
10065db0:	b5f0      	push	{r4, r5, r6, r7, lr}
10065db2:	b0ff      	sub	sp, #508	@ 0x1fc
10065db4:	b086      	sub	sp, #24
10065db6:	460c      	mov	r4, r1
10065db8:	4605      	mov	r5, r0
10065dba:	890b      	ldrh	r3, [r1, #8]
10065dbc:	88ca      	ldrh	r2, [r1, #6]
10065dbe:	8889      	ldrh	r1, [r1, #4]
10065dc0:	8960      	ldrh	r0, [r4, #10]
10065dc2:	89a6      	ldrh	r6, [r4, #12]
10065dc4:	6927      	ldr	r7, [r4, #16]
10065dc6:	9000      	str	r0, [sp, #0]
10065dc8:	9601      	str	r6, [sp, #4]
10065dca:	9702      	str	r7, [sp, #8]
10065dcc:	a803      	add	r0, sp, #12
10065dce:	1d80      	adds	r0, r0, #6
10065dd0:	f7eb f81a 	bl	10050e08 <aci_att_srv_prepare_write_req_event_copy>
10065dd4:	0728      	lsls	r0, r5, #28
10065dd6:	d502      	bpl.n	10065dde <aci_att_srv_prepare_write_req_event_cb+0x2e>
10065dd8:	6920      	ldr	r0, [r4, #16]
10065dda:	f7ea f8df 	bl	1004ff9c <ACL_pkt_release>
10065dde:	a803      	add	r0, sp, #12
10065de0:	89c1      	ldrh	r1, [r0, #14]
10065de2:	460a      	mov	r2, r1
10065de4:	320c      	adds	r2, #12
10065de6:	7082      	strb	r2, [r0, #2]
10065de8:	0a12      	lsrs	r2, r2, #8
10065dea:	70c2      	strb	r2, [r0, #3]
10065dec:	221b      	movs	r2, #27
10065dee:	7102      	strb	r2, [r0, #4]
10065df0:	4a05      	ldr	r2, [pc, #20]	@ (10065e08 <__arm_cp.13_0>)
10065df2:	8002      	strh	r2, [r0, #0]
10065df4:	220c      	movs	r2, #12
10065df6:	7142      	strb	r2, [r0, #5]
10065df8:	3110      	adds	r1, #16
10065dfa:	b289      	uxth	r1, r1
10065dfc:	f7e8 f8e4 	bl	1004dfc8 <BLE_STACK_Event>
10065e00:	b07f      	add	sp, #508	@ 0x1fc
10065e02:	b006      	add	sp, #24
10065e04:	bdf0      	pop	{r4, r5, r6, r7, pc}
10065e06:	46c0      	nop			@ (mov r8, r8)

10065e08 <__arm_cp.13_0>:
10065e08:	0000ff82 	.word	0x0000ff82

10065e0c <aci_att_clt_read_multiple_var_len_resp_event_cb>:
10065e0c:	b5b0      	push	{r4, r5, r7, lr}
10065e0e:	b0ff      	sub	sp, #508	@ 0x1fc
10065e10:	b083      	sub	sp, #12
10065e12:	460c      	mov	r4, r1
10065e14:	4605      	mov	r5, r0
10065e16:	688b      	ldr	r3, [r1, #8]
10065e18:	88ca      	ldrh	r2, [r1, #6]
10065e1a:	8889      	ldrh	r1, [r1, #4]
10065e1c:	4668      	mov	r0, sp
10065e1e:	1d80      	adds	r0, r0, #6
10065e20:	f7eb f825 	bl	10050e6e <aci_att_clt_read_multiple_var_len_resp_event_copy>
10065e24:	0728      	lsls	r0, r5, #28
10065e26:	d502      	bpl.n	10065e2e <aci_att_clt_read_multiple_var_len_resp_event_cb+0x22>
10065e28:	68a0      	ldr	r0, [r4, #8]
10065e2a:	f7ea f8b7 	bl	1004ff9c <ACL_pkt_release>
10065e2e:	4668      	mov	r0, sp
10065e30:	8941      	ldrh	r1, [r0, #10]
10065e32:	460a      	mov	r2, r1
10065e34:	3208      	adds	r2, #8
10065e36:	7082      	strb	r2, [r0, #2]
10065e38:	0a12      	lsrs	r2, r2, #8
10065e3a:	70c2      	strb	r2, [r0, #3]
10065e3c:	221e      	movs	r2, #30
10065e3e:	7102      	strb	r2, [r0, #4]
10065e40:	4a05      	ldr	r2, [pc, #20]	@ (10065e58 <__arm_cp.14_0>)
10065e42:	8002      	strh	r2, [r0, #0]
10065e44:	220c      	movs	r2, #12
10065e46:	7142      	strb	r2, [r0, #5]
10065e48:	310c      	adds	r1, #12
10065e4a:	b289      	uxth	r1, r1
10065e4c:	f7e8 f8bc 	bl	1004dfc8 <BLE_STACK_Event>
10065e50:	b07f      	add	sp, #508	@ 0x1fc
10065e52:	b003      	add	sp, #12
10065e54:	bdb0      	pop	{r4, r5, r7, pc}
10065e56:	46c0      	nop			@ (mov r8, r8)

10065e58 <__arm_cp.14_0>:
10065e58:	0000ff82 	.word	0x0000ff82

10065e5c <aci_gatt_srv_attribute_modified_event_push_noinline>:
10065e5c:	b5f0      	push	{r4, r5, r6, r7, lr}
10065e5e:	b085      	sub	sp, #20
10065e60:	4605      	mov	r5, r0
10065e62:	06c0      	lsls	r0, r0, #27
10065e64:	d445      	bmi.n	10065ef2 <aci_gatt_srv_attribute_modified_event_push_noinline+0x96>
10065e66:	4826      	ldr	r0, [pc, #152]	@ (10065f00 <__arm_cp.15_0>)
10065e68:	6800      	ldr	r0, [r0, #0]
10065e6a:	2450      	movs	r4, #80	@ 0x50
10065e6c:	5d00      	ldrb	r0, [r0, r4]
10065e6e:	2400      	movs	r4, #0
10065e70:	07c0      	lsls	r0, r0, #31
10065e72:	d03f      	beq.n	10065ef4 <aci_gatt_srv_attribute_modified_event_push_noinline+0x98>
10065e74:	9302      	str	r3, [sp, #8]
10065e76:	9203      	str	r2, [sp, #12]
10065e78:	9104      	str	r1, [sp, #16]
10065e7a:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10065e7c:	4821      	ldr	r0, [pc, #132]	@ (10065f04 <__arm_cp.15_1>)
10065e7e:	6800      	ldr	r0, [r0, #0]
10065e80:	0769      	lsls	r1, r5, #29
10065e82:	0ec9      	lsrs	r1, r1, #27
10065e84:	1840      	adds	r0, r0, r1
10065e86:	6900      	ldr	r0, [r0, #16]
10065e88:	1e71      	subs	r1, r6, #1
10065e8a:	2203      	movs	r2, #3
10065e8c:	430a      	orrs	r2, r1
10065e8e:	3211      	adds	r2, #17
10065e90:	0891      	lsrs	r1, r2, #2
10065e92:	b28b      	uxth	r3, r1
10065e94:	2256      	movs	r2, #86	@ 0x56
10065e96:	4629      	mov	r1, r5
10065e98:	f7ea fa32 	bl	10050300 <aci_event_fifo_push_header>
10065e9c:	2800      	cmp	r0, #0
10065e9e:	d02c      	beq.n	10065efa <aci_gatt_srv_attribute_modified_event_push_noinline+0x9e>
10065ea0:	4607      	mov	r7, r0
10065ea2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10065ea4:	9001      	str	r0, [sp, #4]
10065ea6:	743e      	strb	r6, [r7, #16]
10065ea8:	9902      	ldr	r1, [sp, #8]
10065eaa:	73b9      	strb	r1, [r7, #14]
10065eac:	9b03      	ldr	r3, [sp, #12]
10065eae:	733b      	strb	r3, [r7, #12]
10065eb0:	9a04      	ldr	r2, [sp, #16]
10065eb2:	72ba      	strb	r2, [r7, #10]
10065eb4:	0a30      	lsrs	r0, r6, #8
10065eb6:	7478      	strb	r0, [r7, #17]
10065eb8:	0a08      	lsrs	r0, r1, #8
10065eba:	73f8      	strb	r0, [r7, #15]
10065ebc:	0a18      	lsrs	r0, r3, #8
10065ebe:	7378      	strb	r0, [r7, #13]
10065ec0:	0a10      	lsrs	r0, r2, #8
10065ec2:	72f8      	strb	r0, [r7, #11]
10065ec4:	4638      	mov	r0, r7
10065ec6:	3012      	adds	r0, #18
10065ec8:	9901      	ldr	r1, [sp, #4]
10065eca:	4632      	mov	r2, r6
10065ecc:	f7de fd6a 	bl	100449a4 <BLEPLAT_MemCpy>
10065ed0:	200c      	movs	r0, #12
10065ed2:	7278      	strb	r0, [r7, #9]
10065ed4:	2001      	movs	r0, #1
10065ed6:	7238      	strb	r0, [r7, #8]
10065ed8:	360a      	adds	r6, #10
10065eda:	0a30      	lsrs	r0, r6, #8
10065edc:	71f8      	strb	r0, [r7, #7]
10065ede:	71be      	strb	r6, [r7, #6]
10065ee0:	20ff      	movs	r0, #255	@ 0xff
10065ee2:	7178      	strb	r0, [r7, #5]
10065ee4:	2082      	movs	r0, #130	@ 0x82
10065ee6:	7138      	strb	r0, [r7, #4]
10065ee8:	4628      	mov	r0, r5
10065eea:	4639      	mov	r1, r7
10065eec:	f7ea faa5 	bl	1005043a <aci_event_fifo_push>
10065ef0:	e000      	b.n	10065ef4 <aci_gatt_srv_attribute_modified_event_push_noinline+0x98>
10065ef2:	2486      	movs	r4, #134	@ 0x86
10065ef4:	4620      	mov	r0, r4
10065ef6:	b005      	add	sp, #20
10065ef8:	bdf0      	pop	{r4, r5, r6, r7, pc}
10065efa:	2407      	movs	r4, #7
10065efc:	e7fa      	b.n	10065ef4 <aci_gatt_srv_attribute_modified_event_push_noinline+0x98>
10065efe:	46c0      	nop			@ (mov r8, r8)

10065f00 <__arm_cp.15_0>:
10065f00:	20000894 	.word	0x20000894

10065f04 <__arm_cp.15_1>:
10065f04:	20000840 	.word	0x20000840

10065f08 <aci_gatt_proc_timeout_event_push_noinline>:
10065f08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10065f0a:	4604      	mov	r4, r0
10065f0c:	06c0      	lsls	r0, r0, #27
10065f0e:	d408      	bmi.n	10065f22 <aci_gatt_proc_timeout_event_push_noinline+0x1a>
10065f10:	460d      	mov	r5, r1
10065f12:	4819      	ldr	r0, [pc, #100]	@ (10065f78 <__arm_cp.16_0>)
10065f14:	6800      	ldr	r0, [r0, #0]
10065f16:	2150      	movs	r1, #80	@ 0x50
10065f18:	5c40      	ldrb	r0, [r0, r1]
10065f1a:	0780      	lsls	r0, r0, #30
10065f1c:	d403      	bmi.n	10065f26 <aci_gatt_proc_timeout_event_push_noinline+0x1e>
10065f1e:	2700      	movs	r7, #0
10065f20:	e027      	b.n	10065f72 <aci_gatt_proc_timeout_event_push_noinline+0x6a>
10065f22:	2786      	movs	r7, #134	@ 0x86
10065f24:	e025      	b.n	10065f72 <aci_gatt_proc_timeout_event_push_noinline+0x6a>
10065f26:	4616      	mov	r6, r2
10065f28:	4814      	ldr	r0, [pc, #80]	@ (10065f7c <__arm_cp.16_1>)
10065f2a:	6800      	ldr	r0, [r0, #0]
10065f2c:	0761      	lsls	r1, r4, #29
10065f2e:	0ec9      	lsrs	r1, r1, #27
10065f30:	1840      	adds	r0, r0, r1
10065f32:	6900      	ldr	r0, [r0, #16]
10065f34:	2257      	movs	r2, #87	@ 0x57
10065f36:	2303      	movs	r3, #3
10065f38:	4621      	mov	r1, r4
10065f3a:	f7ea f9e1 	bl	10050300 <aci_event_fifo_push_header>
10065f3e:	2800      	cmp	r0, #0
10065f40:	d016      	beq.n	10065f70 <aci_gatt_proc_timeout_event_push_noinline+0x68>
10065f42:	4601      	mov	r1, r0
10065f44:	7306      	strb	r6, [r0, #12]
10065f46:	7285      	strb	r5, [r0, #10]
10065f48:	200c      	movs	r0, #12
10065f4a:	7248      	strb	r0, [r1, #9]
10065f4c:	2002      	movs	r0, #2
10065f4e:	7208      	strb	r0, [r1, #8]
10065f50:	2700      	movs	r7, #0
10065f52:	71cf      	strb	r7, [r1, #7]
10065f54:	2006      	movs	r0, #6
10065f56:	7188      	strb	r0, [r1, #6]
10065f58:	20ff      	movs	r0, #255	@ 0xff
10065f5a:	7148      	strb	r0, [r1, #5]
10065f5c:	2082      	movs	r0, #130	@ 0x82
10065f5e:	7108      	strb	r0, [r1, #4]
10065f60:	0a30      	lsrs	r0, r6, #8
10065f62:	7348      	strb	r0, [r1, #13]
10065f64:	0a28      	lsrs	r0, r5, #8
10065f66:	72c8      	strb	r0, [r1, #11]
10065f68:	4620      	mov	r0, r4
10065f6a:	f7ea fa66 	bl	1005043a <aci_event_fifo_push>
10065f6e:	e000      	b.n	10065f72 <aci_gatt_proc_timeout_event_push_noinline+0x6a>
10065f70:	2707      	movs	r7, #7
10065f72:	4638      	mov	r0, r7
10065f74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10065f76:	46c0      	nop			@ (mov r8, r8)

10065f78 <__arm_cp.16_0>:
10065f78:	20000894 	.word	0x20000894

10065f7c <__arm_cp.16_1>:
10065f7c:	20000840 	.word	0x20000840

10065f80 <aci_gatt_clt_indication_event_push_noinline>:
10065f80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10065f82:	4605      	mov	r5, r0
10065f84:	06c0      	lsls	r0, r0, #27
10065f86:	d421      	bmi.n	10065fcc <aci_gatt_clt_indication_event_push_noinline+0x4c>
10065f88:	460e      	mov	r6, r1
10065f8a:	4813      	ldr	r0, [pc, #76]	@ (10065fd8 <__arm_cp.17_0>)
10065f8c:	6800      	ldr	r0, [r0, #0]
10065f8e:	2151      	movs	r1, #81	@ 0x51
10065f90:	5c40      	ldrb	r0, [r0, r1]
10065f92:	2400      	movs	r4, #0
10065f94:	0680      	lsls	r0, r0, #26
10065f96:	d51a      	bpl.n	10065fce <aci_gatt_clt_indication_event_push_noinline+0x4e>
10065f98:	4617      	mov	r7, r2
10065f9a:	9300      	str	r3, [sp, #0]
10065f9c:	480f      	ldr	r0, [pc, #60]	@ (10065fdc <__arm_cp.17_1>)
10065f9e:	6800      	ldr	r0, [r0, #0]
10065fa0:	0769      	lsls	r1, r5, #29
10065fa2:	0ec9      	lsrs	r1, r1, #27
10065fa4:	1840      	adds	r0, r0, r1
10065fa6:	6900      	ldr	r0, [r0, #16]
10065fa8:	220f      	movs	r2, #15
10065faa:	2303      	movs	r3, #3
10065fac:	4629      	mov	r1, r5
10065fae:	f7ea f9a7 	bl	10050300 <aci_event_fifo_push_header>
10065fb2:	2800      	cmp	r0, #0
10065fb4:	d00d      	beq.n	10065fd2 <aci_gatt_clt_indication_event_push_noinline+0x52>
10065fb6:	4601      	mov	r1, r0
10065fb8:	9800      	ldr	r0, [sp, #0]
10065fba:	60c8      	str	r0, [r1, #12]
10065fbc:	814f      	strh	r7, [r1, #10]
10065fbe:	810e      	strh	r6, [r1, #8]
10065fc0:	4807      	ldr	r0, [pc, #28]	@ (10065fe0 <__arm_cp.17_2>)
10065fc2:	6048      	str	r0, [r1, #4]
10065fc4:	4628      	mov	r0, r5
10065fc6:	f7ea fa38 	bl	1005043a <aci_event_fifo_push>
10065fca:	e000      	b.n	10065fce <aci_gatt_clt_indication_event_push_noinline+0x4e>
10065fcc:	2486      	movs	r4, #134	@ 0x86
10065fce:	4620      	mov	r0, r4
10065fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10065fd2:	2407      	movs	r4, #7
10065fd4:	e7fb      	b.n	10065fce <aci_gatt_clt_indication_event_push_noinline+0x4e>
10065fd6:	46c0      	nop			@ (mov r8, r8)

10065fd8 <__arm_cp.17_0>:
10065fd8:	20000894 	.word	0x20000894

10065fdc <__arm_cp.17_1>:
10065fdc:	20000840 	.word	0x20000840

10065fe0 <__arm_cp.17_2>:
10065fe0:	100659c1 	.word	0x100659c1

10065fe4 <aci_gatt_clt_notification_event_push_noinline>:
10065fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10065fe6:	4605      	mov	r5, r0
10065fe8:	06c0      	lsls	r0, r0, #27
10065fea:	d421      	bmi.n	10066030 <aci_gatt_clt_notification_event_push_noinline+0x4c>
10065fec:	460e      	mov	r6, r1
10065fee:	4813      	ldr	r0, [pc, #76]	@ (1006603c <__arm_cp.18_0>)
10065ff0:	6800      	ldr	r0, [r0, #0]
10065ff2:	2151      	movs	r1, #81	@ 0x51
10065ff4:	5c40      	ldrb	r0, [r0, r1]
10065ff6:	2400      	movs	r4, #0
10065ff8:	0640      	lsls	r0, r0, #25
10065ffa:	d51a      	bpl.n	10066032 <aci_gatt_clt_notification_event_push_noinline+0x4e>
10065ffc:	4617      	mov	r7, r2
10065ffe:	9300      	str	r3, [sp, #0]
10066000:	480f      	ldr	r0, [pc, #60]	@ (10066040 <__arm_cp.18_1>)
10066002:	6800      	ldr	r0, [r0, #0]
10066004:	0769      	lsls	r1, r5, #29
10066006:	0ec9      	lsrs	r1, r1, #27
10066008:	1840      	adds	r0, r0, r1
1006600a:	6900      	ldr	r0, [r0, #16]
1006600c:	2210      	movs	r2, #16
1006600e:	2303      	movs	r3, #3
10066010:	4629      	mov	r1, r5
10066012:	f7ea f975 	bl	10050300 <aci_event_fifo_push_header>
10066016:	2800      	cmp	r0, #0
10066018:	d00d      	beq.n	10066036 <aci_gatt_clt_notification_event_push_noinline+0x52>
1006601a:	4601      	mov	r1, r0
1006601c:	9800      	ldr	r0, [sp, #0]
1006601e:	60c8      	str	r0, [r1, #12]
10066020:	814f      	strh	r7, [r1, #10]
10066022:	810e      	strh	r6, [r1, #8]
10066024:	4807      	ldr	r0, [pc, #28]	@ (10066044 <__arm_cp.18_2>)
10066026:	6048      	str	r0, [r1, #4]
10066028:	4628      	mov	r0, r5
1006602a:	f7ea fa06 	bl	1005043a <aci_event_fifo_push>
1006602e:	e000      	b.n	10066032 <aci_gatt_clt_notification_event_push_noinline+0x4e>
10066030:	2486      	movs	r4, #134	@ 0x86
10066032:	4620      	mov	r0, r4
10066034:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066036:	2407      	movs	r4, #7
10066038:	e7fb      	b.n	10066032 <aci_gatt_clt_notification_event_push_noinline+0x4e>
1006603a:	46c0      	nop			@ (mov r8, r8)

1006603c <__arm_cp.18_0>:
1006603c:	20000894 	.word	0x20000894

10066040 <__arm_cp.18_1>:
10066040:	20000840 	.word	0x20000840

10066044 <__arm_cp.18_2>:
10066044:	10065a11 	.word	0x10065a11

10066048 <aci_gatt_clt_proc_complete_event_push_noinline>:
10066048:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006604a:	4604      	mov	r4, r0
1006604c:	06c0      	lsls	r0, r0, #27
1006604e:	d428      	bmi.n	100660a2 <aci_gatt_clt_proc_complete_event_push_noinline+0x5a>
10066050:	461f      	mov	r7, r3
10066052:	4616      	mov	r6, r2
10066054:	460d      	mov	r5, r1
10066056:	4815      	ldr	r0, [pc, #84]	@ (100660ac <__arm_cp.19_0>)
10066058:	6800      	ldr	r0, [r0, #0]
1006605a:	0761      	lsls	r1, r4, #29
1006605c:	0ec9      	lsrs	r1, r1, #27
1006605e:	1840      	adds	r0, r0, r1
10066060:	6900      	ldr	r0, [r0, #16]
10066062:	225a      	movs	r2, #90	@ 0x5a
10066064:	2303      	movs	r3, #3
10066066:	4621      	mov	r1, r4
10066068:	f7ea f94a 	bl	10050300 <aci_event_fifo_push_header>
1006606c:	2800      	cmp	r0, #0
1006606e:	d01a      	beq.n	100660a6 <aci_gatt_clt_proc_complete_event_push_noinline+0x5e>
10066070:	4601      	mov	r1, r0
10066072:	7306      	strb	r6, [r0, #12]
10066074:	7285      	strb	r5, [r0, #10]
10066076:	200c      	movs	r0, #12
10066078:	7248      	strb	r0, [r1, #9]
1006607a:	2010      	movs	r0, #16
1006607c:	7208      	strb	r0, [r1, #8]
1006607e:	463a      	mov	r2, r7
10066080:	2700      	movs	r7, #0
10066082:	71cf      	strb	r7, [r1, #7]
10066084:	2007      	movs	r0, #7
10066086:	7188      	strb	r0, [r1, #6]
10066088:	738a      	strb	r2, [r1, #14]
1006608a:	20ff      	movs	r0, #255	@ 0xff
1006608c:	7148      	strb	r0, [r1, #5]
1006608e:	2082      	movs	r0, #130	@ 0x82
10066090:	7108      	strb	r0, [r1, #4]
10066092:	0a30      	lsrs	r0, r6, #8
10066094:	7348      	strb	r0, [r1, #13]
10066096:	0a28      	lsrs	r0, r5, #8
10066098:	72c8      	strb	r0, [r1, #11]
1006609a:	4620      	mov	r0, r4
1006609c:	f7ea f9cd 	bl	1005043a <aci_event_fifo_push>
100660a0:	e002      	b.n	100660a8 <aci_gatt_clt_proc_complete_event_push_noinline+0x60>
100660a2:	2786      	movs	r7, #134	@ 0x86
100660a4:	e000      	b.n	100660a8 <aci_gatt_clt_proc_complete_event_push_noinline+0x60>
100660a6:	2707      	movs	r7, #7
100660a8:	4638      	mov	r0, r7
100660aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100660ac <__arm_cp.19_0>:
100660ac:	20000840 	.word	0x20000840

100660b0 <aci_gatt_clt_error_resp_event_push_noinline>:
100660b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100660b2:	4604      	mov	r4, r0
100660b4:	06c0      	lsls	r0, r0, #27
100660b6:	d408      	bmi.n	100660ca <aci_gatt_clt_error_resp_event_push_noinline+0x1a>
100660b8:	460d      	mov	r5, r1
100660ba:	481e      	ldr	r0, [pc, #120]	@ (10066134 <__arm_cp.20_0>)
100660bc:	6800      	ldr	r0, [r0, #0]
100660be:	2151      	movs	r1, #81	@ 0x51
100660c0:	5640      	ldrsb	r0, [r0, r1]
100660c2:	2800      	cmp	r0, #0
100660c4:	d404      	bmi.n	100660d0 <aci_gatt_clt_error_resp_event_push_noinline+0x20>
100660c6:	2700      	movs	r7, #0
100660c8:	e000      	b.n	100660cc <aci_gatt_clt_error_resp_event_push_noinline+0x1c>
100660ca:	2786      	movs	r7, #134	@ 0x86
100660cc:	4638      	mov	r0, r7
100660ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100660d0:	461f      	mov	r7, r3
100660d2:	4616      	mov	r6, r2
100660d4:	4818      	ldr	r0, [pc, #96]	@ (10066138 <__arm_cp.20_1>)
100660d6:	6800      	ldr	r0, [r0, #0]
100660d8:	0761      	lsls	r1, r4, #29
100660da:	0ec9      	lsrs	r1, r1, #27
100660dc:	1840      	adds	r0, r0, r1
100660de:	6900      	ldr	r0, [r0, #16]
100660e0:	225b      	movs	r2, #91	@ 0x5b
100660e2:	2304      	movs	r3, #4
100660e4:	4621      	mov	r1, r4
100660e6:	f7ea f90b 	bl	10050300 <aci_event_fifo_push_header>
100660ea:	2800      	cmp	r0, #0
100660ec:	d020      	beq.n	10066130 <aci_gatt_clt_error_resp_event_push_noinline+0x80>
100660ee:	4601      	mov	r1, r0
100660f0:	9a07      	ldr	r2, [sp, #28]
100660f2:	9806      	ldr	r0, [sp, #24]
100660f4:	9000      	str	r0, [sp, #0]
100660f6:	73c8      	strb	r0, [r1, #15]
100660f8:	730e      	strb	r6, [r1, #12]
100660fa:	728d      	strb	r5, [r1, #10]
100660fc:	230c      	movs	r3, #12
100660fe:	724b      	strb	r3, [r1, #9]
10066100:	2311      	movs	r3, #17
10066102:	720b      	strb	r3, [r1, #8]
10066104:	4638      	mov	r0, r7
10066106:	2700      	movs	r7, #0
10066108:	71cf      	strb	r7, [r1, #7]
1006610a:	230a      	movs	r3, #10
1006610c:	718b      	strb	r3, [r1, #6]
1006610e:	744a      	strb	r2, [r1, #17]
10066110:	7388      	strb	r0, [r1, #14]
10066112:	22ff      	movs	r2, #255	@ 0xff
10066114:	714a      	strb	r2, [r1, #5]
10066116:	2282      	movs	r2, #130	@ 0x82
10066118:	710a      	strb	r2, [r1, #4]
1006611a:	9800      	ldr	r0, [sp, #0]
1006611c:	0a00      	lsrs	r0, r0, #8
1006611e:	7408      	strb	r0, [r1, #16]
10066120:	0a30      	lsrs	r0, r6, #8
10066122:	7348      	strb	r0, [r1, #13]
10066124:	0a28      	lsrs	r0, r5, #8
10066126:	72c8      	strb	r0, [r1, #11]
10066128:	4620      	mov	r0, r4
1006612a:	f7ea f986 	bl	1005043a <aci_event_fifo_push>
1006612e:	e7cd      	b.n	100660cc <aci_gatt_clt_error_resp_event_push_noinline+0x1c>
10066130:	2707      	movs	r7, #7
10066132:	e7cb      	b.n	100660cc <aci_gatt_clt_error_resp_event_push_noinline+0x1c>

10066134 <__arm_cp.20_0>:
10066134:	20000894 	.word	0x20000894

10066138 <__arm_cp.20_1>:
10066138:	20000840 	.word	0x20000840

1006613c <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline>:
1006613c:	b5f0      	push	{r4, r5, r6, r7, lr}
1006613e:	b087      	sub	sp, #28
10066140:	4605      	mov	r5, r0
10066142:	06c0      	lsls	r0, r0, #27
10066144:	d443      	bmi.n	100661ce <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline+0x92>
10066146:	460e      	mov	r6, r1
10066148:	4824      	ldr	r0, [pc, #144]	@ (100661dc <__arm_cp.21_0>)
1006614a:	6800      	ldr	r0, [r0, #0]
1006614c:	2152      	movs	r1, #82	@ 0x52
1006614e:	5c40      	ldrb	r0, [r0, r1]
10066150:	2400      	movs	r4, #0
10066152:	0780      	lsls	r0, r0, #30
10066154:	d53c      	bpl.n	100661d0 <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline+0x94>
10066156:	9204      	str	r2, [sp, #16]
10066158:	9305      	str	r3, [sp, #20]
1006615a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1006615c:	4820      	ldr	r0, [pc, #128]	@ (100661e0 <__arm_cp.21_1>)
1006615e:	6800      	ldr	r0, [r0, #0]
10066160:	0769      	lsls	r1, r5, #29
10066162:	0ec9      	lsrs	r1, r1, #27
10066164:	1840      	adds	r0, r0, r1
10066166:	6900      	ldr	r0, [r0, #16]
10066168:	491e      	ldr	r1, [pc, #120]	@ (100661e4 <__arm_cp.21_2>)
1006616a:	9206      	str	r2, [sp, #24]
1006616c:	1851      	adds	r1, r2, r1
1006616e:	2203      	movs	r2, #3
10066170:	430a      	orrs	r2, r1
10066172:	3211      	adds	r2, #17
10066174:	0891      	lsrs	r1, r2, #2
10066176:	b28b      	uxth	r3, r1
10066178:	225c      	movs	r2, #92	@ 0x5c
1006617a:	4629      	mov	r1, r5
1006617c:	f7ea f8c0 	bl	10050300 <aci_event_fifo_push_header>
10066180:	2800      	cmp	r0, #0
10066182:	d028      	beq.n	100661d6 <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline+0x9a>
10066184:	4607      	mov	r7, r0
10066186:	990d      	ldr	r1, [sp, #52]	@ 0x34
10066188:	9806      	ldr	r0, [sp, #24]
1006618a:	9000      	str	r0, [sp, #0]
1006618c:	9103      	str	r1, [sp, #12]
1006618e:	9101      	str	r1, [sp, #4]
10066190:	1d38      	adds	r0, r7, #4
10066192:	4631      	mov	r1, r6
10066194:	9a04      	ldr	r2, [sp, #16]
10066196:	9b05      	ldr	r3, [sp, #20]
10066198:	f7ea fdf7 	bl	10050d8a <aci_gatt_clt_disc_read_char_by_uuid_resp_event_copy>
1006619c:	0728      	lsls	r0, r5, #28
1006619e:	d504      	bpl.n	100661aa <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline+0x6e>
100661a0:	9803      	ldr	r0, [sp, #12]
100661a2:	f7e9 fefb 	bl	1004ff9c <ACL_pkt_release>
100661a6:	20f7      	movs	r0, #247	@ 0xf7
100661a8:	4005      	ands	r5, r0
100661aa:	200c      	movs	r0, #12
100661ac:	7278      	strb	r0, [r7, #9]
100661ae:	2012      	movs	r0, #18
100661b0:	7238      	strb	r0, [r7, #8]
100661b2:	20ff      	movs	r0, #255	@ 0xff
100661b4:	7178      	strb	r0, [r7, #5]
100661b6:	2082      	movs	r0, #130	@ 0x82
100661b8:	7138      	strb	r0, [r7, #4]
100661ba:	9806      	ldr	r0, [sp, #24]
100661bc:	1dc0      	adds	r0, r0, #7
100661be:	71b8      	strb	r0, [r7, #6]
100661c0:	0a00      	lsrs	r0, r0, #8
100661c2:	71f8      	strb	r0, [r7, #7]
100661c4:	4628      	mov	r0, r5
100661c6:	4639      	mov	r1, r7
100661c8:	f7ea f937 	bl	1005043a <aci_event_fifo_push>
100661cc:	e000      	b.n	100661d0 <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline+0x94>
100661ce:	2486      	movs	r4, #134	@ 0x86
100661d0:	4620      	mov	r0, r4
100661d2:	b007      	add	sp, #28
100661d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
100661d6:	2407      	movs	r4, #7
100661d8:	e7fa      	b.n	100661d0 <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline+0x94>
100661da:	46c0      	nop			@ (mov r8, r8)

100661dc <__arm_cp.21_0>:
100661dc:	20000894 	.word	0x20000894

100661e0 <__arm_cp.21_1>:
100661e0:	20000840 	.word	0x20000840

100661e4 <__arm_cp.21_2>:
100661e4:	0003fffd 	.word	0x0003fffd

100661e8 <aci_gatt_tx_pool_available_event_push_noinline>:
100661e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100661ea:	4604      	mov	r4, r0
100661ec:	06c0      	lsls	r0, r0, #27
100661ee:	d425      	bmi.n	1006623c <aci_gatt_tx_pool_available_event_push_noinline+0x54>
100661f0:	4616      	mov	r6, r2
100661f2:	460d      	mov	r5, r1
100661f4:	4814      	ldr	r0, [pc, #80]	@ (10066248 <__arm_cp.22_0>)
100661f6:	6800      	ldr	r0, [r0, #0]
100661f8:	0761      	lsls	r1, r4, #29
100661fa:	0ec9      	lsrs	r1, r1, #27
100661fc:	1840      	adds	r0, r0, r1
100661fe:	6900      	ldr	r0, [r0, #16]
10066200:	225d      	movs	r2, #93	@ 0x5d
10066202:	2303      	movs	r3, #3
10066204:	4621      	mov	r1, r4
10066206:	f7ea f87b 	bl	10050300 <aci_event_fifo_push_header>
1006620a:	2800      	cmp	r0, #0
1006620c:	d018      	beq.n	10066240 <aci_gatt_tx_pool_available_event_push_noinline+0x58>
1006620e:	4601      	mov	r1, r0
10066210:	7306      	strb	r6, [r0, #12]
10066212:	7285      	strb	r5, [r0, #10]
10066214:	200c      	movs	r0, #12
10066216:	7248      	strb	r0, [r1, #9]
10066218:	2016      	movs	r0, #22
1006621a:	7208      	strb	r0, [r1, #8]
1006621c:	2700      	movs	r7, #0
1006621e:	71cf      	strb	r7, [r1, #7]
10066220:	2006      	movs	r0, #6
10066222:	7188      	strb	r0, [r1, #6]
10066224:	20ff      	movs	r0, #255	@ 0xff
10066226:	7148      	strb	r0, [r1, #5]
10066228:	2082      	movs	r0, #130	@ 0x82
1006622a:	7108      	strb	r0, [r1, #4]
1006622c:	0a30      	lsrs	r0, r6, #8
1006622e:	7348      	strb	r0, [r1, #13]
10066230:	0a28      	lsrs	r0, r5, #8
10066232:	72c8      	strb	r0, [r1, #11]
10066234:	4620      	mov	r0, r4
10066236:	f7ea f900 	bl	1005043a <aci_event_fifo_push>
1006623a:	e002      	b.n	10066242 <aci_gatt_tx_pool_available_event_push_noinline+0x5a>
1006623c:	2786      	movs	r7, #134	@ 0x86
1006623e:	e000      	b.n	10066242 <aci_gatt_tx_pool_available_event_push_noinline+0x5a>
10066240:	2707      	movs	r7, #7
10066242:	4638      	mov	r0, r7
10066244:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066246:	46c0      	nop			@ (mov r8, r8)

10066248 <__arm_cp.22_0>:
10066248:	20000840 	.word	0x20000840

1006624c <aci_gatt_srv_confirmation_event_push_noinline>:
1006624c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006624e:	4604      	mov	r4, r0
10066250:	06c0      	lsls	r0, r0, #27
10066252:	d425      	bmi.n	100662a0 <aci_gatt_srv_confirmation_event_push_noinline+0x54>
10066254:	4616      	mov	r6, r2
10066256:	460d      	mov	r5, r1
10066258:	4814      	ldr	r0, [pc, #80]	@ (100662ac <__arm_cp.23_0>)
1006625a:	6800      	ldr	r0, [r0, #0]
1006625c:	0761      	lsls	r1, r4, #29
1006625e:	0ec9      	lsrs	r1, r1, #27
10066260:	1840      	adds	r0, r0, r1
10066262:	6900      	ldr	r0, [r0, #16]
10066264:	225e      	movs	r2, #94	@ 0x5e
10066266:	2303      	movs	r3, #3
10066268:	4621      	mov	r1, r4
1006626a:	f7ea f849 	bl	10050300 <aci_event_fifo_push_header>
1006626e:	2800      	cmp	r0, #0
10066270:	d018      	beq.n	100662a4 <aci_gatt_srv_confirmation_event_push_noinline+0x58>
10066272:	4601      	mov	r1, r0
10066274:	7306      	strb	r6, [r0, #12]
10066276:	7285      	strb	r5, [r0, #10]
10066278:	200c      	movs	r0, #12
1006627a:	7248      	strb	r0, [r1, #9]
1006627c:	2017      	movs	r0, #23
1006627e:	7208      	strb	r0, [r1, #8]
10066280:	2700      	movs	r7, #0
10066282:	71cf      	strb	r7, [r1, #7]
10066284:	2006      	movs	r0, #6
10066286:	7188      	strb	r0, [r1, #6]
10066288:	20ff      	movs	r0, #255	@ 0xff
1006628a:	7148      	strb	r0, [r1, #5]
1006628c:	2082      	movs	r0, #130	@ 0x82
1006628e:	7108      	strb	r0, [r1, #4]
10066290:	0a30      	lsrs	r0, r6, #8
10066292:	7348      	strb	r0, [r1, #13]
10066294:	0a28      	lsrs	r0, r5, #8
10066296:	72c8      	strb	r0, [r1, #11]
10066298:	4620      	mov	r0, r4
1006629a:	f7ea f8ce 	bl	1005043a <aci_event_fifo_push>
1006629e:	e002      	b.n	100662a6 <aci_gatt_srv_confirmation_event_push_noinline+0x5a>
100662a0:	2786      	movs	r7, #134	@ 0x86
100662a2:	e000      	b.n	100662a6 <aci_gatt_srv_confirmation_event_push_noinline+0x5a>
100662a4:	2707      	movs	r7, #7
100662a6:	4638      	mov	r0, r7
100662a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100662aa:	46c0      	nop			@ (mov r8, r8)

100662ac <__arm_cp.23_0>:
100662ac:	20000840 	.word	0x20000840

100662b0 <aci_gatt_srv_read_event_push_noinline>:
100662b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100662b2:	4604      	mov	r4, r0
100662b4:	06c0      	lsls	r0, r0, #27
100662b6:	d42e      	bmi.n	10066316 <aci_gatt_srv_read_event_push_noinline+0x66>
100662b8:	461f      	mov	r7, r3
100662ba:	4616      	mov	r6, r2
100662bc:	460d      	mov	r5, r1
100662be:	4818      	ldr	r0, [pc, #96]	@ (10066320 <__arm_cp.24_0>)
100662c0:	6800      	ldr	r0, [r0, #0]
100662c2:	0761      	lsls	r1, r4, #29
100662c4:	0ec9      	lsrs	r1, r1, #27
100662c6:	1840      	adds	r0, r0, r1
100662c8:	6900      	ldr	r0, [r0, #16]
100662ca:	225f      	movs	r2, #95	@ 0x5f
100662cc:	2304      	movs	r3, #4
100662ce:	4621      	mov	r1, r4
100662d0:	f7ea f816 	bl	10050300 <aci_event_fifo_push_header>
100662d4:	2800      	cmp	r0, #0
100662d6:	d020      	beq.n	1006631a <aci_gatt_srv_read_event_push_noinline+0x6a>
100662d8:	4601      	mov	r1, r0
100662da:	9806      	ldr	r0, [sp, #24]
100662dc:	7408      	strb	r0, [r1, #16]
100662de:	738f      	strb	r7, [r1, #14]
100662e0:	730e      	strb	r6, [r1, #12]
100662e2:	728d      	strb	r5, [r1, #10]
100662e4:	220c      	movs	r2, #12
100662e6:	724a      	strb	r2, [r1, #9]
100662e8:	2219      	movs	r2, #25
100662ea:	720a      	strb	r2, [r1, #8]
100662ec:	462b      	mov	r3, r5
100662ee:	2500      	movs	r5, #0
100662f0:	71cd      	strb	r5, [r1, #7]
100662f2:	220a      	movs	r2, #10
100662f4:	718a      	strb	r2, [r1, #6]
100662f6:	22ff      	movs	r2, #255	@ 0xff
100662f8:	714a      	strb	r2, [r1, #5]
100662fa:	2282      	movs	r2, #130	@ 0x82
100662fc:	710a      	strb	r2, [r1, #4]
100662fe:	0a00      	lsrs	r0, r0, #8
10066300:	7448      	strb	r0, [r1, #17]
10066302:	0a38      	lsrs	r0, r7, #8
10066304:	73c8      	strb	r0, [r1, #15]
10066306:	0a30      	lsrs	r0, r6, #8
10066308:	7348      	strb	r0, [r1, #13]
1006630a:	0a18      	lsrs	r0, r3, #8
1006630c:	72c8      	strb	r0, [r1, #11]
1006630e:	4620      	mov	r0, r4
10066310:	f7ea f893 	bl	1005043a <aci_event_fifo_push>
10066314:	e002      	b.n	1006631c <aci_gatt_srv_read_event_push_noinline+0x6c>
10066316:	2586      	movs	r5, #134	@ 0x86
10066318:	e000      	b.n	1006631c <aci_gatt_srv_read_event_push_noinline+0x6c>
1006631a:	2507      	movs	r5, #7
1006631c:	4628      	mov	r0, r5
1006631e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10066320 <__arm_cp.24_0>:
10066320:	20000840 	.word	0x20000840

10066324 <aci_gatt_srv_write_event_push_noinline>:
10066324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066326:	4604      	mov	r4, r0
10066328:	06c0      	lsls	r0, r0, #27
1006632a:	d420      	bmi.n	1006636e <aci_gatt_srv_write_event_push_noinline+0x4a>
1006632c:	461f      	mov	r7, r3
1006632e:	4616      	mov	r6, r2
10066330:	460d      	mov	r5, r1
10066332:	4811      	ldr	r0, [pc, #68]	@ (10066378 <__arm_cp.25_0>)
10066334:	6800      	ldr	r0, [r0, #0]
10066336:	0761      	lsls	r1, r4, #29
10066338:	0ec9      	lsrs	r1, r1, #27
1006633a:	1840      	adds	r0, r0, r1
1006633c:	6900      	ldr	r0, [r0, #16]
1006633e:	2211      	movs	r2, #17
10066340:	2305      	movs	r3, #5
10066342:	4621      	mov	r1, r4
10066344:	f7e9 ffdc 	bl	10050300 <aci_event_fifo_push_header>
10066348:	2800      	cmp	r0, #0
1006634a:	d012      	beq.n	10066372 <aci_gatt_srv_write_event_push_noinline+0x4e>
1006634c:	4601      	mov	r1, r0
1006634e:	9808      	ldr	r0, [sp, #32]
10066350:	9a07      	ldr	r2, [sp, #28]
10066352:	9b06      	ldr	r3, [sp, #24]
10066354:	6148      	str	r0, [r1, #20]
10066356:	820a      	strh	r2, [r1, #16]
10066358:	81cb      	strh	r3, [r1, #14]
1006635a:	730f      	strb	r7, [r1, #12]
1006635c:	814e      	strh	r6, [r1, #10]
1006635e:	810d      	strh	r5, [r1, #8]
10066360:	4806      	ldr	r0, [pc, #24]	@ (1006637c <__arm_cp.25_1>)
10066362:	6048      	str	r0, [r1, #4]
10066364:	4620      	mov	r0, r4
10066366:	f7ea f868 	bl	1005043a <aci_event_fifo_push>
1006636a:	2000      	movs	r0, #0
1006636c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006636e:	2086      	movs	r0, #134	@ 0x86
10066370:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066372:	2007      	movs	r0, #7
10066374:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066376:	46c0      	nop			@ (mov r8, r8)

10066378 <__arm_cp.25_0>:
10066378:	20000840 	.word	0x20000840

1006637c <__arm_cp.25_1>:
1006637c:	10065a4d 	.word	0x10065a4d

10066380 <aci_gatt_clt_multi_notification_int_event_push_noinline>:
10066380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066382:	4605      	mov	r5, r0
10066384:	06c0      	lsls	r0, r0, #27
10066386:	d421      	bmi.n	100663cc <aci_gatt_clt_multi_notification_int_event_push_noinline+0x4c>
10066388:	460e      	mov	r6, r1
1006638a:	4813      	ldr	r0, [pc, #76]	@ (100663d8 <__arm_cp.26_0>)
1006638c:	6800      	ldr	r0, [r0, #0]
1006638e:	2152      	movs	r1, #82	@ 0x52
10066390:	5c40      	ldrb	r0, [r0, r1]
10066392:	2400      	movs	r4, #0
10066394:	0700      	lsls	r0, r0, #28
10066396:	d51a      	bpl.n	100663ce <aci_gatt_clt_multi_notification_int_event_push_noinline+0x4e>
10066398:	4617      	mov	r7, r2
1006639a:	9300      	str	r3, [sp, #0]
1006639c:	480f      	ldr	r0, [pc, #60]	@ (100663dc <__arm_cp.26_1>)
1006639e:	6800      	ldr	r0, [r0, #0]
100663a0:	0769      	lsls	r1, r5, #29
100663a2:	0ec9      	lsrs	r1, r1, #27
100663a4:	1840      	adds	r0, r0, r1
100663a6:	6900      	ldr	r0, [r0, #16]
100663a8:	2214      	movs	r2, #20
100663aa:	2303      	movs	r3, #3
100663ac:	4629      	mov	r1, r5
100663ae:	f7e9 ffa7 	bl	10050300 <aci_event_fifo_push_header>
100663b2:	2800      	cmp	r0, #0
100663b4:	d00d      	beq.n	100663d2 <aci_gatt_clt_multi_notification_int_event_push_noinline+0x52>
100663b6:	4601      	mov	r1, r0
100663b8:	9800      	ldr	r0, [sp, #0]
100663ba:	60c8      	str	r0, [r1, #12]
100663bc:	814f      	strh	r7, [r1, #10]
100663be:	810e      	strh	r6, [r1, #8]
100663c0:	4807      	ldr	r0, [pc, #28]	@ (100663e0 <__arm_cp.26_2>)
100663c2:	6048      	str	r0, [r1, #4]
100663c4:	4628      	mov	r0, r5
100663c6:	f7ea f838 	bl	1005043a <aci_event_fifo_push>
100663ca:	e000      	b.n	100663ce <aci_gatt_clt_multi_notification_int_event_push_noinline+0x4e>
100663cc:	2486      	movs	r4, #134	@ 0x86
100663ce:	4620      	mov	r0, r4
100663d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100663d2:	2407      	movs	r4, #7
100663d4:	e7fb      	b.n	100663ce <aci_gatt_clt_multi_notification_int_event_push_noinline+0x4e>
100663d6:	46c0      	nop			@ (mov r8, r8)

100663d8 <__arm_cp.26_0>:
100663d8:	20000894 	.word	0x20000894

100663dc <__arm_cp.26_1>:
100663dc:	20000840 	.word	0x20000840

100663e0 <__arm_cp.26_2>:
100663e0:	10065aad 	.word	0x10065aad

100663e4 <aci_att_exchange_mtu_resp_event_push_noinline>:
100663e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100663e6:	4604      	mov	r4, r0
100663e8:	06c0      	lsls	r0, r0, #27
100663ea:	d408      	bmi.n	100663fe <aci_att_exchange_mtu_resp_event_push_noinline+0x1a>
100663ec:	460d      	mov	r5, r1
100663ee:	4819      	ldr	r0, [pc, #100]	@ (10066454 <__arm_cp.27_0>)
100663f0:	6800      	ldr	r0, [r0, #0]
100663f2:	2150      	movs	r1, #80	@ 0x50
100663f4:	5c40      	ldrb	r0, [r0, r1]
100663f6:	0740      	lsls	r0, r0, #29
100663f8:	d403      	bmi.n	10066402 <aci_att_exchange_mtu_resp_event_push_noinline+0x1e>
100663fa:	2700      	movs	r7, #0
100663fc:	e027      	b.n	1006644e <aci_att_exchange_mtu_resp_event_push_noinline+0x6a>
100663fe:	2786      	movs	r7, #134	@ 0x86
10066400:	e025      	b.n	1006644e <aci_att_exchange_mtu_resp_event_push_noinline+0x6a>
10066402:	4616      	mov	r6, r2
10066404:	4814      	ldr	r0, [pc, #80]	@ (10066458 <__arm_cp.27_1>)
10066406:	6800      	ldr	r0, [r0, #0]
10066408:	0761      	lsls	r1, r4, #29
1006640a:	0ec9      	lsrs	r1, r1, #27
1006640c:	1840      	adds	r0, r0, r1
1006640e:	6900      	ldr	r0, [r0, #16]
10066410:	2258      	movs	r2, #88	@ 0x58
10066412:	2703      	movs	r7, #3
10066414:	4621      	mov	r1, r4
10066416:	463b      	mov	r3, r7
10066418:	f7e9 ff72 	bl	10050300 <aci_event_fifo_push_header>
1006641c:	2800      	cmp	r0, #0
1006641e:	d015      	beq.n	1006644c <aci_att_exchange_mtu_resp_event_push_noinline+0x68>
10066420:	4601      	mov	r1, r0
10066422:	7306      	strb	r6, [r0, #12]
10066424:	7285      	strb	r5, [r0, #10]
10066426:	200c      	movs	r0, #12
10066428:	7248      	strb	r0, [r1, #9]
1006642a:	720f      	strb	r7, [r1, #8]
1006642c:	2700      	movs	r7, #0
1006642e:	71cf      	strb	r7, [r1, #7]
10066430:	2006      	movs	r0, #6
10066432:	7188      	strb	r0, [r1, #6]
10066434:	20ff      	movs	r0, #255	@ 0xff
10066436:	7148      	strb	r0, [r1, #5]
10066438:	2082      	movs	r0, #130	@ 0x82
1006643a:	7108      	strb	r0, [r1, #4]
1006643c:	0a30      	lsrs	r0, r6, #8
1006643e:	7348      	strb	r0, [r1, #13]
10066440:	0a28      	lsrs	r0, r5, #8
10066442:	72c8      	strb	r0, [r1, #11]
10066444:	4620      	mov	r0, r4
10066446:	f7e9 fff8 	bl	1005043a <aci_event_fifo_push>
1006644a:	e000      	b.n	1006644e <aci_att_exchange_mtu_resp_event_push_noinline+0x6a>
1006644c:	2707      	movs	r7, #7
1006644e:	4638      	mov	r0, r7
10066450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066452:	46c0      	nop			@ (mov r8, r8)

10066454 <__arm_cp.27_0>:
10066454:	20000894 	.word	0x20000894

10066458 <__arm_cp.27_1>:
10066458:	20000840 	.word	0x20000840

1006645c <aci_att_clt_find_info_resp_event_push_noinline>:
1006645c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1006645e:	4604      	mov	r4, r0
10066460:	06c0      	lsls	r0, r0, #27
10066462:	d424      	bmi.n	100664ae <aci_att_clt_find_info_resp_event_push_noinline+0x52>
10066464:	4616      	mov	r6, r2
10066466:	4813      	ldr	r0, [pc, #76]	@ (100664b4 <__arm_cp.28_0>)
10066468:	6800      	ldr	r0, [r0, #0]
1006646a:	2250      	movs	r2, #80	@ 0x50
1006646c:	5c80      	ldrb	r0, [r0, r2]
1006646e:	2500      	movs	r5, #0
10066470:	0700      	lsls	r0, r0, #28
10066472:	d51d      	bpl.n	100664b0 <aci_att_clt_find_info_resp_event_push_noinline+0x54>
10066474:	461f      	mov	r7, r3
10066476:	9101      	str	r1, [sp, #4]
10066478:	9502      	str	r5, [sp, #8]
1006647a:	480f      	ldr	r0, [pc, #60]	@ (100664b8 <__arm_cp.28_1>)
1006647c:	6800      	ldr	r0, [r0, #0]
1006647e:	0761      	lsls	r1, r4, #29
10066480:	0ec9      	lsrs	r1, r1, #27
10066482:	1840      	adds	r0, r0, r1
10066484:	6900      	ldr	r0, [r0, #16]
10066486:	2507      	movs	r5, #7
10066488:	2303      	movs	r3, #3
1006648a:	4621      	mov	r1, r4
1006648c:	462a      	mov	r2, r5
1006648e:	f7e9 ff37 	bl	10050300 <aci_event_fifo_push_header>
10066492:	2800      	cmp	r0, #0
10066494:	d00c      	beq.n	100664b0 <aci_att_clt_find_info_resp_event_push_noinline+0x54>
10066496:	4601      	mov	r1, r0
10066498:	60c7      	str	r7, [r0, #12]
1006649a:	8146      	strh	r6, [r0, #10]
1006649c:	9801      	ldr	r0, [sp, #4]
1006649e:	8108      	strh	r0, [r1, #8]
100664a0:	4806      	ldr	r0, [pc, #24]	@ (100664bc <__arm_cp.28_2>)
100664a2:	6048      	str	r0, [r1, #4]
100664a4:	4620      	mov	r0, r4
100664a6:	f7e9 ffc8 	bl	1005043a <aci_event_fifo_push>
100664aa:	9d02      	ldr	r5, [sp, #8]
100664ac:	e000      	b.n	100664b0 <aci_att_clt_find_info_resp_event_push_noinline+0x54>
100664ae:	2586      	movs	r5, #134	@ 0x86
100664b0:	4628      	mov	r0, r5
100664b2:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100664b4 <__arm_cp.28_0>:
100664b4:	20000894 	.word	0x20000894

100664b8 <__arm_cp.28_1>:
100664b8:	20000840 	.word	0x20000840

100664bc <__arm_cp.28_2>:
100664bc:	10065b2d 	.word	0x10065b2d

100664c0 <aci_att_clt_find_by_type_value_resp_event_push_noinline>:
100664c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100664c2:	4605      	mov	r5, r0
100664c4:	06c0      	lsls	r0, r0, #27
100664c6:	d421      	bmi.n	1006650c <aci_att_clt_find_by_type_value_resp_event_push_noinline+0x4c>
100664c8:	460e      	mov	r6, r1
100664ca:	4813      	ldr	r0, [pc, #76]	@ (10066518 <__arm_cp.29_0>)
100664cc:	6800      	ldr	r0, [r0, #0]
100664ce:	2150      	movs	r1, #80	@ 0x50
100664d0:	5c40      	ldrb	r0, [r0, r1]
100664d2:	2400      	movs	r4, #0
100664d4:	06c0      	lsls	r0, r0, #27
100664d6:	d51a      	bpl.n	1006650e <aci_att_clt_find_by_type_value_resp_event_push_noinline+0x4e>
100664d8:	4617      	mov	r7, r2
100664da:	9300      	str	r3, [sp, #0]
100664dc:	480f      	ldr	r0, [pc, #60]	@ (1006651c <__arm_cp.29_1>)
100664de:	6800      	ldr	r0, [r0, #0]
100664e0:	0769      	lsls	r1, r5, #29
100664e2:	0ec9      	lsrs	r1, r1, #27
100664e4:	1840      	adds	r0, r0, r1
100664e6:	6900      	ldr	r0, [r0, #16]
100664e8:	2208      	movs	r2, #8
100664ea:	2303      	movs	r3, #3
100664ec:	4629      	mov	r1, r5
100664ee:	f7e9 ff07 	bl	10050300 <aci_event_fifo_push_header>
100664f2:	2800      	cmp	r0, #0
100664f4:	d00d      	beq.n	10066512 <aci_att_clt_find_by_type_value_resp_event_push_noinline+0x52>
100664f6:	4601      	mov	r1, r0
100664f8:	9800      	ldr	r0, [sp, #0]
100664fa:	60c8      	str	r0, [r1, #12]
100664fc:	814f      	strh	r7, [r1, #10]
100664fe:	810e      	strh	r6, [r1, #8]
10066500:	4807      	ldr	r0, [pc, #28]	@ (10066520 <__arm_cp.29_2>)
10066502:	6048      	str	r0, [r1, #4]
10066504:	4628      	mov	r0, r5
10066506:	f7e9 ff98 	bl	1005043a <aci_event_fifo_push>
1006650a:	e000      	b.n	1006650e <aci_att_clt_find_by_type_value_resp_event_push_noinline+0x4e>
1006650c:	2486      	movs	r4, #134	@ 0x86
1006650e:	4620      	mov	r0, r4
10066510:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066512:	2407      	movs	r4, #7
10066514:	e7fb      	b.n	1006650e <aci_att_clt_find_by_type_value_resp_event_push_noinline+0x4e>
10066516:	46c0      	nop			@ (mov r8, r8)

10066518 <__arm_cp.29_0>:
10066518:	20000894 	.word	0x20000894

1006651c <__arm_cp.29_1>:
1006651c:	20000840 	.word	0x20000840

10066520 <__arm_cp.29_2>:
10066520:	10065b81 	.word	0x10065b81

10066524 <aci_att_clt_read_by_type_resp_event_push_noinline>:
10066524:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066526:	4605      	mov	r5, r0
10066528:	06c0      	lsls	r0, r0, #27
1006652a:	d421      	bmi.n	10066570 <aci_att_clt_read_by_type_resp_event_push_noinline+0x4c>
1006652c:	460e      	mov	r6, r1
1006652e:	4813      	ldr	r0, [pc, #76]	@ (1006657c <__arm_cp.30_0>)
10066530:	6800      	ldr	r0, [r0, #0]
10066532:	2150      	movs	r1, #80	@ 0x50
10066534:	5c40      	ldrb	r0, [r0, r1]
10066536:	2400      	movs	r4, #0
10066538:	0680      	lsls	r0, r0, #26
1006653a:	d51a      	bpl.n	10066572 <aci_att_clt_read_by_type_resp_event_push_noinline+0x4e>
1006653c:	4617      	mov	r7, r2
1006653e:	9300      	str	r3, [sp, #0]
10066540:	480f      	ldr	r0, [pc, #60]	@ (10066580 <__arm_cp.30_1>)
10066542:	6800      	ldr	r0, [r0, #0]
10066544:	0769      	lsls	r1, r5, #29
10066546:	0ec9      	lsrs	r1, r1, #27
10066548:	1840      	adds	r0, r0, r1
1006654a:	6900      	ldr	r0, [r0, #16]
1006654c:	2209      	movs	r2, #9
1006654e:	2303      	movs	r3, #3
10066550:	4629      	mov	r1, r5
10066552:	f7e9 fed5 	bl	10050300 <aci_event_fifo_push_header>
10066556:	2800      	cmp	r0, #0
10066558:	d00d      	beq.n	10066576 <aci_att_clt_read_by_type_resp_event_push_noinline+0x52>
1006655a:	4601      	mov	r1, r0
1006655c:	9800      	ldr	r0, [sp, #0]
1006655e:	60c8      	str	r0, [r1, #12]
10066560:	814f      	strh	r7, [r1, #10]
10066562:	810e      	strh	r6, [r1, #8]
10066564:	4807      	ldr	r0, [pc, #28]	@ (10066584 <__arm_cp.30_2>)
10066566:	6048      	str	r0, [r1, #4]
10066568:	4628      	mov	r0, r5
1006656a:	f7e9 ff66 	bl	1005043a <aci_event_fifo_push>
1006656e:	e000      	b.n	10066572 <aci_att_clt_read_by_type_resp_event_push_noinline+0x4e>
10066570:	2486      	movs	r4, #134	@ 0x86
10066572:	4620      	mov	r0, r4
10066574:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066576:	2407      	movs	r4, #7
10066578:	e7fb      	b.n	10066572 <aci_att_clt_read_by_type_resp_event_push_noinline+0x4e>
1006657a:	46c0      	nop			@ (mov r8, r8)

1006657c <__arm_cp.30_0>:
1006657c:	20000894 	.word	0x20000894

10066580 <__arm_cp.30_1>:
10066580:	20000840 	.word	0x20000840

10066584 <__arm_cp.30_2>:
10066584:	10065bcd 	.word	0x10065bcd

10066588 <aci_att_clt_read_resp_event_push_noinline>:
10066588:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006658a:	4605      	mov	r5, r0
1006658c:	06c0      	lsls	r0, r0, #27
1006658e:	d421      	bmi.n	100665d4 <aci_att_clt_read_resp_event_push_noinline+0x4c>
10066590:	460e      	mov	r6, r1
10066592:	4813      	ldr	r0, [pc, #76]	@ (100665e0 <__arm_cp.31_0>)
10066594:	6800      	ldr	r0, [r0, #0]
10066596:	2150      	movs	r1, #80	@ 0x50
10066598:	5c40      	ldrb	r0, [r0, r1]
1006659a:	2400      	movs	r4, #0
1006659c:	0640      	lsls	r0, r0, #25
1006659e:	d51a      	bpl.n	100665d6 <aci_att_clt_read_resp_event_push_noinline+0x4e>
100665a0:	4617      	mov	r7, r2
100665a2:	9300      	str	r3, [sp, #0]
100665a4:	480f      	ldr	r0, [pc, #60]	@ (100665e4 <__arm_cp.31_1>)
100665a6:	6800      	ldr	r0, [r0, #0]
100665a8:	0769      	lsls	r1, r5, #29
100665aa:	0ec9      	lsrs	r1, r1, #27
100665ac:	1840      	adds	r0, r0, r1
100665ae:	6900      	ldr	r0, [r0, #16]
100665b0:	220a      	movs	r2, #10
100665b2:	2303      	movs	r3, #3
100665b4:	4629      	mov	r1, r5
100665b6:	f7e9 fea3 	bl	10050300 <aci_event_fifo_push_header>
100665ba:	2800      	cmp	r0, #0
100665bc:	d00d      	beq.n	100665da <aci_att_clt_read_resp_event_push_noinline+0x52>
100665be:	4601      	mov	r1, r0
100665c0:	9800      	ldr	r0, [sp, #0]
100665c2:	60c8      	str	r0, [r1, #12]
100665c4:	814f      	strh	r7, [r1, #10]
100665c6:	810e      	strh	r6, [r1, #8]
100665c8:	4807      	ldr	r0, [pc, #28]	@ (100665e8 <__arm_cp.31_2>)
100665ca:	6048      	str	r0, [r1, #4]
100665cc:	4628      	mov	r0, r5
100665ce:	f7e9 ff34 	bl	1005043a <aci_event_fifo_push>
100665d2:	e000      	b.n	100665d6 <aci_att_clt_read_resp_event_push_noinline+0x4e>
100665d4:	2486      	movs	r4, #134	@ 0x86
100665d6:	4620      	mov	r0, r4
100665d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100665da:	2407      	movs	r4, #7
100665dc:	e7fb      	b.n	100665d6 <aci_att_clt_read_resp_event_push_noinline+0x4e>
100665de:	46c0      	nop			@ (mov r8, r8)

100665e0 <__arm_cp.31_0>:
100665e0:	20000894 	.word	0x20000894

100665e4 <__arm_cp.31_1>:
100665e4:	20000840 	.word	0x20000840

100665e8 <__arm_cp.31_2>:
100665e8:	10065c21 	.word	0x10065c21

100665ec <aci_att_clt_read_blob_resp_event_push_noinline>:
100665ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100665ee:	4605      	mov	r5, r0
100665f0:	06c0      	lsls	r0, r0, #27
100665f2:	d421      	bmi.n	10066638 <aci_att_clt_read_blob_resp_event_push_noinline+0x4c>
100665f4:	460e      	mov	r6, r1
100665f6:	4813      	ldr	r0, [pc, #76]	@ (10066644 <__arm_cp.32_0>)
100665f8:	6800      	ldr	r0, [r0, #0]
100665fa:	2150      	movs	r1, #80	@ 0x50
100665fc:	5640      	ldrsb	r0, [r0, r1]
100665fe:	2400      	movs	r4, #0
10066600:	2800      	cmp	r0, #0
10066602:	d51a      	bpl.n	1006663a <aci_att_clt_read_blob_resp_event_push_noinline+0x4e>
10066604:	4617      	mov	r7, r2
10066606:	9300      	str	r3, [sp, #0]
10066608:	480f      	ldr	r0, [pc, #60]	@ (10066648 <__arm_cp.32_1>)
1006660a:	6800      	ldr	r0, [r0, #0]
1006660c:	0769      	lsls	r1, r5, #29
1006660e:	0ec9      	lsrs	r1, r1, #27
10066610:	1840      	adds	r0, r0, r1
10066612:	6900      	ldr	r0, [r0, #16]
10066614:	220b      	movs	r2, #11
10066616:	2303      	movs	r3, #3
10066618:	4629      	mov	r1, r5
1006661a:	f7e9 fe71 	bl	10050300 <aci_event_fifo_push_header>
1006661e:	2800      	cmp	r0, #0
10066620:	d00d      	beq.n	1006663e <aci_att_clt_read_blob_resp_event_push_noinline+0x52>
10066622:	4601      	mov	r1, r0
10066624:	9800      	ldr	r0, [sp, #0]
10066626:	60c8      	str	r0, [r1, #12]
10066628:	814f      	strh	r7, [r1, #10]
1006662a:	810e      	strh	r6, [r1, #8]
1006662c:	4807      	ldr	r0, [pc, #28]	@ (1006664c <__arm_cp.32_2>)
1006662e:	6048      	str	r0, [r1, #4]
10066630:	4628      	mov	r0, r5
10066632:	f7e9 ff02 	bl	1005043a <aci_event_fifo_push>
10066636:	e000      	b.n	1006663a <aci_att_clt_read_blob_resp_event_push_noinline+0x4e>
10066638:	2486      	movs	r4, #134	@ 0x86
1006663a:	4620      	mov	r0, r4
1006663c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006663e:	2407      	movs	r4, #7
10066640:	e7fb      	b.n	1006663a <aci_att_clt_read_blob_resp_event_push_noinline+0x4e>
10066642:	46c0      	nop			@ (mov r8, r8)

10066644 <__arm_cp.32_0>:
10066644:	20000894 	.word	0x20000894

10066648 <__arm_cp.32_1>:
10066648:	20000840 	.word	0x20000840

1006664c <__arm_cp.32_2>:
1006664c:	10065c71 	.word	0x10065c71

10066650 <aci_att_clt_read_multiple_resp_event_push_noinline>:
10066650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066652:	4605      	mov	r5, r0
10066654:	06c0      	lsls	r0, r0, #27
10066656:	d421      	bmi.n	1006669c <aci_att_clt_read_multiple_resp_event_push_noinline+0x4c>
10066658:	460e      	mov	r6, r1
1006665a:	4813      	ldr	r0, [pc, #76]	@ (100666a8 <__arm_cp.33_0>)
1006665c:	6800      	ldr	r0, [r0, #0]
1006665e:	2151      	movs	r1, #81	@ 0x51
10066660:	5c40      	ldrb	r0, [r0, r1]
10066662:	2400      	movs	r4, #0
10066664:	07c0      	lsls	r0, r0, #31
10066666:	d01a      	beq.n	1006669e <aci_att_clt_read_multiple_resp_event_push_noinline+0x4e>
10066668:	4617      	mov	r7, r2
1006666a:	9300      	str	r3, [sp, #0]
1006666c:	480f      	ldr	r0, [pc, #60]	@ (100666ac <__arm_cp.33_1>)
1006666e:	6800      	ldr	r0, [r0, #0]
10066670:	0769      	lsls	r1, r5, #29
10066672:	0ec9      	lsrs	r1, r1, #27
10066674:	1840      	adds	r0, r0, r1
10066676:	6900      	ldr	r0, [r0, #16]
10066678:	220c      	movs	r2, #12
1006667a:	2303      	movs	r3, #3
1006667c:	4629      	mov	r1, r5
1006667e:	f7e9 fe3f 	bl	10050300 <aci_event_fifo_push_header>
10066682:	2800      	cmp	r0, #0
10066684:	d00d      	beq.n	100666a2 <aci_att_clt_read_multiple_resp_event_push_noinline+0x52>
10066686:	4601      	mov	r1, r0
10066688:	9800      	ldr	r0, [sp, #0]
1006668a:	60c8      	str	r0, [r1, #12]
1006668c:	814f      	strh	r7, [r1, #10]
1006668e:	810e      	strh	r6, [r1, #8]
10066690:	4807      	ldr	r0, [pc, #28]	@ (100666b0 <__arm_cp.33_2>)
10066692:	6048      	str	r0, [r1, #4]
10066694:	4628      	mov	r0, r5
10066696:	f7e9 fed0 	bl	1005043a <aci_event_fifo_push>
1006669a:	e000      	b.n	1006669e <aci_att_clt_read_multiple_resp_event_push_noinline+0x4e>
1006669c:	2486      	movs	r4, #134	@ 0x86
1006669e:	4620      	mov	r0, r4
100666a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100666a2:	2407      	movs	r4, #7
100666a4:	e7fb      	b.n	1006669e <aci_att_clt_read_multiple_resp_event_push_noinline+0x4e>
100666a6:	46c0      	nop			@ (mov r8, r8)

100666a8 <__arm_cp.33_0>:
100666a8:	20000894 	.word	0x20000894

100666ac <__arm_cp.33_1>:
100666ac:	20000840 	.word	0x20000840

100666b0 <__arm_cp.33_2>:
100666b0:	10065cc1 	.word	0x10065cc1

100666b4 <aci_att_clt_read_by_group_type_resp_event_push_noinline>:
100666b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100666b6:	4605      	mov	r5, r0
100666b8:	06c0      	lsls	r0, r0, #27
100666ba:	d421      	bmi.n	10066700 <aci_att_clt_read_by_group_type_resp_event_push_noinline+0x4c>
100666bc:	460e      	mov	r6, r1
100666be:	4813      	ldr	r0, [pc, #76]	@ (1006670c <__arm_cp.34_0>)
100666c0:	6800      	ldr	r0, [r0, #0]
100666c2:	2151      	movs	r1, #81	@ 0x51
100666c4:	5c40      	ldrb	r0, [r0, r1]
100666c6:	2400      	movs	r4, #0
100666c8:	0780      	lsls	r0, r0, #30
100666ca:	d51a      	bpl.n	10066702 <aci_att_clt_read_by_group_type_resp_event_push_noinline+0x4e>
100666cc:	4617      	mov	r7, r2
100666ce:	9300      	str	r3, [sp, #0]
100666d0:	480f      	ldr	r0, [pc, #60]	@ (10066710 <__arm_cp.34_1>)
100666d2:	6800      	ldr	r0, [r0, #0]
100666d4:	0769      	lsls	r1, r5, #29
100666d6:	0ec9      	lsrs	r1, r1, #27
100666d8:	1840      	adds	r0, r0, r1
100666da:	6900      	ldr	r0, [r0, #16]
100666dc:	220d      	movs	r2, #13
100666de:	2303      	movs	r3, #3
100666e0:	4629      	mov	r1, r5
100666e2:	f7e9 fe0d 	bl	10050300 <aci_event_fifo_push_header>
100666e6:	2800      	cmp	r0, #0
100666e8:	d00d      	beq.n	10066706 <aci_att_clt_read_by_group_type_resp_event_push_noinline+0x52>
100666ea:	4601      	mov	r1, r0
100666ec:	9800      	ldr	r0, [sp, #0]
100666ee:	60c8      	str	r0, [r1, #12]
100666f0:	814f      	strh	r7, [r1, #10]
100666f2:	810e      	strh	r6, [r1, #8]
100666f4:	4807      	ldr	r0, [pc, #28]	@ (10066714 <__arm_cp.34_2>)
100666f6:	6048      	str	r0, [r1, #4]
100666f8:	4628      	mov	r0, r5
100666fa:	f7e9 fe9e 	bl	1005043a <aci_event_fifo_push>
100666fe:	e000      	b.n	10066702 <aci_att_clt_read_by_group_type_resp_event_push_noinline+0x4e>
10066700:	2486      	movs	r4, #134	@ 0x86
10066702:	4620      	mov	r0, r4
10066704:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066706:	2407      	movs	r4, #7
10066708:	e7fb      	b.n	10066702 <aci_att_clt_read_by_group_type_resp_event_push_noinline+0x4e>
1006670a:	46c0      	nop			@ (mov r8, r8)

1006670c <__arm_cp.34_0>:
1006670c:	20000894 	.word	0x20000894

10066710 <__arm_cp.34_1>:
10066710:	20000840 	.word	0x20000840

10066714 <__arm_cp.34_2>:
10066714:	10065d11 	.word	0x10065d11

10066718 <aci_att_clt_prepare_write_resp_event_push_noinline>:
10066718:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006671a:	4605      	mov	r5, r0
1006671c:	06c0      	lsls	r0, r0, #27
1006671e:	d421      	bmi.n	10066764 <aci_att_clt_prepare_write_resp_event_push_noinline+0x4c>
10066720:	460e      	mov	r6, r1
10066722:	4813      	ldr	r0, [pc, #76]	@ (10066770 <__arm_cp.35_0>)
10066724:	6800      	ldr	r0, [r0, #0]
10066726:	2151      	movs	r1, #81	@ 0x51
10066728:	5c40      	ldrb	r0, [r0, r1]
1006672a:	2400      	movs	r4, #0
1006672c:	0700      	lsls	r0, r0, #28
1006672e:	d51a      	bpl.n	10066766 <aci_att_clt_prepare_write_resp_event_push_noinline+0x4e>
10066730:	4617      	mov	r7, r2
10066732:	9300      	str	r3, [sp, #0]
10066734:	480f      	ldr	r0, [pc, #60]	@ (10066774 <__arm_cp.35_1>)
10066736:	6800      	ldr	r0, [r0, #0]
10066738:	0769      	lsls	r1, r5, #29
1006673a:	0ec9      	lsrs	r1, r1, #27
1006673c:	1840      	adds	r0, r0, r1
1006673e:	6900      	ldr	r0, [r0, #16]
10066740:	220e      	movs	r2, #14
10066742:	2303      	movs	r3, #3
10066744:	4629      	mov	r1, r5
10066746:	f7e9 fddb 	bl	10050300 <aci_event_fifo_push_header>
1006674a:	2800      	cmp	r0, #0
1006674c:	d00d      	beq.n	1006676a <aci_att_clt_prepare_write_resp_event_push_noinline+0x52>
1006674e:	4601      	mov	r1, r0
10066750:	9800      	ldr	r0, [sp, #0]
10066752:	60c8      	str	r0, [r1, #12]
10066754:	814f      	strh	r7, [r1, #10]
10066756:	810e      	strh	r6, [r1, #8]
10066758:	4807      	ldr	r0, [pc, #28]	@ (10066778 <__arm_cp.35_2>)
1006675a:	6048      	str	r0, [r1, #4]
1006675c:	4628      	mov	r0, r5
1006675e:	f7e9 fe6c 	bl	1005043a <aci_event_fifo_push>
10066762:	e000      	b.n	10066766 <aci_att_clt_prepare_write_resp_event_push_noinline+0x4e>
10066764:	2486      	movs	r4, #134	@ 0x86
10066766:	4620      	mov	r0, r4
10066768:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006676a:	2407      	movs	r4, #7
1006676c:	e7fb      	b.n	10066766 <aci_att_clt_prepare_write_resp_event_push_noinline+0x4e>
1006676e:	46c0      	nop			@ (mov r8, r8)

10066770 <__arm_cp.35_0>:
10066770:	20000894 	.word	0x20000894

10066774 <__arm_cp.35_1>:
10066774:	20000840 	.word	0x20000840

10066778 <__arm_cp.35_2>:
10066778:	10065d65 	.word	0x10065d65

1006677c <aci_att_clt_exec_write_resp_event_push_noinline>:
1006677c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006677e:	4604      	mov	r4, r0
10066780:	06c0      	lsls	r0, r0, #27
10066782:	d408      	bmi.n	10066796 <aci_att_clt_exec_write_resp_event_push_noinline+0x1a>
10066784:	460d      	mov	r5, r1
10066786:	4819      	ldr	r0, [pc, #100]	@ (100667ec <__arm_cp.36_0>)
10066788:	6800      	ldr	r0, [r0, #0]
1006678a:	2151      	movs	r1, #81	@ 0x51
1006678c:	5c40      	ldrb	r0, [r0, r1]
1006678e:	06c0      	lsls	r0, r0, #27
10066790:	d403      	bmi.n	1006679a <aci_att_clt_exec_write_resp_event_push_noinline+0x1e>
10066792:	2700      	movs	r7, #0
10066794:	e027      	b.n	100667e6 <aci_att_clt_exec_write_resp_event_push_noinline+0x6a>
10066796:	2786      	movs	r7, #134	@ 0x86
10066798:	e025      	b.n	100667e6 <aci_att_clt_exec_write_resp_event_push_noinline+0x6a>
1006679a:	4616      	mov	r6, r2
1006679c:	4814      	ldr	r0, [pc, #80]	@ (100667f0 <__arm_cp.36_1>)
1006679e:	6800      	ldr	r0, [r0, #0]
100667a0:	0761      	lsls	r1, r4, #29
100667a2:	0ec9      	lsrs	r1, r1, #27
100667a4:	1840      	adds	r0, r0, r1
100667a6:	6900      	ldr	r0, [r0, #16]
100667a8:	2259      	movs	r2, #89	@ 0x59
100667aa:	2303      	movs	r3, #3
100667ac:	4621      	mov	r1, r4
100667ae:	f7e9 fda7 	bl	10050300 <aci_event_fifo_push_header>
100667b2:	2800      	cmp	r0, #0
100667b4:	d016      	beq.n	100667e4 <aci_att_clt_exec_write_resp_event_push_noinline+0x68>
100667b6:	4601      	mov	r1, r0
100667b8:	7306      	strb	r6, [r0, #12]
100667ba:	7285      	strb	r5, [r0, #10]
100667bc:	200c      	movs	r0, #12
100667be:	7248      	strb	r0, [r1, #9]
100667c0:	200d      	movs	r0, #13
100667c2:	7208      	strb	r0, [r1, #8]
100667c4:	2700      	movs	r7, #0
100667c6:	71cf      	strb	r7, [r1, #7]
100667c8:	2006      	movs	r0, #6
100667ca:	7188      	strb	r0, [r1, #6]
100667cc:	20ff      	movs	r0, #255	@ 0xff
100667ce:	7148      	strb	r0, [r1, #5]
100667d0:	2082      	movs	r0, #130	@ 0x82
100667d2:	7108      	strb	r0, [r1, #4]
100667d4:	0a30      	lsrs	r0, r6, #8
100667d6:	7348      	strb	r0, [r1, #13]
100667d8:	0a28      	lsrs	r0, r5, #8
100667da:	72c8      	strb	r0, [r1, #11]
100667dc:	4620      	mov	r0, r4
100667de:	f7e9 fe2c 	bl	1005043a <aci_event_fifo_push>
100667e2:	e000      	b.n	100667e6 <aci_att_clt_exec_write_resp_event_push_noinline+0x6a>
100667e4:	2707      	movs	r7, #7
100667e6:	4638      	mov	r0, r7
100667e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100667ea:	46c0      	nop			@ (mov r8, r8)

100667ec <__arm_cp.36_0>:
100667ec:	20000894 	.word	0x20000894

100667f0 <__arm_cp.36_1>:
100667f0:	20000840 	.word	0x20000840

100667f4 <aci_att_srv_prepare_write_req_event_push_noinline>:
100667f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100667f6:	4604      	mov	r4, r0
100667f8:	06c0      	lsls	r0, r0, #27
100667fa:	d420      	bmi.n	1006683e <aci_att_srv_prepare_write_req_event_push_noinline+0x4a>
100667fc:	461f      	mov	r7, r3
100667fe:	4616      	mov	r6, r2
10066800:	460d      	mov	r5, r1
10066802:	4811      	ldr	r0, [pc, #68]	@ (10066848 <__arm_cp.37_0>)
10066804:	6800      	ldr	r0, [r0, #0]
10066806:	0761      	lsls	r1, r4, #29
10066808:	0ec9      	lsrs	r1, r1, #27
1006680a:	1840      	adds	r0, r0, r1
1006680c:	6900      	ldr	r0, [r0, #16]
1006680e:	2212      	movs	r2, #18
10066810:	2305      	movs	r3, #5
10066812:	4621      	mov	r1, r4
10066814:	f7e9 fd74 	bl	10050300 <aci_event_fifo_push_header>
10066818:	2800      	cmp	r0, #0
1006681a:	d012      	beq.n	10066842 <aci_att_srv_prepare_write_req_event_push_noinline+0x4e>
1006681c:	4601      	mov	r1, r0
1006681e:	9808      	ldr	r0, [sp, #32]
10066820:	9a07      	ldr	r2, [sp, #28]
10066822:	9b06      	ldr	r3, [sp, #24]
10066824:	6148      	str	r0, [r1, #20]
10066826:	820a      	strh	r2, [r1, #16]
10066828:	81cb      	strh	r3, [r1, #14]
1006682a:	818f      	strh	r7, [r1, #12]
1006682c:	814e      	strh	r6, [r1, #10]
1006682e:	810d      	strh	r5, [r1, #8]
10066830:	4806      	ldr	r0, [pc, #24]	@ (1006684c <__arm_cp.37_1>)
10066832:	6048      	str	r0, [r1, #4]
10066834:	4620      	mov	r0, r4
10066836:	f7e9 fe00 	bl	1005043a <aci_event_fifo_push>
1006683a:	2000      	movs	r0, #0
1006683c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006683e:	2086      	movs	r0, #134	@ 0x86
10066840:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066842:	2007      	movs	r0, #7
10066844:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066846:	46c0      	nop			@ (mov r8, r8)

10066848 <__arm_cp.37_0>:
10066848:	20000840 	.word	0x20000840

1006684c <__arm_cp.37_1>:
1006684c:	10065db1 	.word	0x10065db1

10066850 <aci_att_srv_exec_write_req_event_push_noinline>:
10066850:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066852:	4604      	mov	r4, r0
10066854:	06c0      	lsls	r0, r0, #27
10066856:	d428      	bmi.n	100668aa <aci_att_srv_exec_write_req_event_push_noinline+0x5a>
10066858:	461f      	mov	r7, r3
1006685a:	4616      	mov	r6, r2
1006685c:	460d      	mov	r5, r1
1006685e:	4815      	ldr	r0, [pc, #84]	@ (100668b4 <__arm_cp.38_0>)
10066860:	6800      	ldr	r0, [r0, #0]
10066862:	0761      	lsls	r1, r4, #29
10066864:	0ec9      	lsrs	r1, r1, #27
10066866:	1840      	adds	r0, r0, r1
10066868:	6900      	ldr	r0, [r0, #16]
1006686a:	2260      	movs	r2, #96	@ 0x60
1006686c:	2303      	movs	r3, #3
1006686e:	4621      	mov	r1, r4
10066870:	f7e9 fd46 	bl	10050300 <aci_event_fifo_push_header>
10066874:	2800      	cmp	r0, #0
10066876:	d01a      	beq.n	100668ae <aci_att_srv_exec_write_req_event_push_noinline+0x5e>
10066878:	4601      	mov	r1, r0
1006687a:	7306      	strb	r6, [r0, #12]
1006687c:	7285      	strb	r5, [r0, #10]
1006687e:	200c      	movs	r0, #12
10066880:	7248      	strb	r0, [r1, #9]
10066882:	201c      	movs	r0, #28
10066884:	7208      	strb	r0, [r1, #8]
10066886:	463a      	mov	r2, r7
10066888:	2700      	movs	r7, #0
1006688a:	71cf      	strb	r7, [r1, #7]
1006688c:	2007      	movs	r0, #7
1006688e:	7188      	strb	r0, [r1, #6]
10066890:	738a      	strb	r2, [r1, #14]
10066892:	20ff      	movs	r0, #255	@ 0xff
10066894:	7148      	strb	r0, [r1, #5]
10066896:	2082      	movs	r0, #130	@ 0x82
10066898:	7108      	strb	r0, [r1, #4]
1006689a:	0a30      	lsrs	r0, r6, #8
1006689c:	7348      	strb	r0, [r1, #13]
1006689e:	0a28      	lsrs	r0, r5, #8
100668a0:	72c8      	strb	r0, [r1, #11]
100668a2:	4620      	mov	r0, r4
100668a4:	f7e9 fdc9 	bl	1005043a <aci_event_fifo_push>
100668a8:	e002      	b.n	100668b0 <aci_att_srv_exec_write_req_event_push_noinline+0x60>
100668aa:	2786      	movs	r7, #134	@ 0x86
100668ac:	e000      	b.n	100668b0 <aci_att_srv_exec_write_req_event_push_noinline+0x60>
100668ae:	2707      	movs	r7, #7
100668b0:	4638      	mov	r0, r7
100668b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

100668b4 <__arm_cp.38_0>:
100668b4:	20000840 	.word	0x20000840

100668b8 <aci_att_clt_read_multiple_var_len_resp_event_push_noinline>:
100668b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100668ba:	4605      	mov	r5, r0
100668bc:	06c0      	lsls	r0, r0, #27
100668be:	d421      	bmi.n	10066904 <aci_att_clt_read_multiple_var_len_resp_event_push_noinline+0x4c>
100668c0:	460e      	mov	r6, r1
100668c2:	4813      	ldr	r0, [pc, #76]	@ (10066910 <__arm_cp.39_0>)
100668c4:	6800      	ldr	r0, [r0, #0]
100668c6:	2152      	movs	r1, #82	@ 0x52
100668c8:	5c40      	ldrb	r0, [r0, r1]
100668ca:	2400      	movs	r4, #0
100668cc:	0740      	lsls	r0, r0, #29
100668ce:	d51a      	bpl.n	10066906 <aci_att_clt_read_multiple_var_len_resp_event_push_noinline+0x4e>
100668d0:	4617      	mov	r7, r2
100668d2:	9300      	str	r3, [sp, #0]
100668d4:	480f      	ldr	r0, [pc, #60]	@ (10066914 <__arm_cp.39_1>)
100668d6:	6800      	ldr	r0, [r0, #0]
100668d8:	0769      	lsls	r1, r5, #29
100668da:	0ec9      	lsrs	r1, r1, #27
100668dc:	1840      	adds	r0, r0, r1
100668de:	6900      	ldr	r0, [r0, #16]
100668e0:	2213      	movs	r2, #19
100668e2:	2303      	movs	r3, #3
100668e4:	4629      	mov	r1, r5
100668e6:	f7e9 fd0b 	bl	10050300 <aci_event_fifo_push_header>
100668ea:	2800      	cmp	r0, #0
100668ec:	d00d      	beq.n	1006690a <aci_att_clt_read_multiple_var_len_resp_event_push_noinline+0x52>
100668ee:	4601      	mov	r1, r0
100668f0:	9800      	ldr	r0, [sp, #0]
100668f2:	60c8      	str	r0, [r1, #12]
100668f4:	814f      	strh	r7, [r1, #10]
100668f6:	810e      	strh	r6, [r1, #8]
100668f8:	4807      	ldr	r0, [pc, #28]	@ (10066918 <__arm_cp.39_2>)
100668fa:	6048      	str	r0, [r1, #4]
100668fc:	4628      	mov	r0, r5
100668fe:	f7e9 fd9c 	bl	1005043a <aci_event_fifo_push>
10066902:	e000      	b.n	10066906 <aci_att_clt_read_multiple_var_len_resp_event_push_noinline+0x4e>
10066904:	2486      	movs	r4, #134	@ 0x86
10066906:	4620      	mov	r0, r4
10066908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006690a:	2407      	movs	r4, #7
1006690c:	e7fb      	b.n	10066906 <aci_att_clt_read_multiple_var_len_resp_event_push_noinline+0x4e>
1006690e:	46c0      	nop			@ (mov r8, r8)

10066910 <__arm_cp.39_0>:
10066910:	20000894 	.word	0x20000894

10066914 <__arm_cp.39_1>:
10066914:	20000840 	.word	0x20000840

10066918 <__arm_cp.39_2>:
10066918:	10065e0d 	.word	0x10065e0d

1006691c <hci_le_advertising_report_event_cb>:
1006691c:	b5f0      	push	{r4, r5, r6, r7, lr}
1006691e:	b0c5      	sub	sp, #276	@ 0x114
10066920:	460c      	mov	r4, r1
10066922:	7908      	ldrb	r0, [r1, #4]
10066924:	a902      	add	r1, sp, #8
10066926:	7108      	strb	r0, [r1, #4]
10066928:	1dcd      	adds	r5, r1, #7
1006692a:	3410      	adds	r4, #16
1006692c:	2201      	movs	r2, #1
1006692e:	2100      	movs	r1, #0
10066930:	4e1b      	ldr	r6, [pc, #108]	@ (100669a0 <__arm_cp.1_1>)
10066932:	b2c0      	uxtb	r0, r0
10066934:	4281      	cmp	r1, r0
10066936:	d224      	bcs.n	10066982 <hci_le_advertising_report_event_cb+0x66>
10066938:	1ea8      	subs	r0, r5, #2
1006693a:	9101      	str	r1, [sp, #4]
1006693c:	4621      	mov	r1, r4
1006693e:	3908      	subs	r1, #8
10066940:	7809      	ldrb	r1, [r1, #0]
10066942:	7001      	strb	r1, [r0, #0]
10066944:	1e68      	subs	r0, r5, #1
10066946:	1fe1      	subs	r1, r4, #7
10066948:	7809      	ldrb	r1, [r1, #0]
1006694a:	7001      	strb	r1, [r0, #0]
1006694c:	1fa1      	subs	r1, r4, #6
1006694e:	9200      	str	r2, [sp, #0]
10066950:	2206      	movs	r2, #6
10066952:	4628      	mov	r0, r5
10066954:	47b0      	blx	r6
10066956:	7822      	ldrb	r2, [r4, #0]
10066958:	71aa      	strb	r2, [r5, #6]
1006695a:	6861      	ldr	r1, [r4, #4]
1006695c:	1de8      	adds	r0, r5, #7
1006695e:	47b0      	blx	r6
10066960:	7827      	ldrb	r7, [r4, #0]
10066962:	19e8      	adds	r0, r5, r7
10066964:	1dc0      	adds	r0, r0, #7
10066966:	4621      	mov	r1, r4
10066968:	3108      	adds	r1, #8
1006696a:	2201      	movs	r2, #1
1006696c:	47b0      	blx	r6
1006696e:	9a00      	ldr	r2, [sp, #0]
10066970:	9901      	ldr	r1, [sp, #4]
10066972:	19d2      	adds	r2, r2, r7
10066974:	320a      	adds	r2, #10
10066976:	350b      	adds	r5, #11
10066978:	3414      	adds	r4, #20
1006697a:	1c49      	adds	r1, r1, #1
1006697c:	a802      	add	r0, sp, #8
1006697e:	7900      	ldrb	r0, [r0, #4]
10066980:	e7d7      	b.n	10066932 <hci_le_advertising_report_event_cb+0x16>
10066982:	a802      	add	r0, sp, #8
10066984:	2102      	movs	r1, #2
10066986:	70c1      	strb	r1, [r0, #3]
10066988:	4904      	ldr	r1, [pc, #16]	@ (1006699c <__arm_cp.1_0>)
1006698a:	8001      	strh	r1, [r0, #0]
1006698c:	1c51      	adds	r1, r2, #1
1006698e:	7081      	strb	r1, [r0, #2]
10066990:	b2d1      	uxtb	r1, r2
10066992:	1d09      	adds	r1, r1, #4
10066994:	f7e7 fb18 	bl	1004dfc8 <BLE_STACK_Event>
10066998:	b045      	add	sp, #276	@ 0x114
1006699a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006699c <__arm_cp.1_0>:
1006699c:	00003e04 	.word	0x00003e04

100669a0 <__arm_cp.1_1>:
100669a0:	100449a5 	.word	0x100449a5

100669a4 <hci_le_extended_advertising_report_event_cb>:
100669a4:	b5f0      	push	{r4, r5, r6, r7, lr}
100669a6:	b0c5      	sub	sp, #276	@ 0x114
100669a8:	460c      	mov	r4, r1
100669aa:	7908      	ldrb	r0, [r1, #4]
100669ac:	af02      	add	r7, sp, #8
100669ae:	7138      	strb	r0, [r7, #4]
100669b0:	370e      	adds	r7, #14
100669b2:	3411      	adds	r4, #17
100669b4:	2201      	movs	r2, #1
100669b6:	2100      	movs	r1, #0
100669b8:	4e27      	ldr	r6, [pc, #156]	@ (10066a58 <__arm_cp.2_1>)
100669ba:	b2c0      	uxtb	r0, r0
100669bc:	4281      	cmp	r1, r0
100669be:	d23b      	bcs.n	10066a38 <hci_le_extended_advertising_report_event_cb+0x94>
100669c0:	4638      	mov	r0, r7
100669c2:	3809      	subs	r0, #9
100669c4:	9101      	str	r1, [sp, #4]
100669c6:	4621      	mov	r1, r4
100669c8:	3909      	subs	r1, #9
100669ca:	8809      	ldrh	r1, [r1, #0]
100669cc:	7001      	strb	r1, [r0, #0]
100669ce:	9200      	str	r2, [sp, #0]
100669d0:	1ffa      	subs	r2, r7, #7
100669d2:	1fe3      	subs	r3, r4, #7
100669d4:	781b      	ldrb	r3, [r3, #0]
100669d6:	7013      	strb	r3, [r2, #0]
100669d8:	0a09      	lsrs	r1, r1, #8
100669da:	7041      	strb	r1, [r0, #1]
100669dc:	1fb8      	subs	r0, r7, #6
100669de:	1fa1      	subs	r1, r4, #6
100669e0:	2506      	movs	r5, #6
100669e2:	462a      	mov	r2, r5
100669e4:	47b0      	blx	r6
100669e6:	2005      	movs	r0, #5
100669e8:	5a20      	ldrh	r0, [r4, r0]
100669ea:	7178      	strb	r0, [r7, #5]
100669ec:	7821      	ldrb	r1, [r4, #0]
100669ee:	7039      	strb	r1, [r7, #0]
100669f0:	7861      	ldrb	r1, [r4, #1]
100669f2:	7079      	strb	r1, [r7, #1]
100669f4:	78a1      	ldrb	r1, [r4, #2]
100669f6:	70b9      	strb	r1, [r7, #2]
100669f8:	78e1      	ldrb	r1, [r4, #3]
100669fa:	70f9      	strb	r1, [r7, #3]
100669fc:	7921      	ldrb	r1, [r4, #4]
100669fe:	7139      	strb	r1, [r7, #4]
10066a00:	79e1      	ldrb	r1, [r4, #7]
10066a02:	71f9      	strb	r1, [r7, #7]
10066a04:	0a00      	lsrs	r0, r0, #8
10066a06:	71b8      	strb	r0, [r7, #6]
10066a08:	4638      	mov	r0, r7
10066a0a:	3008      	adds	r0, #8
10066a0c:	4621      	mov	r1, r4
10066a0e:	3108      	adds	r1, #8
10066a10:	462a      	mov	r2, r5
10066a12:	47b0      	blx	r6
10066a14:	7ba2      	ldrb	r2, [r4, #14]
10066a16:	73ba      	strb	r2, [r7, #14]
10066a18:	200f      	movs	r0, #15
10066a1a:	5821      	ldr	r1, [r4, r0]
10066a1c:	4638      	mov	r0, r7
10066a1e:	300f      	adds	r0, #15
10066a20:	47b0      	blx	r6
10066a22:	9a00      	ldr	r2, [sp, #0]
10066a24:	9901      	ldr	r1, [sp, #4]
10066a26:	7ba0      	ldrb	r0, [r4, #14]
10066a28:	1812      	adds	r2, r2, r0
10066a2a:	3218      	adds	r2, #24
10066a2c:	3719      	adds	r7, #25
10066a2e:	341c      	adds	r4, #28
10066a30:	1c49      	adds	r1, r1, #1
10066a32:	a802      	add	r0, sp, #8
10066a34:	7900      	ldrb	r0, [r0, #4]
10066a36:	e7c0      	b.n	100669ba <hci_le_extended_advertising_report_event_cb+0x16>
10066a38:	a802      	add	r0, sp, #8
10066a3a:	210d      	movs	r1, #13
10066a3c:	70c1      	strb	r1, [r0, #3]
10066a3e:	4905      	ldr	r1, [pc, #20]	@ (10066a54 <__arm_cp.2_0>)
10066a40:	8001      	strh	r1, [r0, #0]
10066a42:	1c51      	adds	r1, r2, #1
10066a44:	7081      	strb	r1, [r0, #2]
10066a46:	b2d1      	uxtb	r1, r2
10066a48:	1d09      	adds	r1, r1, #4
10066a4a:	f7e7 fabd 	bl	1004dfc8 <BLE_STACK_Event>
10066a4e:	b045      	add	sp, #276	@ 0x114
10066a50:	bdf0      	pop	{r4, r5, r6, r7, pc}
10066a52:	46c0      	nop			@ (mov r8, r8)

10066a54 <__arm_cp.2_0>:
10066a54:	00003e04 	.word	0x00003e04

10066a58 <__arm_cp.2_1>:
10066a58:	100449a5 	.word	0x100449a5

10066a5c <hci_number_of_completed_packets_event_cb>:
10066a5c:	b51c      	push	{r2, r3, r4, lr}
10066a5e:	8889      	ldrh	r1, [r1, #4]
10066a60:	466c      	mov	r4, sp
10066a62:	1ce0      	adds	r0, r4, #3
10066a64:	f7e9 ffe4 	bl	10050a30 <hci_number_of_completed_packets_event_copy>
10066a68:	2005      	movs	r0, #5
10066a6a:	70a0      	strb	r0, [r4, #2]
10066a6c:	2013      	movs	r0, #19
10066a6e:	7060      	strb	r0, [r4, #1]
10066a70:	2004      	movs	r0, #4
10066a72:	7020      	strb	r0, [r4, #0]
10066a74:	2108      	movs	r1, #8
10066a76:	4620      	mov	r0, r4
10066a78:	f7e7 faa6 	bl	1004dfc8 <BLE_STACK_Event>
10066a7c:	bd1c      	pop	{r2, r3, r4, pc}
	...

10066a80 <hci_le_periodic_advertising_response_report_event_cb>:
10066a80:	b5f0      	push	{r4, r5, r6, r7, lr}
10066a82:	b0c5      	sub	sp, #276	@ 0x114
10066a84:	460c      	mov	r4, r1
10066a86:	79c8      	ldrb	r0, [r1, #7]
10066a88:	ad02      	add	r5, sp, #8
10066a8a:	71e8      	strb	r0, [r5, #7]
10066a8c:	7909      	ldrb	r1, [r1, #4]
10066a8e:	7129      	strb	r1, [r5, #4]
10066a90:	7961      	ldrb	r1, [r4, #5]
10066a92:	7169      	strb	r1, [r5, #5]
10066a94:	79a1      	ldrb	r1, [r4, #6]
10066a96:	71a9      	strb	r1, [r5, #6]
10066a98:	350e      	adds	r5, #14
10066a9a:	3410      	adds	r4, #16
10066a9c:	2704      	movs	r7, #4
10066a9e:	2100      	movs	r1, #0
10066aa0:	b2c0      	uxtb	r0, r0
10066aa2:	4281      	cmp	r1, r0
10066aa4:	d227      	bcs.n	10066af6 <hci_le_periodic_advertising_response_report_event_cb+0x76>
10066aa6:	1fa8      	subs	r0, r5, #6
10066aa8:	9101      	str	r1, [sp, #4]
10066aaa:	4621      	mov	r1, r4
10066aac:	3908      	subs	r1, #8
10066aae:	7809      	ldrb	r1, [r1, #0]
10066ab0:	7001      	strb	r1, [r0, #0]
10066ab2:	1f68      	subs	r0, r5, #5
10066ab4:	1fe1      	subs	r1, r4, #7
10066ab6:	7809      	ldrb	r1, [r1, #0]
10066ab8:	7001      	strb	r1, [r0, #0]
10066aba:	1f28      	subs	r0, r5, #4
10066abc:	1fa1      	subs	r1, r4, #6
10066abe:	7809      	ldrb	r1, [r1, #0]
10066ac0:	7001      	strb	r1, [r0, #0]
10066ac2:	1ee8      	subs	r0, r5, #3
10066ac4:	1f61      	subs	r1, r4, #5
10066ac6:	7809      	ldrb	r1, [r1, #0]
10066ac8:	7001      	strb	r1, [r0, #0]
10066aca:	1ea8      	subs	r0, r5, #2
10066acc:	1f21      	subs	r1, r4, #4
10066ace:	7809      	ldrb	r1, [r1, #0]
10066ad0:	7001      	strb	r1, [r0, #0]
10066ad2:	1e68      	subs	r0, r5, #1
10066ad4:	1ee6      	subs	r6, r4, #3
10066ad6:	7832      	ldrb	r2, [r6, #0]
10066ad8:	7002      	strb	r2, [r0, #0]
10066ada:	6821      	ldr	r1, [r4, #0]
10066adc:	4628      	mov	r0, r5
10066ade:	f7dd ff61 	bl	100449a4 <BLEPLAT_MemCpy>
10066ae2:	9901      	ldr	r1, [sp, #4]
10066ae4:	7830      	ldrb	r0, [r6, #0]
10066ae6:	1838      	adds	r0, r7, r0
10066ae8:	1d87      	adds	r7, r0, #6
10066aea:	1ded      	adds	r5, r5, #7
10066aec:	340c      	adds	r4, #12
10066aee:	1c49      	adds	r1, r1, #1
10066af0:	a802      	add	r0, sp, #8
10066af2:	79c0      	ldrb	r0, [r0, #7]
10066af4:	e7d4      	b.n	10066aa0 <hci_le_periodic_advertising_response_report_event_cb+0x20>
10066af6:	a802      	add	r0, sp, #8
10066af8:	2128      	movs	r1, #40	@ 0x28
10066afa:	70c1      	strb	r1, [r0, #3]
10066afc:	4904      	ldr	r1, [pc, #16]	@ (10066b10 <__arm_cp.6_0>)
10066afe:	8001      	strh	r1, [r0, #0]
10066b00:	1c79      	adds	r1, r7, #1
10066b02:	7081      	strb	r1, [r0, #2]
10066b04:	b2f9      	uxtb	r1, r7
10066b06:	1d09      	adds	r1, r1, #4
10066b08:	f7e7 fa5e 	bl	1004dfc8 <BLE_STACK_Event>
10066b0c:	b045      	add	sp, #276	@ 0x114
10066b0e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10066b10 <__arm_cp.6_0>:
10066b10:	00003e04 	.word	0x00003e04

10066b14 <hci_number_of_completed_packets_event_push_noinline>:
10066b14:	b5b0      	push	{r4, r5, r7, lr}
10066b16:	4604      	mov	r4, r0
10066b18:	06c0      	lsls	r0, r0, #27
10066b1a:	d416      	bmi.n	10066b4a <hci_number_of_completed_packets_event_push_noinline+0x36>
10066b1c:	460d      	mov	r5, r1
10066b1e:	480d      	ldr	r0, [pc, #52]	@ (10066b54 <__arm_cp.22_0>)
10066b20:	6800      	ldr	r0, [r0, #0]
10066b22:	0761      	lsls	r1, r4, #29
10066b24:	0ec9      	lsrs	r1, r1, #27
10066b26:	1840      	adds	r0, r0, r1
10066b28:	6900      	ldr	r0, [r0, #16]
10066b2a:	2202      	movs	r2, #2
10066b2c:	4621      	mov	r1, r4
10066b2e:	4613      	mov	r3, r2
10066b30:	f7e9 fbe6 	bl	10050300 <aci_event_fifo_push_header>
10066b34:	2800      	cmp	r0, #0
10066b36:	d00a      	beq.n	10066b4e <hci_number_of_completed_packets_event_push_noinline+0x3a>
10066b38:	4601      	mov	r1, r0
10066b3a:	4807      	ldr	r0, [pc, #28]	@ (10066b58 <__arm_cp.22_1>)
10066b3c:	6048      	str	r0, [r1, #4]
10066b3e:	810d      	strh	r5, [r1, #8]
10066b40:	4620      	mov	r0, r4
10066b42:	f7e9 fc7a 	bl	1005043a <aci_event_fifo_push>
10066b46:	2000      	movs	r0, #0
10066b48:	bdb0      	pop	{r4, r5, r7, pc}
10066b4a:	2086      	movs	r0, #134	@ 0x86
10066b4c:	bdb0      	pop	{r4, r5, r7, pc}
10066b4e:	2007      	movs	r0, #7
10066b50:	bdb0      	pop	{r4, r5, r7, pc}
10066b52:	46c0      	nop			@ (mov r8, r8)

10066b54 <__arm_cp.22_0>:
10066b54:	20000840 	.word	0x20000840

10066b58 <__arm_cp.22_1>:
10066b58:	10066a5d 	.word	0x10066a5d

10066b5c <hci_le_read_remote_features_complete_event_push_noinline>:
10066b5c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10066b5e:	4605      	mov	r5, r0
10066b60:	06c0      	lsls	r0, r0, #27
10066b62:	d433      	bmi.n	10066bcc <hci_le_read_remote_features_complete_event_push_noinline+0x70>
10066b64:	4617      	mov	r7, r2
10066b66:	481c      	ldr	r0, [pc, #112]	@ (10066bd8 <__arm_cp.26_0>)
10066b68:	6800      	ldr	r0, [r0, #0]
10066b6a:	223d      	movs	r2, #61	@ 0x3d
10066b6c:	5c82      	ldrb	r2, [r0, r2]
10066b6e:	2400      	movs	r4, #0
10066b70:	0692      	lsls	r2, r2, #26
10066b72:	d52c      	bpl.n	10066bce <hci_le_read_remote_features_complete_event_push_noinline+0x72>
10066b74:	303d      	adds	r0, #61	@ 0x3d
10066b76:	7a40      	ldrb	r0, [r0, #9]
10066b78:	0700      	lsls	r0, r0, #28
10066b7a:	d528      	bpl.n	10066bce <hci_le_read_remote_features_complete_event_push_noinline+0x72>
10066b7c:	9101      	str	r1, [sp, #4]
10066b7e:	9302      	str	r3, [sp, #8]
10066b80:	4816      	ldr	r0, [pc, #88]	@ (10066bdc <__arm_cp.26_1>)
10066b82:	6800      	ldr	r0, [r0, #0]
10066b84:	0769      	lsls	r1, r5, #29
10066b86:	0ec9      	lsrs	r1, r1, #27
10066b88:	1840      	adds	r0, r0, r1
10066b8a:	6900      	ldr	r0, [r0, #16]
10066b8c:	2225      	movs	r2, #37	@ 0x25
10066b8e:	2304      	movs	r3, #4
10066b90:	4629      	mov	r1, r5
10066b92:	9300      	str	r3, [sp, #0]
10066b94:	f7e9 fbb4 	bl	10050300 <aci_event_fifo_push_header>
10066b98:	2800      	cmp	r0, #0
10066b9a:	d01a      	beq.n	10066bd2 <hci_le_read_remote_features_complete_event_push_noinline+0x76>
10066b9c:	4606      	mov	r6, r0
10066b9e:	7247      	strb	r7, [r0, #9]
10066ba0:	9801      	ldr	r0, [sp, #4]
10066ba2:	7230      	strb	r0, [r6, #8]
10066ba4:	0a38      	lsrs	r0, r7, #8
10066ba6:	72b0      	strb	r0, [r6, #10]
10066ba8:	4630      	mov	r0, r6
10066baa:	300b      	adds	r0, #11
10066bac:	2208      	movs	r2, #8
10066bae:	9902      	ldr	r1, [sp, #8]
10066bb0:	f7dd fef8 	bl	100449a4 <BLEPLAT_MemCpy>
10066bb4:	9900      	ldr	r1, [sp, #0]
10066bb6:	71f1      	strb	r1, [r6, #7]
10066bb8:	200c      	movs	r0, #12
10066bba:	71b0      	strb	r0, [r6, #6]
10066bbc:	203e      	movs	r0, #62	@ 0x3e
10066bbe:	7170      	strb	r0, [r6, #5]
10066bc0:	7131      	strb	r1, [r6, #4]
10066bc2:	4628      	mov	r0, r5
10066bc4:	4631      	mov	r1, r6
10066bc6:	f7e9 fc38 	bl	1005043a <aci_event_fifo_push>
10066bca:	e000      	b.n	10066bce <hci_le_read_remote_features_complete_event_push_noinline+0x72>
10066bcc:	2486      	movs	r4, #134	@ 0x86
10066bce:	4620      	mov	r0, r4
10066bd0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
10066bd2:	2407      	movs	r4, #7
10066bd4:	e7fb      	b.n	10066bce <hci_le_read_remote_features_complete_event_push_noinline+0x72>
10066bd6:	46c0      	nop			@ (mov r8, r8)

10066bd8 <__arm_cp.26_0>:
10066bd8:	20000894 	.word	0x20000894

10066bdc <__arm_cp.26_1>:
10066bdc:	20000840 	.word	0x20000840

10066be0 <aci_l2cap_proc_timeout_event_cb>:
10066be0:	b510      	push	{r4, lr}
10066be2:	b0ff      	sub	sp, #508	@ 0x1fc
10066be4:	b083      	sub	sp, #12
10066be6:	8889      	ldrh	r1, [r1, #4]
10066be8:	466c      	mov	r4, sp
10066bea:	1da0      	adds	r0, r4, #6
10066bec:	f7ea f9e0 	bl	10050fb0 <aci_l2cap_proc_timeout_event_copy>
10066bf0:	7a21      	ldrb	r1, [r4, #8]
10066bf2:	1d48      	adds	r0, r1, #5
10066bf4:	70a0      	strb	r0, [r4, #2]
10066bf6:	0a00      	lsrs	r0, r0, #8
10066bf8:	70e0      	strb	r0, [r4, #3]
10066bfa:	2001      	movs	r0, #1
10066bfc:	7120      	strb	r0, [r4, #4]
10066bfe:	20ff      	movs	r0, #255	@ 0xff
10066c00:	7060      	strb	r0, [r4, #1]
10066c02:	2082      	movs	r0, #130	@ 0x82
10066c04:	7020      	strb	r0, [r4, #0]
10066c06:	2008      	movs	r0, #8
10066c08:	7160      	strb	r0, [r4, #5]
10066c0a:	3109      	adds	r1, #9
10066c0c:	4620      	mov	r0, r4
10066c0e:	f7e7 f9db 	bl	1004dfc8 <BLE_STACK_Event>
10066c12:	b07f      	add	sp, #508	@ 0x1fc
10066c14:	b003      	add	sp, #12
10066c16:	bd10      	pop	{r4, pc}

10066c18 <aci_hal_fw_error_event_push_noinline>:
10066c18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066c1a:	4604      	mov	r4, r0
10066c1c:	06c0      	lsls	r0, r0, #27
10066c1e:	d42d      	bmi.n	10066c7c <aci_hal_fw_error_event_push_noinline+0x64>
10066c20:	4615      	mov	r5, r2
10066c22:	460f      	mov	r7, r1
10066c24:	9300      	str	r3, [sp, #0]
10066c26:	4818      	ldr	r0, [pc, #96]	@ (10066c88 <__arm_cp.0_0>)
10066c28:	6800      	ldr	r0, [r0, #0]
10066c2a:	0761      	lsls	r1, r4, #29
10066c2c:	0ec9      	lsrs	r1, r1, #27
10066c2e:	1840      	adds	r0, r0, r1
10066c30:	6900      	ldr	r0, [r0, #16]
10066c32:	1e51      	subs	r1, r2, #1
10066c34:	2203      	movs	r2, #3
10066c36:	430a      	orrs	r2, r1
10066c38:	3209      	adds	r2, #9
10066c3a:	0891      	lsrs	r1, r2, #2
10066c3c:	b28b      	uxth	r3, r1
10066c3e:	2240      	movs	r2, #64	@ 0x40
10066c40:	4621      	mov	r1, r4
10066c42:	f7e9 fb5d 	bl	10050300 <aci_event_fifo_push_header>
10066c46:	2800      	cmp	r0, #0
10066c48:	d01a      	beq.n	10066c80 <aci_hal_fw_error_event_push_noinline+0x68>
10066c4a:	4606      	mov	r6, r0
10066c4c:	72c5      	strb	r5, [r0, #11]
10066c4e:	7287      	strb	r7, [r0, #10]
10066c50:	300c      	adds	r0, #12
10066c52:	9900      	ldr	r1, [sp, #0]
10066c54:	462a      	mov	r2, r5
10066c56:	f7dd fea5 	bl	100449a4 <BLEPLAT_MemCpy>
10066c5a:	2700      	movs	r7, #0
10066c5c:	7277      	strb	r7, [r6, #9]
10066c5e:	2006      	movs	r0, #6
10066c60:	7230      	strb	r0, [r6, #8]
10066c62:	1d28      	adds	r0, r5, #4
10066c64:	0a01      	lsrs	r1, r0, #8
10066c66:	71f1      	strb	r1, [r6, #7]
10066c68:	71b0      	strb	r0, [r6, #6]
10066c6a:	20ff      	movs	r0, #255	@ 0xff
10066c6c:	7170      	strb	r0, [r6, #5]
10066c6e:	2082      	movs	r0, #130	@ 0x82
10066c70:	7130      	strb	r0, [r6, #4]
10066c72:	4620      	mov	r0, r4
10066c74:	4631      	mov	r1, r6
10066c76:	f7e9 fbe0 	bl	1005043a <aci_event_fifo_push>
10066c7a:	e002      	b.n	10066c82 <aci_hal_fw_error_event_push_noinline+0x6a>
10066c7c:	2786      	movs	r7, #134	@ 0x86
10066c7e:	e000      	b.n	10066c82 <aci_hal_fw_error_event_push_noinline+0x6a>
10066c80:	2707      	movs	r7, #7
10066c82:	4638      	mov	r0, r7
10066c84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066c86:	46c0      	nop			@ (mov r8, r8)

10066c88 <__arm_cp.0_0>:
10066c88:	20000840 	.word	0x20000840

10066c8c <aci_hal_adv_scan_resp_data_update_event_push_noinline>:
10066c8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066c8e:	4604      	mov	r4, r0
10066c90:	06c0      	lsls	r0, r0, #27
10066c92:	d42d      	bmi.n	10066cf0 <aci_hal_adv_scan_resp_data_update_event_push_noinline+0x64>
10066c94:	4616      	mov	r6, r2
10066c96:	460d      	mov	r5, r1
10066c98:	4818      	ldr	r0, [pc, #96]	@ (10066cfc <__arm_cp.1_0>)
10066c9a:	6800      	ldr	r0, [r0, #0]
10066c9c:	0761      	lsls	r1, r4, #29
10066c9e:	0ec9      	lsrs	r1, r1, #27
10066ca0:	1840      	adds	r0, r0, r1
10066ca2:	6900      	ldr	r0, [r0, #16]
10066ca4:	2241      	movs	r2, #65	@ 0x41
10066ca6:	2304      	movs	r3, #4
10066ca8:	4621      	mov	r1, r4
10066caa:	f7e9 fb29 	bl	10050300 <aci_event_fifo_push_header>
10066cae:	2800      	cmp	r0, #0
10066cb0:	d020      	beq.n	10066cf4 <aci_hal_adv_scan_resp_data_update_event_push_noinline+0x68>
10066cb2:	4601      	mov	r1, r0
10066cb4:	300a      	adds	r0, #10
10066cb6:	7106      	strb	r6, [r0, #4]
10066cb8:	7005      	strb	r5, [r0, #0]
10066cba:	2700      	movs	r7, #0
10066cbc:	724f      	strb	r7, [r1, #9]
10066cbe:	2210      	movs	r2, #16
10066cc0:	720a      	strb	r2, [r1, #8]
10066cc2:	71cf      	strb	r7, [r1, #7]
10066cc4:	220a      	movs	r2, #10
10066cc6:	718a      	strb	r2, [r1, #6]
10066cc8:	22ff      	movs	r2, #255	@ 0xff
10066cca:	714a      	strb	r2, [r1, #5]
10066ccc:	2282      	movs	r2, #130	@ 0x82
10066cce:	710a      	strb	r2, [r1, #4]
10066cd0:	0e32      	lsrs	r2, r6, #24
10066cd2:	71c2      	strb	r2, [r0, #7]
10066cd4:	0c32      	lsrs	r2, r6, #16
10066cd6:	7182      	strb	r2, [r0, #6]
10066cd8:	0a32      	lsrs	r2, r6, #8
10066cda:	7142      	strb	r2, [r0, #5]
10066cdc:	0e2a      	lsrs	r2, r5, #24
10066cde:	70c2      	strb	r2, [r0, #3]
10066ce0:	0c2a      	lsrs	r2, r5, #16
10066ce2:	7082      	strb	r2, [r0, #2]
10066ce4:	0a2a      	lsrs	r2, r5, #8
10066ce6:	7042      	strb	r2, [r0, #1]
10066ce8:	4620      	mov	r0, r4
10066cea:	f7e9 fba6 	bl	1005043a <aci_event_fifo_push>
10066cee:	e002      	b.n	10066cf6 <aci_hal_adv_scan_resp_data_update_event_push_noinline+0x6a>
10066cf0:	2786      	movs	r7, #134	@ 0x86
10066cf2:	e000      	b.n	10066cf6 <aci_hal_adv_scan_resp_data_update_event_push_noinline+0x6a>
10066cf4:	2707      	movs	r7, #7
10066cf6:	4638      	mov	r0, r7
10066cf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066cfa:	46c0      	nop			@ (mov r8, r8)

10066cfc <__arm_cp.1_0>:
10066cfc:	20000840 	.word	0x20000840

10066d00 <aci_hal_pawr_data_free_event_push_noinline>:
10066d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066d02:	4604      	mov	r4, r0
10066d04:	06c0      	lsls	r0, r0, #27
10066d06:	d426      	bmi.n	10066d56 <aci_hal_pawr_data_free_event_push_noinline+0x56>
10066d08:	4616      	mov	r6, r2
10066d0a:	460d      	mov	r5, r1
10066d0c:	4814      	ldr	r0, [pc, #80]	@ (10066d60 <__arm_cp.2_0>)
10066d0e:	6800      	ldr	r0, [r0, #0]
10066d10:	0761      	lsls	r1, r4, #29
10066d12:	0ec9      	lsrs	r1, r1, #27
10066d14:	1840      	adds	r0, r0, r1
10066d16:	6900      	ldr	r0, [r0, #16]
10066d18:	2242      	movs	r2, #66	@ 0x42
10066d1a:	2303      	movs	r3, #3
10066d1c:	4621      	mov	r1, r4
10066d1e:	f7e9 faef 	bl	10050300 <aci_event_fifo_push_header>
10066d22:	2800      	cmp	r0, #0
10066d24:	d019      	beq.n	10066d5a <aci_hal_pawr_data_free_event_push_noinline+0x5a>
10066d26:	4601      	mov	r1, r0
10066d28:	7285      	strb	r5, [r0, #10]
10066d2a:	2700      	movs	r7, #0
10066d2c:	7247      	strb	r7, [r0, #9]
10066d2e:	2011      	movs	r0, #17
10066d30:	7208      	strb	r0, [r1, #8]
10066d32:	71cf      	strb	r7, [r1, #7]
10066d34:	2007      	movs	r0, #7
10066d36:	7188      	strb	r0, [r1, #6]
10066d38:	738e      	strb	r6, [r1, #14]
10066d3a:	20ff      	movs	r0, #255	@ 0xff
10066d3c:	7148      	strb	r0, [r1, #5]
10066d3e:	2082      	movs	r0, #130	@ 0x82
10066d40:	7108      	strb	r0, [r1, #4]
10066d42:	0e28      	lsrs	r0, r5, #24
10066d44:	7348      	strb	r0, [r1, #13]
10066d46:	0c28      	lsrs	r0, r5, #16
10066d48:	7308      	strb	r0, [r1, #12]
10066d4a:	0a28      	lsrs	r0, r5, #8
10066d4c:	72c8      	strb	r0, [r1, #11]
10066d4e:	4620      	mov	r0, r4
10066d50:	f7e9 fb73 	bl	1005043a <aci_event_fifo_push>
10066d54:	e002      	b.n	10066d5c <aci_hal_pawr_data_free_event_push_noinline+0x5c>
10066d56:	2786      	movs	r7, #134	@ 0x86
10066d58:	e000      	b.n	10066d5c <aci_hal_pawr_data_free_event_push_noinline+0x5c>
10066d5a:	2707      	movs	r7, #7
10066d5c:	4638      	mov	r0, r7
10066d5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10066d60 <__arm_cp.2_0>:
10066d60:	20000840 	.word	0x20000840

10066d64 <aci_gap_pairing_complete_event_push_noinline>:
10066d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066d66:	4604      	mov	r4, r0
10066d68:	06c0      	lsls	r0, r0, #27
10066d6a:	d408      	bmi.n	10066d7e <aci_gap_pairing_complete_event_push_noinline+0x1a>
10066d6c:	460d      	mov	r5, r1
10066d6e:	4819      	ldr	r0, [pc, #100]	@ (10066dd4 <__arm_cp.1_0>)
10066d70:	6800      	ldr	r0, [r0, #0]
10066d72:	214e      	movs	r1, #78	@ 0x4e
10066d74:	5c40      	ldrb	r0, [r0, r1]
10066d76:	0780      	lsls	r0, r0, #30
10066d78:	d403      	bmi.n	10066d82 <aci_gap_pairing_complete_event_push_noinline+0x1e>
10066d7a:	2600      	movs	r6, #0
10066d7c:	e028      	b.n	10066dd0 <aci_gap_pairing_complete_event_push_noinline+0x6c>
10066d7e:	2686      	movs	r6, #134	@ 0x86
10066d80:	e026      	b.n	10066dd0 <aci_gap_pairing_complete_event_push_noinline+0x6c>
10066d82:	461f      	mov	r7, r3
10066d84:	4616      	mov	r6, r2
10066d86:	4814      	ldr	r0, [pc, #80]	@ (10066dd8 <__arm_cp.1_1>)
10066d88:	6800      	ldr	r0, [r0, #0]
10066d8a:	0761      	lsls	r1, r4, #29
10066d8c:	0ec9      	lsrs	r1, r1, #27
10066d8e:	1840      	adds	r0, r0, r1
10066d90:	6900      	ldr	r0, [r0, #16]
10066d92:	2245      	movs	r2, #69	@ 0x45
10066d94:	2303      	movs	r3, #3
10066d96:	4621      	mov	r1, r4
10066d98:	f7e9 fab2 	bl	10050300 <aci_event_fifo_push_header>
10066d9c:	2800      	cmp	r0, #0
10066d9e:	d016      	beq.n	10066dce <aci_gap_pairing_complete_event_push_noinline+0x6a>
10066da0:	4601      	mov	r1, r0
10066da2:	7285      	strb	r5, [r0, #10]
10066da4:	2004      	movs	r0, #4
10066da6:	7248      	strb	r0, [r1, #9]
10066da8:	2001      	movs	r0, #1
10066daa:	7208      	strb	r0, [r1, #8]
10066dac:	4632      	mov	r2, r6
10066dae:	2600      	movs	r6, #0
10066db0:	71ce      	strb	r6, [r1, #7]
10066db2:	2006      	movs	r0, #6
10066db4:	7188      	strb	r0, [r1, #6]
10066db6:	734f      	strb	r7, [r1, #13]
10066db8:	730a      	strb	r2, [r1, #12]
10066dba:	20ff      	movs	r0, #255	@ 0xff
10066dbc:	7148      	strb	r0, [r1, #5]
10066dbe:	2082      	movs	r0, #130	@ 0x82
10066dc0:	7108      	strb	r0, [r1, #4]
10066dc2:	0a28      	lsrs	r0, r5, #8
10066dc4:	72c8      	strb	r0, [r1, #11]
10066dc6:	4620      	mov	r0, r4
10066dc8:	f7e9 fb37 	bl	1005043a <aci_event_fifo_push>
10066dcc:	e000      	b.n	10066dd0 <aci_gap_pairing_complete_event_push_noinline+0x6c>
10066dce:	2607      	movs	r6, #7
10066dd0:	4630      	mov	r0, r6
10066dd2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10066dd4 <__arm_cp.1_0>:
10066dd4:	20000894 	.word	0x20000894

10066dd8 <__arm_cp.1_1>:
10066dd8:	20000840 	.word	0x20000840

10066ddc <GAT_att_clt_init>:
10066ddc:	b580      	push	{r7, lr}
10066dde:	f000 fd35 	bl	1006784c <GAT_clt_init>
10066de2:	bd80      	pop	{r7, pc}

10066de4 <GAT_att_clt_rcv>:
10066de4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066de6:	4604      	mov	r4, r0
10066de8:	8805      	ldrh	r5, [r0, #0]
10066dea:	f7ee fd4a 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10066dee:	4601      	mov	r1, r0
10066df0:	4628      	mov	r0, r5
10066df2:	f7eb fc9f 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10066df6:	4605      	mov	r5, r0
10066df8:	4620      	mov	r0, r4
10066dfa:	f000 f8d7 	bl	10066fac <GAT_att_cmn_get_opcode>
10066dfe:	281d      	cmp	r0, #29
10066e00:	d003      	beq.n	10066e0a <GAT_att_clt_rcv+0x26>
10066e02:	2823      	cmp	r0, #35	@ 0x23
10066e04:	d001      	beq.n	10066e0a <GAT_att_clt_rcv+0x26>
10066e06:	281b      	cmp	r0, #27
10066e08:	d10e      	bne.n	10066e28 <GAT_att_clt_rcv+0x44>
10066e0a:	8861      	ldrh	r1, [r4, #2]
10066e0c:	88ea      	ldrh	r2, [r5, #6]
10066e0e:	4291      	cmp	r1, r2
10066e10:	d805      	bhi.n	10066e1e <GAT_att_clt_rcv+0x3a>
10066e12:	2903      	cmp	r1, #3
10066e14:	d303      	bcc.n	10066e1e <GAT_att_clt_rcv+0x3a>
10066e16:	2823      	cmp	r0, #35	@ 0x23
10066e18:	d167      	bne.n	10066eea <GAT_att_clt_rcv+0x106>
10066e1a:	2904      	cmp	r1, #4
10066e1c:	d865      	bhi.n	10066eea <GAT_att_clt_rcv+0x106>
10066e1e:	4620      	mov	r0, r4
10066e20:	f7e9 f8bc 	bl	1004ff9c <ACL_pkt_release>
10066e24:	2000      	movs	r0, #0
10066e26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066e28:	4620      	mov	r0, r4
10066e2a:	f000 f8bf 	bl	10066fac <GAT_att_cmn_get_opcode>
10066e2e:	88a9      	ldrh	r1, [r5, #4]
10066e30:	06ca      	lsls	r2, r1, #27
10066e32:	d56e      	bpl.n	10066f12 <GAT_att_clt_rcv+0x12e>
10066e34:	2801      	cmp	r0, #1
10066e36:	d002      	beq.n	10066e3e <GAT_att_clt_rcv+0x5a>
10066e38:	78aa      	ldrb	r2, [r5, #2]
10066e3a:	4290      	cmp	r0, r2
10066e3c:	d169      	bne.n	10066f12 <GAT_att_clt_rcv+0x12e>
10066e3e:	2010      	movs	r0, #16
10066e40:	4381      	bics	r1, r0
10066e42:	80a9      	strh	r1, [r5, #4]
10066e44:	896a      	ldrh	r2, [r5, #10]
10066e46:	8929      	ldrh	r1, [r5, #8]
10066e48:	2603      	movs	r6, #3
10066e4a:	4630      	mov	r0, r6
10066e4c:	f7eb fce4 	bl	10052818 <GAT_att_cmn_stop_timer>
10066e50:	8861      	ldrh	r1, [r4, #2]
10066e52:	88e8      	ldrh	r0, [r5, #6]
10066e54:	9100      	str	r1, [sp, #0]
10066e56:	4281      	cmp	r1, r0
10066e58:	d900      	bls.n	10066e5c <GAT_att_clt_rcv+0x78>
10066e5a:	e09a      	b.n	10066f92 <GAT_att_clt_rcv+0x1ae>
10066e5c:	4620      	mov	r0, r4
10066e5e:	f000 f8a5 	bl	10066fac <GAT_att_cmn_get_opcode>
10066e62:	1e42      	subs	r2, r0, #1
10066e64:	2101      	movs	r1, #1
10066e66:	41ca      	rors	r2, r1
10066e68:	2300      	movs	r3, #0
10066e6a:	2a10      	cmp	r2, #16
10066e6c:	d900      	bls.n	10066e70 <GAT_att_clt_rcv+0x8c>
10066e6e:	e088      	b.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066e70:	0092      	lsls	r2, r2, #2
10066e72:	461f      	mov	r7, r3
10066e74:	a301      	add	r3, pc, #4	@ (adr r3, 10066e7c <GAT_att_clt_rcv+0x98>)
10066e76:	589a      	ldr	r2, [r3, r2]
10066e78:	463b      	mov	r3, r7
10066e7a:	4697      	mov	pc, r2
10066e7c:	10066f33 	.word	0x10066f33
10066e80:	10066f37 	.word	0x10066f37
10066e84:	10066f43 	.word	0x10066f43
10066e88:	10066f61 	.word	0x10066f61
10066e8c:	10066ec1 	.word	0x10066ec1
10066e90:	10066f89 	.word	0x10066f89
10066e94:	10066f89 	.word	0x10066f89
10066e98:	10066f89 	.word	0x10066f89
10066e9c:	10066ec1 	.word	0x10066ec1
10066ea0:	10066f2f 	.word	0x10066f2f
10066ea4:	10066f83 	.word	0x10066f83
10066ea8:	10066f3b 	.word	0x10066f3b
10066eac:	10066f2f 	.word	0x10066f2f
10066eb0:	10066f83 	.word	0x10066f83
10066eb4:	10066f83 	.word	0x10066f83
10066eb8:	10066f83 	.word	0x10066f83
10066ebc:	10066f89 	.word	0x10066f89
10066ec0:	2809      	cmp	r0, #9
10066ec2:	d102      	bne.n	10066eca <GAT_att_clt_rcv+0xe6>
10066ec4:	9900      	ldr	r1, [sp, #0]
10066ec6:	2904      	cmp	r1, #4
10066ec8:	d35b      	bcc.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066eca:	2811      	cmp	r0, #17
10066ecc:	d102      	bne.n	10066ed4 <GAT_att_clt_rcv+0xf0>
10066ece:	9800      	ldr	r0, [sp, #0]
10066ed0:	2806      	cmp	r0, #6
10066ed2:	d356      	bcc.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066ed4:	89a0      	ldrh	r0, [r4, #12]
10066ed6:	1c40      	adds	r0, r0, #1
10066ed8:	b281      	uxth	r1, r0
10066eda:	4620      	mov	r0, r4
10066edc:	f000 fa47 	bl	1006736e <ACL_pkt_read_8b>
10066ee0:	463b      	mov	r3, r7
10066ee2:	2800      	cmp	r0, #0
10066ee4:	d04d      	beq.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066ee6:	4601      	mov	r1, r0
10066ee8:	e043      	b.n	10066f72 <GAT_att_clt_rcv+0x18e>
10066eea:	281d      	cmp	r0, #29
10066eec:	d10d      	bne.n	10066f0a <GAT_att_clt_rcv+0x126>
10066eee:	88a8      	ldrh	r0, [r5, #4]
10066ef0:	0680      	lsls	r0, r0, #26
10066ef2:	d412      	bmi.n	10066f1a <GAT_att_clt_rcv+0x136>
10066ef4:	896a      	ldrh	r2, [r5, #10]
10066ef6:	8929      	ldrh	r1, [r5, #8]
10066ef8:	2002      	movs	r0, #2
10066efa:	f7eb fcd7 	bl	100528ac <GAT_att_cmn_start_timer>
10066efe:	2800      	cmp	r0, #0
10066f00:	d14c      	bne.n	10066f9c <GAT_att_clt_rcv+0x1b8>
10066f02:	88a8      	ldrh	r0, [r5, #4]
10066f04:	2120      	movs	r1, #32
10066f06:	4301      	orrs	r1, r0
10066f08:	80a9      	strh	r1, [r5, #4]
10066f0a:	4620      	mov	r0, r4
10066f0c:	f001 f940 	bl	10068190 <GAT_clt_rcv_srv_initiated>
10066f10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066f12:	4620      	mov	r0, r4
10066f14:	f000 fab7 	bl	10067486 <GAT_att_clt_unexpect_rx>
10066f18:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066f1a:	3508      	adds	r5, #8
10066f1c:	2042      	movs	r0, #66	@ 0x42
10066f1e:	2103      	movs	r1, #3
10066f20:	2202      	movs	r2, #2
10066f22:	462b      	mov	r3, r5
10066f24:	f7ff fe78 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
10066f28:	2800      	cmp	r0, #0
10066f2a:	d137      	bne.n	10066f9c <GAT_att_clt_rcv+0x1b8>
10066f2c:	e777      	b.n	10066e1e <GAT_att_clt_rcv+0x3a>
10066f2e:	460b      	mov	r3, r1
10066f30:	e027      	b.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f32:	2305      	movs	r3, #5
10066f34:	e025      	b.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f36:	4633      	mov	r3, r6
10066f38:	e023      	b.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f3a:	9b00      	ldr	r3, [sp, #0]
10066f3c:	2b04      	cmp	r3, #4
10066f3e:	d91f      	bls.n	10066f80 <GAT_att_clt_rcv+0x19c>
10066f40:	e01f      	b.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f42:	9800      	ldr	r0, [sp, #0]
10066f44:	2806      	cmp	r0, #6
10066f46:	d31c      	bcc.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f48:	89a0      	ldrh	r0, [r4, #12]
10066f4a:	1c40      	adds	r0, r0, #1
10066f4c:	b281      	uxth	r1, r0
10066f4e:	4620      	mov	r0, r4
10066f50:	f000 fa0d 	bl	1006736e <ACL_pkt_read_8b>
10066f54:	2801      	cmp	r0, #1
10066f56:	d00b      	beq.n	10066f70 <GAT_att_clt_rcv+0x18c>
10066f58:	2802      	cmp	r0, #2
10066f5a:	d11a      	bne.n	10066f92 <GAT_att_clt_rcv+0x1ae>
10066f5c:	2112      	movs	r1, #18
10066f5e:	e008      	b.n	10066f72 <GAT_att_clt_rcv+0x18e>
10066f60:	9800      	ldr	r0, [sp, #0]
10066f62:	2802      	cmp	r0, #2
10066f64:	d30d      	bcc.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f66:	9b00      	ldr	r3, [sp, #0]
10066f68:	1e58      	subs	r0, r3, #1
10066f6a:	0780      	lsls	r0, r0, #30
10066f6c:	d108      	bne.n	10066f80 <GAT_att_clt_rcv+0x19c>
10066f6e:	e008      	b.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f70:	2104      	movs	r1, #4
10066f72:	9e00      	ldr	r6, [sp, #0]
10066f74:	1eb0      	subs	r0, r6, #2
10066f76:	f7d9 f9e9 	bl	1004034c <__aeabi_uidivmod>
10066f7a:	2900      	cmp	r1, #0
10066f7c:	4633      	mov	r3, r6
10066f7e:	d000      	beq.n	10066f82 <GAT_att_clt_rcv+0x19e>
10066f80:	2300      	movs	r3, #0
10066f82:	9800      	ldr	r0, [sp, #0]
10066f84:	4298      	cmp	r0, r3
10066f86:	d104      	bne.n	10066f92 <GAT_att_clt_rcv+0x1ae>
10066f88:	4807      	ldr	r0, [pc, #28]	@ (10066fa8 <__arm_cp.1_0>)
10066f8a:	6801      	ldr	r1, [r0, #0]
10066f8c:	4620      	mov	r0, r4
10066f8e:	4788      	blx	r1
10066f90:	e002      	b.n	10066f98 <GAT_att_clt_rcv+0x1b4>
10066f92:	4620      	mov	r0, r4
10066f94:	f000 ff5e 	bl	10067e54 <GAT_clt_rcv_corrupted>
10066f98:	2884      	cmp	r0, #132	@ 0x84
10066f9a:	d101      	bne.n	10066fa0 <GAT_att_clt_rcv+0x1bc>
10066f9c:	2084      	movs	r0, #132	@ 0x84
10066f9e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066fa0:	2000      	movs	r0, #0
10066fa2:	70a8      	strb	r0, [r5, #2]
10066fa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10066fa6:	46c0      	nop			@ (mov r8, r8)

10066fa8 <__arm_cp.1_0>:
10066fa8:	20000bd4 	.word	0x20000bd4

10066fac <GAT_att_cmn_get_opcode>:
10066fac:	b580      	push	{r7, lr}
10066fae:	8981      	ldrh	r1, [r0, #12]
10066fb0:	f000 f9dd 	bl	1006736e <ACL_pkt_read_8b>
10066fb4:	bd80      	pop	{r7, pc}

10066fb6 <GAT_att_clt_connection>:
10066fb6:	b580      	push	{r7, lr}
10066fb8:	f000 fc70 	bl	1006789c <GAT_clt_connection>
10066fbc:	bd80      	pop	{r7, pc}

10066fbe <GAT_att_clt_bearer_close>:
10066fbe:	b580      	push	{r7, lr}
10066fc0:	f000 fc6e 	bl	100678a0 <GAT_clt_bearer_close>
10066fc4:	bd80      	pop	{r7, pc}
	...

10066fc8 <GAT_att_clt_tx>:
10066fc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10066fca:	4605      	mov	r5, r0
10066fcc:	8881      	ldrh	r1, [r0, #4]
10066fce:	8840      	ldrh	r0, [r0, #2]
10066fd0:	f7eb fbb0 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10066fd4:	2800      	cmp	r0, #0
10066fd6:	d008      	beq.n	10066fea <GAT_att_clt_tx+0x22>
10066fd8:	4604      	mov	r4, r0
10066fda:	7829      	ldrb	r1, [r5, #0]
10066fdc:	291e      	cmp	r1, #30
10066fde:	d106      	bne.n	10066fee <GAT_att_clt_tx+0x26>
10066fe0:	88a0      	ldrh	r0, [r4, #4]
10066fe2:	0680      	lsls	r0, r0, #26
10066fe4:	d439      	bmi.n	1006705a <GAT_att_clt_tx+0x92>
10066fe6:	260c      	movs	r6, #12
10066fe8:	e193      	b.n	10067312 <GAT_att_clt_tx+0x34a>
10066fea:	2612      	movs	r6, #18
10066fec:	e191      	b.n	10067312 <GAT_att_clt_tx+0x34a>
10066fee:	0648      	lsls	r0, r1, #25
10066ff0:	d406      	bmi.n	10067000 <GAT_att_clt_tx+0x38>
10066ff2:	48ca      	ldr	r0, [pc, #808]	@ (1006731c <__arm_cp.5_0>)
10066ff4:	4aca      	ldr	r2, [pc, #808]	@ (10067320 <__arm_cp.5_1>)
10066ff6:	6002      	str	r2, [r0, #0]
10066ff8:	88a0      	ldrh	r0, [r4, #4]
10066ffa:	06c0      	lsls	r0, r0, #27
10066ffc:	d500      	bpl.n	10067000 <GAT_att_clt_tx+0x38>
10066ffe:	e16d      	b.n	100672dc <GAT_att_clt_tx+0x314>
10067000:	88e0      	ldrh	r0, [r4, #6]
10067002:	1e8a      	subs	r2, r1, #2
10067004:	2686      	movs	r6, #134	@ 0x86
10067006:	2a1e      	cmp	r2, #30
10067008:	d900      	bls.n	1006700c <GAT_att_clt_tx+0x44>
1006700a:	e091      	b.n	10067130 <GAT_att_clt_tx+0x168>
1006700c:	2703      	movs	r7, #3
1006700e:	0052      	lsls	r2, r2, #1
10067010:	447a      	add	r2, pc
10067012:	8892      	ldrh	r2, [r2, #4]
10067014:	0052      	lsls	r2, r2, #1
10067016:	4497      	add	pc, r2
10067018:	017c0022 	.word	0x017c0022
1006701c:	017c001e 	.word	0x017c001e
10067020:	017c009f 	.word	0x017c009f
10067024:	017c00a2 	.word	0x017c00a2
10067028:	017c0022 	.word	0x017c0022
1006702c:	017c001e 	.word	0x017c001e
10067030:	017c0094 	.word	0x017c0094
10067034:	017c012d 	.word	0x017c012d
10067038:	017c0090 	.word	0x017c0090
1006703c:	017c017c 	.word	0x017c017c
10067040:	017c00a9 	.word	0x017c00a9
10067044:	017c00ac 	.word	0x017c00ac
10067048:	017c017c 	.word	0x017c017c
1006704c:	017c017c 	.word	0x017c017c
10067050:	017c0021 	.word	0x017c0021
10067054:	0094      	.short	0x0094
10067056:	2705      	movs	r7, #5
10067058:	e001      	b.n	1006705e <GAT_att_clt_tx+0x96>
1006705a:	88e0      	ldrh	r0, [r4, #6]
1006705c:	2701      	movs	r7, #1
1006705e:	b2b9      	uxth	r1, r7
10067060:	4281      	cmp	r1, r0
10067062:	d300      	bcc.n	10067066 <GAT_att_clt_tx+0x9e>
10067064:	4607      	mov	r7, r0
10067066:	9700      	str	r7, [sp, #0]
10067068:	b2bf      	uxth	r7, r7
1006706a:	4620      	mov	r0, r4
1006706c:	4639      	mov	r1, r7
1006706e:	f7eb fc5f 	bl	10052930 <GAT_att_cmn_get_pckt>
10067072:	2800      	cmp	r0, #0
10067074:	d02f      	beq.n	100670d6 <GAT_att_clt_tx+0x10e>
10067076:	4606      	mov	r6, r0
10067078:	782a      	ldrb	r2, [r5, #0]
1006707a:	8981      	ldrh	r1, [r0, #12]
1006707c:	f000 f954 	bl	10067328 <ACL_pkt_write_8b>
10067080:	7828      	ldrb	r0, [r5, #0]
10067082:	1e81      	subs	r1, r0, #2
10067084:	2916      	cmp	r1, #22
10067086:	d82d      	bhi.n	100670e4 <GAT_att_clt_tx+0x11c>
10067088:	0049      	lsls	r1, r1, #1
1006708a:	46c0      	nop			@ (mov r8, r8)
1006708c:	4479      	add	r1, pc
1006708e:	8889      	ldrh	r1, [r1, #4]
10067090:	0049      	lsls	r1, r1, #1
10067092:	448f      	add	pc, r1
10067094:	010d0016 	.word	0x010d0016
10067098:	010d0070 	.word	0x010d0070
1006709c:	010d0077 	.word	0x010d0077
100670a0:	010d0093 	.word	0x010d0093
100670a4:	010d00a1 	.word	0x010d00a1
100670a8:	010d00aa 	.word	0x010d00aa
100670ac:	010d00ba 	.word	0x010d00ba
100670b0:	010d00c0 	.word	0x010d00c0
100670b4:	010d002f 	.word	0x010d002f
100670b8:	010d010d 	.word	0x010d010d
100670bc:	010d00ce 	.word	0x010d00ce
100670c0:	00e6      	.short	0x00e6
100670c2:	4898      	ldr	r0, [pc, #608]	@ (10067324 <__arm_cp.5_2>)
100670c4:	8a02      	ldrh	r2, [r0, #16]
100670c6:	89b0      	ldrh	r0, [r6, #12]
100670c8:	1c40      	adds	r0, r0, #1
100670ca:	b281      	uxth	r1, r0
100670cc:	4630      	mov	r0, r6
100670ce:	f7e8 ff9a 	bl	10050006 <ACL_pkt_write_16b>
100670d2:	2003      	movs	r0, #3
100670d4:	e0eb      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
100670d6:	2008      	movs	r0, #8
100670d8:	f7fe f8aa 	bl	10065230 <tsk_notify_idx>
100670dc:	f7db fbfb 	bl	100428d6 <BLE_STACK_ProcessRequest>
100670e0:	2688      	movs	r6, #136	@ 0x88
100670e2:	e116      	b.n	10067312 <GAT_att_clt_tx+0x34a>
100670e4:	2820      	cmp	r0, #32
100670e6:	d100      	bne.n	100670ea <GAT_att_clt_tx+0x122>
100670e8:	e0ca      	b.n	10067280 <GAT_att_clt_tx+0x2b8>
100670ea:	2852      	cmp	r0, #82	@ 0x52
100670ec:	d002      	beq.n	100670f4 <GAT_att_clt_tx+0x12c>
100670ee:	28d2      	cmp	r0, #210	@ 0xd2
100670f0:	d000      	beq.n	100670f4 <GAT_att_clt_tx+0x12c>
100670f2:	e0dd      	b.n	100672b0 <GAT_att_clt_tx+0x2e8>
100670f4:	892a      	ldrh	r2, [r5, #8]
100670f6:	89b0      	ldrh	r0, [r6, #12]
100670f8:	1c40      	adds	r0, r0, #1
100670fa:	b281      	uxth	r1, r0
100670fc:	4630      	mov	r0, r6
100670fe:	f7e8 ff82 	bl	10050006 <ACL_pkt_write_16b>
10067102:	68eb      	ldr	r3, [r5, #12]
10067104:	896a      	ldrh	r2, [r5, #10]
10067106:	89b0      	ldrh	r0, [r6, #12]
10067108:	1cc0      	adds	r0, r0, #3
1006710a:	b281      	uxth	r1, r0
1006710c:	4630      	mov	r0, r6
1006710e:	f7e8 ff83 	bl	10050018 <ACL_pkt_write>
10067112:	7828      	ldrb	r0, [r5, #0]
10067114:	2812      	cmp	r0, #18
10067116:	d100      	bne.n	1006711a <GAT_att_clt_tx+0x152>
10067118:	e0b8      	b.n	1006728c <GAT_att_clt_tx+0x2c4>
1006711a:	28d2      	cmp	r0, #210	@ 0xd2
1006711c:	d000      	beq.n	10067120 <GAT_att_clt_tx+0x158>
1006711e:	e0c7      	b.n	100672b0 <GAT_att_clt_tx+0x2e8>
10067120:	9800      	ldr	r0, [sp, #0]
10067122:	380c      	subs	r0, #12
10067124:	8070      	strh	r0, [r6, #2]
10067126:	8920      	ldrh	r0, [r4, #8]
10067128:	4631      	mov	r1, r6
1006712a:	f7fd ff3c 	bl	10064fa6 <smp_sap_sm2_packet_data_signing_compute>
1006712e:	e0bf      	b.n	100672b0 <GAT_att_clt_tx+0x2e8>
10067130:	2952      	cmp	r1, #82	@ 0x52
10067132:	d002      	beq.n	1006713a <GAT_att_clt_tx+0x172>
10067134:	29d2      	cmp	r1, #210	@ 0xd2
10067136:	d000      	beq.n	1006713a <GAT_att_clt_tx+0x172>
10067138:	e0eb      	b.n	10067312 <GAT_att_clt_tx+0x34a>
1006713a:	29d2      	cmp	r1, #210	@ 0xd2
1006713c:	d008      	beq.n	10067150 <GAT_att_clt_tx+0x188>
1006713e:	2103      	movs	r1, #3
10067140:	e007      	b.n	10067152 <GAT_att_clt_tx+0x18a>
10067142:	7a29      	ldrb	r1, [r5, #8]
10067144:	0049      	lsls	r1, r1, #1
10067146:	1c4f      	adds	r7, r1, #1
10067148:	4287      	cmp	r7, r0
1006714a:	d800      	bhi.n	1006714e <GAT_att_clt_tx+0x186>
1006714c:	e787      	b.n	1006705e <GAT_att_clt_tx+0x96>
1006714e:	e0e0      	b.n	10067312 <GAT_att_clt_tx+0x34a>
10067150:	210f      	movs	r1, #15
10067152:	896a      	ldrh	r2, [r5, #10]
10067154:	1857      	adds	r7, r2, r1
10067156:	e782      	b.n	1006705e <GAT_att_clt_tx+0x96>
10067158:	89e9      	ldrh	r1, [r5, #14]
1006715a:	1dcf      	adds	r7, r1, #7
1006715c:	e77f      	b.n	1006705e <GAT_att_clt_tx+0x96>
1006715e:	68e9      	ldr	r1, [r5, #12]
10067160:	7c09      	ldrb	r1, [r1, #16]
10067162:	2980      	cmp	r1, #128	@ 0x80
10067164:	d000      	beq.n	10067168 <GAT_att_clt_tx+0x1a0>
10067166:	e089      	b.n	1006727c <GAT_att_clt_tx+0x2b4>
10067168:	2715      	movs	r7, #21
1006716a:	e778      	b.n	1006705e <GAT_att_clt_tx+0x96>
1006716c:	89a9      	ldrh	r1, [r5, #12]
1006716e:	1d4f      	adds	r7, r1, #5
10067170:	e775      	b.n	1006705e <GAT_att_clt_tx+0x96>
10067172:	2702      	movs	r7, #2
10067174:	e773      	b.n	1006705e <GAT_att_clt_tx+0x96>
10067176:	896a      	ldrh	r2, [r5, #10]
10067178:	8929      	ldrh	r1, [r5, #8]
1006717a:	4630      	mov	r0, r6
1006717c:	f000 f9a2 	bl	100674c4 <GAT_att_clt_fill_handle_range>
10067180:	2005      	movs	r0, #5
10067182:	e094      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
10067184:	896a      	ldrh	r2, [r5, #10]
10067186:	8929      	ldrh	r1, [r5, #8]
10067188:	4630      	mov	r0, r6
1006718a:	f000 f99b 	bl	100674c4 <GAT_att_clt_fill_handle_range>
1006718e:	89aa      	ldrh	r2, [r5, #12]
10067190:	89b0      	ldrh	r0, [r6, #12]
10067192:	1d40      	adds	r0, r0, #5
10067194:	b281      	uxth	r1, r0
10067196:	4630      	mov	r0, r6
10067198:	f7e8 ff35 	bl	10050006 <ACL_pkt_write_16b>
1006719c:	89e8      	ldrh	r0, [r5, #14]
1006719e:	1dc0      	adds	r0, r0, #7
100671a0:	42b8      	cmp	r0, r7
100671a2:	d800      	bhi.n	100671a6 <GAT_att_clt_tx+0x1de>
100671a4:	4607      	mov	r7, r0
100671a6:	1ff8      	subs	r0, r7, #7
100671a8:	b282      	uxth	r2, r0
100671aa:	692b      	ldr	r3, [r5, #16]
100671ac:	89b0      	ldrh	r0, [r6, #12]
100671ae:	1dc0      	adds	r0, r0, #7
100671b0:	b281      	uxth	r1, r0
100671b2:	4630      	mov	r0, r6
100671b4:	f7e8 ff30 	bl	10050018 <ACL_pkt_write>
100671b8:	2007      	movs	r0, #7
100671ba:	e078      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
100671bc:	896a      	ldrh	r2, [r5, #10]
100671be:	8929      	ldrh	r1, [r5, #8]
100671c0:	4630      	mov	r0, r6
100671c2:	f000 f97f 	bl	100674c4 <GAT_att_clt_fill_handle_range>
100671c6:	89b0      	ldrh	r0, [r6, #12]
100671c8:	1d40      	adds	r0, r0, #5
100671ca:	68eb      	ldr	r3, [r5, #12]
100671cc:	7c19      	ldrb	r1, [r3, #16]
100671ce:	2980      	cmp	r1, #128	@ 0x80
100671d0:	d15e      	bne.n	10067290 <GAT_att_clt_tx+0x2c8>
100671d2:	b281      	uxth	r1, r0
100671d4:	2210      	movs	r2, #16
100671d6:	e05e      	b.n	10067296 <GAT_att_clt_tx+0x2ce>
100671d8:	892a      	ldrh	r2, [r5, #8]
100671da:	89b0      	ldrh	r0, [r6, #12]
100671dc:	1c40      	adds	r0, r0, #1
100671de:	b281      	uxth	r1, r0
100671e0:	4630      	mov	r0, r6
100671e2:	f7e8 ff10 	bl	10050006 <ACL_pkt_write_16b>
100671e6:	200b      	movs	r0, #11
100671e8:	e061      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
100671ea:	892a      	ldrh	r2, [r5, #8]
100671ec:	89b0      	ldrh	r0, [r6, #12]
100671ee:	1c40      	adds	r0, r0, #1
100671f0:	b281      	uxth	r1, r0
100671f2:	4630      	mov	r0, r6
100671f4:	f7e8 ff07 	bl	10050006 <ACL_pkt_write_16b>
100671f8:	896a      	ldrh	r2, [r5, #10]
100671fa:	89b0      	ldrh	r0, [r6, #12]
100671fc:	1cc0      	adds	r0, r0, #3
100671fe:	b281      	uxth	r1, r0
10067200:	4630      	mov	r0, r6
10067202:	f7e8 ff00 	bl	10050006 <ACL_pkt_write_16b>
10067206:	200d      	movs	r0, #13
10067208:	e051      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
1006720a:	4628      	mov	r0, r5
1006720c:	4631      	mov	r1, r6
1006720e:	f000 f94d 	bl	100674ac <GAT_att_clt_fill_read_multi_req>
10067212:	200f      	movs	r0, #15
10067214:	e04b      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
10067216:	896a      	ldrh	r2, [r5, #10]
10067218:	8929      	ldrh	r1, [r5, #8]
1006721a:	4630      	mov	r0, r6
1006721c:	f000 f952 	bl	100674c4 <GAT_att_clt_fill_handle_range>
10067220:	89b0      	ldrh	r0, [r6, #12]
10067222:	1d40      	adds	r0, r0, #5
10067224:	68eb      	ldr	r3, [r5, #12]
10067226:	7c19      	ldrb	r1, [r3, #16]
10067228:	2980      	cmp	r1, #128	@ 0x80
1006722a:	d139      	bne.n	100672a0 <GAT_att_clt_tx+0x2d8>
1006722c:	b281      	uxth	r1, r0
1006722e:	2210      	movs	r2, #16
10067230:	e039      	b.n	100672a6 <GAT_att_clt_tx+0x2de>
10067232:	892a      	ldrh	r2, [r5, #8]
10067234:	89b0      	ldrh	r0, [r6, #12]
10067236:	1c40      	adds	r0, r0, #1
10067238:	b281      	uxth	r1, r0
1006723a:	4630      	mov	r0, r6
1006723c:	f7e8 fee3 	bl	10050006 <ACL_pkt_write_16b>
10067240:	896a      	ldrh	r2, [r5, #10]
10067242:	89b0      	ldrh	r0, [r6, #12]
10067244:	1cc0      	adds	r0, r0, #3
10067246:	b281      	uxth	r1, r0
10067248:	4630      	mov	r0, r6
1006724a:	f7e8 fedc 	bl	10050006 <ACL_pkt_write_16b>
1006724e:	692b      	ldr	r3, [r5, #16]
10067250:	89aa      	ldrh	r2, [r5, #12]
10067252:	89b0      	ldrh	r0, [r6, #12]
10067254:	1d40      	adds	r0, r0, #5
10067256:	b281      	uxth	r1, r0
10067258:	4630      	mov	r0, r6
1006725a:	f7e8 fedd 	bl	10050018 <ACL_pkt_write>
1006725e:	2017      	movs	r0, #23
10067260:	e025      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
10067262:	7a2a      	ldrb	r2, [r5, #8]
10067264:	89b0      	ldrh	r0, [r6, #12]
10067266:	1c40      	adds	r0, r0, #1
10067268:	b281      	uxth	r1, r0
1006726a:	4630      	mov	r0, r6
1006726c:	f000 f85c 	bl	10067328 <ACL_pkt_write_8b>
10067270:	2019      	movs	r0, #25
10067272:	e01c      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
10067274:	68e9      	ldr	r1, [r5, #12]
10067276:	7c09      	ldrb	r1, [r1, #16]
10067278:	2980      	cmp	r1, #128	@ 0x80
1006727a:	d04c      	beq.n	10067316 <GAT_att_clt_tx+0x34e>
1006727c:	2707      	movs	r7, #7
1006727e:	e6ee      	b.n	1006705e <GAT_att_clt_tx+0x96>
10067280:	4628      	mov	r0, r5
10067282:	4631      	mov	r1, r6
10067284:	f000 f912 	bl	100674ac <GAT_att_clt_fill_read_multi_req>
10067288:	2021      	movs	r0, #33	@ 0x21
1006728a:	e010      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
1006728c:	2013      	movs	r0, #19
1006728e:	e00e      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
10067290:	b281      	uxth	r1, r0
10067292:	330c      	adds	r3, #12
10067294:	2202      	movs	r2, #2
10067296:	4630      	mov	r0, r6
10067298:	f7e8 febe 	bl	10050018 <ACL_pkt_write>
1006729c:	2009      	movs	r0, #9
1006729e:	e006      	b.n	100672ae <GAT_att_clt_tx+0x2e6>
100672a0:	b281      	uxth	r1, r0
100672a2:	330c      	adds	r3, #12
100672a4:	2202      	movs	r2, #2
100672a6:	4630      	mov	r0, r6
100672a8:	f7e8 feb6 	bl	10050018 <ACL_pkt_write>
100672ac:	2011      	movs	r0, #17
100672ae:	70a0      	strb	r0, [r4, #2]
100672b0:	9800      	ldr	r0, [sp, #0]
100672b2:	8070      	strh	r0, [r6, #2]
100672b4:	782a      	ldrb	r2, [r5, #0]
100672b6:	89b1      	ldrh	r1, [r6, #12]
100672b8:	4630      	mov	r0, r6
100672ba:	f000 f835 	bl	10067328 <ACL_pkt_write_8b>
100672be:	7828      	ldrb	r0, [r5, #0]
100672c0:	0641      	lsls	r1, r0, #25
100672c2:	d411      	bmi.n	100672e8 <GAT_att_clt_tx+0x320>
100672c4:	281e      	cmp	r0, #30
100672c6:	d00f      	beq.n	100672e8 <GAT_att_clt_tx+0x320>
100672c8:	8962      	ldrh	r2, [r4, #10]
100672ca:	8921      	ldrh	r1, [r4, #8]
100672cc:	2003      	movs	r0, #3
100672ce:	f7eb faed 	bl	100528ac <GAT_att_cmn_start_timer>
100672d2:	2800      	cmp	r0, #0
100672d4:	d004      	beq.n	100672e0 <GAT_att_clt_tx+0x318>
100672d6:	4630      	mov	r0, r6
100672d8:	f7e8 fe60 	bl	1004ff9c <ACL_pkt_release>
100672dc:	2684      	movs	r6, #132	@ 0x84
100672de:	e018      	b.n	10067312 <GAT_att_clt_tx+0x34a>
100672e0:	88a0      	ldrh	r0, [r4, #4]
100672e2:	2110      	movs	r1, #16
100672e4:	4301      	orrs	r1, r0
100672e6:	80a1      	strh	r1, [r4, #4]
100672e8:	8960      	ldrh	r0, [r4, #10]
100672ea:	4631      	mov	r1, r6
100672ec:	f7eb faa4 	bl	10052838 <GAT_att_cmn_send>
100672f0:	2800      	cmp	r0, #0
100672f2:	d001      	beq.n	100672f8 <GAT_att_clt_tx+0x330>
100672f4:	2681      	movs	r6, #129	@ 0x81
100672f6:	e00c      	b.n	10067312 <GAT_att_clt_tx+0x34a>
100672f8:	7828      	ldrb	r0, [r5, #0]
100672fa:	2600      	movs	r6, #0
100672fc:	281e      	cmp	r0, #30
100672fe:	d108      	bne.n	10067312 <GAT_att_clt_tx+0x34a>
10067300:	8962      	ldrh	r2, [r4, #10]
10067302:	8921      	ldrh	r1, [r4, #8]
10067304:	2002      	movs	r0, #2
10067306:	f7eb fa87 	bl	10052818 <GAT_att_cmn_stop_timer>
1006730a:	88a0      	ldrh	r0, [r4, #4]
1006730c:	2120      	movs	r1, #32
1006730e:	4388      	bics	r0, r1
10067310:	80a0      	strh	r0, [r4, #4]
10067312:	4630      	mov	r0, r6
10067314:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10067316:	2711      	movs	r7, #17
10067318:	e6a1      	b.n	1006705e <GAT_att_clt_tx+0x96>
1006731a:	46c0      	nop			@ (mov r8, r8)

1006731c <__arm_cp.5_0>:
1006731c:	20000bd4 	.word	0x20000bd4

10067320 <__arm_cp.5_1>:
10067320:	10067921 	.word	0x10067921

10067324 <__arm_cp.5_2>:
10067324:	200008a8 	.word	0x200008a8

10067328 <ACL_pkt_write_8b>:
10067328:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
1006732a:	4614      	mov	r4, r2
1006732c:	6840      	ldr	r0, [r0, #4]
1006732e:	2920      	cmp	r1, #32
10067330:	d304      	bcc.n	1006733c <ACL_pkt_write_8b+0x14>
10067332:	ad01      	add	r5, sp, #4
10067334:	462a      	mov	r2, r5
10067336:	f7fb fe1c 	bl	10062f72 <Mem_Buff_get_buff_off>
1006733a:	8829      	ldrh	r1, [r5, #0]
1006733c:	1840      	adds	r0, r0, r1
1006733e:	7104      	strb	r4, [r0, #4]
10067340:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10067342 <GAT_att_clt_read_grp_type_get_last_attr_h>:
10067342:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
10067344:	4604      	mov	r4, r0
10067346:	8980      	ldrh	r0, [r0, #12]
10067348:	1c40      	adds	r0, r0, #1
1006734a:	b281      	uxth	r1, r0
1006734c:	4620      	mov	r0, r4
1006734e:	f000 f80e 	bl	1006736e <ACL_pkt_read_8b>
10067352:	8861      	ldrh	r1, [r4, #2]
10067354:	1a08      	subs	r0, r1, r0
10067356:	89a1      	ldrh	r1, [r4, #12]
10067358:	1840      	adds	r0, r0, r1
1006735a:	1c80      	adds	r0, r0, #2
1006735c:	b281      	uxth	r1, r0
1006735e:	2202      	movs	r2, #2
10067360:	ad01      	add	r5, sp, #4
10067362:	4620      	mov	r0, r4
10067364:	462b      	mov	r3, r5
10067366:	f7e8 fe35 	bl	1004ffd4 <ACL_pkt_read>
1006736a:	8828      	ldrh	r0, [r5, #0]
1006736c:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

1006736e <ACL_pkt_read_8b>:
1006736e:	b51c      	push	{r2, r3, r4, lr}
10067370:	291f      	cmp	r1, #31
10067372:	d803      	bhi.n	1006737c <ACL_pkt_read_8b+0xe>
10067374:	aa01      	add	r2, sp, #4
10067376:	8011      	strh	r1, [r2, #0]
10067378:	6840      	ldr	r0, [r0, #4]
1006737a:	e005      	b.n	10067388 <ACL_pkt_read_8b+0x1a>
1006737c:	6840      	ldr	r0, [r0, #4]
1006737e:	ac01      	add	r4, sp, #4
10067380:	4622      	mov	r2, r4
10067382:	f7fb fdf6 	bl	10062f72 <Mem_Buff_get_buff_off>
10067386:	8821      	ldrh	r1, [r4, #0]
10067388:	1840      	adds	r0, r0, r1
1006738a:	7900      	ldrb	r0, [r0, #4]
1006738c:	bd1c      	pop	{r2, r3, r4, pc}

1006738e <GAT_att_clt_find_type_val_get_last_attr_h>:
1006738e:	b51c      	push	{r2, r3, r4, lr}
10067390:	8981      	ldrh	r1, [r0, #12]
10067392:	8842      	ldrh	r2, [r0, #2]
10067394:	1851      	adds	r1, r2, r1
10067396:	1e89      	subs	r1, r1, #2
10067398:	b289      	uxth	r1, r1
1006739a:	2202      	movs	r2, #2
1006739c:	ac01      	add	r4, sp, #4
1006739e:	4623      	mov	r3, r4
100673a0:	f7e8 fe18 	bl	1004ffd4 <ACL_pkt_read>
100673a4:	8820      	ldrh	r0, [r4, #0]
100673a6:	bd1c      	pop	{r2, r3, r4, pc}

100673a8 <GAT_att_clt_parse_error_resp>:
100673a8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
100673aa:	460e      	mov	r6, r1
100673ac:	8841      	ldrh	r1, [r0, #2]
100673ae:	2905      	cmp	r1, #5
100673b0:	d112      	bne.n	100673d8 <GAT_att_clt_parse_error_resp+0x30>
100673b2:	461c      	mov	r4, r3
100673b4:	4615      	mov	r5, r2
100673b6:	8981      	ldrh	r1, [r0, #12]
100673b8:	2205      	movs	r2, #5
100673ba:	af01      	add	r7, sp, #4
100673bc:	463b      	mov	r3, r7
100673be:	f7e8 fe09 	bl	1004ffd4 <ACL_pkt_read>
100673c2:	7878      	ldrb	r0, [r7, #1]
100673c4:	7030      	strb	r0, [r6, #0]
100673c6:	78b8      	ldrb	r0, [r7, #2]
100673c8:	78f9      	ldrb	r1, [r7, #3]
100673ca:	0209      	lsls	r1, r1, #8
100673cc:	1808      	adds	r0, r1, r0
100673ce:	8028      	strh	r0, [r5, #0]
100673d0:	9802      	ldr	r0, [sp, #8]
100673d2:	7020      	strb	r0, [r4, #0]
100673d4:	2000      	movs	r0, #0
100673d6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100673d8:	2086      	movs	r0, #134	@ 0x86
100673da:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

100673dc <GAT_att_clt_read_type_get_last_attr_h>:
100673dc:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
100673de:	4604      	mov	r4, r0
100673e0:	8980      	ldrh	r0, [r0, #12]
100673e2:	1c40      	adds	r0, r0, #1
100673e4:	b281      	uxth	r1, r0
100673e6:	4620      	mov	r0, r4
100673e8:	f7ff ffc1 	bl	1006736e <ACL_pkt_read_8b>
100673ec:	8861      	ldrh	r1, [r4, #2]
100673ee:	1a08      	subs	r0, r1, r0
100673f0:	89a1      	ldrh	r1, [r4, #12]
100673f2:	1840      	adds	r0, r0, r1
100673f4:	b281      	uxth	r1, r0
100673f6:	2202      	movs	r2, #2
100673f8:	ad01      	add	r5, sp, #4
100673fa:	4620      	mov	r0, r4
100673fc:	462b      	mov	r3, r5
100673fe:	f7e8 fde9 	bl	1004ffd4 <ACL_pkt_read>
10067402:	8828      	ldrh	r0, [r5, #0]
10067404:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10067406 <GAT_att_clt_read_type_get_data>:
10067406:	b570      	push	{r4, r5, r6, lr}
10067408:	4614      	mov	r4, r2
1006740a:	460e      	mov	r6, r1
1006740c:	4605      	mov	r5, r0
1006740e:	8980      	ldrh	r0, [r0, #12]
10067410:	1c40      	adds	r0, r0, #1
10067412:	b281      	uxth	r1, r0
10067414:	4628      	mov	r0, r5
10067416:	f7ff ffaa 	bl	1006736e <ACL_pkt_read_8b>
1006741a:	4602      	mov	r2, r0
1006741c:	4346      	muls	r6, r0
1006741e:	1cb0      	adds	r0, r6, #2
10067420:	8869      	ldrh	r1, [r5, #2]
10067422:	4288      	cmp	r0, r1
10067424:	d208      	bcs.n	10067438 <GAT_att_clt_read_type_get_data+0x32>
10067426:	89a9      	ldrh	r1, [r5, #12]
10067428:	1808      	adds	r0, r1, r0
1006742a:	b281      	uxth	r1, r0
1006742c:	4628      	mov	r0, r5
1006742e:	4623      	mov	r3, r4
10067430:	f7e8 fdd0 	bl	1004ffd4 <ACL_pkt_read>
10067434:	2000      	movs	r0, #0
10067436:	bd70      	pop	{r4, r5, r6, pc}
10067438:	2086      	movs	r0, #134	@ 0x86
1006743a:	bd70      	pop	{r4, r5, r6, pc}

1006743c <GAT_att_clt_find_info_get_last_attr_h>:
1006743c:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
1006743e:	4604      	mov	r4, r0
10067440:	8980      	ldrh	r0, [r0, #12]
10067442:	1c40      	adds	r0, r0, #1
10067444:	b281      	uxth	r1, r0
10067446:	4620      	mov	r0, r4
10067448:	f7ff ff91 	bl	1006736e <ACL_pkt_read_8b>
1006744c:	2111      	movs	r1, #17
1006744e:	43c9      	mvns	r1, r1
10067450:	2801      	cmp	r0, #1
10067452:	d100      	bne.n	10067456 <GAT_att_clt_find_info_get_last_attr_h+0x1a>
10067454:	310e      	adds	r1, #14
10067456:	8860      	ldrh	r0, [r4, #2]
10067458:	1840      	adds	r0, r0, r1
1006745a:	89a1      	ldrh	r1, [r4, #12]
1006745c:	1808      	adds	r0, r1, r0
1006745e:	b281      	uxth	r1, r0
10067460:	2202      	movs	r2, #2
10067462:	ad01      	add	r5, sp, #4
10067464:	4620      	mov	r0, r4
10067466:	462b      	mov	r3, r5
10067468:	f7e8 fdb4 	bl	1004ffd4 <ACL_pkt_read>
1006746c:	8828      	ldrh	r0, [r5, #0]
1006746e:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

10067470 <GAT_att_clt_prep_wr_cmp_data>:
10067470:	b580      	push	{r7, lr}
10067472:	460b      	mov	r3, r1
10067474:	8842      	ldrh	r2, [r0, #2]
10067476:	8981      	ldrh	r1, [r0, #12]
10067478:	1d49      	adds	r1, r1, #5
1006747a:	b289      	uxth	r1, r1
1006747c:	1f52      	subs	r2, r2, #5
1006747e:	b292      	uxth	r2, r2
10067480:	f7e8 fd9f 	bl	1004ffc2 <ACL_pkt_cmp>
10067484:	bd80      	pop	{r7, pc}

10067486 <GAT_att_clt_unexpect_rx>:
10067486:	b51c      	push	{r2, r3, r4, lr}
10067488:	4604      	mov	r4, r0
1006748a:	8800      	ldrh	r0, [r0, #0]
1006748c:	ab01      	add	r3, sp, #4
1006748e:	8018      	strh	r0, [r3, #0]
10067490:	2042      	movs	r0, #66	@ 0x42
10067492:	2102      	movs	r1, #2
10067494:	460a      	mov	r2, r1
10067496:	f7ff fbbf 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
1006749a:	2800      	cmp	r0, #0
1006749c:	d001      	beq.n	100674a2 <GAT_att_clt_unexpect_rx+0x1c>
1006749e:	2084      	movs	r0, #132	@ 0x84
100674a0:	bd1c      	pop	{r2, r3, r4, pc}
100674a2:	4620      	mov	r0, r4
100674a4:	f7e8 fd7a 	bl	1004ff9c <ACL_pkt_release>
100674a8:	2000      	movs	r0, #0
100674aa:	bd1c      	pop	{r2, r3, r4, pc}

100674ac <GAT_att_clt_fill_read_multi_req>:
100674ac:	b510      	push	{r4, lr}
100674ae:	460c      	mov	r4, r1
100674b0:	68c3      	ldr	r3, [r0, #12]
100674b2:	8989      	ldrh	r1, [r1, #12]
100674b4:	7a00      	ldrb	r0, [r0, #8]
100674b6:	0042      	lsls	r2, r0, #1
100674b8:	1c48      	adds	r0, r1, #1
100674ba:	b281      	uxth	r1, r0
100674bc:	4620      	mov	r0, r4
100674be:	f7e8 fdab 	bl	10050018 <ACL_pkt_write>
100674c2:	bd10      	pop	{r4, pc}

100674c4 <GAT_att_clt_fill_handle_range>:
100674c4:	b5b0      	push	{r4, r5, r7, lr}
100674c6:	4614      	mov	r4, r2
100674c8:	460a      	mov	r2, r1
100674ca:	4605      	mov	r5, r0
100674cc:	8980      	ldrh	r0, [r0, #12]
100674ce:	1c40      	adds	r0, r0, #1
100674d0:	b281      	uxth	r1, r0
100674d2:	4628      	mov	r0, r5
100674d4:	f7e8 fd97 	bl	10050006 <ACL_pkt_write_16b>
100674d8:	89a8      	ldrh	r0, [r5, #12]
100674da:	1cc0      	adds	r0, r0, #3
100674dc:	b281      	uxth	r1, r0
100674de:	4628      	mov	r0, r5
100674e0:	4622      	mov	r2, r4
100674e2:	f7e8 fd90 	bl	10050006 <ACL_pkt_write_16b>
100674e6:	bdb0      	pop	{r4, r5, r7, pc}

100674e8 <GAT_att_db_init>:
100674e8:	b510      	push	{r4, lr}
100674ea:	4604      	mov	r4, r0
100674ec:	2108      	movs	r1, #8
100674ee:	f7fb fca1 	bl	10062e34 <csmem_mem_0_assign>
100674f2:	4904      	ldr	r1, [pc, #16]	@ (10067504 <__arm_cp.0_0>)
100674f4:	6809      	ldr	r1, [r1, #0]
100674f6:	2260      	movs	r2, #96	@ 0x60
100674f8:	2300      	movs	r3, #0
100674fa:	528b      	strh	r3, [r1, r2]
100674fc:	6648      	str	r0, [r1, #100]	@ 0x64
100674fe:	3160      	adds	r1, #96	@ 0x60
10067500:	804c      	strh	r4, [r1, #2]
10067502:	bd10      	pop	{r4, pc}

10067504 <__arm_cp.0_0>:
10067504:	20000848 	.word	0x20000848

10067508 <GAT_att_db_insert>:
10067508:	b5f0      	push	{r4, r5, r6, r7, lr}
1006750a:	b085      	sub	sp, #20
1006750c:	4617      	mov	r7, r2
1006750e:	9004      	str	r0, [sp, #16]
10067510:	4d1c      	ldr	r5, [pc, #112]	@ (10067584 <__arm_cp.1_0>)
10067512:	6828      	ldr	r0, [r5, #0]
10067514:	2460      	movs	r4, #96	@ 0x60
10067516:	5b06      	ldrh	r6, [r0, r4]
10067518:	4602      	mov	r2, r0
1006751a:	3260      	adds	r2, #96	@ 0x60
1006751c:	8852      	ldrh	r2, [r2, #2]
1006751e:	4296      	cmp	r6, r2
10067520:	d217      	bcs.n	10067552 <GAT_att_db_insert+0x4a>
10067522:	9402      	str	r4, [sp, #8]
10067524:	9303      	str	r3, [sp, #12]
10067526:	2900      	cmp	r1, #0
10067528:	d017      	beq.n	1006755a <GAT_att_db_insert+0x52>
1006752a:	9701      	str	r7, [sp, #4]
1006752c:	4608      	mov	r0, r1
1006752e:	f000 f82b 	bl	10067588 <GAT_att_db_get_att_idx>
10067532:	1c44      	adds	r4, r0, #1
10067534:	6828      	ldr	r0, [r5, #0]
10067536:	b2b1      	uxth	r1, r6
10067538:	b2a2      	uxth	r2, r4
1006753a:	4291      	cmp	r1, r2
1006753c:	d30b      	bcc.n	10067556 <GAT_att_db_insert+0x4e>
1006753e:	00c9      	lsls	r1, r1, #3
10067540:	6e40      	ldr	r0, [r0, #100]	@ 0x64
10067542:	1840      	adds	r0, r0, r1
10067544:	4601      	mov	r1, r0
10067546:	3908      	subs	r1, #8
10067548:	2208      	movs	r2, #8
1006754a:	f7dd fa2b 	bl	100449a4 <BLEPLAT_MemCpy>
1006754e:	1e76      	subs	r6, r6, #1
10067550:	e7f0      	b.n	10067534 <GAT_att_db_insert+0x2c>
10067552:	2700      	movs	r7, #0
10067554:	e012      	b.n	1006757c <GAT_att_db_insert+0x74>
10067556:	9f01      	ldr	r7, [sp, #4]
10067558:	e000      	b.n	1006755c <GAT_att_db_insert+0x54>
1006755a:	4634      	mov	r4, r6
1006755c:	6e40      	ldr	r0, [r0, #100]	@ 0x64
1006755e:	b2a1      	uxth	r1, r4
10067560:	00c9      	lsls	r1, r1, #3
10067562:	9a04      	ldr	r2, [sp, #16]
10067564:	5442      	strb	r2, [r0, r1]
10067566:	1840      	adds	r0, r0, r1
10067568:	9a03      	ldr	r2, [sp, #12]
1006756a:	6042      	str	r2, [r0, #4]
1006756c:	6828      	ldr	r0, [r5, #0]
1006756e:	9b02      	ldr	r3, [sp, #8]
10067570:	5ac2      	ldrh	r2, [r0, r3]
10067572:	1c52      	adds	r2, r2, #1
10067574:	52c2      	strh	r2, [r0, r3]
10067576:	6e40      	ldr	r0, [r0, #100]	@ 0x64
10067578:	1840      	adds	r0, r0, r1
1006757a:	8047      	strh	r7, [r0, #2]
1006757c:	4638      	mov	r0, r7
1006757e:	b005      	add	sp, #20
10067580:	bdf0      	pop	{r4, r5, r6, r7, pc}
10067582:	46c0      	nop			@ (mov r8, r8)

10067584 <__arm_cp.1_0>:
10067584:	20000848 	.word	0x20000848

10067588 <GAT_att_db_get_att_idx>:
10067588:	4908      	ldr	r1, [pc, #32]	@ (100675ac <__arm_cp.2_0>)
1006758a:	680a      	ldr	r2, [r1, #0]
1006758c:	6e51      	ldr	r1, [r2, #100]	@ 0x64
1006758e:	2362      	movs	r3, #98	@ 0x62
10067590:	5ad2      	ldrh	r2, [r2, r3]
10067592:	00d2      	lsls	r2, r2, #3
10067594:	1852      	adds	r2, r2, r1
10067596:	3a08      	subs	r2, #8
10067598:	4282      	cmp	r2, r0
1006759a:	d302      	bcc.n	100675a2 <GAT_att_db_get_att_idx+0x1a>
1006759c:	1a40      	subs	r0, r0, r1
1006759e:	08c0      	lsrs	r0, r0, #3
100675a0:	e001      	b.n	100675a6 <GAT_att_db_get_att_idx+0x1e>
100675a2:	2000      	movs	r0, #0
100675a4:	43c0      	mvns	r0, r0
100675a6:	b280      	uxth	r0, r0
100675a8:	4770      	bx	lr
100675aa:	46c0      	nop			@ (mov r8, r8)

100675ac <__arm_cp.2_0>:
100675ac:	20000848 	.word	0x20000848

100675b0 <GAT_att_db_find_by_handle>:
100675b0:	b580      	push	{r7, lr}
100675b2:	f000 f80f 	bl	100675d4 <GAT_att_db_find_attr_idx_with_handle>
100675b6:	4905      	ldr	r1, [pc, #20]	@ (100675cc <__arm_cp.3_0>)
100675b8:	4288      	cmp	r0, r1
100675ba:	d005      	beq.n	100675c8 <GAT_att_db_find_by_handle+0x18>
100675bc:	00c0      	lsls	r0, r0, #3
100675be:	4904      	ldr	r1, [pc, #16]	@ (100675d0 <__arm_cp.3_1>)
100675c0:	6809      	ldr	r1, [r1, #0]
100675c2:	6e49      	ldr	r1, [r1, #100]	@ 0x64
100675c4:	1808      	adds	r0, r1, r0
100675c6:	bd80      	pop	{r7, pc}
100675c8:	2000      	movs	r0, #0
100675ca:	bd80      	pop	{r7, pc}

100675cc <__arm_cp.3_0>:
100675cc:	0000ffff 	.word	0x0000ffff

100675d0 <__arm_cp.3_1>:
100675d0:	20000848 	.word	0x20000848

100675d4 <GAT_att_db_find_attr_idx_with_handle>:
100675d4:	b510      	push	{r4, lr}
100675d6:	4604      	mov	r4, r0
100675d8:	f000 f824 	bl	10067624 <GAT_att_db_find_attr_idx_from_handle>
100675dc:	4906      	ldr	r1, [pc, #24]	@ (100675f8 <__arm_cp.4_0>)
100675de:	4288      	cmp	r0, r1
100675e0:	d007      	beq.n	100675f2 <GAT_att_db_find_attr_idx_with_handle+0x1e>
100675e2:	00c2      	lsls	r2, r0, #3
100675e4:	4b05      	ldr	r3, [pc, #20]	@ (100675fc <__arm_cp.4_1>)
100675e6:	681b      	ldr	r3, [r3, #0]
100675e8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
100675ea:	189a      	adds	r2, r3, r2
100675ec:	8852      	ldrh	r2, [r2, #2]
100675ee:	42a2      	cmp	r2, r4
100675f0:	d000      	beq.n	100675f4 <GAT_att_db_find_attr_idx_with_handle+0x20>
100675f2:	4608      	mov	r0, r1
100675f4:	bd10      	pop	{r4, pc}
100675f6:	46c0      	nop			@ (mov r8, r8)

100675f8 <__arm_cp.4_0>:
100675f8:	0000ffff 	.word	0x0000ffff

100675fc <__arm_cp.4_1>:
100675fc:	20000848 	.word	0x20000848

10067600 <GAT_att_db_find_from_handle>:
10067600:	b580      	push	{r7, lr}
10067602:	f000 f80f 	bl	10067624 <GAT_att_db_find_attr_idx_from_handle>
10067606:	4905      	ldr	r1, [pc, #20]	@ (1006761c <__arm_cp.5_0>)
10067608:	4288      	cmp	r0, r1
1006760a:	d005      	beq.n	10067618 <GAT_att_db_find_from_handle+0x18>
1006760c:	00c0      	lsls	r0, r0, #3
1006760e:	4904      	ldr	r1, [pc, #16]	@ (10067620 <__arm_cp.5_1>)
10067610:	6809      	ldr	r1, [r1, #0]
10067612:	6e49      	ldr	r1, [r1, #100]	@ 0x64
10067614:	1808      	adds	r0, r1, r0
10067616:	bd80      	pop	{r7, pc}
10067618:	2000      	movs	r0, #0
1006761a:	bd80      	pop	{r7, pc}

1006761c <__arm_cp.5_0>:
1006761c:	0000ffff 	.word	0x0000ffff

10067620 <__arm_cp.5_1>:
10067620:	20000848 	.word	0x20000848

10067624 <GAT_att_db_find_attr_idx_from_handle>:
10067624:	b570      	push	{r4, r5, r6, lr}
10067626:	4909      	ldr	r1, [pc, #36]	@ (1006764c <__arm_cp.6_0>)
10067628:	680a      	ldr	r2, [r1, #0]
1006762a:	2160      	movs	r1, #96	@ 0x60
1006762c:	5a53      	ldrh	r3, [r2, r1]
1006762e:	2100      	movs	r1, #0
10067630:	2502      	movs	r5, #2
10067632:	4c07      	ldr	r4, [pc, #28]	@ (10067650 <__arm_cp.6_1>)
10067634:	428b      	cmp	r3, r1
10067636:	d006      	beq.n	10067646 <GAT_att_db_find_attr_idx_from_handle+0x22>
10067638:	6e56      	ldr	r6, [r2, #100]	@ 0x64
1006763a:	5b76      	ldrh	r6, [r6, r5]
1006763c:	4286      	cmp	r6, r0
1006763e:	d203      	bcs.n	10067648 <GAT_att_db_find_attr_idx_from_handle+0x24>
10067640:	3508      	adds	r5, #8
10067642:	1c49      	adds	r1, r1, #1
10067644:	e7f6      	b.n	10067634 <GAT_att_db_find_attr_idx_from_handle+0x10>
10067646:	4621      	mov	r1, r4
10067648:	b288      	uxth	r0, r1
1006764a:	bd70      	pop	{r4, r5, r6, pc}

1006764c <__arm_cp.6_0>:
1006764c:	20000848 	.word	0x20000848

10067650 <__arm_cp.6_1>:
10067650:	0000ffff 	.word	0x0000ffff

10067654 <GAT_att_db_find_by_def>:
10067654:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
10067656:	9302      	str	r3, [sp, #8]
10067658:	4615      	mov	r5, r2
1006765a:	2200      	movs	r2, #0
1006765c:	4288      	cmp	r0, r1
1006765e:	d823      	bhi.n	100676a8 <GAT_att_db_find_by_def+0x54>
10067660:	460c      	mov	r4, r1
10067662:	4916      	ldr	r1, [pc, #88]	@ (100676bc <__arm_cp.8_0>)
10067664:	680f      	ldr	r7, [r1, #0]
10067666:	2160      	movs	r1, #96	@ 0x60
10067668:	5a79      	ldrh	r1, [r7, r1]
1006766a:	2900      	cmp	r1, #0
1006766c:	d01c      	beq.n	100676a8 <GAT_att_db_find_by_def+0x54>
1006766e:	9200      	str	r2, [sp, #0]
10067670:	9101      	str	r1, [sp, #4]
10067672:	f7ff ffd7 	bl	10067624 <GAT_att_db_find_attr_idx_from_handle>
10067676:	4606      	mov	r6, r0
10067678:	4620      	mov	r0, r4
1006767a:	f7ff ffd3 	bl	10067624 <GAT_att_db_find_attr_idx_from_handle>
1006767e:	9901      	ldr	r1, [sp, #4]
10067680:	1e49      	subs	r1, r1, #1
10067682:	4281      	cmp	r1, r0
10067684:	d300      	bcc.n	10067688 <GAT_att_db_find_by_def+0x34>
10067686:	4601      	mov	r1, r0
10067688:	b289      	uxth	r1, r1
1006768a:	b2b2      	uxth	r2, r6
1006768c:	428a      	cmp	r2, r1
1006768e:	d80d      	bhi.n	100676ac <GAT_att_db_find_by_def+0x58>
10067690:	6e78      	ldr	r0, [r7, #100]	@ 0x64
10067692:	00d3      	lsls	r3, r2, #3
10067694:	5cc4      	ldrb	r4, [r0, r3]
10067696:	42ac      	cmp	r4, r5
10067698:	d104      	bne.n	100676a4 <GAT_att_db_find_by_def+0x50>
1006769a:	18c0      	adds	r0, r0, r3
1006769c:	6843      	ldr	r3, [r0, #4]
1006769e:	9c02      	ldr	r4, [sp, #8]
100676a0:	42a3      	cmp	r3, r4
100676a2:	d005      	beq.n	100676b0 <GAT_att_db_find_by_def+0x5c>
100676a4:	1c76      	adds	r6, r6, #1
100676a6:	e7f0      	b.n	1006768a <GAT_att_db_find_by_def+0x36>
100676a8:	4610      	mov	r0, r2
100676aa:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100676ac:	9800      	ldr	r0, [sp, #0]
100676ae:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100676b0:	4903      	ldr	r1, [pc, #12]	@ (100676c0 <__arm_cp.8_1>)
100676b2:	428a      	cmp	r2, r1
100676b4:	d100      	bne.n	100676b8 <GAT_att_db_find_by_def+0x64>
100676b6:	2000      	movs	r0, #0
100676b8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100676ba:	46c0      	nop			@ (mov r8, r8)

100676bc <__arm_cp.8_0>:
100676bc:	20000848 	.word	0x20000848

100676c0 <__arm_cp.8_1>:
100676c0:	0000ffff 	.word	0x0000ffff

100676c4 <GAT_att_db_get_next>:
100676c4:	b580      	push	{r7, lr}
100676c6:	f7ff ff5f 	bl	10067588 <GAT_att_db_get_att_idx>
100676ca:	4907      	ldr	r1, [pc, #28]	@ (100676e8 <__arm_cp.10_0>)
100676cc:	6809      	ldr	r1, [r1, #0]
100676ce:	2260      	movs	r2, #96	@ 0x60
100676d0:	5a8a      	ldrh	r2, [r1, r2]
100676d2:	1c40      	adds	r0, r0, #1
100676d4:	b280      	uxth	r0, r0
100676d6:	4290      	cmp	r0, r2
100676d8:	d203      	bcs.n	100676e2 <GAT_att_db_get_next+0x1e>
100676da:	6e49      	ldr	r1, [r1, #100]	@ 0x64
100676dc:	00c0      	lsls	r0, r0, #3
100676de:	1808      	adds	r0, r1, r0
100676e0:	bd80      	pop	{r7, pc}
100676e2:	2000      	movs	r0, #0
100676e4:	bd80      	pop	{r7, pc}
100676e6:	46c0      	nop			@ (mov r8, r8)

100676e8 <__arm_cp.10_0>:
100676e8:	20000848 	.word	0x20000848

100676ec <GAT_att_db_get_last_group_handle>:
100676ec:	b580      	push	{r7, lr}
100676ee:	f000 f803 	bl	100676f8 <GAT_att_db_get_last_group_attribute>
100676f2:	8840      	ldrh	r0, [r0, #2]
100676f4:	bd80      	pop	{r7, pc}
	...

100676f8 <GAT_att_db_get_last_group_attribute>:
100676f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100676fa:	7804      	ldrb	r4, [r0, #0]
100676fc:	2502      	movs	r5, #2
100676fe:	4621      	mov	r1, r4
10067700:	4329      	orrs	r1, r5
10067702:	2902      	cmp	r1, #2
10067704:	d11e      	bne.n	10067744 <GAT_att_db_get_last_group_attribute+0x4c>
10067706:	f7ff ff3f 	bl	10067588 <GAT_att_db_get_att_idx>
1006770a:	490f      	ldr	r1, [pc, #60]	@ (10067748 <__arm_cp.12_0>)
1006770c:	6809      	ldr	r1, [r1, #0]
1006770e:	2260      	movs	r2, #96	@ 0x60
10067710:	5a8b      	ldrh	r3, [r1, r2]
10067712:	1c40      	adds	r0, r0, #1
10067714:	b282      	uxth	r2, r0
10067716:	429a      	cmp	r2, r3
10067718:	d210      	bcs.n	1006773c <GAT_att_db_get_last_group_attribute+0x44>
1006771a:	2c00      	cmp	r4, #0
1006771c:	d008      	beq.n	10067730 <GAT_att_db_get_last_group_attribute+0x38>
1006771e:	2c02      	cmp	r4, #2
10067720:	d1f7      	bne.n	10067712 <GAT_att_db_get_last_group_attribute+0x1a>
10067722:	00d7      	lsls	r7, r2, #3
10067724:	6e4e      	ldr	r6, [r1, #100]	@ 0x64
10067726:	5df7      	ldrb	r7, [r6, r7]
10067728:	432f      	orrs	r7, r5
1006772a:	2f02      	cmp	r7, #2
1006772c:	d1f1      	bne.n	10067712 <GAT_att_db_get_last_group_attribute+0x1a>
1006772e:	e006      	b.n	1006773e <GAT_att_db_get_last_group_attribute+0x46>
10067730:	00d7      	lsls	r7, r2, #3
10067732:	6e4e      	ldr	r6, [r1, #100]	@ 0x64
10067734:	5df7      	ldrb	r7, [r6, r7]
10067736:	2f00      	cmp	r7, #0
10067738:	d1eb      	bne.n	10067712 <GAT_att_db_get_last_group_attribute+0x1a>
1006773a:	e000      	b.n	1006773e <GAT_att_db_get_last_group_attribute+0x46>
1006773c:	6e4e      	ldr	r6, [r1, #100]	@ 0x64
1006773e:	00d0      	lsls	r0, r2, #3
10067740:	1980      	adds	r0, r0, r6
10067742:	3808      	subs	r0, #8
10067744:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10067746:	46c0      	nop			@ (mov r8, r8)

10067748 <__arm_cp.12_0>:
10067748:	20000848 	.word	0x20000848

1006774c <GAT_att_db_get_last_handle>:
1006774c:	4806      	ldr	r0, [pc, #24]	@ (10067768 <__arm_cp.14_0>)
1006774e:	6800      	ldr	r0, [r0, #0]
10067750:	2160      	movs	r1, #96	@ 0x60
10067752:	5a41      	ldrh	r1, [r0, r1]
10067754:	2900      	cmp	r1, #0
10067756:	d005      	beq.n	10067764 <GAT_att_db_get_last_handle+0x18>
10067758:	6e40      	ldr	r0, [r0, #100]	@ 0x64
1006775a:	00c9      	lsls	r1, r1, #3
1006775c:	1808      	adds	r0, r1, r0
1006775e:	1f80      	subs	r0, r0, #6
10067760:	8800      	ldrh	r0, [r0, #0]
10067762:	4770      	bx	lr
10067764:	2000      	movs	r0, #0
10067766:	4770      	bx	lr

10067768 <__arm_cp.14_0>:
10067768:	20000848 	.word	0x20000848

1006776c <GAT_att_db_rm_att_range>:
1006776c:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1006776e:	460d      	mov	r5, r1
10067770:	4604      	mov	r4, r0
10067772:	f7ff ffeb 	bl	1006774c <GAT_att_db_get_last_handle>
10067776:	2800      	cmp	r0, #0
10067778:	d034      	beq.n	100677e4 <GAT_att_db_rm_att_range+0x78>
1006777a:	42ac      	cmp	r4, r5
1006777c:	d832      	bhi.n	100677e4 <GAT_att_db_rm_att_range+0x78>
1006777e:	4606      	mov	r6, r0
10067780:	42a0      	cmp	r0, r4
10067782:	d32f      	bcc.n	100677e4 <GAT_att_db_rm_att_range+0x78>
10067784:	4620      	mov	r0, r4
10067786:	f7ff ff25 	bl	100675d4 <GAT_att_db_find_attr_idx_with_handle>
1006778a:	4604      	mov	r4, r0
1006778c:	4816      	ldr	r0, [pc, #88]	@ (100677e8 <__arm_cp.16_0>)
1006778e:	4284      	cmp	r4, r0
10067790:	d028      	beq.n	100677e4 <GAT_att_db_rm_att_range+0x78>
10067792:	42ae      	cmp	r6, r5
10067794:	d300      	bcc.n	10067798 <GAT_att_db_rm_att_range+0x2c>
10067796:	462e      	mov	r6, r5
10067798:	4630      	mov	r0, r6
1006779a:	f7ff ff1b 	bl	100675d4 <GAT_att_db_find_attr_idx_with_handle>
1006779e:	4913      	ldr	r1, [pc, #76]	@ (100677ec <__arm_cp.16_1>)
100677a0:	680f      	ldr	r7, [r1, #0]
100677a2:	2660      	movs	r6, #96	@ 0x60
100677a4:	5bb9      	ldrh	r1, [r7, r6]
100677a6:	1e4a      	subs	r2, r1, #1
100677a8:	4282      	cmp	r2, r0
100677aa:	d917      	bls.n	100677dc <GAT_att_db_rm_att_range+0x70>
100677ac:	9001      	str	r0, [sp, #4]
100677ae:	4605      	mov	r5, r0
100677b0:	9402      	str	r4, [sp, #8]
100677b2:	b28b      	uxth	r3, r1
100677b4:	1c6d      	adds	r5, r5, #1
100677b6:	b2aa      	uxth	r2, r5
100677b8:	429a      	cmp	r2, r3
100677ba:	d20d      	bcs.n	100677d8 <GAT_att_db_rm_att_range+0x6c>
100677bc:	6e79      	ldr	r1, [r7, #100]	@ 0x64
100677be:	b2a0      	uxth	r0, r4
100677c0:	00c0      	lsls	r0, r0, #3
100677c2:	1808      	adds	r0, r1, r0
100677c4:	00d2      	lsls	r2, r2, #3
100677c6:	1889      	adds	r1, r1, r2
100677c8:	2208      	movs	r2, #8
100677ca:	f7dd f8eb 	bl	100449a4 <BLEPLAT_MemCpy>
100677ce:	4807      	ldr	r0, [pc, #28]	@ (100677ec <__arm_cp.16_1>)
100677d0:	6807      	ldr	r7, [r0, #0]
100677d2:	5bb9      	ldrh	r1, [r7, r6]
100677d4:	1c64      	adds	r4, r4, #1
100677d6:	e7ec      	b.n	100677b2 <GAT_att_db_rm_att_range+0x46>
100677d8:	9c02      	ldr	r4, [sp, #8]
100677da:	9801      	ldr	r0, [sp, #4]
100677dc:	43c2      	mvns	r2, r0
100677de:	18a2      	adds	r2, r4, r2
100677e0:	1851      	adds	r1, r2, r1
100677e2:	53b9      	strh	r1, [r7, r6]
100677e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
100677e6:	46c0      	nop			@ (mov r8, r8)

100677e8 <__arm_cp.16_0>:
100677e8:	0000ffff 	.word	0x0000ffff

100677ec <__arm_cp.16_1>:
100677ec:	20000848 	.word	0x20000848

100677f0 <GAT_att_db_find_last_attr_of_type>:
100677f0:	b510      	push	{r4, lr}
100677f2:	4909      	ldr	r1, [pc, #36]	@ (10067818 <__arm_cp.17_0>)
100677f4:	680a      	ldr	r2, [r1, #0]
100677f6:	2160      	movs	r1, #96	@ 0x60
100677f8:	5a53      	ldrh	r3, [r2, r1]
100677fa:	0419      	lsls	r1, r3, #16
100677fc:	d009      	beq.n	10067812 <GAT_att_db_find_last_attr_of_type+0x22>
100677fe:	6e51      	ldr	r1, [r2, #100]	@ 0x64
10067800:	b29c      	uxth	r4, r3
10067802:	00e4      	lsls	r4, r4, #3
10067804:	1861      	adds	r1, r4, r1
10067806:	3908      	subs	r1, #8
10067808:	780c      	ldrb	r4, [r1, #0]
1006780a:	1e5b      	subs	r3, r3, #1
1006780c:	4284      	cmp	r4, r0
1006780e:	d1f4      	bne.n	100677fa <GAT_att_db_find_last_attr_of_type+0xa>
10067810:	e000      	b.n	10067814 <GAT_att_db_find_last_attr_of_type+0x24>
10067812:	2100      	movs	r1, #0
10067814:	4608      	mov	r0, r1
10067816:	bd10      	pop	{r4, pc}

10067818 <__arm_cp.17_0>:
10067818:	20000848 	.word	0x20000848

1006781c <GAT_att_db_reverse_find_attr_of_type>:
1006781c:	b510      	push	{r4, lr}
1006781e:	4604      	mov	r4, r0
10067820:	4608      	mov	r0, r1
10067822:	f7ff feff 	bl	10067624 <GAT_att_db_find_attr_idx_from_handle>
10067826:	4908      	ldr	r1, [pc, #32]	@ (10067848 <__arm_cp.18_0>)
10067828:	6809      	ldr	r1, [r1, #0]
1006782a:	6e49      	ldr	r1, [r1, #100]	@ 0x64
1006782c:	b282      	uxth	r2, r0
1006782e:	00d2      	lsls	r2, r2, #3
10067830:	5c8b      	ldrb	r3, [r1, r2]
10067832:	42a3      	cmp	r3, r4
10067834:	d005      	beq.n	10067842 <GAT_att_db_reverse_find_attr_of_type+0x26>
10067836:	1e42      	subs	r2, r0, #1
10067838:	0400      	lsls	r0, r0, #16
1006783a:	4610      	mov	r0, r2
1006783c:	d1f6      	bne.n	1006782c <GAT_att_db_reverse_find_attr_of_type+0x10>
1006783e:	2000      	movs	r0, #0
10067840:	bd10      	pop	{r4, pc}
10067842:	1888      	adds	r0, r1, r2
10067844:	bd10      	pop	{r4, pc}
10067846:	46c0      	nop			@ (mov r8, r8)

10067848 <__arm_cp.18_0>:
10067848:	20000848 	.word	0x20000848

1006784c <GAT_clt_init>:
1006784c:	b570      	push	{r4, r5, r6, lr}
1006784e:	4c11      	ldr	r4, [pc, #68]	@ (10067894 <__arm_cp.0_0>)
10067850:	7aa0      	ldrb	r0, [r4, #10]
10067852:	2124      	movs	r1, #36	@ 0x24
10067854:	f7fb faee 	bl	10062e34 <csmem_mem_0_assign>
10067858:	490f      	ldr	r1, [pc, #60]	@ (10067898 <__arm_cp.0_1>)
1006785a:	680b      	ldr	r3, [r1, #0]
1006785c:	2200      	movs	r2, #0
1006785e:	461d      	mov	r5, r3
10067860:	3550      	adds	r5, #80	@ 0x50
10067862:	461e      	mov	r6, r3
10067864:	3648      	adds	r6, #72	@ 0x48
10067866:	649a      	str	r2, [r3, #72]	@ 0x48
10067868:	64de      	str	r6, [r3, #76]	@ 0x4c
1006786a:	651a      	str	r2, [r3, #80]	@ 0x50
1006786c:	655d      	str	r5, [r3, #84]	@ 0x54
1006786e:	7aa4      	ldrb	r4, [r4, #10]
10067870:	2c00      	cmp	r4, #0
10067872:	d00c      	beq.n	1006788e <GAT_clt_init+0x42>
10067874:	6202      	str	r2, [r0, #32]
10067876:	680b      	ldr	r3, [r1, #0]
10067878:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
1006787a:	6018      	str	r0, [r3, #0]
1006787c:	2301      	movs	r3, #1
1006787e:	7003      	strb	r3, [r0, #0]
10067880:	4605      	mov	r5, r0
10067882:	3520      	adds	r5, #32
10067884:	680b      	ldr	r3, [r1, #0]
10067886:	655d      	str	r5, [r3, #84]	@ 0x54
10067888:	3024      	adds	r0, #36	@ 0x24
1006788a:	1e64      	subs	r4, r4, #1
1006788c:	e7f0      	b.n	10067870 <GAT_clt_init+0x24>
1006788e:	659a      	str	r2, [r3, #88]	@ 0x58
10067890:	bd70      	pop	{r4, r5, r6, pc}
10067892:	46c0      	nop			@ (mov r8, r8)

10067894 <__arm_cp.0_0>:
10067894:	200008a8 	.word	0x200008a8

10067898 <__arm_cp.0_1>:
10067898:	20000848 	.word	0x20000848

1006789c <GAT_clt_connection>:
1006789c:	4770      	bx	lr
	...

100678a0 <GAT_clt_bearer_close>:
100678a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100678a2:	460d      	mov	r5, r1
100678a4:	4604      	mov	r4, r0
100678a6:	4e19      	ldr	r6, [pc, #100]	@ (1006790c <__arm_cp.2_0>)
100678a8:	6837      	ldr	r7, [r6, #0]
100678aa:	3748      	adds	r7, #72	@ 0x48
100678ac:	683f      	ldr	r7, [r7, #0]
100678ae:	2f00      	cmp	r7, #0
100678b0:	d010      	beq.n	100678d4 <GAT_clt_bearer_close+0x34>
100678b2:	8878      	ldrh	r0, [r7, #2]
100678b4:	42a0      	cmp	r0, r4
100678b6:	d10b      	bne.n	100678d0 <GAT_clt_bearer_close+0x30>
100678b8:	88b8      	ldrh	r0, [r7, #4]
100678ba:	42a8      	cmp	r0, r5
100678bc:	d108      	bne.n	100678d0 <GAT_clt_bearer_close+0x30>
100678be:	7838      	ldrb	r0, [r7, #0]
100678c0:	2118      	movs	r1, #24
100678c2:	4301      	orrs	r1, r0
100678c4:	7039      	strb	r1, [r7, #0]
100678c6:	200c      	movs	r0, #12
100678c8:	f7fd fcb2 	bl	10065230 <tsk_notify_idx>
100678cc:	f7db f803 	bl	100428d6 <BLE_STACK_ProcessRequest>
100678d0:	3720      	adds	r7, #32
100678d2:	e7eb      	b.n	100678ac <GAT_clt_bearer_close+0xc>
100678d4:	2d04      	cmp	r5, #4
100678d6:	d117      	bne.n	10067908 <GAT_clt_bearer_close+0x68>
100678d8:	6830      	ldr	r0, [r6, #0]
100678da:	6d81      	ldr	r1, [r0, #88]	@ 0x58
100678dc:	460b      	mov	r3, r1
100678de:	2b00      	cmp	r3, #0
100678e0:	d00b      	beq.n	100678fa <GAT_clt_bearer_close+0x5a>
100678e2:	461a      	mov	r2, r3
100678e4:	689d      	ldr	r5, [r3, #8]
100678e6:	2300      	movs	r3, #0
100678e8:	2d00      	cmp	r5, #0
100678ea:	d0f8      	beq.n	100678de <GAT_clt_bearer_close+0x3e>
100678ec:	88ab      	ldrh	r3, [r5, #4]
100678ee:	42a3      	cmp	r3, r4
100678f0:	462b      	mov	r3, r5
100678f2:	d1f4      	bne.n	100678de <GAT_clt_bearer_close+0x3e>
100678f4:	68ab      	ldr	r3, [r5, #8]
100678f6:	6093      	str	r3, [r2, #8]
100678f8:	e7f1      	b.n	100678de <GAT_clt_bearer_close+0x3e>
100678fa:	2900      	cmp	r1, #0
100678fc:	d004      	beq.n	10067908 <GAT_clt_bearer_close+0x68>
100678fe:	888a      	ldrh	r2, [r1, #4]
10067900:	42a2      	cmp	r2, r4
10067902:	d101      	bne.n	10067908 <GAT_clt_bearer_close+0x68>
10067904:	6889      	ldr	r1, [r1, #8]
10067906:	6581      	str	r1, [r0, #88]	@ 0x58
10067908:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006790a:	46c0      	nop			@ (mov r8, r8)

1006790c <__arm_cp.2_0>:
1006790c:	20000848 	.word	0x20000848

10067910 <GAT_clt_proc_exec_tsk>:
10067910:	b580      	push	{r7, lr}
10067912:	4802      	ldr	r0, [pc, #8]	@ (1006791c <__arm_cp.3_0>)
10067914:	6800      	ldr	r0, [r0, #0]
10067916:	4780      	blx	r0
10067918:	bd80      	pop	{r7, pc}
1006791a:	46c0      	nop			@ (mov r8, r8)

1006791c <__arm_cp.3_0>:
1006791c:	20000bd8 	.word	0x20000bd8

10067920 <GAT_clt_rcv>:
10067920:	b5f0      	push	{r4, r5, r6, r7, lr}
10067922:	b095      	sub	sp, #84	@ 0x54
10067924:	4605      	mov	r5, r0
10067926:	8804      	ldrh	r4, [r0, #0]
10067928:	f7ed ffab 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
1006792c:	4601      	mov	r1, r0
1006792e:	4620      	mov	r0, r4
10067930:	f000 fa6e 	bl	10067e10 <GAT_clt_get_proc_per_channel>
10067934:	2686      	movs	r6, #134	@ 0x86
10067936:	2800      	cmp	r0, #0
10067938:	d100      	bne.n	1006793c <GAT_clt_rcv+0x1c>
1006793a:	e208      	b.n	10067d4e <GAT_clt_rcv+0x42e>
1006793c:	4604      	mov	r4, r0
1006793e:	882f      	ldrh	r7, [r5, #0]
10067940:	4628      	mov	r0, r5
10067942:	f7ed ff9e 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10067946:	4601      	mov	r1, r0
10067948:	4638      	mov	r0, r7
1006794a:	f7ea fef3 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
1006794e:	9008      	str	r0, [sp, #32]
10067950:	7820      	ldrb	r0, [r4, #0]
10067952:	21fb      	movs	r1, #251	@ 0xfb
10067954:	4001      	ands	r1, r0
10067956:	7021      	strb	r1, [r4, #0]
10067958:	270c      	movs	r7, #12
1006795a:	4638      	mov	r0, r7
1006795c:	f7fd fc68 	bl	10065230 <tsk_notify_idx>
10067960:	f7da ffb9 	bl	100428d6 <BLE_STACK_ProcessRequest>
10067964:	4628      	mov	r0, r5
10067966:	f000 fa65 	bl	10067e34 <GAT_att_cmn_get_opcode>
1006796a:	2801      	cmp	r0, #1
1006796c:	d107      	bne.n	1006797e <GAT_clt_rcv+0x5e>
1006796e:	8860      	ldrh	r0, [r4, #2]
10067970:	f7e9 fef2 	bl	10051758 <GAP_started_gatt_proc>
10067974:	2800      	cmp	r0, #0
10067976:	d060      	beq.n	10067a3a <GAT_clt_rcv+0x11a>
10067978:	4620      	mov	r0, r4
1006797a:	f000 fa60 	bl	10067e3e <GAT_clt_stop_proc>
1006797e:	7820      	ldrb	r0, [r4, #0]
10067980:	2200      	movs	r2, #0
10067982:	0701      	lsls	r1, r0, #28
10067984:	d457      	bmi.n	10067a36 <GAT_clt_rcv+0x116>
10067986:	79a3      	ldrb	r3, [r4, #6]
10067988:	1e59      	subs	r1, r3, #1
1006798a:	2911      	cmp	r1, #17
1006798c:	d900      	bls.n	10067990 <GAT_clt_rcv+0x70>
1006798e:	e1de      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067990:	9207      	str	r2, [sp, #28]
10067992:	0049      	lsls	r1, r1, #1
10067994:	4479      	add	r1, pc
10067996:	8889      	ldrh	r1, [r1, #4]
10067998:	0049      	lsls	r1, r1, #1
1006799a:	448f      	add	pc, r1
1006799c:	010200c5 	.word	0x010200c5
100679a0:	0099010f 	.word	0x0099010f
100679a4:	011f0099 	.word	0x011f0099
100679a8:	01750164 	.word	0x01750164
100679ac:	01b9017c 	.word	0x01b9017c
100679b0:	00a600a6 	.word	0x00a600a6
100679b4:	001100b8 	.word	0x001100b8
100679b8:	001100b0 	.word	0x001100b0
100679bc:	00b00011 	.word	0x00b00011
100679c0:	06c0      	lsls	r0, r0, #27
100679c2:	d500      	bpl.n	100679c6 <GAT_clt_rcv+0xa6>
100679c4:	e0a7      	b.n	10067b16 <GAT_clt_rcv+0x1f6>
100679c6:	88a2      	ldrh	r2, [r4, #4]
100679c8:	8861      	ldrh	r1, [r4, #2]
100679ca:	200a      	movs	r0, #10
100679cc:	462b      	mov	r3, r5
100679ce:	f7fe fea3 	bl	10066718 <aci_att_clt_prepare_write_resp_event_push_noinline>
100679d2:	2800      	cmp	r0, #0
100679d4:	d000      	beq.n	100679d8 <GAT_clt_rcv+0xb8>
100679d6:	e1b4      	b.n	10067d42 <GAT_clt_rcv+0x422>
100679d8:	79a0      	ldrb	r0, [r4, #6]
100679da:	2811      	cmp	r0, #17
100679dc:	d100      	bne.n	100679e0 <GAT_clt_rcv+0xc0>
100679de:	e1b2      	b.n	10067d46 <GAT_clt_rcv+0x426>
100679e0:	7a63      	ldrb	r3, [r4, #9]
100679e2:	6921      	ldr	r1, [r4, #16]
100679e4:	9108      	str	r1, [sp, #32]
100679e6:	2810      	cmp	r0, #16
100679e8:	d000      	beq.n	100679ec <GAT_clt_rcv+0xcc>
100679ea:	e1d0      	b.n	10067d8e <GAT_clt_rcv+0x46e>
100679ec:	9306      	str	r3, [sp, #24]
100679ee:	89a8      	ldrh	r0, [r5, #12]
100679f0:	1c40      	adds	r0, r0, #1
100679f2:	b281      	uxth	r1, r0
100679f4:	4628      	mov	r0, r5
100679f6:	f7e8 faf6 	bl	1004ffe6 <ACL_pkt_read_16b>
100679fa:	9005      	str	r0, [sp, #20]
100679fc:	89a8      	ldrh	r0, [r5, #12]
100679fe:	1cc0      	adds	r0, r0, #3
10067a00:	b281      	uxth	r1, r0
10067a02:	4628      	mov	r0, r5
10067a04:	f7e8 faef 	bl	1004ffe6 <ACL_pkt_read_16b>
10067a08:	2600      	movs	r6, #0
10067a0a:	89a2      	ldrh	r2, [r4, #12]
10067a0c:	8869      	ldrh	r1, [r5, #2]
10067a0e:	1f49      	subs	r1, r1, #5
10067a10:	4291      	cmp	r1, r2
10067a12:	9004      	str	r0, [sp, #16]
10067a14:	d000      	beq.n	10067a18 <GAT_clt_rcv+0xf8>
10067a16:	e1cf      	b.n	10067db8 <GAT_clt_rcv+0x498>
10067a18:	4638      	mov	r0, r7
10067a1a:	9906      	ldr	r1, [sp, #24]
10067a1c:	4348      	muls	r0, r1
10067a1e:	9a08      	ldr	r2, [sp, #32]
10067a20:	1810      	adds	r0, r2, r0
10067a22:	6880      	ldr	r0, [r0, #8]
10067a24:	8961      	ldrh	r1, [r4, #10]
10067a26:	1841      	adds	r1, r0, r1
10067a28:	4628      	mov	r0, r5
10067a2a:	4615      	mov	r5, r2
10067a2c:	f7ff fd20 	bl	10067470 <GAT_att_clt_prep_wr_cmp_data>
10067a30:	9b06      	ldr	r3, [sp, #24]
10067a32:	9003      	str	r0, [sp, #12]
10067a34:	e1c4      	b.n	10067dc0 <GAT_clt_rcv+0x4a0>
10067a36:	4616      	mov	r6, r2
10067a38:	e189      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067a3a:	a909      	add	r1, sp, #36	@ 0x24
10067a3c:	aa0f      	add	r2, sp, #60	@ 0x3c
10067a3e:	ab0e      	add	r3, sp, #56	@ 0x38
10067a40:	4628      	mov	r0, r5
10067a42:	f7ff fcb1 	bl	100673a8 <GAT_att_clt_parse_error_resp>
10067a46:	2800      	cmp	r0, #0
10067a48:	d02b      	beq.n	10067aa2 <GAT_clt_rcv+0x182>
10067a4a:	4628      	mov	r0, r5
10067a4c:	f7e8 faa6 	bl	1004ff9c <ACL_pkt_release>
10067a50:	a80e      	add	r0, sp, #56	@ 0x38
10067a52:	7800      	ldrb	r0, [r0, #0]
10067a54:	2812      	cmp	r0, #18
10067a56:	d108      	bne.n	10067a6a <GAT_clt_rcv+0x14a>
10067a58:	8860      	ldrh	r0, [r4, #2]
10067a5a:	2104      	movs	r1, #4
10067a5c:	f7ea fe6a 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10067a60:	8881      	ldrh	r1, [r0, #4]
10067a62:	2201      	movs	r2, #1
10067a64:	0252      	lsls	r2, r2, #9
10067a66:	430a      	orrs	r2, r1
10067a68:	8082      	strh	r2, [r0, #4]
10067a6a:	79a0      	ldrb	r0, [r4, #6]
10067a6c:	2801      	cmp	r0, #1
10067a6e:	d104      	bne.n	10067a7a <GAT_clt_rcv+0x15a>
10067a70:	9b08      	ldr	r3, [sp, #32]
10067a72:	8899      	ldrh	r1, [r3, #4]
10067a74:	2204      	movs	r2, #4
10067a76:	4391      	bics	r1, r2
10067a78:	8099      	strh	r1, [r3, #4]
10067a7a:	a90e      	add	r1, sp, #56	@ 0x38
10067a7c:	7809      	ldrb	r1, [r1, #0]
10067a7e:	290a      	cmp	r1, #10
10067a80:	d008      	beq.n	10067a94 <GAT_clt_rcv+0x174>
10067a82:	2907      	cmp	r1, #7
10067a84:	d102      	bne.n	10067a8c <GAT_clt_rcv+0x16c>
10067a86:	280a      	cmp	r0, #10
10067a88:	d100      	bne.n	10067a8c <GAT_clt_rcv+0x16c>
10067a8a:	e775      	b.n	10067978 <GAT_clt_rcv+0x58>
10067a8c:	7821      	ldrb	r1, [r4, #0]
10067a8e:	2210      	movs	r2, #16
10067a90:	430a      	orrs	r2, r1
10067a92:	7022      	strb	r2, [r4, #0]
10067a94:	280e      	cmp	r0, #14
10067a96:	d100      	bne.n	10067a9a <GAT_clt_rcv+0x17a>
10067a98:	e771      	b.n	1006797e <GAT_clt_rcv+0x5e>
10067a9a:	2810      	cmp	r0, #16
10067a9c:	d100      	bne.n	10067aa0 <GAT_clt_rcv+0x180>
10067a9e:	e76e      	b.n	1006797e <GAT_clt_rcv+0x5e>
10067aa0:	e76a      	b.n	10067978 <GAT_clt_rcv+0x58>
10067aa2:	a809      	add	r0, sp, #36	@ 0x24
10067aa4:	7800      	ldrb	r0, [r0, #0]
10067aa6:	9007      	str	r0, [sp, #28]
10067aa8:	88a3      	ldrh	r3, [r4, #4]
10067aaa:	8862      	ldrh	r2, [r4, #2]
10067aac:	a80f      	add	r0, sp, #60	@ 0x3c
10067aae:	8800      	ldrh	r0, [r0, #0]
10067ab0:	4621      	mov	r1, r4
10067ab2:	ac0e      	add	r4, sp, #56	@ 0x38
10067ab4:	7824      	ldrb	r4, [r4, #0]
10067ab6:	9000      	str	r0, [sp, #0]
10067ab8:	9401      	str	r4, [sp, #4]
10067aba:	460c      	mov	r4, r1
10067abc:	2002      	movs	r0, #2
10067abe:	4611      	mov	r1, r2
10067ac0:	461a      	mov	r2, r3
10067ac2:	9b07      	ldr	r3, [sp, #28]
10067ac4:	f7fe faf4 	bl	100660b0 <aci_gatt_clt_error_resp_event_push_noinline>
10067ac8:	2800      	cmp	r0, #0
10067aca:	d0be      	beq.n	10067a4a <GAT_clt_rcv+0x12a>
10067acc:	4606      	mov	r6, r0
10067ace:	e13e      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067ad0:	88a2      	ldrh	r2, [r4, #4]
10067ad2:	8861      	ldrh	r1, [r4, #2]
10067ad4:	200a      	movs	r0, #10
10067ad6:	462b      	mov	r3, r5
10067ad8:	f7fe fd24 	bl	10066524 <aci_att_clt_read_by_type_resp_event_push_noinline>
10067adc:	2800      	cmp	r0, #0
10067ade:	d000      	beq.n	10067ae2 <GAT_clt_rcv+0x1c2>
10067ae0:	e12f      	b.n	10067d42 <GAT_clt_rcv+0x422>
10067ae2:	4628      	mov	r0, r5
10067ae4:	f7ff fc7a 	bl	100673dc <GAT_att_clt_read_type_get_last_attr_h>
10067ae8:	e0c8      	b.n	10067c7c <GAT_clt_rcv+0x35c>
10067aea:	88a2      	ldrh	r2, [r4, #4]
10067aec:	8861      	ldrh	r1, [r4, #2]
10067aee:	200a      	movs	r0, #10
10067af0:	2b0b      	cmp	r3, #11
10067af2:	d000      	beq.n	10067af6 <GAT_clt_rcv+0x1d6>
10067af4:	e120      	b.n	10067d38 <GAT_clt_rcv+0x418>
10067af6:	462b      	mov	r3, r5
10067af8:	f7fe fdaa 	bl	10066650 <aci_att_clt_read_multiple_resp_event_push_noinline>
10067afc:	e11f      	b.n	10067d3e <GAT_clt_rcv+0x41e>
10067afe:	88a2      	ldrh	r2, [r4, #4]
10067b00:	8861      	ldrh	r1, [r4, #2]
10067b02:	2002      	movs	r0, #2
10067b04:	f7fe fe3a 	bl	1006677c <aci_att_clt_exec_write_resp_event_push_noinline>
10067b08:	2800      	cmp	r0, #0
10067b0a:	d000      	beq.n	10067b0e <GAT_clt_rcv+0x1ee>
10067b0c:	e119      	b.n	10067d42 <GAT_clt_rcv+0x422>
10067b0e:	4628      	mov	r0, r5
10067b10:	f7e8 fa44 	bl	1004ff9c <ACL_pkt_release>
10067b14:	e117      	b.n	10067d46 <GAT_clt_rcv+0x426>
10067b16:	8960      	ldrh	r0, [r4, #10]
10067b18:	2800      	cmp	r0, #0
10067b1a:	d100      	bne.n	10067b1e <GAT_clt_rcv+0x1fe>
10067b1c:	e113      	b.n	10067d46 <GAT_clt_rcv+0x426>
10067b1e:	2600      	movs	r6, #0
10067b20:	7226      	strb	r6, [r4, #8]
10067b22:	200f      	movs	r0, #15
10067b24:	71a0      	strb	r0, [r4, #6]
10067b26:	e112      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067b28:	89a8      	ldrh	r0, [r5, #12]
10067b2a:	1c40      	adds	r0, r0, #1
10067b2c:	b281      	uxth	r1, r0
10067b2e:	4628      	mov	r0, r5
10067b30:	f7e8 fa59 	bl	1004ffe6 <ACL_pkt_read_16b>
10067b34:	4606      	mov	r6, r0
10067b36:	2817      	cmp	r0, #23
10067b38:	d800      	bhi.n	10067b3c <GAT_clt_rcv+0x21c>
10067b3a:	2617      	movs	r6, #23
10067b3c:	48b3      	ldr	r0, [pc, #716]	@ (10067e0c <__arm_cp.4_3>)
10067b3e:	8a00      	ldrh	r0, [r0, #16]
10067b40:	4286      	cmp	r6, r0
10067b42:	9f08      	ldr	r7, [sp, #32]
10067b44:	d300      	bcc.n	10067b48 <GAT_clt_rcv+0x228>
10067b46:	4606      	mov	r6, r0
10067b48:	88b8      	ldrh	r0, [r7, #4]
10067b4a:	0700      	lsls	r0, r0, #28
10067b4c:	d514      	bpl.n	10067b78 <GAT_clt_rcv+0x258>
10067b4e:	88f8      	ldrh	r0, [r7, #6]
10067b50:	42b0      	cmp	r0, r6
10067b52:	d011      	beq.n	10067b78 <GAT_clt_rcv+0x258>
10067b54:	463b      	mov	r3, r7
10067b56:	3308      	adds	r3, #8
10067b58:	2042      	movs	r0, #66	@ 0x42
10067b5a:	2103      	movs	r1, #3
10067b5c:	2202      	movs	r2, #2
10067b5e:	f7ff f85b 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
10067b62:	2800      	cmp	r0, #0
10067b64:	d000      	beq.n	10067b68 <GAT_clt_rcv+0x248>
10067b66:	e0ec      	b.n	10067d42 <GAT_clt_rcv+0x422>
10067b68:	7820      	ldrb	r0, [r4, #0]
10067b6a:	2110      	movs	r1, #16
10067b6c:	4301      	orrs	r1, r0
10067b6e:	7021      	strb	r1, [r4, #0]
10067b70:	88b8      	ldrh	r0, [r7, #4]
10067b72:	2108      	movs	r1, #8
10067b74:	4388      	bics	r0, r1
10067b76:	80b8      	strh	r0, [r7, #4]
10067b78:	7820      	ldrb	r0, [r4, #0]
10067b7a:	06c0      	lsls	r0, r0, #27
10067b7c:	d500      	bpl.n	10067b80 <GAT_clt_rcv+0x260>
10067b7e:	88fe      	ldrh	r6, [r7, #6]
10067b80:	8861      	ldrh	r1, [r4, #2]
10067b82:	2002      	movs	r0, #2
10067b84:	4632      	mov	r2, r6
10067b86:	f7fe fc2d 	bl	100663e4 <aci_att_exchange_mtu_resp_event_push_noinline>
10067b8a:	2800      	cmp	r0, #0
10067b8c:	d000      	beq.n	10067b90 <GAT_clt_rcv+0x270>
10067b8e:	e0d8      	b.n	10067d42 <GAT_clt_rcv+0x422>
10067b90:	80fe      	strh	r6, [r7, #6]
10067b92:	88b8      	ldrh	r0, [r7, #4]
10067b94:	2108      	movs	r1, #8
10067b96:	4301      	orrs	r1, r0
10067b98:	2004      	movs	r0, #4
10067b9a:	4381      	bics	r1, r0
10067b9c:	80b9      	strh	r1, [r7, #4]
10067b9e:	4620      	mov	r0, r4
10067ba0:	e0dc      	b.n	10067d5c <GAT_clt_rcv+0x43c>
10067ba2:	88a2      	ldrh	r2, [r4, #4]
10067ba4:	8861      	ldrh	r1, [r4, #2]
10067ba6:	200a      	movs	r0, #10
10067ba8:	462b      	mov	r3, r5
10067baa:	f7fe fd83 	bl	100666b4 <aci_att_clt_read_by_group_type_resp_event_push_noinline>
10067bae:	2800      	cmp	r0, #0
10067bb0:	d000      	beq.n	10067bb4 <GAT_clt_rcv+0x294>
10067bb2:	e0c6      	b.n	10067d42 <GAT_clt_rcv+0x422>
10067bb4:	4628      	mov	r0, r5
10067bb6:	f7ff fbc4 	bl	10067342 <GAT_att_clt_read_grp_type_get_last_attr_h>
10067bba:	e00b      	b.n	10067bd4 <GAT_clt_rcv+0x2b4>
10067bbc:	88a2      	ldrh	r2, [r4, #4]
10067bbe:	8861      	ldrh	r1, [r4, #2]
10067bc0:	200a      	movs	r0, #10
10067bc2:	462b      	mov	r3, r5
10067bc4:	f7fe fc7c 	bl	100664c0 <aci_att_clt_find_by_type_value_resp_event_push_noinline>
10067bc8:	2800      	cmp	r0, #0
10067bca:	d000      	beq.n	10067bce <GAT_clt_rcv+0x2ae>
10067bcc:	e0b9      	b.n	10067d42 <GAT_clt_rcv+0x422>
10067bce:	4628      	mov	r0, r5
10067bd0:	f7ff fbdd 	bl	1006738e <GAT_att_clt_find_type_val_get_last_attr_h>
10067bd4:	498c      	ldr	r1, [pc, #560]	@ (10067e08 <__arm_cp.4_2>)
10067bd6:	4288      	cmp	r0, r1
10067bd8:	d153      	bne.n	10067c82 <GAT_clt_rcv+0x362>
10067bda:	e0b4      	b.n	10067d46 <GAT_clt_rcv+0x426>
10067bdc:	4628      	mov	r0, r5
10067bde:	f000 fb90 	bl	10068302 <GAT_att_clt_read_type_get_len>
10067be2:	9008      	str	r0, [sp, #32]
10067be4:	8960      	ldrh	r0, [r4, #10]
10067be6:	a90e      	add	r1, sp, #56	@ 0x38
10067be8:	8008      	strh	r0, [r1, #0]
10067bea:	4620      	mov	r0, r4
10067bec:	300c      	adds	r0, #12
10067bee:	9007      	str	r0, [sp, #28]
10067bf0:	a809      	add	r0, sp, #36	@ 0x24
10067bf2:	300c      	adds	r0, #12
10067bf4:	9005      	str	r0, [sp, #20]
10067bf6:	a80f      	add	r0, sp, #60	@ 0x3c
10067bf8:	1d40      	adds	r0, r0, #5
10067bfa:	9006      	str	r0, [sp, #24]
10067bfc:	2600      	movs	r6, #0
10067bfe:	b2f7      	uxtb	r7, r6
10067c00:	aa0f      	add	r2, sp, #60	@ 0x3c
10067c02:	4628      	mov	r0, r5
10067c04:	4639      	mov	r1, r7
10067c06:	f7ff fbfe 	bl	10067406 <GAT_att_clt_read_type_get_data>
10067c0a:	2800      	cmp	r0, #0
10067c0c:	d000      	beq.n	10067c10 <GAT_clt_rcv+0x2f0>
10067c0e:	e0a1      	b.n	10067d54 <GAT_clt_rcv+0x434>
10067c10:	9808      	ldr	r0, [sp, #32]
10067c12:	2807      	cmp	r0, #7
10067c14:	d105      	bne.n	10067c22 <GAT_clt_rcv+0x302>
10067c16:	a809      	add	r0, sp, #36	@ 0x24
10067c18:	2110      	movs	r1, #16
10067c1a:	7401      	strb	r1, [r0, #16]
10067c1c:	2202      	movs	r2, #2
10067c1e:	9805      	ldr	r0, [sp, #20]
10067c20:	e003      	b.n	10067c2a <GAT_clt_rcv+0x30a>
10067c22:	a809      	add	r0, sp, #36	@ 0x24
10067c24:	2180      	movs	r1, #128	@ 0x80
10067c26:	7401      	strb	r1, [r0, #16]
10067c28:	2210      	movs	r2, #16
10067c2a:	9906      	ldr	r1, [sp, #24]
10067c2c:	f7dc feba 	bl	100449a4 <BLEPLAT_MemCpy>
10067c30:	a80e      	add	r0, sp, #56	@ 0x38
10067c32:	a90f      	add	r1, sp, #60	@ 0x3c
10067c34:	2202      	movs	r2, #2
10067c36:	f7dc feb5 	bl	100449a4 <BLEPLAT_MemCpy>
10067c3a:	a809      	add	r0, sp, #36	@ 0x24
10067c3c:	9907      	ldr	r1, [sp, #28]
10067c3e:	f7fd fc9f 	bl	10065580 <UUID_cmp_128bits>
10067c42:	2800      	cmp	r0, #0
10067c44:	d10d      	bne.n	10067c62 <GAT_clt_rcv+0x342>
10067c46:	88a2      	ldrh	r2, [r4, #4]
10067c48:	8861      	ldrh	r1, [r4, #2]
10067c4a:	9808      	ldr	r0, [sp, #32]
10067c4c:	9000      	str	r0, [sp, #0]
10067c4e:	9501      	str	r5, [sp, #4]
10067c50:	4347      	muls	r7, r0
10067c52:	1cb8      	adds	r0, r7, #2
10067c54:	b283      	uxth	r3, r0
10067c56:	2002      	movs	r0, #2
10067c58:	f7fe fa70 	bl	1006613c <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline>
10067c5c:	2800      	cmp	r0, #0
10067c5e:	d000      	beq.n	10067c62 <GAT_clt_rcv+0x342>
10067c60:	e082      	b.n	10067d68 <GAT_clt_rcv+0x448>
10067c62:	1c76      	adds	r6, r6, #1
10067c64:	e7cb      	b.n	10067bfe <GAT_clt_rcv+0x2de>
10067c66:	88a2      	ldrh	r2, [r4, #4]
10067c68:	8861      	ldrh	r1, [r4, #2]
10067c6a:	200a      	movs	r0, #10
10067c6c:	462b      	mov	r3, r5
10067c6e:	f7fe fbf5 	bl	1006645c <aci_att_clt_find_info_resp_event_push_noinline>
10067c72:	2800      	cmp	r0, #0
10067c74:	d165      	bne.n	10067d42 <GAT_clt_rcv+0x422>
10067c76:	4628      	mov	r0, r5
10067c78:	f7ff fbe0 	bl	1006743c <GAT_att_clt_find_info_get_last_attr_h>
10067c7c:	8961      	ldrh	r1, [r4, #10]
10067c7e:	4288      	cmp	r0, r1
10067c80:	d261      	bcs.n	10067d46 <GAT_clt_rcv+0x426>
10067c82:	1c40      	adds	r0, r0, #1
10067c84:	8120      	strh	r0, [r4, #8]
10067c86:	e061      	b.n	10067d4c <GAT_clt_rcv+0x42c>
10067c88:	88a2      	ldrh	r2, [r4, #4]
10067c8a:	8861      	ldrh	r1, [r4, #2]
10067c8c:	200a      	movs	r0, #10
10067c8e:	462b      	mov	r3, r5
10067c90:	f7fe fc7a 	bl	10066588 <aci_att_clt_read_resp_event_push_noinline>
10067c94:	e053      	b.n	10067d3e <GAT_clt_rcv+0x41e>
10067c96:	4628      	mov	r0, r5
10067c98:	f000 fb33 	bl	10068302 <GAT_att_clt_read_type_get_len>
10067c9c:	4606      	mov	r6, r0
10067c9e:	9406      	str	r4, [sp, #24]
10067ca0:	8860      	ldrh	r0, [r4, #2]
10067ca2:	f7e9 fd59 	bl	10051758 <GAP_started_gatt_proc>
10067ca6:	9008      	str	r0, [sp, #32]
10067ca8:	2402      	movs	r4, #2
10067caa:	8868      	ldrh	r0, [r5, #2]
10067cac:	b2a3      	uxth	r3, r4
10067cae:	4283      	cmp	r3, r0
10067cb0:	d253      	bcs.n	10067d5a <GAT_clt_rcv+0x43a>
10067cb2:	9808      	ldr	r0, [sp, #32]
10067cb4:	2801      	cmp	r0, #1
10067cb6:	d10e      	bne.n	10067cd6 <GAT_clt_rcv+0x3b6>
10067cb8:	89a8      	ldrh	r0, [r5, #12]
10067cba:	1900      	adds	r0, r0, r4
10067cbc:	b281      	uxth	r1, r0
10067cbe:	af0f      	add	r7, sp, #60	@ 0x3c
10067cc0:	4628      	mov	r0, r5
10067cc2:	4632      	mov	r2, r6
10067cc4:	463b      	mov	r3, r7
10067cc6:	f7e8 f985 	bl	1004ffd4 <ACL_pkt_read>
10067cca:	205c      	movs	r0, #92	@ 0x5c
10067ccc:	4631      	mov	r1, r6
10067cce:	463a      	mov	r2, r7
10067cd0:	f7e9 feea 	bl	10051aa8 <GAP_internal_evt_handler>
10067cd4:	e01a      	b.n	10067d0c <GAT_clt_rcv+0x3ec>
10067cd6:	9f06      	ldr	r7, [sp, #24]
10067cd8:	88ba      	ldrh	r2, [r7, #4]
10067cda:	8879      	ldrh	r1, [r7, #2]
10067cdc:	9600      	str	r6, [sp, #0]
10067cde:	9501      	str	r5, [sp, #4]
10067ce0:	2002      	movs	r0, #2
10067ce2:	f7fe fa2b 	bl	1006613c <aci_gatt_clt_disc_read_char_by_uuid_resp_event_push_noinline>
10067ce6:	2800      	cmp	r0, #0
10067ce8:	d12b      	bne.n	10067d42 <GAT_clt_rcv+0x422>
10067cea:	7f38      	ldrb	r0, [r7, #28]
10067cec:	2810      	cmp	r0, #16
10067cee:	d10d      	bne.n	10067d0c <GAT_clt_rcv+0x3ec>
10067cf0:	9806      	ldr	r0, [sp, #24]
10067cf2:	8b00      	ldrh	r0, [r0, #24]
10067cf4:	4942      	ldr	r1, [pc, #264]	@ (10067e00 <__arm_cp.4_0>)
10067cf6:	4288      	cmp	r0, r1
10067cf8:	d108      	bne.n	10067d0c <GAT_clt_rcv+0x3ec>
10067cfa:	9806      	ldr	r0, [sp, #24]
10067cfc:	8840      	ldrh	r0, [r0, #2]
10067cfe:	2104      	movs	r1, #4
10067d00:	f7ea fd18 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10067d04:	8881      	ldrh	r1, [r0, #4]
10067d06:	4a3f      	ldr	r2, [pc, #252]	@ (10067e04 <__arm_cp.4_1>)
10067d08:	4011      	ands	r1, r2
10067d0a:	8081      	strh	r1, [r0, #4]
10067d0c:	19a4      	adds	r4, r4, r6
10067d0e:	e7cc      	b.n	10067caa <GAT_clt_rcv+0x38a>
10067d10:	88a2      	ldrh	r2, [r4, #4]
10067d12:	8861      	ldrh	r1, [r4, #2]
10067d14:	200a      	movs	r0, #10
10067d16:	462b      	mov	r3, r5
10067d18:	f7fe fc68 	bl	100665ec <aci_att_clt_read_blob_resp_event_push_noinline>
10067d1c:	2800      	cmp	r0, #0
10067d1e:	d110      	bne.n	10067d42 <GAT_clt_rcv+0x422>
10067d20:	9808      	ldr	r0, [sp, #32]
10067d22:	88c0      	ldrh	r0, [r0, #6]
10067d24:	1e41      	subs	r1, r0, #1
10067d26:	8868      	ldrh	r0, [r5, #2]
10067d28:	1e40      	subs	r0, r0, #1
10067d2a:	b282      	uxth	r2, r0
10067d2c:	4291      	cmp	r1, r2
10067d2e:	d80a      	bhi.n	10067d46 <GAT_clt_rcv+0x426>
10067d30:	8961      	ldrh	r1, [r4, #10]
10067d32:	1808      	adds	r0, r1, r0
10067d34:	8160      	strh	r0, [r4, #10]
10067d36:	e009      	b.n	10067d4c <GAT_clt_rcv+0x42c>
10067d38:	462b      	mov	r3, r5
10067d3a:	f7fe fdbd 	bl	100668b8 <aci_att_clt_read_multiple_var_len_resp_event_push_noinline>
10067d3e:	2800      	cmp	r0, #0
10067d40:	d001      	beq.n	10067d46 <GAT_clt_rcv+0x426>
10067d42:	2684      	movs	r6, #132	@ 0x84
10067d44:	e003      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067d46:	4620      	mov	r0, r4
10067d48:	f000 f879 	bl	10067e3e <GAT_clt_stop_proc>
10067d4c:	9e07      	ldr	r6, [sp, #28]
10067d4e:	4630      	mov	r0, r6
10067d50:	b015      	add	sp, #84	@ 0x54
10067d52:	bdf0      	pop	{r4, r5, r6, r7, pc}
10067d54:	a80e      	add	r0, sp, #56	@ 0x38
10067d56:	8800      	ldrh	r0, [r0, #0]
10067d58:	e00a      	b.n	10067d70 <GAT_clt_rcv+0x450>
10067d5a:	9806      	ldr	r0, [sp, #24]
10067d5c:	f000 f86f 	bl	10067e3e <GAT_clt_stop_proc>
10067d60:	4628      	mov	r0, r5
10067d62:	f7e8 f91b 	bl	1004ff9c <ACL_pkt_release>
10067d66:	e7f1      	b.n	10067d4c <GAT_clt_rcv+0x42c>
10067d68:	980e      	ldr	r0, [sp, #56]	@ 0x38
10067d6a:	1e40      	subs	r0, r0, #1
10067d6c:	a90e      	add	r1, sp, #56	@ 0x38
10067d6e:	8008      	strh	r0, [r1, #0]
10067d70:	8961      	ldrh	r1, [r4, #10]
10067d72:	b282      	uxth	r2, r0
10067d74:	428a      	cmp	r2, r1
10067d76:	d202      	bcs.n	10067d7e <GAT_clt_rcv+0x45e>
10067d78:	1c40      	adds	r0, r0, #1
10067d7a:	8120      	strh	r0, [r4, #8]
10067d7c:	e002      	b.n	10067d84 <GAT_clt_rcv+0x464>
10067d7e:	4620      	mov	r0, r4
10067d80:	f000 f85d 	bl	10067e3e <GAT_clt_stop_proc>
10067d84:	4628      	mov	r0, r5
10067d86:	f7e8 f909 	bl	1004ff9c <ACL_pkt_release>
10067d8a:	2600      	movs	r6, #0
10067d8c:	e7df      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067d8e:	8961      	ldrh	r1, [r4, #10]
10067d90:	9a08      	ldr	r2, [sp, #32]
10067d92:	89a0      	ldrh	r0, [r4, #12]
10067d94:	1840      	adds	r0, r0, r1
10067d96:	8160      	strh	r0, [r4, #10]
10067d98:	b280      	uxth	r0, r0
10067d9a:	435f      	muls	r7, r3
10067d9c:	19d1      	adds	r1, r2, r7
10067d9e:	8889      	ldrh	r1, [r1, #4]
10067da0:	4288      	cmp	r0, r1
10067da2:	d1d3      	bne.n	10067d4c <GAT_clt_rcv+0x42c>
10067da4:	7a20      	ldrb	r0, [r4, #8]
10067da6:	1e40      	subs	r0, r0, #1
10067da8:	4298      	cmp	r0, r3
10067daa:	d924      	bls.n	10067df6 <GAT_clt_rcv+0x4d6>
10067dac:	2600      	movs	r6, #0
10067dae:	8166      	strh	r6, [r4, #10]
10067db0:	7a60      	ldrb	r0, [r4, #9]
10067db2:	1c40      	adds	r0, r0, #1
10067db4:	7260      	strb	r0, [r4, #9]
10067db6:	e7ca      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067db8:	43f0      	mvns	r0, r6
10067dba:	9003      	str	r0, [sp, #12]
10067dbc:	9b06      	ldr	r3, [sp, #24]
10067dbe:	9d08      	ldr	r5, [sp, #32]
10067dc0:	4639      	mov	r1, r7
10067dc2:	4359      	muls	r1, r3
10067dc4:	5a6a      	ldrh	r2, [r5, r1]
10067dc6:	4628      	mov	r0, r5
10067dc8:	9d05      	ldr	r5, [sp, #20]
10067dca:	4295      	cmp	r5, r2
10067dcc:	d10b      	bne.n	10067de6 <GAT_clt_rcv+0x4c6>
10067dce:	4602      	mov	r2, r0
10067dd0:	1841      	adds	r1, r0, r1
10067dd2:	884a      	ldrh	r2, [r1, #2]
10067dd4:	8961      	ldrh	r1, [r4, #10]
10067dd6:	188a      	adds	r2, r1, r2
10067dd8:	9d04      	ldr	r5, [sp, #16]
10067dda:	42aa      	cmp	r2, r5
10067ddc:	d103      	bne.n	10067de6 <GAT_clt_rcv+0x4c6>
10067dde:	4602      	mov	r2, r0
10067de0:	9803      	ldr	r0, [sp, #12]
10067de2:	2800      	cmp	r0, #0
10067de4:	d0d5      	beq.n	10067d92 <GAT_clt_rcv+0x472>
10067de6:	7226      	strb	r6, [r4, #8]
10067de8:	200f      	movs	r0, #15
10067dea:	71a0      	strb	r0, [r4, #6]
10067dec:	7820      	ldrb	r0, [r4, #0]
10067dee:	2110      	movs	r1, #16
10067df0:	4301      	orrs	r1, r0
10067df2:	7021      	strb	r1, [r4, #0]
10067df4:	e7ab      	b.n	10067d4e <GAT_clt_rcv+0x42e>
10067df6:	2001      	movs	r0, #1
10067df8:	7220      	strb	r0, [r4, #8]
10067dfa:	200f      	movs	r0, #15
10067dfc:	71a0      	strb	r0, [r4, #6]
10067dfe:	e7a5      	b.n	10067d4c <GAT_clt_rcv+0x42c>

10067e00 <__arm_cp.4_0>:
10067e00:	00002b2a 	.word	0x00002b2a

10067e04 <__arm_cp.4_1>:
10067e04:	0000fdff 	.word	0x0000fdff

10067e08 <__arm_cp.4_2>:
10067e08:	0000ffff 	.word	0x0000ffff

10067e0c <__arm_cp.4_3>:
10067e0c:	200008a8 	.word	0x200008a8

10067e10 <GAT_clt_get_proc_per_channel>:
10067e10:	4a07      	ldr	r2, [pc, #28]	@ (10067e30 <__arm_cp.5_0>)
10067e12:	6812      	ldr	r2, [r2, #0]
10067e14:	3248      	adds	r2, #72	@ 0x48
10067e16:	6812      	ldr	r2, [r2, #0]
10067e18:	2a00      	cmp	r2, #0
10067e1a:	d007      	beq.n	10067e2c <GAT_clt_get_proc_per_channel+0x1c>
10067e1c:	8853      	ldrh	r3, [r2, #2]
10067e1e:	4283      	cmp	r3, r0
10067e20:	d102      	bne.n	10067e28 <GAT_clt_get_proc_per_channel+0x18>
10067e22:	8893      	ldrh	r3, [r2, #4]
10067e24:	428b      	cmp	r3, r1
10067e26:	d001      	beq.n	10067e2c <GAT_clt_get_proc_per_channel+0x1c>
10067e28:	3220      	adds	r2, #32
10067e2a:	e7f4      	b.n	10067e16 <GAT_clt_get_proc_per_channel+0x6>
10067e2c:	4610      	mov	r0, r2
10067e2e:	4770      	bx	lr

10067e30 <__arm_cp.5_0>:
10067e30:	20000848 	.word	0x20000848

10067e34 <GAT_att_cmn_get_opcode>:
10067e34:	b580      	push	{r7, lr}
10067e36:	8981      	ldrh	r1, [r0, #12]
10067e38:	f000 fa53 	bl	100682e2 <ACL_pkt_read_8b>
10067e3c:	bd80      	pop	{r7, pc}

10067e3e <GAT_clt_stop_proc>:
10067e3e:	b580      	push	{r7, lr}
10067e40:	7801      	ldrb	r1, [r0, #0]
10067e42:	2208      	movs	r2, #8
10067e44:	430a      	orrs	r2, r1
10067e46:	7002      	strb	r2, [r0, #0]
10067e48:	200c      	movs	r0, #12
10067e4a:	f7fd f9f1 	bl	10065230 <tsk_notify_idx>
10067e4e:	f7da fd42 	bl	100428d6 <BLE_STACK_ProcessRequest>
10067e52:	bd80      	pop	{r7, pc}

10067e54 <GAT_clt_rcv_corrupted>:
10067e54:	b510      	push	{r4, lr}
10067e56:	8804      	ldrh	r4, [r0, #0]
10067e58:	f7ed fd13 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10067e5c:	4601      	mov	r1, r0
10067e5e:	4620      	mov	r0, r4
10067e60:	f7ff ffd6 	bl	10067e10 <GAT_clt_get_proc_per_channel>
10067e64:	2800      	cmp	r0, #0
10067e66:	d008      	beq.n	10067e7a <GAT_clt_rcv_corrupted+0x26>
10067e68:	7801      	ldrb	r1, [r0, #0]
10067e6a:	2218      	movs	r2, #24
10067e6c:	430a      	orrs	r2, r1
10067e6e:	7002      	strb	r2, [r0, #0]
10067e70:	200c      	movs	r0, #12
10067e72:	f7fd f9dd 	bl	10065230 <tsk_notify_idx>
10067e76:	f7da fd2e 	bl	100428d6 <BLE_STACK_ProcessRequest>
10067e7a:	2000      	movs	r0, #0
10067e7c:	bd10      	pop	{r4, pc}
	...

10067e80 <GAT_clt_start_proc>:
10067e80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10067e82:	4606      	mov	r6, r0
10067e84:	482e      	ldr	r0, [pc, #184]	@ (10067f40 <__arm_cp.9_0>)
10067e86:	492f      	ldr	r1, [pc, #188]	@ (10067f44 <__arm_cp.9_1>)
10067e88:	6001      	str	r1, [r0, #0]
10067e8a:	4f2f      	ldr	r7, [pc, #188]	@ (10067f48 <__arm_cp.9_2>)
10067e8c:	683d      	ldr	r5, [r7, #0]
10067e8e:	6d2c      	ldr	r4, [r5, #80]	@ 0x50
10067e90:	2c00      	cmp	r4, #0
10067e92:	d007      	beq.n	10067ea4 <GAT_clt_start_proc+0x24>
10067e94:	88b1      	ldrh	r1, [r6, #4]
10067e96:	8870      	ldrh	r0, [r6, #2]
10067e98:	f7ff ffba 	bl	10067e10 <GAT_clt_get_proc_per_channel>
10067e9c:	2800      	cmp	r0, #0
10067e9e:	d003      	beq.n	10067ea8 <GAT_clt_start_proc+0x28>
10067ea0:	250c      	movs	r5, #12
10067ea2:	e037      	b.n	10067f14 <GAT_clt_start_proc+0x94>
10067ea4:	2588      	movs	r5, #136	@ 0x88
10067ea6:	e035      	b.n	10067f14 <GAT_clt_start_proc+0x94>
10067ea8:	4628      	mov	r0, r5
10067eaa:	3050      	adds	r0, #80	@ 0x50
10067eac:	6a21      	ldr	r1, [r4, #32]
10067eae:	6001      	str	r1, [r0, #0]
10067eb0:	2900      	cmp	r1, #0
10067eb2:	d100      	bne.n	10067eb6 <GAT_clt_start_proc+0x36>
10067eb4:	6568      	str	r0, [r5, #84]	@ 0x54
10067eb6:	4620      	mov	r0, r4
10067eb8:	3020      	adds	r0, #32
10067eba:	9000      	str	r0, [sp, #0]
10067ebc:	2224      	movs	r2, #36	@ 0x24
10067ebe:	4620      	mov	r0, r4
10067ec0:	4631      	mov	r1, r6
10067ec2:	f7dc fd6f 	bl	100449a4 <BLEPLAT_MemCpy>
10067ec6:	2001      	movs	r0, #1
10067ec8:	7020      	strb	r0, [r4, #0]
10067eca:	4620      	mov	r0, r4
10067ecc:	f000 f888 	bl	10067fe0 <GAT_clt_exec_proc>
10067ed0:	4605      	mov	r5, r0
10067ed2:	280c      	cmp	r0, #12
10067ed4:	d016      	beq.n	10067f04 <GAT_clt_start_proc+0x84>
10067ed6:	2d12      	cmp	r5, #18
10067ed8:	d014      	beq.n	10067f04 <GAT_clt_start_proc+0x84>
10067eda:	2d81      	cmp	r5, #129	@ 0x81
10067edc:	d012      	beq.n	10067f04 <GAT_clt_start_proc+0x84>
10067ede:	2d86      	cmp	r5, #134	@ 0x86
10067ee0:	d010      	beq.n	10067f04 <GAT_clt_start_proc+0x84>
10067ee2:	79a0      	ldrb	r0, [r4, #6]
10067ee4:	2801      	cmp	r0, #1
10067ee6:	d107      	bne.n	10067ef8 <GAT_clt_start_proc+0x78>
10067ee8:	88b1      	ldrh	r1, [r6, #4]
10067eea:	8870      	ldrh	r0, [r6, #2]
10067eec:	f7ea fc22 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10067ef0:	8881      	ldrh	r1, [r0, #4]
10067ef2:	2204      	movs	r2, #4
10067ef4:	430a      	orrs	r2, r1
10067ef6:	8082      	strh	r2, [r0, #4]
10067ef8:	2d88      	cmp	r5, #136	@ 0x88
10067efa:	d10d      	bne.n	10067f18 <GAT_clt_start_proc+0x98>
10067efc:	79b0      	ldrb	r0, [r6, #6]
10067efe:	3811      	subs	r0, #17
10067f00:	2802      	cmp	r0, #2
10067f02:	d209      	bcs.n	10067f18 <GAT_clt_start_proc+0x98>
10067f04:	2000      	movs	r0, #0
10067f06:	6220      	str	r0, [r4, #32]
10067f08:	6838      	ldr	r0, [r7, #0]
10067f0a:	6d40      	ldr	r0, [r0, #84]	@ 0x54
10067f0c:	6004      	str	r4, [r0, #0]
10067f0e:	6838      	ldr	r0, [r7, #0]
10067f10:	9900      	ldr	r1, [sp, #0]
10067f12:	6541      	str	r1, [r0, #84]	@ 0x54
10067f14:	4628      	mov	r0, r5
10067f16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10067f18:	2500      	movs	r5, #0
10067f1a:	6225      	str	r5, [r4, #32]
10067f1c:	6838      	ldr	r0, [r7, #0]
10067f1e:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
10067f20:	6004      	str	r4, [r0, #0]
10067f22:	7820      	ldrb	r0, [r4, #0]
10067f24:	21fc      	movs	r1, #252	@ 0xfc
10067f26:	4001      	ands	r1, r0
10067f28:	1c88      	adds	r0, r1, #2
10067f2a:	7020      	strb	r0, [r4, #0]
10067f2c:	6838      	ldr	r0, [r7, #0]
10067f2e:	9900      	ldr	r1, [sp, #0]
10067f30:	64c1      	str	r1, [r0, #76]	@ 0x4c
10067f32:	200c      	movs	r0, #12
10067f34:	f7fd f97c 	bl	10065230 <tsk_notify_idx>
10067f38:	f7da fccd 	bl	100428d6 <BLE_STACK_ProcessRequest>
10067f3c:	e7ea      	b.n	10067f14 <GAT_clt_start_proc+0x94>
10067f3e:	46c0      	nop			@ (mov r8, r8)

10067f40 <__arm_cp.9_0>:
10067f40:	20000bd8 	.word	0x20000bd8

10067f44 <__arm_cp.9_1>:
10067f44:	10067f4d 	.word	0x10067f4d

10067f48 <__arm_cp.9_2>:
10067f48:	20000848 	.word	0x20000848

10067f4c <GAT_clt_exec_full>:
10067f4c:	b570      	push	{r4, r5, r6, lr}
10067f4e:	4d23      	ldr	r5, [pc, #140]	@ (10067fdc <__arm_cp.10_0>)
10067f50:	6828      	ldr	r0, [r5, #0]
10067f52:	6c86      	ldr	r6, [r0, #72]	@ 0x48
10067f54:	2e00      	cmp	r6, #0
10067f56:	d040      	beq.n	10067fda <GAT_clt_exec_full+0x8e>
10067f58:	4634      	mov	r4, r6
10067f5a:	6a36      	ldr	r6, [r6, #32]
10067f5c:	7820      	ldrb	r0, [r4, #0]
10067f5e:	0701      	lsls	r1, r0, #28
10067f60:	d40c      	bmi.n	10067f7c <GAT_clt_exec_full+0x30>
10067f62:	0740      	lsls	r0, r0, #29
10067f64:	d4f6      	bmi.n	10067f54 <GAT_clt_exec_full+0x8>
10067f66:	4620      	mov	r0, r4
10067f68:	f000 f83a 	bl	10067fe0 <GAT_clt_exec_proc>
10067f6c:	2888      	cmp	r0, #136	@ 0x88
10067f6e:	d1f1      	bne.n	10067f54 <GAT_clt_exec_full+0x8>
10067f70:	200c      	movs	r0, #12
10067f72:	f7fd f95d 	bl	10065230 <tsk_notify_idx>
10067f76:	f7da fcae 	bl	100428d6 <BLE_STACK_ProcessRequest>
10067f7a:	e7eb      	b.n	10067f54 <GAT_clt_exec_full+0x8>
10067f7c:	79a1      	ldrb	r1, [r4, #6]
10067f7e:	3911      	subs	r1, #17
10067f80:	2902      	cmp	r1, #2
10067f82:	d30a      	bcc.n	10067f9a <GAT_clt_exec_full+0x4e>
10067f84:	06c0      	lsls	r0, r0, #27
10067f86:	17c0      	asrs	r0, r0, #31
10067f88:	2381      	movs	r3, #129	@ 0x81
10067f8a:	4003      	ands	r3, r0
10067f8c:	88a2      	ldrh	r2, [r4, #4]
10067f8e:	8861      	ldrh	r1, [r4, #2]
10067f90:	2002      	movs	r0, #2
10067f92:	f7fe f859 	bl	10066048 <aci_gatt_clt_proc_complete_event_push_noinline>
10067f96:	2800      	cmp	r0, #0
10067f98:	d1dc      	bne.n	10067f54 <GAT_clt_exec_full+0x8>
10067f9a:	4620      	mov	r0, r4
10067f9c:	3020      	adds	r0, #32
10067f9e:	6829      	ldr	r1, [r5, #0]
10067fa0:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
10067fa2:	42a3      	cmp	r3, r4
10067fa4:	d009      	beq.n	10067fba <GAT_clt_exec_full+0x6e>
10067fa6:	461a      	mov	r2, r3
10067fa8:	6a1b      	ldr	r3, [r3, #32]
10067faa:	42a3      	cmp	r3, r4
10067fac:	d1fb      	bne.n	10067fa6 <GAT_clt_exec_full+0x5a>
10067fae:	6803      	ldr	r3, [r0, #0]
10067fb0:	6213      	str	r3, [r2, #32]
10067fb2:	2b00      	cmp	r3, #0
10067fb4:	d108      	bne.n	10067fc8 <GAT_clt_exec_full+0x7c>
10067fb6:	3220      	adds	r2, #32
10067fb8:	e005      	b.n	10067fc6 <GAT_clt_exec_full+0x7a>
10067fba:	460a      	mov	r2, r1
10067fbc:	3248      	adds	r2, #72	@ 0x48
10067fbe:	6803      	ldr	r3, [r0, #0]
10067fc0:	6013      	str	r3, [r2, #0]
10067fc2:	2b00      	cmp	r3, #0
10067fc4:	d100      	bne.n	10067fc8 <GAT_clt_exec_full+0x7c>
10067fc6:	64ca      	str	r2, [r1, #76]	@ 0x4c
10067fc8:	2200      	movs	r2, #0
10067fca:	6222      	str	r2, [r4, #32]
10067fcc:	6d49      	ldr	r1, [r1, #84]	@ 0x54
10067fce:	600c      	str	r4, [r1, #0]
10067fd0:	2101      	movs	r1, #1
10067fd2:	7021      	strb	r1, [r4, #0]
10067fd4:	6829      	ldr	r1, [r5, #0]
10067fd6:	6548      	str	r0, [r1, #84]	@ 0x54
10067fd8:	e7bc      	b.n	10067f54 <GAT_clt_exec_full+0x8>
10067fda:	bd70      	pop	{r4, r5, r6, pc}

10067fdc <__arm_cp.10_0>:
10067fdc:	20000848 	.word	0x20000848

10067fe0 <GAT_clt_exec_proc>:
10067fe0:	b5f0      	push	{r4, r5, r6, r7, lr}
10067fe2:	b085      	sub	sp, #20
10067fe4:	4604      	mov	r4, r0
10067fe6:	8840      	ldrh	r0, [r0, #2]
10067fe8:	2504      	movs	r5, #4
10067fea:	4629      	mov	r1, r5
10067fec:	f7ea fba2 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10067ff0:	4606      	mov	r6, r0
10067ff2:	8880      	ldrh	r0, [r0, #4]
10067ff4:	0580      	lsls	r0, r0, #22
10067ff6:	d508      	bpl.n	1006800a <GAT_clt_exec_proc+0x2a>
10067ff8:	8860      	ldrh	r0, [r4, #2]
10067ffa:	f7ea fca9 	bl	10052950 <GAT_att_cmn_no_eatt_channels_are_active>
10067ffe:	2800      	cmp	r0, #0
10068000:	d039      	beq.n	10068076 <GAT_clt_exec_proc+0x96>
10068002:	88b0      	ldrh	r0, [r6, #4]
10068004:	495e      	ldr	r1, [pc, #376]	@ (10068180 <__arm_cp.11_0>)
10068006:	4001      	ands	r1, r0
10068008:	80b1      	strh	r1, [r6, #4]
1006800a:	8860      	ldrh	r0, [r4, #2]
1006800c:	466a      	mov	r2, sp
1006800e:	8050      	strh	r0, [r2, #2]
10068010:	88a1      	ldrh	r1, [r4, #4]
10068012:	8091      	strh	r1, [r2, #4]
10068014:	79a2      	ldrb	r2, [r4, #6]
10068016:	1e53      	subs	r3, r2, #1
10068018:	2b11      	cmp	r3, #17
1006801a:	d900      	bls.n	1006801e <GAT_clt_exec_proc+0x3e>
1006801c:	e067      	b.n	100680ee <GAT_clt_exec_proc+0x10e>
1006801e:	46c0      	nop			@ (mov r8, r8)
10068020:	447b      	add	r3, pc
10068022:	791b      	ldrb	r3, [r3, #4]
10068024:	005b      	lsls	r3, r3, #1
10068026:	449f      	add	pc, r3
10068028:	45736864 	.word	0x45736864
1006802c:	8b864040 	.word	0x8b864040
10068030:	4c4c5645 	.word	0x4c4c5645
10068034:	0850085a 	.word	0x0850085a
10068038:	5008      	.short	0x5008
1006803a:	6926      	ldr	r6, [r4, #16]
1006803c:	7a67      	ldrb	r7, [r4, #9]
1006803e:	f7ea fb79 	bl	10052734 <GAT_att_cmn_get_channel_descr_p>
10068042:	230c      	movs	r3, #12
10068044:	437b      	muls	r3, r7
10068046:	18f1      	adds	r1, r6, r3
10068048:	888f      	ldrh	r7, [r1, #4]
1006804a:	8962      	ldrh	r2, [r4, #10]
1006804c:	1abf      	subs	r7, r7, r2
1006804e:	88c0      	ldrh	r0, [r0, #6]
10068050:	1f40      	subs	r0, r0, #5
10068052:	b280      	uxth	r0, r0
10068054:	4287      	cmp	r7, r0
10068056:	dc00      	bgt.n	1006805a <GAT_clt_exec_proc+0x7a>
10068058:	4638      	mov	r0, r7
1006805a:	81a0      	strh	r0, [r4, #12]
1006805c:	5af3      	ldrh	r3, [r6, r3]
1006805e:	466e      	mov	r6, sp
10068060:	8133      	strh	r3, [r6, #8]
10068062:	81b0      	strh	r0, [r6, #12]
10068064:	8848      	ldrh	r0, [r1, #2]
10068066:	1880      	adds	r0, r0, r2
10068068:	8170      	strh	r0, [r6, #10]
1006806a:	2016      	movs	r0, #22
1006806c:	7030      	strb	r0, [r6, #0]
1006806e:	6888      	ldr	r0, [r1, #8]
10068070:	1880      	adds	r0, r0, r2
10068072:	9004      	str	r0, [sp, #16]
10068074:	e078      	b.n	10068168 <GAT_clt_exec_proc+0x188>
10068076:	79a1      	ldrb	r1, [r4, #6]
10068078:	200c      	movs	r0, #12
1006807a:	2909      	cmp	r1, #9
1006807c:	d17d      	bne.n	1006817a <GAT_clt_exec_proc+0x19a>
1006807e:	7f21      	ldrb	r1, [r4, #28]
10068080:	2910      	cmp	r1, #16
10068082:	d17a      	bne.n	1006817a <GAT_clt_exec_proc+0x19a>
10068084:	8b21      	ldrh	r1, [r4, #24]
10068086:	4a3f      	ldr	r2, [pc, #252]	@ (10068184 <__arm_cp.11_1>)
10068088:	4291      	cmp	r1, r2
1006808a:	d176      	bne.n	1006817a <GAT_clt_exec_proc+0x19a>
1006808c:	493e      	ldr	r1, [pc, #248]	@ (10068188 <__arm_cp.11_2>)
1006808e:	6809      	ldr	r1, [r1, #0]
10068090:	3148      	adds	r1, #72	@ 0x48
10068092:	6809      	ldr	r1, [r1, #0]
10068094:	2900      	cmp	r1, #0
10068096:	d0b8      	beq.n	1006800a <GAT_clt_exec_proc+0x2a>
10068098:	8862      	ldrh	r2, [r4, #2]
1006809a:	884b      	ldrh	r3, [r1, #2]
1006809c:	4293      	cmp	r3, r2
1006809e:	d102      	bne.n	100680a6 <GAT_clt_exec_proc+0xc6>
100680a0:	798a      	ldrb	r2, [r1, #6]
100680a2:	2a0f      	cmp	r2, #15
100680a4:	d169      	bne.n	1006817a <GAT_clt_exec_proc+0x19a>
100680a6:	3120      	adds	r1, #32
100680a8:	e7f3      	b.n	10068092 <GAT_clt_exec_proc+0xb2>
100680aa:	4668      	mov	r0, sp
100680ac:	2108      	movs	r1, #8
100680ae:	7001      	strb	r1, [r0, #0]
100680b0:	4836      	ldr	r0, [pc, #216]	@ (1006818c <__arm_cp.11_3>)
100680b2:	e004      	b.n	100680be <GAT_clt_exec_proc+0xde>
100680b4:	4668      	mov	r0, sp
100680b6:	2108      	movs	r1, #8
100680b8:	7001      	strb	r1, [r0, #0]
100680ba:	4620      	mov	r0, r4
100680bc:	300c      	adds	r0, #12
100680be:	9003      	str	r0, [sp, #12]
100680c0:	e03b      	b.n	1006813a <GAT_clt_exec_proc+0x15a>
100680c2:	2a0b      	cmp	r2, #11
100680c4:	d042      	beq.n	1006814c <GAT_clt_exec_proc+0x16c>
100680c6:	2020      	movs	r0, #32
100680c8:	e041      	b.n	1006814e <GAT_clt_exec_proc+0x16e>
100680ca:	4668      	mov	r0, sp
100680cc:	2118      	movs	r1, #24
100680ce:	7001      	strb	r1, [r0, #0]
100680d0:	7a21      	ldrb	r1, [r4, #8]
100680d2:	7201      	strb	r1, [r0, #8]
100680d4:	e048      	b.n	10068168 <GAT_clt_exec_proc+0x188>
100680d6:	4668      	mov	r0, sp
100680d8:	210c      	movs	r1, #12
100680da:	7001      	strb	r1, [r0, #0]
100680dc:	e02d      	b.n	1006813a <GAT_clt_exec_proc+0x15a>
100680de:	4668      	mov	r0, sp
100680e0:	2112      	movs	r1, #18
100680e2:	7001      	strb	r1, [r0, #0]
100680e4:	68a0      	ldr	r0, [r4, #8]
100680e6:	68e1      	ldr	r1, [r4, #12]
100680e8:	9002      	str	r0, [sp, #8]
100680ea:	9103      	str	r1, [sp, #12]
100680ec:	e03c      	b.n	10068168 <GAT_clt_exec_proc+0x188>
100680ee:	2086      	movs	r0, #134	@ 0x86
100680f0:	e043      	b.n	1006817a <GAT_clt_exec_proc+0x19a>
100680f2:	4668      	mov	r0, sp
100680f4:	2102      	movs	r1, #2
100680f6:	7001      	strb	r1, [r0, #0]
100680f8:	e036      	b.n	10068168 <GAT_clt_exec_proc+0x188>
100680fa:	4668      	mov	r0, sp
100680fc:	2110      	movs	r1, #16
100680fe:	7001      	strb	r1, [r0, #0]
10068100:	2100      	movs	r1, #0
10068102:	43c9      	mvns	r1, r1
10068104:	8141      	strh	r1, [r0, #10]
10068106:	8921      	ldrh	r1, [r4, #8]
10068108:	8101      	strh	r1, [r0, #8]
1006810a:	4620      	mov	r0, r4
1006810c:	300c      	adds	r0, #12
1006810e:	e023      	b.n	10068158 <GAT_clt_exec_proc+0x178>
10068110:	4668      	mov	r0, sp
10068112:	2106      	movs	r1, #6
10068114:	7001      	strb	r1, [r0, #0]
10068116:	2105      	movs	r1, #5
10068118:	02c9      	lsls	r1, r1, #11
1006811a:	8181      	strh	r1, [r0, #12]
1006811c:	2100      	movs	r1, #0
1006811e:	43c9      	mvns	r1, r1
10068120:	8141      	strh	r1, [r0, #10]
10068122:	8921      	ldrh	r1, [r4, #8]
10068124:	8101      	strh	r1, [r0, #8]
10068126:	7f20      	ldrb	r0, [r4, #28]
10068128:	2810      	cmp	r0, #16
1006812a:	d117      	bne.n	1006815c <GAT_clt_exec_proc+0x17c>
1006812c:	4620      	mov	r0, r4
1006812e:	3018      	adds	r0, #24
10068130:	9004      	str	r0, [sp, #16]
10068132:	2002      	movs	r0, #2
10068134:	e016      	b.n	10068164 <GAT_clt_exec_proc+0x184>
10068136:	4668      	mov	r0, sp
10068138:	7005      	strb	r5, [r0, #0]
1006813a:	68a0      	ldr	r0, [r4, #8]
1006813c:	9002      	str	r0, [sp, #8]
1006813e:	e013      	b.n	10068168 <GAT_clt_exec_proc+0x188>
10068140:	4668      	mov	r0, sp
10068142:	210a      	movs	r1, #10
10068144:	7001      	strb	r1, [r0, #0]
10068146:	8921      	ldrh	r1, [r4, #8]
10068148:	8101      	strh	r1, [r0, #8]
1006814a:	e00d      	b.n	10068168 <GAT_clt_exec_proc+0x188>
1006814c:	200e      	movs	r0, #14
1006814e:	4669      	mov	r1, sp
10068150:	7008      	strb	r0, [r1, #0]
10068152:	7a20      	ldrb	r0, [r4, #8]
10068154:	7208      	strb	r0, [r1, #8]
10068156:	68e0      	ldr	r0, [r4, #12]
10068158:	9003      	str	r0, [sp, #12]
1006815a:	e005      	b.n	10068168 <GAT_clt_exec_proc+0x188>
1006815c:	4620      	mov	r0, r4
1006815e:	300c      	adds	r0, #12
10068160:	9004      	str	r0, [sp, #16]
10068162:	2010      	movs	r0, #16
10068164:	4669      	mov	r1, sp
10068166:	81c8      	strh	r0, [r1, #14]
10068168:	4668      	mov	r0, sp
1006816a:	f7fe ff2d 	bl	10066fc8 <GAT_att_clt_tx>
1006816e:	2800      	cmp	r0, #0
10068170:	d103      	bne.n	1006817a <GAT_clt_exec_proc+0x19a>
10068172:	7820      	ldrb	r0, [r4, #0]
10068174:	4328      	orrs	r0, r5
10068176:	7020      	strb	r0, [r4, #0]
10068178:	2000      	movs	r0, #0
1006817a:	b005      	add	sp, #20
1006817c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006817e:	46c0      	nop			@ (mov r8, r8)

10068180 <__arm_cp.11_0>:
10068180:	0000fdff 	.word	0x0000fdff

10068184 <__arm_cp.11_1>:
10068184:	00002b2a 	.word	0x00002b2a

10068188 <__arm_cp.11_2>:
10068188:	20000848 	.word	0x20000848

1006818c <__arm_cp.11_3>:
1006818c:	20000bdc 	.word	0x20000bdc

10068190 <GAT_clt_rcv_srv_initiated>:
10068190:	b5f0      	push	{r4, r5, r6, r7, lr}
10068192:	b085      	sub	sp, #20
10068194:	4604      	mov	r4, r0
10068196:	8805      	ldrh	r5, [r0, #0]
10068198:	8980      	ldrh	r0, [r0, #12]
1006819a:	1c46      	adds	r6, r0, #1
1006819c:	4620      	mov	r0, r4
1006819e:	f7ff fe49 	bl	10067e34 <GAT_att_cmn_get_opcode>
100681a2:	2823      	cmp	r0, #35	@ 0x23
100681a4:	d010      	beq.n	100681c8 <GAT_clt_rcv_srv_initiated+0x38>
100681a6:	b2b1      	uxth	r1, r6
100681a8:	281b      	cmp	r0, #27
100681aa:	d122      	bne.n	100681f2 <GAT_clt_rcv_srv_initiated+0x62>
100681ac:	4620      	mov	r0, r4
100681ae:	f7e7 ff1a 	bl	1004ffe6 <ACL_pkt_read_16b>
100681b2:	4601      	mov	r1, r0
100681b4:	4628      	mov	r0, r5
100681b6:	f000 f85b 	bl	10068270 <GAT_clt_check_security>
100681ba:	2800      	cmp	r0, #0
100681bc:	d03d      	beq.n	1006823a <GAT_clt_rcv_srv_initiated+0xaa>
100681be:	4620      	mov	r0, r4
100681c0:	f7e7 feec 	bl	1004ff9c <ACL_pkt_release>
100681c4:	2500      	movs	r5, #0
100681c6:	e050      	b.n	1006826a <GAT_clt_rcv_srv_initiated+0xda>
100681c8:	8867      	ldrh	r7, [r4, #2]
100681ca:	b2b1      	uxth	r1, r6
100681cc:	4620      	mov	r0, r4
100681ce:	42b9      	cmp	r1, r7
100681d0:	d22a      	bcs.n	10068228 <GAT_clt_rcv_srv_initiated+0x98>
100681d2:	f7e7 ff08 	bl	1004ffe6 <ACL_pkt_read_16b>
100681d6:	4601      	mov	r1, r0
100681d8:	4628      	mov	r0, r5
100681da:	f000 f849 	bl	10068270 <GAT_clt_check_security>
100681de:	2800      	cmp	r0, #0
100681e0:	d1ed      	bne.n	100681be <GAT_clt_rcv_srv_initiated+0x2e>
100681e2:	1cb0      	adds	r0, r6, #2
100681e4:	b281      	uxth	r1, r0
100681e6:	4620      	mov	r0, r4
100681e8:	f7e7 fefd 	bl	1004ffe6 <ACL_pkt_read_16b>
100681ec:	1830      	adds	r0, r6, r0
100681ee:	1d06      	adds	r6, r0, #4
100681f0:	e7eb      	b.n	100681ca <GAT_clt_rcv_srv_initiated+0x3a>
100681f2:	4620      	mov	r0, r4
100681f4:	f7e7 fef7 	bl	1004ffe6 <ACL_pkt_read_16b>
100681f8:	4601      	mov	r1, r0
100681fa:	4628      	mov	r0, r5
100681fc:	f000 f838 	bl	10068270 <GAT_clt_check_security>
10068200:	2800      	cmp	r0, #0
10068202:	d024      	beq.n	1006824e <GAT_clt_rcv_srv_initiated+0xbe>
10068204:	466e      	mov	r6, sp
10068206:	8075      	strh	r5, [r6, #2]
10068208:	4620      	mov	r0, r4
1006820a:	f7ed fb3a 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
1006820e:	80b0      	strh	r0, [r6, #4]
10068210:	201e      	movs	r0, #30
10068212:	7030      	strb	r0, [r6, #0]
10068214:	4630      	mov	r0, r6
10068216:	f7fe fed7 	bl	10066fc8 <GAT_att_clt_tx>
1006821a:	4605      	mov	r5, r0
1006821c:	2800      	cmp	r0, #0
1006821e:	d120      	bne.n	10068262 <GAT_clt_rcv_srv_initiated+0xd2>
10068220:	4620      	mov	r0, r4
10068222:	f7e7 febb 	bl	1004ff9c <ACL_pkt_release>
10068226:	e01c      	b.n	10068262 <GAT_clt_rcv_srv_initiated+0xd2>
10068228:	f7ed fb2b 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
1006822c:	4602      	mov	r2, r0
1006822e:	200a      	movs	r0, #10
10068230:	4629      	mov	r1, r5
10068232:	4623      	mov	r3, r4
10068234:	f7fe f8a4 	bl	10066380 <aci_gatt_clt_multi_notification_int_event_push_noinline>
10068238:	e012      	b.n	10068260 <GAT_clt_rcv_srv_initiated+0xd0>
1006823a:	4620      	mov	r0, r4
1006823c:	f7ed fb21 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10068240:	4602      	mov	r2, r0
10068242:	200a      	movs	r0, #10
10068244:	4629      	mov	r1, r5
10068246:	4623      	mov	r3, r4
10068248:	f7fd fecc 	bl	10065fe4 <aci_gatt_clt_notification_event_push_noinline>
1006824c:	e008      	b.n	10068260 <GAT_clt_rcv_srv_initiated+0xd0>
1006824e:	4620      	mov	r0, r4
10068250:	f7ed fb17 	bl	10055882 <L2C_get_cid_from_basic_packet_header>
10068254:	4602      	mov	r2, r0
10068256:	200a      	movs	r0, #10
10068258:	4629      	mov	r1, r5
1006825a:	4623      	mov	r3, r4
1006825c:	f7fd fe90 	bl	10065f80 <aci_gatt_clt_indication_event_push_noinline>
10068260:	4605      	mov	r5, r0
10068262:	2d00      	cmp	r5, #0
10068264:	d001      	beq.n	1006826a <GAT_clt_rcv_srv_initiated+0xda>
10068266:	207b      	movs	r0, #123	@ 0x7b
10068268:	43c5      	mvns	r5, r0
1006826a:	b2e8      	uxtb	r0, r5
1006826c:	b005      	add	sp, #20
1006826e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10068270 <GAT_clt_check_security>:
10068270:	b5bf      	push	{r0, r1, r2, r3, r4, r5, r7, lr}
10068272:	4604      	mov	r4, r0
10068274:	f000 f822 	bl	100682bc <GAT_clt_find_sec_level_entry_p>
10068278:	4605      	mov	r5, r0
1006827a:	2800      	cmp	r0, #0
1006827c:	d106      	bne.n	1006828c <GAT_clt_check_security+0x1c>
1006827e:	480e      	ldr	r0, [pc, #56]	@ (100682b8 <__arm_cp.13_0>)
10068280:	4601      	mov	r1, r0
10068282:	f000 f81b 	bl	100682bc <GAT_clt_find_sec_level_entry_p>
10068286:	4605      	mov	r5, r0
10068288:	2800      	cmp	r0, #0
1006828a:	d002      	beq.n	10068292 <GAT_clt_check_security+0x22>
1006828c:	7828      	ldrb	r0, [r5, #0]
1006828e:	2802      	cmp	r0, #2
10068290:	d201      	bcs.n	10068296 <GAT_clt_check_security+0x26>
10068292:	2000      	movs	r0, #0
10068294:	e00d      	b.n	100682b2 <GAT_clt_check_security+0x42>
10068296:	a903      	add	r1, sp, #12
10068298:	aa02      	add	r2, sp, #8
1006829a:	ab01      	add	r3, sp, #4
1006829c:	4620      	mov	r0, r4
1006829e:	f7fc fdee 	bl	10064e7e <smp_sap_get_security_level>
100682a2:	2800      	cmp	r0, #0
100682a4:	d104      	bne.n	100682b0 <GAT_clt_check_security+0x40>
100682a6:	7828      	ldrb	r0, [r5, #0]
100682a8:	a902      	add	r1, sp, #8
100682aa:	7809      	ldrb	r1, [r1, #0]
100682ac:	4281      	cmp	r1, r0
100682ae:	d2f0      	bcs.n	10068292 <GAT_clt_check_security+0x22>
100682b0:	20c0      	movs	r0, #192	@ 0xc0
100682b2:	b004      	add	sp, #16
100682b4:	bdb0      	pop	{r4, r5, r7, pc}
100682b6:	46c0      	nop			@ (mov r8, r8)

100682b8 <__arm_cp.13_0>:
100682b8:	0000ffff 	.word	0x0000ffff

100682bc <GAT_clt_find_sec_level_entry_p>:
100682bc:	4a07      	ldr	r2, [pc, #28]	@ (100682dc <__arm_cp.15_0>)
100682be:	6812      	ldr	r2, [r2, #0]
100682c0:	3258      	adds	r2, #88	@ 0x58
100682c2:	6812      	ldr	r2, [r2, #0]
100682c4:	2a00      	cmp	r2, #0
100682c6:	d007      	beq.n	100682d8 <GAT_clt_find_sec_level_entry_p+0x1c>
100682c8:	8893      	ldrh	r3, [r2, #4]
100682ca:	4283      	cmp	r3, r0
100682cc:	d102      	bne.n	100682d4 <GAT_clt_find_sec_level_entry_p+0x18>
100682ce:	8853      	ldrh	r3, [r2, #2]
100682d0:	428b      	cmp	r3, r1
100682d2:	d001      	beq.n	100682d8 <GAT_clt_find_sec_level_entry_p+0x1c>
100682d4:	3208      	adds	r2, #8
100682d6:	e7f4      	b.n	100682c2 <GAT_clt_find_sec_level_entry_p+0x6>
100682d8:	4610      	mov	r0, r2
100682da:	4770      	bx	lr

100682dc <__arm_cp.15_0>:
100682dc:	20000848 	.word	0x20000848

100682e0 <GAT_clt_exec_empty>:
100682e0:	4770      	bx	lr

100682e2 <ACL_pkt_read_8b>:
100682e2:	b51c      	push	{r2, r3, r4, lr}
100682e4:	291f      	cmp	r1, #31
100682e6:	d803      	bhi.n	100682f0 <ACL_pkt_read_8b+0xe>
100682e8:	aa01      	add	r2, sp, #4
100682ea:	8011      	strh	r1, [r2, #0]
100682ec:	6840      	ldr	r0, [r0, #4]
100682ee:	e005      	b.n	100682fc <ACL_pkt_read_8b+0x1a>
100682f0:	6840      	ldr	r0, [r0, #4]
100682f2:	ac01      	add	r4, sp, #4
100682f4:	4622      	mov	r2, r4
100682f6:	f7fa fe3c 	bl	10062f72 <Mem_Buff_get_buff_off>
100682fa:	8821      	ldrh	r1, [r4, #0]
100682fc:	1840      	adds	r0, r0, r1
100682fe:	7900      	ldrb	r0, [r0, #4]
10068300:	bd1c      	pop	{r2, r3, r4, pc}

10068302 <GAT_att_clt_read_type_get_len>:
10068302:	b580      	push	{r7, lr}
10068304:	8981      	ldrh	r1, [r0, #12]
10068306:	1c49      	adds	r1, r1, #1
10068308:	b289      	uxth	r1, r1
1006830a:	f7ff ffea 	bl	100682e2 <ACL_pkt_read_8b>
1006830e:	bd80      	pop	{r7, pc}

10068310 <L2C_cos_process_cfc_mode_command_ucfg_weak>:
10068310:	2000      	movs	r0, #0
10068312:	4770      	bx	lr

10068314 <L2C_cos_is_pdu_cframe_cfc_command_opcode_ucfg_weak>:
10068314:	2000      	movs	r0, #0
10068316:	4770      	bx	lr

10068318 <l2c_cos_hndl_incoming_le_frame_ucfg_weak>:
10068318:	b580      	push	{r7, lr}
1006831a:	6841      	ldr	r1, [r0, #4]
1006831c:	7800      	ldrb	r0, [r0, #0]
1006831e:	f7ed faab 	bl	10055878 <l2c_release_unexpected_acl_packet>
10068322:	2000      	movs	r0, #0
10068324:	bd80      	pop	{r7, pc}

10068326 <l2c_cos_sdu_reassembly_tsk_ucfg_weak>:
10068326:	4770      	bx	lr

10068328 <llc_big_brc_mem_alloc_ucfg_weak>:
10068328:	4770      	bx	lr

1006832a <llc_big_brc_add_biginfo_to_periodic_sync_packet_ucfg_weak>:
1006832a:	4770      	bx	lr

1006832c <llc_big_brc_is_big_enabled>:
1006832c:	b580      	push	{r7, lr}
1006832e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
10068330:	21be      	movs	r1, #190	@ 0xbe
10068332:	5c40      	ldrb	r0, [r0, r1]
10068334:	f000 f803 	bl	1006833e <llc_big_brc_get_group_descr_of_adv_ucfg_weak>
10068338:	1e41      	subs	r1, r0, #1
1006833a:	4188      	sbcs	r0, r1
1006833c:	bd80      	pop	{r7, pc}

1006833e <llc_big_brc_get_group_descr_of_adv_ucfg_weak>:
1006833e:	2000      	movs	r0, #0
10068340:	4770      	bx	lr

10068342 <llc_big_sync_mem_alloc_ucfg_weak>:
10068342:	4770      	bx	lr

10068344 <llc_big_sync_deploy_sync_ucfg_weak>:
10068344:	4770      	bx	lr

10068346 <llc_cig_cmn_mem_alloc_ucfg_weak>:
10068346:	4770      	bx	lr

10068348 <llc_conn_cancel_slot>:
10068348:	b570      	push	{r4, r5, r6, lr}
1006834a:	4604      	mov	r4, r0
1006834c:	2030      	movs	r0, #48	@ 0x30
1006834e:	5c25      	ldrb	r5, [r4, r0]
10068350:	8f60      	ldrh	r0, [r4, #58]	@ 0x3a
10068352:	f7ed fe50 	bl	10055ff6 <llc_cig_cmn_terminate_cises_on_acl_ucfg_weak>
10068356:	20ff      	movs	r0, #255	@ 0xff
10068358:	3012      	adds	r0, #18
1006835a:	1826      	adds	r6, r4, r0
1006835c:	4628      	mov	r0, r5
1006835e:	f7e6 fb36 	bl	1004e9ce <llc_pscan_wr_check_pawr_active_ucfg>
10068362:	2800      	cmp	r0, #0
10068364:	d004      	beq.n	10068370 <llc_conn_cancel_slot+0x28>
10068366:	3430      	adds	r4, #48	@ 0x30
10068368:	7c60      	ldrb	r0, [r4, #17]
1006836a:	2101      	movs	r1, #1
1006836c:	f7fa fb6a 	bl	10062a44 <LL_sched_set_per_state>
10068370:	2000      	movs	r0, #0
10068372:	7030      	strb	r0, [r6, #0]
10068374:	2015      	movs	r0, #21
10068376:	f7fc ff5b 	bl	10065230 <tsk_notify_idx>
1006837a:	f7da faac 	bl	100428d6 <BLE_STACK_ProcessRequest>
1006837e:	bd70      	pop	{r4, r5, r6, pc}

10068380 <llc_conn_program_slot>:
10068380:	b57c      	push	{r2, r3, r4, r5, r6, lr}
10068382:	4604      	mov	r4, r0
10068384:	f7dd fd0f 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
10068388:	4605      	mov	r5, r0
1006838a:	2101      	movs	r1, #1
1006838c:	4620      	mov	r0, r4
1006838e:	f7ee f8e9 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
10068392:	4626      	mov	r6, r4
10068394:	362c      	adds	r6, #44	@ 0x2c
10068396:	4621      	mov	r1, r4
10068398:	3128      	adds	r1, #40	@ 0x28
1006839a:	428d      	cmp	r5, r1
1006839c:	d010      	beq.n	100683c0 <llc_conn_program_slot+0x40>
1006839e:	4285      	cmp	r5, r0
100683a0:	d00e      	beq.n	100683c0 <llc_conn_program_slot+0x40>
100683a2:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
100683a4:	4620      	mov	r0, r4
100683a6:	f7ee f82d 	bl	10056404 <llc_conn_copy_tx_data_packet>
100683aa:	2101      	movs	r1, #1
100683ac:	4620      	mov	r0, r4
100683ae:	f7ee f8df 	bl	10056570 <llc_conn_get_enc_on>
100683b2:	2801      	cmp	r0, #1
100683b4:	d104      	bne.n	100683c0 <llc_conn_program_slot+0x40>
100683b6:	7868      	ldrb	r0, [r5, #1]
100683b8:	2800      	cmp	r0, #0
100683ba:	d001      	beq.n	100683c0 <llc_conn_program_slot+0x40>
100683bc:	1d00      	adds	r0, r0, #4
100683be:	7068      	strb	r0, [r5, #1]
100683c0:	4625      	mov	r5, r4
100683c2:	35d0      	adds	r5, #208	@ 0xd0
100683c4:	7830      	ldrb	r0, [r6, #0]
100683c6:	2803      	cmp	r0, #3
100683c8:	d113      	bne.n	100683f2 <llc_conn_program_slot+0x72>
100683ca:	a801      	add	r0, sp, #4
100683cc:	f7fa f860 	bl	10062490 <LL_sched_anchorstretch>
100683d0:	2801      	cmp	r0, #1
100683d2:	d006      	beq.n	100683e2 <llc_conn_program_slot+0x62>
100683d4:	2800      	cmp	r0, #0
100683d6:	d10a      	bne.n	100683ee <llc_conn_program_slot+0x6e>
100683d8:	6f60      	ldr	r0, [r4, #116]	@ 0x74
100683da:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
100683dc:	0049      	lsls	r1, r1, #1
100683de:	1808      	adds	r0, r1, r0
100683e0:	e006      	b.n	100683f0 <llc_conn_program_slot+0x70>
100683e2:	6d21      	ldr	r1, [r4, #80]	@ 0x50
100683e4:	9801      	ldr	r0, [sp, #4]
100683e6:	4288      	cmp	r0, r1
100683e8:	d302      	bcc.n	100683f0 <llc_conn_program_slot+0x70>
100683ea:	4608      	mov	r0, r1
100683ec:	e000      	b.n	100683f0 <llc_conn_program_slot+0x70>
100683ee:	6d20      	ldr	r0, [r4, #80]	@ 0x50
100683f0:	6068      	str	r0, [r5, #4]
100683f2:	4620      	mov	r0, r4
100683f4:	f7ee f8ea 	bl	100565cc <llc_conn_guard_time_for_close_conn_event>
100683f8:	4620      	mov	r0, r4
100683fa:	f7ef facf 	bl	1005799c <llc_conn_update_receive_window>
100683fe:	6829      	ldr	r1, [r5, #0]
10068400:	3414      	adds	r4, #20
10068402:	4620      	mov	r0, r4
10068404:	f7dd fe17 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
10068408:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

1006840a <llc_conn_skip_slot>:
1006840a:	b5f0      	push	{r4, r5, r6, r7, lr}
1006840c:	b089      	sub	sp, #36	@ 0x24
1006840e:	2242      	movs	r2, #66	@ 0x42
10068410:	5a85      	ldrh	r5, [r0, r2]
10068412:	6c42      	ldr	r2, [r0, #68]	@ 0x44
10068414:	9201      	str	r2, [sp, #4]
10068416:	1851      	adds	r1, r2, r1
10068418:	9106      	str	r1, [sp, #24]
1006841a:	2191      	movs	r1, #145	@ 0x91
1006841c:	0049      	lsls	r1, r1, #1
1006841e:	1841      	adds	r1, r0, r1
10068420:	9102      	str	r1, [sp, #8]
10068422:	4601      	mov	r1, r0
10068424:	3142      	adds	r1, #66	@ 0x42
10068426:	9105      	str	r1, [sp, #20]
10068428:	4601      	mov	r1, r0
1006842a:	312d      	adds	r1, #45	@ 0x2d
1006842c:	9103      	str	r1, [sp, #12]
1006842e:	9007      	str	r0, [sp, #28]
10068430:	309a      	adds	r0, #154	@ 0x9a
10068432:	9004      	str	r0, [sp, #16]
10068434:	2000      	movs	r0, #0
10068436:	9008      	str	r0, [sp, #32]
10068438:	b2a9      	uxth	r1, r5
1006843a:	2201      	movs	r2, #1
1006843c:	9e07      	ldr	r6, [sp, #28]
1006843e:	4630      	mov	r0, r6
10068440:	f7ee fb6f 	bl	10056b22 <llc_conn_calc_skip_ucfg_weak>
10068444:	6cf1      	ldr	r1, [r6, #76]	@ 0x4c
10068446:	4341      	muls	r1, r0
10068448:	6c72      	ldr	r2, [r6, #68]	@ 0x44
1006844a:	1854      	adds	r4, r2, r1
1006844c:	6474      	str	r4, [r6, #68]	@ 0x44
1006844e:	9908      	ldr	r1, [sp, #32]
10068450:	1841      	adds	r1, r0, r1
10068452:	9108      	str	r1, [sp, #32]
10068454:	182d      	adds	r5, r5, r0
10068456:	b2af      	uxth	r7, r5
10068458:	4630      	mov	r0, r6
1006845a:	4639      	mov	r1, r7
1006845c:	f7ee fb9a 	bl	10056b94 <llc_conn_check_instant_and_set_params>
10068460:	4606      	mov	r6, r0
10068462:	2800      	cmp	r0, #0
10068464:	d102      	bne.n	1006846c <llc_conn_skip_slot+0x62>
10068466:	9806      	ldr	r0, [sp, #24]
10068468:	1a20      	subs	r0, r4, r0
1006846a:	d4e5      	bmi.n	10068438 <llc_conn_skip_slot+0x2e>
1006846c:	9c05      	ldr	r4, [sp, #20]
1006846e:	8820      	ldrh	r0, [r4, #0]
10068470:	42b8      	cmp	r0, r7
10068472:	d907      	bls.n	10068484 <llc_conn_skip_slot+0x7a>
10068474:	2009      	movs	r0, #9
10068476:	0140      	lsls	r0, r0, #5
10068478:	9907      	ldr	r1, [sp, #28]
1006847a:	1809      	adds	r1, r1, r0
1006847c:	9802      	ldr	r0, [sp, #8]
1006847e:	8800      	ldrh	r0, [r0, #0]
10068480:	f7f4 fa84 	bl	1005c98c <llc_subrate_new_sr_base_event_ucfg_weak>
10068484:	8025      	strh	r5, [r4, #0]
10068486:	2e00      	cmp	r6, #0
10068488:	9d08      	ldr	r5, [sp, #32]
1006848a:	d118      	bne.n	100684be <llc_conn_skip_slot+0xb4>
1006848c:	9807      	ldr	r0, [sp, #28]
1006848e:	6c41      	ldr	r1, [r0, #68]	@ 0x44
10068490:	9a01      	ldr	r2, [sp, #4]
10068492:	1a8f      	subs	r7, r1, r2
10068494:	4639      	mov	r1, r7
10068496:	f7ee fc11 	bl	10056cbc <llc_conn_check_supervision_timer>
1006849a:	4606      	mov	r6, r0
1006849c:	2800      	cmp	r0, #0
1006849e:	d10e      	bne.n	100684be <llc_conn_skip_slot+0xb4>
100684a0:	9807      	ldr	r0, [sp, #28]
100684a2:	4639      	mov	r1, r7
100684a4:	f7ee fb3f 	bl	10056b26 <llc_conn_check_ctrl_proc_rsp_timer>
100684a8:	4606      	mov	r6, r0
100684aa:	2800      	cmp	r0, #0
100684ac:	d107      	bne.n	100684be <llc_conn_skip_slot+0xb4>
100684ae:	9807      	ldr	r0, [sp, #28]
100684b0:	4639      	mov	r1, r7
100684b2:	462a      	mov	r2, r5
100684b4:	f7ef f9fc 	bl	100578b0 <llc_conn_set_taskslot_params>
100684b8:	4606      	mov	r6, r0
100684ba:	2800      	cmp	r0, #0
100684bc:	d007      	beq.n	100684ce <llc_conn_skip_slot+0xc4>
100684be:	9c03      	ldr	r4, [sp, #12]
100684c0:	7d20      	ldrb	r0, [r4, #20]
100684c2:	f7fa faab 	bl	10062a1c <LL_sched_delete_taskslot>
100684c6:	7026      	strb	r6, [r4, #0]
100684c8:	2000      	movs	r0, #0
100684ca:	9904      	ldr	r1, [sp, #16]
100684cc:	8008      	strh	r0, [r1, #0]
100684ce:	4628      	mov	r0, r5
100684d0:	b009      	add	sp, #36	@ 0x24
100684d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100684d4 <llc_conn_isr>:
100684d4:	b5f0      	push	{r4, r5, r6, r7, lr}
100684d6:	b099      	sub	sp, #100	@ 0x64
100684d8:	4607      	mov	r7, r0
100684da:	8e40      	ldrh	r0, [r0, #50]	@ 0x32
100684dc:	1c40      	adds	r0, r0, #1
100684de:	8678      	strh	r0, [r7, #50]	@ 0x32
100684e0:	2041      	movs	r0, #65	@ 0x41
100684e2:	5c3d      	ldrb	r5, [r7, r0]
100684e4:	202d      	movs	r0, #45	@ 0x2d
100684e6:	5c38      	ldrb	r0, [r7, r0]
100684e8:	2800      	cmp	r0, #0
100684ea:	d008      	beq.n	100684fe <llc_conn_isr+0x2a>
100684ec:	f7dc fb8f 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100684f0:	4628      	mov	r0, r5
100684f2:	f7fa fa93 	bl	10062a1c <LL_sched_delete_taskslot>
100684f6:	4628      	mov	r0, r5
100684f8:	f7f9 ffd2 	bl	100624a0 <LL_sched_engine>
100684fc:	e2a5      	b.n	10068a4a <__arm_cp.0_5+0x182>
100684fe:	2021      	movs	r0, #33	@ 0x21
10068500:	00c0      	lsls	r0, r0, #3
10068502:	183e      	adds	r6, r7, r0
10068504:	4638      	mov	r0, r7
10068506:	302c      	adds	r0, #44	@ 0x2c
10068508:	900d      	str	r0, [sp, #52]	@ 0x34
1006850a:	463c      	mov	r4, r7
1006850c:	3480      	adds	r4, #128	@ 0x80
1006850e:	4638      	mov	r0, r7
10068510:	30d0      	adds	r0, #208	@ 0xd0
10068512:	9007      	str	r0, [sp, #28]
10068514:	48ea      	ldr	r0, [pc, #936]	@ (100688c0 <__arm_cp.0_3>)
10068516:	6800      	ldr	r0, [r0, #0]
10068518:	f7dd fc08 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
1006851c:	9009      	str	r0, [sp, #36]	@ 0x24
1006851e:	2800      	cmp	r0, #0
10068520:	940b      	str	r4, [sp, #44]	@ 0x2c
10068522:	960a      	str	r6, [sp, #40]	@ 0x28
10068524:	9508      	str	r5, [sp, #32]
10068526:	d040      	beq.n	100685aa <llc_conn_isr+0xd6>
10068528:	463e      	mov	r6, r7
1006852a:	3614      	adds	r6, #20
1006852c:	4630      	mov	r0, r6
1006852e:	f7dd fc2d 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
10068532:	4630      	mov	r0, r6
10068534:	f7dd fc1e 	bl	10045d74 <BLEPLAT_CNTR_PacketClrIncChan>
10068538:	4620      	mov	r0, r4
1006853a:	3008      	adds	r0, #8
1006853c:	900c      	str	r0, [sp, #48]	@ 0x30
1006853e:	7a20      	ldrb	r0, [r4, #8]
10068540:	0780      	lsls	r0, r0, #30
10068542:	d445      	bmi.n	100685d0 <llc_conn_isr+0xfc>
10068544:	4638      	mov	r0, r7
10068546:	f7dd fc2e 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
1006854a:	4605      	mov	r5, r0
1006854c:	463c      	mov	r4, r7
1006854e:	3428      	adds	r4, #40	@ 0x28
10068550:	980d      	ldr	r0, [sp, #52]	@ 0x34
10068552:	7800      	ldrb	r0, [r0, #0]
10068554:	2100      	movs	r1, #0
10068556:	9106      	str	r1, [sp, #24]
10068558:	2803      	cmp	r0, #3
1006855a:	d000      	beq.n	1006855e <llc_conn_isr+0x8a>
1006855c:	e0a6      	b.n	100686ac <llc_conn_isr+0x1d8>
1006855e:	4630      	mov	r0, r6
10068560:	f7dd fc21 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
10068564:	4603      	mov	r3, r0
10068566:	42a5      	cmp	r5, r4
10068568:	d015      	beq.n	10068596 <llc_conn_isr+0xc2>
1006856a:	7829      	ldrb	r1, [r5, #0]
1006856c:	2003      	movs	r0, #3
1006856e:	460a      	mov	r2, r1
10068570:	4002      	ands	r2, r0
10068572:	2a03      	cmp	r2, #3
10068574:	d10a      	bne.n	1006858c <llc_conn_isr+0xb8>
10068576:	0689      	lsls	r1, r1, #26
10068578:	d400      	bmi.n	1006857c <llc_conn_isr+0xa8>
1006857a:	2002      	movs	r0, #2
1006857c:	5c28      	ldrb	r0, [r5, r0]
1006857e:	2806      	cmp	r0, #6
10068580:	d104      	bne.n	1006858c <llc_conn_isr+0xb8>
10068582:	4638      	mov	r0, r7
10068584:	9305      	str	r3, [sp, #20]
10068586:	f7ed ff25 	bl	100563d4 <llc_conn_clr_rx_acl_blocked>
1006858a:	9b05      	ldr	r3, [sp, #20]
1006858c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1006858e:	6810      	ldr	r0, [r2, #0]
10068590:	2140      	movs	r1, #64	@ 0x40
10068592:	4301      	orrs	r1, r0
10068594:	6011      	str	r1, [r2, #0]
10068596:	7818      	ldrb	r0, [r3, #0]
10068598:	7829      	ldrb	r1, [r5, #0]
1006859a:	4301      	orrs	r1, r0
1006859c:	06c8      	lsls	r0, r1, #27
1006859e:	d474      	bmi.n	1006868a <llc_conn_isr+0x1b6>
100685a0:	980c      	ldr	r0, [sp, #48]	@ 0x30
100685a2:	7800      	ldrb	r0, [r0, #0]
100685a4:	06c0      	lsls	r0, r0, #27
100685a6:	d57d      	bpl.n	100686a4 <llc_conn_isr+0x1d0>
100685a8:	e080      	b.n	100686ac <llc_conn_isr+0x1d8>
100685aa:	4638      	mov	r0, r7
100685ac:	f7dd fbee 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
100685b0:	4638      	mov	r0, r7
100685b2:	f7dd fbdf 	bl	10045d74 <BLEPLAT_CNTR_PacketClrIncChan>
100685b6:	a80e      	add	r0, sp, #56	@ 0x38
100685b8:	2600      	movs	r6, #0
100685ba:	7786      	strb	r6, [r0, #30]
100685bc:	7606      	strb	r6, [r0, #24]
100685be:	7746      	strb	r6, [r0, #29]
100685c0:	4cbf      	ldr	r4, [pc, #764]	@ (100688c0 <__arm_cp.0_3>)
100685c2:	6820      	ldr	r0, [r4, #0]
100685c4:	f7dd fba6 	bl	10045d14 <BLEPLAT_CNTR_IntGetIntStatusTimeout>
100685c8:	2800      	cmp	r0, #0
100685ca:	d010      	beq.n	100685ee <llc_conn_isr+0x11a>
100685cc:	2501      	movs	r5, #1
100685ce:	e014      	b.n	100685fa <llc_conn_isr+0x126>
100685d0:	463d      	mov	r5, r7
100685d2:	35a8      	adds	r5, #168	@ 0xa8
100685d4:	f7dc fb1b 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100685d8:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100685da:	7d70      	ldrb	r0, [r6, #21]
100685dc:	f7fa fa1e 	bl	10062a1c <LL_sched_delete_taskslot>
100685e0:	2000      	movs	r0, #0
100685e2:	8028      	strh	r0, [r5, #0]
100685e4:	2113      	movs	r1, #19
100685e6:	7071      	strb	r1, [r6, #1]
100685e8:	8360      	strh	r0, [r4, #26]
100685ea:	4634      	mov	r4, r6
100685ec:	e1e5      	b.n	100689ba <__arm_cp.0_5+0xf2>
100685ee:	6820      	ldr	r0, [r4, #0]
100685f0:	f7dd fb49 	bl	10045c86 <BLEPLAT_CNTR_IntGetIntStatusLenErr>
100685f4:	4605      	mov	r5, r0
100685f6:	1e40      	subs	r0, r0, #1
100685f8:	4185      	sbcs	r5, r0
100685fa:	a80e      	add	r0, sp, #56	@ 0x38
100685fc:	76c5      	strb	r5, [r0, #27]
100685fe:	6820      	ldr	r0, [r4, #0]
10068600:	f7dd fb9f 	bl	10045d42 <BLEPLAT_CNTR_IntGetIntStatusTxOk>
10068604:	9006      	str	r0, [sp, #24]
10068606:	900f      	str	r0, [sp, #60]	@ 0x3c
10068608:	2d00      	cmp	r5, #0
1006860a:	d01f      	beq.n	1006864c <llc_conn_isr+0x178>
1006860c:	f7dc faff 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10068610:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
10068612:	68e8      	ldr	r0, [r5, #12]
10068614:	2800      	cmp	r0, #0
10068616:	d002      	beq.n	1006861e <llc_conn_isr+0x14a>
10068618:	88c1      	ldrh	r1, [r0, #6]
1006861a:	1c49      	adds	r1, r1, #1
1006861c:	80c1      	strh	r1, [r0, #6]
1006861e:	6928      	ldr	r0, [r5, #16]
10068620:	2800      	cmp	r0, #0
10068622:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
10068624:	9e06      	ldr	r6, [sp, #24]
10068626:	d00a      	beq.n	1006863e <llc_conn_isr+0x16a>
10068628:	980d      	ldr	r0, [sp, #52]	@ 0x34
1006862a:	7d40      	ldrb	r0, [r0, #21]
1006862c:	f7dd fdfc 	bl	10046228 <BLEPLAT_CNTR_SmGetRemapChan>
10068630:	0040      	lsls	r0, r0, #1
10068632:	6929      	ldr	r1, [r5, #16]
10068634:	1808      	adds	r0, r1, r0
10068636:	2194      	movs	r1, #148	@ 0x94
10068638:	5a42      	ldrh	r2, [r0, r1]
1006863a:	1c52      	adds	r2, r2, #1
1006863c:	5242      	strh	r2, [r0, r1]
1006863e:	a80e      	add	r0, sp, #56	@ 0x38
10068640:	2501      	movs	r5, #1
10068642:	7605      	strb	r5, [r0, #24]
10068644:	68a0      	ldr	r0, [r4, #8]
10068646:	3408      	adds	r4, #8
10068648:	2300      	movs	r3, #0
1006864a:	e0b9      	b.n	100687c0 <llc_conn_isr+0x2ec>
1006864c:	6820      	ldr	r0, [r4, #0]
1006864e:	f7dd fb56 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
10068652:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10068654:	7a11      	ldrb	r1, [r2, #8]
10068656:	094b      	lsrs	r3, r1, #5
10068658:	2501      	movs	r5, #1
1006865a:	4629      	mov	r1, r5
1006865c:	4399      	bics	r1, r3
1006865e:	ab0e      	add	r3, sp, #56	@ 0x38
10068660:	7699      	strb	r1, [r3, #26]
10068662:	9005      	str	r0, [sp, #20]
10068664:	900e      	str	r0, [sp, #56]	@ 0x38
10068666:	6820      	ldr	r0, [r4, #0]
10068668:	4614      	mov	r4, r2
1006866a:	3408      	adds	r4, #8
1006866c:	f7dd fae7 	bl	10045c3e <BLEPLAT_CNTR_IntGetIntStatusCrcErr>
10068670:	2800      	cmp	r0, #0
10068672:	d06e      	beq.n	10068752 <llc_conn_isr+0x27e>
10068674:	7820      	ldrb	r0, [r4, #0]
10068676:	06c0      	lsls	r0, r0, #27
10068678:	9704      	str	r7, [sp, #16]
1006867a:	d479      	bmi.n	10068770 <llc_conn_isr+0x29c>
1006867c:	f7dd faa6 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10068680:	6820      	ldr	r0, [r4, #0]
10068682:	2110      	movs	r1, #16
10068684:	4301      	orrs	r1, r0
10068686:	6021      	str	r1, [r4, #0]
10068688:	e076      	b.n	10068778 <llc_conn_isr+0x2a4>
1006868a:	9807      	ldr	r0, [sp, #28]
1006868c:	6840      	ldr	r0, [r0, #4]
1006868e:	9005      	str	r0, [sp, #20]
10068690:	f7dc fa7c 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10068694:	6c79      	ldr	r1, [r7, #68]	@ 0x44
10068696:	1a08      	subs	r0, r1, r0
10068698:	9905      	ldr	r1, [sp, #20]
1006869a:	1840      	adds	r0, r0, r1
1006869c:	d402      	bmi.n	100686a4 <llc_conn_isr+0x1d0>
1006869e:	6f79      	ldr	r1, [r7, #116]	@ 0x74
100686a0:	4288      	cmp	r0, r1
100686a2:	d203      	bcs.n	100686ac <llc_conn_isr+0x1d8>
100686a4:	f7dc fab3 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
100686a8:	2001      	movs	r0, #1
100686aa:	9006      	str	r0, [sp, #24]
100686ac:	4638      	mov	r0, r7
100686ae:	f7ed ff86 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
100686b2:	2802      	cmp	r0, #2
100686b4:	d13d      	bne.n	10068732 <llc_conn_isr+0x25e>
100686b6:	980b      	ldr	r0, [sp, #44]	@ 0x2c
100686b8:	6940      	ldr	r0, [r0, #20]
100686ba:	6800      	ldr	r0, [r0, #0]
100686bc:	06c1      	lsls	r1, r0, #27
100686be:	d415      	bmi.n	100686ec <llc_conn_isr+0x218>
100686c0:	0640      	lsls	r0, r0, #25
100686c2:	d536      	bpl.n	10068732 <llc_conn_isr+0x25e>
100686c4:	980d      	ldr	r0, [sp, #52]	@ 0x34
100686c6:	7d40      	ldrb	r0, [r0, #21]
100686c8:	f7dd fced 	bl	100460a6 <BLEPLAT_CNTR_SmEncOff>
100686cc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100686ce:	6958      	ldr	r0, [r3, #20]
100686d0:	6801      	ldr	r1, [r0, #0]
100686d2:	2240      	movs	r2, #64	@ 0x40
100686d4:	4391      	bics	r1, r2
100686d6:	6001      	str	r1, [r0, #0]
100686d8:	6898      	ldr	r0, [r3, #8]
100686da:	2108      	movs	r1, #8
100686dc:	4388      	bics	r0, r1
100686de:	6098      	str	r0, [r3, #8]
100686e0:	2012      	movs	r0, #18
100686e2:	f7fc fda5 	bl	10065230 <tsk_notify_idx>
100686e6:	f7da f8f6 	bl	100428d6 <BLE_STACK_ProcessRequest>
100686ea:	e022      	b.n	10068732 <llc_conn_isr+0x25e>
100686ec:	9505      	str	r5, [sp, #20]
100686ee:	2000      	movs	r0, #0
100686f0:	900f      	str	r0, [sp, #60]	@ 0x3c
100686f2:	900e      	str	r0, [sp, #56]	@ 0x38
100686f4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
100686f6:	7d68      	ldrb	r0, [r5, #21]
100686f8:	f7dd fce9 	bl	100460ce <BLEPLAT_CNTR_SmEncOn>
100686fc:	7d68      	ldrb	r0, [r5, #21]
100686fe:	a90e      	add	r1, sp, #56	@ 0x38
10068700:	f7dd fec6 	bl	10046490 <BLEPLAT_CNTR_SmSetRxCount>
10068704:	7828      	ldrb	r0, [r5, #0]
10068706:	2803      	cmp	r0, #3
10068708:	d103      	bne.n	10068712 <llc_conn_isr+0x23e>
1006870a:	980d      	ldr	r0, [sp, #52]	@ 0x34
1006870c:	7d40      	ldrb	r0, [r0, #21]
1006870e:	f7dd fee2 	bl	100464d6 <BLEPLAT_CNTR_SmSetRxCountDirectionBit>
10068712:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10068714:	6958      	ldr	r0, [r3, #20]
10068716:	6801      	ldr	r1, [r0, #0]
10068718:	2210      	movs	r2, #16
1006871a:	4391      	bics	r1, r2
1006871c:	6001      	str	r1, [r0, #0]
1006871e:	6898      	ldr	r0, [r3, #8]
10068720:	2108      	movs	r1, #8
10068722:	4301      	orrs	r1, r0
10068724:	6099      	str	r1, [r3, #8]
10068726:	2012      	movs	r0, #18
10068728:	f7fc fd82 	bl	10065230 <tsk_notify_idx>
1006872c:	f7da f8d3 	bl	100428d6 <BLE_STACK_ProcessRequest>
10068730:	9d05      	ldr	r5, [sp, #20]
10068732:	42a5      	cmp	r5, r4
10068734:	990a      	ldr	r1, [sp, #40]	@ 0x28
10068736:	d001      	beq.n	1006873c <llc_conn_isr+0x268>
10068738:	8a88      	ldrh	r0, [r1, #20]
1006873a:	82c8      	strh	r0, [r1, #22]
1006873c:	9806      	ldr	r0, [sp, #24]
1006873e:	2800      	cmp	r0, #0
10068740:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
10068742:	d000      	beq.n	10068746 <llc_conn_isr+0x272>
10068744:	e136      	b.n	100689b4 <__arm_cp.0_5+0xec>
10068746:	9807      	ldr	r0, [sp, #28]
10068748:	6801      	ldr	r1, [r0, #0]
1006874a:	4630      	mov	r0, r6
1006874c:	f7dd fc73 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
10068750:	e135      	b.n	100689be <__arm_cp.0_5+0xf6>
10068752:	485b      	ldr	r0, [pc, #364]	@ (100688c0 <__arm_cp.0_3>)
10068754:	6800      	ldr	r0, [r0, #0]
10068756:	f7dd fa8a 	bl	10045c6e <BLEPLAT_CNTR_IntGetIntStatusEncErr>
1006875a:	2800      	cmp	r0, #0
1006875c:	d026      	beq.n	100687ac <llc_conn_isr+0x2d8>
1006875e:	9805      	ldr	r0, [sp, #20]
10068760:	2800      	cmp	r0, #0
10068762:	d023      	beq.n	100687ac <llc_conn_isr+0x2d8>
10068764:	f7dc fa53 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10068768:	a80e      	add	r0, sp, #56	@ 0x38
1006876a:	233d      	movs	r3, #61	@ 0x3d
1006876c:	7783      	strb	r3, [r0, #30]
1006876e:	e023      	b.n	100687b8 <llc_conn_isr+0x2e4>
10068770:	f7dc fa4d 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10068774:	a80e      	add	r0, sp, #56	@ 0x38
10068776:	7605      	strb	r5, [r0, #24]
10068778:	4637      	mov	r7, r6
1006877a:	980a      	ldr	r0, [sp, #40]	@ 0x28
1006877c:	68c0      	ldr	r0, [r0, #12]
1006877e:	2800      	cmp	r0, #0
10068780:	d002      	beq.n	10068788 <llc_conn_isr+0x2b4>
10068782:	8841      	ldrh	r1, [r0, #2]
10068784:	1c49      	adds	r1, r1, #1
10068786:	8041      	strh	r1, [r0, #2]
10068788:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1006878a:	6930      	ldr	r0, [r6, #16]
1006878c:	2800      	cmp	r0, #0
1006878e:	d00a      	beq.n	100687a6 <llc_conn_isr+0x2d2>
10068790:	980d      	ldr	r0, [sp, #52]	@ 0x34
10068792:	7d40      	ldrb	r0, [r0, #21]
10068794:	f7dd fd48 	bl	10046228 <BLEPLAT_CNTR_SmGetRemapChan>
10068798:	0040      	lsls	r0, r0, #1
1006879a:	6931      	ldr	r1, [r6, #16]
1006879c:	1808      	adds	r0, r1, r0
1006879e:	214a      	movs	r1, #74	@ 0x4a
100687a0:	5a42      	ldrh	r2, [r0, r1]
100687a2:	1c52      	adds	r2, r2, #1
100687a4:	5242      	strh	r2, [r0, r1]
100687a6:	463b      	mov	r3, r7
100687a8:	9f04      	ldr	r7, [sp, #16]
100687aa:	e005      	b.n	100687b8 <llc_conn_isr+0x2e4>
100687ac:	6820      	ldr	r0, [r4, #0]
100687ae:	2110      	movs	r1, #16
100687b0:	4388      	bics	r0, r1
100687b2:	6020      	str	r0, [r4, #0]
100687b4:	2300      	movs	r3, #0
100687b6:	461d      	mov	r5, r3
100687b8:	9e06      	ldr	r6, [sp, #24]
100687ba:	6821      	ldr	r1, [r4, #0]
100687bc:	2020      	movs	r0, #32
100687be:	4308      	orrs	r0, r1
100687c0:	4271      	negs	r1, r6
100687c2:	4171      	adcs	r1, r6
100687c4:	0189      	lsls	r1, r1, #6
100687c6:	2240      	movs	r2, #64	@ 0x40
100687c8:	4390      	bics	r0, r2
100687ca:	1840      	adds	r0, r0, r1
100687cc:	940c      	str	r4, [sp, #48]	@ 0x30
100687ce:	6020      	str	r0, [r4, #0]
100687d0:	2d00      	cmp	r5, #0
100687d2:	d025      	beq.n	10068820 <llc_conn_isr+0x34c>
100687d4:	a80e      	add	r0, sp, #56	@ 0x38
100687d6:	7f80      	ldrb	r0, [r0, #30]
100687d8:	2800      	cmp	r0, #0
100687da:	d169      	bne.n	100688b0 <llc_conn_isr+0x3dc>
100687dc:	a80e      	add	r0, sp, #56	@ 0x38
100687de:	7ec0      	ldrb	r0, [r0, #27]
100687e0:	2800      	cmp	r0, #0
100687e2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
100687e4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
100687e6:	d000      	beq.n	100687ea <llc_conn_isr+0x316>
100687e8:	e0dc      	b.n	100689a4 <__arm_cp.0_5+0xdc>
100687ea:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
100687ec:	2800      	cmp	r0, #0
100687ee:	d100      	bne.n	100687f2 <llc_conn_isr+0x31e>
100687f0:	e0b6      	b.n	10068960 <__arm_cp.0_5+0x98>
100687f2:	4e34      	ldr	r6, [pc, #208]	@ (100688c4 <__arm_cp.0_3+0x4>)
100687f4:	6830      	ldr	r0, [r6, #0]
100687f6:	21d8      	movs	r1, #216	@ 0xd8
100687f8:	5c41      	ldrb	r1, [r0, r1]
100687fa:	2901      	cmp	r1, #1
100687fc:	d14b      	bne.n	10068896 <llc_conn_isr+0x3c2>
100687fe:	6805      	ldr	r5, [r0, #0]
10068800:	f7ec ff10 	bl	10055624 <phy_upd_csr_ucfg_weak>
10068804:	2801      	cmp	r0, #1
10068806:	d000      	beq.n	1006880a <llc_conn_isr+0x336>
10068808:	e094      	b.n	10068934 <__arm_cp.0_5+0x6c>
1006880a:	7920      	ldrb	r0, [r4, #4]
1006880c:	210e      	movs	r1, #14
1006880e:	4341      	muls	r1, r0
10068810:	6830      	ldr	r0, [r6, #0]
10068812:	229c      	movs	r2, #156	@ 0x9c
10068814:	5880      	ldr	r0, [r0, r2]
10068816:	6bc0      	ldr	r0, [r0, #60]	@ 0x3c
10068818:	6940      	ldr	r0, [r0, #20]
1006881a:	1840      	adds	r0, r0, r1
1006881c:	79c0      	ldrb	r0, [r0, #7]
1006881e:	e08a      	b.n	10068936 <__arm_cp.0_5+0x6e>
10068820:	461c      	mov	r4, r3
10068822:	9202      	str	r2, [sp, #8]
10068824:	4638      	mov	r0, r7
10068826:	3014      	adds	r0, #20
10068828:	f7dd fabd 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
1006882c:	4605      	mov	r5, r0
1006882e:	9011      	str	r0, [sp, #68]	@ 0x44
10068830:	7801      	ldrb	r1, [r0, #0]
10068832:	2003      	movs	r0, #3
10068834:	4001      	ands	r1, r0
10068836:	ae0e      	add	r6, sp, #56	@ 0x38
10068838:	9103      	str	r1, [sp, #12]
1006883a:	7571      	strb	r1, [r6, #21]
1006883c:	7829      	ldrb	r1, [r5, #0]
1006883e:	0689      	lsls	r1, r1, #26
10068840:	d400      	bmi.n	10068844 <llc_conn_isr+0x370>
10068842:	2002      	movs	r0, #2
10068844:	5c28      	ldrb	r0, [r5, r0]
10068846:	75f0      	strb	r0, [r6, #23]
10068848:	f7f4 fb0e 	bl	1005ce68 <ll_cpe_get_cpid_from_opcode>
1006884c:	7530      	strb	r0, [r6, #20]
1006884e:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
10068850:	6679      	str	r1, [r7, #100]	@ 0x64
10068852:	2301      	movs	r3, #1
10068854:	9906      	ldr	r1, [sp, #24]
10068856:	2900      	cmp	r1, #0
10068858:	d009      	beq.n	1006886e <llc_conn_isr+0x39a>
1006885a:	990c      	ldr	r1, [sp, #48]	@ 0x30
1006885c:	6809      	ldr	r1, [r1, #0]
1006885e:	4019      	ands	r1, r3
10068860:	d005      	beq.n	1006886e <llc_conn_isr+0x39a>
10068862:	2616      	movs	r6, #22
10068864:	f7dc f9d3 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10068868:	a80e      	add	r0, sp, #56	@ 0x38
1006886a:	7786      	strb	r6, [r0, #30]
1006886c:	e020      	b.n	100688b0 <llc_conn_isr+0x3dc>
1006886e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10068870:	6949      	ldr	r1, [r1, #20]
10068872:	7849      	ldrb	r1, [r1, #1]
10068874:	07c9      	lsls	r1, r1, #31
10068876:	9a05      	ldr	r2, [sp, #20]
10068878:	d018      	beq.n	100688ac <llc_conn_isr+0x3d8>
1006887a:	2a00      	cmp	r2, #0
1006887c:	d016      	beq.n	100688ac <llc_conn_isr+0x3d8>
1006887e:	9903      	ldr	r1, [sp, #12]
10068880:	2903      	cmp	r1, #3
10068882:	d10e      	bne.n	100688a2 <llc_conn_isr+0x3ce>
10068884:	263d      	movs	r6, #61	@ 0x3d
10068886:	2814      	cmp	r0, #20
10068888:	d8ec      	bhi.n	10068864 <llc_conn_isr+0x390>
1006888a:	4619      	mov	r1, r3
1006888c:	4081      	lsls	r1, r0
1006888e:	480e      	ldr	r0, [pc, #56]	@ (100688c8 <__arm_cp.0_5>)
10068890:	4201      	tst	r1, r0
10068892:	d10b      	bne.n	100688ac <llc_conn_isr+0x3d8>
10068894:	e7e6      	b.n	10068864 <llc_conn_isr+0x390>
10068896:	f7dc f9ba 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
1006889a:	a80e      	add	r0, sp, #56	@ 0x38
1006889c:	2101      	movs	r1, #1
1006889e:	7601      	strb	r1, [r0, #24]
100688a0:	e05d      	b.n	1006895e <__arm_cp.0_5+0x96>
100688a2:	7868      	ldrb	r0, [r5, #1]
100688a4:	2800      	cmp	r0, #0
100688a6:	d001      	beq.n	100688ac <llc_conn_isr+0x3d8>
100688a8:	263d      	movs	r6, #61	@ 0x3d
100688aa:	e7db      	b.n	10068864 <llc_conn_isr+0x390>
100688ac:	2c00      	cmp	r4, #0
100688ae:	d00d      	beq.n	100688cc <__arm_cp.0_5+0x4>
100688b0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
100688b2:	7d60      	ldrb	r0, [r4, #21]
100688b4:	f7fa f8b2 	bl	10062a1c <LL_sched_delete_taskslot>
100688b8:	a80e      	add	r0, sp, #56	@ 0x38
100688ba:	7f80      	ldrb	r0, [r0, #30]
100688bc:	7060      	strb	r0, [r4, #1]
100688be:	e07c      	b.n	100689ba <__arm_cp.0_5+0xf2>

100688c0 <__arm_cp.0_3>:
100688c0:	20000890 	.word	0x20000890
100688c4:	20000894 	.word	0x20000894

100688c8 <__arm_cp.0_5>:
100688c8:	00100012 	.word	0x00100012
100688cc:	9301      	str	r3, [sp, #4]
100688ce:	4638      	mov	r0, r7
100688d0:	4614      	mov	r4, r2
100688d2:	f7dd fa68 	bl	10045da6 <BLEPLAT_CNTR_PacketGetDataPtr>
100688d6:	4606      	mov	r6, r0
100688d8:	a80e      	add	r0, sp, #56	@ 0x38
100688da:	2100      	movs	r1, #0
100688dc:	7701      	strb	r1, [r0, #28]
100688de:	7641      	strb	r1, [r0, #25]
100688e0:	9612      	str	r6, [sp, #72]	@ 0x48
100688e2:	9106      	str	r1, [sp, #24]
100688e4:	9110      	str	r1, [sp, #64]	@ 0x40
100688e6:	2c00      	cmp	r4, #0
100688e8:	980d      	ldr	r0, [sp, #52]	@ 0x34
100688ea:	d100      	bne.n	100688ee <__arm_cp.0_5+0x26>
100688ec:	e147      	b.n	10068b7e <__arm_cp.0_5+0x2b6>
100688ee:	7800      	ldrb	r0, [r0, #0]
100688f0:	2802      	cmp	r0, #2
100688f2:	d113      	bne.n	1006891c <__arm_cp.0_5+0x54>
100688f4:	7828      	ldrb	r0, [r5, #0]
100688f6:	7831      	ldrb	r1, [r6, #0]
100688f8:	4301      	orrs	r1, r0
100688fa:	06c8      	lsls	r0, r1, #27
100688fc:	d509      	bpl.n	10068912 <__arm_cp.0_5+0x4a>
100688fe:	6d3c      	ldr	r4, [r7, #80]	@ 0x50
10068900:	f7dc f944 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
10068904:	6c79      	ldr	r1, [r7, #68]	@ 0x44
10068906:	1a08      	subs	r0, r1, r0
10068908:	1900      	adds	r0, r0, r4
1006890a:	d402      	bmi.n	10068912 <__arm_cp.0_5+0x4a>
1006890c:	6f79      	ldr	r1, [r7, #116]	@ 0x74
1006890e:	4288      	cmp	r0, r1
10068910:	d204      	bcs.n	1006891c <__arm_cp.0_5+0x54>
10068912:	f7dc f97c 	bl	10044c0e <BLEPLAT_ClearRadioTimerValue>
10068916:	a80e      	add	r0, sp, #56	@ 0x38
10068918:	2101      	movs	r1, #1
1006891a:	7601      	strb	r1, [r0, #24]
1006891c:	786c      	ldrb	r4, [r5, #1]
1006891e:	2c00      	cmp	r4, #0
10068920:	d100      	bne.n	10068924 <__arm_cp.0_5+0x5c>
10068922:	e12c      	b.n	10068b7e <__arm_cp.0_5+0x2b6>
10068924:	980c      	ldr	r0, [sp, #48]	@ 0x30
10068926:	6800      	ldr	r0, [r0, #0]
10068928:	2608      	movs	r6, #8
1006892a:	4006      	ands	r6, r0
1006892c:	d000      	beq.n	10068930 <__arm_cp.0_5+0x68>
1006892e:	e095      	b.n	10068a5c <__arm_cp.0_5+0x194>
10068930:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
10068932:	e0aa      	b.n	10068a8a <__arm_cp.0_5+0x1c2>
10068934:	2001      	movs	r0, #1
10068936:	6c7e      	ldr	r6, [r7, #68]	@ 0x44
10068938:	f7dd fed5 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
1006893c:	1a28      	subs	r0, r5, r0
1006893e:	6478      	str	r0, [r7, #68]	@ 0x44
10068940:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
10068942:	1b89      	subs	r1, r1, r6
10068944:	1808      	adds	r0, r1, r0
10068946:	9a07      	ldr	r2, [sp, #28]
10068948:	6851      	ldr	r1, [r2, #4]
1006894a:	4281      	cmp	r1, r0
1006894c:	d901      	bls.n	10068952 <__arm_cp.0_5+0x8a>
1006894e:	1a08      	subs	r0, r1, r0
10068950:	6050      	str	r0, [r2, #4]
10068952:	2000      	movs	r0, #0
10068954:	64b8      	str	r0, [r7, #72]	@ 0x48
10068956:	6378      	str	r0, [r7, #52]	@ 0x34
10068958:	4638      	mov	r0, r7
1006895a:	f7ef f81f 	bl	1005799c <llc_conn_update_receive_window>
1006895e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10068960:	a80e      	add	r0, sp, #56	@ 0x38
10068962:	7e80      	ldrb	r0, [r0, #26]
10068964:	2801      	cmp	r0, #1
10068966:	d102      	bne.n	1006896e <__arm_cp.0_5+0xa6>
10068968:	6eb8      	ldr	r0, [r7, #104]	@ 0x68
1006896a:	6678      	str	r0, [r7, #100]	@ 0x64
1006896c:	e004      	b.n	10068978 <__arm_cp.0_5+0xb0>
1006896e:	2011      	movs	r0, #17
10068970:	f7fc fc5e 	bl	10065230 <tsk_notify_idx>
10068974:	f7d9 ffaf 	bl	100428d6 <BLE_STACK_ProcessRequest>
10068978:	980a      	ldr	r0, [sp, #40]	@ 0x28
1006897a:	68c0      	ldr	r0, [r0, #12]
1006897c:	2800      	cmp	r0, #0
1006897e:	d002      	beq.n	10068986 <__arm_cp.0_5+0xbe>
10068980:	8801      	ldrh	r1, [r0, #0]
10068982:	1c49      	adds	r1, r1, #1
10068984:	8001      	strh	r1, [r0, #0]
10068986:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10068988:	6930      	ldr	r0, [r6, #16]
1006898a:	2800      	cmp	r0, #0
1006898c:	d007      	beq.n	1006899e <__arm_cp.0_5+0xd6>
1006898e:	7d60      	ldrb	r0, [r4, #21]
10068990:	f7dd fc4a 	bl	10046228 <BLEPLAT_CNTR_SmGetRemapChan>
10068994:	0040      	lsls	r0, r0, #1
10068996:	6931      	ldr	r1, [r6, #16]
10068998:	5a0a      	ldrh	r2, [r1, r0]
1006899a:	1c52      	adds	r2, r2, #1
1006899c:	520a      	strh	r2, [r1, r0]
1006899e:	7920      	ldrb	r0, [r4, #4]
100689a0:	f7f6 ff62 	bl	1005f868 <LLC_pcl_incr_rx_packets_ucfg_weak>
100689a4:	a80e      	add	r0, sp, #56	@ 0x38
100689a6:	7e00      	ldrb	r0, [r0, #24]
100689a8:	2801      	cmp	r0, #1
100689aa:	d108      	bne.n	100689be <__arm_cp.0_5+0xf6>
100689ac:	6828      	ldr	r0, [r5, #0]
100689ae:	2110      	movs	r1, #16
100689b0:	4388      	bics	r0, r1
100689b2:	6028      	str	r0, [r5, #0]
100689b4:	4638      	mov	r0, r7
100689b6:	f000 fa82 	bl	10068ebe <llc_conn_close_event>
100689ba:	2601      	movs	r6, #1
100689bc:	e000      	b.n	100689c0 <__arm_cp.0_5+0xf8>
100689be:	2600      	movs	r6, #0
100689c0:	7d65      	ldrb	r5, [r4, #21]
100689c2:	4628      	mov	r0, r5
100689c4:	f7dd fc1f 	bl	10046206 <BLEPLAT_CNTR_SmGetMode>
100689c8:	990c      	ldr	r1, [sp, #48]	@ 0x30
100689ca:	6809      	ldr	r1, [r1, #0]
100689cc:	2800      	cmp	r0, #0
100689ce:	d005      	beq.n	100689dc <__arm_cp.0_5+0x114>
100689d0:	0748      	lsls	r0, r1, #29
100689d2:	d405      	bmi.n	100689e0 <__arm_cp.0_5+0x118>
100689d4:	4628      	mov	r0, r5
100689d6:	f7dd fb66 	bl	100460a6 <BLEPLAT_CNTR_SmEncOff>
100689da:	e004      	b.n	100689e6 <__arm_cp.0_5+0x11e>
100689dc:	0708      	lsls	r0, r1, #28
100689de:	d5f9      	bpl.n	100689d4 <__arm_cp.0_5+0x10c>
100689e0:	4628      	mov	r0, r5
100689e2:	f7dd fb74 	bl	100460ce <BLEPLAT_CNTR_SmEncOn>
100689e6:	2e00      	cmp	r6, #0
100689e8:	d01d      	beq.n	10068a26 <__arm_cp.0_5+0x15e>
100689ea:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
100689ec:	69e5      	ldr	r5, [r4, #28]
100689ee:	2d00      	cmp	r5, #0
100689f0:	d015      	beq.n	10068a1e <__arm_cp.0_5+0x156>
100689f2:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
100689f4:	7d70      	ldrb	r0, [r6, #21]
100689f6:	f7dd fbe1 	bl	100461bc <BLEPLAT_CNTR_SmGetEncKeyPtr>
100689fa:	4602      	mov	r2, r0
100689fc:	4629      	mov	r1, r5
100689fe:	3110      	adds	r1, #16
10068a00:	2301      	movs	r3, #1
10068a02:	4628      	mov	r0, r5
10068a04:	f7fc ff0a 	bl	1006581c <BLEPLAT_aes128_encrypt>
10068a08:	7d70      	ldrb	r0, [r6, #21]
10068a0a:	f7dd fbc3 	bl	10046194 <BLEPLAT_CNTR_SmGetEncIvPtr>
10068a0e:	4601      	mov	r1, r0
10068a10:	3520      	adds	r5, #32
10068a12:	2208      	movs	r2, #8
10068a14:	4628      	mov	r0, r5
10068a16:	f7fc fd93 	bl	10065540 <char_copy>
10068a1a:	2000      	movs	r0, #0
10068a1c:	61e0      	str	r0, [r4, #28]
10068a1e:	9808      	ldr	r0, [sp, #32]
10068a20:	f7f9 fd3e 	bl	100624a0 <LL_sched_engine>
10068a24:	e001      	b.n	10068a2a <__arm_cp.0_5+0x162>
10068a26:	f7dd f8d1 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10068a2a:	9809      	ldr	r0, [sp, #36]	@ 0x24
10068a2c:	2800      	cmp	r0, #0
10068a2e:	d10c      	bne.n	10068a4a <__arm_cp.0_5+0x182>
10068a30:	f7dc f89c 	bl	10044b6c <BLEPLAT_CalculateRSSI>
10068a34:	287f      	cmp	r0, #127	@ 0x7f
10068a36:	d005      	beq.n	10068a44 <__arm_cp.0_5+0x17c>
10068a38:	4605      	mov	r5, r0
10068a3a:	f7f9 fc19 	bl	10062270 <get_rf_rx_path_compensation_db>
10068a3e:	1828      	adds	r0, r5, r0
10068a40:	990a      	ldr	r1, [sp, #40]	@ 0x28
10068a42:	7008      	strb	r0, [r1, #0]
10068a44:	4638      	mov	r0, r7
10068a46:	f7f6 ff10 	bl	1005f86a <LLC_pcl_update_avg_rssi_ucfg_weak>
10068a4a:	2401      	movs	r4, #1
10068a4c:	4620      	mov	r0, r4
10068a4e:	f7fc fc17 	bl	10065280 <tsk_signal_resource_idx>
10068a52:	f7d9 ff40 	bl	100428d6 <BLE_STACK_ProcessRequest>
10068a56:	4620      	mov	r0, r4
10068a58:	b019      	add	sp, #100	@ 0x64
10068a5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
10068a5c:	f7ec fd14 	bl	10055488 <data_length_extension_csr_ucfg_weak>
10068a60:	2801      	cmp	r0, #1
10068a62:	d001      	beq.n	10068a68 <__arm_cp.0_5+0x1a0>
10068a64:	201c      	movs	r0, #28
10068a66:	e000      	b.n	10068a6a <__arm_cp.0_5+0x1a2>
10068a68:	20fc      	movs	r0, #252	@ 0xfc
10068a6a:	4220      	tst	r0, r4
10068a6c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
10068a6e:	d00c      	beq.n	10068a8a <__arm_cp.0_5+0x1c2>
10068a70:	7868      	ldrb	r0, [r5, #1]
10068a72:	1f00      	subs	r0, r0, #4
10068a74:	7068      	strb	r0, [r5, #1]
10068a76:	2002      	movs	r0, #2
10068a78:	71a0      	strb	r0, [r4, #6]
10068a7a:	2012      	movs	r0, #18
10068a7c:	f7fc fbd8 	bl	10065230 <tsk_notify_idx>
10068a80:	f7d9 ff29 	bl	100428d6 <BLE_STACK_ProcessRequest>
10068a84:	a80e      	add	r0, sp, #56	@ 0x38
10068a86:	7d40      	ldrb	r0, [r0, #21]
10068a88:	9003      	str	r0, [sp, #12]
10068a8a:	9803      	ldr	r0, [sp, #12]
10068a8c:	2803      	cmp	r0, #3
10068a8e:	d110      	bne.n	10068ab2 <__arm_cp.0_5+0x1ea>
10068a90:	a80e      	add	r0, sp, #56	@ 0x38
10068a92:	7dc5      	ldrb	r5, [r0, #23]
10068a94:	2d02      	cmp	r5, #2
10068a96:	d117      	bne.n	10068ac8 <__arm_cp.0_5+0x200>
10068a98:	9811      	ldr	r0, [sp, #68]	@ 0x44
10068a9a:	7840      	ldrb	r0, [r0, #1]
10068a9c:	2802      	cmp	r0, #2
10068a9e:	d113      	bne.n	10068ac8 <__arm_cp.0_5+0x200>
10068aa0:	a80e      	add	r0, sp, #56	@ 0x38
10068aa2:	2101      	movs	r1, #1
10068aa4:	7701      	strb	r1, [r0, #28]
10068aa6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10068aa8:	6828      	ldr	r0, [r5, #0]
10068aaa:	2102      	movs	r1, #2
10068aac:	4301      	orrs	r1, r0
10068aae:	6029      	str	r1, [r5, #0]
10068ab0:	e042      	b.n	10068b38 <__arm_cp.0_5+0x270>
10068ab2:	980d      	ldr	r0, [sp, #52]	@ 0x34
10068ab4:	7800      	ldrb	r0, [r0, #0]
10068ab6:	2803      	cmp	r0, #3
10068ab8:	d117      	bne.n	10068aea <__arm_cp.0_5+0x222>
10068aba:	7a20      	ldrb	r0, [r4, #8]
10068abc:	2800      	cmp	r0, #0
10068abe:	d014      	beq.n	10068aea <__arm_cp.0_5+0x222>
10068ac0:	2002      	movs	r0, #2
10068ac2:	9910      	ldr	r1, [sp, #64]	@ 0x40
10068ac4:	4301      	orrs	r1, r0
10068ac6:	e04a      	b.n	10068b5e <__arm_cp.0_5+0x296>
10068ac8:	4638      	mov	r0, r7
10068aca:	f7ed fd66 	bl	1005659a <llc_conn_get_rx_ctrl_pdu_full>
10068ace:	2800      	cmp	r0, #0
10068ad0:	d021      	beq.n	10068b16 <__arm_cp.0_5+0x24e>
10068ad2:	980d      	ldr	r0, [sp, #52]	@ 0x34
10068ad4:	7d40      	ldrb	r0, [r0, #21]
10068ad6:	f7dd fdf7 	bl	100466c8 <BLEPLAT_CNTR_SmToggleNesn>
10068ada:	2e00      	cmp	r6, #0
10068adc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10068ade:	d02b      	beq.n	10068b38 <__arm_cp.0_5+0x270>
10068ae0:	980d      	ldr	r0, [sp, #52]	@ 0x34
10068ae2:	7d40      	ldrb	r0, [r0, #21]
10068ae4:	f000 fa61 	bl	10068faa <llc_conn_decrement_enc_count_rx>
10068ae8:	e026      	b.n	10068b38 <__arm_cp.0_5+0x270>
10068aea:	9811      	ldr	r0, [sp, #68]	@ 0x44
10068aec:	7846      	ldrb	r6, [r0, #1]
10068aee:	f7ec fccb 	bl	10055488 <data_length_extension_csr_ucfg_weak>
10068af2:	2801      	cmp	r0, #1
10068af4:	d001      	beq.n	10068afa <__arm_cp.0_5+0x232>
10068af6:	251f      	movs	r5, #31
10068af8:	e001      	b.n	10068afe <__arm_cp.0_5+0x236>
10068afa:	9806      	ldr	r0, [sp, #24]
10068afc:	43c5      	mvns	r5, r0
10068afe:	4035      	ands	r5, r6
10068b00:	0628      	lsls	r0, r5, #24
10068b02:	d01e      	beq.n	10068b42 <__arm_cp.0_5+0x27a>
10068b04:	9806      	ldr	r0, [sp, #24]
10068b06:	67b8      	str	r0, [r7, #120]	@ 0x78
10068b08:	f7e7 f95c 	bl	1004fdc4 <isr_Acl_Data_Indication_Queue_Full>
10068b0c:	2800      	cmp	r0, #0
10068b0e:	d01b      	beq.n	10068b48 <__arm_cp.0_5+0x280>
10068b10:	2002      	movs	r0, #2
10068b12:	9010      	str	r0, [sp, #64]	@ 0x40
10068b14:	e026      	b.n	10068b64 <__arm_cp.0_5+0x29c>
10068b16:	980d      	ldr	r0, [sp, #52]	@ 0x34
10068b18:	7800      	ldrb	r0, [r0, #0]
10068b1a:	2803      	cmp	r0, #3
10068b1c:	d108      	bne.n	10068b30 <__arm_cp.0_5+0x268>
10068b1e:	2d27      	cmp	r5, #39	@ 0x27
10068b20:	d106      	bne.n	10068b30 <__arm_cp.0_5+0x268>
10068b22:	9811      	ldr	r0, [sp, #68]	@ 0x44
10068b24:	7840      	ldrb	r0, [r0, #1]
10068b26:	280b      	cmp	r0, #11
10068b28:	d102      	bne.n	10068b30 <__arm_cp.0_5+0x268>
10068b2a:	a80e      	add	r0, sp, #56	@ 0x38
10068b2c:	2101      	movs	r1, #1
10068b2e:	7741      	strb	r1, [r0, #29]
10068b30:	a80e      	add	r0, sp, #56	@ 0x38
10068b32:	2101      	movs	r1, #1
10068b34:	7641      	strb	r1, [r0, #25]
10068b36:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
10068b38:	6828      	ldr	r0, [r5, #0]
10068b3a:	2180      	movs	r1, #128	@ 0x80
10068b3c:	4301      	orrs	r1, r0
10068b3e:	6029      	str	r1, [r5, #0]
10068b40:	e014      	b.n	10068b6c <__arm_cp.0_5+0x2a4>
10068b42:	9806      	ldr	r0, [sp, #24]
10068b44:	9010      	str	r0, [sp, #64]	@ 0x40
10068b46:	e011      	b.n	10068b6c <__arm_cp.0_5+0x2a4>
10068b48:	8f79      	ldrh	r1, [r7, #58]	@ 0x3a
10068b4a:	b2ea      	uxtb	r2, r5
10068b4c:	9801      	ldr	r0, [sp, #4]
10068b4e:	f7e7 fa03 	bl	1004ff58 <ACL_pkt_get>
10068b52:	67b8      	str	r0, [r7, #120]	@ 0x78
10068b54:	2800      	cmp	r0, #0
10068b56:	d001      	beq.n	10068b5c <__arm_cp.0_5+0x294>
10068b58:	9901      	ldr	r1, [sp, #4]
10068b5a:	e000      	b.n	10068b5e <__arm_cp.0_5+0x296>
10068b5c:	2102      	movs	r1, #2
10068b5e:	9110      	str	r1, [sp, #64]	@ 0x40
10068b60:	0788      	lsls	r0, r1, #30
10068b62:	d503      	bpl.n	10068b6c <__arm_cp.0_5+0x2a4>
10068b64:	980d      	ldr	r0, [sp, #52]	@ 0x34
10068b66:	7d40      	ldrb	r0, [r0, #21]
10068b68:	f7dd fdae 	bl	100466c8 <BLEPLAT_CNTR_SmToggleNesn>
10068b6c:	9811      	ldr	r0, [sp, #68]	@ 0x44
10068b6e:	7800      	ldrb	r0, [r0, #0]
10068b70:	8aa1      	ldrh	r1, [r4, #20]
10068b72:	82e1      	strh	r1, [r4, #22]
10068b74:	2120      	movs	r1, #32
10068b76:	4001      	ands	r1, r0
10068b78:	a80e      	add	r0, sp, #56	@ 0x38
10068b7a:	7581      	strb	r1, [r0, #22]
10068b7c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10068b7e:	2101      	movs	r1, #1
10068b80:	4638      	mov	r0, r7
10068b82:	9105      	str	r1, [sp, #20]
10068b84:	f7ed fcee 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
10068b88:	4605      	mov	r5, r0
10068b8a:	463b      	mov	r3, r7
10068b8c:	3328      	adds	r3, #40	@ 0x28
10068b8e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10068b90:	6801      	ldr	r1, [r0, #0]
10068b92:	2900      	cmp	r1, #0
10068b94:	d011      	beq.n	10068bba <__arm_cp.0_5+0x2f2>
10068b96:	7a08      	ldrb	r0, [r1, #8]
10068b98:	0700      	lsls	r0, r0, #28
10068b9a:	d50e      	bpl.n	10068bba <__arm_cp.0_5+0x2f2>
10068b9c:	69c8      	ldr	r0, [r1, #28]
10068b9e:	2800      	cmp	r0, #0
10068ba0:	d00b      	beq.n	10068bba <__arm_cp.0_5+0x2f2>
10068ba2:	42ae      	cmp	r6, r5
10068ba4:	d009      	beq.n	10068bba <__arm_cp.0_5+0x2f2>
10068ba6:	429e      	cmp	r6, r3
10068ba8:	d007      	beq.n	10068bba <__arm_cp.0_5+0x2f2>
10068baa:	460c      	mov	r4, r1
10068bac:	990c      	ldr	r1, [sp, #48]	@ 0x30
10068bae:	6808      	ldr	r0, [r1, #0]
10068bb0:	9a02      	ldr	r2, [sp, #8]
10068bb2:	4390      	bics	r0, r2
10068bb4:	6008      	str	r0, [r1, #0]
10068bb6:	4621      	mov	r1, r4
10068bb8:	e003      	b.n	10068bc2 <__arm_cp.0_5+0x2fa>
10068bba:	980f      	ldr	r0, [sp, #60]	@ 0x3c
10068bbc:	2800      	cmp	r0, #0
10068bbe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
10068bc0:	d017      	beq.n	10068bf2 <__arm_cp.0_5+0x32a>
10068bc2:	42ae      	cmp	r6, r5
10068bc4:	9303      	str	r3, [sp, #12]
10068bc6:	d018      	beq.n	10068bfa <__arm_cp.0_5+0x332>
10068bc8:	429e      	cmp	r6, r3
10068bca:	d025      	beq.n	10068c18 <__arm_cp.0_5+0x350>
10068bcc:	6948      	ldr	r0, [r1, #20]
10068bce:	6188      	str	r0, [r1, #24]
10068bd0:	460e      	mov	r6, r1
10068bd2:	7b09      	ldrb	r1, [r1, #12]
10068bd4:	9d06      	ldr	r5, [sp, #24]
10068bd6:	7335      	strb	r5, [r6, #12]
10068bd8:	8a32      	ldrh	r2, [r6, #16]
10068bda:	1851      	adds	r1, r2, r1
10068bdc:	8231      	strh	r1, [r6, #16]
10068bde:	b28a      	uxth	r2, r1
10068be0:	8873      	ldrh	r3, [r6, #2]
10068be2:	429a      	cmp	r2, r3
10068be4:	d21a      	bcs.n	10068c1c <__arm_cp.0_5+0x354>
10068be6:	89f2      	ldrh	r2, [r6, #14]
10068be8:	1851      	adds	r1, r2, r1
10068bea:	06c9      	lsls	r1, r1, #27
10068bec:	d019      	beq.n	10068c22 <__arm_cp.0_5+0x35a>
10068bee:	4634      	mov	r4, r6
10068bf0:	e01a      	b.n	10068c28 <__arm_cp.0_5+0x360>
10068bf2:	f7dc ffeb 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10068bf6:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10068bf8:	e0e3      	b.n	10068dc2 <__arm_cp.0_5+0x4fa>
10068bfa:	460c      	mov	r4, r1
10068bfc:	2103      	movs	r1, #3
10068bfe:	4638      	mov	r0, r7
10068c00:	f7ed ff7e 	bl	10056b00 <llc_conn_set_tx_ctrl_pdu_state>
10068c04:	4638      	mov	r0, r7
10068c06:	f7dd f8a8 	bl	10045d5a <BLEPLAT_CNTR_PacketClrCteSamplingEn>
10068c0a:	78a8      	ldrb	r0, [r5, #2]
10068c0c:	2827      	cmp	r0, #39	@ 0x27
10068c0e:	d10e      	bne.n	10068c2e <__arm_cp.0_5+0x366>
10068c10:	a80e      	add	r0, sp, #56	@ 0x38
10068c12:	2101      	movs	r1, #1
10068c14:	7741      	strb	r1, [r0, #29]
10068c16:	e00a      	b.n	10068c2e <__arm_cp.0_5+0x366>
10068c18:	460c      	mov	r4, r1
10068c1a:	e008      	b.n	10068c2e <__arm_cp.0_5+0x366>
10068c1c:	69f4      	ldr	r4, [r6, #28]
10068c1e:	2504      	movs	r5, #4
10068c20:	e002      	b.n	10068c28 <__arm_cp.0_5+0x360>
10068c22:	6800      	ldr	r0, [r0, #0]
10068c24:	4634      	mov	r4, r6
10068c26:	61b0      	str	r0, [r6, #24]
10068c28:	9810      	ldr	r0, [sp, #64]	@ 0x40
10068c2a:	4328      	orrs	r0, r5
10068c2c:	9010      	str	r0, [sp, #64]	@ 0x40
10068c2e:	4638      	mov	r0, r7
10068c30:	f7ed fcbf 	bl	100565b2 <llc_conn_get_tx_acl_blocked>
10068c34:	4605      	mov	r5, r0
10068c36:	4638      	mov	r0, r7
10068c38:	f7ed fcc1 	bl	100565be <llc_conn_get_tx_ctrl_pdu_state>
10068c3c:	a90e      	add	r1, sp, #56	@ 0x38
10068c3e:	7f0e      	ldrb	r6, [r1, #28]
10068c40:	2e00      	cmp	r6, #0
10068c42:	d124      	bne.n	10068c8e <__arm_cp.0_5+0x3c6>
10068c44:	2801      	cmp	r0, #1
10068c46:	d122      	bne.n	10068c8e <__arm_cp.0_5+0x3c6>
10068c48:	2101      	movs	r1, #1
10068c4a:	4638      	mov	r0, r7
10068c4c:	9106      	str	r1, [sp, #24]
10068c4e:	f7ed fc89 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
10068c52:	4606      	mov	r6, r0
10068c54:	4638      	mov	r0, r7
10068c56:	4631      	mov	r1, r6
10068c58:	f7dd f8e7 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
10068c5c:	4632      	mov	r2, r6
10068c5e:	7830      	ldrb	r0, [r6, #0]
10068c60:	0680      	lsls	r0, r0, #26
10068c62:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10068c64:	d421      	bmi.n	10068caa <__arm_cp.0_5+0x3e2>
10068c66:	7890      	ldrb	r0, [r2, #2]
10068c68:	2827      	cmp	r0, #39	@ 0x27
10068c6a:	d04c      	beq.n	10068d06 <__arm_cp.0_5+0x43e>
10068c6c:	4615      	mov	r5, r2
10068c6e:	2802      	cmp	r0, #2
10068c70:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
10068c72:	d152      	bne.n	10068d1a <__arm_cp.0_5+0x452>
10068c74:	990c      	ldr	r1, [sp, #48]	@ 0x30
10068c76:	6808      	ldr	r0, [r1, #0]
10068c78:	9a06      	ldr	r2, [sp, #24]
10068c7a:	4310      	orrs	r0, r2
10068c7c:	6008      	str	r0, [r1, #0]
10068c7e:	7d60      	ldrb	r0, [r4, #21]
10068c80:	211f      	movs	r1, #31
10068c82:	460a      	mov	r2, r1
10068c84:	f7f9 fdd2 	bl	1006282c <LL_sched_set_priority>
10068c88:	6eb8      	ldr	r0, [r7, #104]	@ 0x68
10068c8a:	6738      	str	r0, [r7, #112]	@ 0x70
10068c8c:	e045      	b.n	10068d1a <__arm_cp.0_5+0x452>
10068c8e:	f7e7 f8a7 	bl	1004fde0 <isr_Acl_Data_TX_Cmpl_Queue_Full>
10068c92:	2800      	cmp	r0, #0
10068c94:	d018      	beq.n	10068cc8 <__arm_cp.0_5+0x400>
10068c96:	f7dc ff99 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10068c9a:	980e      	ldr	r0, [sp, #56]	@ 0x38
10068c9c:	2800      	cmp	r0, #0
10068c9e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
10068ca0:	d009      	beq.n	10068cb6 <__arm_cp.0_5+0x3ee>
10068ca2:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10068ca4:	9903      	ldr	r1, [sp, #12]
10068ca6:	9805      	ldr	r0, [sp, #20]
10068ca8:	e008      	b.n	10068cbc <__arm_cp.0_5+0x3f4>
10068caa:	4615      	mov	r5, r2
10068cac:	4638      	mov	r0, r7
10068cae:	f7dd f8af 	bl	10045e10 <BLEPLAT_CNTR_PacketSetCteSamplingEn>
10068cb2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
10068cb4:	e031      	b.n	10068d1a <__arm_cp.0_5+0x452>
10068cb6:	2011      	movs	r0, #17
10068cb8:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10068cba:	9903      	ldr	r1, [sp, #12]
10068cbc:	8538      	strh	r0, [r7, #40]	@ 0x28
10068cbe:	4638      	mov	r0, r7
10068cc0:	460d      	mov	r5, r1
10068cc2:	f7dd f8b2 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
10068cc6:	e071      	b.n	10068dac <__arm_cp.0_5+0x4e4>
10068cc8:	2c00      	cmp	r4, #0
10068cca:	d0e4      	beq.n	10068c96 <__arm_cp.0_5+0x3ce>
10068ccc:	2d01      	cmp	r5, #1
10068cce:	d0e2      	beq.n	10068c96 <__arm_cp.0_5+0x3ce>
10068cd0:	2e01      	cmp	r6, #1
10068cd2:	d0e0      	beq.n	10068c96 <__arm_cp.0_5+0x3ce>
10068cd4:	f7dc ff7a 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10068cd8:	4877      	ldr	r0, [pc, #476]	@ (10068eb8 <__arm_cp.0_2>)
10068cda:	6800      	ldr	r0, [r0, #0]
10068cdc:	218c      	movs	r1, #140	@ 0x8c
10068cde:	5840      	ldr	r0, [r0, r1]
10068ce0:	8a21      	ldrh	r1, [r4, #16]
10068ce2:	89e2      	ldrh	r2, [r4, #14]
10068ce4:	1851      	adds	r1, r2, r1
10068ce6:	221f      	movs	r2, #31
10068ce8:	400a      	ands	r2, r1
10068cea:	1810      	adds	r0, r2, r0
10068cec:	1c81      	adds	r1, r0, #2
10068cee:	4638      	mov	r0, r7
10068cf0:	460d      	mov	r5, r1
10068cf2:	f7dd f89a 	bl	10045e2a <BLEPLAT_CNTR_PacketSetDataPtr>
10068cf6:	4638      	mov	r0, r7
10068cf8:	4621      	mov	r1, r4
10068cfa:	f7ed fb83 	bl	10056404 <llc_conn_copy_tx_data_packet>
10068cfe:	67fc      	str	r4, [r7, #124]	@ 0x7c
10068d00:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10068d02:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
10068d04:	e052      	b.n	10068dac <__arm_cp.0_5+0x4e4>
10068d06:	990d      	ldr	r1, [sp, #52]	@ 0x34
10068d08:	7d88      	ldrb	r0, [r1, #22]
10068d0a:	7150      	strb	r0, [r2, #5]
10068d0c:	7dc8      	ldrb	r0, [r1, #23]
10068d0e:	4615      	mov	r5, r2
10068d10:	7190      	strb	r0, [r2, #6]
10068d12:	2000      	movs	r0, #0
10068d14:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10068d16:	8290      	strh	r0, [r2, #20]
10068d18:	460c      	mov	r4, r1
10068d1a:	6970      	ldr	r0, [r6, #20]
10068d1c:	6800      	ldr	r0, [r0, #0]
10068d1e:	0701      	lsls	r1, r0, #28
10068d20:	d415      	bmi.n	10068d4e <__arm_cp.0_5+0x486>
10068d22:	0680      	lsls	r0, r0, #26
10068d24:	d510      	bpl.n	10068d48 <__arm_cp.0_5+0x480>
10068d26:	7d60      	ldrb	r0, [r4, #21]
10068d28:	f7dd f9bd 	bl	100460a6 <BLEPLAT_CNTR_SmEncOff>
10068d2c:	6970      	ldr	r0, [r6, #20]
10068d2e:	6801      	ldr	r1, [r0, #0]
10068d30:	2220      	movs	r2, #32
10068d32:	4391      	bics	r1, r2
10068d34:	6001      	str	r1, [r0, #0]
10068d36:	68b0      	ldr	r0, [r6, #8]
10068d38:	2104      	movs	r1, #4
10068d3a:	4388      	bics	r0, r1
10068d3c:	60b0      	str	r0, [r6, #8]
10068d3e:	2012      	movs	r0, #18
10068d40:	f7fc fa76 	bl	10065230 <tsk_notify_idx>
10068d44:	f7d9 fdc7 	bl	100428d6 <BLE_STACK_ProcessRequest>
10068d48:	f7dc ff40 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10068d4c:	e01f      	b.n	10068d8e <__arm_cp.0_5+0x4c6>
10068d4e:	2000      	movs	r0, #0
10068d50:	9017      	str	r0, [sp, #92]	@ 0x5c
10068d52:	9016      	str	r0, [sp, #88]	@ 0x58
10068d54:	7d60      	ldrb	r0, [r4, #21]
10068d56:	f7dd f9ba 	bl	100460ce <BLEPLAT_CNTR_SmEncOn>
10068d5a:	7d60      	ldrb	r0, [r4, #21]
10068d5c:	a916      	add	r1, sp, #88	@ 0x58
10068d5e:	f7dd fc0b 	bl	10046578 <BLEPLAT_CNTR_SmSetTxCount>
10068d62:	7820      	ldrb	r0, [r4, #0]
10068d64:	2802      	cmp	r0, #2
10068d66:	d102      	bne.n	10068d6e <__arm_cp.0_5+0x4a6>
10068d68:	7d60      	ldrb	r0, [r4, #21]
10068d6a:	f7dd fc21 	bl	100465b0 <BLEPLAT_CNTR_SmSetTxCountDirectionBit>
10068d6e:	f7dc ff2d 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10068d72:	6970      	ldr	r0, [r6, #20]
10068d74:	6801      	ldr	r1, [r0, #0]
10068d76:	2208      	movs	r2, #8
10068d78:	4391      	bics	r1, r2
10068d7a:	6001      	str	r1, [r0, #0]
10068d7c:	68b0      	ldr	r0, [r6, #8]
10068d7e:	2104      	movs	r1, #4
10068d80:	4301      	orrs	r1, r0
10068d82:	60b1      	str	r1, [r6, #8]
10068d84:	2012      	movs	r0, #18
10068d86:	f7fc fa53 	bl	10065230 <tsk_notify_idx>
10068d8a:	f7d9 fda4 	bl	100428d6 <BLE_STACK_ProcessRequest>
10068d8e:	2102      	movs	r1, #2
10068d90:	4638      	mov	r0, r7
10068d92:	f7ed feb5 	bl	10056b00 <llc_conn_set_tx_ctrl_pdu_state>
10068d96:	6970      	ldr	r0, [r6, #20]
10068d98:	6801      	ldr	r1, [r0, #0]
10068d9a:	074a      	lsls	r2, r1, #29
10068d9c:	d506      	bpl.n	10068dac <__arm_cp.0_5+0x4e4>
10068d9e:	2204      	movs	r2, #4
10068da0:	4391      	bics	r1, r2
10068da2:	6001      	str	r1, [r0, #0]
10068da4:	8b70      	ldrh	r0, [r6, #26]
10068da6:	9906      	ldr	r1, [sp, #24]
10068da8:	4308      	orrs	r0, r1
10068daa:	8370      	strh	r0, [r6, #26]
10068dac:	2101      	movs	r1, #1
10068dae:	4638      	mov	r0, r7
10068db0:	f7ed fbde 	bl	10056570 <llc_conn_get_enc_on>
10068db4:	2801      	cmp	r0, #1
10068db6:	d104      	bne.n	10068dc2 <__arm_cp.0_5+0x4fa>
10068db8:	7868      	ldrb	r0, [r5, #1]
10068dba:	2800      	cmp	r0, #0
10068dbc:	d001      	beq.n	10068dc2 <__arm_cp.0_5+0x4fa>
10068dbe:	1d00      	adds	r0, r0, #4
10068dc0:	7068      	strb	r0, [r5, #1]
10068dc2:	9810      	ldr	r0, [sp, #64]	@ 0x40
10068dc4:	0781      	lsls	r1, r0, #30
10068dc6:	d507      	bpl.n	10068dd8 <__arm_cp.0_5+0x510>
10068dc8:	990c      	ldr	r1, [sp, #48]	@ 0x30
10068dca:	7809      	ldrb	r1, [r1, #0]
10068dcc:	0709      	lsls	r1, r1, #28
10068dce:	d503      	bpl.n	10068dd8 <__arm_cp.0_5+0x510>
10068dd0:	7d60      	ldrb	r0, [r4, #21]
10068dd2:	f000 f8ea 	bl	10068faa <llc_conn_decrement_enc_count_rx>
10068dd6:	9810      	ldr	r0, [sp, #64]	@ 0x40
10068dd8:	0741      	lsls	r1, r0, #29
10068dda:	d505      	bpl.n	10068de8 <__arm_cp.0_5+0x520>
10068ddc:	4630      	mov	r0, r6
10068dde:	f7fc fc43 	bl	10065668 <ACL_list_remove_head>
10068de2:	f7e7 f827 	bl	1004fe34 <Acl_Tx_Cmpl_Pkt_Handler>
10068de6:	9810      	ldr	r0, [sp, #64]	@ 0x40
10068de8:	07c0      	lsls	r0, r0, #31
10068dea:	d01e      	beq.n	10068e2a <__arm_cp.0_5+0x562>
10068dec:	9811      	ldr	r0, [sp, #68]	@ 0x44
10068dee:	7844      	ldrb	r4, [r0, #1]
10068df0:	2600      	movs	r6, #0
10068df2:	f7ec fb49 	bl	10055488 <data_length_extension_csr_ucfg_weak>
10068df6:	2801      	cmp	r0, #1
10068df8:	d001      	beq.n	10068dfe <__arm_cp.0_5+0x536>
10068dfa:	251f      	movs	r5, #31
10068dfc:	e000      	b.n	10068e00 <__arm_cp.0_5+0x538>
10068dfe:	43f5      	mvns	r5, r6
10068e00:	4025      	ands	r5, r4
10068e02:	6fb8      	ldr	r0, [r7, #120]	@ 0x78
10068e04:	6840      	ldr	r0, [r0, #4]
10068e06:	9911      	ldr	r1, [sp, #68]	@ 0x44
10068e08:	1c89      	adds	r1, r1, #2
10068e0a:	462a      	mov	r2, r5
10068e0c:	f7fa f98e 	bl	1006312c <Mem_Buff_block_write>
10068e10:	6fb8      	ldr	r0, [r7, #120]	@ 0x78
10068e12:	61c6      	str	r6, [r0, #28]
10068e14:	8045      	strh	r5, [r0, #2]
10068e16:	9911      	ldr	r1, [sp, #68]	@ 0x44
10068e18:	7809      	ldrb	r1, [r1, #0]
10068e1a:	2203      	movs	r2, #3
10068e1c:	400a      	ands	r2, r1
10068e1e:	7a01      	ldrb	r1, [r0, #8]
10068e20:	4311      	orrs	r1, r2
10068e22:	7201      	strb	r1, [r0, #8]
10068e24:	f7e6 ffea 	bl	1004fdfc <Acl_Rcv_Pkt_Handler>
10068e28:	67be      	str	r6, [r7, #120]	@ 0x78
10068e2a:	a80e      	add	r0, sp, #56	@ 0x38
10068e2c:	7e40      	ldrb	r0, [r0, #25]
10068e2e:	2801      	cmp	r0, #1
10068e30:	d131      	bne.n	10068e96 <__arm_cp.0_5+0x5ce>
10068e32:	2100      	movs	r1, #0
10068e34:	4638      	mov	r0, r7
10068e36:	f7ed fb95 	bl	10056564 <llc_conn_get_ctrl_pdu_data_p>
10068e3a:	4605      	mov	r5, r0
10068e3c:	9811      	ldr	r0, [sp, #68]	@ 0x44
10068e3e:	7801      	ldrb	r1, [r0, #0]
10068e40:	7840      	ldrb	r0, [r0, #1]
10068e42:	0200      	lsls	r0, r0, #8
10068e44:	1840      	adds	r0, r0, r1
10068e46:	8028      	strh	r0, [r5, #0]
10068e48:	f7e5 fc7e 	bl	1004e748 <llc_padv_periodic_adv_sync_csr_ucfg>
10068e4c:	4606      	mov	r6, r0
10068e4e:	f7ee ff93 	bl	10057d78 <cis_csr_ucfg_weak>
10068e52:	4330      	orrs	r0, r6
10068e54:	b2c0      	uxtb	r0, r0
10068e56:	f7f9 fa27 	bl	100622a8 <LL_get_control_pdu_size>
10068e5a:	a90e      	add	r1, sp, #56	@ 0x38
10068e5c:	7d89      	ldrb	r1, [r1, #22]
10068e5e:	2920      	cmp	r1, #32
10068e60:	d001      	beq.n	10068e66 <__arm_cp.0_5+0x59e>
10068e62:	2102      	movs	r1, #2
10068e64:	e000      	b.n	10068e68 <__arm_cp.0_5+0x5a0>
10068e66:	2103      	movs	r1, #3
10068e68:	9a11      	ldr	r2, [sp, #68]	@ 0x44
10068e6a:	1851      	adds	r1, r2, r1
10068e6c:	1f00      	subs	r0, r0, #4
10068e6e:	b2c3      	uxtb	r3, r0
10068e70:	7852      	ldrb	r2, [r2, #1]
10068e72:	429a      	cmp	r2, r3
10068e74:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
10068e76:	d300      	bcc.n	10068e7a <__arm_cp.0_5+0x5b2>
10068e78:	4602      	mov	r2, r0
10068e7a:	b2d2      	uxtb	r2, r2
10068e7c:	1ca8      	adds	r0, r5, #2
10068e7e:	f7db fd91 	bl	100449a4 <BLEPLAT_MemCpy>
10068e82:	6920      	ldr	r0, [r4, #16]
10068e84:	6801      	ldr	r1, [r0, #0]
10068e86:	2201      	movs	r2, #1
10068e88:	430a      	orrs	r2, r1
10068e8a:	6002      	str	r2, [r0, #0]
10068e8c:	2015      	movs	r0, #21
10068e8e:	f7fc f9cf 	bl	10065230 <tsk_notify_idx>
10068e92:	f7d9 fd20 	bl	100428d6 <BLE_STACK_ProcessRequest>
10068e96:	ad0e      	add	r5, sp, #56	@ 0x38
10068e98:	4638      	mov	r0, r7
10068e9a:	4629      	mov	r1, r5
10068e9c:	f000 f80e 	bl	10068ebc <llc_conn_check_subrate_and_set_params_ucfg_weak>
10068ea0:	7da8      	ldrb	r0, [r5, #22]
10068ea2:	2820      	cmp	r0, #32
10068ea4:	d000      	beq.n	10068ea8 <__arm_cp.0_5+0x5e0>
10068ea6:	e495      	b.n	100687d4 <llc_conn_isr+0x300>
10068ea8:	9811      	ldr	r0, [sp, #68]	@ 0x44
10068eaa:	7880      	ldrb	r0, [r0, #2]
10068eac:	0981      	lsrs	r1, r0, #6
10068eae:	4638      	mov	r0, r7
10068eb0:	f7f5 fa4a 	bl	1005e348 <llc_cte_process_rx_cte_ucfg_weak>
10068eb4:	e48e      	b.n	100687d4 <llc_conn_isr+0x300>
10068eb6:	46c0      	nop			@ (mov r8, r8)

10068eb8 <__arm_cp.0_2>:
10068eb8:	20000894 	.word	0x20000894

10068ebc <llc_conn_check_subrate_and_set_params_ucfg_weak>:
10068ebc:	4770      	bx	lr

10068ebe <llc_conn_close_event>:
10068ebe:	b5f0      	push	{r4, r5, r6, r7, lr}
10068ec0:	b085      	sub	sp, #20
10068ec2:	4605      	mov	r5, r0
10068ec4:	2045      	movs	r0, #69	@ 0x45
10068ec6:	0080      	lsls	r0, r0, #2
10068ec8:	9003      	str	r0, [sp, #12]
10068eca:	5828      	ldr	r0, [r5, r0]
10068ecc:	462e      	mov	r6, r5
10068ece:	3642      	adds	r6, #66	@ 0x42
10068ed0:	2800      	cmp	r0, #0
10068ed2:	d002      	beq.n	10068eda <llc_conn_close_event+0x1c>
10068ed4:	8881      	ldrh	r1, [r0, #4]
10068ed6:	1c49      	adds	r1, r1, #1
10068ed8:	8081      	strh	r1, [r0, #4]
10068eda:	462c      	mov	r4, r5
10068edc:	3480      	adds	r4, #128	@ 0x80
10068ede:	4628      	mov	r0, r5
10068ee0:	f7f3 fd55 	bl	1005c98e <llc_subrate_update_cont_counter_ucfg_weak>
10068ee4:	6c68      	ldr	r0, [r5, #68]	@ 0x44
10068ee6:	9002      	str	r0, [sp, #8]
10068ee8:	8837      	ldrh	r7, [r6, #0]
10068eea:	4628      	mov	r0, r5
10068eec:	f7ed fad0 	bl	10056490 <llc_conn_enhanced_get_latency>
10068ef0:	4602      	mov	r2, r0
10068ef2:	4628      	mov	r0, r5
10068ef4:	4639      	mov	r1, r7
10068ef6:	f7ed fe14 	bl	10056b22 <llc_conn_calc_skip_ucfg_weak>
10068efa:	6cea      	ldr	r2, [r5, #76]	@ 0x4c
10068efc:	4342      	muls	r2, r0
10068efe:	6c69      	ldr	r1, [r5, #68]	@ 0x44
10068f00:	1889      	adds	r1, r1, r2
10068f02:	6469      	str	r1, [r5, #68]	@ 0x44
10068f04:	9001      	str	r0, [sp, #4]
10068f06:	1838      	adds	r0, r7, r0
10068f08:	9004      	str	r0, [sp, #16]
10068f0a:	b287      	uxth	r7, r0
10068f0c:	8830      	ldrh	r0, [r6, #0]
10068f0e:	42b8      	cmp	r0, r7
10068f10:	d907      	bls.n	10068f22 <llc_conn_close_event+0x64>
10068f12:	9803      	ldr	r0, [sp, #12]
10068f14:	1828      	adds	r0, r5, r0
10068f16:	2109      	movs	r1, #9
10068f18:	0149      	lsls	r1, r1, #5
10068f1a:	1869      	adds	r1, r5, r1
10068f1c:	89c0      	ldrh	r0, [r0, #14]
10068f1e:	f7f3 fd35 	bl	1005c98c <llc_subrate_new_sr_base_event_ucfg_weak>
10068f22:	68a0      	ldr	r0, [r4, #8]
10068f24:	2180      	movs	r1, #128	@ 0x80
10068f26:	4388      	bics	r0, r1
10068f28:	60a0      	str	r0, [r4, #8]
10068f2a:	4628      	mov	r0, r5
10068f2c:	4639      	mov	r1, r7
10068f2e:	f7ed fe31 	bl	10056b94 <llc_conn_check_instant_and_set_params>
10068f32:	4607      	mov	r7, r0
10068f34:	9804      	ldr	r0, [sp, #16]
10068f36:	8030      	strh	r0, [r6, #0]
10068f38:	2f00      	cmp	r7, #0
10068f3a:	d118      	bne.n	10068f6e <llc_conn_close_event+0xb0>
10068f3c:	6c68      	ldr	r0, [r5, #68]	@ 0x44
10068f3e:	9902      	ldr	r1, [sp, #8]
10068f40:	1a46      	subs	r6, r0, r1
10068f42:	4628      	mov	r0, r5
10068f44:	4631      	mov	r1, r6
10068f46:	f7ed feb9 	bl	10056cbc <llc_conn_check_supervision_timer>
10068f4a:	4607      	mov	r7, r0
10068f4c:	2800      	cmp	r0, #0
10068f4e:	d10e      	bne.n	10068f6e <llc_conn_close_event+0xb0>
10068f50:	4628      	mov	r0, r5
10068f52:	4631      	mov	r1, r6
10068f54:	f7ed fde7 	bl	10056b26 <llc_conn_check_ctrl_proc_rsp_timer>
10068f58:	4607      	mov	r7, r0
10068f5a:	2800      	cmp	r0, #0
10068f5c:	d107      	bne.n	10068f6e <llc_conn_close_event+0xb0>
10068f5e:	4628      	mov	r0, r5
10068f60:	4631      	mov	r1, r6
10068f62:	9a01      	ldr	r2, [sp, #4]
10068f64:	f7ee fca4 	bl	100578b0 <llc_conn_set_taskslot_params>
10068f68:	4607      	mov	r7, r0
10068f6a:	2800      	cmp	r0, #0
10068f6c:	d006      	beq.n	10068f7c <llc_conn_close_event+0xbe>
10068f6e:	352d      	adds	r5, #45	@ 0x2d
10068f70:	7d28      	ldrb	r0, [r5, #20]
10068f72:	f7f9 fd53 	bl	10062a1c <LL_sched_delete_taskslot>
10068f76:	702f      	strb	r7, [r5, #0]
10068f78:	2000      	movs	r0, #0
10068f7a:	8360      	strh	r0, [r4, #26]
10068f7c:	6820      	ldr	r0, [r4, #0]
10068f7e:	2800      	cmp	r0, #0
10068f80:	d001      	beq.n	10068f86 <llc_conn_close_event+0xc8>
10068f82:	69c6      	ldr	r6, [r0, #28]
10068f84:	e00d      	b.n	10068fa2 <llc_conn_close_event+0xe4>
10068f86:	2600      	movs	r6, #0
10068f88:	e00b      	b.n	10068fa2 <llc_conn_close_event+0xe4>
10068f8a:	4635      	mov	r5, r6
10068f8c:	69f6      	ldr	r6, [r6, #28]
10068f8e:	7a28      	ldrb	r0, [r5, #8]
10068f90:	0700      	lsls	r0, r0, #28
10068f92:	d506      	bpl.n	10068fa2 <llc_conn_close_event+0xe4>
10068f94:	4620      	mov	r0, r4
10068f96:	4629      	mov	r1, r5
10068f98:	f7fc fb50 	bl	1006563c <ACL_list_remove>
10068f9c:	4628      	mov	r0, r5
10068f9e:	f7e6 fffd 	bl	1004ff9c <ACL_pkt_release>
10068fa2:	2e00      	cmp	r6, #0
10068fa4:	d1f1      	bne.n	10068f8a <llc_conn_close_event+0xcc>
10068fa6:	b005      	add	sp, #20
10068fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}

10068faa <llc_conn_decrement_enc_count_rx>:
10068faa:	b51c      	push	{r2, r3, r4, lr}
10068fac:	4604      	mov	r4, r0
10068fae:	4669      	mov	r1, sp
10068fb0:	f7dd f94b 	bl	1004624a <BLEPLAT_CNTR_SmGetRxCount>
10068fb4:	9800      	ldr	r0, [sp, #0]
10068fb6:	1e41      	subs	r1, r0, #1
10068fb8:	9100      	str	r1, [sp, #0]
10068fba:	2800      	cmp	r0, #0
10068fbc:	d102      	bne.n	10068fc4 <llc_conn_decrement_enc_count_rx+0x1a>
10068fbe:	9801      	ldr	r0, [sp, #4]
10068fc0:	1e40      	subs	r0, r0, #1
10068fc2:	9001      	str	r0, [sp, #4]
10068fc4:	4669      	mov	r1, sp
10068fc6:	4620      	mov	r0, r4
10068fc8:	f7dd fa62 	bl	10046490 <BLEPLAT_CNTR_SmSetRxCount>
10068fcc:	bd1c      	pop	{r2, r3, r4, pc}
	...

10068fd0 <llc_check_sreq_or_creq_tx_addr_res_off>:
10068fd0:	b570      	push	{r4, r5, r6, lr}
10068fd2:	b084      	sub	sp, #16
10068fd4:	4615      	mov	r5, r2
10068fd6:	460a      	mov	r2, r1
10068fd8:	4604      	mov	r4, r0
10068fda:	2b00      	cmp	r3, #0
10068fdc:	d007      	beq.n	10068fee <llc_check_sreq_or_creq_tx_addr_res_off+0x1e>
10068fde:	980a      	ldr	r0, [sp, #40]	@ 0x28
10068fe0:	4282      	cmp	r2, r0
10068fe2:	d11f      	bne.n	10069024 <llc_check_sreq_or_creq_tx_addr_res_off+0x54>
10068fe4:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10068fe6:	4068      	eors	r0, r5
10068fe8:	0200      	lsls	r0, r0, #8
10068fea:	d11b      	bne.n	10069024 <llc_check_sreq_or_creq_tx_addr_res_off+0x54>
10068fec:	e01b      	b.n	10069026 <llc_check_sreq_or_creq_tx_addr_res_off+0x56>
10068fee:	9809      	ldr	r0, [sp, #36]	@ 0x24
10068ff0:	9908      	ldr	r1, [sp, #32]
10068ff2:	2900      	cmp	r1, #0
10068ff4:	d002      	beq.n	10068ffc <llc_check_sreq_or_creq_tx_addr_res_off+0x2c>
10068ff6:	2301      	movs	r3, #1
10068ff8:	4003      	ands	r3, r0
10068ffa:	d104      	bne.n	10069006 <llc_check_sreq_or_creq_tx_addr_res_off+0x36>
10068ffc:	2900      	cmp	r1, #0
10068ffe:	d112      	bne.n	10069026 <llc_check_sreq_or_creq_tx_addr_res_off+0x56>
10069000:	2102      	movs	r1, #2
10069002:	4008      	ands	r0, r1
10069004:	d00f      	beq.n	10069026 <llc_check_sreq_or_creq_tx_addr_res_off+0x56>
10069006:	4809      	ldr	r0, [pc, #36]	@ (1006902c <__arm_cp.1_0>)
10069008:	6800      	ldr	r0, [r0, #0]
1006900a:	219c      	movs	r1, #156	@ 0x9c
1006900c:	5841      	ldr	r1, [r0, r1]
1006900e:	68c8      	ldr	r0, [r1, #12]
10069010:	6909      	ldr	r1, [r1, #16]
10069012:	ab03      	add	r3, sp, #12
10069014:	2600      	movs	r6, #0
10069016:	9600      	str	r6, [sp, #0]
10069018:	9301      	str	r3, [sp, #4]
1006901a:	462b      	mov	r3, r5
1006901c:	f7fc fb38 	bl	10065690 <addr8_list_search>
10069020:	2800      	cmp	r0, #0
10069022:	d100      	bne.n	10069026 <llc_check_sreq_or_creq_tx_addr_res_off+0x56>
10069024:	24ff      	movs	r4, #255	@ 0xff
10069026:	4620      	mov	r0, r4
10069028:	b004      	add	sp, #16
1006902a:	bd70      	pop	{r4, r5, r6, pc}

1006902c <__arm_cp.1_0>:
1006902c:	20000894 	.word	0x20000894

10069030 <llc_check_sreq_or_creq_tx_addr_ucfg_weak>:
10069030:	b5f0      	push	{r4, r5, r6, r7, lr}
10069032:	b087      	sub	sp, #28
10069034:	1ecd      	subs	r5, r1, #3
10069036:	21ff      	movs	r1, #255	@ 0xff
10069038:	24fd      	movs	r4, #253	@ 0xfd
1006903a:	4225      	tst	r5, r4
1006903c:	d11c      	bne.n	10069078 <llc_check_sreq_or_creq_tx_addr_ucfg_weak+0x48>
1006903e:	2a00      	cmp	r2, #0
10069040:	d01a      	beq.n	10069078 <llc_check_sreq_or_creq_tx_addr_ucfg_weak+0x48>
10069042:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
10069044:	990c      	ldr	r1, [sp, #48]	@ 0x30
10069046:	680c      	ldr	r4, [r1, #0]
10069048:	9405      	str	r4, [sp, #20]
1006904a:	9306      	str	r3, [sp, #24]
1006904c:	684b      	ldr	r3, [r1, #4]
1006904e:	c882      	ldmia	r0!, {r1, r7}
10069050:	20ff      	movs	r0, #255	@ 0xff
10069052:	0600      	lsls	r0, r0, #24
10069054:	463c      	mov	r4, r7
10069056:	4384      	bics	r4, r0
10069058:	c612      	stmia	r6!, {r1, r4}
1006905a:	9303      	str	r3, [sp, #12]
1006905c:	9805      	ldr	r0, [sp, #20]
1006905e:	9002      	str	r0, [sp, #8]
10069060:	9806      	ldr	r0, [sp, #24]
10069062:	9001      	str	r0, [sp, #4]
10069064:	4268      	negs	r0, r5
10069066:	4168      	adcs	r0, r5
10069068:	9000      	str	r0, [sp, #0]
1006906a:	b2c8      	uxtb	r0, r1
1006906c:	0752      	lsls	r2, r2, #29
1006906e:	0fd3      	lsrs	r3, r2, #31
10069070:	463a      	mov	r2, r7
10069072:	f7ff ffad 	bl	10068fd0 <llc_check_sreq_or_creq_tx_addr_res_off>
10069076:	4601      	mov	r1, r0
10069078:	4608      	mov	r0, r1
1006907a:	b007      	add	sp, #28
1006907c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10069080 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak>:
10069080:	b5f0      	push	{r4, r5, r6, r7, lr}
10069082:	b083      	sub	sp, #12
10069084:	461d      	mov	r5, r3
10069086:	c890      	ldmia	r0!, {r4, r7}
10069088:	9e09      	ldr	r6, [sp, #36]	@ 0x24
1006908a:	481b      	ldr	r0, [pc, #108]	@ (100690f8 <__arm_cp.3_0>)
1006908c:	463b      	mov	r3, r7
1006908e:	4003      	ands	r3, r0
10069090:	6034      	str	r4, [r6, #0]
10069092:	6073      	str	r3, [r6, #4]
10069094:	2903      	cmp	r1, #3
10069096:	d101      	bne.n	1006909c <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x1c>
10069098:	4626      	mov	r6, r4
1006909a:	e02a      	b.n	100690f2 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x72>
1006909c:	b2e6      	uxtb	r6, r4
1006909e:	07d2      	lsls	r2, r2, #31
100690a0:	d112      	bne.n	100690c8 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x48>
100690a2:	4637      	mov	r7, r6
100690a4:	682a      	ldr	r2, [r5, #0]
100690a6:	2600      	movs	r6, #0
100690a8:	4294      	cmp	r4, r2
100690aa:	4632      	mov	r2, r6
100690ac:	d104      	bne.n	100690b8 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x38>
100690ae:	686a      	ldr	r2, [r5, #4]
100690b0:	4002      	ands	r2, r0
100690b2:	1a98      	subs	r0, r3, r2
100690b4:	4242      	negs	r2, r0
100690b6:	4142      	adcs	r2, r0
100690b8:	2fff      	cmp	r7, #255	@ 0xff
100690ba:	d000      	beq.n	100690be <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x3e>
100690bc:	4626      	mov	r6, r4
100690be:	2900      	cmp	r1, #0
100690c0:	d017      	beq.n	100690f2 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x72>
100690c2:	2a00      	cmp	r2, #0
100690c4:	d014      	beq.n	100690f0 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x70>
100690c6:	e014      	b.n	100690f2 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x72>
100690c8:	4635      	mov	r5, r6
100690ca:	480c      	ldr	r0, [pc, #48]	@ (100690fc <__arm_cp.3_1>)
100690cc:	6800      	ldr	r0, [r0, #0]
100690ce:	219c      	movs	r1, #156	@ 0x9c
100690d0:	5841      	ldr	r1, [r0, r1]
100690d2:	68c8      	ldr	r0, [r1, #12]
100690d4:	6909      	ldr	r1, [r1, #16]
100690d6:	aa02      	add	r2, sp, #8
100690d8:	2600      	movs	r6, #0
100690da:	9600      	str	r6, [sp, #0]
100690dc:	9201      	str	r2, [sp, #4]
100690de:	4622      	mov	r2, r4
100690e0:	463b      	mov	r3, r7
100690e2:	f7fc fad5 	bl	10065690 <addr8_list_search>
100690e6:	2800      	cmp	r0, #0
100690e8:	d002      	beq.n	100690f0 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x70>
100690ea:	2dff      	cmp	r5, #255	@ 0xff
100690ec:	d1d4      	bne.n	10069098 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x18>
100690ee:	e000      	b.n	100690f2 <llc_check_adv_or_srsp_or_crsp_tx_addr_ucfg_weak+0x72>
100690f0:	26ff      	movs	r6, #255	@ 0xff
100690f2:	b2f0      	uxtb	r0, r6
100690f4:	b003      	add	sp, #12
100690f6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100690f8 <__arm_cp.3_0>:
100690f8:	00ffffff 	.word	0x00ffffff

100690fc <__arm_cp.3_1>:
100690fc:	20000894 	.word	0x20000894

10069100 <llc_check_adv_or_crsp_rx_addr_ucfg_weak>:
10069100:	6801      	ldr	r1, [r0, #0]
10069102:	681a      	ldr	r2, [r3, #0]
10069104:	4291      	cmp	r1, r2
10069106:	d107      	bne.n	10069118 <llc_check_adv_or_crsp_rx_addr_ucfg_weak+0x18>
10069108:	6840      	ldr	r0, [r0, #4]
1006910a:	685a      	ldr	r2, [r3, #4]
1006910c:	4042      	eors	r2, r0
1006910e:	0210      	lsls	r0, r2, #8
10069110:	d003      	beq.n	1006911a <llc_check_adv_or_crsp_rx_addr_ucfg_weak+0x1a>
10069112:	2000      	movs	r0, #0
10069114:	43c1      	mvns	r1, r0
10069116:	e000      	b.n	1006911a <llc_check_adv_or_crsp_rx_addr_ucfg_weak+0x1a>
10069118:	21ff      	movs	r1, #255	@ 0xff
1006911a:	b2c8      	uxtb	r0, r1
1006911c:	4770      	bx	lr
	...

10069120 <llc_wl_mem_allocate>:
10069120:	b510      	push	{r4, lr}
10069122:	2401      	movs	r4, #1
10069124:	4084      	lsls	r4, r0
10069126:	2108      	movs	r1, #8
10069128:	4620      	mov	r0, r4
1006912a:	f7f9 fe83 	bl	10062e34 <csmem_mem_0_assign>
1006912e:	4903      	ldr	r1, [pc, #12]	@ (1006913c <__arm_cp.0_0>)
10069130:	6809      	ldr	r1, [r1, #0]
10069132:	229c      	movs	r2, #156	@ 0x9c
10069134:	5889      	ldr	r1, [r1, r2]
10069136:	744c      	strb	r4, [r1, #17]
10069138:	60c8      	str	r0, [r1, #12]
1006913a:	bd10      	pop	{r4, pc}

1006913c <__arm_cp.0_0>:
1006913c:	20000894 	.word	0x20000894

10069140 <llc_padv_skip_slot>:
10069140:	b5f0      	push	{r4, r5, r6, r7, lr}
10069142:	b083      	sub	sp, #12
10069144:	460d      	mov	r5, r1
10069146:	4604      	mov	r4, r0
10069148:	f000 f82c 	bl	100691a4 <llc_padv_check_and_program_channel_map_update>
1006914c:	6d26      	ldr	r6, [r4, #80]	@ 0x50
1006914e:	4628      	mov	r0, r5
10069150:	4631      	mov	r1, r6
10069152:	f7d7 f875 	bl	10040240 <__udivsi3>
10069156:	276a      	movs	r7, #106	@ 0x6a
10069158:	5be1      	ldrh	r1, [r4, r7]
1006915a:	1c45      	adds	r5, r0, #1
1006915c:	1948      	adds	r0, r1, r5
1006915e:	53e0      	strh	r0, [r4, r7]
10069160:	436e      	muls	r6, r5
10069162:	6d60      	ldr	r0, [r4, #84]	@ 0x54
10069164:	1981      	adds	r1, r0, r6
10069166:	6561      	str	r1, [r4, #84]	@ 0x54
10069168:	4626      	mov	r6, r4
1006916a:	366a      	adds	r6, #106	@ 0x6a
1006916c:	78b0      	ldrb	r0, [r6, #2]
1006916e:	f7f9 f915 	bl	1006239c <LL_sched_set_anchor>
10069172:	4620      	mov	r0, r4
10069174:	f000 f834 	bl	100691e0 <llc_padv_apply_channel_map_update_if_pending>
10069178:	78b0      	ldrb	r0, [r6, #2]
1006917a:	f7dc ffbc 	bl	100460f6 <BLEPLAT_CNTR_SmGetAccessAddr>
1006917e:	5be2      	ldrh	r2, [r4, r7]
10069180:	78b6      	ldrb	r6, [r6, #2]
10069182:	2300      	movs	r3, #0
10069184:	9300      	str	r3, [sp, #0]
10069186:	9001      	str	r0, [sp, #4]
10069188:	9302      	str	r3, [sp, #8]
1006918a:	4621      	mov	r1, r4
1006918c:	3114      	adds	r1, #20
1006918e:	4630      	mov	r0, r6
10069190:	f7ee fcd5 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
10069194:	72a0      	strb	r0, [r4, #10]
10069196:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
10069198:	3008      	adds	r0, #8
1006919a:	f7f6 fcbd 	bl	1005fb18 <LL_eadv_switchbackupdata_data_struc>
1006919e:	4628      	mov	r0, r5
100691a0:	b003      	add	sp, #12
100691a2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100691a4 <llc_padv_check_and_program_channel_map_update>:
100691a4:	b570      	push	{r4, r5, r6, lr}
100691a6:	4604      	mov	r4, r0
100691a8:	480c      	ldr	r0, [pc, #48]	@ (100691dc <__arm_cp.1_0>)
100691aa:	6800      	ldr	r0, [r0, #0]
100691ac:	219c      	movs	r1, #156	@ 0x9c
100691ae:	5845      	ldr	r5, [r0, r1]
100691b0:	3548      	adds	r5, #72	@ 0x48
100691b2:	4626      	mov	r6, r4
100691b4:	360e      	adds	r6, #14
100691b6:	2205      	movs	r2, #5
100691b8:	4630      	mov	r0, r6
100691ba:	4629      	mov	r1, r5
100691bc:	f7db fc12 	bl	100449e4 <BLEPLAT_MemCmp>
100691c0:	2800      	cmp	r0, #0
100691c2:	d00a      	beq.n	100691da <llc_padv_check_and_program_channel_map_update+0x36>
100691c4:	2205      	movs	r2, #5
100691c6:	4630      	mov	r0, r6
100691c8:	4629      	mov	r1, r5
100691ca:	f7db fbeb 	bl	100449a4 <BLEPLAT_MemCpy>
100691ce:	2001      	movs	r0, #1
100691d0:	72e0      	strb	r0, [r4, #11]
100691d2:	206a      	movs	r0, #106	@ 0x6a
100691d4:	5a20      	ldrh	r0, [r4, r0]
100691d6:	300a      	adds	r0, #10
100691d8:	81a0      	strh	r0, [r4, #12]
100691da:	bd70      	pop	{r4, r5, r6, pc}

100691dc <__arm_cp.1_0>:
100691dc:	20000894 	.word	0x20000894

100691e0 <llc_padv_apply_channel_map_update_if_pending>:
100691e0:	b5f0      	push	{r4, r5, r6, r7, lr}
100691e2:	b081      	sub	sp, #4
100691e4:	4604      	mov	r4, r0
100691e6:	7ac0      	ldrb	r0, [r0, #11]
100691e8:	2800      	cmp	r0, #0
100691ea:	d01e      	beq.n	1006922a <llc_padv_apply_channel_map_update_if_pending+0x4a>
100691ec:	4626      	mov	r6, r4
100691ee:	3660      	adds	r6, #96	@ 0x60
100691f0:	89a0      	ldrh	r0, [r4, #12]
100691f2:	8971      	ldrh	r1, [r6, #10]
100691f4:	4281      	cmp	r1, r0
100691f6:	d318      	bcc.n	1006922a <llc_padv_apply_channel_map_update_if_pending+0x4a>
100691f8:	2000      	movs	r0, #0
100691fa:	72e0      	strb	r0, [r4, #11]
100691fc:	7b30      	ldrb	r0, [r6, #12]
100691fe:	4625      	mov	r5, r4
10069200:	350e      	adds	r5, #14
10069202:	4629      	mov	r1, r5
10069204:	f7dd f8c2 	bl	1004638c <BLEPLAT_CNTR_SmSetChannelMap>
10069208:	7837      	ldrb	r7, [r6, #0]
1006920a:	4620      	mov	r0, r4
1006920c:	305c      	adds	r0, #92	@ 0x5c
1006920e:	2205      	movs	r2, #5
10069210:	4629      	mov	r1, r5
10069212:	f7db fbc7 	bl	100449a4 <BLEPLAT_MemCpy>
10069216:	20e0      	movs	r0, #224	@ 0xe0
10069218:	4038      	ands	r0, r7
1006921a:	7831      	ldrb	r1, [r6, #0]
1006921c:	4301      	orrs	r1, r0
1006921e:	7031      	strb	r1, [r6, #0]
10069220:	3414      	adds	r4, #20
10069222:	4620      	mov	r0, r4
10069224:	4629      	mov	r1, r5
10069226:	f7ee fc6f 	bl	10057b08 <llc_mngm_csa2_update_remapping_table>
1006922a:	b001      	add	sp, #4
1006922c:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006922e <llc_padv_program_slot>:
1006922e:	b510      	push	{r4, lr}
10069230:	4604      	mov	r4, r0
10069232:	206c      	movs	r0, #108	@ 0x6c
10069234:	5c20      	ldrb	r0, [r4, r0]
10069236:	7aa1      	ldrb	r1, [r4, #10]
10069238:	f7dd f915 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
1006923c:	4620      	mov	r0, r4
1006923e:	3014      	adds	r0, #20
10069240:	f7ee fd10 	bl	10057c64 <llc_mngm_csa2_select_random_channel>
10069244:	72a0      	strb	r0, [r4, #10]
10069246:	2108      	movs	r1, #8
10069248:	4620      	mov	r0, r4
1006924a:	f000 f801 	bl	10069250 <llc_padv_prepare_periodic_advertising_packet>
1006924e:	bd10      	pop	{r4, pc}

10069250 <llc_padv_prepare_periodic_advertising_packet>:
10069250:	b570      	push	{r4, r5, r6, lr}
10069252:	b08a      	sub	sp, #40	@ 0x28
10069254:	460c      	mov	r4, r1
10069256:	4605      	mov	r5, r0
10069258:	aa09      	add	r2, sp, #36	@ 0x24
1006925a:	ab08      	add	r3, sp, #32
1006925c:	4608      	mov	r0, r1
1006925e:	4629      	mov	r1, r5
10069260:	f7f8 faec 	bl	1006183c <llc_eadv_get_payload_length_and_extended_header_flags>
10069264:	206f      	movs	r0, #111	@ 0x6f
10069266:	5c28      	ldrb	r0, [r5, r0]
10069268:	2800      	cmp	r0, #0
1006926a:	d003      	beq.n	10069274 <llc_padv_prepare_periodic_advertising_packet+0x24>
1006926c:	4628      	mov	r0, r5
1006926e:	306f      	adds	r0, #111	@ 0x6f
10069270:	7842      	ldrb	r2, [r0, #1]
10069272:	e000      	b.n	10069276 <llc_padv_prepare_periodic_advertising_packet+0x26>
10069274:	2200      	movs	r2, #0
10069276:	7a68      	ldrb	r0, [r5, #9]
10069278:	2800      	cmp	r0, #0
1006927a:	d00e      	beq.n	1006929a <llc_padv_prepare_periodic_advertising_packet+0x4a>
1006927c:	ae03      	add	r6, sp, #12
1006927e:	4628      	mov	r0, r5
10069280:	4621      	mov	r1, r4
10069282:	4632      	mov	r2, r6
10069284:	f000 faa0 	bl	100697c8 <llc_padv_wr_prepare_data_struc_from_packet_type>
10069288:	88a9      	ldrh	r1, [r5, #4]
1006928a:	9500      	str	r5, [sp, #0]
1006928c:	9601      	str	r6, [sp, #4]
1006928e:	2200      	movs	r2, #0
10069290:	2301      	movs	r3, #1
10069292:	4620      	mov	r0, r4
10069294:	f7f7 fd5b 	bl	10060d4e <llc_eadv_prepare_extended_advertising_packet>
10069298:	e016      	b.n	100692c8 <llc_padv_prepare_periodic_advertising_packet+0x78>
1006929a:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
1006929c:	21c7      	movs	r1, #199	@ 0xc7
1006929e:	5c40      	ldrb	r0, [r0, r1]
100692a0:	a909      	add	r1, sp, #36	@ 0x24
100692a2:	7809      	ldrb	r1, [r1, #0]
100692a4:	f7f3 fca4 	bl	1005cbf0 <llc_calculate_packet_duration_stu>
100692a8:	30cd      	adds	r0, #205	@ 0xcd
100692aa:	6fae      	ldr	r6, [r5, #120]	@ 0x78
100692ac:	6070      	str	r0, [r6, #4]
100692ae:	88a9      	ldrh	r1, [r5, #4]
100692b0:	4630      	mov	r0, r6
100692b2:	3008      	adds	r0, #8
100692b4:	9500      	str	r5, [sp, #0]
100692b6:	9001      	str	r0, [sp, #4]
100692b8:	2200      	movs	r2, #0
100692ba:	2301      	movs	r3, #1
100692bc:	4620      	mov	r0, r4
100692be:	f7f7 fd46 	bl	10060d4e <llc_eadv_prepare_extended_advertising_packet>
100692c2:	4241      	negs	r1, r0
100692c4:	4141      	adcs	r1, r0
100692c6:	7031      	strb	r1, [r6, #0]
100692c8:	b00a      	add	sp, #40	@ 0x28
100692ca:	bd70      	pop	{r4, r5, r6, pc}

100692cc <llc_padv_cancel_slot>:
100692cc:	b580      	push	{r7, lr}
100692ce:	2100      	movs	r1, #0
100692d0:	f7ee fd70 	bl	10057db4 <llc_padv_init_per>
100692d4:	bd80      	pop	{r7, pc}
	...

100692d8 <llc_padv_isr>:
100692d8:	b5f0      	push	{r4, r5, r6, r7, lr}
100692da:	b083      	sub	sp, #12
100692dc:	4604      	mov	r4, r0
100692de:	206f      	movs	r0, #111	@ 0x6f
100692e0:	5c20      	ldrb	r0, [r4, r0]
100692e2:	6fa7      	ldr	r7, [r4, #120]	@ 0x78
100692e4:	4626      	mov	r6, r4
100692e6:	366c      	adds	r6, #108	@ 0x6c
100692e8:	2800      	cmp	r0, #0
100692ea:	d006      	beq.n	100692fa <llc_padv_isr+0x22>
100692ec:	7a30      	ldrb	r0, [r6, #8]
100692ee:	2800      	cmp	r0, #0
100692f0:	d001      	beq.n	100692f6 <llc_padv_isr+0x1e>
100692f2:	1e40      	subs	r0, r0, #1
100692f4:	e000      	b.n	100692f8 <llc_padv_isr+0x20>
100692f6:	79f0      	ldrb	r0, [r6, #7]
100692f8:	7230      	strb	r0, [r6, #8]
100692fa:	481b      	ldr	r0, [pc, #108]	@ (10069368 <__arm_cp.0_0>)
100692fc:	6800      	ldr	r0, [r0, #0]
100692fe:	f7dc fd15 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
10069302:	2800      	cmp	r0, #0
10069304:	d014      	beq.n	10069330 <llc_padv_isr+0x58>
10069306:	7838      	ldrb	r0, [r7, #0]
10069308:	2800      	cmp	r0, #0
1006930a:	d111      	bne.n	10069330 <llc_padv_isr+0x58>
1006930c:	4817      	ldr	r0, [pc, #92]	@ (1006936c <__arm_cp.0_1>)
1006930e:	6800      	ldr	r0, [r0, #0]
10069310:	6805      	ldr	r5, [r0, #0]
10069312:	6878      	ldr	r0, [r7, #4]
10069314:	a902      	add	r1, sp, #8
10069316:	aa01      	add	r2, sp, #4
10069318:	f7f7 ff36 	bl	10061188 <llc_eadv_calculate_aux_ptr_offset>
1006931c:	1a28      	subs	r0, r5, r0
1006931e:	30cd      	adds	r0, #205	@ 0xcd
10069320:	2501      	movs	r5, #1
10069322:	4629      	mov	r1, r5
10069324:	462a      	mov	r2, r5
10069326:	f7db fc58 	bl	10044bda <BLEPLAT_SetRadioTimerValue>
1006932a:	2800      	cmp	r0, #0
1006932c:	d00a      	beq.n	10069344 <llc_padv_isr+0x6c>
1006932e:	703d      	strb	r5, [r7, #0]
10069330:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
10069332:	3008      	adds	r0, #8
10069334:	f7f6 fc01 	bl	1005fb3a <LL_eadv_data_struc_reset_data_tosend>
10069338:	7830      	ldrb	r0, [r6, #0]
1006933a:	f7f9 f8b1 	bl	100624a0 <LL_sched_engine>
1006933e:	2001      	movs	r0, #1
10069340:	b003      	add	sp, #12
10069342:	bdf0      	pop	{r4, r5, r6, r7, pc}
10069344:	f7dc fc42 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10069348:	7aa1      	ldrb	r1, [r4, #10]
1006934a:	7830      	ldrb	r0, [r6, #0]
1006934c:	f7dd f88b 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
10069350:	4620      	mov	r0, r4
10069352:	3014      	adds	r0, #20
10069354:	f7ee fc86 	bl	10057c64 <llc_mngm_csa2_select_random_channel>
10069358:	72a0      	strb	r0, [r4, #10]
1006935a:	2109      	movs	r1, #9
1006935c:	4620      	mov	r0, r4
1006935e:	f7ff ff77 	bl	10069250 <llc_padv_prepare_periodic_advertising_packet>
10069362:	2000      	movs	r0, #0
10069364:	e7ec      	b.n	10069340 <llc_padv_isr+0x68>
10069366:	46c0      	nop			@ (mov r8, r8)

10069368 <__arm_cp.0_0>:
10069368:	20000890 	.word	0x20000890

1006936c <__arm_cp.0_1>:
1006936c:	20000894 	.word	0x20000894

10069370 <llc_padv_wr_skip_slot_tx>:
10069370:	b5f0      	push	{r4, r5, r6, r7, lr}
10069372:	b08f      	sub	sp, #60	@ 0x3c
10069374:	9109      	str	r1, [sp, #36]	@ 0x24
10069376:	4604      	mov	r4, r0
10069378:	6d00      	ldr	r0, [r0, #80]	@ 0x50
1006937a:	900a      	str	r0, [sp, #40]	@ 0x28
1006937c:	6d60      	ldr	r0, [r4, #84]	@ 0x54
1006937e:	900e      	str	r0, [sp, #56]	@ 0x38
10069380:	206a      	movs	r0, #106	@ 0x6a
10069382:	5a21      	ldrh	r1, [r4, r0]
10069384:	a80d      	add	r0, sp, #52	@ 0x34
10069386:	8001      	strh	r1, [r0, #0]
10069388:	7a66      	ldrb	r6, [r4, #9]
1006938a:	4621      	mov	r1, r4
1006938c:	316a      	adds	r1, #106	@ 0x6a
1006938e:	9108      	str	r1, [sp, #32]
10069390:	788b      	ldrb	r3, [r1, #2]
10069392:	6fa7      	ldr	r7, [r4, #120]	@ 0x78
10069394:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
10069396:	910c      	str	r1, [sp, #48]	@ 0x30
10069398:	212c      	movs	r1, #44	@ 0x2c
1006939a:	9307      	str	r3, [sp, #28]
1006939c:	4359      	muls	r1, r3
1006939e:	687a      	ldr	r2, [r7, #4]
100693a0:	4b26      	ldr	r3, [pc, #152]	@ (1006943c <__arm_cp.0_0>)
100693a2:	681b      	ldr	r3, [r3, #0]
100693a4:	5859      	ldr	r1, [r3, r1]
100693a6:	ad0b      	add	r5, sp, #44	@ 0x2c
100693a8:	9504      	str	r5, [sp, #16]
100693aa:	ab0c      	add	r3, sp, #48	@ 0x30
100693ac:	9303      	str	r3, [sp, #12]
100693ae:	9002      	str	r0, [sp, #8]
100693b0:	a80e      	add	r0, sp, #56	@ 0x38
100693b2:	9001      	str	r0, [sp, #4]
100693b4:	9206      	str	r2, [sp, #24]
100693b6:	9200      	str	r2, [sp, #0]
100693b8:	9809      	ldr	r0, [sp, #36]	@ 0x24
100693ba:	4632      	mov	r2, r6
100693bc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100693be:	f000 f83f 	bl	10069440 <llc_padv_wr_skip_slot>
100693c2:	2142      	movs	r1, #66	@ 0x42
100693c4:	5c79      	ldrb	r1, [r7, r1]
100693c6:	782d      	ldrb	r5, [r5, #0]
100693c8:	428d      	cmp	r5, r1
100693ca:	9009      	str	r0, [sp, #36]	@ 0x24
100693cc:	d109      	bne.n	100693e2 <llc_padv_wr_skip_slot_tx+0x72>
100693ce:	9b06      	ldr	r3, [sp, #24]
100693d0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100693d2:	1c6d      	adds	r5, r5, #1
100693d4:	b2e8      	uxtb	r0, r5
100693d6:	42b0      	cmp	r0, r6
100693d8:	9807      	ldr	r0, [sp, #28]
100693da:	d205      	bcs.n	100693e8 <llc_padv_wr_skip_slot_tx+0x78>
100693dc:	990c      	ldr	r1, [sp, #48]	@ 0x30
100693de:	18c9      	adds	r1, r1, r3
100693e0:	e004      	b.n	100693ec <llc_padv_wr_skip_slot_tx+0x7c>
100693e2:	990c      	ldr	r1, [sp, #48]	@ 0x30
100693e4:	9807      	ldr	r0, [sp, #28]
100693e6:	e001      	b.n	100693ec <llc_padv_wr_skip_slot_tx+0x7c>
100693e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
100693ea:	1889      	adds	r1, r1, r2
100693ec:	f7f8 ffd6 	bl	1006239c <LL_sched_set_anchor>
100693f0:	7c7f      	ldrb	r7, [r7, #17]
100693f2:	9808      	ldr	r0, [sp, #32]
100693f4:	8800      	ldrh	r0, [r0, #0]
100693f6:	a90d      	add	r1, sp, #52	@ 0x34
100693f8:	8809      	ldrh	r1, [r1, #0]
100693fa:	4281      	cmp	r1, r0
100693fc:	d108      	bne.n	10069410 <llc_padv_wr_skip_slot_tx+0xa0>
100693fe:	b2e8      	uxtb	r0, r5
10069400:	b2f9      	uxtb	r1, r7
10069402:	4281      	cmp	r1, r0
10069404:	d216      	bcs.n	10069434 <llc_padv_wr_skip_slot_tx+0xc4>
10069406:	4620      	mov	r0, r4
10069408:	f7ef fa56 	bl	100588b8 <llc_padv_wr_discard_subevent_data>
1006940c:	1c7f      	adds	r7, r7, #1
1006940e:	e7f6      	b.n	100693fe <llc_padv_wr_skip_slot_tx+0x8e>
10069410:	b2f9      	uxtb	r1, r7
10069412:	42b1      	cmp	r1, r6
10069414:	d204      	bcs.n	10069420 <llc_padv_wr_skip_slot_tx+0xb0>
10069416:	4620      	mov	r0, r4
10069418:	f7ef fa4e 	bl	100588b8 <llc_padv_wr_discard_subevent_data>
1006941c:	1c7f      	adds	r7, r7, #1
1006941e:	e7f7      	b.n	10069410 <llc_padv_wr_skip_slot_tx+0xa0>
10069420:	2600      	movs	r6, #0
10069422:	b2e8      	uxtb	r0, r5
10069424:	b2f1      	uxtb	r1, r6
10069426:	4281      	cmp	r1, r0
10069428:	d204      	bcs.n	10069434 <llc_padv_wr_skip_slot_tx+0xc4>
1006942a:	4620      	mov	r0, r4
1006942c:	f7ef fa44 	bl	100588b8 <llc_padv_wr_discard_subevent_data>
10069430:	1c76      	adds	r6, r6, #1
10069432:	e7f6      	b.n	10069422 <llc_padv_wr_skip_slot_tx+0xb2>
10069434:	9809      	ldr	r0, [sp, #36]	@ 0x24
10069436:	b00f      	add	sp, #60	@ 0x3c
10069438:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006943a:	46c0      	nop			@ (mov r8, r8)

1006943c <__arm_cp.0_0>:
1006943c:	2000089c 	.word	0x2000089c

10069440 <llc_padv_wr_skip_slot>:
10069440:	b5f0      	push	{r4, r5, r6, r7, lr}
10069442:	b085      	sub	sp, #20
10069444:	461e      	mov	r6, r3
10069446:	9201      	str	r2, [sp, #4]
10069448:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
1006944a:	9203      	str	r2, [sp, #12]
1006944c:	6817      	ldr	r7, [r2, #0]
1006944e:	1bc9      	subs	r1, r1, r7
10069450:	9004      	str	r0, [sp, #16]
10069452:	180d      	adds	r5, r1, r0
10069454:	4628      	mov	r0, r5
10069456:	4619      	mov	r1, r3
10069458:	f7d6 fef2 	bl	10040240 <__udivsi3>
1006945c:	4604      	mov	r4, r0
1006945e:	9600      	str	r6, [sp, #0]
10069460:	4346      	muls	r6, r0
10069462:	1ba8      	subs	r0, r5, r6
10069464:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
10069466:	4629      	mov	r1, r5
10069468:	f7d6 feea 	bl	10040240 <__udivsi3>
1006946c:	1c41      	adds	r1, r0, #1
1006946e:	980c      	ldr	r0, [sp, #48]	@ 0x30
10069470:	8802      	ldrh	r2, [r0, #0]
10069472:	1913      	adds	r3, r2, r4
10069474:	19f7      	adds	r7, r6, r7
10069476:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10069478:	9202      	str	r2, [sp, #8]
1006947a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
1006947c:	9a01      	ldr	r2, [sp, #4]
1006947e:	4291      	cmp	r1, r2
10069480:	d203      	bcs.n	1006948a <llc_padv_wr_skip_slot+0x4a>
10069482:	462e      	mov	r6, r5
10069484:	434e      	muls	r6, r1
10069486:	19f6      	adds	r6, r6, r7
10069488:	e004      	b.n	10069494 <llc_padv_wr_skip_slot+0x54>
1006948a:	9900      	ldr	r1, [sp, #0]
1006948c:	187e      	adds	r6, r7, r1
1006948e:	1c5b      	adds	r3, r3, #1
10069490:	2100      	movs	r1, #0
10069492:	4637      	mov	r7, r6
10069494:	9a03      	ldr	r2, [sp, #12]
10069496:	6017      	str	r7, [r2, #0]
10069498:	8003      	strh	r3, [r0, #0]
1006949a:	6026      	str	r6, [r4, #0]
1006949c:	9802      	ldr	r0, [sp, #8]
1006949e:	7001      	strb	r1, [r0, #0]
100694a0:	9804      	ldr	r0, [sp, #16]
100694a2:	4629      	mov	r1, r5
100694a4:	f7d6 fecc 	bl	10040240 <__udivsi3>
100694a8:	1c40      	adds	r0, r0, #1
100694aa:	b005      	add	sp, #20
100694ac:	bdf0      	pop	{r4, r5, r6, r7, pc}

100694ae <llc_padv_wr_program_slot_tx>:
100694ae:	b5b0      	push	{r4, r5, r7, lr}
100694b0:	4604      	mov	r4, r0
100694b2:	206c      	movs	r0, #108	@ 0x6c
100694b4:	5c20      	ldrb	r0, [r4, r0]
100694b6:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
100694b8:	7c4d      	ldrb	r5, [r1, #17]
100694ba:	6b89      	ldr	r1, [r1, #56]	@ 0x38
100694bc:	5d49      	ldrb	r1, [r1, r5]
100694be:	f7dc ffd2 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
100694c2:	1da0      	adds	r0, r4, #6
100694c4:	f7f6 ff6c 	bl	100603a0 <LL_eadv_update_did>
100694c8:	350a      	adds	r5, #10
100694ca:	b2e9      	uxtb	r1, r5
100694cc:	4620      	mov	r0, r4
100694ce:	f7ff febf 	bl	10069250 <llc_padv_prepare_periodic_advertising_packet>
100694d2:	bdb0      	pop	{r4, r5, r7, pc}

100694d4 <llc_padv_wr_cancel_slot>:
100694d4:	b580      	push	{r7, lr}
100694d6:	f7ff fef9 	bl	100692cc <llc_padv_cancel_slot>
100694da:	bd80      	pop	{r7, pc}

100694dc <llc_padv_wr_skip_slot_rx>:
100694dc:	b5f0      	push	{r4, r5, r6, r7, lr}
100694de:	b093      	sub	sp, #76	@ 0x4c
100694e0:	910b      	str	r1, [sp, #44]	@ 0x2c
100694e2:	4605      	mov	r5, r0
100694e4:	6d00      	ldr	r0, [r0, #80]	@ 0x50
100694e6:	900a      	str	r0, [sp, #40]	@ 0x28
100694e8:	6d68      	ldr	r0, [r5, #84]	@ 0x54
100694ea:	9012      	str	r0, [sp, #72]	@ 0x48
100694ec:	206a      	movs	r0, #106	@ 0x6a
100694ee:	9006      	str	r0, [sp, #24]
100694f0:	5a28      	ldrh	r0, [r5, r0]
100694f2:	ae11      	add	r6, sp, #68	@ 0x44
100694f4:	8030      	strh	r0, [r6, #0]
100694f6:	4628      	mov	r0, r5
100694f8:	306a      	adds	r0, #106	@ 0x6a
100694fa:	7880      	ldrb	r0, [r0, #2]
100694fc:	9005      	str	r0, [sp, #20]
100694fe:	7a68      	ldrb	r0, [r5, #9]
10069500:	900c      	str	r0, [sp, #48]	@ 0x30
10069502:	6fac      	ldr	r4, [r5, #120]	@ 0x78
10069504:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
10069506:	9010      	str	r0, [sp, #64]	@ 0x40
10069508:	6860      	ldr	r0, [r4, #4]
1006950a:	900d      	str	r0, [sp, #52]	@ 0x34
1006950c:	208c      	movs	r0, #140	@ 0x8c
1006950e:	5c27      	ldrb	r7, [r4, r0]
10069510:	4628      	mov	r0, r5
10069512:	f7ff fe47 	bl	100691a4 <llc_padv_check_and_program_channel_map_update>
10069516:	202c      	movs	r0, #44	@ 0x2c
10069518:	9708      	str	r7, [sp, #32]
1006951a:	4378      	muls	r0, r7
1006951c:	494a      	ldr	r1, [pc, #296]	@ (10069648 <__arm_cp.4_0>)
1006951e:	6809      	ldr	r1, [r1, #0]
10069520:	5809      	ldr	r1, [r1, r0]
10069522:	af0f      	add	r7, sp, #60	@ 0x3c
10069524:	9704      	str	r7, [sp, #16]
10069526:	a810      	add	r0, sp, #64	@ 0x40
10069528:	9003      	str	r0, [sp, #12]
1006952a:	9602      	str	r6, [sp, #8]
1006952c:	a812      	add	r0, sp, #72	@ 0x48
1006952e:	9001      	str	r0, [sp, #4]
10069530:	980d      	ldr	r0, [sp, #52]	@ 0x34
10069532:	9000      	str	r0, [sp, #0]
10069534:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10069536:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10069538:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1006953a:	f7ff ff81 	bl	10069440 <llc_padv_wr_skip_slot>
1006953e:	9009      	str	r0, [sp, #36]	@ 0x24
10069540:	9906      	ldr	r1, [sp, #24]
10069542:	5a68      	ldrh	r0, [r5, r1]
10069544:	9007      	str	r0, [sp, #28]
10069546:	8830      	ldrh	r0, [r6, #0]
10069548:	900b      	str	r0, [sp, #44]	@ 0x2c
1006954a:	5268      	strh	r0, [r5, r1]
1006954c:	9912      	ldr	r1, [sp, #72]	@ 0x48
1006954e:	6569      	str	r1, [r5, #84]	@ 0x54
10069550:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10069552:	63e2      	str	r2, [r4, #60]	@ 0x3c
10069554:	7838      	ldrb	r0, [r7, #0]
10069556:	7460      	strb	r0, [r4, #17]
10069558:	2342      	movs	r3, #66	@ 0x42
1006955a:	5ce3      	ldrb	r3, [r4, r3]
1006955c:	4298      	cmp	r0, r3
1006955e:	d10c      	bne.n	1006957a <llc_padv_wr_skip_slot_rx+0x9e>
10069560:	1c40      	adds	r0, r0, #1
10069562:	b2c3      	uxtb	r3, r0
10069564:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
10069566:	42b3      	cmp	r3, r6
10069568:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1006956a:	d307      	bcc.n	1006957c <llc_padv_wr_skip_slot_rx+0xa0>
1006956c:	ab0f      	add	r3, sp, #60	@ 0x3c
1006956e:	2000      	movs	r0, #0
10069570:	7018      	strb	r0, [r3, #0]
10069572:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10069574:	18c9      	adds	r1, r1, r3
10069576:	1a8b      	subs	r3, r1, r2
10069578:	e000      	b.n	1006957c <llc_padv_wr_skip_slot_rx+0xa0>
1006957a:	2300      	movs	r3, #0
1006957c:	930d      	str	r3, [sp, #52]	@ 0x34
1006957e:	b2c0      	uxtb	r0, r0
10069580:	900a      	str	r0, [sp, #40]	@ 0x28
10069582:	0040      	lsls	r0, r0, #1
10069584:	69e1      	ldr	r1, [r4, #28]
10069586:	6849      	ldr	r1, [r1, #4]
10069588:	5c0e      	ldrb	r6, [r1, r0]
1006958a:	74a6      	strb	r6, [r4, #18]
1006958c:	1808      	adds	r0, r1, r0
1006958e:	7847      	ldrb	r7, [r0, #1]
10069590:	a90e      	add	r1, sp, #56	@ 0x38
10069592:	4628      	mov	r0, r5
10069594:	f000 f85c 	bl	10069650 <llc_padv_wr_calc_rx_start_and_timeout>
10069598:	1bb8      	subs	r0, r7, r6
1006959a:	1c40      	adds	r0, r0, #1
1006959c:	b2c2      	uxtb	r2, r0
1006959e:	4628      	mov	r0, r5
100695a0:	4621      	mov	r1, r4
100695a2:	f7ef fa1c 	bl	100589de <llc_padv_wr_calc_aux_sync_subevent_rsp_interval>
100695a6:	4601      	mov	r1, r0
100695a8:	980e      	ldr	r0, [sp, #56]	@ 0x38
100695aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100695ac:	1882      	adds	r2, r0, r2
100695ae:	9808      	ldr	r0, [sp, #32]
100695b0:	f7f8 fefc 	bl	100623ac <LL_sched_set_taskslot_length_anchor>
100695b4:	4620      	mov	r0, r4
100695b6:	3024      	adds	r0, #36	@ 0x24
100695b8:	f7dc fcdc 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
100695bc:	4628      	mov	r0, r5
100695be:	f7ff fe0f 	bl	100691e0 <llc_padv_apply_channel_map_update_if_pending>
100695c2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
100695c4:	9807      	ldr	r0, [sp, #28]
100695c6:	42b8      	cmp	r0, r7
100695c8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
100695ca:	d012      	beq.n	100695f2 <llc_padv_wr_skip_slot_rx+0x116>
100695cc:	4637      	mov	r7, r6
100695ce:	9e05      	ldr	r6, [sp, #20]
100695d0:	4630      	mov	r0, r6
100695d2:	f7dc fd90 	bl	100460f6 <BLEPLAT_CNTR_SmGetAccessAddr>
100695d6:	6ba1      	ldr	r1, [r4, #56]	@ 0x38
100695d8:	9700      	str	r7, [sp, #0]
100695da:	9001      	str	r0, [sp, #4]
100695dc:	9102      	str	r1, [sp, #8]
100695de:	4629      	mov	r1, r5
100695e0:	3114      	adds	r1, #20
100695e2:	2301      	movs	r3, #1
100695e4:	4630      	mov	r0, r6
100695e6:	463e      	mov	r6, r7
100695e8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
100695ea:	463a      	mov	r2, r7
100695ec:	f7ee faa7 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
100695f0:	72a8      	strb	r0, [r5, #10]
100695f2:	7de0      	ldrb	r0, [r4, #23]
100695f4:	0640      	lsls	r0, r0, #25
100695f6:	d118      	bne.n	1006962a <llc_padv_wr_skip_slot_rx+0x14e>
100695f8:	1e70      	subs	r0, r6, #1
100695fa:	d800      	bhi.n	100695fe <llc_padv_wr_skip_slot_rx+0x122>
100695fc:	2001      	movs	r0, #1
100695fe:	4913      	ldr	r1, [pc, #76]	@ (1006964c <__arm_cp.4_1>)
10069600:	7f09      	ldrb	r1, [r1, #28]
10069602:	1e49      	subs	r1, r1, #1
10069604:	2902      	cmp	r1, #2
10069606:	d300      	bcc.n	1006960a <llc_padv_wr_skip_slot_rx+0x12e>
10069608:	2102      	movs	r1, #2
1006960a:	42b1      	cmp	r1, r6
1006960c:	d300      	bcc.n	10069610 <llc_padv_wr_skip_slot_rx+0x134>
1006960e:	4601      	mov	r1, r0
10069610:	b2c8      	uxtb	r0, r1
10069612:	990a      	ldr	r1, [sp, #40]	@ 0x28
10069614:	1840      	adds	r0, r0, r1
10069616:	7de1      	ldrb	r1, [r4, #23]
10069618:	7da2      	ldrb	r2, [r4, #22]
1006961a:	1c52      	adds	r2, r2, #1
1006961c:	b2d3      	uxtb	r3, r2
1006961e:	4298      	cmp	r0, r3
10069620:	d201      	bcs.n	10069626 <llc_padv_wr_skip_slot_rx+0x14a>
10069622:	75e1      	strb	r1, [r4, #23]
10069624:	e00d      	b.n	10069642 <llc_padv_wr_skip_slot_rx+0x166>
10069626:	1a80      	subs	r0, r0, r2
10069628:	75e0      	strb	r0, [r4, #23]
1006962a:	6fe8      	ldr	r0, [r5, #124]	@ 0x7c
1006962c:	21be      	movs	r1, #190	@ 0xbe
1006962e:	5c40      	ldrb	r0, [r0, r1]
10069630:	2200      	movs	r2, #0
10069632:	4631      	mov	r1, r6
10069634:	4623      	mov	r3, r4
10069636:	f7ee ffd9 	bl	100585ec <llc_padv_wr_fetch_subevent_data>
1006963a:	2800      	cmp	r0, #0
1006963c:	d000      	beq.n	10069640 <llc_padv_wr_skip_slot_rx+0x164>
1006963e:	1c7f      	adds	r7, r7, #1
10069640:	8427      	strh	r7, [r4, #32]
10069642:	9809      	ldr	r0, [sp, #36]	@ 0x24
10069644:	b013      	add	sp, #76	@ 0x4c
10069646:	bdf0      	pop	{r4, r5, r6, r7, pc}

10069648 <__arm_cp.4_0>:
10069648:	2000089c 	.word	0x2000089c

1006964c <__arm_cp.4_1>:
1006964c:	200008a8 	.word	0x200008a8

10069650 <llc_padv_wr_calc_rx_start_and_timeout>:
10069650:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10069652:	460d      	mov	r5, r1
10069654:	9000      	str	r0, [sp, #0]
10069656:	6f86      	ldr	r6, [r0, #120]	@ 0x78
10069658:	7cb0      	ldrb	r0, [r6, #18]
1006965a:	68b1      	ldr	r1, [r6, #8]
1006965c:	68f4      	ldr	r4, [r6, #12]
1006965e:	4360      	muls	r0, r4
10069660:	1847      	adds	r7, r0, r1
10069662:	2032      	movs	r0, #50	@ 0x32
10069664:	4639      	mov	r1, r7
10069666:	f7f3 f9a7 	bl	1005c9b8 <llc_calculate_window_widening_from_ppm>
1006966a:	462b      	mov	r3, r5
1006966c:	4605      	mov	r5, r0
1006966e:	480f      	ldr	r0, [pc, #60]	@ (100696ac <__arm_cp.5_0>)
10069670:	2b00      	cmp	r3, #0
10069672:	d004      	beq.n	1006967e <llc_padv_wr_calc_rx_start_and_timeout+0x2e>
10069674:	0869      	lsrs	r1, r5, #1
10069676:	1a79      	subs	r1, r7, r1
10069678:	6bf2      	ldr	r2, [r6, #60]	@ 0x3c
1006967a:	1889      	adds	r1, r1, r2
1006967c:	6019      	str	r1, [r3, #0]
1006967e:	4345      	muls	r5, r0
10069680:	4344      	muls	r4, r0
10069682:	0a21      	lsrs	r1, r4, #8
10069684:	4608      	mov	r0, r1
10069686:	3896      	subs	r0, #150	@ 0x96
10069688:	d800      	bhi.n	1006968c <llc_padv_wr_calc_rx_start_and_timeout+0x3c>
1006968a:	4608      	mov	r0, r1
1006968c:	0a69      	lsrs	r1, r5, #9
1006968e:	180e      	adds	r6, r1, r0
10069690:	9800      	ldr	r0, [sp, #0]
10069692:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
10069694:	21c7      	movs	r1, #199	@ 0xc7
10069696:	5c40      	ldrb	r0, [r0, r1]
10069698:	f7f3 fad8 	bl	1005cc4c <llc_calculate_preamble_and_aa_duration_us>
1006969c:	0a29      	lsrs	r1, r5, #8
1006969e:	1808      	adds	r0, r1, r0
100696a0:	42b0      	cmp	r0, r6
100696a2:	d800      	bhi.n	100696a6 <llc_padv_wr_calc_rx_start_and_timeout+0x56>
100696a4:	4606      	mov	r6, r0
100696a6:	4630      	mov	r0, r6
100696a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100696aa:	46c0      	nop			@ (mov r8, r8)

100696ac <__arm_cp.5_0>:
100696ac:	00000271 	.word	0x00000271

100696b0 <llc_padv_wr_program_slot_rx>:
100696b0:	b5b0      	push	{r4, r5, r7, lr}
100696b2:	4605      	mov	r5, r0
100696b4:	6f84      	ldr	r4, [r0, #120]	@ 0x78
100696b6:	208c      	movs	r0, #140	@ 0x8c
100696b8:	5c20      	ldrb	r0, [r4, r0]
100696ba:	7c61      	ldrb	r1, [r4, #17]
100696bc:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
100696be:	5c51      	ldrb	r1, [r2, r1]
100696c0:	f7dc fed1 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
100696c4:	2100      	movs	r1, #0
100696c6:	4628      	mov	r0, r5
100696c8:	f7ff ffc2 	bl	10069650 <llc_padv_wr_calc_rx_start_and_timeout>
100696cc:	4601      	mov	r1, r0
100696ce:	3424      	adds	r4, #36	@ 0x24
100696d0:	4620      	mov	r0, r4
100696d2:	f7dc fcb0 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
100696d6:	bdb0      	pop	{r4, r5, r7, pc}

100696d8 <llc_padv_wr_isr_tx>:
100696d8:	b5b0      	push	{r4, r5, r7, lr}
100696da:	4604      	mov	r4, r0
100696dc:	6f85      	ldr	r5, [r0, #120]	@ 0x78
100696de:	4809      	ldr	r0, [pc, #36]	@ (10069704 <__arm_cp.0_0>)
100696e0:	6800      	ldr	r0, [r0, #0]
100696e2:	f7dc fb23 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
100696e6:	1e41      	subs	r1, r0, #1
100696e8:	4188      	sbcs	r0, r1
100696ea:	74e8      	strb	r0, [r5, #19]
100696ec:	208c      	movs	r0, #140	@ 0x8c
100696ee:	5c28      	ldrb	r0, [r5, r0]
100696f0:	210b      	movs	r1, #11
100696f2:	2208      	movs	r2, #8
100696f4:	f7f9 f89a 	bl	1006282c <LL_sched_set_priority>
100696f8:	206c      	movs	r0, #108	@ 0x6c
100696fa:	5c20      	ldrb	r0, [r4, r0]
100696fc:	f7f8 fed0 	bl	100624a0 <LL_sched_engine>
10069700:	2001      	movs	r0, #1
10069702:	bdb0      	pop	{r4, r5, r7, pc}

10069704 <__arm_cp.0_0>:
10069704:	20000890 	.word	0x20000890

10069708 <llc_padv_wr_isr_rx>:
10069708:	b5f0      	push	{r4, r5, r6, r7, lr}
1006970a:	b085      	sub	sp, #20
1006970c:	4606      	mov	r6, r0
1006970e:	6f82      	ldr	r2, [r0, #120]	@ 0x78
10069710:	7c50      	ldrb	r0, [r2, #17]
10069712:	9001      	str	r0, [sp, #4]
10069714:	0040      	lsls	r0, r0, #1
10069716:	69d1      	ldr	r1, [r2, #28]
10069718:	6849      	ldr	r1, [r1, #4]
1006971a:	1808      	adds	r0, r1, r0
1006971c:	7845      	ldrb	r5, [r0, #1]
1006971e:	7c97      	ldrb	r7, [r2, #18]
10069720:	9203      	str	r2, [sp, #12]
10069722:	4610      	mov	r0, r2
10069724:	3024      	adds	r0, #36	@ 0x24
10069726:	9002      	str	r0, [sp, #8]
10069728:	f7dc fb30 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
1006972c:	2401      	movs	r4, #1
1006972e:	9700      	str	r7, [sp, #0]
10069730:	2c00      	cmp	r4, #0
10069732:	d023      	beq.n	1006977c <llc_padv_wr_isr_rx+0x74>
10069734:	b2f8      	uxtb	r0, r7
10069736:	42a8      	cmp	r0, r5
10069738:	d020      	beq.n	1006977c <llc_padv_wr_isr_rx+0x74>
1006973a:	1c7f      	adds	r7, r7, #1
1006973c:	9803      	ldr	r0, [sp, #12]
1006973e:	7487      	strb	r7, [r0, #18]
10069740:	a904      	add	r1, sp, #16
10069742:	4630      	mov	r0, r6
10069744:	f7ff ff84 	bl	10069650 <llc_padv_wr_calc_rx_start_and_timeout>
10069748:	4604      	mov	r4, r0
1006974a:	f7db fa1f 	bl	10044b8c <BLEPLAT_GetCurrentSysTime>
1006974e:	4601      	mov	r1, r0
10069750:	9804      	ldr	r0, [sp, #16]
10069752:	1a41      	subs	r1, r0, r1
10069754:	3957      	subs	r1, #87	@ 0x57
10069756:	d407      	bmi.n	10069768 <llc_padv_wr_isr_rx+0x60>
10069758:	2100      	movs	r1, #0
1006975a:	460a      	mov	r2, r1
1006975c:	f7db fa3d 	bl	10044bda <BLEPLAT_SetRadioTimerValue>
10069760:	2800      	cmp	r0, #0
10069762:	d003      	beq.n	1006976c <llc_padv_wr_isr_rx+0x64>
10069764:	2401      	movs	r4, #1
10069766:	e7e3      	b.n	10069730 <llc_padv_wr_isr_rx+0x28>
10069768:	f7db fa69 	bl	10044c3e <BLEPLAT_SetRadioCloseTimeout>
1006976c:	f7dc fa2e 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10069770:	9802      	ldr	r0, [sp, #8]
10069772:	4621      	mov	r1, r4
10069774:	f7dc fc5f 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
10069778:	2400      	movs	r4, #0
1006977a:	e7d9      	b.n	10069730 <llc_padv_wr_isr_rx+0x28>
1006977c:	4811      	ldr	r0, [pc, #68]	@ (100697c4 <__arm_cp.1_0>)
1006977e:	6805      	ldr	r5, [r0, #0]
10069780:	4628      	mov	r0, r5
10069782:	f7dc fabc 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
10069786:	2800      	cmp	r0, #0
10069788:	d00d      	beq.n	100697a6 <llc_padv_wr_isr_rx+0x9e>
1006978a:	4628      	mov	r0, r5
1006978c:	f7dc fa93 	bl	10045cb6 <BLEPLAT_CNTR_IntGetIntStatusTxRxSkip>
10069790:	2800      	cmp	r0, #0
10069792:	d108      	bne.n	100697a6 <llc_padv_wr_isr_rx+0x9e>
10069794:	6ff0      	ldr	r0, [r6, #124]	@ 0x7c
10069796:	21be      	movs	r1, #190	@ 0xbe
10069798:	5c40      	ldrb	r0, [r0, r1]
1006979a:	9903      	ldr	r1, [sp, #12]
1006979c:	7cca      	ldrb	r2, [r1, #19]
1006979e:	9901      	ldr	r1, [sp, #4]
100697a0:	9b00      	ldr	r3, [sp, #0]
100697a2:	f7ef f8a1 	bl	100588e8 <llc_padv_wr_process_response_data>
100697a6:	2c00      	cmp	r4, #0
100697a8:	d009      	beq.n	100697be <llc_padv_wr_isr_rx+0xb6>
100697aa:	258c      	movs	r5, #140	@ 0x8c
100697ac:	9e03      	ldr	r6, [sp, #12]
100697ae:	5d70      	ldrb	r0, [r6, r5]
100697b0:	210a      	movs	r1, #10
100697b2:	2207      	movs	r2, #7
100697b4:	f7f9 f83a 	bl	1006282c <LL_sched_set_priority>
100697b8:	5d70      	ldrb	r0, [r6, r5]
100697ba:	f7f8 fe71 	bl	100624a0 <LL_sched_engine>
100697be:	b2e0      	uxtb	r0, r4
100697c0:	b005      	add	sp, #20
100697c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

100697c4 <__arm_cp.1_0>:
100697c4:	20000890 	.word	0x20000890

100697c8 <llc_padv_wr_prepare_data_struc_from_packet_type>:
100697c8:	b510      	push	{r4, lr}
100697ca:	4614      	mov	r4, r2
100697cc:	390a      	subs	r1, #10
100697ce:	b2c9      	uxtb	r1, r1
100697d0:	f7ef f82b 	bl	1005882a <llc_padv_wr_get_subevent_data>
100697d4:	2100      	movs	r1, #0
100697d6:	2800      	cmp	r0, #0
100697d8:	d003      	beq.n	100697e2 <llc_padv_wr_prepare_data_struc_from_packet_type+0x1a>
100697da:	7802      	ldrb	r2, [r0, #0]
100697dc:	6840      	ldr	r0, [r0, #4]
100697de:	2301      	movs	r3, #1
100697e0:	e002      	b.n	100697e8 <llc_padv_wr_prepare_data_struc_from_packet_type+0x20>
100697e2:	460b      	mov	r3, r1
100697e4:	460a      	mov	r2, r1
100697e6:	4608      	mov	r0, r1
100697e8:	60a1      	str	r1, [r4, #8]
100697ea:	60e1      	str	r1, [r4, #12]
100697ec:	7423      	strb	r3, [r4, #16]
100697ee:	80e2      	strh	r2, [r4, #6]
100697f0:	80a1      	strh	r1, [r4, #4]
100697f2:	6020      	str	r0, [r4, #0]
100697f4:	bd10      	pop	{r4, pc}
	...

100697f8 <llc_priv_mem_allocate>:
100697f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100697fa:	2800      	cmp	r0, #0
100697fc:	d046      	beq.n	1006988c <llc_priv_mem_allocate+0x94>
100697fe:	460e      	mov	r6, r1
10069800:	2501      	movs	r5, #1
10069802:	2168      	movs	r1, #104	@ 0x68
10069804:	4628      	mov	r0, r5
10069806:	f7f9 fb15 	bl	10062e34 <csmem_mem_0_assign>
1006980a:	4f21      	ldr	r7, [pc, #132]	@ (10069890 <__arm_cp.0_0>)
1006980c:	6839      	ldr	r1, [r7, #0]
1006980e:	249c      	movs	r4, #156	@ 0x9c
10069810:	5909      	ldr	r1, [r1, r4]
10069812:	6088      	str	r0, [r1, #8]
10069814:	40b5      	lsls	r5, r6
10069816:	b2ee      	uxtb	r6, r5
10069818:	2108      	movs	r1, #8
1006981a:	4630      	mov	r0, r6
1006981c:	f7f9 fb0a 	bl	10062e34 <csmem_mem_0_assign>
10069820:	6839      	ldr	r1, [r7, #0]
10069822:	5909      	ldr	r1, [r1, r4]
10069824:	6889      	ldr	r1, [r1, #8]
10069826:	724d      	strb	r5, [r1, #9]
10069828:	6048      	str	r0, [r1, #4]
1006982a:	9600      	str	r6, [sp, #0]
1006982c:	0075      	lsls	r5, r6, #1
1006982e:	2611      	movs	r6, #17
10069830:	2e21      	cmp	r6, #33	@ 0x21
10069832:	d00f      	beq.n	10069854 <llc_priv_mem_allocate+0x5c>
10069834:	2108      	movs	r1, #8
10069836:	4628      	mov	r0, r5
10069838:	f7f9 fafc 	bl	10062e34 <csmem_mem_0_assign>
1006983c:	6839      	ldr	r1, [r7, #0]
1006983e:	5909      	ldr	r1, [r1, r4]
10069840:	6889      	ldr	r1, [r1, #8]
10069842:	1989      	adds	r1, r1, r6
10069844:	1f49      	subs	r1, r1, #5
10069846:	6008      	str	r0, [r1, #0]
10069848:	6838      	ldr	r0, [r7, #0]
1006984a:	5900      	ldr	r0, [r0, r4]
1006984c:	6880      	ldr	r0, [r0, #8]
1006984e:	5585      	strb	r5, [r0, r6]
10069850:	3608      	adds	r6, #8
10069852:	e7ed      	b.n	10069830 <llc_priv_mem_allocate+0x38>
10069854:	2128      	movs	r1, #40	@ 0x28
10069856:	9800      	ldr	r0, [sp, #0]
10069858:	f7f9 faec 	bl	10062e34 <csmem_mem_0_assign>
1006985c:	6839      	ldr	r1, [r7, #0]
1006985e:	5909      	ldr	r1, [r1, r4]
10069860:	6889      	ldr	r1, [r1, #8]
10069862:	6008      	str	r0, [r1, #0]
10069864:	480b      	ldr	r0, [pc, #44]	@ (10069894 <__arm_cp.0_1>)
10069866:	2502      	movs	r5, #2
10069868:	2601      	movs	r6, #1
1006986a:	4629      	mov	r1, r5
1006986c:	4632      	mov	r2, r6
1006986e:	f7f9 facf 	bl	10062e10 <csmem_mem_assign>
10069872:	6839      	ldr	r1, [r7, #0]
10069874:	5909      	ldr	r1, [r1, r4]
10069876:	6889      	ldr	r1, [r1, #8]
10069878:	6488      	str	r0, [r1, #72]	@ 0x48
1006987a:	4806      	ldr	r0, [pc, #24]	@ (10069894 <__arm_cp.0_1>)
1006987c:	4631      	mov	r1, r6
1006987e:	462a      	mov	r2, r5
10069880:	f7f9 fac6 	bl	10062e10 <csmem_mem_assign>
10069884:	6839      	ldr	r1, [r7, #0]
10069886:	5909      	ldr	r1, [r1, r4]
10069888:	6889      	ldr	r1, [r1, #8]
1006988a:	64c8      	str	r0, [r1, #76]	@ 0x4c
1006988c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006988e:	46c0      	nop			@ (mov r8, r8)

10069890 <__arm_cp.0_0>:
10069890:	20000894 	.word	0x20000894

10069894 <__arm_cp.0_1>:
10069894:	200008a4 	.word	0x200008a4

10069898 <llc_pscan_cancel_slot>:
10069898:	b5f0      	push	{r4, r5, r6, r7, lr}
1006989a:	b089      	sub	sp, #36	@ 0x24
1006989c:	4604      	mov	r4, r0
1006989e:	f7ef fdeb 	bl	10059478 <llc_pscan_get_cntxt_p>
100698a2:	21ff      	movs	r1, #255	@ 0xff
100698a4:	8101      	strh	r1, [r0, #8]
100698a6:	2181      	movs	r1, #129	@ 0x81
100698a8:	5c61      	ldrb	r1, [r4, r1]
100698aa:	064a      	lsls	r2, r1, #25
100698ac:	4625      	mov	r5, r4
100698ae:	357e      	adds	r5, #126	@ 0x7e
100698b0:	2a00      	cmp	r2, #0
100698b2:	d40e      	bmi.n	100698d2 <llc_pscan_cancel_slot+0x3a>
100698b4:	4626      	mov	r6, r4
100698b6:	364a      	adds	r6, #74	@ 0x4a
100698b8:	06cf      	lsls	r7, r1, #27
100698ba:	0fba      	lsrs	r2, r7, #30
100698bc:	d00d      	beq.n	100698da <llc_pscan_cancel_slot+0x42>
100698be:	ab03      	add	r3, sp, #12
100698c0:	2200      	movs	r2, #0
100698c2:	751a      	strb	r2, [r3, #20]
100698c4:	74da      	strb	r2, [r3, #19]
100698c6:	749a      	strb	r2, [r3, #18]
100698c8:	745a      	strb	r2, [r3, #17]
100698ca:	2f00      	cmp	r7, #0
100698cc:	d50b      	bpl.n	100698e6 <llc_pscan_cancel_slot+0x4e>
100698ce:	2744      	movs	r7, #68	@ 0x44
100698d0:	e00a      	b.n	100698e8 <llc_pscan_cancel_slot+0x50>
100698d2:	4620      	mov	r0, r4
100698d4:	f000 f88e 	bl	100699f4 <llc_pscan_cancel_slot_cte_ucfg_weak>
100698d8:	e035      	b.n	10069946 <llc_pscan_cancel_slot+0xae>
100698da:	0688      	lsls	r0, r1, #26
100698dc:	d433      	bmi.n	10069946 <llc_pscan_cancel_slot+0xae>
100698de:	8870      	ldrh	r0, [r6, #2]
100698e0:	f7ef fff4 	bl	100598cc <llc_pscan_push_sync_lost_event>
100698e4:	e02f      	b.n	10069946 <llc_pscan_cancel_slot+0xae>
100698e6:	273e      	movs	r7, #62	@ 0x3e
100698e8:	0609      	lsls	r1, r1, #24
100698ea:	d500      	bpl.n	100698ee <llc_pscan_cancel_slot+0x56>
100698ec:	2707      	movs	r7, #7
100698ee:	731f      	strb	r7, [r3, #12]
100698f0:	7829      	ldrb	r1, [r5, #0]
100698f2:	29ff      	cmp	r1, #255	@ 0xff
100698f4:	d017      	beq.n	10069926 <llc_pscan_cancel_slot+0x8e>
100698f6:	4608      	mov	r0, r1
100698f8:	f7ec fb88 	bl	1005600c <llc_conn_get_cntxt_per_p>
100698fc:	8f41      	ldrh	r1, [r0, #58]	@ 0x3a
100698fe:	a803      	add	r0, sp, #12
10069900:	8081      	strh	r1, [r0, #4]
10069902:	7fe1      	ldrb	r1, [r4, #31]
10069904:	7401      	strb	r1, [r0, #16]
10069906:	7e21      	ldrb	r1, [r4, #24]
10069908:	7341      	strb	r1, [r0, #13]
1006990a:	7969      	ldrb	r1, [r5, #5]
1006990c:	7381      	strb	r1, [r0, #14]
1006990e:	8831      	ldrh	r1, [r6, #0]
10069910:	8101      	strh	r1, [r0, #8]
10069912:	79e9      	ldrb	r1, [r5, #7]
10069914:	73c1      	strb	r1, [r0, #15]
10069916:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10069918:	0a49      	lsrs	r1, r1, #9
1006991a:	80c1      	strh	r1, [r0, #6]
1006991c:	3419      	adds	r4, #25
1006991e:	9403      	str	r4, [sp, #12]
10069920:	f7e4 ffc1 	bl	1004e8a6 <llc_pscan_push_past_received_event_ucfg>
10069924:	e00f      	b.n	10069946 <llc_pscan_cancel_slot+0xae>
10069926:	a901      	add	r1, sp, #4
10069928:	808a      	strh	r2, [r1, #4]
1006992a:	ac03      	add	r4, sp, #12
1006992c:	7422      	strb	r2, [r4, #16]
1006992e:	8162      	strh	r2, [r4, #10]
10069930:	7362      	strb	r2, [r4, #13]
10069932:	81e2      	strh	r2, [r4, #14]
10069934:	80e2      	strh	r2, [r4, #6]
10069936:	9201      	str	r2, [sp, #4]
10069938:	9103      	str	r1, [sp, #12]
1006993a:	300c      	adds	r0, #12
1006993c:	f7f0 f93a 	bl	10059bb4 <llc_pscan_enable_adv_addr_ucfg_weak>
10069940:	4620      	mov	r0, r4
10069942:	f7e4 ffbc 	bl	1004e8be <llc_pscan_push_sync_established_event_ucfg>
10069946:	7a68      	ldrb	r0, [r5, #9]
10069948:	f7ef fde4 	bl	10059514 <llc_pscan_per_init>
1006994c:	7a68      	ldrb	r0, [r5, #9]
1006994e:	f7e5 f808 	bl	1004e962 <llc_pscan_wr_per_init_ucfg>
10069952:	b009      	add	sp, #36	@ 0x24
10069954:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

10069958 <llc_pscan_program_slot>:
10069958:	b5f0      	push	{r4, r5, r6, r7, lr}
1006995a:	b085      	sub	sp, #20
1006995c:	4604      	mov	r4, r0
1006995e:	2083      	movs	r0, #131	@ 0x83
10069960:	5c20      	ldrb	r0, [r4, r0]
10069962:	9004      	str	r0, [sp, #16]
10069964:	2084      	movs	r0, #132	@ 0x84
10069966:	5c25      	ldrb	r5, [r4, r0]
10069968:	2082      	movs	r0, #130	@ 0x82
1006996a:	5c20      	ldrb	r0, [r4, r0]
1006996c:	6be7      	ldr	r7, [r4, #60]	@ 0x3c
1006996e:	4626      	mov	r6, r4
10069970:	367c      	adds	r6, #124	@ 0x7c
10069972:	2800      	cmp	r0, #0
10069974:	d001      	beq.n	1006997a <llc_pscan_program_slot+0x22>
10069976:	7831      	ldrb	r1, [r6, #0]
10069978:	e00f      	b.n	1006999a <llc_pscan_program_slot+0x42>
1006997a:	4620      	mov	r0, r4
1006997c:	3044      	adds	r0, #68	@ 0x44
1006997e:	8802      	ldrh	r2, [r0, #0]
10069980:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
10069982:	2300      	movs	r3, #0
10069984:	9300      	str	r3, [sp, #0]
10069986:	9001      	str	r0, [sp, #4]
10069988:	9302      	str	r3, [sp, #8]
1006998a:	4621      	mov	r1, r4
1006998c:	3156      	adds	r1, #86	@ 0x56
1006998e:	4628      	mov	r0, r5
10069990:	f7ee f8d5 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
10069994:	4601      	mov	r1, r0
10069996:	2001      	movs	r0, #1
10069998:	71b0      	strb	r0, [r6, #6]
1006999a:	4628      	mov	r0, r5
1006999c:	f7dc fd63 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
100699a0:	4809      	ldr	r0, [pc, #36]	@ (100699c8 <__arm_cp.1_0>)
100699a2:	4347      	muls	r7, r0
100699a4:	0a39      	lsrs	r1, r7, #8
100699a6:	1809      	adds	r1, r1, r0
100699a8:	9804      	ldr	r0, [sp, #16]
100699aa:	2803      	cmp	r0, #3
100699ac:	d001      	beq.n	100699b2 <llc_pscan_program_slot+0x5a>
100699ae:	314b      	adds	r1, #75	@ 0x4b
100699b0:	e002      	b.n	100699b8 <llc_pscan_program_slot+0x60>
100699b2:	20ff      	movs	r0, #255	@ 0xff
100699b4:	3014      	adds	r0, #20
100699b6:	1809      	adds	r1, r1, r0
100699b8:	4620      	mov	r0, r4
100699ba:	f7dc fb3c 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
100699be:	4620      	mov	r0, r4
100699c0:	f7f6 f881 	bl	1005fac6 <llc_cte_timer_start_ucfg_weak>
100699c4:	b005      	add	sp, #20
100699c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

100699c8 <__arm_cp.1_0>:
100699c8:	00000271 	.word	0x00000271

100699cc <llc_pscan_skip_slot>:
100699cc:	b5b0      	push	{r4, r5, r7, lr}
100699ce:	460a      	mov	r2, r1
100699d0:	4604      	mov	r4, r0
100699d2:	6b01      	ldr	r1, [r0, #48]	@ 0x30
100699d4:	4610      	mov	r0, r2
100699d6:	f7d6 fc33 	bl	10040240 <__udivsi3>
100699da:	1c45      	adds	r5, r0, #1
100699dc:	4620      	mov	r0, r4
100699de:	4629      	mov	r1, r5
100699e0:	f7f0 f846 	bl	10059a70 <llc_pscan_update_taskslot_params>
100699e4:	2800      	cmp	r0, #0
100699e6:	d103      	bne.n	100699f0 <llc_pscan_skip_slot+0x24>
100699e8:	2084      	movs	r0, #132	@ 0x84
100699ea:	5c20      	ldrb	r0, [r4, r0]
100699ec:	f7f8 fce8 	bl	100623c0 <LL_sched_set_cancel_request>
100699f0:	4628      	mov	r0, r5
100699f2:	bdb0      	pop	{r4, r5, r7, pc}

100699f4 <llc_pscan_cancel_slot_cte_ucfg_weak>:
100699f4:	4770      	bx	lr
	...

100699f8 <llc_pscan_wr_cancel_slot>:
100699f8:	b5b0      	push	{r4, r5, r7, lr}
100699fa:	4604      	mov	r4, r0
100699fc:	6940      	ldr	r0, [r0, #20]
100699fe:	2148      	movs	r1, #72	@ 0x48
10069a00:	5c40      	ldrb	r0, [r0, r1]
10069a02:	f7ec fb03 	bl	1005600c <llc_conn_get_cntxt_per_p>
10069a06:	4605      	mov	r5, r0
10069a08:	2041      	movs	r0, #65	@ 0x41
10069a0a:	5c28      	ldrb	r0, [r5, r0]
10069a0c:	212c      	movs	r1, #44	@ 0x2c
10069a0e:	4341      	muls	r1, r0
10069a10:	4a09      	ldr	r2, [pc, #36]	@ (10069a38 <__arm_cp.0_0>)
10069a12:	6812      	ldr	r2, [r2, #0]
10069a14:	1851      	adds	r1, r2, r1
10069a16:	7c89      	ldrb	r1, [r1, #18]
10069a18:	2901      	cmp	r1, #1
10069a1a:	d106      	bne.n	10069a2a <llc_pscan_wr_cancel_slot+0x32>
10069a1c:	352c      	adds	r5, #44	@ 0x2c
10069a1e:	f7f9 f83d 	bl	10062a9c <LL_sched_release_taskslot>
10069a22:	2000      	movs	r0, #0
10069a24:	7028      	strb	r0, [r5, #0]
10069a26:	20ff      	movs	r0, #255	@ 0xff
10069a28:	7568      	strb	r0, [r5, #21]
10069a2a:	4620      	mov	r0, r4
10069a2c:	f000 f806 	bl	10069a3c <llc_pscan_wr_cancel_rsp_slot>
10069a30:	4620      	mov	r0, r4
10069a32:	f7ff ff31 	bl	10069898 <llc_pscan_cancel_slot>
10069a36:	bdb0      	pop	{r4, r5, r7, pc}

10069a38 <__arm_cp.0_0>:
10069a38:	2000089c 	.word	0x2000089c

10069a3c <llc_pscan_wr_cancel_rsp_slot>:
10069a3c:	b570      	push	{r4, r5, r6, lr}
10069a3e:	6945      	ldr	r5, [r0, #20]
10069a40:	20ac      	movs	r0, #172	@ 0xac
10069a42:	5c2c      	ldrb	r4, [r5, r0]
10069a44:	205f      	movs	r0, #95	@ 0x5f
10069a46:	43c6      	mvns	r6, r0
10069a48:	2e00      	cmp	r6, #0
10069a4a:	d009      	beq.n	10069a60 <llc_pscan_wr_cancel_rsp_slot+0x24>
10069a4c:	19a8      	adds	r0, r5, r6
10069a4e:	21b2      	movs	r1, #178	@ 0xb2
10069a50:	5c41      	ldrb	r1, [r0, r1]
10069a52:	29ff      	cmp	r1, #255	@ 0xff
10069a54:	d002      	beq.n	10069a5c <llc_pscan_wr_cancel_rsp_slot+0x20>
10069a56:	30ac      	adds	r0, #172	@ 0xac
10069a58:	f7f0 fb94 	bl	1005a184 <llc_pscan_wr_discard_rsp_data>
10069a5c:	360c      	adds	r6, #12
10069a5e:	e7f3      	b.n	10069a48 <llc_pscan_wr_cancel_rsp_slot+0xc>
10069a60:	4620      	mov	r0, r4
10069a62:	f7f9 f81b 	bl	10062a9c <LL_sched_release_taskslot>
10069a66:	bd70      	pop	{r4, r5, r6, pc}

10069a68 <llc_pscan_wr_program_slot>:
10069a68:	b5f0      	push	{r4, r5, r6, r7, lr}
10069a6a:	b089      	sub	sp, #36	@ 0x24
10069a6c:	4605      	mov	r5, r0
10069a6e:	6946      	ldr	r6, [r0, #20]
10069a70:	203f      	movs	r0, #63	@ 0x3f
10069a72:	5c32      	ldrb	r2, [r6, r0]
10069a74:	2082      	movs	r0, #130	@ 0x82
10069a76:	5c2b      	ldrb	r3, [r5, r0]
10069a78:	6bef      	ldr	r7, [r5, #60]	@ 0x3c
10069a7a:	462c      	mov	r4, r5
10069a7c:	3482      	adds	r4, #130	@ 0x82
10069a7e:	7861      	ldrb	r1, [r4, #1]
10069a80:	9108      	str	r1, [sp, #32]
10069a82:	78a0      	ldrb	r0, [r4, #2]
10069a84:	2b00      	cmp	r3, #0
10069a86:	d11a      	bne.n	10069abe <llc_pscan_wr_program_slot+0x56>
10069a88:	462b      	mov	r3, r5
10069a8a:	3344      	adds	r3, #68	@ 0x44
10069a8c:	4631      	mov	r1, r6
10069a8e:	313e      	adds	r1, #62	@ 0x3e
10069a90:	9205      	str	r2, [sp, #20]
10069a92:	881a      	ldrh	r2, [r3, #0]
10069a94:	9204      	str	r2, [sp, #16]
10069a96:	780a      	ldrb	r2, [r1, #0]
10069a98:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
10069a9a:	9007      	str	r0, [sp, #28]
10069a9c:	6973      	ldr	r3, [r6, #20]
10069a9e:	9200      	str	r2, [sp, #0]
10069aa0:	9101      	str	r1, [sp, #4]
10069aa2:	9302      	str	r3, [sp, #8]
10069aa4:	4629      	mov	r1, r5
10069aa6:	3156      	adds	r1, #86	@ 0x56
10069aa8:	2001      	movs	r0, #1
10069aaa:	9006      	str	r0, [sp, #24]
10069aac:	9807      	ldr	r0, [sp, #28]
10069aae:	9a04      	ldr	r2, [sp, #16]
10069ab0:	9b06      	ldr	r3, [sp, #24]
10069ab2:	f7ee f844 	bl	10057b3e <llc_mngm_csa2_select_channel_for_task>
10069ab6:	9807      	ldr	r0, [sp, #28]
10069ab8:	9a05      	ldr	r2, [sp, #20]
10069aba:	9906      	ldr	r1, [sp, #24]
10069abc:	7021      	strb	r1, [r4, #0]
10069abe:	6971      	ldr	r1, [r6, #20]
10069ac0:	5c89      	ldrb	r1, [r1, r2]
10069ac2:	f7dc fcd0 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
10069ac6:	480a      	ldr	r0, [pc, #40]	@ (10069af0 <__arm_cp.2_0>)
10069ac8:	4347      	muls	r7, r0
10069aca:	0a39      	lsrs	r1, r7, #8
10069acc:	1809      	adds	r1, r1, r0
10069ace:	9808      	ldr	r0, [sp, #32]
10069ad0:	2803      	cmp	r0, #3
10069ad2:	d001      	beq.n	10069ad8 <llc_pscan_wr_program_slot+0x70>
10069ad4:	314b      	adds	r1, #75	@ 0x4b
10069ad6:	e002      	b.n	10069ade <llc_pscan_wr_program_slot+0x76>
10069ad8:	20ff      	movs	r0, #255	@ 0xff
10069ada:	3014      	adds	r0, #20
10069adc:	1809      	adds	r1, r1, r0
10069ade:	4628      	mov	r0, r5
10069ae0:	f7dc faa9 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
10069ae4:	4628      	mov	r0, r5
10069ae6:	f7f5 ffee 	bl	1005fac6 <llc_cte_timer_start_ucfg_weak>
10069aea:	b009      	add	sp, #36	@ 0x24
10069aec:	bdf0      	pop	{r4, r5, r6, r7, pc}
10069aee:	46c0      	nop			@ (mov r8, r8)

10069af0 <__arm_cp.2_0>:
10069af0:	00000271 	.word	0x00000271

10069af4 <llc_pscan_wr_program_rsp_slot>:
10069af4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10069af6:	6946      	ldr	r6, [r0, #20]
10069af8:	2047      	movs	r0, #71	@ 0x47
10069afa:	5c34      	ldrb	r4, [r6, r0]
10069afc:	25ac      	movs	r5, #172	@ 0xac
10069afe:	5d70      	ldrb	r0, [r6, r5]
10069b00:	4631      	mov	r1, r6
10069b02:	31ac      	adds	r1, #172	@ 0xac
10069b04:	784f      	ldrb	r7, [r1, #1]
10069b06:	f7dc fd6d 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
10069b0a:	5d70      	ldrb	r0, [r6, r5]
10069b0c:	4621      	mov	r1, r4
10069b0e:	f7dc fcaa 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
10069b12:	200c      	movs	r0, #12
10069b14:	4378      	muls	r0, r7
10069b16:	1830      	adds	r0, r6, r0
10069b18:	2154      	movs	r1, #84	@ 0x54
10069b1a:	5c44      	ldrb	r4, [r0, r1]
10069b1c:	6cc5      	ldr	r5, [r0, #76]	@ 0x4c
10069b1e:	8fb6      	ldrh	r6, [r6, #60]	@ 0x3c
10069b20:	f7f8 fbb2 	bl	10062288 <LL_get_tx_common_buffer_p>
10069b24:	2107      	movs	r1, #7
10069b26:	7001      	strb	r1, [r0, #0]
10069b28:	0671      	lsls	r1, r6, #25
10069b2a:	d405      	bmi.n	10069b38 <llc_pscan_wr_program_rsp_slot+0x44>
10069b2c:	1c61      	adds	r1, r4, #1
10069b2e:	7041      	strb	r1, [r0, #1]
10069b30:	2103      	movs	r1, #3
10069b32:	2200      	movs	r2, #0
10069b34:	2302      	movs	r3, #2
10069b36:	e00c      	b.n	10069b52 <llc_pscan_wr_program_rsp_slot+0x5e>
10069b38:	2102      	movs	r1, #2
10069b3a:	7081      	strb	r1, [r0, #2]
10069b3c:	1ce1      	adds	r1, r4, #3
10069b3e:	7041      	strb	r1, [r0, #1]
10069b40:	78c1      	ldrb	r1, [r0, #3]
10069b42:	2240      	movs	r2, #64	@ 0x40
10069b44:	430a      	orrs	r2, r1
10069b46:	70c2      	strb	r2, [r0, #3]
10069b48:	4905      	ldr	r1, [pc, #20]	@ (10069b60 <__arm_cp.3_0>)
10069b4a:	6809      	ldr	r1, [r1, #0]
10069b4c:	7a4a      	ldrb	r2, [r1, #9]
10069b4e:	2105      	movs	r1, #5
10069b50:	2304      	movs	r3, #4
10069b52:	54c2      	strb	r2, [r0, r3]
10069b54:	1840      	adds	r0, r0, r1
10069b56:	4629      	mov	r1, r5
10069b58:	4622      	mov	r2, r4
10069b5a:	f7da ff23 	bl	100449a4 <BLEPLAT_MemCpy>
10069b5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10069b60 <__arm_cp.3_0>:
10069b60:	20000894 	.word	0x20000894

10069b64 <llc_pscan_wr_skip_slot>:
10069b64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10069b66:	4604      	mov	r4, r0
10069b68:	6946      	ldr	r6, [r0, #20]
10069b6a:	6ab0      	ldr	r0, [r6, #40]	@ 0x28
10069b6c:	1847      	adds	r7, r0, r1
10069b6e:	4620      	mov	r0, r4
10069b70:	3084      	adds	r0, #132	@ 0x84
10069b72:	9000      	str	r0, [sp, #0]
10069b74:	2500      	movs	r5, #0
10069b76:	2101      	movs	r1, #1
10069b78:	4620      	mov	r0, r4
10069b7a:	f7f0 fc7c 	bl	1005a476 <llc_pscan_wr_update_taskslot_params>
10069b7e:	2800      	cmp	r0, #0
10069b80:	d103      	bne.n	10069b8a <llc_pscan_wr_skip_slot+0x26>
10069b82:	9800      	ldr	r0, [sp, #0]
10069b84:	7800      	ldrb	r0, [r0, #0]
10069b86:	f7f8 fc1b 	bl	100623c0 <LL_sched_set_cancel_request>
10069b8a:	6ab0      	ldr	r0, [r6, #40]	@ 0x28
10069b8c:	43c0      	mvns	r0, r0
10069b8e:	1838      	adds	r0, r7, r0
10069b90:	1c6d      	adds	r5, r5, #1
10069b92:	2800      	cmp	r0, #0
10069b94:	d5ef      	bpl.n	10069b76 <llc_pscan_wr_skip_slot+0x12>
10069b96:	4628      	mov	r0, r5
10069b98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

10069b9a <llc_pscan_wr_skip_rsp_slot>:
10069b9a:	b5b0      	push	{r4, r5, r7, lr}
10069b9c:	6944      	ldr	r4, [r0, #20]
10069b9e:	20ac      	movs	r0, #172	@ 0xac
10069ba0:	5c20      	ldrb	r0, [r4, r0]
10069ba2:	4621      	mov	r1, r4
10069ba4:	31ac      	adds	r1, #172	@ 0xac
10069ba6:	784d      	ldrb	r5, [r1, #1]
10069ba8:	f7f8 ffc4 	bl	10062b34 <LL_sched_force_to_reserved>
10069bac:	200c      	movs	r0, #12
10069bae:	4368      	muls	r0, r5
10069bb0:	1820      	adds	r0, r4, r0
10069bb2:	304c      	adds	r0, #76	@ 0x4c
10069bb4:	f7f0 fae6 	bl	1005a184 <llc_pscan_wr_discard_rsp_data>
10069bb8:	2001      	movs	r0, #1
10069bba:	bdb0      	pop	{r4, r5, r7, pc}

10069bbc <llc_pscan_wr_isr>:
10069bbc:	b5f0      	push	{r4, r5, r6, r7, lr}
10069bbe:	b0db      	sub	sp, #364	@ 0x16c
10069bc0:	4606      	mov	r6, r0
10069bc2:	4cdd      	ldr	r4, [pc, #884]	@ (10069f38 <__arm_cp.0_3>)
10069bc4:	6820      	ldr	r0, [r4, #0]
10069bc6:	f7dc f89a 	bl	10045cfe <BLEPLAT_CNTR_IntGetIntStatusRxOk>
10069bca:	4607      	mov	r7, r0
10069bcc:	6820      	ldr	r0, [r4, #0]
10069bce:	f7dc f8ad 	bl	10045d2c <BLEPLAT_CNTR_IntGetIntStatusTxDone>
10069bd2:	ad0c      	add	r5, sp, #48	@ 0x30
10069bd4:	2300      	movs	r3, #0
10069bd6:	722b      	strb	r3, [r5, #8]
10069bd8:	2101      	movs	r1, #1
10069bda:	8069      	strh	r1, [r5, #2]
10069bdc:	9106      	str	r1, [sp, #24]
10069bde:	0209      	lsls	r1, r1, #8
10069be0:	81a9      	strh	r1, [r5, #12]
10069be2:	22ff      	movs	r2, #255	@ 0xff
10069be4:	4611      	mov	r1, r2
10069be6:	3102      	adds	r1, #2
10069be8:	8169      	strh	r1, [r5, #10]
10069bea:	2144      	movs	r1, #68	@ 0x44
10069bec:	5a71      	ldrh	r1, [r6, r1]
10069bee:	8029      	strh	r1, [r5, #0]
10069bf0:	6974      	ldr	r4, [r6, #20]
10069bf2:	213f      	movs	r1, #63	@ 0x3f
10069bf4:	5c61      	ldrb	r1, [r4, r1]
10069bf6:	7269      	strb	r1, [r5, #9]
10069bf8:	9207      	str	r2, [sp, #28]
10069bfa:	0211      	lsls	r1, r2, #8
10069bfc:	910d      	str	r1, [sp, #52]	@ 0x34
10069bfe:	4631      	mov	r1, r6
10069c00:	3142      	adds	r1, #66	@ 0x42
10069c02:	9109      	str	r1, [sp, #36]	@ 0x24
10069c04:	960a      	str	r6, [sp, #40]	@ 0x28
10069c06:	367f      	adds	r6, #127	@ 0x7f
10069c08:	960b      	str	r6, [sp, #44]	@ 0x2c
10069c0a:	2f00      	cmp	r7, #0
10069c0c:	d04e      	beq.n	10069cac <llc_pscan_wr_isr+0xf0>
10069c0e:	9308      	str	r3, [sp, #32]
10069c10:	f7f8 fb42 	bl	10062298 <LL_get_rx_common_buffer_p>
10069c14:	4606      	mov	r6, r0
10069c16:	7800      	ldrb	r0, [r0, #0]
10069c18:	210f      	movs	r1, #15
10069c1a:	4001      	ands	r1, r0
10069c1c:	2905      	cmp	r1, #5
10069c1e:	d171      	bne.n	10069d04 <llc_pscan_wr_isr+0x148>
10069c20:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10069c22:	7880      	ldrb	r0, [r0, #2]
10069c24:	9005      	str	r0, [sp, #20]
10069c26:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
10069c28:	69a8      	ldr	r0, [r5, #24]
10069c2a:	69e9      	ldr	r1, [r5, #28]
10069c2c:	f7ec fd56 	bl	100566dc <llc_conn_list_search_address>
10069c30:	9004      	str	r0, [sp, #16]
10069c32:	69ac      	ldr	r4, [r5, #24]
10069c34:	69ed      	ldr	r5, [r5, #28]
10069c36:	9808      	ldr	r0, [sp, #32]
10069c38:	901b      	str	r0, [sp, #108]	@ 0x6c
10069c3a:	901a      	str	r0, [sp, #104]	@ 0x68
10069c3c:	7830      	ldrb	r0, [r6, #0]
10069c3e:	0640      	lsls	r0, r0, #25
10069c40:	0fc0      	lsrs	r0, r0, #31
10069c42:	a91a      	add	r1, sp, #104	@ 0x68
10069c44:	7008      	strb	r0, [r1, #0]
10069c46:	1c4f      	adds	r7, r1, #1
10069c48:	1cb1      	adds	r1, r6, #2
10069c4a:	2206      	movs	r2, #6
10069c4c:	4638      	mov	r0, r7
10069c4e:	f7da fea9 	bl	100449a4 <BLEPLAT_MemCpy>
10069c52:	981a      	ldr	r0, [sp, #104]	@ 0x68
10069c54:	42a0      	cmp	r0, r4
10069c56:	d000      	beq.n	10069c5a <llc_pscan_wr_isr+0x9e>
10069c58:	e092      	b.n	10069d80 <llc_pscan_wr_isr+0x1c4>
10069c5a:	9807      	ldr	r0, [sp, #28]
10069c5c:	0600      	lsls	r0, r0, #24
10069c5e:	4385      	bics	r5, r0
10069c60:	981b      	ldr	r0, [sp, #108]	@ 0x6c
10069c62:	42a8      	cmp	r0, r5
10069c64:	9908      	ldr	r1, [sp, #32]
10069c66:	d000      	beq.n	10069c6a <llc_pscan_wr_isr+0xae>
10069c68:	e08b      	b.n	10069d82 <llc_pscan_wr_isr+0x1c6>
10069c6a:	2400      	movs	r4, #0
10069c6c:	941b      	str	r4, [sp, #108]	@ 0x6c
10069c6e:	941a      	str	r4, [sp, #104]	@ 0x68
10069c70:	7830      	ldrb	r0, [r6, #0]
10069c72:	09c0      	lsrs	r0, r0, #7
10069c74:	a91a      	add	r1, sp, #104	@ 0x68
10069c76:	7008      	strb	r0, [r1, #0]
10069c78:	3608      	adds	r6, #8
10069c7a:	2506      	movs	r5, #6
10069c7c:	4638      	mov	r0, r7
10069c7e:	4631      	mov	r1, r6
10069c80:	462a      	mov	r2, r5
10069c82:	f7da fe8f 	bl	100449a4 <BLEPLAT_MemCpy>
10069c86:	9411      	str	r4, [sp, #68]	@ 0x44
10069c88:	9410      	str	r4, [sp, #64]	@ 0x40
10069c8a:	48d0      	ldr	r0, [pc, #832]	@ (10069fcc <__arm_cp.0_2>)
10069c8c:	6801      	ldr	r1, [r0, #0]
10069c8e:	a810      	add	r0, sp, #64	@ 0x40
10069c90:	1c40      	adds	r0, r0, #1
10069c92:	462a      	mov	r2, r5
10069c94:	f7da fe86 	bl	100449a4 <BLEPLAT_MemCpy>
10069c98:	9811      	ldr	r0, [sp, #68]	@ 0x44
10069c9a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10069c9c:	4041      	eors	r1, r0
10069c9e:	9810      	ldr	r0, [sp, #64]	@ 0x40
10069ca0:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
10069ca2:	4042      	eors	r2, r0
10069ca4:	430a      	orrs	r2, r1
10069ca6:	4251      	negs	r1, r2
10069ca8:	4151      	adcs	r1, r2
10069caa:	e06a      	b.n	10069d82 <llc_pscan_wr_isr+0x1c6>
10069cac:	2800      	cmp	r0, #0
10069cae:	d100      	bne.n	10069cb2 <llc_pscan_wr_isr+0xf6>
10069cb0:	e0a7      	b.n	10069e02 <llc_pscan_wr_isr+0x246>
10069cb2:	4626      	mov	r6, r4
10069cb4:	363f      	adds	r6, #63	@ 0x3f
10069cb6:	7a70      	ldrb	r0, [r6, #9]
10069cb8:	f7ec f9a8 	bl	1005600c <llc_conn_get_cntxt_per_p>
10069cbc:	4605      	mov	r5, r0
10069cbe:	a80c      	add	r0, sp, #48	@ 0x30
10069cc0:	2700      	movs	r7, #0
10069cc2:	7347      	strb	r7, [r0, #13]
10069cc4:	f7f8 fae8 	bl	10062298 <LL_get_rx_common_buffer_p>
10069cc8:	4601      	mov	r1, r0
10069cca:	a81a      	add	r0, sp, #104	@ 0x68
10069ccc:	22ff      	movs	r2, #255	@ 0xff
10069cce:	7282      	strb	r2, [r0, #10]
10069cd0:	2301      	movs	r3, #1
10069cd2:	021b      	lsls	r3, r3, #8
10069cd4:	8203      	strh	r3, [r0, #16]
10069cd6:	73c7      	strb	r7, [r0, #15]
10069cd8:	3204      	adds	r2, #4
10069cda:	8182      	strh	r2, [r0, #12]
10069cdc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10069cde:	8952      	ldrh	r2, [r2, #10]
10069ce0:	8102      	strh	r2, [r0, #8]
10069ce2:	7a72      	ldrb	r2, [r6, #9]
10069ce4:	72c2      	strb	r2, [r0, #11]
10069ce6:	2241      	movs	r2, #65	@ 0x41
10069ce8:	5caa      	ldrb	r2, [r5, r2]
10069cea:	7382      	strb	r2, [r0, #14]
10069cec:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10069cee:	4632      	mov	r2, r6
10069cf0:	3218      	adds	r2, #24
10069cf2:	921b      	str	r2, [sp, #108]	@ 0x6c
10069cf4:	911a      	str	r1, [sp, #104]	@ 0x68
10069cf6:	f7ed f9bf 	bl	10057078 <llc_conn_go_to_connect>
10069cfa:	4620      	mov	r0, r4
10069cfc:	f7dc f93a 	bl	10045f74 <BLEPLAT_CNTR_PacketSetPllTrig>
10069d00:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
10069d02:	e0d1      	b.n	10069ea8 <llc_pscan_wr_isr+0x2ec>
10069d04:	462f      	mov	r7, r5
10069d06:	370d      	adds	r7, #13
10069d08:	f7f8 fad4 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
10069d0c:	ac10      	add	r4, sp, #64	@ 0x40
10069d0e:	2080      	movs	r0, #128	@ 0x80
10069d10:	7320      	strb	r0, [r4, #12]
10069d12:	a81a      	add	r0, sp, #104	@ 0x68
10069d14:	9011      	str	r0, [sp, #68]	@ 0x44
10069d16:	4630      	mov	r0, r6
10069d18:	4621      	mov	r1, r4
10069d1a:	f7f1 fe71 	bl	1005ba00 <llc_scan_parse_ext_adv_pdu>
10069d1e:	2201      	movs	r2, #1
10069d20:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10069d22:	4630      	mov	r0, r6
10069d24:	4621      	mov	r1, r4
10069d26:	463b      	mov	r3, r7
10069d28:	f7ef fef8 	bl	10059b1c <llc_pscan_validate_pdu>
10069d2c:	2801      	cmp	r0, #1
10069d2e:	d074      	beq.n	10069e1a <llc_pscan_wr_isr+0x25e>
10069d30:	2800      	cmp	r0, #0
10069d32:	d178      	bne.n	10069e26 <llc_pscan_wr_isr+0x26a>
10069d34:	1d28      	adds	r0, r5, #4
10069d36:	9004      	str	r0, [sp, #16]
10069d38:	3508      	adds	r5, #8
10069d3a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
10069d3c:	7978      	ldrb	r0, [r7, #5]
10069d3e:	f7dc faae 	bl	1004629e <BLEPLAT_CNTR_SmGetRxPhy>
10069d42:	6974      	ldr	r4, [r6, #20]
10069d44:	49a0      	ldr	r1, [pc, #640]	@ (10069fc8 <__arm_cp.0_1>)
10069d46:	6809      	ldr	r1, [r1, #0]
10069d48:	6809      	ldr	r1, [r1, #0]
10069d4a:	9105      	str	r1, [sp, #20]
10069d4c:	f7dc fccb 	bl	100466e6 <BLEPLAT_CNTR_DemodDelaySt>
10069d50:	9905      	ldr	r1, [sp, #20]
10069d52:	1a0a      	subs	r2, r1, r0
10069d54:	4621      	mov	r1, r4
10069d56:	313f      	adds	r1, #63	@ 0x3f
10069d58:	9405      	str	r4, [sp, #20]
10069d5a:	3444      	adds	r4, #68	@ 0x44
10069d5c:	78f8      	ldrb	r0, [r7, #3]
10069d5e:	2801      	cmp	r0, #1
10069d60:	9403      	str	r4, [sp, #12]
10069d62:	9102      	str	r1, [sp, #8]
10069d64:	d168      	bne.n	10069e38 <llc_pscan_wr_isr+0x27c>
10069d66:	9808      	ldr	r0, [sp, #32]
10069d68:	7038      	strb	r0, [r7, #0]
10069d6a:	2002      	movs	r0, #2
10069d6c:	70f8      	strb	r0, [r7, #3]
10069d6e:	9815      	ldr	r0, [sp, #84]	@ 0x54
10069d70:	7278      	strb	r0, [r7, #9]
10069d72:	980c      	ldr	r0, [sp, #48]	@ 0x30
10069d74:	8020      	strh	r0, [r4, #0]
10069d76:	7808      	ldrb	r0, [r1, #0]
10069d78:	2800      	cmp	r0, #0
10069d7a:	d162      	bne.n	10069e42 <llc_pscan_wr_isr+0x286>
10069d7c:	62f2      	str	r2, [r6, #44]	@ 0x2c
10069d7e:	e060      	b.n	10069e42 <llc_pscan_wr_isr+0x286>
10069d80:	9908      	ldr	r1, [sp, #32]
10069d82:	9805      	ldr	r0, [sp, #20]
10069d84:	0700      	lsls	r0, r0, #28
10069d86:	d434      	bmi.n	10069df2 <llc_pscan_wr_isr+0x236>
10069d88:	9804      	ldr	r0, [sp, #16]
10069d8a:	2800      	cmp	r0, #0
10069d8c:	d131      	bne.n	10069df2 <llc_pscan_wr_isr+0x236>
10069d8e:	2900      	cmp	r1, #0
10069d90:	d02f      	beq.n	10069df2 <llc_pscan_wr_isr+0x236>
10069d92:	980b      	ldr	r0, [sp, #44]	@ 0x2c
10069d94:	7940      	ldrb	r0, [r0, #5]
10069d96:	f7dc fc25 	bl	100465e4 <BLEPLAT_CNTR_SmSetTxMode>
10069d9a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
10069d9c:	6960      	ldr	r0, [r4, #20]
10069d9e:	f7db fff5 	bl	10045d8c <BLEPLAT_CNTR_PacketClrPllTrig>
10069da2:	f7db ff13 	bl	10045bcc <BLEPLAT_CNTR_GlobEnableBlue>
10069da6:	69a0      	ldr	r0, [r4, #24]
10069da8:	69e1      	ldr	r1, [r4, #28]
10069daa:	911b      	str	r1, [sp, #108]	@ 0x6c
10069dac:	901a      	str	r0, [sp, #104]	@ 0x68
10069dae:	4887      	ldr	r0, [pc, #540]	@ (10069fcc <__arm_cp.0_2>)
10069db0:	6806      	ldr	r6, [r0, #0]
10069db2:	f7f8 fa69 	bl	10062288 <LL_get_tx_common_buffer_p>
10069db6:	4605      	mov	r5, r0
10069db8:	200d      	movs	r0, #13
10069dba:	70a8      	strb	r0, [r5, #2]
10069dbc:	200e      	movs	r0, #14
10069dbe:	7068      	strb	r0, [r5, #1]
10069dc0:	2008      	movs	r0, #8
10069dc2:	7028      	strb	r0, [r5, #0]
10069dc4:	78e8      	ldrb	r0, [r5, #3]
10069dc6:	2103      	movs	r1, #3
10069dc8:	4301      	orrs	r1, r0
10069dca:	70e9      	strb	r1, [r5, #3]
10069dcc:	1d28      	adds	r0, r5, #4
10069dce:	2706      	movs	r7, #6
10069dd0:	4631      	mov	r1, r6
10069dd2:	4626      	mov	r6, r4
10069dd4:	463a      	mov	r2, r7
10069dd6:	f7da fde5 	bl	100449a4 <BLEPLAT_MemCpy>
10069dda:	a81a      	add	r0, sp, #104	@ 0x68
10069ddc:	1c41      	adds	r1, r0, #1
10069dde:	350a      	adds	r5, #10
10069de0:	4628      	mov	r0, r5
10069de2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
10069de4:	463a      	mov	r2, r7
10069de6:	f7da fddd 	bl	100449a4 <BLEPLAT_MemCpy>
10069dea:	a80c      	add	r0, sp, #48	@ 0x30
10069dec:	2100      	movs	r1, #0
10069dee:	7281      	strb	r1, [r0, #10]
10069df0:	e003      	b.n	10069dfa <llc_pscan_wr_isr+0x23e>
10069df2:	f7f8 fa5f 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
10069df6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10069df8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
10069dfa:	a80c      	add	r0, sp, #48	@ 0x30
10069dfc:	2100      	movs	r1, #0
10069dfe:	7341      	strb	r1, [r0, #13]
10069e00:	e04d      	b.n	10069e9e <llc_pscan_wr_isr+0x2e2>
10069e02:	f7f8 fa57 	bl	100622b4 <llc_utils_stop_timer_and_skip_tx_rx>
10069e06:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
10069e08:	78a0      	ldrb	r0, [r4, #2]
10069e0a:	0700      	lsls	r0, r0, #28
10069e0c:	d40f      	bmi.n	10069e2e <llc_pscan_wr_isr+0x272>
10069e0e:	a80c      	add	r0, sp, #48	@ 0x30
10069e10:	21ff      	movs	r1, #255	@ 0xff
10069e12:	7181      	strb	r1, [r0, #6]
10069e14:	2101      	movs	r1, #1
10069e16:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10069e18:	e043      	b.n	10069ea2 <llc_pscan_wr_isr+0x2e6>
10069e1a:	9809      	ldr	r0, [sp, #36]	@ 0x24
10069e1c:	88c0      	ldrh	r0, [r0, #6]
10069e1e:	1c40      	adds	r0, r0, #1
10069e20:	a90c      	add	r1, sp, #48	@ 0x30
10069e22:	8048      	strh	r0, [r1, #2]
10069e24:	e03a      	b.n	10069e9c <llc_pscan_wr_isr+0x2e0>
10069e26:	4630      	mov	r0, r6
10069e28:	f7f0 f8c2 	bl	10059fb0 <llc_pscan_wrong_cte_type_ucfg_weak>
10069e2c:	e036      	b.n	10069e9c <llc_pscan_wr_isr+0x2e0>
10069e2e:	a80c      	add	r0, sp, #48	@ 0x30
10069e30:	2100      	movs	r1, #0
10069e32:	7341      	strb	r1, [r0, #13]
10069e34:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10069e36:	e037      	b.n	10069ea8 <llc_pscan_wr_isr+0x2ec>
10069e38:	a810      	add	r0, sp, #64	@ 0x40
10069e3a:	7d00      	ldrb	r0, [r0, #20]
10069e3c:	287f      	cmp	r0, #127	@ 0x7f
10069e3e:	d000      	beq.n	10069e42 <llc_pscan_wr_isr+0x286>
10069e40:	7278      	strb	r0, [r7, #9]
10069e42:	ae10      	add	r6, sp, #64	@ 0x40
10069e44:	9201      	str	r2, [sp, #4]
10069e46:	7b32      	ldrb	r2, [r6, #12]
10069e48:	9911      	ldr	r1, [sp, #68]	@ 0x44
10069e4a:	980a      	ldr	r0, [sp, #40]	@ 0x28
10069e4c:	f7ef fc06 	bl	1005965c <llc_pscan_process_acad>
10069e50:	ac0c      	add	r4, sp, #48	@ 0x30
10069e52:	9808      	ldr	r0, [sp, #32]
10069e54:	72e0      	strb	r0, [r4, #11]
10069e56:	7b70      	ldrb	r0, [r6, #13]
10069e58:	71e0      	strb	r0, [r4, #7]
10069e5a:	9814      	ldr	r0, [sp, #80]	@ 0x50
10069e5c:	7160      	strb	r0, [r4, #5]
10069e5e:	4639      	mov	r1, r7
10069e60:	9f09      	ldr	r7, [sp, #36]	@ 0x24
10069e62:	88f8      	ldrh	r0, [r7, #6]
10069e64:	1c40      	adds	r0, r0, #1
10069e66:	8060      	strh	r0, [r4, #2]
10069e68:	794a      	ldrb	r2, [r1, #5]
10069e6a:	4628      	mov	r0, r5
10069e6c:	9904      	ldr	r1, [sp, #16]
10069e6e:	f7f5 fe25 	bl	1005fabc <LLC_check_iq_samples_ready_ucfg_weak>
10069e72:	7320      	strb	r0, [r4, #12]
10069e74:	9905      	ldr	r1, [sp, #20]
10069e76:	9801      	ldr	r0, [sp, #4]
10069e78:	6408      	str	r0, [r1, #64]	@ 0x40
10069e7a:	6288      	str	r0, [r1, #40]	@ 0x28
10069e7c:	9802      	ldr	r0, [sp, #8]
10069e7e:	7800      	ldrb	r0, [r0, #0]
10069e80:	9a03      	ldr	r2, [sp, #12]
10069e82:	7090      	strb	r0, [r2, #2]
10069e84:	6949      	ldr	r1, [r1, #20]
10069e86:	5c08      	ldrb	r0, [r1, r0]
10069e88:	70d0      	strb	r0, [r2, #3]
10069e8a:	8970      	ldrh	r0, [r6, #10]
10069e8c:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10069e8e:	8038      	strh	r0, [r7, #0]
10069e90:	6b30      	ldr	r0, [r6, #48]	@ 0x30
10069e92:	6b71      	ldr	r1, [r6, #52]	@ 0x34
10069e94:	1840      	adds	r0, r0, r1
10069e96:	63b0      	str	r0, [r6, #56]	@ 0x38
10069e98:	9808      	ldr	r0, [sp, #32]
10069e9a:	63f0      	str	r0, [r6, #60]	@ 0x3c
10069e9c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
10069e9e:	a80c      	add	r0, sp, #48	@ 0x30
10069ea0:	7ac1      	ldrb	r1, [r0, #11]
10069ea2:	4630      	mov	r0, r6
10069ea4:	f000 f8a8 	bl	10069ff8 <llc_pscan_wr_manage_rsp_data>
10069ea8:	f7f5 fe0e 	bl	1005fac8 <llc_cte_timer_stop_ucfg_weak>
10069eac:	a80c      	add	r0, sp, #48	@ 0x30
10069eae:	7a80      	ldrb	r0, [r0, #10]
10069eb0:	2800      	cmp	r0, #0
10069eb2:	d00a      	beq.n	10069eca <llc_pscan_wr_isr+0x30e>
10069eb4:	a80c      	add	r0, sp, #48	@ 0x30
10069eb6:	8841      	ldrh	r1, [r0, #2]
10069eb8:	4630      	mov	r0, r6
10069eba:	f7f0 fadc 	bl	1005a476 <llc_pscan_wr_update_taskslot_params>
10069ebe:	4601      	mov	r1, r0
10069ec0:	7960      	ldrb	r0, [r4, #5]
10069ec2:	2900      	cmp	r1, #0
10069ec4:	d031      	beq.n	10069f2a <llc_pscan_wr_isr+0x36e>
10069ec6:	f7f8 faeb 	bl	100624a0 <LL_sched_engine>
10069eca:	a80c      	add	r0, sp, #48	@ 0x30
10069ecc:	7b40      	ldrb	r0, [r0, #13]
10069ece:	2800      	cmp	r0, #0
10069ed0:	d077      	beq.n	10069fc2 <__arm_cp.0_3+0x8a>
10069ed2:	4630      	mov	r0, r6
10069ed4:	f7ef fd3c 	bl	10059950 <llc_pscan_send_sync_event>
10069ed8:	78a0      	ldrb	r0, [r4, #2]
10069eda:	0780      	lsls	r0, r0, #30
10069edc:	d571      	bpl.n	10069fc2 <__arm_cp.0_3+0x8a>
10069ede:	a80c      	add	r0, sp, #48	@ 0x30
10069ee0:	7a40      	ldrb	r0, [r0, #9]
10069ee2:	6971      	ldr	r1, [r6, #20]
10069ee4:	3118      	adds	r1, #24
10069ee6:	f7f0 f97c 	bl	1005a1e2 <llc_pscan_wr_search_subevent>
10069eea:	2800      	cmp	r0, #0
10069eec:	d069      	beq.n	10069fc2 <__arm_cp.0_3+0x8a>
10069eee:	2041      	movs	r0, #65	@ 0x41
10069ef0:	0086      	lsls	r6, r0, #2
10069ef2:	a81a      	add	r0, sp, #104	@ 0x68
10069ef4:	4631      	mov	r1, r6
10069ef6:	f001 fee4 	bl	1006bcc2 <__aeabi_memclr>
10069efa:	f7ef fd13 	bl	10059924 <llc_pscan_report_data_len_max>
10069efe:	4605      	mov	r5, r0
10069f00:	a80c      	add	r0, sp, #48	@ 0x30
10069f02:	7980      	ldrb	r0, [r0, #6]
10069f04:	28ff      	cmp	r0, #255	@ 0xff
10069f06:	d019      	beq.n	10069f3c <__arm_cp.0_3+0x4>
10069f08:	f7f8 f9c6 	bl	10062298 <LL_get_rx_common_buffer_p>
10069f0c:	4601      	mov	r1, r0
10069f0e:	7840      	ldrb	r0, [r0, #1]
10069f10:	9008      	str	r0, [sp, #32]
10069f12:	af0c      	add	r7, sp, #48	@ 0x30
10069f14:	79fc      	ldrb	r4, [r7, #7]
10069f16:	a81a      	add	r0, sp, #104	@ 0x68
10069f18:	4632      	mov	r2, r6
10069f1a:	f7da fd43 	bl	100449a4 <BLEPLAT_MemCpy>
10069f1e:	9808      	ldr	r0, [sp, #32]
10069f20:	1b00      	subs	r0, r0, r4
10069f22:	1c81      	adds	r1, r0, #2
10069f24:	79b8      	ldrb	r0, [r7, #6]
10069f26:	9007      	str	r0, [sp, #28]
10069f28:	e009      	b.n	10069f3e <__arm_cp.0_3+0x6>
10069f2a:	f7f8 fa49 	bl	100623c0 <LL_sched_set_cancel_request>
10069f2e:	7960      	ldrb	r0, [r4, #5]
10069f30:	f7f8 fab6 	bl	100624a0 <LL_sched_engine>
10069f34:	e045      	b.n	10069fc2 <__arm_cp.0_3+0x8a>
10069f36:	46c0      	nop			@ (mov r8, r8)

10069f38 <__arm_cp.0_3>:
10069f38:	20000890 	.word	0x20000890
10069f3c:	2100      	movs	r1, #0
10069f3e:	9c06      	ldr	r4, [sp, #24]
10069f40:	9108      	str	r1, [sp, #32]
10069f42:	b2cf      	uxtb	r7, r1
10069f44:	42af      	cmp	r7, r5
10069f46:	d800      	bhi.n	10069f4a <__arm_cp.0_3+0x12>
10069f48:	9c07      	ldr	r4, [sp, #28]
10069f4a:	f7da fe0f 	bl	10044b6c <BLEPLAT_CalculateRSSI>
10069f4e:	4606      	mov	r6, r0
10069f50:	f7f8 f98e 	bl	10062270 <get_rf_rx_path_compensation_db>
10069f54:	4601      	mov	r1, r0
10069f56:	a810      	add	r0, sp, #64	@ 0x40
10069f58:	72c4      	strb	r4, [r0, #11]
10069f5a:	42af      	cmp	r7, r5
10069f5c:	462c      	mov	r4, r5
10069f5e:	d800      	bhi.n	10069f62 <__arm_cp.0_3+0x2a>
10069f60:	9c08      	ldr	r4, [sp, #32]
10069f62:	7284      	strb	r4, [r0, #10]
10069f64:	1871      	adds	r1, r6, r1
10069f66:	7341      	strb	r1, [r0, #13]
10069f68:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10069f6a:	7a49      	ldrb	r1, [r1, #9]
10069f6c:	7301      	strb	r1, [r0, #12]
10069f6e:	9909      	ldr	r1, [sp, #36]	@ 0x24
10069f70:	8949      	ldrh	r1, [r1, #10]
10069f72:	8081      	strh	r1, [r0, #4]
10069f74:	a90c      	add	r1, sp, #48	@ 0x30
10069f76:	794a      	ldrb	r2, [r1, #5]
10069f78:	7242      	strb	r2, [r0, #9]
10069f7a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10069f7c:	80c2      	strh	r2, [r0, #6]
10069f7e:	7a4a      	ldrb	r2, [r1, #9]
10069f80:	7202      	strb	r2, [r0, #8]
10069f82:	79c9      	ldrb	r1, [r1, #7]
10069f84:	aa1a      	add	r2, sp, #104	@ 0x68
10069f86:	1851      	adds	r1, r2, r1
10069f88:	9110      	str	r1, [sp, #64]	@ 0x40
10069f8a:	f7ef fe15 	bl	10059bb8 <llc_pscan_push_padv_report_event>
10069f8e:	42af      	cmp	r7, r5
10069f90:	d90e      	bls.n	10069fb0 <__arm_cp.0_3+0x78>
10069f92:	a90c      	add	r1, sp, #48	@ 0x30
10069f94:	798a      	ldrb	r2, [r1, #6]
10069f96:	a810      	add	r0, sp, #64	@ 0x40
10069f98:	72c2      	strb	r2, [r0, #11]
10069f9a:	9a08      	ldr	r2, [sp, #32]
10069f9c:	1b52      	subs	r2, r2, r5
10069f9e:	7282      	strb	r2, [r0, #10]
10069fa0:	79c9      	ldrb	r1, [r1, #7]
10069fa2:	aa1a      	add	r2, sp, #104	@ 0x68
10069fa4:	1851      	adds	r1, r2, r1
10069fa6:	b2e2      	uxtb	r2, r4
10069fa8:	1889      	adds	r1, r1, r2
10069faa:	9110      	str	r1, [sp, #64]	@ 0x40
10069fac:	f7ef fe04 	bl	10059bb8 <llc_pscan_push_padv_report_event>
10069fb0:	a90c      	add	r1, sp, #48	@ 0x30
10069fb2:	794b      	ldrb	r3, [r1, #5]
10069fb4:	7a0a      	ldrb	r2, [r1, #8]
10069fb6:	7b08      	ldrb	r0, [r1, #12]
10069fb8:	7909      	ldrb	r1, [r1, #4]
10069fba:	9100      	str	r1, [sp, #0]
10069fbc:	990a      	ldr	r1, [sp, #40]	@ 0x28
10069fbe:	f7f5 fd7c 	bl	1005faba <LLC_connless_process_rx_cte_ucfg_weak>
10069fc2:	2001      	movs	r0, #1
10069fc4:	b05b      	add	sp, #364	@ 0x16c
10069fc6:	bdf0      	pop	{r4, r5, r6, r7, pc}

10069fc8 <__arm_cp.0_1>:
10069fc8:	20000894 	.word	0x20000894

10069fcc <__arm_cp.0_2>:
10069fcc:	2000083c 	.word	0x2000083c

10069fd0 <llc_pscan_wr_isr_rsp>:
10069fd0:	b5b0      	push	{r4, r5, r7, lr}
10069fd2:	6944      	ldr	r4, [r0, #20]
10069fd4:	20ac      	movs	r0, #172	@ 0xac
10069fd6:	5c20      	ldrb	r0, [r4, r0]
10069fd8:	4621      	mov	r1, r4
10069fda:	31ac      	adds	r1, #172	@ 0xac
10069fdc:	784d      	ldrb	r5, [r1, #1]
10069fde:	f7f8 fda9 	bl	10062b34 <LL_sched_force_to_reserved>
10069fe2:	20ff      	movs	r0, #255	@ 0xff
10069fe4:	f7f8 fa5c 	bl	100624a0 <LL_sched_engine>
10069fe8:	200c      	movs	r0, #12
10069fea:	4368      	muls	r0, r5
10069fec:	1820      	adds	r0, r4, r0
10069fee:	304c      	adds	r0, #76	@ 0x4c
10069ff0:	f7f0 f8c8 	bl	1005a184 <llc_pscan_wr_discard_rsp_data>
10069ff4:	2001      	movs	r0, #1
10069ff6:	bdb0      	pop	{r4, r5, r7, pc}

10069ff8 <llc_pscan_wr_manage_rsp_data>:
10069ff8:	b5f0      	push	{r4, r5, r6, r7, lr}
10069ffa:	b08b      	sub	sp, #44	@ 0x2c
10069ffc:	460d      	mov	r5, r1
10069ffe:	4604      	mov	r4, r0
1006a000:	2044      	movs	r0, #68	@ 0x44
1006a002:	5a21      	ldrh	r1, [r4, r0]
1006a004:	6966      	ldr	r6, [r4, #20]
1006a006:	203f      	movs	r0, #63	@ 0x3f
1006a008:	5c32      	ldrb	r2, [r6, r0]
1006a00a:	4630      	mov	r0, r6
1006a00c:	304c      	adds	r0, #76	@ 0x4c
1006a00e:	f7f0 f8c3 	bl	1005a198 <llc_pscan_wr_get_next_rsp_data>
1006a012:	28ff      	cmp	r0, #255	@ 0xff
1006a014:	d038      	beq.n	1006a088 <llc_pscan_wr_manage_rsp_data+0x90>
1006a016:	2d00      	cmp	r5, #0
1006a018:	d006      	beq.n	1006a028 <llc_pscan_wr_manage_rsp_data+0x30>
1006a01a:	210c      	movs	r1, #12
1006a01c:	4341      	muls	r1, r0
1006a01e:	1870      	adds	r0, r6, r1
1006a020:	304c      	adds	r0, #76	@ 0x4c
1006a022:	f7f0 f8af 	bl	1005a184 <llc_pscan_wr_discard_rsp_data>
1006a026:	e02f      	b.n	1006a088 <llc_pscan_wr_manage_rsp_data+0x90>
1006a028:	4621      	mov	r1, r4
1006a02a:	3183      	adds	r1, #131	@ 0x83
1006a02c:	4635      	mov	r5, r6
1006a02e:	35ac      	adds	r5, #172	@ 0xac
1006a030:	7068      	strb	r0, [r5, #1]
1006a032:	220c      	movs	r2, #12
1006a034:	4342      	muls	r2, r0
1006a036:	18b0      	adds	r0, r6, r2
1006a038:	2253      	movs	r2, #83	@ 0x53
1006a03a:	5c82      	ldrb	r2, [r0, r2]
1006a03c:	920a      	str	r2, [sp, #40]	@ 0x28
1006a03e:	2254      	movs	r2, #84	@ 0x54
1006a040:	5c82      	ldrb	r2, [r0, r2]
1006a042:	6ab0      	ldr	r0, [r6, #40]	@ 0x28
1006a044:	9009      	str	r0, [sp, #36]	@ 0x24
1006a046:	6af0      	ldr	r0, [r6, #44]	@ 0x2c
1006a048:	9008      	str	r0, [sp, #32]
1006a04a:	6b37      	ldr	r7, [r6, #48]	@ 0x30
1006a04c:	7809      	ldrb	r1, [r1, #0]
1006a04e:	8fb0      	ldrh	r0, [r6, #60]	@ 0x3c
1006a050:	f7f0 f88a 	bl	1005a168 <llc_pscan_wr_calculate_packet_duration>
1006a054:	4603      	mov	r3, r0
1006a056:	7828      	ldrb	r0, [r5, #0]
1006a058:	6b71      	ldr	r1, [r6, #52]	@ 0x34
1006a05a:	4a0c      	ldr	r2, [pc, #48]	@ (1006a08c <__arm_cp.2_0>)
1006a05c:	9207      	str	r2, [sp, #28]
1006a05e:	4a0c      	ldr	r2, [pc, #48]	@ (1006a090 <__arm_cp.2_1>)
1006a060:	9206      	str	r2, [sp, #24]
1006a062:	4a0c      	ldr	r2, [pc, #48]	@ (1006a094 <__arm_cp.2_2>)
1006a064:	9205      	str	r2, [sp, #20]
1006a066:	4a0c      	ldr	r2, [pc, #48]	@ (1006a098 <__arm_cp.2_3>)
1006a068:	9204      	str	r2, [sp, #16]
1006a06a:	220a      	movs	r2, #10
1006a06c:	9203      	str	r2, [sp, #12]
1006a06e:	9202      	str	r2, [sp, #8]
1006a070:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1006a072:	9d08      	ldr	r5, [sp, #32]
1006a074:	18aa      	adds	r2, r5, r2
1006a076:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
1006a078:	436f      	muls	r7, r5
1006a07a:	19d2      	adds	r2, r2, r7
1006a07c:	9201      	str	r2, [sp, #4]
1006a07e:	9100      	str	r1, [sp, #0]
1006a080:	228d      	movs	r2, #141	@ 0x8d
1006a082:	4621      	mov	r1, r4
1006a084:	f7f8 f9ae 	bl	100623e4 <LL_sched_enable_taskslot>
1006a088:	b00b      	add	sp, #44	@ 0x2c
1006a08a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006a08c <__arm_cp.2_0>:
1006a08c:	10069a3d 	.word	0x10069a3d

1006a090 <__arm_cp.2_1>:
1006a090:	10069fd1 	.word	0x10069fd1

1006a094 <__arm_cp.2_2>:
1006a094:	10069af5 	.word	0x10069af5

1006a098 <__arm_cp.2_3>:
1006a098:	10069b9b 	.word	0x10069b9b

1006a09c <llc_scan_aux_cancel_slot>:
1006a09c:	212b      	movs	r1, #43	@ 0x2b
1006a09e:	22ff      	movs	r2, #255	@ 0xff
1006a0a0:	5442      	strb	r2, [r0, r1]
1006a0a2:	4770      	bx	lr

1006a0a4 <llc_scan_aux_program_slot>:
1006a0a4:	b5b0      	push	{r4, r5, r7, lr}
1006a0a6:	4604      	mov	r4, r0
1006a0a8:	2028      	movs	r0, #40	@ 0x28
1006a0aa:	5c20      	ldrb	r0, [r4, r0]
1006a0ac:	f7f2 fd92 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
1006a0b0:	4605      	mov	r5, r0
1006a0b2:	3428      	adds	r4, #40	@ 0x28
1006a0b4:	78e0      	ldrb	r0, [r4, #3]
1006a0b6:	4629      	mov	r1, r5
1006a0b8:	f7dc fa49 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
1006a0bc:	78e0      	ldrb	r0, [r4, #3]
1006a0be:	4629      	mov	r1, r5
1006a0c0:	f7dc fab1 	bl	10046626 <BLEPLAT_CNTR_SmSetTxPhy>
1006a0c4:	7861      	ldrb	r1, [r4, #1]
1006a0c6:	78e0      	ldrb	r0, [r4, #3]
1006a0c8:	f7dc f9cd 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
1006a0cc:	78e0      	ldrb	r0, [r4, #3]
1006a0ce:	f7dc fa1d 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
1006a0d2:	bdb0      	pop	{r4, r5, r7, pc}

1006a0d4 <llc_scan_aux_skip_slot>:
1006a0d4:	b5b0      	push	{r4, r5, r7, lr}
1006a0d6:	4604      	mov	r4, r0
1006a0d8:	252b      	movs	r5, #43	@ 0x2b
1006a0da:	5d40      	ldrb	r0, [r0, r5]
1006a0dc:	f7f8 fd2a 	bl	10062b34 <LL_sched_force_to_reserved>
1006a0e0:	20ff      	movs	r0, #255	@ 0xff
1006a0e2:	5560      	strb	r0, [r4, r5]
1006a0e4:	2001      	movs	r0, #1
1006a0e6:	bdb0      	pop	{r4, r5, r7, pc}

1006a0e8 <llc_scan_cancel_slot>:
1006a0e8:	b510      	push	{r4, lr}
1006a0ea:	21eb      	movs	r1, #235	@ 0xeb
1006a0ec:	2200      	movs	r2, #0
1006a0ee:	5442      	strb	r2, [r0, r1]
1006a0f0:	21ac      	movs	r1, #172	@ 0xac
1006a0f2:	4b09      	ldr	r3, [pc, #36]	@ (1006a118 <__arm_cp.3_0>)
1006a0f4:	5243      	strh	r3, [r0, r1]
1006a0f6:	4603      	mov	r3, r0
1006a0f8:	33eb      	adds	r3, #235	@ 0xeb
1006a0fa:	721a      	strb	r2, [r3, #8]
1006a0fc:	4602      	mov	r2, r0
1006a0fe:	32ac      	adds	r2, #172	@ 0xac
1006a100:	21ff      	movs	r1, #255	@ 0xff
1006a102:	7111      	strb	r1, [r2, #4]
1006a104:	3010      	adds	r0, #16
1006a106:	785a      	ldrb	r2, [r3, #1]
1006a108:	2a00      	cmp	r2, #0
1006a10a:	d004      	beq.n	1006a116 <llc_scan_cancel_slot+0x2e>
1006a10c:	c808      	ldmia	r0!, {r3}
1006a10e:	242a      	movs	r4, #42	@ 0x2a
1006a110:	5519      	strb	r1, [r3, r4]
1006a112:	1e52      	subs	r2, r2, #1
1006a114:	e7f8      	b.n	1006a108 <llc_scan_cancel_slot+0x20>
1006a116:	bd10      	pop	{r4, pc}

1006a118 <__arm_cp.3_0>:
1006a118:	0000ffff 	.word	0x0000ffff

1006a11c <llc_scan_program_slot_coded>:
1006a11c:	b580      	push	{r7, lr}
1006a11e:	2101      	movs	r1, #1
1006a120:	f000 f802 	bl	1006a128 <llc_scan_program_slot>
1006a124:	bd80      	pop	{r7, pc}
	...

1006a128 <llc_scan_program_slot>:
1006a128:	b5f0      	push	{r4, r5, r6, r7, lr}
1006a12a:	b085      	sub	sp, #20
1006a12c:	460d      	mov	r5, r1
1006a12e:	4604      	mov	r4, r0
1006a130:	2900      	cmp	r1, #0
1006a132:	d001      	beq.n	1006a138 <llc_scan_program_slot+0x10>
1006a134:	2003      	movs	r0, #3
1006a136:	e000      	b.n	1006a13a <llc_scan_program_slot+0x12>
1006a138:	2001      	movs	r0, #1
1006a13a:	f7f2 fd4b 	bl	1005cbd4 <llc_convert_hci_phy_enum_to_hw_phy>
1006a13e:	9003      	str	r0, [sp, #12]
1006a140:	4f27      	ldr	r7, [pc, #156]	@ (1006a1e0 <__arm_cp.5_0>)
1006a142:	a804      	add	r0, sp, #16
1006a144:	f7f8 f9a4 	bl	10062490 <LL_sched_anchorstretch>
1006a148:	2800      	cmp	r0, #0
1006a14a:	d00f      	beq.n	1006a16c <llc_scan_program_slot+0x44>
1006a14c:	4626      	mov	r6, r4
1006a14e:	369c      	adds	r6, #156	@ 0x9c
1006a150:	00a9      	lsls	r1, r5, #2
1006a152:	1863      	adds	r3, r4, r1
1006a154:	218c      	movs	r1, #140	@ 0x8c
1006a156:	5859      	ldr	r1, [r3, r1]
1006a158:	2284      	movs	r2, #132	@ 0x84
1006a15a:	589a      	ldr	r2, [r3, r2]
1006a15c:	1a51      	subs	r1, r2, r1
1006a15e:	2801      	cmp	r0, #1
1006a160:	d107      	bne.n	1006a172 <llc_scan_program_slot+0x4a>
1006a162:	9803      	ldr	r0, [sp, #12]
1006a164:	2801      	cmp	r0, #1
1006a166:	d806      	bhi.n	1006a176 <llc_scan_program_slot+0x4e>
1006a168:	4f1f      	ldr	r7, [pc, #124]	@ (1006a1e8 <__arm_cp.5_2>)
1006a16a:	e005      	b.n	1006a178 <llc_scan_program_slot+0x50>
1006a16c:	4639      	mov	r1, r7
1006a16e:	31c2      	adds	r1, #194	@ 0xc2
1006a170:	e01a      	b.n	1006a1a8 <llc_scan_program_slot+0x80>
1006a172:	4608      	mov	r0, r1
1006a174:	e00e      	b.n	1006a194 <llc_scan_program_slot+0x6c>
1006a176:	4f1b      	ldr	r7, [pc, #108]	@ (1006a1e4 <__arm_cp.5_1>)
1006a178:	9302      	str	r3, [sp, #8]
1006a17a:	9101      	str	r1, [sp, #4]
1006a17c:	f7f8 f8ee 	bl	1006235c <LL_sched_engine_return_actual_scheduler_margin>
1006a180:	1a38      	subs	r0, r7, r0
1006a182:	9904      	ldr	r1, [sp, #16]
1006a184:	1840      	adds	r0, r0, r1
1006a186:	9f01      	ldr	r7, [sp, #4]
1006a188:	9004      	str	r0, [sp, #16]
1006a18a:	42b8      	cmp	r0, r7
1006a18c:	d300      	bcc.n	1006a190 <llc_scan_program_slot+0x68>
1006a18e:	4638      	mov	r0, r7
1006a190:	9b02      	ldr	r3, [sp, #8]
1006a192:	4f13      	ldr	r7, [pc, #76]	@ (1006a1e0 <__arm_cp.5_0>)
1006a194:	6871      	ldr	r1, [r6, #4]
1006a196:	2900      	cmp	r1, #0
1006a198:	d005      	beq.n	1006a1a6 <llc_scan_program_slot+0x7e>
1006a19a:	6832      	ldr	r2, [r6, #0]
1006a19c:	1851      	adds	r1, r2, r1
1006a19e:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
1006a1a0:	1a89      	subs	r1, r1, r2
1006a1a2:	4281      	cmp	r1, r0
1006a1a4:	d300      	bcc.n	1006a1a8 <llc_scan_program_slot+0x80>
1006a1a6:	4601      	mov	r1, r0
1006a1a8:	6521      	str	r1, [r4, #80]	@ 0x50
1006a1aa:	1966      	adds	r6, r4, r5
1006a1ac:	20a8      	movs	r0, #168	@ 0xa8
1006a1ae:	5c31      	ldrb	r1, [r6, r0]
1006a1b0:	9502      	str	r5, [sp, #8]
1006a1b2:	25ac      	movs	r5, #172	@ 0xac
1006a1b4:	5d70      	ldrb	r0, [r6, r5]
1006a1b6:	f7dc f956 	bl	10046466 <BLEPLAT_CNTR_SmSetRemapChan>
1006a1ba:	5d70      	ldrb	r0, [r6, r5]
1006a1bc:	9903      	ldr	r1, [sp, #12]
1006a1be:	f7dc f9c6 	bl	1004654e <BLEPLAT_CNTR_SmSetRxPhy>
1006a1c2:	5d70      	ldrb	r0, [r6, r5]
1006a1c4:	f7dc f9a2 	bl	1004650c <BLEPLAT_CNTR_SmSetRxMode>
1006a1c8:	9802      	ldr	r0, [sp, #8]
1006a1ca:	0080      	lsls	r0, r0, #2
1006a1cc:	1820      	adds	r0, r4, r0
1006a1ce:	6880      	ldr	r0, [r0, #8]
1006a1d0:	6d21      	ldr	r1, [r4, #80]	@ 0x50
1006a1d2:	434f      	muls	r7, r1
1006a1d4:	0a39      	lsrs	r1, r7, #8
1006a1d6:	f7db ff2e 	bl	10046036 <BLEPLAT_CNTR_SetRcvLen>
1006a1da:	b005      	add	sp, #20
1006a1dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006a1de:	46c0      	nop			@ (mov r8, r8)

1006a1e0 <__arm_cp.5_0>:
1006a1e0:	00000271 	.word	0x00000271

1006a1e4 <__arm_cp.5_1>:
1006a1e4:	fffffbdc 	.word	0xfffffbdc

1006a1e8 <__arm_cp.5_2>:
1006a1e8:	fffffe34 	.word	0xfffffe34

1006a1ec <llc_scan_program_slot_uncoded>:
1006a1ec:	b580      	push	{r7, lr}
1006a1ee:	2100      	movs	r1, #0
1006a1f0:	f7ff ff9a 	bl	1006a128 <llc_scan_program_slot>
1006a1f4:	bd80      	pop	{r7, pc}

1006a1f6 <llc_scan_skip_slot_coded>:
1006a1f6:	b510      	push	{r4, lr}
1006a1f8:	2401      	movs	r4, #1
1006a1fa:	4622      	mov	r2, r4
1006a1fc:	f7f1 fdb2 	bl	1005bd64 <llc_scan_update_anchors>
1006a200:	4620      	mov	r0, r4
1006a202:	bd10      	pop	{r4, pc}

1006a204 <llc_scan_skip_slot_uncoded>:
1006a204:	b580      	push	{r7, lr}
1006a206:	2200      	movs	r2, #0
1006a208:	f7f1 fdac 	bl	1005bd64 <llc_scan_update_anchors>
1006a20c:	2001      	movs	r0, #1
1006a20e:	bd80      	pop	{r7, pc}

1006a210 <smp_dep_gap_get_local_identity_address>:
1006a210:	b580      	push	{r7, lr}
1006a212:	4a0a      	ldr	r2, [pc, #40]	@ (1006a23c <__arm_cp.0_0>)
1006a214:	6812      	ldr	r2, [r2, #0]
1006a216:	233d      	movs	r3, #61	@ 0x3d
1006a218:	5cd2      	ldrb	r2, [r2, r3]
1006a21a:	7002      	strb	r2, [r0, #0]
1006a21c:	2a01      	cmp	r2, #1
1006a21e:	d005      	beq.n	1006a22c <smp_dep_gap_get_local_identity_address+0x1c>
1006a220:	2a00      	cmp	r2, #0
1006a222:	d108      	bne.n	1006a236 <smp_dep_gap_get_local_identity_address+0x26>
1006a224:	4608      	mov	r0, r1
1006a226:	f7e7 fec3 	bl	10051fb0 <GAP_get_public_address>
1006a22a:	e002      	b.n	1006a232 <smp_dep_gap_get_local_identity_address+0x22>
1006a22c:	4608      	mov	r0, r1
1006a22e:	f7e7 fec9 	bl	10051fc4 <GAP_get_static_random_address>
1006a232:	2000      	movs	r0, #0
1006a234:	bd80      	pop	{r7, pc}
1006a236:	2086      	movs	r0, #134	@ 0x86
1006a238:	bd80      	pop	{r7, pc}
1006a23a:	46c0      	nop			@ (mov r8, r8)

1006a23c <__arm_cp.0_0>:
1006a23c:	200008e0 	.word	0x200008e0

1006a240 <smp_dep_l2c_send_acl_packet>:
1006a240:	b570      	push	{r4, r5, r6, lr}
1006a242:	460d      	mov	r5, r1
1006a244:	4606      	mov	r6, r0
1006a246:	2006      	movs	r0, #6
1006a248:	f7eb fc46 	bl	10055ad8 <L2C_send_frame>
1006a24c:	4604      	mov	r4, r0
1006a24e:	2800      	cmp	r0, #0
1006a250:	d003      	beq.n	1006a25a <smp_dep_l2c_send_acl_packet+0x1a>
1006a252:	4628      	mov	r0, r5
1006a254:	f7e5 fea2 	bl	1004ff9c <ACL_pkt_release>
1006a258:	e008      	b.n	1006a26c <smp_dep_l2c_send_acl_packet+0x2c>
1006a25a:	8930      	ldrh	r0, [r6, #8]
1006a25c:	f7f9 ffe0 	bl	10064220 <smp_get_remote_device_list_index>
1006a260:	4602      	mov	r2, r0
1006a262:	2000      	movs	r0, #0
1006a264:	4b02      	ldr	r3, [pc, #8]	@ (1006a270 <__arm_cp.0_0>)
1006a266:	4601      	mov	r1, r0
1006a268:	f7fa fa90 	bl	1006478c <smp_timer_reset>
1006a26c:	4620      	mov	r0, r4
1006a26e:	bd70      	pop	{r4, r5, r6, pc}

1006a270 <__arm_cp.0_0>:
1006a270:	00007530 	.word	0x00007530

1006a274 <smp_dep_l2c_send_acl_short_pdu>:
1006a274:	b5b0      	push	{r4, r5, r7, lr}
1006a276:	461c      	mov	r4, r3
1006a278:	4615      	mov	r5, r2
1006a27a:	2900      	cmp	r1, #0
1006a27c:	d107      	bne.n	1006a28e <smp_dep_l2c_send_acl_short_pdu+0x1a>
1006a27e:	8901      	ldrh	r1, [r0, #8]
1006a280:	2000      	movs	r0, #0
1006a282:	2206      	movs	r2, #6
1006a284:	f7e5 fe68 	bl	1004ff58 <ACL_pkt_get>
1006a288:	4601      	mov	r1, r0
1006a28a:	2800      	cmp	r0, #0
1006a28c:	d009      	beq.n	1006a2a2 <smp_dep_l2c_send_acl_short_pdu+0x2e>
1006a28e:	2002      	movs	r0, #2
1006a290:	8048      	strh	r0, [r1, #2]
1006a292:	6848      	ldr	r0, [r1, #4]
1006a294:	7205      	strb	r5, [r0, #8]
1006a296:	6848      	ldr	r0, [r1, #4]
1006a298:	7244      	strb	r4, [r0, #9]
1006a29a:	2006      	movs	r0, #6
1006a29c:	f7eb fc1c 	bl	10055ad8 <L2C_send_frame>
1006a2a0:	bdb0      	pop	{r4, r5, r7, pc}
1006a2a2:	2088      	movs	r0, #136	@ 0x88
1006a2a4:	bdb0      	pop	{r4, r5, r7, pc}

1006a2a6 <smp_dep_sdb_get_bonding_records_count>:
1006a2a6:	b580      	push	{r7, lr}
1006a2a8:	f7f9 f992 	bl	100635d0 <sdb_sap_get_security_records_count>
1006a2ac:	bd80      	pop	{r7, pc}

1006a2ae <smp_dep_sdb_add_bonding_record>:
1006a2ae:	b5f0      	push	{r4, r5, r6, r7, lr}
1006a2b0:	b097      	sub	sp, #92	@ 0x5c
1006a2b2:	4604      	mov	r4, r0
1006a2b4:	ae03      	add	r6, sp, #12
1006a2b6:	2100      	movs	r1, #0
1006a2b8:	2250      	movs	r2, #80	@ 0x50
1006a2ba:	4630      	mov	r0, r6
1006a2bc:	f7da fb82 	bl	100449c4 <BLEPLAT_MemSet>
1006a2c0:	2059      	movs	r0, #89	@ 0x59
1006a2c2:	5c20      	ldrb	r0, [r4, r0]
1006a2c4:	7871      	ldrb	r1, [r6, #1]
1006a2c6:	4301      	orrs	r1, r0
1006a2c8:	7071      	strb	r1, [r6, #1]
1006a2ca:	4630      	mov	r0, r6
1006a2cc:	303e      	adds	r0, #62	@ 0x3e
1006a2ce:	4621      	mov	r1, r4
1006a2d0:	315a      	adds	r1, #90	@ 0x5a
1006a2d2:	2506      	movs	r5, #6
1006a2d4:	462a      	mov	r2, r5
1006a2d6:	f7da fb65 	bl	100449a4 <BLEPLAT_MemCpy>
1006a2da:	7c20      	ldrb	r0, [r4, #16]
1006a2dc:	70f0      	strb	r0, [r6, #3]
1006a2de:	7de0      	ldrb	r0, [r4, #23]
1006a2e0:	0701      	lsls	r1, r0, #28
1006a2e2:	d416      	bmi.n	1006a312 <smp_dep_sdb_add_bonding_record+0x64>
1006a2e4:	2011      	movs	r0, #17
1006a2e6:	5620      	ldrsb	r0, [r4, r0]
1006a2e8:	2800      	cmp	r0, #0
1006a2ea:	d504      	bpl.n	1006a2f6 <smp_dep_sdb_add_bonding_record+0x48>
1006a2ec:	a803      	add	r0, sp, #12
1006a2ee:	7841      	ldrb	r1, [r0, #1]
1006a2f0:	2280      	movs	r2, #128	@ 0x80
1006a2f2:	430a      	orrs	r2, r1
1006a2f4:	7042      	strb	r2, [r0, #1]
1006a2f6:	ae03      	add	r6, sp, #12
1006a2f8:	1d30      	adds	r0, r6, #4
1006a2fa:	4621      	mov	r1, r4
1006a2fc:	311e      	adds	r1, #30
1006a2fe:	2202      	movs	r2, #2
1006a300:	f7da fb50 	bl	100449a4 <BLEPLAT_MemCpy>
1006a304:	1db0      	adds	r0, r6, #6
1006a306:	4621      	mov	r1, r4
1006a308:	3120      	adds	r1, #32
1006a30a:	2208      	movs	r2, #8
1006a30c:	f7da fb4a 	bl	100449a4 <BLEPLAT_MemCpy>
1006a310:	e003      	b.n	1006a31a <smp_dep_sdb_add_bonding_record+0x6c>
1006a312:	21fe      	movs	r1, #254	@ 0xfe
1006a314:	4008      	ands	r0, r1
1006a316:	a903      	add	r1, sp, #12
1006a318:	7088      	strb	r0, [r1, #2]
1006a31a:	a803      	add	r0, sp, #12
1006a31c:	300e      	adds	r0, #14
1006a31e:	4621      	mov	r1, r4
1006a320:	3128      	adds	r1, #40	@ 0x28
1006a322:	2610      	movs	r6, #16
1006a324:	4632      	mov	r2, r6
1006a326:	f7da fb3d 	bl	100449a4 <BLEPLAT_MemCpy>
1006a32a:	7c60      	ldrb	r0, [r4, #17]
1006a32c:	0681      	lsls	r1, r0, #26
1006a32e:	d50c      	bpl.n	1006a34a <smp_dep_sdb_add_bonding_record+0x9c>
1006a330:	af03      	add	r7, sp, #12
1006a332:	4638      	mov	r0, r7
1006a334:	301e      	adds	r0, #30
1006a336:	4621      	mov	r1, r4
1006a338:	3138      	adds	r1, #56	@ 0x38
1006a33a:	2210      	movs	r2, #16
1006a33c:	f7da fb32 	bl	100449a4 <BLEPLAT_MemCpy>
1006a340:	7878      	ldrb	r0, [r7, #1]
1006a342:	2120      	movs	r1, #32
1006a344:	4301      	orrs	r1, r0
1006a346:	7079      	strb	r1, [r7, #1]
1006a348:	7c60      	ldrb	r0, [r4, #17]
1006a34a:	0640      	lsls	r0, r0, #25
1006a34c:	d50b      	bpl.n	1006a366 <smp_dep_sdb_add_bonding_record+0xb8>
1006a34e:	af03      	add	r7, sp, #12
1006a350:	4638      	mov	r0, r7
1006a352:	302e      	adds	r0, #46	@ 0x2e
1006a354:	4621      	mov	r1, r4
1006a356:	3148      	adds	r1, #72	@ 0x48
1006a358:	2210      	movs	r2, #16
1006a35a:	f7da fb23 	bl	100449a4 <BLEPLAT_MemCpy>
1006a35e:	7878      	ldrb	r0, [r7, #1]
1006a360:	2140      	movs	r1, #64	@ 0x40
1006a362:	4301      	orrs	r1, r0
1006a364:	7079      	strb	r1, [r7, #1]
1006a366:	7ca0      	ldrb	r0, [r4, #18]
1006a368:	2105      	movs	r1, #5
1006a36a:	4208      	tst	r0, r1
1006a36c:	d00a      	beq.n	1006a384 <smp_dep_sdb_add_bonding_record+0xd6>
1006a36e:	af03      	add	r7, sp, #12
1006a370:	4638      	mov	r0, r7
1006a372:	3044      	adds	r0, #68	@ 0x44
1006a374:	4621      	mov	r1, r4
1006a376:	311c      	adds	r1, #28
1006a378:	2202      	movs	r2, #2
1006a37a:	f7da fb13 	bl	100449a4 <BLEPLAT_MemCpy>
1006a37e:	7878      	ldrb	r0, [r7, #1]
1006a380:	4330      	orrs	r0, r6
1006a382:	e001      	b.n	1006a388 <smp_dep_sdb_add_bonding_record+0xda>
1006a384:	a803      	add	r0, sp, #12
1006a386:	7840      	ldrb	r0, [r0, #1]
1006a388:	7ae1      	ldrb	r1, [r4, #11]
1006a38a:	4029      	ands	r1, r5
1006a38c:	4301      	orrs	r1, r0
1006a38e:	a803      	add	r0, sp, #12
1006a390:	7041      	strb	r1, [r0, #1]
1006a392:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
1006a394:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
1006a396:	9115      	str	r1, [sp, #84]	@ 0x54
1006a398:	9216      	str	r2, [sp, #88]	@ 0x58
1006a39a:	f7f9 f91d 	bl	100635d8 <sdb_sap_add_security_record>
1006a39e:	4605      	mov	r5, r0
1006a3a0:	2800      	cmp	r0, #0
1006a3a2:	d00c      	beq.n	1006a3be <smp_dep_sdb_add_bonding_record+0x110>
1006a3a4:	1ca1      	adds	r1, r4, #2
1006a3a6:	ac01      	add	r4, sp, #4
1006a3a8:	2206      	movs	r2, #6
1006a3aa:	4620      	mov	r0, r4
1006a3ac:	f7da fafa 	bl	100449a4 <BLEPLAT_MemCpy>
1006a3b0:	71a5      	strb	r5, [r4, #6]
1006a3b2:	2042      	movs	r0, #66	@ 0x42
1006a3b4:	2105      	movs	r1, #5
1006a3b6:	2207      	movs	r2, #7
1006a3b8:	4623      	mov	r3, r4
1006a3ba:	f7fc fc2d 	bl	10066c18 <aci_hal_fw_error_event_push_noinline>
1006a3be:	4628      	mov	r0, r5
1006a3c0:	b017      	add	sp, #92	@ 0x5c
1006a3c2:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006a3c4 <smp_dep_sdb_find_bonding_record_by_conn_addr>:
1006a3c4:	b570      	push	{r4, r5, r6, lr}
1006a3c6:	b094      	sub	sp, #80	@ 0x50
1006a3c8:	460e      	mov	r6, r1
1006a3ca:	4604      	mov	r4, r0
1006a3cc:	7841      	ldrb	r1, [r0, #1]
1006a3ce:	1c80      	adds	r0, r0, #2
1006a3d0:	466a      	mov	r2, sp
1006a3d2:	f7f9 f924 	bl	1006361e <sdb_sap_read_security_record>
1006a3d6:	4605      	mov	r5, r0
1006a3d8:	2e00      	cmp	r6, #0
1006a3da:	d005      	beq.n	1006a3e8 <smp_dep_sdb_find_bonding_record_by_conn_addr+0x24>
1006a3dc:	2d00      	cmp	r5, #0
1006a3de:	d103      	bne.n	1006a3e8 <smp_dep_sdb_find_bonding_record_by_conn_addr+0x24>
1006a3e0:	4668      	mov	r0, sp
1006a3e2:	4621      	mov	r1, r4
1006a3e4:	f000 f804 	bl	1006a3f0 <smp_dep_sdb_copy_bonding_record_data_to_remdev>
1006a3e8:	4628      	mov	r0, r5
1006a3ea:	b014      	add	sp, #80	@ 0x50
1006a3ec:	bd70      	pop	{r4, r5, r6, pc}
	...

1006a3f0 <smp_dep_sdb_copy_bonding_record_data_to_remdev>:
1006a3f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006a3f2:	460c      	mov	r4, r1
1006a3f4:	4605      	mov	r5, r0
1006a3f6:	2001      	movs	r0, #1
1006a3f8:	7388      	strb	r0, [r1, #14]
1006a3fa:	78e8      	ldrb	r0, [r5, #3]
1006a3fc:	7408      	strb	r0, [r1, #16]
1006a3fe:	4608      	mov	r0, r1
1006a400:	301c      	adds	r0, #28
1006a402:	4629      	mov	r1, r5
1006a404:	3144      	adds	r1, #68	@ 0x44
1006a406:	2602      	movs	r6, #2
1006a408:	4f19      	ldr	r7, [pc, #100]	@ (1006a470 <__arm_cp.3_0>)
1006a40a:	4632      	mov	r2, r6
1006a40c:	47b8      	blx	r7
1006a40e:	4620      	mov	r0, r4
1006a410:	301e      	adds	r0, #30
1006a412:	1d29      	adds	r1, r5, #4
1006a414:	4632      	mov	r2, r6
1006a416:	47b8      	blx	r7
1006a418:	4620      	mov	r0, r4
1006a41a:	3020      	adds	r0, #32
1006a41c:	1da9      	adds	r1, r5, #6
1006a41e:	2208      	movs	r2, #8
1006a420:	47b8      	blx	r7
1006a422:	4620      	mov	r0, r4
1006a424:	3028      	adds	r0, #40	@ 0x28
1006a426:	4629      	mov	r1, r5
1006a428:	310e      	adds	r1, #14
1006a42a:	2610      	movs	r6, #16
1006a42c:	4632      	mov	r2, r6
1006a42e:	47b8      	blx	r7
1006a430:	4620      	mov	r0, r4
1006a432:	3038      	adds	r0, #56	@ 0x38
1006a434:	4629      	mov	r1, r5
1006a436:	311e      	adds	r1, #30
1006a438:	4632      	mov	r2, r6
1006a43a:	47b8      	blx	r7
1006a43c:	4620      	mov	r0, r4
1006a43e:	3048      	adds	r0, #72	@ 0x48
1006a440:	4629      	mov	r1, r5
1006a442:	312e      	adds	r1, #46	@ 0x2e
1006a444:	4632      	mov	r2, r6
1006a446:	47b8      	blx	r7
1006a448:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
1006a44a:	66a0      	str	r0, [r4, #104]	@ 0x68
1006a44c:	6ce8      	ldr	r0, [r5, #76]	@ 0x4c
1006a44e:	66e0      	str	r0, [r4, #108]	@ 0x6c
1006a450:	7868      	ldrb	r0, [r5, #1]
1006a452:	2106      	movs	r1, #6
1006a454:	4001      	ands	r1, r0
1006a456:	72e1      	strb	r1, [r4, #11]
1006a458:	21e0      	movs	r1, #224	@ 0xe0
1006a45a:	4001      	ands	r1, r0
1006a45c:	7c60      	ldrb	r0, [r4, #17]
1006a45e:	4308      	orrs	r0, r1
1006a460:	7460      	strb	r0, [r4, #17]
1006a462:	78a8      	ldrb	r0, [r5, #2]
1006a464:	0701      	lsls	r1, r0, #28
1006a466:	d502      	bpl.n	1006a46e <smp_dep_sdb_copy_bonding_record_data_to_remdev+0x7e>
1006a468:	21fe      	movs	r1, #254	@ 0xfe
1006a46a:	4008      	ands	r0, r1
1006a46c:	75e0      	strb	r0, [r4, #23]
1006a46e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1006a470 <__arm_cp.3_0>:
1006a470:	100449a5 	.word	0x100449a5

1006a474 <smp_dep_sdb_find_bonding_record_read_address>:
1006a474:	b570      	push	{r4, r5, r6, lr}
1006a476:	b094      	sub	sp, #80	@ 0x50
1006a478:	4614      	mov	r4, r2
1006a47a:	460e      	mov	r6, r1
1006a47c:	7841      	ldrb	r1, [r0, #1]
1006a47e:	1c80      	adds	r0, r0, #2
1006a480:	466a      	mov	r2, sp
1006a482:	f7f9 f8cc 	bl	1006361e <sdb_sap_read_security_record>
1006a486:	4605      	mov	r5, r0
1006a488:	2800      	cmp	r0, #0
1006a48a:	d107      	bne.n	1006a49c <smp_dep_sdb_find_bonding_record_read_address+0x28>
1006a48c:	2000      	movs	r0, #0
1006a48e:	7030      	strb	r0, [r6, #0]
1006a490:	4669      	mov	r1, sp
1006a492:	313e      	adds	r1, #62	@ 0x3e
1006a494:	2206      	movs	r2, #6
1006a496:	4620      	mov	r0, r4
1006a498:	f7da fa84 	bl	100449a4 <BLEPLAT_MemCpy>
1006a49c:	4628      	mov	r0, r5
1006a49e:	b014      	add	sp, #80	@ 0x50
1006a4a0:	bd70      	pop	{r4, r5, r6, pc}

1006a4a2 <smp_dep_sdb_find_matching_ltk_read_record>:
1006a4a2:	b5b0      	push	{r4, r5, r7, lr}
1006a4a4:	b094      	sub	sp, #80	@ 0x50
1006a4a6:	4614      	mov	r4, r2
1006a4a8:	466a      	mov	r2, sp
1006a4aa:	f7f9 f931 	bl	10063710 <sdb_sap_read_security_record_matching>
1006a4ae:	4605      	mov	r5, r0
1006a4b0:	2800      	cmp	r0, #0
1006a4b2:	d103      	bne.n	1006a4bc <smp_dep_sdb_find_matching_ltk_read_record+0x1a>
1006a4b4:	4668      	mov	r0, sp
1006a4b6:	4621      	mov	r1, r4
1006a4b8:	f7ff ff9a 	bl	1006a3f0 <smp_dep_sdb_copy_bonding_record_data_to_remdev>
1006a4bc:	4628      	mov	r0, r5
1006a4be:	b014      	add	sp, #80	@ 0x50
1006a4c0:	bdb0      	pop	{r4, r5, r7, pc}
	...

1006a4c4 <smp_pp3_pairing_completed_successful>:
1006a4c4:	b570      	push	{r4, r5, r6, lr}
1006a4c6:	4604      	mov	r4, r0
1006a4c8:	7b80      	ldrb	r0, [r0, #14]
1006a4ca:	2103      	movs	r1, #3
1006a4cc:	4001      	ands	r1, r0
1006a4ce:	8925      	ldrh	r5, [r4, #8]
1006a4d0:	2903      	cmp	r1, #3
1006a4d2:	d10a      	bne.n	1006a4ea <smp_pp3_pairing_completed_successful+0x26>
1006a4d4:	4620      	mov	r0, r4
1006a4d6:	f7ff feea 	bl	1006a2ae <smp_dep_sdb_add_bonding_record>
1006a4da:	2800      	cmp	r0, #0
1006a4dc:	d005      	beq.n	1006a4ea <smp_pp3_pairing_completed_successful+0x26>
1006a4de:	2108      	movs	r1, #8
1006a4e0:	2200      	movs	r2, #0
1006a4e2:	4620      	mov	r0, r4
1006a4e4:	f000 f826 	bl	1006a534 <smp_pp3_pairing_process_abort>
1006a4e8:	bd70      	pop	{r4, r5, r6, pc}
1006a4ea:	4628      	mov	r0, r5
1006a4ec:	f7f9 fe98 	bl	10064220 <smp_get_remote_device_list_index>
1006a4f0:	4602      	mov	r2, r0
1006a4f2:	2001      	movs	r0, #1
1006a4f4:	2100      	movs	r1, #0
1006a4f6:	4b0e      	ldr	r3, [pc, #56]	@ (1006a530 <__arm_cp.0_0>)
1006a4f8:	f7fa f948 	bl	1006478c <smp_timer_reset>
1006a4fc:	7ce0      	ldrb	r0, [r4, #19]
1006a4fe:	2803      	cmp	r0, #3
1006a500:	d102      	bne.n	1006a508 <smp_pp3_pairing_completed_successful+0x44>
1006a502:	2000      	movs	r0, #0
1006a504:	f7f9 feea 	bl	100642dc <smp_oob_clear_remote_data_entry>
1006a508:	4620      	mov	r0, r4
1006a50a:	3018      	adds	r0, #24
1006a50c:	2600      	movs	r6, #0
1006a50e:	2204      	movs	r2, #4
1006a510:	4631      	mov	r1, r6
1006a512:	f7da fa57 	bl	100449c4 <BLEPLAT_MemSet>
1006a516:	4620      	mov	r0, r4
1006a518:	4631      	mov	r1, r6
1006a51a:	f000 f83b 	bl	1006a594 <smp_pp3_pairing_completed_update_stats>
1006a51e:	20f1      	movs	r0, #241	@ 0xf1
1006a520:	72a0      	strb	r0, [r4, #10]
1006a522:	2002      	movs	r0, #2
1006a524:	4629      	mov	r1, r5
1006a526:	4632      	mov	r2, r6
1006a528:	4633      	mov	r3, r6
1006a52a:	f7fc fc1b 	bl	10066d64 <aci_gap_pairing_complete_event_push_noinline>
1006a52e:	bd70      	pop	{r4, r5, r6, pc}

1006a530 <__arm_cp.0_0>:
1006a530:	00007530 	.word	0x00007530

1006a534 <smp_pp3_pairing_process_abort>:
1006a534:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006a536:	4616      	mov	r6, r2
1006a538:	460c      	mov	r4, r1
1006a53a:	4605      	mov	r5, r0
1006a53c:	8900      	ldrh	r0, [r0, #8]
1006a53e:	f7f9 fe6f 	bl	10064220 <smp_get_remote_device_list_index>
1006a542:	4602      	mov	r2, r0
1006a544:	2001      	movs	r0, #1
1006a546:	2700      	movs	r7, #0
1006a548:	4b11      	ldr	r3, [pc, #68]	@ (1006a590 <__arm_cp.1_0>)
1006a54a:	4639      	mov	r1, r7
1006a54c:	f7fa f91e 	bl	1006478c <smp_timer_reset>
1006a550:	8928      	ldrh	r0, [r5, #8]
1006a552:	f7fa f8e1 	bl	10064718 <smp_rxp_flush_packet_queues>
1006a556:	2102      	movs	r1, #2
1006a558:	4628      	mov	r0, r5
1006a55a:	f000 f81b 	bl	1006a594 <smp_pp3_pairing_completed_update_stats>
1006a55e:	4628      	mov	r0, r5
1006a560:	3018      	adds	r0, #24
1006a562:	2204      	movs	r2, #4
1006a564:	4639      	mov	r1, r7
1006a566:	f7da fa2d 	bl	100449c4 <BLEPLAT_MemSet>
1006a56a:	7be8      	ldrb	r0, [r5, #15]
1006a56c:	212f      	movs	r1, #47	@ 0x2f
1006a56e:	4001      	ands	r1, r0
1006a570:	73e9      	strb	r1, [r5, #15]
1006a572:	2e00      	cmp	r6, #0
1006a574:	d004      	beq.n	1006a580 <smp_pp3_pairing_process_abort+0x4c>
1006a576:	7868      	ldrb	r0, [r5, #1]
1006a578:	1ca9      	adds	r1, r5, #2
1006a57a:	f000 fe2d 	bl	1006b1d8 <smp_cmn_repeated_attacks_protection_start>
1006a57e:	27fb      	movs	r7, #251	@ 0xfb
1006a580:	72af      	strb	r7, [r5, #10]
1006a582:	8929      	ldrh	r1, [r5, #8]
1006a584:	2002      	movs	r0, #2
1006a586:	4602      	mov	r2, r0
1006a588:	4623      	mov	r3, r4
1006a58a:	f7fc fbeb 	bl	10066d64 <aci_gap_pairing_complete_event_push_noinline>
1006a58e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1006a590 <__arm_cp.1_0>:
1006a590:	00007530 	.word	0x00007530

1006a594 <smp_pp3_pairing_completed_update_stats>:
1006a594:	b5bc      	push	{r2, r3, r4, r5, r7, lr}
1006a596:	2260      	movs	r2, #96	@ 0x60
1006a598:	5c82      	ldrb	r2, [r0, r2]
1006a59a:	07d2      	lsls	r2, r2, #31
1006a59c:	7a82      	ldrb	r2, [r0, #10]
1006a59e:	d104      	bne.n	1006a5aa <smp_pp3_pairing_completed_update_stats+0x16>
1006a5a0:	3260      	adds	r2, #96	@ 0x60
1006a5a2:	b2d2      	uxtb	r2, r2
1006a5a4:	2a51      	cmp	r2, #81	@ 0x51
1006a5a6:	d304      	bcc.n	1006a5b2 <smp_pp3_pairing_completed_update_stats+0x1e>
1006a5a8:	e00f      	b.n	1006a5ca <smp_pp3_pairing_completed_update_stats+0x36>
1006a5aa:	3250      	adds	r2, #80	@ 0x50
1006a5ac:	b2d2      	uxtb	r2, r2
1006a5ae:	2a40      	cmp	r2, #64	@ 0x40
1006a5b0:	d80b      	bhi.n	1006a5ca <smp_pp3_pairing_completed_update_stats+0x36>
1006a5b2:	4a09      	ldr	r2, [pc, #36]	@ (1006a5d8 <__arm_cp.2_0>)
1006a5b4:	6812      	ldr	r2, [r2, #0]
1006a5b6:	23b1      	movs	r3, #177	@ 0xb1
1006a5b8:	5cd3      	ldrb	r3, [r2, r3]
1006a5ba:	2b00      	cmp	r3, #0
1006a5bc:	d005      	beq.n	1006a5ca <smp_pp3_pairing_completed_update_stats+0x36>
1006a5be:	32b1      	adds	r2, #177	@ 0xb1
1006a5c0:	7d04      	ldrb	r4, [r0, #20]
1006a5c2:	2501      	movs	r5, #1
1006a5c4:	40a5      	lsls	r5, r4
1006a5c6:	43ab      	bics	r3, r5
1006a5c8:	7013      	strb	r3, [r2, #0]
1006a5ca:	466a      	mov	r2, sp
1006a5cc:	7111      	strb	r1, [r2, #4]
1006a5ce:	9000      	str	r0, [sp, #0]
1006a5d0:	4610      	mov	r0, r2
1006a5d2:	f7f9 fe96 	bl	10064302 <smp_scp_stats_update_on_pairing_complete_ucfg_weak>
1006a5d6:	bdbc      	pop	{r2, r3, r4, r5, r7, pc}

1006a5d8 <__arm_cp.2_0>:
1006a5d8:	200008e0 	.word	0x200008e0

1006a5dc <smp_pp3_pairing_failed_receive>:
1006a5dc:	b5b0      	push	{r4, r5, r7, lr}
1006a5de:	460c      	mov	r4, r1
1006a5e0:	2160      	movs	r1, #96	@ 0x60
1006a5e2:	5c61      	ldrb	r1, [r4, r1]
1006a5e4:	2201      	movs	r2, #1
1006a5e6:	400a      	ands	r2, r1
1006a5e8:	7aa3      	ldrb	r3, [r4, #10]
1006a5ea:	6840      	ldr	r0, [r0, #4]
1006a5ec:	7a41      	ldrb	r1, [r0, #9]
1006a5ee:	d102      	bne.n	1006a5f6 <smp_pp3_pairing_failed_receive+0x1a>
1006a5f0:	2b9f      	cmp	r3, #159	@ 0x9f
1006a5f2:	d802      	bhi.n	1006a5fa <smp_pp3_pairing_failed_receive+0x1e>
1006a5f4:	bdb0      	pop	{r4, r5, r7, pc}
1006a5f6:	2bb0      	cmp	r3, #176	@ 0xb0
1006a5f8:	d314      	bcc.n	1006a624 <smp_pp3_pairing_failed_receive+0x48>
1006a5fa:	2bf0      	cmp	r3, #240	@ 0xf0
1006a5fc:	d915      	bls.n	1006a62a <smp_pp3_pairing_failed_receive+0x4e>
1006a5fe:	2bf1      	cmp	r3, #241	@ 0xf1
1006a600:	d10e      	bne.n	1006a620 <smp_pp3_pairing_failed_receive+0x44>
1006a602:	290f      	cmp	r1, #15
1006a604:	d10c      	bne.n	1006a620 <smp_pp3_pairing_failed_receive+0x44>
1006a606:	4625      	mov	r5, r4
1006a608:	3559      	adds	r5, #89	@ 0x59
1006a60a:	210f      	movs	r1, #15
1006a60c:	2201      	movs	r2, #1
1006a60e:	4620      	mov	r0, r4
1006a610:	f7ff ff90 	bl	1006a534 <smp_pp3_pairing_process_abort>
1006a614:	7829      	ldrb	r1, [r5, #0]
1006a616:	345a      	adds	r4, #90	@ 0x5a
1006a618:	4620      	mov	r0, r4
1006a61a:	f7f9 f867 	bl	100636ec <sdb_sap_del_bonded_device>
1006a61e:	bdb0      	pop	{r4, r5, r7, pc}
1006a620:	2a00      	cmp	r2, #0
1006a622:	d0e7      	beq.n	1006a5f4 <smp_pp3_pairing_failed_receive+0x18>
1006a624:	7e20      	ldrb	r0, [r4, #24]
1006a626:	0780      	lsls	r0, r0, #30
1006a628:	d0e4      	beq.n	1006a5f4 <smp_pp3_pairing_failed_receive+0x18>
1006a62a:	2201      	movs	r2, #1
1006a62c:	4620      	mov	r0, r4
1006a62e:	f7ff ff81 	bl	1006a534 <smp_pp3_pairing_process_abort>
1006a632:	bdb0      	pop	{r4, r5, r7, pc}

1006a634 <smp_pp3_pairing_failed_send>:
1006a634:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006a636:	461f      	mov	r7, r3
1006a638:	4613      	mov	r3, r2
1006a63a:	460c      	mov	r4, r1
1006a63c:	4605      	mov	r5, r0
1006a63e:	2205      	movs	r2, #5
1006a640:	4619      	mov	r1, r3
1006a642:	4623      	mov	r3, r4
1006a644:	f7ff fe16 	bl	1006a274 <smp_dep_l2c_send_acl_short_pdu>
1006a648:	4606      	mov	r6, r0
1006a64a:	2f00      	cmp	r7, #0
1006a64c:	d101      	bne.n	1006a652 <smp_pp3_pairing_failed_send+0x1e>
1006a64e:	2e88      	cmp	r6, #136	@ 0x88
1006a650:	d004      	beq.n	1006a65c <smp_pp3_pairing_failed_send+0x28>
1006a652:	2201      	movs	r2, #1
1006a654:	4628      	mov	r0, r5
1006a656:	4621      	mov	r1, r4
1006a658:	f7ff ff6c 	bl	1006a534 <smp_pp3_pairing_process_abort>
1006a65c:	4630      	mov	r0, r6
1006a65e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1006a660 <smp_pp1_per_rxp_pairing_request>:
1006a660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006a662:	460c      	mov	r4, r1
1006a664:	4607      	mov	r7, r0
1006a666:	2501      	movs	r5, #1
1006a668:	4628      	mov	r0, r5
1006a66a:	f7f9 fbff 	bl	10063e6c <smp_pp1_get_next_free_pairing_idx>
1006a66e:	2802      	cmp	r0, #2
1006a670:	d901      	bls.n	1006a676 <smp_pp1_per_rxp_pairing_request+0x16>
1006a672:	2038      	movs	r0, #56	@ 0x38
1006a674:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006a676:	4606      	mov	r6, r0
1006a678:	4638      	mov	r0, r7
1006a67a:	f7f9 fc17 	bl	10063eac <smp_pp1_reqrsp_pdu_params_check>
1006a67e:	2800      	cmp	r0, #0
1006a680:	d010      	beq.n	1006a6a4 <smp_pp1_per_rxp_pairing_request+0x44>
1006a682:	4601      	mov	r1, r0
1006a684:	4810      	ldr	r0, [pc, #64]	@ (1006a6c8 <__arm_cp.1_0>)
1006a686:	6800      	ldr	r0, [r0, #0]
1006a688:	22b1      	movs	r2, #177	@ 0xb1
1006a68a:	5c82      	ldrb	r2, [r0, r2]
1006a68c:	2a00      	cmp	r2, #0
1006a68e:	d003      	beq.n	1006a698 <smp_pp1_per_rxp_pairing_request+0x38>
1006a690:	30b1      	adds	r0, #177	@ 0xb1
1006a692:	40b5      	lsls	r5, r6
1006a694:	43aa      	bics	r2, r5
1006a696:	7002      	strb	r2, [r0, #0]
1006a698:	2200      	movs	r2, #0
1006a69a:	2301      	movs	r3, #1
1006a69c:	4620      	mov	r0, r4
1006a69e:	f7ff ffc9 	bl	1006a634 <smp_pp3_pairing_failed_send>
1006a6a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006a6a4:	7526      	strb	r6, [r4, #20]
1006a6a6:	2101      	movs	r1, #1
1006a6a8:	4638      	mov	r0, r7
1006a6aa:	4622      	mov	r2, r4
1006a6ac:	f7f9 fc22 	bl	10063ef4 <smp_pp1_reqrsp_pdu_copy_to_pairing_data>
1006a6b0:	4620      	mov	r0, r4
1006a6b2:	f7f9 fd53 	bl	1006415c <smp_pp1_hndl_pairing_response_mode_through_event>
1006a6b6:	2800      	cmp	r0, #0
1006a6b8:	d001      	beq.n	1006a6be <smp_pp1_per_rxp_pairing_request+0x5e>
1006a6ba:	2000      	movs	r0, #0
1006a6bc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006a6be:	4620      	mov	r0, r4
1006a6c0:	f000 f804 	bl	1006a6cc <smp_pp1_per_send_pairing_response>
1006a6c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006a6c6:	46c0      	nop			@ (mov r8, r8)

1006a6c8 <__arm_cp.1_0>:
1006a6c8:	200008e0 	.word	0x200008e0

1006a6cc <smp_pp1_per_send_pairing_response>:
1006a6cc:	b5f0      	push	{r4, r5, r6, r7, lr}
1006a6ce:	b087      	sub	sp, #28
1006a6d0:	4604      	mov	r4, r0
1006a6d2:	a806      	add	r0, sp, #24
1006a6d4:	2600      	movs	r6, #0
1006a6d6:	7006      	strb	r6, [r0, #0]
1006a6d8:	8921      	ldrh	r1, [r4, #8]
1006a6da:	220b      	movs	r2, #11
1006a6dc:	4630      	mov	r0, r6
1006a6de:	f7e5 fc3b 	bl	1004ff58 <ACL_pkt_get>
1006a6e2:	2800      	cmp	r0, #0
1006a6e4:	d01b      	beq.n	1006a71e <smp_pp1_per_send_pairing_response+0x52>
1006a6e6:	9005      	str	r0, [sp, #20]
1006a6e8:	20b0      	movs	r0, #176	@ 0xb0
1006a6ea:	72a0      	strb	r0, [r4, #10]
1006a6ec:	75e6      	strb	r6, [r4, #23]
1006a6ee:	7be0      	ldrb	r0, [r4, #15]
1006a6f0:	212f      	movs	r1, #47	@ 0x2f
1006a6f2:	4001      	ands	r1, r0
1006a6f4:	73e1      	strb	r1, [r4, #15]
1006a6f6:	4f43      	ldr	r7, [pc, #268]	@ (1006a804 <__arm_cp.2_0>)
1006a6f8:	683d      	ldr	r5, [r7, #0]
1006a6fa:	7d20      	ldrb	r0, [r4, #20]
1006a6fc:	2101      	movs	r1, #1
1006a6fe:	9104      	str	r1, [sp, #16]
1006a700:	f7f9 fbce 	bl	10063ea0 <smp_pp1_get_pairing_pdu_offset>
1006a704:	1940      	adds	r0, r0, r5
1006a706:	21b7      	movs	r1, #183	@ 0xb7
1006a708:	5c45      	ldrb	r5, [r0, r1]
1006a70a:	6838      	ldr	r0, [r7, #0]
1006a70c:	2132      	movs	r1, #50	@ 0x32
1006a70e:	5c40      	ldrb	r0, [r0, r1]
1006a710:	2802      	cmp	r0, #2
1006a712:	d106      	bne.n	1006a722 <smp_pp1_per_send_pairing_response+0x56>
1006a714:	2008      	movs	r0, #8
1006a716:	4028      	ands	r0, r5
1006a718:	d103      	bne.n	1006a722 <smp_pp1_per_send_pairing_response+0x56>
1006a71a:	2103      	movs	r1, #3
1006a71c:	e051      	b.n	1006a7c2 <smp_pp1_per_send_pairing_response+0xf6>
1006a71e:	2688      	movs	r6, #136	@ 0x88
1006a720:	e061      	b.n	1006a7e6 <smp_pp1_per_send_pairing_response+0x11a>
1006a722:	7e20      	ldrb	r0, [r4, #24]
1006a724:	07c0      	lsls	r0, r0, #31
1006a726:	d105      	bne.n	1006a734 <smp_pp1_per_send_pairing_response+0x68>
1006a728:	af06      	add	r7, sp, #24
1006a72a:	4638      	mov	r0, r7
1006a72c:	f7f9 fce0 	bl	100640f0 <smp_pp1_auth_req_field_generate_from_device_config>
1006a730:	7838      	ldrb	r0, [r7, #0]
1006a732:	e002      	b.n	1006a73a <smp_pp1_per_send_pairing_response+0x6e>
1006a734:	7d60      	ldrb	r0, [r4, #21]
1006a736:	a906      	add	r1, sp, #24
1006a738:	7008      	strb	r0, [r1, #0]
1006a73a:	4005      	ands	r5, r0
1006a73c:	2018      	movs	r0, #24
1006a73e:	4028      	ands	r0, r5
1006a740:	7de1      	ldrb	r1, [r4, #23]
1006a742:	4301      	orrs	r1, r0
1006a744:	75e1      	strb	r1, [r4, #23]
1006a746:	0708      	lsls	r0, r1, #28
1006a748:	d401      	bmi.n	1006a74e <smp_pp1_per_send_pairing_response+0x82>
1006a74a:	27b4      	movs	r7, #180	@ 0xb4
1006a74c:	e006      	b.n	1006a75c <smp_pp1_per_send_pairing_response+0x90>
1006a74e:	4620      	mov	r0, r4
1006a750:	f7f9 fdd3 	bl	100642fa <smp_scp_continue_on_exclusive_sc_pairing_ucfg_weak>
1006a754:	4601      	mov	r1, r0
1006a756:	2800      	cmp	r0, #0
1006a758:	d133      	bne.n	1006a7c2 <smp_pp1_per_send_pairing_response+0xf6>
1006a75a:	27b2      	movs	r7, #178	@ 0xb2
1006a75c:	4620      	mov	r0, r4
1006a75e:	f7f9 fda1 	bl	100642a4 <smp_oob_check_is_remote_data_present>
1006a762:	9806      	ldr	r0, [sp, #24]
1006a764:	0741      	lsls	r1, r0, #29
1006a766:	0fc9      	lsrs	r1, r1, #31
1006a768:	73e1      	strb	r1, [r4, #15]
1006a76a:	07c0      	lsls	r0, r0, #31
1006a76c:	0f80      	lsrs	r0, r0, #30
1006a76e:	73a0      	strb	r0, [r4, #14]
1006a770:	4620      	mov	r0, r4
1006a772:	f7f9 fbd1 	bl	10063f18 <smp_pp1_reqrsp_pdu_extract_from_pairing_data>
1006a776:	4620      	mov	r0, r4
1006a778:	f7f9 fc1a 	bl	10063fb0 <smp_pp1_key_generation_method_selection>
1006a77c:	4601      	mov	r1, r0
1006a77e:	2800      	cmp	r0, #0
1006a780:	d11f      	bne.n	1006a7c2 <smp_pp1_per_send_pairing_response+0xf6>
1006a782:	7ce0      	ldrb	r0, [r4, #19]
1006a784:	2802      	cmp	r0, #2
1006a786:	d104      	bne.n	1006a792 <smp_pp1_per_send_pairing_response+0xc6>
1006a788:	7be0      	ldrb	r0, [r4, #15]
1006a78a:	06c0      	lsls	r0, r0, #27
1006a78c:	d401      	bmi.n	1006a792 <smp_pp1_per_send_pairing_response+0xc6>
1006a78e:	204d      	movs	r0, #77	@ 0x4d
1006a790:	43c7      	mvns	r7, r0
1006a792:	481c      	ldr	r0, [pc, #112]	@ (1006a804 <__arm_cp.2_0>)
1006a794:	6800      	ldr	r0, [r0, #0]
1006a796:	2135      	movs	r1, #53	@ 0x35
1006a798:	5c40      	ldrb	r0, [r0, r1]
1006a79a:	a906      	add	r1, sp, #24
1006a79c:	780b      	ldrb	r3, [r1, #0]
1006a79e:	7b62      	ldrb	r2, [r4, #13]
1006a7a0:	7c61      	ldrb	r1, [r4, #17]
1006a7a2:	7ca5      	ldrb	r5, [r4, #18]
1006a7a4:	9000      	str	r0, [sp, #0]
1006a7a6:	9101      	str	r1, [sp, #4]
1006a7a8:	9502      	str	r5, [sp, #8]
1006a7aa:	2102      	movs	r1, #2
1006a7ac:	9d05      	ldr	r5, [sp, #20]
1006a7ae:	4628      	mov	r0, r5
1006a7b0:	f7f9 fd18 	bl	100641e4 <smp_pp1_pairing_packet_build>
1006a7b4:	4620      	mov	r0, r4
1006a7b6:	4629      	mov	r1, r5
1006a7b8:	f7ff fd42 	bl	1006a240 <smp_dep_l2c_send_acl_packet>
1006a7bc:	4601      	mov	r1, r0
1006a7be:	2800      	cmp	r0, #0
1006a7c0:	d014      	beq.n	1006a7ec <smp_pp1_per_send_pairing_response+0x120>
1006a7c2:	4810      	ldr	r0, [pc, #64]	@ (1006a804 <__arm_cp.2_0>)
1006a7c4:	6800      	ldr	r0, [r0, #0]
1006a7c6:	22b1      	movs	r2, #177	@ 0xb1
1006a7c8:	5c82      	ldrb	r2, [r0, r2]
1006a7ca:	2a00      	cmp	r2, #0
1006a7cc:	d005      	beq.n	1006a7da <smp_pp1_per_send_pairing_response+0x10e>
1006a7ce:	30b1      	adds	r0, #177	@ 0xb1
1006a7d0:	7d23      	ldrb	r3, [r4, #20]
1006a7d2:	9d04      	ldr	r5, [sp, #16]
1006a7d4:	409d      	lsls	r5, r3
1006a7d6:	43aa      	bics	r2, r5
1006a7d8:	7002      	strb	r2, [r0, #0]
1006a7da:	2301      	movs	r3, #1
1006a7dc:	4620      	mov	r0, r4
1006a7de:	9a05      	ldr	r2, [sp, #20]
1006a7e0:	f7ff ff28 	bl	1006a634 <smp_pp3_pairing_failed_send>
1006a7e4:	4606      	mov	r6, r0
1006a7e6:	4630      	mov	r0, r6
1006a7e8:	b007      	add	sp, #28
1006a7ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006a7ec:	7ae0      	ldrb	r0, [r4, #11]
1006a7ee:	21f8      	movs	r1, #248	@ 0xf8
1006a7f0:	4001      	ands	r1, r0
1006a7f2:	72e1      	strb	r1, [r4, #11]
1006a7f4:	9805      	ldr	r0, [sp, #20]
1006a7f6:	4631      	mov	r1, r6
1006a7f8:	4622      	mov	r2, r4
1006a7fa:	f7f9 fb7b 	bl	10063ef4 <smp_pp1_reqrsp_pdu_copy_to_pairing_data>
1006a7fe:	72a7      	strb	r7, [r4, #10]
1006a800:	e7f1      	b.n	1006a7e6 <smp_pp1_per_send_pairing_response+0x11a>
1006a802:	46c0      	nop			@ (mov r8, r8)

1006a804 <__arm_cp.2_0>:
1006a804:	200008e0 	.word	0x200008e0

1006a808 <smp_pp2_cei_send_pairing_confirm>:
1006a808:	b5b0      	push	{r4, r5, r7, lr}
1006a80a:	b088      	sub	sp, #32
1006a80c:	4604      	mov	r4, r0
1006a80e:	8901      	ldrh	r1, [r0, #8]
1006a810:	2000      	movs	r0, #0
1006a812:	2215      	movs	r2, #21
1006a814:	f7e5 fba0 	bl	1004ff58 <ACL_pkt_get>
1006a818:	2800      	cmp	r0, #0
1006a81a:	d029      	beq.n	1006a870 <smp_pp2_cei_send_pairing_confirm+0x68>
1006a81c:	4605      	mov	r5, r0
1006a81e:	7de0      	ldrb	r0, [r4, #23]
1006a820:	0700      	lsls	r0, r0, #28
1006a822:	d406      	bmi.n	1006a832 <smp_pp2_cei_send_pairing_confirm+0x2a>
1006a824:	4621      	mov	r1, r4
1006a826:	3138      	adds	r1, #56	@ 0x38
1006a828:	aa04      	add	r2, sp, #16
1006a82a:	4620      	mov	r0, r4
1006a82c:	f000 f8f0 	bl	1006aa10 <smp_pp2_cei_lep_confirm_value_compute>
1006a830:	e005      	b.n	1006a83e <smp_pp2_cei_send_pairing_confirm+0x36>
1006a832:	a804      	add	r0, sp, #16
1006a834:	9001      	str	r0, [sp, #4]
1006a836:	9400      	str	r4, [sp, #0]
1006a838:	4668      	mov	r0, sp
1006a83a:	f000 fb0f 	bl	1006ae5c <smp_pp2_cei_send_pairing_confirm_excerpt_scp_ucfg_weak>
1006a83e:	2011      	movs	r0, #17
1006a840:	8068      	strh	r0, [r5, #2]
1006a842:	6868      	ldr	r0, [r5, #4]
1006a844:	2103      	movs	r1, #3
1006a846:	7201      	strb	r1, [r0, #8]
1006a848:	2105      	movs	r1, #5
1006a84a:	2210      	movs	r2, #16
1006a84c:	ab04      	add	r3, sp, #16
1006a84e:	4628      	mov	r0, r5
1006a850:	f7e5 fbe2 	bl	10050018 <ACL_pkt_write>
1006a854:	4620      	mov	r0, r4
1006a856:	4629      	mov	r1, r5
1006a858:	f7ff fcf2 	bl	1006a240 <smp_dep_l2c_send_acl_packet>
1006a85c:	2800      	cmp	r0, #0
1006a85e:	d107      	bne.n	1006a870 <smp_pp2_cei_send_pairing_confirm+0x68>
1006a860:	4620      	mov	r0, r4
1006a862:	3048      	adds	r0, #72	@ 0x48
1006a864:	a904      	add	r1, sp, #16
1006a866:	2210      	movs	r2, #16
1006a868:	f7da f89c 	bl	100449a4 <BLEPLAT_MemCpy>
1006a86c:	20a5      	movs	r0, #165	@ 0xa5
1006a86e:	72a0      	strb	r0, [r4, #10]
1006a870:	b008      	add	sp, #32
1006a872:	bdb0      	pop	{r4, r5, r7, pc}

1006a874 <smp_pp2_cei_auth_stage_1_start>:
1006a874:	b510      	push	{r4, lr}
1006a876:	4604      	mov	r4, r0
1006a878:	3038      	adds	r0, #56	@ 0x38
1006a87a:	2110      	movs	r1, #16
1006a87c:	2200      	movs	r2, #0
1006a87e:	f7fa ffde 	bl	1006583e <HAL_Generate_Random_Bytes_To>
1006a882:	7de0      	ldrb	r0, [r4, #23]
1006a884:	0700      	lsls	r0, r0, #28
1006a886:	d403      	bmi.n	1006a890 <smp_pp2_cei_auth_stage_1_start+0x1c>
1006a888:	4620      	mov	r0, r4
1006a88a:	f7ff ffbd 	bl	1006a808 <smp_pp2_cei_send_pairing_confirm>
1006a88e:	bd10      	pop	{r4, pc}
1006a890:	4620      	mov	r0, r4
1006a892:	f000 fae1 	bl	1006ae58 <smp_pp2_cei_auth_stage1_start_excerpt_scp_ucfg_weak>
1006a896:	bd10      	pop	{r4, pc}

1006a898 <smp_pp2_cei_rx_process_pairing_confirm>:
1006a898:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006a89a:	460c      	mov	r4, r1
1006a89c:	4607      	mov	r7, r0
1006a89e:	8909      	ldrh	r1, [r1, #8]
1006a8a0:	2500      	movs	r5, #0
1006a8a2:	2215      	movs	r2, #21
1006a8a4:	4628      	mov	r0, r5
1006a8a6:	f7e5 fb57 	bl	1004ff58 <ACL_pkt_get>
1006a8aa:	2800      	cmp	r0, #0
1006a8ac:	d02f      	beq.n	1006a90e <smp_pp2_cei_rx_process_pairing_confirm+0x76>
1006a8ae:	4606      	mov	r6, r0
1006a8b0:	2f00      	cmp	r7, #0
1006a8b2:	d006      	beq.n	1006a8c2 <smp_pp2_cei_rx_process_pairing_confirm+0x2a>
1006a8b4:	4623      	mov	r3, r4
1006a8b6:	3328      	adds	r3, #40	@ 0x28
1006a8b8:	2105      	movs	r1, #5
1006a8ba:	2210      	movs	r2, #16
1006a8bc:	4638      	mov	r0, r7
1006a8be:	f7e5 fb89 	bl	1004ffd4 <ACL_pkt_read>
1006a8c2:	4620      	mov	r0, r4
1006a8c4:	3048      	adds	r0, #72	@ 0x48
1006a8c6:	4621      	mov	r1, r4
1006a8c8:	3128      	adds	r1, #40	@ 0x28
1006a8ca:	2210      	movs	r2, #16
1006a8cc:	f7da f88a 	bl	100449e4 <BLEPLAT_MemCmp>
1006a8d0:	2800      	cmp	r0, #0
1006a8d2:	d109      	bne.n	1006a8e8 <smp_pp2_cei_rx_process_pairing_confirm+0x50>
1006a8d4:	7ce0      	ldrb	r0, [r4, #19]
1006a8d6:	2802      	cmp	r0, #2
1006a8d8:	d106      	bne.n	1006a8e8 <smp_pp2_cei_rx_process_pairing_confirm+0x50>
1006a8da:	2108      	movs	r1, #8
1006a8dc:	2301      	movs	r3, #1
1006a8de:	4620      	mov	r0, r4
1006a8e0:	4632      	mov	r2, r6
1006a8e2:	f7ff fea7 	bl	1006a634 <smp_pp3_pairing_failed_send>
1006a8e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006a8e8:	2011      	movs	r0, #17
1006a8ea:	8070      	strh	r0, [r6, #2]
1006a8ec:	6870      	ldr	r0, [r6, #4]
1006a8ee:	2104      	movs	r1, #4
1006a8f0:	7201      	strb	r1, [r0, #8]
1006a8f2:	4623      	mov	r3, r4
1006a8f4:	3338      	adds	r3, #56	@ 0x38
1006a8f6:	2105      	movs	r1, #5
1006a8f8:	2210      	movs	r2, #16
1006a8fa:	4630      	mov	r0, r6
1006a8fc:	f7e5 fb8c 	bl	10050018 <ACL_pkt_write>
1006a900:	4620      	mov	r0, r4
1006a902:	4631      	mov	r1, r6
1006a904:	f7ff fc9c 	bl	1006a240 <smp_dep_l2c_send_acl_packet>
1006a908:	2800      	cmp	r0, #0
1006a90a:	d002      	beq.n	1006a912 <smp_pp2_cei_rx_process_pairing_confirm+0x7a>
1006a90c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006a90e:	2088      	movs	r0, #136	@ 0x88
1006a910:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006a912:	20a6      	movs	r0, #166	@ 0xa6
1006a914:	72a0      	strb	r0, [r4, #10]
1006a916:	4628      	mov	r0, r5
1006a918:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

1006a91c <smp_pp2_cei_rx_process_pairing_random>:
1006a91c:	b5f0      	push	{r4, r5, r6, r7, lr}
1006a91e:	b08d      	sub	sp, #52	@ 0x34
1006a920:	460c      	mov	r4, r1
1006a922:	460d      	mov	r5, r1
1006a924:	3548      	adds	r5, #72	@ 0x48
1006a926:	2105      	movs	r1, #5
1006a928:	2210      	movs	r2, #16
1006a92a:	462b      	mov	r3, r5
1006a92c:	f7e5 fb52 	bl	1004ffd4 <ACL_pkt_read>
1006a930:	7de0      	ldrb	r0, [r4, #23]
1006a932:	0700      	lsls	r0, r0, #28
1006a934:	d406      	bmi.n	1006a944 <smp_pp2_cei_rx_process_pairing_random+0x28>
1006a936:	aa09      	add	r2, sp, #36	@ 0x24
1006a938:	4620      	mov	r0, r4
1006a93a:	4629      	mov	r1, r5
1006a93c:	f000 f868 	bl	1006aa10 <smp_pp2_cei_lep_confirm_value_compute>
1006a940:	2700      	movs	r7, #0
1006a942:	e00a      	b.n	1006a95a <smp_pp2_cei_rx_process_pairing_random+0x3e>
1006a944:	a809      	add	r0, sp, #36	@ 0x24
1006a946:	9006      	str	r0, [sp, #24]
1006a948:	9405      	str	r4, [sp, #20]
1006a94a:	a805      	add	r0, sp, #20
1006a94c:	f000 fa87 	bl	1006ae5e <smp_pp2_cei_rx_process_pairing_random_excerpt1_scp_ucfg_weak>
1006a950:	4607      	mov	r7, r0
1006a952:	28eb      	cmp	r0, #235	@ 0xeb
1006a954:	d101      	bne.n	1006a95a <smp_pp2_cei_rx_process_pairing_random+0x3e>
1006a956:	2700      	movs	r7, #0
1006a958:	e054      	b.n	1006aa04 <smp_pp2_cei_rx_process_pairing_random+0xe8>
1006a95a:	4626      	mov	r6, r4
1006a95c:	3628      	adds	r6, #40	@ 0x28
1006a95e:	a809      	add	r0, sp, #36	@ 0x24
1006a960:	2210      	movs	r2, #16
1006a962:	4631      	mov	r1, r6
1006a964:	f7da f83e 	bl	100449e4 <BLEPLAT_MemCmp>
1006a968:	2800      	cmp	r0, #0
1006a96a:	d006      	beq.n	1006a97a <smp_pp2_cei_rx_process_pairing_random+0x5e>
1006a96c:	2104      	movs	r1, #4
1006a96e:	2200      	movs	r2, #0
1006a970:	4620      	mov	r0, r4
1006a972:	4613      	mov	r3, r2
1006a974:	f7ff fe5e 	bl	1006a634 <smp_pp3_pairing_failed_send>
1006a978:	e043      	b.n	1006aa02 <smp_pp2_cei_rx_process_pairing_random+0xe6>
1006a97a:	4a24      	ldr	r2, [pc, #144]	@ (1006aa0c <__arm_cp.9_0>)
1006a97c:	6810      	ldr	r0, [r2, #0]
1006a97e:	2135      	movs	r1, #53	@ 0x35
1006a980:	5c40      	ldrb	r0, [r0, r1]
1006a982:	7c21      	ldrb	r1, [r4, #16]
1006a984:	4281      	cmp	r1, r0
1006a986:	d900      	bls.n	1006a98a <smp_pp2_cei_rx_process_pairing_random+0x6e>
1006a988:	7420      	strb	r0, [r4, #16]
1006a98a:	7de0      	ldrb	r0, [r4, #23]
1006a98c:	0700      	lsls	r0, r0, #28
1006a98e:	d415      	bmi.n	1006a9bc <smp_pp2_cei_rx_process_pairing_random+0xa0>
1006a990:	4617      	mov	r7, r2
1006a992:	a805      	add	r0, sp, #20
1006a994:	2100      	movs	r1, #0
1006a996:	2210      	movs	r2, #16
1006a998:	f7da f814 	bl	100449c4 <BLEPLAT_MemSet>
1006a99c:	7ce0      	ldrb	r0, [r4, #19]
1006a99e:	2803      	cmp	r0, #3
1006a9a0:	d010      	beq.n	1006a9c4 <smp_pp2_cei_rx_process_pairing_random+0xa8>
1006a9a2:	2802      	cmp	r0, #2
1006a9a4:	d114      	bne.n	1006a9d0 <smp_pp2_cei_rx_process_pairing_random+0xb4>
1006a9a6:	6838      	ldr	r0, [r7, #0]
1006a9a8:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1006a9aa:	a905      	add	r1, sp, #20
1006a9ac:	7008      	strb	r0, [r1, #0]
1006a9ae:	0a02      	lsrs	r2, r0, #8
1006a9b0:	704a      	strb	r2, [r1, #1]
1006a9b2:	0c02      	lsrs	r2, r0, #16
1006a9b4:	708a      	strb	r2, [r1, #2]
1006a9b6:	0e00      	lsrs	r0, r0, #24
1006a9b8:	70c8      	strb	r0, [r1, #3]
1006a9ba:	e009      	b.n	1006a9d0 <smp_pp2_cei_rx_process_pairing_random+0xb4>
1006a9bc:	4620      	mov	r0, r4
1006a9be:	f000 fa50 	bl	1006ae62 <smp_pp2_cei_rx_process_pairing_random_excerpt2_scp_ucfg_weak>
1006a9c2:	e01f      	b.n	1006aa04 <smp_pp2_cei_rx_process_pairing_random+0xe8>
1006a9c4:	6839      	ldr	r1, [r7, #0]
1006a9c6:	3144      	adds	r1, #68	@ 0x44
1006a9c8:	a805      	add	r0, sp, #20
1006a9ca:	2210      	movs	r2, #16
1006a9cc:	f7d9 ffea 	bl	100449a4 <BLEPLAT_MemCpy>
1006a9d0:	4622      	mov	r2, r4
1006a9d2:	3238      	adds	r2, #56	@ 0x38
1006a9d4:	a805      	add	r0, sp, #20
1006a9d6:	af01      	add	r7, sp, #4
1006a9d8:	4629      	mov	r1, r5
1006a9da:	463b      	mov	r3, r7
1006a9dc:	f7f8 ffdc 	bl	10063998 <smp_crt_s1_generate_stk>
1006a9e0:	2100      	movs	r1, #0
1006a9e2:	2210      	movs	r2, #16
1006a9e4:	4630      	mov	r0, r6
1006a9e6:	f7d9 ffed 	bl	100449c4 <BLEPLAT_MemSet>
1006a9ea:	7c22      	ldrb	r2, [r4, #16]
1006a9ec:	4630      	mov	r0, r6
1006a9ee:	4639      	mov	r1, r7
1006a9f0:	f7d9 ffd8 	bl	100449a4 <BLEPLAT_MemCpy>
1006a9f4:	7ea0      	ldrb	r0, [r4, #26]
1006a9f6:	2102      	movs	r1, #2
1006a9f8:	4301      	orrs	r1, r0
1006a9fa:	76a1      	strb	r1, [r4, #26]
1006a9fc:	4620      	mov	r0, r4
1006a9fe:	f7e4 fa7e 	bl	1004eefe <smp_start_encryption_ucfg>
1006aa02:	4607      	mov	r7, r0
1006aa04:	4638      	mov	r0, r7
1006aa06:	b00d      	add	sp, #52	@ 0x34
1006aa08:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006aa0a:	46c0      	nop			@ (mov r8, r8)

1006aa0c <__arm_cp.9_0>:
1006aa0c:	200008e0 	.word	0x200008e0

1006aa10 <smp_pp2_cei_lep_confirm_value_compute>:
1006aa10:	b5f0      	push	{r4, r5, r6, r7, lr}
1006aa12:	b09b      	sub	sp, #108	@ 0x6c
1006aa14:	4614      	mov	r4, r2
1006aa16:	9106      	str	r1, [sp, #24]
1006aa18:	4606      	mov	r6, r0
1006aa1a:	af0f      	add	r7, sp, #60	@ 0x3c
1006aa1c:	2500      	movs	r5, #0
1006aa1e:	222e      	movs	r2, #46	@ 0x2e
1006aa20:	4638      	mov	r0, r7
1006aa22:	4629      	mov	r1, r5
1006aa24:	f7d9 ffce 	bl	100449c4 <BLEPLAT_MemSet>
1006aa28:	3710      	adds	r7, #16
1006aa2a:	2210      	movs	r2, #16
1006aa2c:	4638      	mov	r0, r7
1006aa2e:	9906      	ldr	r1, [sp, #24]
1006aa30:	f7d9 ffb8 	bl	100449a4 <BLEPLAT_MemCpy>
1006aa34:	7cf0      	ldrb	r0, [r6, #19]
1006aa36:	2803      	cmp	r0, #3
1006aa38:	d00d      	beq.n	1006aa56 <smp_pp2_cei_lep_confirm_value_compute+0x46>
1006aa3a:	2802      	cmp	r0, #2
1006aa3c:	d112      	bne.n	1006aa64 <smp_pp2_cei_lep_confirm_value_compute+0x54>
1006aa3e:	4843      	ldr	r0, [pc, #268]	@ (1006ab4c <__arm_cp.10_0>)
1006aa40:	6800      	ldr	r0, [r0, #0]
1006aa42:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1006aa44:	a90f      	add	r1, sp, #60	@ 0x3c
1006aa46:	7008      	strb	r0, [r1, #0]
1006aa48:	0a02      	lsrs	r2, r0, #8
1006aa4a:	704a      	strb	r2, [r1, #1]
1006aa4c:	0c02      	lsrs	r2, r0, #16
1006aa4e:	708a      	strb	r2, [r1, #2]
1006aa50:	0e00      	lsrs	r0, r0, #24
1006aa52:	70c8      	strb	r0, [r1, #3]
1006aa54:	e006      	b.n	1006aa64 <smp_pp2_cei_lep_confirm_value_compute+0x54>
1006aa56:	483d      	ldr	r0, [pc, #244]	@ (1006ab4c <__arm_cp.10_0>)
1006aa58:	6801      	ldr	r1, [r0, #0]
1006aa5a:	3144      	adds	r1, #68	@ 0x44
1006aa5c:	a80f      	add	r0, sp, #60	@ 0x3c
1006aa5e:	2210      	movs	r2, #16
1006aa60:	f7d9 ffa0 	bl	100449a4 <BLEPLAT_MemCpy>
1006aa64:	7d30      	ldrb	r0, [r6, #20]
1006aa66:	4629      	mov	r1, r5
1006aa68:	f7f9 fa1a 	bl	10063ea0 <smp_pp1_get_pairing_pdu_offset>
1006aa6c:	9002      	str	r0, [sp, #8]
1006aa6e:	7d30      	ldrb	r0, [r6, #20]
1006aa70:	2101      	movs	r1, #1
1006aa72:	9104      	str	r1, [sp, #16]
1006aa74:	f7f9 fa14 	bl	10063ea0 <smp_pp1_get_pairing_pdu_offset>
1006aa78:	9001      	str	r0, [sp, #4]
1006aa7a:	af0f      	add	r7, sp, #60	@ 0x3c
1006aa7c:	4638      	mov	r0, r7
1006aa7e:	3021      	adds	r0, #33	@ 0x21
1006aa80:	4639      	mov	r1, r7
1006aa82:	3120      	adds	r1, #32
1006aa84:	9103      	str	r1, [sp, #12]
1006aa86:	9006      	str	r0, [sp, #24]
1006aa88:	f7e7 fa64 	bl	10051f54 <GAP_get_current_address>
1006aa8c:	7870      	ldrb	r0, [r6, #1]
1006aa8e:	2127      	movs	r1, #39	@ 0x27
1006aa90:	5478      	strb	r0, [r7, r1]
1006aa92:	4638      	mov	r0, r7
1006aa94:	3028      	adds	r0, #40	@ 0x28
1006aa96:	1cb1      	adds	r1, r6, #2
1006aa98:	2206      	movs	r2, #6
1006aa9a:	4b2d      	ldr	r3, [pc, #180]	@ (1006ab50 <__arm_cp.10_1>)
1006aa9c:	9005      	str	r0, [sp, #20]
1006aa9e:	4798      	blx	r3
1006aaa0:	482a      	ldr	r0, [pc, #168]	@ (1006ab4c <__arm_cp.10_0>)
1006aaa2:	6800      	ldr	r0, [r0, #0]
1006aaa4:	9901      	ldr	r1, [sp, #4]
1006aaa6:	1841      	adds	r1, r0, r1
1006aaa8:	31b4      	adds	r1, #180	@ 0xb4
1006aaaa:	ae0b      	add	r6, sp, #44	@ 0x2c
1006aaac:	4630      	mov	r0, r6
1006aaae:	9600      	str	r6, [sp, #0]
1006aab0:	3009      	adds	r0, #9
1006aab2:	2207      	movs	r2, #7
1006aab4:	9201      	str	r2, [sp, #4]
1006aab6:	4b26      	ldr	r3, [pc, #152]	@ (1006ab50 <__arm_cp.10_1>)
1006aab8:	4798      	blx	r3
1006aaba:	4824      	ldr	r0, [pc, #144]	@ (1006ab4c <__arm_cp.10_0>)
1006aabc:	6800      	ldr	r0, [r0, #0]
1006aabe:	9902      	ldr	r1, [sp, #8]
1006aac0:	1841      	adds	r1, r0, r1
1006aac2:	31b4      	adds	r1, #180	@ 0xb4
1006aac4:	1cb0      	adds	r0, r6, #2
1006aac6:	9a01      	ldr	r2, [sp, #4]
1006aac8:	4b21      	ldr	r3, [pc, #132]	@ (1006ab50 <__arm_cp.10_1>)
1006aaca:	4798      	blx	r3
1006aacc:	1c70      	adds	r0, r6, #1
1006aace:	4639      	mov	r1, r7
1006aad0:	3127      	adds	r1, #39	@ 0x27
1006aad2:	9e04      	ldr	r6, [sp, #16]
1006aad4:	4632      	mov	r2, r6
1006aad6:	4b1e      	ldr	r3, [pc, #120]	@ (1006ab50 <__arm_cp.10_1>)
1006aad8:	4798      	blx	r3
1006aada:	9800      	ldr	r0, [sp, #0]
1006aadc:	9903      	ldr	r1, [sp, #12]
1006aade:	4632      	mov	r2, r6
1006aae0:	4b1b      	ldr	r3, [pc, #108]	@ (1006ab50 <__arm_cp.10_1>)
1006aae2:	4798      	blx	r3
1006aae4:	3710      	adds	r7, #16
1006aae6:	2d10      	cmp	r5, #16
1006aae8:	d007      	beq.n	1006aafa <smp_pp2_cei_lep_confirm_value_compute+0xea>
1006aaea:	5d78      	ldrb	r0, [r7, r5]
1006aaec:	a90b      	add	r1, sp, #44	@ 0x2c
1006aaee:	5d49      	ldrb	r1, [r1, r5]
1006aaf0:	4041      	eors	r1, r0
1006aaf2:	a807      	add	r0, sp, #28
1006aaf4:	5541      	strb	r1, [r0, r5]
1006aaf6:	1c6d      	adds	r5, r5, #1
1006aaf8:	e7f5      	b.n	1006aae6 <smp_pp2_cei_lep_confirm_value_compute+0xd6>
1006aafa:	a80f      	add	r0, sp, #60	@ 0x3c
1006aafc:	a907      	add	r1, sp, #28
1006aafe:	4622      	mov	r2, r4
1006ab00:	f7ea fb12 	bl	10055128 <hci_le_encrypt>
1006ab04:	ae0b      	add	r6, sp, #44	@ 0x2c
1006ab06:	2500      	movs	r5, #0
1006ab08:	2210      	movs	r2, #16
1006ab0a:	4630      	mov	r0, r6
1006ab0c:	4629      	mov	r1, r5
1006ab0e:	f7d9 ff59 	bl	100449c4 <BLEPLAT_MemSet>
1006ab12:	2706      	movs	r7, #6
1006ab14:	4630      	mov	r0, r6
1006ab16:	9905      	ldr	r1, [sp, #20]
1006ab18:	463a      	mov	r2, r7
1006ab1a:	f7d9 ff43 	bl	100449a4 <BLEPLAT_MemCpy>
1006ab1e:	1db0      	adds	r0, r6, #6
1006ab20:	9906      	ldr	r1, [sp, #24]
1006ab22:	463a      	mov	r2, r7
1006ab24:	f7d9 ff3e 	bl	100449a4 <BLEPLAT_MemCpy>
1006ab28:	2d10      	cmp	r5, #16
1006ab2a:	d007      	beq.n	1006ab3c <smp_pp2_cei_lep_confirm_value_compute+0x12c>
1006ab2c:	5d60      	ldrb	r0, [r4, r5]
1006ab2e:	a90b      	add	r1, sp, #44	@ 0x2c
1006ab30:	5d49      	ldrb	r1, [r1, r5]
1006ab32:	4041      	eors	r1, r0
1006ab34:	a807      	add	r0, sp, #28
1006ab36:	5541      	strb	r1, [r0, r5]
1006ab38:	1c6d      	adds	r5, r5, #1
1006ab3a:	e7f5      	b.n	1006ab28 <smp_pp2_cei_lep_confirm_value_compute+0x118>
1006ab3c:	a80f      	add	r0, sp, #60	@ 0x3c
1006ab3e:	a907      	add	r1, sp, #28
1006ab40:	4622      	mov	r2, r4
1006ab42:	f7ea faf1 	bl	10055128 <hci_le_encrypt>
1006ab46:	b01b      	add	sp, #108	@ 0x6c
1006ab48:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006ab4a:	46c0      	nop			@ (mov r8, r8)

1006ab4c <__arm_cp.10_0>:
1006ab4c:	200008e0 	.word	0x200008e0

1006ab50 <__arm_cp.10_1>:
1006ab50:	100449a5 	.word	0x100449a5

1006ab54 <smp_pp2_per_rx_process_pairing_confirm>:
1006ab54:	b5f0      	push	{r4, r5, r6, r7, lr}
1006ab56:	b089      	sub	sp, #36	@ 0x24
1006ab58:	460c      	mov	r4, r1
1006ab5a:	4607      	mov	r7, r0
1006ab5c:	8909      	ldrh	r1, [r1, #8]
1006ab5e:	2500      	movs	r5, #0
1006ab60:	2215      	movs	r2, #21
1006ab62:	4628      	mov	r0, r5
1006ab64:	f7e5 f9f8 	bl	1004ff58 <ACL_pkt_get>
1006ab68:	2800      	cmp	r0, #0
1006ab6a:	d013      	beq.n	1006ab94 <smp_pp2_per_rx_process_pairing_confirm+0x40>
1006ab6c:	4606      	mov	r6, r0
1006ab6e:	2f00      	cmp	r7, #0
1006ab70:	d006      	beq.n	1006ab80 <smp_pp2_per_rx_process_pairing_confirm+0x2c>
1006ab72:	4623      	mov	r3, r4
1006ab74:	3328      	adds	r3, #40	@ 0x28
1006ab76:	2105      	movs	r1, #5
1006ab78:	2210      	movs	r2, #16
1006ab7a:	4638      	mov	r0, r7
1006ab7c:	f7e5 fa2a 	bl	1004ffd4 <ACL_pkt_read>
1006ab80:	7de0      	ldrb	r0, [r4, #23]
1006ab82:	0700      	lsls	r0, r0, #28
1006ab84:	d408      	bmi.n	1006ab98 <smp_pp2_per_rx_process_pairing_confirm+0x44>
1006ab86:	4621      	mov	r1, r4
1006ab88:	3148      	adds	r1, #72	@ 0x48
1006ab8a:	aa05      	add	r2, sp, #20
1006ab8c:	4620      	mov	r0, r4
1006ab8e:	f000 f831 	bl	1006abf4 <smp_pp2_per_lep_confirm_value_compute>
1006ab92:	e007      	b.n	1006aba4 <smp_pp2_per_rx_process_pairing_confirm+0x50>
1006ab94:	2088      	movs	r0, #136	@ 0x88
1006ab96:	e019      	b.n	1006abcc <smp_pp2_per_rx_process_pairing_confirm+0x78>
1006ab98:	a805      	add	r0, sp, #20
1006ab9a:	9002      	str	r0, [sp, #8]
1006ab9c:	9401      	str	r4, [sp, #4]
1006ab9e:	a801      	add	r0, sp, #4
1006aba0:	f000 f960 	bl	1006ae64 <smp_pp2_per_rx_process_pairing_confirm_excerpt_scp_ucfg_weak>
1006aba4:	2011      	movs	r0, #17
1006aba6:	8070      	strh	r0, [r6, #2]
1006aba8:	6870      	ldr	r0, [r6, #4]
1006abaa:	2103      	movs	r1, #3
1006abac:	7201      	strb	r1, [r0, #8]
1006abae:	2105      	movs	r1, #5
1006abb0:	2210      	movs	r2, #16
1006abb2:	ab05      	add	r3, sp, #20
1006abb4:	4630      	mov	r0, r6
1006abb6:	f7e5 fa2f 	bl	10050018 <ACL_pkt_write>
1006abba:	4620      	mov	r0, r4
1006abbc:	4631      	mov	r1, r6
1006abbe:	f7ff fb3f 	bl	1006a240 <smp_dep_l2c_send_acl_packet>
1006abc2:	2800      	cmp	r0, #0
1006abc4:	d102      	bne.n	1006abcc <smp_pp2_per_rx_process_pairing_confirm+0x78>
1006abc6:	20b6      	movs	r0, #182	@ 0xb6
1006abc8:	72a0      	strb	r0, [r4, #10]
1006abca:	4628      	mov	r0, r5
1006abcc:	b009      	add	sp, #36	@ 0x24
1006abce:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006abd0 <smp_pp2_per_auth_stage_1_start>:
1006abd0:	b510      	push	{r4, lr}
1006abd2:	4604      	mov	r4, r0
1006abd4:	3048      	adds	r0, #72	@ 0x48
1006abd6:	2110      	movs	r1, #16
1006abd8:	2200      	movs	r2, #0
1006abda:	f7fa fe30 	bl	1006583e <HAL_Generate_Random_Bytes_To>
1006abde:	7de0      	ldrb	r0, [r4, #23]
1006abe0:	0700      	lsls	r0, r0, #28
1006abe2:	d402      	bmi.n	1006abea <smp_pp2_per_auth_stage_1_start+0x1a>
1006abe4:	20b5      	movs	r0, #181	@ 0xb5
1006abe6:	72a0      	strb	r0, [r4, #10]
1006abe8:	bd10      	pop	{r4, pc}
1006abea:	4620      	mov	r0, r4
1006abec:	f000 f935 	bl	1006ae5a <smp_pp2_per_auth_stage1_start_excerpt_scp_ucfg_weak>
1006abf0:	bd10      	pop	{r4, pc}
	...

1006abf4 <smp_pp2_per_lep_confirm_value_compute>:
1006abf4:	b5f0      	push	{r4, r5, r6, r7, lr}
1006abf6:	b09b      	sub	sp, #108	@ 0x6c
1006abf8:	4614      	mov	r4, r2
1006abfa:	9106      	str	r1, [sp, #24]
1006abfc:	4606      	mov	r6, r0
1006abfe:	af0f      	add	r7, sp, #60	@ 0x3c
1006ac00:	2500      	movs	r5, #0
1006ac02:	222e      	movs	r2, #46	@ 0x2e
1006ac04:	4638      	mov	r0, r7
1006ac06:	4629      	mov	r1, r5
1006ac08:	f7d9 fedc 	bl	100449c4 <BLEPLAT_MemSet>
1006ac0c:	3710      	adds	r7, #16
1006ac0e:	2210      	movs	r2, #16
1006ac10:	4638      	mov	r0, r7
1006ac12:	9906      	ldr	r1, [sp, #24]
1006ac14:	f7d9 fec6 	bl	100449a4 <BLEPLAT_MemCpy>
1006ac18:	7cf0      	ldrb	r0, [r6, #19]
1006ac1a:	2803      	cmp	r0, #3
1006ac1c:	d00d      	beq.n	1006ac3a <smp_pp2_per_lep_confirm_value_compute+0x46>
1006ac1e:	2802      	cmp	r0, #2
1006ac20:	d112      	bne.n	1006ac48 <smp_pp2_per_lep_confirm_value_compute+0x54>
1006ac22:	4842      	ldr	r0, [pc, #264]	@ (1006ad2c <__arm_cp.16_0>)
1006ac24:	6800      	ldr	r0, [r0, #0]
1006ac26:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1006ac28:	a90f      	add	r1, sp, #60	@ 0x3c
1006ac2a:	7008      	strb	r0, [r1, #0]
1006ac2c:	0a02      	lsrs	r2, r0, #8
1006ac2e:	704a      	strb	r2, [r1, #1]
1006ac30:	0c02      	lsrs	r2, r0, #16
1006ac32:	708a      	strb	r2, [r1, #2]
1006ac34:	0e00      	lsrs	r0, r0, #24
1006ac36:	70c8      	strb	r0, [r1, #3]
1006ac38:	e006      	b.n	1006ac48 <smp_pp2_per_lep_confirm_value_compute+0x54>
1006ac3a:	483c      	ldr	r0, [pc, #240]	@ (1006ad2c <__arm_cp.16_0>)
1006ac3c:	6801      	ldr	r1, [r0, #0]
1006ac3e:	3144      	adds	r1, #68	@ 0x44
1006ac40:	a80f      	add	r0, sp, #60	@ 0x3c
1006ac42:	2210      	movs	r2, #16
1006ac44:	f7d9 feae 	bl	100449a4 <BLEPLAT_MemCpy>
1006ac48:	7d30      	ldrb	r0, [r6, #20]
1006ac4a:	2101      	movs	r1, #1
1006ac4c:	9106      	str	r1, [sp, #24]
1006ac4e:	f7f9 f927 	bl	10063ea0 <smp_pp1_get_pairing_pdu_offset>
1006ac52:	9003      	str	r0, [sp, #12]
1006ac54:	7d30      	ldrb	r0, [r6, #20]
1006ac56:	4629      	mov	r1, r5
1006ac58:	f7f9 f922 	bl	10063ea0 <smp_pp1_get_pairing_pdu_offset>
1006ac5c:	9001      	str	r0, [sp, #4]
1006ac5e:	af0f      	add	r7, sp, #60	@ 0x3c
1006ac60:	4638      	mov	r0, r7
1006ac62:	3028      	adds	r0, #40	@ 0x28
1006ac64:	4639      	mov	r1, r7
1006ac66:	3127      	adds	r1, #39	@ 0x27
1006ac68:	9102      	str	r1, [sp, #8]
1006ac6a:	9005      	str	r0, [sp, #20]
1006ac6c:	f7e7 f972 	bl	10051f54 <GAP_get_current_address>
1006ac70:	7870      	ldrb	r0, [r6, #1]
1006ac72:	2120      	movs	r1, #32
1006ac74:	5478      	strb	r0, [r7, r1]
1006ac76:	4638      	mov	r0, r7
1006ac78:	3021      	adds	r0, #33	@ 0x21
1006ac7a:	1cb1      	adds	r1, r6, #2
1006ac7c:	2206      	movs	r2, #6
1006ac7e:	4b2c      	ldr	r3, [pc, #176]	@ (1006ad30 <__arm_cp.16_1>)
1006ac80:	9004      	str	r0, [sp, #16]
1006ac82:	4798      	blx	r3
1006ac84:	4829      	ldr	r0, [pc, #164]	@ (1006ad2c <__arm_cp.16_0>)
1006ac86:	6800      	ldr	r0, [r0, #0]
1006ac88:	9901      	ldr	r1, [sp, #4]
1006ac8a:	1841      	adds	r1, r0, r1
1006ac8c:	31b4      	adds	r1, #180	@ 0xb4
1006ac8e:	ae0b      	add	r6, sp, #44	@ 0x2c
1006ac90:	4630      	mov	r0, r6
1006ac92:	3009      	adds	r0, #9
1006ac94:	2207      	movs	r2, #7
1006ac96:	9201      	str	r2, [sp, #4]
1006ac98:	4b25      	ldr	r3, [pc, #148]	@ (1006ad30 <__arm_cp.16_1>)
1006ac9a:	4798      	blx	r3
1006ac9c:	4823      	ldr	r0, [pc, #140]	@ (1006ad2c <__arm_cp.16_0>)
1006ac9e:	6800      	ldr	r0, [r0, #0]
1006aca0:	9903      	ldr	r1, [sp, #12]
1006aca2:	1841      	adds	r1, r0, r1
1006aca4:	31b4      	adds	r1, #180	@ 0xb4
1006aca6:	1cb0      	adds	r0, r6, #2
1006aca8:	9a01      	ldr	r2, [sp, #4]
1006acaa:	4b21      	ldr	r3, [pc, #132]	@ (1006ad30 <__arm_cp.16_1>)
1006acac:	4798      	blx	r3
1006acae:	1c70      	adds	r0, r6, #1
1006acb0:	9902      	ldr	r1, [sp, #8]
1006acb2:	9a06      	ldr	r2, [sp, #24]
1006acb4:	4b1e      	ldr	r3, [pc, #120]	@ (1006ad30 <__arm_cp.16_1>)
1006acb6:	4798      	blx	r3
1006acb8:	4b1d      	ldr	r3, [pc, #116]	@ (1006ad30 <__arm_cp.16_1>)
1006acba:	4639      	mov	r1, r7
1006acbc:	3120      	adds	r1, #32
1006acbe:	4630      	mov	r0, r6
1006acc0:	9a06      	ldr	r2, [sp, #24]
1006acc2:	4798      	blx	r3
1006acc4:	3710      	adds	r7, #16
1006acc6:	2d10      	cmp	r5, #16
1006acc8:	d007      	beq.n	1006acda <smp_pp2_per_lep_confirm_value_compute+0xe6>
1006acca:	5d78      	ldrb	r0, [r7, r5]
1006accc:	a90b      	add	r1, sp, #44	@ 0x2c
1006acce:	5d49      	ldrb	r1, [r1, r5]
1006acd0:	4041      	eors	r1, r0
1006acd2:	a807      	add	r0, sp, #28
1006acd4:	5541      	strb	r1, [r0, r5]
1006acd6:	1c6d      	adds	r5, r5, #1
1006acd8:	e7f5      	b.n	1006acc6 <smp_pp2_per_lep_confirm_value_compute+0xd2>
1006acda:	a80f      	add	r0, sp, #60	@ 0x3c
1006acdc:	a907      	add	r1, sp, #28
1006acde:	4622      	mov	r2, r4
1006ace0:	f7ea fa22 	bl	10055128 <hci_le_encrypt>
1006ace4:	ae0b      	add	r6, sp, #44	@ 0x2c
1006ace6:	2500      	movs	r5, #0
1006ace8:	2210      	movs	r2, #16
1006acea:	4630      	mov	r0, r6
1006acec:	4629      	mov	r1, r5
1006acee:	f7d9 fe69 	bl	100449c4 <BLEPLAT_MemSet>
1006acf2:	2706      	movs	r7, #6
1006acf4:	4630      	mov	r0, r6
1006acf6:	9905      	ldr	r1, [sp, #20]
1006acf8:	463a      	mov	r2, r7
1006acfa:	f7d9 fe53 	bl	100449a4 <BLEPLAT_MemCpy>
1006acfe:	1db0      	adds	r0, r6, #6
1006ad00:	9904      	ldr	r1, [sp, #16]
1006ad02:	463a      	mov	r2, r7
1006ad04:	f7d9 fe4e 	bl	100449a4 <BLEPLAT_MemCpy>
1006ad08:	2d10      	cmp	r5, #16
1006ad0a:	d007      	beq.n	1006ad1c <smp_pp2_per_lep_confirm_value_compute+0x128>
1006ad0c:	5d60      	ldrb	r0, [r4, r5]
1006ad0e:	a90b      	add	r1, sp, #44	@ 0x2c
1006ad10:	5d49      	ldrb	r1, [r1, r5]
1006ad12:	4041      	eors	r1, r0
1006ad14:	a807      	add	r0, sp, #28
1006ad16:	5541      	strb	r1, [r0, r5]
1006ad18:	1c6d      	adds	r5, r5, #1
1006ad1a:	e7f5      	b.n	1006ad08 <smp_pp2_per_lep_confirm_value_compute+0x114>
1006ad1c:	a80f      	add	r0, sp, #60	@ 0x3c
1006ad1e:	a907      	add	r1, sp, #28
1006ad20:	4622      	mov	r2, r4
1006ad22:	f7ea fa01 	bl	10055128 <hci_le_encrypt>
1006ad26:	b01b      	add	sp, #108	@ 0x6c
1006ad28:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006ad2a:	46c0      	nop			@ (mov r8, r8)

1006ad2c <__arm_cp.16_0>:
1006ad2c:	200008e0 	.word	0x200008e0

1006ad30 <__arm_cp.16_1>:
1006ad30:	100449a5 	.word	0x100449a5

1006ad34 <smp_pp2_per_rx_process_pairing_random>:
1006ad34:	b5f0      	push	{r4, r5, r6, r7, lr}
1006ad36:	b08b      	sub	sp, #44	@ 0x2c
1006ad38:	460d      	mov	r5, r1
1006ad3a:	4606      	mov	r6, r0
1006ad3c:	2400      	movs	r4, #0
1006ad3e:	9402      	str	r4, [sp, #8]
1006ad40:	8909      	ldrh	r1, [r1, #8]
1006ad42:	2215      	movs	r2, #21
1006ad44:	4620      	mov	r0, r4
1006ad46:	f7e5 f907 	bl	1004ff58 <ACL_pkt_get>
1006ad4a:	2800      	cmp	r0, #0
1006ad4c:	d020      	beq.n	1006ad90 <smp_pp2_per_rx_process_pairing_random+0x5c>
1006ad4e:	4607      	mov	r7, r0
1006ad50:	462b      	mov	r3, r5
1006ad52:	3338      	adds	r3, #56	@ 0x38
1006ad54:	2105      	movs	r1, #5
1006ad56:	2210      	movs	r2, #16
1006ad58:	4630      	mov	r0, r6
1006ad5a:	461e      	mov	r6, r3
1006ad5c:	f7e5 f93a 	bl	1004ffd4 <ACL_pkt_read>
1006ad60:	7de8      	ldrb	r0, [r5, #23]
1006ad62:	0700      	lsls	r0, r0, #28
1006ad64:	d416      	bmi.n	1006ad94 <smp_pp2_per_rx_process_pairing_random+0x60>
1006ad66:	9400      	str	r4, [sp, #0]
1006ad68:	4634      	mov	r4, r6
1006ad6a:	ae03      	add	r6, sp, #12
1006ad6c:	4628      	mov	r0, r5
1006ad6e:	4621      	mov	r1, r4
1006ad70:	4632      	mov	r2, r6
1006ad72:	f7ff ff3f 	bl	1006abf4 <smp_pp2_per_lep_confirm_value_compute>
1006ad76:	4629      	mov	r1, r5
1006ad78:	3128      	adds	r1, #40	@ 0x28
1006ad7a:	2210      	movs	r2, #16
1006ad7c:	4630      	mov	r0, r6
1006ad7e:	4626      	mov	r6, r4
1006ad80:	9c00      	ldr	r4, [sp, #0]
1006ad82:	f7d9 fe2f 	bl	100449e4 <BLEPLAT_MemCmp>
1006ad86:	a901      	add	r1, sp, #4
1006ad88:	22bc      	movs	r2, #188	@ 0xbc
1006ad8a:	700a      	strb	r2, [r1, #0]
1006ad8c:	9002      	str	r0, [sp, #8]
1006ad8e:	e00c      	b.n	1006adaa <smp_pp2_per_rx_process_pairing_random+0x76>
1006ad90:	2488      	movs	r4, #136	@ 0x88
1006ad92:	e05b      	b.n	1006ae4c <smp_pp2_per_rx_process_pairing_random+0x118>
1006ad94:	a801      	add	r0, sp, #4
1006ad96:	900a      	str	r0, [sp, #40]	@ 0x28
1006ad98:	a802      	add	r0, sp, #8
1006ad9a:	9009      	str	r0, [sp, #36]	@ 0x24
1006ad9c:	a803      	add	r0, sp, #12
1006ad9e:	9008      	str	r0, [sp, #32]
1006ada0:	9507      	str	r5, [sp, #28]
1006ada2:	a807      	add	r0, sp, #28
1006ada4:	f000 f85f 	bl	1006ae66 <smp_pp2_per_rx_process_pairing_random_excerpt_scp_ucfg_weak>
1006ada8:	9802      	ldr	r0, [sp, #8]
1006adaa:	2800      	cmp	r0, #0
1006adac:	d006      	beq.n	1006adbc <smp_pp2_per_rx_process_pairing_random+0x88>
1006adae:	2104      	movs	r1, #4
1006adb0:	2301      	movs	r3, #1
1006adb2:	4628      	mov	r0, r5
1006adb4:	463a      	mov	r2, r7
1006adb6:	f7ff fc3d 	bl	1006a634 <smp_pp3_pairing_failed_send>
1006adba:	e01b      	b.n	1006adf4 <smp_pp2_per_rx_process_pairing_random+0xc0>
1006adbc:	2011      	movs	r0, #17
1006adbe:	8078      	strh	r0, [r7, #2]
1006adc0:	6878      	ldr	r0, [r7, #4]
1006adc2:	2104      	movs	r1, #4
1006adc4:	7201      	strb	r1, [r0, #8]
1006adc6:	462b      	mov	r3, r5
1006adc8:	3348      	adds	r3, #72	@ 0x48
1006adca:	2105      	movs	r1, #5
1006adcc:	2210      	movs	r2, #16
1006adce:	4638      	mov	r0, r7
1006add0:	f7e5 f922 	bl	10050018 <ACL_pkt_write>
1006add4:	4628      	mov	r0, r5
1006add6:	4639      	mov	r1, r7
1006add8:	f7ff fa32 	bl	1006a240 <smp_dep_l2c_send_acl_packet>
1006addc:	2800      	cmp	r0, #0
1006adde:	d109      	bne.n	1006adf4 <smp_pp2_per_rx_process_pairing_random+0xc0>
1006ade0:	9801      	ldr	r0, [sp, #4]
1006ade2:	72a8      	strb	r0, [r5, #10]
1006ade4:	481b      	ldr	r0, [pc, #108]	@ (1006ae54 <__arm_cp.17_0>)
1006ade6:	6800      	ldr	r0, [r0, #0]
1006ade8:	2135      	movs	r1, #53	@ 0x35
1006adea:	5c40      	ldrb	r0, [r0, r1]
1006adec:	7c29      	ldrb	r1, [r5, #16]
1006adee:	4281      	cmp	r1, r0
1006adf0:	d900      	bls.n	1006adf4 <smp_pp2_per_rx_process_pairing_random+0xc0>
1006adf2:	7428      	strb	r0, [r5, #16]
1006adf4:	9802      	ldr	r0, [sp, #8]
1006adf6:	2800      	cmp	r0, #0
1006adf8:	d128      	bne.n	1006ae4c <smp_pp2_per_rx_process_pairing_random+0x118>
1006adfa:	7de8      	ldrb	r0, [r5, #23]
1006adfc:	0700      	lsls	r0, r0, #28
1006adfe:	d425      	bmi.n	1006ae4c <smp_pp2_per_rx_process_pairing_random+0x118>
1006ae00:	a807      	add	r0, sp, #28
1006ae02:	2400      	movs	r4, #0
1006ae04:	2210      	movs	r2, #16
1006ae06:	4621      	mov	r1, r4
1006ae08:	f7d9 fddc 	bl	100449c4 <BLEPLAT_MemSet>
1006ae0c:	7ce8      	ldrb	r0, [r5, #19]
1006ae0e:	2803      	cmp	r0, #3
1006ae10:	d00d      	beq.n	1006ae2e <smp_pp2_per_rx_process_pairing_random+0xfa>
1006ae12:	2802      	cmp	r0, #2
1006ae14:	d112      	bne.n	1006ae3c <smp_pp2_per_rx_process_pairing_random+0x108>
1006ae16:	480f      	ldr	r0, [pc, #60]	@ (1006ae54 <__arm_cp.17_0>)
1006ae18:	6800      	ldr	r0, [r0, #0]
1006ae1a:	6b80      	ldr	r0, [r0, #56]	@ 0x38
1006ae1c:	a907      	add	r1, sp, #28
1006ae1e:	7008      	strb	r0, [r1, #0]
1006ae20:	0a02      	lsrs	r2, r0, #8
1006ae22:	704a      	strb	r2, [r1, #1]
1006ae24:	0c02      	lsrs	r2, r0, #16
1006ae26:	708a      	strb	r2, [r1, #2]
1006ae28:	0e00      	lsrs	r0, r0, #24
1006ae2a:	70c8      	strb	r0, [r1, #3]
1006ae2c:	e006      	b.n	1006ae3c <smp_pp2_per_rx_process_pairing_random+0x108>
1006ae2e:	4809      	ldr	r0, [pc, #36]	@ (1006ae54 <__arm_cp.17_0>)
1006ae30:	6801      	ldr	r1, [r0, #0]
1006ae32:	3144      	adds	r1, #68	@ 0x44
1006ae34:	a807      	add	r0, sp, #28
1006ae36:	2210      	movs	r2, #16
1006ae38:	f7d9 fdb4 	bl	100449a4 <BLEPLAT_MemCpy>
1006ae3c:	4629      	mov	r1, r5
1006ae3e:	3148      	adds	r1, #72	@ 0x48
1006ae40:	3528      	adds	r5, #40	@ 0x28
1006ae42:	a807      	add	r0, sp, #28
1006ae44:	4632      	mov	r2, r6
1006ae46:	462b      	mov	r3, r5
1006ae48:	f7f8 fda6 	bl	10063998 <smp_crt_s1_generate_stk>
1006ae4c:	4620      	mov	r0, r4
1006ae4e:	b00b      	add	sp, #44	@ 0x2c
1006ae50:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006ae52:	46c0      	nop			@ (mov r8, r8)

1006ae54 <__arm_cp.17_0>:
1006ae54:	200008e0 	.word	0x200008e0

1006ae58 <smp_pp2_cei_auth_stage1_start_excerpt_scp_ucfg_weak>:
1006ae58:	4770      	bx	lr

1006ae5a <smp_pp2_per_auth_stage1_start_excerpt_scp_ucfg_weak>:
1006ae5a:	4770      	bx	lr

1006ae5c <smp_pp2_cei_send_pairing_confirm_excerpt_scp_ucfg_weak>:
1006ae5c:	4770      	bx	lr

1006ae5e <smp_pp2_cei_rx_process_pairing_random_excerpt1_scp_ucfg_weak>:
1006ae5e:	201f      	movs	r0, #31
1006ae60:	4770      	bx	lr

1006ae62 <smp_pp2_cei_rx_process_pairing_random_excerpt2_scp_ucfg_weak>:
1006ae62:	4770      	bx	lr

1006ae64 <smp_pp2_per_rx_process_pairing_confirm_excerpt_scp_ucfg_weak>:
1006ae64:	4770      	bx	lr

1006ae66 <smp_pp2_per_rx_process_pairing_random_excerpt_scp_ucfg_weak>:
1006ae66:	4770      	bx	lr

1006ae68 <smp_pp3_keys_distribution_start>:
1006ae68:	b580      	push	{r7, lr}
1006ae6a:	2901      	cmp	r1, #1
1006ae6c:	d111      	bne.n	1006ae92 <smp_pp3_keys_distribution_start+0x2a>
1006ae6e:	7c42      	ldrb	r2, [r0, #17]
1006ae70:	0753      	lsls	r3, r2, #29
1006ae72:	d005      	beq.n	1006ae80 <smp_pp3_keys_distribution_start+0x18>
1006ae74:	7dc3      	ldrb	r3, [r0, #23]
1006ae76:	071b      	lsls	r3, r3, #28
1006ae78:	d51d      	bpl.n	1006aeb6 <smp_pp3_keys_distribution_start+0x4e>
1006ae7a:	2306      	movs	r3, #6
1006ae7c:	401a      	ands	r2, r3
1006ae7e:	d11a      	bne.n	1006aeb6 <smp_pp3_keys_distribution_start+0x4e>
1006ae80:	2260      	movs	r2, #96	@ 0x60
1006ae82:	5c83      	ldrb	r3, [r0, r2]
1006ae84:	2201      	movs	r2, #1
1006ae86:	401a      	ands	r2, r3
1006ae88:	2900      	cmp	r1, #0
1006ae8a:	d006      	beq.n	1006ae9a <smp_pp3_keys_distribution_start+0x32>
1006ae8c:	2a00      	cmp	r2, #0
1006ae8e:	d119      	bne.n	1006aec4 <smp_pp3_keys_distribution_start+0x5c>
1006ae90:	e003      	b.n	1006ae9a <smp_pp3_keys_distribution_start+0x32>
1006ae92:	2900      	cmp	r1, #0
1006ae94:	d000      	beq.n	1006ae98 <smp_pp3_keys_distribution_start+0x30>
1006ae96:	bd80      	pop	{r7, pc}
1006ae98:	2200      	movs	r2, #0
1006ae9a:	7c81      	ldrb	r1, [r0, #18]
1006ae9c:	07cb      	lsls	r3, r1, #31
1006ae9e:	d004      	beq.n	1006aeaa <smp_pp3_keys_distribution_start+0x42>
1006aea0:	7dc3      	ldrb	r3, [r0, #23]
1006aea2:	071b      	lsls	r3, r3, #28
1006aea4:	d401      	bmi.n	1006aeaa <smp_pp3_keys_distribution_start+0x42>
1006aea6:	21d1      	movs	r1, #209	@ 0xd1
1006aea8:	e009      	b.n	1006aebe <smp_pp3_keys_distribution_start+0x56>
1006aeaa:	078b      	lsls	r3, r1, #30
1006aeac:	d406      	bmi.n	1006aebc <smp_pp3_keys_distribution_start+0x54>
1006aeae:	0749      	lsls	r1, r1, #29
1006aeb0:	d508      	bpl.n	1006aec4 <smp_pp3_keys_distribution_start+0x5c>
1006aeb2:	21d5      	movs	r1, #213	@ 0xd5
1006aeb4:	e003      	b.n	1006aebe <smp_pp3_keys_distribution_start+0x56>
1006aeb6:	21d0      	movs	r1, #208	@ 0xd0
1006aeb8:	7281      	strb	r1, [r0, #10]
1006aeba:	bd80      	pop	{r7, pc}
1006aebc:	21d3      	movs	r1, #211	@ 0xd3
1006aebe:	7281      	strb	r1, [r0, #10]
1006aec0:	2a00      	cmp	r2, #0
1006aec2:	d002      	beq.n	1006aeca <smp_pp3_keys_distribution_start+0x62>
1006aec4:	f000 f804 	bl	1006aed0 <smp_pp3_keys_distribution_completed>
1006aec8:	bd80      	pop	{r7, pc}
1006aeca:	f000 f817 	bl	1006aefc <smp_pp3_keys_distribution_send>
1006aece:	bd80      	pop	{r7, pc}

1006aed0 <smp_pp3_keys_distribution_completed>:
1006aed0:	b580      	push	{r7, lr}
1006aed2:	2160      	movs	r1, #96	@ 0x60
1006aed4:	5c41      	ldrb	r1, [r0, r1]
1006aed6:	07c9      	lsls	r1, r1, #31
1006aed8:	d106      	bne.n	1006aee8 <smp_pp3_keys_distribution_completed+0x18>
1006aeda:	2111      	movs	r1, #17
1006aedc:	5641      	ldrsb	r1, [r0, r1]
1006aede:	2900      	cmp	r1, #0
1006aee0:	d502      	bpl.n	1006aee8 <smp_pp3_keys_distribution_completed+0x18>
1006aee2:	7e81      	ldrb	r1, [r0, #26]
1006aee4:	068a      	lsls	r2, r1, #26
1006aee6:	d402      	bmi.n	1006aeee <smp_pp3_keys_distribution_completed+0x1e>
1006aee8:	f7ff faec 	bl	1006a4c4 <smp_pp3_pairing_completed_successful>
1006aeec:	bd80      	pop	{r7, pc}
1006aeee:	2204      	movs	r2, #4
1006aef0:	4311      	orrs	r1, r2
1006aef2:	7681      	strb	r1, [r0, #26]
1006aef4:	f7e4 f803 	bl	1004eefe <smp_start_encryption_ucfg>
1006aef8:	bd80      	pop	{r7, pc}
	...

1006aefc <smp_pp3_keys_distribution_send>:
1006aefc:	b5f0      	push	{r4, r5, r6, r7, lr}
1006aefe:	b089      	sub	sp, #36	@ 0x24
1006af00:	4604      	mov	r4, r0
1006af02:	a808      	add	r0, sp, #32
1006af04:	2600      	movs	r6, #0
1006af06:	8006      	strh	r6, [r0, #0]
1006af08:	8921      	ldrh	r1, [r4, #8]
1006af0a:	2215      	movs	r2, #21
1006af0c:	4630      	mov	r0, r6
1006af0e:	f7e5 f823 	bl	1004ff58 <ACL_pkt_get>
1006af12:	2800      	cmp	r0, #0
1006af14:	d02d      	beq.n	1006af72 <smp_pp3_keys_distribution_send+0x76>
1006af16:	4605      	mov	r5, r0
1006af18:	2060      	movs	r0, #96	@ 0x60
1006af1a:	5c20      	ldrb	r0, [r4, r0]
1006af1c:	06c0      	lsls	r0, r0, #27
1006af1e:	d40b      	bmi.n	1006af38 <smp_pp3_keys_distribution_send+0x3c>
1006af20:	4627      	mov	r7, r4
1006af22:	3760      	adds	r7, #96	@ 0x60
1006af24:	4620      	mov	r0, r4
1006af26:	301c      	adds	r0, #28
1006af28:	2102      	movs	r1, #2
1006af2a:	2200      	movs	r2, #0
1006af2c:	f7fa fc87 	bl	1006583e <HAL_Generate_Random_Bytes_To>
1006af30:	7838      	ldrb	r0, [r7, #0]
1006af32:	2110      	movs	r1, #16
1006af34:	4301      	orrs	r1, r0
1006af36:	7039      	strb	r1, [r7, #0]
1006af38:	7aa0      	ldrb	r0, [r4, #10]
1006af3a:	38d1      	subs	r0, #209	@ 0xd1
1006af3c:	2804      	cmp	r0, #4
1006af3e:	d869      	bhi.n	1006b014 <smp_pp3_keys_distribution_send+0x118>
1006af40:	4478      	add	r0, pc
1006af42:	7900      	ldrb	r0, [r0, #4]
1006af44:	0040      	lsls	r0, r0, #1
1006af46:	4487      	add	pc, r0
1006af48:	42381902 	.word	0x42381902
1006af4c:	0054      	.short	0x0054
1006af4e:	4836      	ldr	r0, [pc, #216]	@ (1006b028 <__arm_cp.2_0>)
1006af50:	6800      	ldr	r0, [r0, #0]
1006af52:	4621      	mov	r1, r4
1006af54:	311c      	adds	r1, #28
1006af56:	3008      	adds	r0, #8
1006af58:	aa08      	add	r2, sp, #32
1006af5a:	ae04      	add	r6, sp, #16
1006af5c:	4633      	mov	r3, r6
1006af5e:	f7f8 fc9d 	bl	1006389c <smp_crt_diversify>
1006af62:	6868      	ldr	r0, [r5, #4]
1006af64:	2106      	movs	r1, #6
1006af66:	7201      	strb	r1, [r0, #8]
1006af68:	2011      	movs	r0, #17
1006af6a:	8068      	strh	r0, [r5, #2]
1006af6c:	7c22      	ldrb	r2, [r4, #16]
1006af6e:	2105      	movs	r1, #5
1006af70:	e04c      	b.n	1006b00c <smp_pp3_keys_distribution_send+0x110>
1006af72:	200e      	movs	r0, #14
1006af74:	2100      	movs	r1, #0
1006af76:	f7fa f96d 	bl	10065254 <tsk_wait_resource_idx>
1006af7a:	e053      	b.n	1006b024 <smp_pp3_keys_distribution_send+0x128>
1006af7c:	ae04      	add	r6, sp, #16
1006af7e:	2108      	movs	r1, #8
1006af80:	9102      	str	r1, [sp, #8]
1006af82:	2200      	movs	r2, #0
1006af84:	4630      	mov	r0, r6
1006af86:	9601      	str	r6, [sp, #4]
1006af88:	f7fa fc59 	bl	1006583e <HAL_Generate_Random_Bytes_To>
1006af8c:	4620      	mov	r0, r4
1006af8e:	301c      	adds	r0, #28
1006af90:	af08      	add	r7, sp, #32
1006af92:	4631      	mov	r1, r6
1006af94:	463a      	mov	r2, r7
1006af96:	f7f8 fc4b 	bl	10063830 <smp_sap_crt_generate_ediv>
1006af9a:	200b      	movs	r0, #11
1006af9c:	8068      	strh	r0, [r5, #2]
1006af9e:	6868      	ldr	r0, [r5, #4]
1006afa0:	2607      	movs	r6, #7
1006afa2:	7206      	strb	r6, [r0, #8]
1006afa4:	2105      	movs	r1, #5
1006afa6:	2202      	movs	r2, #2
1006afa8:	4628      	mov	r0, r5
1006afaa:	463b      	mov	r3, r7
1006afac:	f7e5 f834 	bl	10050018 <ACL_pkt_write>
1006afb0:	4628      	mov	r0, r5
1006afb2:	4631      	mov	r1, r6
1006afb4:	9a02      	ldr	r2, [sp, #8]
1006afb6:	9b01      	ldr	r3, [sp, #4]
1006afb8:	e02a      	b.n	1006b010 <smp_pp3_keys_distribution_send+0x114>
1006afba:	2011      	movs	r0, #17
1006afbc:	8068      	strh	r0, [r5, #2]
1006afbe:	6868      	ldr	r0, [r5, #4]
1006afc0:	2108      	movs	r1, #8
1006afc2:	7201      	strb	r1, [r0, #8]
1006afc4:	ae04      	add	r6, sp, #16
1006afc6:	4630      	mov	r0, r6
1006afc8:	f7f8 fc7c 	bl	100638c4 <smp_sap_crt_generate_local_irk>
1006afcc:	e01c      	b.n	1006b008 <smp_pp3_keys_distribution_send+0x10c>
1006afce:	a803      	add	r0, sp, #12
1006afd0:	7006      	strb	r6, [r0, #0]
1006afd2:	ae04      	add	r6, sp, #16
1006afd4:	4631      	mov	r1, r6
1006afd6:	f7ff f91b 	bl	1006a210 <smp_dep_gap_get_local_identity_address>
1006afda:	2008      	movs	r0, #8
1006afdc:	8068      	strh	r0, [r5, #2]
1006afde:	6868      	ldr	r0, [r5, #4]
1006afe0:	2109      	movs	r1, #9
1006afe2:	7201      	strb	r1, [r0, #8]
1006afe4:	6868      	ldr	r0, [r5, #4]
1006afe6:	9903      	ldr	r1, [sp, #12]
1006afe8:	7241      	strb	r1, [r0, #9]
1006afea:	2106      	movs	r1, #6
1006afec:	4628      	mov	r0, r5
1006afee:	460a      	mov	r2, r1
1006aff0:	e00d      	b.n	1006b00e <smp_pp3_keys_distribution_send+0x112>
1006aff2:	2011      	movs	r0, #17
1006aff4:	8068      	strh	r0, [r5, #2]
1006aff6:	6868      	ldr	r0, [r5, #4]
1006aff8:	210a      	movs	r1, #10
1006affa:	7201      	strb	r1, [r0, #8]
1006affc:	4620      	mov	r0, r4
1006affe:	301c      	adds	r0, #28
1006b000:	ae04      	add	r6, sp, #16
1006b002:	4631      	mov	r1, r6
1006b004:	f7f8 fce0 	bl	100639c8 <smp_crt_generate_csrk>
1006b008:	2105      	movs	r1, #5
1006b00a:	2210      	movs	r2, #16
1006b00c:	4628      	mov	r0, r5
1006b00e:	4633      	mov	r3, r6
1006b010:	f7e5 f802 	bl	10050018 <ACL_pkt_write>
1006b014:	4620      	mov	r0, r4
1006b016:	4629      	mov	r1, r5
1006b018:	f7ff f912 	bl	1006a240 <smp_dep_l2c_send_acl_packet>
1006b01c:	2800      	cmp	r0, #0
1006b01e:	d101      	bne.n	1006b024 <smp_pp3_keys_distribution_send+0x128>
1006b020:	20dd      	movs	r0, #221	@ 0xdd
1006b022:	72a0      	strb	r0, [r4, #10]
1006b024:	b009      	add	sp, #36	@ 0x24
1006b026:	bdf0      	pop	{r4, r5, r6, r7, pc}

1006b028 <__arm_cp.2_0>:
1006b028:	2000083c 	.word	0x2000083c

1006b02c <smp_pp3_keys_distribution_signaling_ack>:
1006b02c:	b580      	push	{r7, lr}
1006b02e:	7a82      	ldrb	r2, [r0, #10]
1006b030:	2add      	cmp	r2, #221	@ 0xdd
1006b032:	d123      	bne.n	1006b07c <smp_pp3_keys_distribution_signaling_ack+0x50>
1006b034:	1f8a      	subs	r2, r1, #6
1006b036:	2a04      	cmp	r2, #4
1006b038:	d81e      	bhi.n	1006b078 <smp_pp3_keys_distribution_signaling_ack+0x4c>
1006b03a:	21d2      	movs	r1, #210	@ 0xd2
1006b03c:	447a      	add	r2, pc
1006b03e:	7912      	ldrb	r2, [r2, #4]
1006b040:	0052      	lsls	r2, r2, #1
1006b042:	4497      	add	pc, r2
1006b044:	07110218 	.word	0x07110218
1006b048:	000a      	.short	0x000a
1006b04a:	7c81      	ldrb	r1, [r0, #18]
1006b04c:	078a      	lsls	r2, r1, #30
1006b04e:	d502      	bpl.n	1006b056 <smp_pp3_keys_distribution_signaling_ack+0x2a>
1006b050:	21d3      	movs	r1, #211	@ 0xd3
1006b052:	e010      	b.n	1006b076 <smp_pp3_keys_distribution_signaling_ack+0x4a>
1006b054:	7c81      	ldrb	r1, [r0, #18]
1006b056:	0749      	lsls	r1, r1, #29
1006b058:	d40c      	bmi.n	1006b074 <smp_pp3_keys_distribution_signaling_ack+0x48>
1006b05a:	2160      	movs	r1, #96	@ 0x60
1006b05c:	5c41      	ldrb	r1, [r0, r1]
1006b05e:	07c9      	lsls	r1, r1, #31
1006b060:	d104      	bne.n	1006b06c <smp_pp3_keys_distribution_signaling_ack+0x40>
1006b062:	f7ff ff35 	bl	1006aed0 <smp_pp3_keys_distribution_completed>
1006b066:	bd80      	pop	{r7, pc}
1006b068:	21d4      	movs	r1, #212	@ 0xd4
1006b06a:	e004      	b.n	1006b076 <smp_pp3_keys_distribution_signaling_ack+0x4a>
1006b06c:	2101      	movs	r1, #1
1006b06e:	f7ff fefb 	bl	1006ae68 <smp_pp3_keys_distribution_start>
1006b072:	bd80      	pop	{r7, pc}
1006b074:	21d5      	movs	r1, #213	@ 0xd5
1006b076:	7281      	strb	r1, [r0, #10]
1006b078:	f7ff ff40 	bl	1006aefc <smp_pp3_keys_distribution_send>
1006b07c:	bd80      	pop	{r7, pc}
	...

1006b080 <smp_pp3_keys_distribution_receive>:
1006b080:	b5f0      	push	{r4, r5, r6, r7, lr}
1006b082:	b085      	sub	sp, #20
1006b084:	4607      	mov	r7, r0
1006b086:	6840      	ldr	r0, [r0, #4]
1006b088:	7a05      	ldrb	r5, [r0, #8]
1006b08a:	1fa8      	subs	r0, r5, #6
1006b08c:	2804      	cmp	r0, #4
1006b08e:	d823      	bhi.n	1006b0d8 <smp_pp3_keys_distribution_receive+0x58>
1006b090:	460c      	mov	r4, r1
1006b092:	7a88      	ldrb	r0, [r1, #10]
1006b094:	2686      	movs	r6, #134	@ 0x86
1006b096:	28d0      	cmp	r0, #208	@ 0xd0
1006b098:	d11f      	bne.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b09a:	4620      	mov	r0, r4
1006b09c:	3059      	adds	r0, #89	@ 0x59
1006b09e:	9001      	str	r0, [sp, #4]
1006b0a0:	8920      	ldrh	r0, [r4, #8]
1006b0a2:	f7f9 f8bd 	bl	10064220 <smp_get_remote_device_list_index>
1006b0a6:	4602      	mov	r2, r0
1006b0a8:	2000      	movs	r0, #0
1006b0aa:	4b44      	ldr	r3, [pc, #272]	@ (1006b1bc <__arm_cp.4_0>)
1006b0ac:	9002      	str	r0, [sp, #8]
1006b0ae:	4601      	mov	r1, r0
1006b0b0:	f7f9 fb6c 	bl	1006478c <smp_timer_reset>
1006b0b4:	2d06      	cmp	r5, #6
1006b0b6:	d005      	beq.n	1006b0c4 <smp_pp3_keys_distribution_receive+0x44>
1006b0b8:	2d09      	cmp	r5, #9
1006b0ba:	d011      	beq.n	1006b0e0 <smp_pp3_keys_distribution_receive+0x60>
1006b0bc:	2d08      	cmp	r5, #8
1006b0be:	d034      	beq.n	1006b12a <smp_pp3_keys_distribution_receive+0xaa>
1006b0c0:	2d07      	cmp	r5, #7
1006b0c2:	d13d      	bne.n	1006b140 <smp_pp3_keys_distribution_receive+0xc0>
1006b0c4:	7de0      	ldrb	r0, [r4, #23]
1006b0c6:	0700      	lsls	r0, r0, #28
1006b0c8:	d407      	bmi.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b0ca:	7c60      	ldrb	r0, [r4, #17]
1006b0cc:	07c0      	lsls	r0, r0, #31
1006b0ce:	d004      	beq.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b0d0:	2d06      	cmp	r5, #6
1006b0d2:	d144      	bne.n	1006b15e <smp_pp3_keys_distribution_receive+0xde>
1006b0d4:	3428      	adds	r4, #40	@ 0x28
1006b0d6:	e02c      	b.n	1006b132 <smp_pp3_keys_distribution_receive+0xb2>
1006b0d8:	2684      	movs	r6, #132	@ 0x84
1006b0da:	4630      	mov	r0, r6
1006b0dc:	b005      	add	sp, #20
1006b0de:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006b0e0:	7c60      	ldrb	r0, [r4, #17]
1006b0e2:	0780      	lsls	r0, r0, #30
1006b0e4:	d5f9      	bpl.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b0e6:	ab03      	add	r3, sp, #12
1006b0e8:	2600      	movs	r6, #0
1006b0ea:	809e      	strh	r6, [r3, #4]
1006b0ec:	9603      	str	r6, [sp, #12]
1006b0ee:	2106      	movs	r1, #6
1006b0f0:	4638      	mov	r0, r7
1006b0f2:	460a      	mov	r2, r1
1006b0f4:	f7e4 ff65 	bl	1004ffc2 <ACL_pkt_cmp>
1006b0f8:	2800      	cmp	r0, #0
1006b0fa:	d045      	beq.n	1006b188 <smp_pp3_keys_distribution_receive+0x108>
1006b0fc:	6878      	ldr	r0, [r7, #4]
1006b0fe:	7a40      	ldrb	r0, [r0, #9]
1006b100:	9d01      	ldr	r5, [sp, #4]
1006b102:	7028      	strb	r0, [r5, #0]
1006b104:	4623      	mov	r3, r4
1006b106:	335a      	adds	r3, #90	@ 0x5a
1006b108:	2106      	movs	r1, #6
1006b10a:	4638      	mov	r0, r7
1006b10c:	460a      	mov	r2, r1
1006b10e:	f7e4 ff61 	bl	1004ffd4 <ACL_pkt_read>
1006b112:	7828      	ldrb	r0, [r5, #0]
1006b114:	2801      	cmp	r0, #1
1006b116:	d103      	bne.n	1006b120 <smp_pp3_keys_distribution_receive+0xa0>
1006b118:	79a8      	ldrb	r0, [r5, #6]
1006b11a:	0980      	lsrs	r0, r0, #6
1006b11c:	2803      	cmp	r0, #3
1006b11e:	d345      	bcc.n	1006b1ac <smp_pp3_keys_distribution_receive+0x12c>
1006b120:	7c61      	ldrb	r1, [r4, #17]
1006b122:	2020      	movs	r0, #32
1006b124:	4308      	orrs	r0, r1
1006b126:	7460      	strb	r0, [r4, #17]
1006b128:	e02f      	b.n	1006b18a <smp_pp3_keys_distribution_receive+0x10a>
1006b12a:	7c60      	ldrb	r0, [r4, #17]
1006b12c:	0780      	lsls	r0, r0, #30
1006b12e:	d5d4      	bpl.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b130:	3438      	adds	r4, #56	@ 0x38
1006b132:	2105      	movs	r1, #5
1006b134:	2210      	movs	r2, #16
1006b136:	4638      	mov	r0, r7
1006b138:	4623      	mov	r3, r4
1006b13a:	f7e4 ff4b 	bl	1004ffd4 <ACL_pkt_read>
1006b13e:	e033      	b.n	1006b1a8 <smp_pp3_keys_distribution_receive+0x128>
1006b140:	7c60      	ldrb	r0, [r4, #17]
1006b142:	0740      	lsls	r0, r0, #29
1006b144:	d5c9      	bpl.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b146:	4623      	mov	r3, r4
1006b148:	3348      	adds	r3, #72	@ 0x48
1006b14a:	2105      	movs	r1, #5
1006b14c:	2210      	movs	r2, #16
1006b14e:	4638      	mov	r0, r7
1006b150:	f7e4 ff40 	bl	1004ffd4 <ACL_pkt_read>
1006b154:	7c60      	ldrb	r0, [r4, #17]
1006b156:	2140      	movs	r1, #64	@ 0x40
1006b158:	4301      	orrs	r1, r0
1006b15a:	7461      	strb	r1, [r4, #17]
1006b15c:	e017      	b.n	1006b18e <smp_pp3_keys_distribution_receive+0x10e>
1006b15e:	6878      	ldr	r0, [r7, #4]
1006b160:	7a40      	ldrb	r0, [r0, #9]
1006b162:	77a0      	strb	r0, [r4, #30]
1006b164:	6878      	ldr	r0, [r7, #4]
1006b166:	7a80      	ldrb	r0, [r0, #10]
1006b168:	77e0      	strb	r0, [r4, #31]
1006b16a:	4623      	mov	r3, r4
1006b16c:	3320      	adds	r3, #32
1006b16e:	2107      	movs	r1, #7
1006b170:	2208      	movs	r2, #8
1006b172:	4638      	mov	r0, r7
1006b174:	f7e4 ff2e 	bl	1004ffd4 <ACL_pkt_read>
1006b178:	7c60      	ldrb	r0, [r4, #17]
1006b17a:	2180      	movs	r1, #128	@ 0x80
1006b17c:	4301      	orrs	r1, r0
1006b17e:	7461      	strb	r1, [r4, #17]
1006b180:	0740      	lsls	r0, r0, #29
1006b182:	0f80      	lsrs	r0, r0, #30
1006b184:	d110      	bne.n	1006b1a8 <smp_pp3_keys_distribution_receive+0x128>
1006b186:	e002      	b.n	1006b18e <smp_pp3_keys_distribution_receive+0x10e>
1006b188:	7c60      	ldrb	r0, [r4, #17]
1006b18a:	0740      	lsls	r0, r0, #29
1006b18c:	d4a5      	bmi.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b18e:	9801      	ldr	r0, [sp, #4]
1006b190:	79c0      	ldrb	r0, [r0, #7]
1006b192:	07c0      	lsls	r0, r0, #31
1006b194:	d105      	bne.n	1006b1a2 <smp_pp3_keys_distribution_receive+0x122>
1006b196:	2600      	movs	r6, #0
1006b198:	4620      	mov	r0, r4
1006b19a:	4631      	mov	r1, r6
1006b19c:	f7ff fe64 	bl	1006ae68 <smp_pp3_keys_distribution_start>
1006b1a0:	e79b      	b.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b1a2:	4620      	mov	r0, r4
1006b1a4:	f7ff f98e 	bl	1006a4c4 <smp_pp3_pairing_completed_successful>
1006b1a8:	9e02      	ldr	r6, [sp, #8]
1006b1aa:	e796      	b.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>
1006b1ac:	2108      	movs	r1, #8
1006b1ae:	2200      	movs	r2, #0
1006b1b0:	2301      	movs	r3, #1
1006b1b2:	4620      	mov	r0, r4
1006b1b4:	f7ff fa3e 	bl	1006a634 <smp_pp3_pairing_failed_send>
1006b1b8:	4606      	mov	r6, r0
1006b1ba:	e78e      	b.n	1006b0da <smp_pp3_keys_distribution_receive+0x5a>

1006b1bc <__arm_cp.4_0>:
1006b1bc:	00007530 	.word	0x00007530

1006b1c0 <smp_cmn_rejectlist_init>:
1006b1c0:	b580      	push	{r7, lr}
1006b1c2:	2003      	movs	r0, #3
1006b1c4:	2108      	movs	r1, #8
1006b1c6:	f7f7 fe35 	bl	10062e34 <csmem_mem_0_assign>
1006b1ca:	4902      	ldr	r1, [pc, #8]	@ (1006b1d4 <__arm_cp.0_0>)
1006b1cc:	6809      	ldr	r1, [r1, #0]
1006b1ce:	22a8      	movs	r2, #168	@ 0xa8
1006b1d0:	5088      	str	r0, [r1, r2]
1006b1d2:	bd80      	pop	{r7, pc}

1006b1d4 <__arm_cp.0_0>:
1006b1d4:	200008e0 	.word	0x200008e0

1006b1d8 <smp_cmn_repeated_attacks_protection_start>:
1006b1d8:	b5fe      	push	{r1, r2, r3, r4, r5, r6, r7, lr}
1006b1da:	9101      	str	r1, [sp, #4]
1006b1dc:	2003      	movs	r0, #3
1006b1de:	9002      	str	r0, [sp, #8]
1006b1e0:	2700      	movs	r7, #0
1006b1e2:	4a30      	ldr	r2, [pc, #192]	@ (1006b2a4 <__arm_cp.1_0>)
1006b1e4:	463d      	mov	r5, r7
1006b1e6:	4616      	mov	r6, r2
1006b1e8:	6810      	ldr	r0, [r2, #0]
1006b1ea:	24a8      	movs	r4, #168	@ 0xa8
1006b1ec:	5900      	ldr	r0, [r0, r4]
1006b1ee:	19c0      	adds	r0, r0, r7
1006b1f0:	1c80      	adds	r0, r0, #2
1006b1f2:	2206      	movs	r2, #6
1006b1f4:	9901      	ldr	r1, [sp, #4]
1006b1f6:	f7d9 fbf5 	bl	100449e4 <BLEPLAT_MemCmp>
1006b1fa:	2800      	cmp	r0, #0
1006b1fc:	d031      	beq.n	1006b262 <smp_cmn_repeated_attacks_protection_start+0x8a>
1006b1fe:	9802      	ldr	r0, [sp, #8]
1006b200:	2803      	cmp	r0, #3
1006b202:	4632      	mov	r2, r6
1006b204:	d109      	bne.n	1006b21a <smp_cmn_repeated_attacks_protection_start+0x42>
1006b206:	6810      	ldr	r0, [r2, #0]
1006b208:	5900      	ldr	r0, [r0, r4]
1006b20a:	5dc0      	ldrb	r0, [r0, r7]
1006b20c:	0680      	lsls	r0, r0, #26
1006b20e:	0f80      	lsrs	r0, r0, #30
1006b210:	d001      	beq.n	1006b216 <smp_cmn_repeated_attacks_protection_start+0x3e>
1006b212:	2003      	movs	r0, #3
1006b214:	e000      	b.n	1006b218 <smp_cmn_repeated_attacks_protection_start+0x40>
1006b216:	b2e8      	uxtb	r0, r5
1006b218:	9002      	str	r0, [sp, #8]
1006b21a:	3708      	adds	r7, #8
1006b21c:	1c6d      	adds	r5, r5, #1
1006b21e:	2d03      	cmp	r5, #3
1006b220:	d1e1      	bne.n	1006b1e6 <smp_cmn_repeated_attacks_protection_start+0xe>
1006b222:	6810      	ldr	r0, [r2, #0]
1006b224:	2541      	movs	r5, #65	@ 0x41
1006b226:	5d41      	ldrb	r1, [r0, r5]
1006b228:	30a8      	adds	r0, #168	@ 0xa8
1006b22a:	2902      	cmp	r1, #2
1006b22c:	d836      	bhi.n	1006b29c <smp_cmn_repeated_attacks_protection_start+0xc4>
1006b22e:	9902      	ldr	r1, [sp, #8]
1006b230:	00cf      	lsls	r7, r1, #3
1006b232:	6800      	ldr	r0, [r0, #0]
1006b234:	19c0      	adds	r0, r0, r7
1006b236:	1c80      	adds	r0, r0, #2
1006b238:	4616      	mov	r6, r2
1006b23a:	2206      	movs	r2, #6
1006b23c:	9901      	ldr	r1, [sp, #4]
1006b23e:	f7d9 fbb1 	bl	100449a4 <BLEPLAT_MemCpy>
1006b242:	6830      	ldr	r0, [r6, #0]
1006b244:	5900      	ldr	r0, [r0, r4]
1006b246:	2110      	movs	r1, #16
1006b248:	55c1      	strb	r1, [r0, r7]
1006b24a:	9802      	ldr	r0, [sp, #8]
1006b24c:	b2c2      	uxtb	r2, r0
1006b24e:	2000      	movs	r0, #0
1006b250:	2101      	movs	r1, #1
1006b252:	4b15      	ldr	r3, [pc, #84]	@ (1006b2a8 <__arm_cp.1_1>)
1006b254:	f7f9 fa9a 	bl	1006478c <smp_timer_reset>
1006b258:	6830      	ldr	r0, [r6, #0]
1006b25a:	5d41      	ldrb	r1, [r0, r5]
1006b25c:	1c49      	adds	r1, r1, #1
1006b25e:	5541      	strb	r1, [r0, r5]
1006b260:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006b262:	6830      	ldr	r0, [r6, #0]
1006b264:	5900      	ldr	r0, [r0, r4]
1006b266:	5dc3      	ldrb	r3, [r0, r7]
1006b268:	21cf      	movs	r1, #207	@ 0xcf
1006b26a:	4019      	ands	r1, r3
1006b26c:	3110      	adds	r1, #16
1006b26e:	2203      	movs	r2, #3
1006b270:	401a      	ands	r2, r3
1006b272:	1c53      	adds	r3, r2, #1
1006b274:	2a03      	cmp	r2, #3
1006b276:	d002      	beq.n	1006b27e <smp_cmn_repeated_attacks_protection_start+0xa6>
1006b278:	24dc      	movs	r4, #220	@ 0xdc
1006b27a:	4021      	ands	r1, r4
1006b27c:	4319      	orrs	r1, r3
1006b27e:	55c1      	strb	r1, [r0, r7]
1006b280:	2a03      	cmp	r2, #3
1006b282:	d100      	bne.n	1006b286 <smp_cmn_repeated_attacks_protection_start+0xae>
1006b284:	4613      	mov	r3, r2
1006b286:	a009      	add	r0, pc, #36	@ (adr r0, 1006b2ac <__arm_cp.1_1+0x4>)
1006b288:	5cc0      	ldrb	r0, [r0, r3]
1006b28a:	217d      	movs	r1, #125	@ 0x7d
1006b28c:	00cb      	lsls	r3, r1, #3
1006b28e:	4343      	muls	r3, r0
1006b290:	b2ea      	uxtb	r2, r5
1006b292:	2000      	movs	r0, #0
1006b294:	2101      	movs	r1, #1
1006b296:	f7f9 fa79 	bl	1006478c <smp_timer_reset>
1006b29a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006b29c:	2101      	movs	r1, #1
1006b29e:	7201      	strb	r1, [r0, #8]
1006b2a0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006b2a2:	46c0      	nop			@ (mov r8, r8)

1006b2a4 <__arm_cp.1_0>:
1006b2a4:	200008e0 	.word	0x200008e0

1006b2a8 <__arm_cp.1_1>:
1006b2a8:	00000bb8 	.word	0x00000bb8
1006b2ac:	140a0503 	.word	0x140a0503

1006b2b0 <smp_cmn_repeated_attacks_timer_cb>:
1006b2b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006b2b2:	4e29      	ldr	r6, [pc, #164]	@ (1006b358 <__arm_cp.2_0>)
1006b2b4:	6831      	ldr	r1, [r6, #0]
1006b2b6:	25a8      	movs	r5, #168	@ 0xa8
1006b2b8:	5949      	ldr	r1, [r1, r5]
1006b2ba:	00c4      	lsls	r4, r0, #3
1006b2bc:	5d0a      	ldrb	r2, [r1, r4]
1006b2be:	06d3      	lsls	r3, r2, #27
1006b2c0:	d40e      	bmi.n	1006b2e0 <smp_cmn_repeated_attacks_timer_cb+0x30>
1006b2c2:	0693      	lsls	r3, r2, #26
1006b2c4:	d546      	bpl.n	1006b354 <smp_cmn_repeated_attacks_timer_cb+0xa4>
1006b2c6:	1909      	adds	r1, r1, r4
1006b2c8:	0793      	lsls	r3, r2, #30
1006b2ca:	d035      	beq.n	1006b338 <smp_cmn_repeated_attacks_timer_cb+0x88>
1006b2cc:	23fc      	movs	r3, #252	@ 0xfc
1006b2ce:	4013      	ands	r3, r2
1006b2d0:	1e52      	subs	r2, r2, #1
1006b2d2:	2403      	movs	r4, #3
1006b2d4:	4014      	ands	r4, r2
1006b2d6:	18e2      	adds	r2, r4, r3
1006b2d8:	700a      	strb	r2, [r1, #0]
1006b2da:	f000 f841 	bl	1006b360 <smp_cmn_rejectlist_start_probation_timer2>
1006b2de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006b2e0:	f000 f83e 	bl	1006b360 <smp_cmn_rejectlist_start_probation_timer2>
1006b2e4:	6830      	ldr	r0, [r6, #0]
1006b2e6:	5940      	ldr	r0, [r0, r5]
1006b2e8:	1900      	adds	r0, r0, r4
1006b2ea:	1c84      	adds	r4, r0, #2
1006b2ec:	2065      	movs	r0, #101	@ 0x65
1006b2ee:	43c6      	mvns	r6, r0
1006b2f0:	4637      	mov	r7, r6
1006b2f2:	3765      	adds	r7, #101	@ 0x65
1006b2f4:	4819      	ldr	r0, [pc, #100]	@ (1006b35c <__arm_cp.2_1>)
1006b2f6:	6800      	ldr	r0, [r0, #0]
1006b2f8:	2134      	movs	r1, #52	@ 0x34
1006b2fa:	5c40      	ldrb	r0, [r0, r1]
1006b2fc:	1c7f      	adds	r7, r7, #1
1006b2fe:	4287      	cmp	r7, r0
1006b300:	d228      	bcs.n	1006b354 <smp_cmn_repeated_attacks_timer_cb+0xa4>
1006b302:	4815      	ldr	r0, [pc, #84]	@ (1006b358 <__arm_cp.2_0>)
1006b304:	6800      	ldr	r0, [r0, #0]
1006b306:	25a4      	movs	r5, #164	@ 0xa4
1006b308:	5940      	ldr	r0, [r0, r5]
1006b30a:	1980      	adds	r0, r0, r6
1006b30c:	3670      	adds	r6, #112	@ 0x70
1006b30e:	3068      	adds	r0, #104	@ 0x68
1006b310:	2206      	movs	r2, #6
1006b312:	4621      	mov	r1, r4
1006b314:	f7d9 fb66 	bl	100449e4 <BLEPLAT_MemCmp>
1006b318:	2800      	cmp	r0, #0
1006b31a:	d1eb      	bne.n	1006b2f4 <smp_cmn_repeated_attacks_timer_cb+0x44>
1006b31c:	480e      	ldr	r0, [pc, #56]	@ (1006b358 <__arm_cp.2_0>)
1006b31e:	6800      	ldr	r0, [r0, #0]
1006b320:	5940      	ldr	r0, [r0, r5]
1006b322:	5d81      	ldrb	r1, [r0, r6]
1006b324:	29fb      	cmp	r1, #251	@ 0xfb
1006b326:	d115      	bne.n	1006b354 <smp_cmn_repeated_attacks_timer_cb+0xa4>
1006b328:	2110      	movs	r1, #16
1006b32a:	5581      	strb	r1, [r0, r6]
1006b32c:	200e      	movs	r0, #14
1006b32e:	f7f9 ff7f 	bl	10065230 <tsk_notify_idx>
1006b332:	f7d7 fad0 	bl	100428d6 <BLE_STACK_ProcessRequest>
1006b336:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006b338:	4635      	mov	r5, r6
1006b33a:	2400      	movs	r4, #0
1006b33c:	2208      	movs	r2, #8
1006b33e:	4608      	mov	r0, r1
1006b340:	4621      	mov	r1, r4
1006b342:	f7d9 fb3f 	bl	100449c4 <BLEPLAT_MemSet>
1006b346:	6830      	ldr	r0, [r6, #0]
1006b348:	21b0      	movs	r1, #176	@ 0xb0
1006b34a:	5444      	strb	r4, [r0, r1]
1006b34c:	2141      	movs	r1, #65	@ 0x41
1006b34e:	5c42      	ldrb	r2, [r0, r1]
1006b350:	1e52      	subs	r2, r2, #1
1006b352:	5442      	strb	r2, [r0, r1]
1006b354:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006b356:	46c0      	nop			@ (mov r8, r8)

1006b358 <__arm_cp.2_0>:
1006b358:	200008e0 	.word	0x200008e0

1006b35c <__arm_cp.2_1>:
1006b35c:	2000083c 	.word	0x2000083c

1006b360 <smp_cmn_rejectlist_start_probation_timer2>:
1006b360:	b510      	push	{r4, lr}
1006b362:	4604      	mov	r4, r0
1006b364:	2000      	movs	r0, #0
1006b366:	2101      	movs	r1, #1
1006b368:	4b07      	ldr	r3, [pc, #28]	@ (1006b388 <__arm_cp.3_0>)
1006b36a:	4622      	mov	r2, r4
1006b36c:	f7f9 fa0e 	bl	1006478c <smp_timer_reset>
1006b370:	4806      	ldr	r0, [pc, #24]	@ (1006b38c <__arm_cp.3_1>)
1006b372:	6800      	ldr	r0, [r0, #0]
1006b374:	21a8      	movs	r1, #168	@ 0xa8
1006b376:	5840      	ldr	r0, [r0, r1]
1006b378:	00e1      	lsls	r1, r4, #3
1006b37a:	5c42      	ldrb	r2, [r0, r1]
1006b37c:	23cf      	movs	r3, #207	@ 0xcf
1006b37e:	4013      	ands	r3, r2
1006b380:	3320      	adds	r3, #32
1006b382:	5443      	strb	r3, [r0, r1]
1006b384:	bd10      	pop	{r4, pc}
1006b386:	46c0      	nop			@ (mov r8, r8)

1006b388 <__arm_cp.3_0>:
1006b388:	00004e20 	.word	0x00004e20

1006b38c <__arm_cp.3_1>:
1006b38c:	200008e0 	.word	0x200008e0

1006b390 <smp_cmn_is_peer_rejectlisted>:
1006b390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006b392:	460c      	mov	r4, r1
1006b394:	2007      	movs	r0, #7
1006b396:	43c0      	mvns	r0, r0
1006b398:	4e0c      	ldr	r6, [pc, #48]	@ (1006b3cc <__arm_cp.4_0>)
1006b39a:	4605      	mov	r5, r0
1006b39c:	3508      	adds	r5, #8
1006b39e:	2d18      	cmp	r5, #24
1006b3a0:	d010      	beq.n	1006b3c4 <smp_cmn_is_peer_rejectlisted+0x34>
1006b3a2:	6831      	ldr	r1, [r6, #0]
1006b3a4:	27a8      	movs	r7, #168	@ 0xa8
1006b3a6:	59c9      	ldr	r1, [r1, r7]
1006b3a8:	1808      	adds	r0, r1, r0
1006b3aa:	300a      	adds	r0, #10
1006b3ac:	2206      	movs	r2, #6
1006b3ae:	4621      	mov	r1, r4
1006b3b0:	f7d9 fb18 	bl	100449e4 <BLEPLAT_MemCmp>
1006b3b4:	2800      	cmp	r0, #0
1006b3b6:	4628      	mov	r0, r5
1006b3b8:	d1f0      	bne.n	1006b39c <smp_cmn_is_peer_rejectlisted+0xc>
1006b3ba:	6830      	ldr	r0, [r6, #0]
1006b3bc:	59c0      	ldr	r0, [r0, r7]
1006b3be:	5d40      	ldrb	r0, [r0, r5]
1006b3c0:	06c0      	lsls	r0, r0, #27
1006b3c2:	d401      	bmi.n	1006b3c8 <smp_cmn_is_peer_rejectlisted+0x38>
1006b3c4:	2000      	movs	r0, #0
1006b3c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006b3c8:	2001      	movs	r0, #1
1006b3ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

1006b3cc <__arm_cp.4_0>:
1006b3cc:	200008e0 	.word	0x200008e0

1006b3d0 <smp_pka_process_ecc_computation_tsk_ucfg_weak>:
1006b3d0:	4770      	bx	lr
	...

1006b3d4 <malloc>:
1006b3d4:	b510      	push	{r4, lr}
1006b3d6:	4b03      	ldr	r3, [pc, #12]	@ (1006b3e4 <malloc+0x10>)
1006b3d8:	0001      	movs	r1, r0
1006b3da:	6818      	ldr	r0, [r3, #0]
1006b3dc:	f000 f830 	bl	1006b440 <_malloc_r>
1006b3e0:	bd10      	pop	{r4, pc}
1006b3e2:	46c0      	nop			@ (mov r8, r8)
1006b3e4:	20000bfc 	.word	0x20000bfc

1006b3e8 <free>:
1006b3e8:	b510      	push	{r4, lr}
1006b3ea:	4b03      	ldr	r3, [pc, #12]	@ (1006b3f8 <free+0x10>)
1006b3ec:	0001      	movs	r1, r0
1006b3ee:	6818      	ldr	r0, [r3, #0]
1006b3f0:	f000 fc76 	bl	1006bce0 <_free_r>
1006b3f4:	bd10      	pop	{r4, pc}
1006b3f6:	46c0      	nop			@ (mov r8, r8)
1006b3f8:	20000bfc 	.word	0x20000bfc

1006b3fc <sbrk_aligned>:
1006b3fc:	b570      	push	{r4, r5, r6, lr}
1006b3fe:	4e0f      	ldr	r6, [pc, #60]	@ (1006b43c <sbrk_aligned+0x40>)
1006b400:	000d      	movs	r5, r1
1006b402:	6831      	ldr	r1, [r6, #0]
1006b404:	0004      	movs	r4, r0
1006b406:	2900      	cmp	r1, #0
1006b408:	d102      	bne.n	1006b410 <sbrk_aligned+0x14>
1006b40a:	f000 fc27 	bl	1006bc5c <_sbrk_r>
1006b40e:	6030      	str	r0, [r6, #0]
1006b410:	0029      	movs	r1, r5
1006b412:	0020      	movs	r0, r4
1006b414:	f000 fc22 	bl	1006bc5c <_sbrk_r>
1006b418:	1c43      	adds	r3, r0, #1
1006b41a:	d103      	bne.n	1006b424 <sbrk_aligned+0x28>
1006b41c:	2501      	movs	r5, #1
1006b41e:	426d      	negs	r5, r5
1006b420:	0028      	movs	r0, r5
1006b422:	bd70      	pop	{r4, r5, r6, pc}
1006b424:	2303      	movs	r3, #3
1006b426:	1cc5      	adds	r5, r0, #3
1006b428:	439d      	bics	r5, r3
1006b42a:	42a8      	cmp	r0, r5
1006b42c:	d0f8      	beq.n	1006b420 <sbrk_aligned+0x24>
1006b42e:	1a29      	subs	r1, r5, r0
1006b430:	0020      	movs	r0, r4
1006b432:	f000 fc13 	bl	1006bc5c <_sbrk_r>
1006b436:	3001      	adds	r0, #1
1006b438:	d1f2      	bne.n	1006b420 <sbrk_aligned+0x24>
1006b43a:	e7ef      	b.n	1006b41c <sbrk_aligned+0x20>
1006b43c:	200008ec 	.word	0x200008ec

1006b440 <_malloc_r>:
1006b440:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006b442:	2203      	movs	r2, #3
1006b444:	1ccb      	adds	r3, r1, #3
1006b446:	4393      	bics	r3, r2
1006b448:	3308      	adds	r3, #8
1006b44a:	0005      	movs	r5, r0
1006b44c:	001f      	movs	r7, r3
1006b44e:	2b0c      	cmp	r3, #12
1006b450:	d234      	bcs.n	1006b4bc <_malloc_r+0x7c>
1006b452:	270c      	movs	r7, #12
1006b454:	42b9      	cmp	r1, r7
1006b456:	d833      	bhi.n	1006b4c0 <_malloc_r+0x80>
1006b458:	0028      	movs	r0, r5
1006b45a:	f000 f871 	bl	1006b540 <__malloc_lock>
1006b45e:	4e37      	ldr	r6, [pc, #220]	@ (1006b53c <_malloc_r+0xfc>)
1006b460:	6833      	ldr	r3, [r6, #0]
1006b462:	001c      	movs	r4, r3
1006b464:	2c00      	cmp	r4, #0
1006b466:	d12f      	bne.n	1006b4c8 <_malloc_r+0x88>
1006b468:	0039      	movs	r1, r7
1006b46a:	0028      	movs	r0, r5
1006b46c:	f7ff ffc6 	bl	1006b3fc <sbrk_aligned>
1006b470:	0004      	movs	r4, r0
1006b472:	1c43      	adds	r3, r0, #1
1006b474:	d15f      	bne.n	1006b536 <_malloc_r+0xf6>
1006b476:	6834      	ldr	r4, [r6, #0]
1006b478:	9400      	str	r4, [sp, #0]
1006b47a:	9b00      	ldr	r3, [sp, #0]
1006b47c:	2b00      	cmp	r3, #0
1006b47e:	d14a      	bne.n	1006b516 <_malloc_r+0xd6>
1006b480:	2c00      	cmp	r4, #0
1006b482:	d052      	beq.n	1006b52a <_malloc_r+0xea>
1006b484:	6823      	ldr	r3, [r4, #0]
1006b486:	0028      	movs	r0, r5
1006b488:	18e3      	adds	r3, r4, r3
1006b48a:	9900      	ldr	r1, [sp, #0]
1006b48c:	9301      	str	r3, [sp, #4]
1006b48e:	f000 fbe5 	bl	1006bc5c <_sbrk_r>
1006b492:	9b01      	ldr	r3, [sp, #4]
1006b494:	4283      	cmp	r3, r0
1006b496:	d148      	bne.n	1006b52a <_malloc_r+0xea>
1006b498:	6823      	ldr	r3, [r4, #0]
1006b49a:	0028      	movs	r0, r5
1006b49c:	1aff      	subs	r7, r7, r3
1006b49e:	0039      	movs	r1, r7
1006b4a0:	f7ff ffac 	bl	1006b3fc <sbrk_aligned>
1006b4a4:	3001      	adds	r0, #1
1006b4a6:	d040      	beq.n	1006b52a <_malloc_r+0xea>
1006b4a8:	6823      	ldr	r3, [r4, #0]
1006b4aa:	19db      	adds	r3, r3, r7
1006b4ac:	6023      	str	r3, [r4, #0]
1006b4ae:	6833      	ldr	r3, [r6, #0]
1006b4b0:	685a      	ldr	r2, [r3, #4]
1006b4b2:	2a00      	cmp	r2, #0
1006b4b4:	d133      	bne.n	1006b51e <_malloc_r+0xde>
1006b4b6:	9b00      	ldr	r3, [sp, #0]
1006b4b8:	6033      	str	r3, [r6, #0]
1006b4ba:	e019      	b.n	1006b4f0 <_malloc_r+0xb0>
1006b4bc:	2b00      	cmp	r3, #0
1006b4be:	dac9      	bge.n	1006b454 <_malloc_r+0x14>
1006b4c0:	230c      	movs	r3, #12
1006b4c2:	602b      	str	r3, [r5, #0]
1006b4c4:	2000      	movs	r0, #0
1006b4c6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006b4c8:	6821      	ldr	r1, [r4, #0]
1006b4ca:	1bc9      	subs	r1, r1, r7
1006b4cc:	d420      	bmi.n	1006b510 <_malloc_r+0xd0>
1006b4ce:	290b      	cmp	r1, #11
1006b4d0:	d90a      	bls.n	1006b4e8 <_malloc_r+0xa8>
1006b4d2:	19e2      	adds	r2, r4, r7
1006b4d4:	6027      	str	r7, [r4, #0]
1006b4d6:	42a3      	cmp	r3, r4
1006b4d8:	d104      	bne.n	1006b4e4 <_malloc_r+0xa4>
1006b4da:	6032      	str	r2, [r6, #0]
1006b4dc:	6863      	ldr	r3, [r4, #4]
1006b4de:	6011      	str	r1, [r2, #0]
1006b4e0:	6053      	str	r3, [r2, #4]
1006b4e2:	e005      	b.n	1006b4f0 <_malloc_r+0xb0>
1006b4e4:	605a      	str	r2, [r3, #4]
1006b4e6:	e7f9      	b.n	1006b4dc <_malloc_r+0x9c>
1006b4e8:	6862      	ldr	r2, [r4, #4]
1006b4ea:	42a3      	cmp	r3, r4
1006b4ec:	d10e      	bne.n	1006b50c <_malloc_r+0xcc>
1006b4ee:	6032      	str	r2, [r6, #0]
1006b4f0:	0028      	movs	r0, r5
1006b4f2:	f000 f82d 	bl	1006b550 <__malloc_unlock>
1006b4f6:	0020      	movs	r0, r4
1006b4f8:	2207      	movs	r2, #7
1006b4fa:	300b      	adds	r0, #11
1006b4fc:	1d23      	adds	r3, r4, #4
1006b4fe:	4390      	bics	r0, r2
1006b500:	1ac2      	subs	r2, r0, r3
1006b502:	4298      	cmp	r0, r3
1006b504:	d0df      	beq.n	1006b4c6 <_malloc_r+0x86>
1006b506:	1a1b      	subs	r3, r3, r0
1006b508:	50a3      	str	r3, [r4, r2]
1006b50a:	e7dc      	b.n	1006b4c6 <_malloc_r+0x86>
1006b50c:	605a      	str	r2, [r3, #4]
1006b50e:	e7ef      	b.n	1006b4f0 <_malloc_r+0xb0>
1006b510:	0023      	movs	r3, r4
1006b512:	6864      	ldr	r4, [r4, #4]
1006b514:	e7a6      	b.n	1006b464 <_malloc_r+0x24>
1006b516:	9c00      	ldr	r4, [sp, #0]
1006b518:	6863      	ldr	r3, [r4, #4]
1006b51a:	9300      	str	r3, [sp, #0]
1006b51c:	e7ad      	b.n	1006b47a <_malloc_r+0x3a>
1006b51e:	001a      	movs	r2, r3
1006b520:	685b      	ldr	r3, [r3, #4]
1006b522:	42a3      	cmp	r3, r4
1006b524:	d1fb      	bne.n	1006b51e <_malloc_r+0xde>
1006b526:	2300      	movs	r3, #0
1006b528:	e7da      	b.n	1006b4e0 <_malloc_r+0xa0>
1006b52a:	230c      	movs	r3, #12
1006b52c:	0028      	movs	r0, r5
1006b52e:	602b      	str	r3, [r5, #0]
1006b530:	f000 f80e 	bl	1006b550 <__malloc_unlock>
1006b534:	e7c6      	b.n	1006b4c4 <_malloc_r+0x84>
1006b536:	6007      	str	r7, [r0, #0]
1006b538:	e7da      	b.n	1006b4f0 <_malloc_r+0xb0>
1006b53a:	46c0      	nop			@ (mov r8, r8)
1006b53c:	200008f0 	.word	0x200008f0

1006b540 <__malloc_lock>:
1006b540:	b510      	push	{r4, lr}
1006b542:	4802      	ldr	r0, [pc, #8]	@ (1006b54c <__malloc_lock+0xc>)
1006b544:	f000 fbb7 	bl	1006bcb6 <__retarget_lock_acquire_recursive>
1006b548:	bd10      	pop	{r4, pc}
1006b54a:	46c0      	nop			@ (mov r8, r8)
1006b54c:	20000a34 	.word	0x20000a34

1006b550 <__malloc_unlock>:
1006b550:	b510      	push	{r4, lr}
1006b552:	4802      	ldr	r0, [pc, #8]	@ (1006b55c <__malloc_unlock+0xc>)
1006b554:	f000 fbb0 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006b558:	bd10      	pop	{r4, pc}
1006b55a:	46c0      	nop			@ (mov r8, r8)
1006b55c:	20000a34 	.word	0x20000a34

1006b560 <std>:
1006b560:	2300      	movs	r3, #0
1006b562:	b510      	push	{r4, lr}
1006b564:	0004      	movs	r4, r0
1006b566:	6003      	str	r3, [r0, #0]
1006b568:	6043      	str	r3, [r0, #4]
1006b56a:	6083      	str	r3, [r0, #8]
1006b56c:	8181      	strh	r1, [r0, #12]
1006b56e:	6643      	str	r3, [r0, #100]	@ 0x64
1006b570:	81c2      	strh	r2, [r0, #14]
1006b572:	6103      	str	r3, [r0, #16]
1006b574:	6143      	str	r3, [r0, #20]
1006b576:	6183      	str	r3, [r0, #24]
1006b578:	0019      	movs	r1, r3
1006b57a:	2208      	movs	r2, #8
1006b57c:	305c      	adds	r0, #92	@ 0x5c
1006b57e:	f000 fb07 	bl	1006bb90 <memset>
1006b582:	4b0b      	ldr	r3, [pc, #44]	@ (1006b5b0 <std+0x50>)
1006b584:	6224      	str	r4, [r4, #32]
1006b586:	6263      	str	r3, [r4, #36]	@ 0x24
1006b588:	4b0a      	ldr	r3, [pc, #40]	@ (1006b5b4 <std+0x54>)
1006b58a:	62a3      	str	r3, [r4, #40]	@ 0x28
1006b58c:	4b0a      	ldr	r3, [pc, #40]	@ (1006b5b8 <std+0x58>)
1006b58e:	62e3      	str	r3, [r4, #44]	@ 0x2c
1006b590:	4b0a      	ldr	r3, [pc, #40]	@ (1006b5bc <std+0x5c>)
1006b592:	6323      	str	r3, [r4, #48]	@ 0x30
1006b594:	4b0a      	ldr	r3, [pc, #40]	@ (1006b5c0 <std+0x60>)
1006b596:	429c      	cmp	r4, r3
1006b598:	d005      	beq.n	1006b5a6 <std+0x46>
1006b59a:	4b0a      	ldr	r3, [pc, #40]	@ (1006b5c4 <std+0x64>)
1006b59c:	429c      	cmp	r4, r3
1006b59e:	d002      	beq.n	1006b5a6 <std+0x46>
1006b5a0:	4b09      	ldr	r3, [pc, #36]	@ (1006b5c8 <std+0x68>)
1006b5a2:	429c      	cmp	r4, r3
1006b5a4:	d103      	bne.n	1006b5ae <std+0x4e>
1006b5a6:	0020      	movs	r0, r4
1006b5a8:	3058      	adds	r0, #88	@ 0x58
1006b5aa:	f000 fb83 	bl	1006bcb4 <__retarget_lock_init_recursive>
1006b5ae:	bd10      	pop	{r4, pc}
1006b5b0:	1006b999 	.word	0x1006b999
1006b5b4:	1006b9c5 	.word	0x1006b9c5
1006b5b8:	1006b9fd 	.word	0x1006b9fd
1006b5bc:	1006ba29 	.word	0x1006ba29
1006b5c0:	200008f4 	.word	0x200008f4
1006b5c4:	2000095c 	.word	0x2000095c
1006b5c8:	200009c4 	.word	0x200009c4

1006b5cc <stdio_exit_handler>:
1006b5cc:	b510      	push	{r4, lr}
1006b5ce:	4a03      	ldr	r2, [pc, #12]	@ (1006b5dc <stdio_exit_handler+0x10>)
1006b5d0:	4903      	ldr	r1, [pc, #12]	@ (1006b5e0 <stdio_exit_handler+0x14>)
1006b5d2:	4804      	ldr	r0, [pc, #16]	@ (1006b5e4 <stdio_exit_handler+0x18>)
1006b5d4:	f000 f86c 	bl	1006b6b0 <_fwalk_sglue>
1006b5d8:	bd10      	pop	{r4, pc}
1006b5da:	46c0      	nop			@ (mov r8, r8)
1006b5dc:	20000bf0 	.word	0x20000bf0
1006b5e0:	1006ca41 	.word	0x1006ca41
1006b5e4:	20000c00 	.word	0x20000c00

1006b5e8 <cleanup_stdio>:
1006b5e8:	6841      	ldr	r1, [r0, #4]
1006b5ea:	4b0b      	ldr	r3, [pc, #44]	@ (1006b618 <cleanup_stdio+0x30>)
1006b5ec:	b510      	push	{r4, lr}
1006b5ee:	0004      	movs	r4, r0
1006b5f0:	4299      	cmp	r1, r3
1006b5f2:	d001      	beq.n	1006b5f8 <cleanup_stdio+0x10>
1006b5f4:	f001 fa24 	bl	1006ca40 <_fflush_r>
1006b5f8:	68a1      	ldr	r1, [r4, #8]
1006b5fa:	4b08      	ldr	r3, [pc, #32]	@ (1006b61c <cleanup_stdio+0x34>)
1006b5fc:	4299      	cmp	r1, r3
1006b5fe:	d002      	beq.n	1006b606 <cleanup_stdio+0x1e>
1006b600:	0020      	movs	r0, r4
1006b602:	f001 fa1d 	bl	1006ca40 <_fflush_r>
1006b606:	68e1      	ldr	r1, [r4, #12]
1006b608:	4b05      	ldr	r3, [pc, #20]	@ (1006b620 <cleanup_stdio+0x38>)
1006b60a:	4299      	cmp	r1, r3
1006b60c:	d002      	beq.n	1006b614 <cleanup_stdio+0x2c>
1006b60e:	0020      	movs	r0, r4
1006b610:	f001 fa16 	bl	1006ca40 <_fflush_r>
1006b614:	bd10      	pop	{r4, pc}
1006b616:	46c0      	nop			@ (mov r8, r8)
1006b618:	200008f4 	.word	0x200008f4
1006b61c:	2000095c 	.word	0x2000095c
1006b620:	200009c4 	.word	0x200009c4

1006b624 <global_stdio_init.part.0>:
1006b624:	b510      	push	{r4, lr}
1006b626:	4b09      	ldr	r3, [pc, #36]	@ (1006b64c <global_stdio_init.part.0+0x28>)
1006b628:	4a09      	ldr	r2, [pc, #36]	@ (1006b650 <global_stdio_init.part.0+0x2c>)
1006b62a:	2104      	movs	r1, #4
1006b62c:	601a      	str	r2, [r3, #0]
1006b62e:	4809      	ldr	r0, [pc, #36]	@ (1006b654 <global_stdio_init.part.0+0x30>)
1006b630:	2200      	movs	r2, #0
1006b632:	f7ff ff95 	bl	1006b560 <std>
1006b636:	2201      	movs	r2, #1
1006b638:	2109      	movs	r1, #9
1006b63a:	4807      	ldr	r0, [pc, #28]	@ (1006b658 <global_stdio_init.part.0+0x34>)
1006b63c:	f7ff ff90 	bl	1006b560 <std>
1006b640:	2202      	movs	r2, #2
1006b642:	2112      	movs	r1, #18
1006b644:	4805      	ldr	r0, [pc, #20]	@ (1006b65c <global_stdio_init.part.0+0x38>)
1006b646:	f7ff ff8b 	bl	1006b560 <std>
1006b64a:	bd10      	pop	{r4, pc}
1006b64c:	20000a2c 	.word	0x20000a2c
1006b650:	1006b5cd 	.word	0x1006b5cd
1006b654:	200008f4 	.word	0x200008f4
1006b658:	2000095c 	.word	0x2000095c
1006b65c:	200009c4 	.word	0x200009c4

1006b660 <__sfp_lock_acquire>:
1006b660:	b510      	push	{r4, lr}
1006b662:	4802      	ldr	r0, [pc, #8]	@ (1006b66c <__sfp_lock_acquire+0xc>)
1006b664:	f000 fb27 	bl	1006bcb6 <__retarget_lock_acquire_recursive>
1006b668:	bd10      	pop	{r4, pc}
1006b66a:	46c0      	nop			@ (mov r8, r8)
1006b66c:	20000a35 	.word	0x20000a35

1006b670 <__sfp_lock_release>:
1006b670:	b510      	push	{r4, lr}
1006b672:	4802      	ldr	r0, [pc, #8]	@ (1006b67c <__sfp_lock_release+0xc>)
1006b674:	f000 fb20 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006b678:	bd10      	pop	{r4, pc}
1006b67a:	46c0      	nop			@ (mov r8, r8)
1006b67c:	20000a35 	.word	0x20000a35

1006b680 <__sinit>:
1006b680:	b510      	push	{r4, lr}
1006b682:	0004      	movs	r4, r0
1006b684:	f7ff ffec 	bl	1006b660 <__sfp_lock_acquire>
1006b688:	6a23      	ldr	r3, [r4, #32]
1006b68a:	2b00      	cmp	r3, #0
1006b68c:	d002      	beq.n	1006b694 <__sinit+0x14>
1006b68e:	f7ff ffef 	bl	1006b670 <__sfp_lock_release>
1006b692:	bd10      	pop	{r4, pc}
1006b694:	4b04      	ldr	r3, [pc, #16]	@ (1006b6a8 <__sinit+0x28>)
1006b696:	6223      	str	r3, [r4, #32]
1006b698:	4b04      	ldr	r3, [pc, #16]	@ (1006b6ac <__sinit+0x2c>)
1006b69a:	681b      	ldr	r3, [r3, #0]
1006b69c:	2b00      	cmp	r3, #0
1006b69e:	d1f6      	bne.n	1006b68e <__sinit+0xe>
1006b6a0:	f7ff ffc0 	bl	1006b624 <global_stdio_init.part.0>
1006b6a4:	e7f3      	b.n	1006b68e <__sinit+0xe>
1006b6a6:	46c0      	nop			@ (mov r8, r8)
1006b6a8:	1006b5e9 	.word	0x1006b5e9
1006b6ac:	20000a2c 	.word	0x20000a2c

1006b6b0 <_fwalk_sglue>:
1006b6b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006b6b2:	0014      	movs	r4, r2
1006b6b4:	2600      	movs	r6, #0
1006b6b6:	9000      	str	r0, [sp, #0]
1006b6b8:	9101      	str	r1, [sp, #4]
1006b6ba:	68a5      	ldr	r5, [r4, #8]
1006b6bc:	6867      	ldr	r7, [r4, #4]
1006b6be:	3f01      	subs	r7, #1
1006b6c0:	d504      	bpl.n	1006b6cc <_fwalk_sglue+0x1c>
1006b6c2:	6824      	ldr	r4, [r4, #0]
1006b6c4:	2c00      	cmp	r4, #0
1006b6c6:	d1f8      	bne.n	1006b6ba <_fwalk_sglue+0xa>
1006b6c8:	0030      	movs	r0, r6
1006b6ca:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006b6cc:	89ab      	ldrh	r3, [r5, #12]
1006b6ce:	2b01      	cmp	r3, #1
1006b6d0:	d908      	bls.n	1006b6e4 <_fwalk_sglue+0x34>
1006b6d2:	220e      	movs	r2, #14
1006b6d4:	5eab      	ldrsh	r3, [r5, r2]
1006b6d6:	3301      	adds	r3, #1
1006b6d8:	d004      	beq.n	1006b6e4 <_fwalk_sglue+0x34>
1006b6da:	0029      	movs	r1, r5
1006b6dc:	9800      	ldr	r0, [sp, #0]
1006b6de:	9b01      	ldr	r3, [sp, #4]
1006b6e0:	4798      	blx	r3
1006b6e2:	4306      	orrs	r6, r0
1006b6e4:	3568      	adds	r5, #104	@ 0x68
1006b6e6:	e7ea      	b.n	1006b6be <_fwalk_sglue+0xe>

1006b6e8 <iprintf>:
1006b6e8:	b40f      	push	{r0, r1, r2, r3}
1006b6ea:	b507      	push	{r0, r1, r2, lr}
1006b6ec:	4905      	ldr	r1, [pc, #20]	@ (1006b704 <iprintf+0x1c>)
1006b6ee:	ab04      	add	r3, sp, #16
1006b6f0:	6808      	ldr	r0, [r1, #0]
1006b6f2:	cb04      	ldmia	r3!, {r2}
1006b6f4:	6881      	ldr	r1, [r0, #8]
1006b6f6:	9301      	str	r3, [sp, #4]
1006b6f8:	f000 fd22 	bl	1006c140 <_vfiprintf_r>
1006b6fc:	b003      	add	sp, #12
1006b6fe:	bc08      	pop	{r3}
1006b700:	b004      	add	sp, #16
1006b702:	4718      	bx	r3
1006b704:	20000bfc 	.word	0x20000bfc

1006b708 <putchar>:
1006b708:	b510      	push	{r4, lr}
1006b70a:	4b03      	ldr	r3, [pc, #12]	@ (1006b718 <putchar+0x10>)
1006b70c:	0001      	movs	r1, r0
1006b70e:	6818      	ldr	r0, [r3, #0]
1006b710:	6882      	ldr	r2, [r0, #8]
1006b712:	f001 fa2c 	bl	1006cb6e <_putc_r>
1006b716:	bd10      	pop	{r4, pc}
1006b718:	20000bfc 	.word	0x20000bfc

1006b71c <_puts_r>:
1006b71c:	6a03      	ldr	r3, [r0, #32]
1006b71e:	b570      	push	{r4, r5, r6, lr}
1006b720:	0005      	movs	r5, r0
1006b722:	000e      	movs	r6, r1
1006b724:	6884      	ldr	r4, [r0, #8]
1006b726:	2b00      	cmp	r3, #0
1006b728:	d101      	bne.n	1006b72e <_puts_r+0x12>
1006b72a:	f7ff ffa9 	bl	1006b680 <__sinit>
1006b72e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1006b730:	07db      	lsls	r3, r3, #31
1006b732:	d405      	bmi.n	1006b740 <_puts_r+0x24>
1006b734:	89a3      	ldrh	r3, [r4, #12]
1006b736:	059b      	lsls	r3, r3, #22
1006b738:	d402      	bmi.n	1006b740 <_puts_r+0x24>
1006b73a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006b73c:	f000 fabb 	bl	1006bcb6 <__retarget_lock_acquire_recursive>
1006b740:	89a3      	ldrh	r3, [r4, #12]
1006b742:	071b      	lsls	r3, r3, #28
1006b744:	d502      	bpl.n	1006b74c <_puts_r+0x30>
1006b746:	6923      	ldr	r3, [r4, #16]
1006b748:	2b00      	cmp	r3, #0
1006b74a:	d11f      	bne.n	1006b78c <_puts_r+0x70>
1006b74c:	0021      	movs	r1, r4
1006b74e:	0028      	movs	r0, r5
1006b750:	f000 f9b2 	bl	1006bab8 <__swsetup_r>
1006b754:	2800      	cmp	r0, #0
1006b756:	d019      	beq.n	1006b78c <_puts_r+0x70>
1006b758:	2501      	movs	r5, #1
1006b75a:	426d      	negs	r5, r5
1006b75c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1006b75e:	07db      	lsls	r3, r3, #31
1006b760:	d405      	bmi.n	1006b76e <_puts_r+0x52>
1006b762:	89a3      	ldrh	r3, [r4, #12]
1006b764:	059b      	lsls	r3, r3, #22
1006b766:	d402      	bmi.n	1006b76e <_puts_r+0x52>
1006b768:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006b76a:	f000 faa5 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006b76e:	0028      	movs	r0, r5
1006b770:	bd70      	pop	{r4, r5, r6, pc}
1006b772:	3601      	adds	r6, #1
1006b774:	60a3      	str	r3, [r4, #8]
1006b776:	2b00      	cmp	r3, #0
1006b778:	da04      	bge.n	1006b784 <_puts_r+0x68>
1006b77a:	69a2      	ldr	r2, [r4, #24]
1006b77c:	429a      	cmp	r2, r3
1006b77e:	dc16      	bgt.n	1006b7ae <_puts_r+0x92>
1006b780:	290a      	cmp	r1, #10
1006b782:	d014      	beq.n	1006b7ae <_puts_r+0x92>
1006b784:	6823      	ldr	r3, [r4, #0]
1006b786:	1c5a      	adds	r2, r3, #1
1006b788:	6022      	str	r2, [r4, #0]
1006b78a:	7019      	strb	r1, [r3, #0]
1006b78c:	68a3      	ldr	r3, [r4, #8]
1006b78e:	7831      	ldrb	r1, [r6, #0]
1006b790:	3b01      	subs	r3, #1
1006b792:	2900      	cmp	r1, #0
1006b794:	d1ed      	bne.n	1006b772 <_puts_r+0x56>
1006b796:	60a3      	str	r3, [r4, #8]
1006b798:	2b00      	cmp	r3, #0
1006b79a:	da0f      	bge.n	1006b7bc <_puts_r+0xa0>
1006b79c:	0022      	movs	r2, r4
1006b79e:	0028      	movs	r0, r5
1006b7a0:	310a      	adds	r1, #10
1006b7a2:	f000 f947 	bl	1006ba34 <__swbuf_r>
1006b7a6:	3001      	adds	r0, #1
1006b7a8:	d0d6      	beq.n	1006b758 <_puts_r+0x3c>
1006b7aa:	250a      	movs	r5, #10
1006b7ac:	e7d6      	b.n	1006b75c <_puts_r+0x40>
1006b7ae:	0022      	movs	r2, r4
1006b7b0:	0028      	movs	r0, r5
1006b7b2:	f000 f93f 	bl	1006ba34 <__swbuf_r>
1006b7b6:	3001      	adds	r0, #1
1006b7b8:	d1e8      	bne.n	1006b78c <_puts_r+0x70>
1006b7ba:	e7cd      	b.n	1006b758 <_puts_r+0x3c>
1006b7bc:	6823      	ldr	r3, [r4, #0]
1006b7be:	1c5a      	adds	r2, r3, #1
1006b7c0:	6022      	str	r2, [r4, #0]
1006b7c2:	220a      	movs	r2, #10
1006b7c4:	701a      	strb	r2, [r3, #0]
1006b7c6:	e7f0      	b.n	1006b7aa <_puts_r+0x8e>

1006b7c8 <puts>:
1006b7c8:	b510      	push	{r4, lr}
1006b7ca:	4b03      	ldr	r3, [pc, #12]	@ (1006b7d8 <puts+0x10>)
1006b7cc:	0001      	movs	r1, r0
1006b7ce:	6818      	ldr	r0, [r3, #0]
1006b7d0:	f7ff ffa4 	bl	1006b71c <_puts_r>
1006b7d4:	bd10      	pop	{r4, pc}
1006b7d6:	46c0      	nop			@ (mov r8, r8)
1006b7d8:	20000bfc 	.word	0x20000bfc

1006b7dc <setvbuf>:
1006b7dc:	b5f0      	push	{r4, r5, r6, r7, lr}
1006b7de:	001d      	movs	r5, r3
1006b7e0:	4b57      	ldr	r3, [pc, #348]	@ (1006b940 <setvbuf+0x164>)
1006b7e2:	b085      	sub	sp, #20
1006b7e4:	681e      	ldr	r6, [r3, #0]
1006b7e6:	0004      	movs	r4, r0
1006b7e8:	000f      	movs	r7, r1
1006b7ea:	9200      	str	r2, [sp, #0]
1006b7ec:	2e00      	cmp	r6, #0
1006b7ee:	d005      	beq.n	1006b7fc <setvbuf+0x20>
1006b7f0:	6a33      	ldr	r3, [r6, #32]
1006b7f2:	2b00      	cmp	r3, #0
1006b7f4:	d102      	bne.n	1006b7fc <setvbuf+0x20>
1006b7f6:	0030      	movs	r0, r6
1006b7f8:	f7ff ff42 	bl	1006b680 <__sinit>
1006b7fc:	9b00      	ldr	r3, [sp, #0]
1006b7fe:	2b02      	cmp	r3, #2
1006b800:	d005      	beq.n	1006b80e <setvbuf+0x32>
1006b802:	2b01      	cmp	r3, #1
1006b804:	d900      	bls.n	1006b808 <setvbuf+0x2c>
1006b806:	e097      	b.n	1006b938 <setvbuf+0x15c>
1006b808:	2d00      	cmp	r5, #0
1006b80a:	da00      	bge.n	1006b80e <setvbuf+0x32>
1006b80c:	e094      	b.n	1006b938 <setvbuf+0x15c>
1006b80e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1006b810:	07db      	lsls	r3, r3, #31
1006b812:	d405      	bmi.n	1006b820 <setvbuf+0x44>
1006b814:	89a3      	ldrh	r3, [r4, #12]
1006b816:	059b      	lsls	r3, r3, #22
1006b818:	d402      	bmi.n	1006b820 <setvbuf+0x44>
1006b81a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006b81c:	f000 fa4b 	bl	1006bcb6 <__retarget_lock_acquire_recursive>
1006b820:	0021      	movs	r1, r4
1006b822:	0030      	movs	r0, r6
1006b824:	f001 f90c 	bl	1006ca40 <_fflush_r>
1006b828:	6b61      	ldr	r1, [r4, #52]	@ 0x34
1006b82a:	2900      	cmp	r1, #0
1006b82c:	d008      	beq.n	1006b840 <setvbuf+0x64>
1006b82e:	0023      	movs	r3, r4
1006b830:	3344      	adds	r3, #68	@ 0x44
1006b832:	4299      	cmp	r1, r3
1006b834:	d002      	beq.n	1006b83c <setvbuf+0x60>
1006b836:	0030      	movs	r0, r6
1006b838:	f000 fa52 	bl	1006bce0 <_free_r>
1006b83c:	2300      	movs	r3, #0
1006b83e:	6363      	str	r3, [r4, #52]	@ 0x34
1006b840:	2300      	movs	r3, #0
1006b842:	61a3      	str	r3, [r4, #24]
1006b844:	6063      	str	r3, [r4, #4]
1006b846:	89a3      	ldrh	r3, [r4, #12]
1006b848:	061b      	lsls	r3, r3, #24
1006b84a:	d503      	bpl.n	1006b854 <setvbuf+0x78>
1006b84c:	0030      	movs	r0, r6
1006b84e:	6921      	ldr	r1, [r4, #16]
1006b850:	f000 fa46 	bl	1006bce0 <_free_r>
1006b854:	89a3      	ldrh	r3, [r4, #12]
1006b856:	4a3b      	ldr	r2, [pc, #236]	@ (1006b944 <setvbuf+0x168>)
1006b858:	4013      	ands	r3, r2
1006b85a:	81a3      	strh	r3, [r4, #12]
1006b85c:	9b00      	ldr	r3, [sp, #0]
1006b85e:	2b02      	cmp	r3, #2
1006b860:	d060      	beq.n	1006b924 <setvbuf+0x148>
1006b862:	ab03      	add	r3, sp, #12
1006b864:	0021      	movs	r1, r4
1006b866:	0030      	movs	r0, r6
1006b868:	aa02      	add	r2, sp, #8
1006b86a:	f001 f915 	bl	1006ca98 <__swhatbuf_r>
1006b86e:	89a3      	ldrh	r3, [r4, #12]
1006b870:	4303      	orrs	r3, r0
1006b872:	81a3      	strh	r3, [r4, #12]
1006b874:	2d00      	cmp	r5, #0
1006b876:	d124      	bne.n	1006b8c2 <setvbuf+0xe6>
1006b878:	9d02      	ldr	r5, [sp, #8]
1006b87a:	0028      	movs	r0, r5
1006b87c:	f7ff fdaa 	bl	1006b3d4 <malloc>
1006b880:	9501      	str	r5, [sp, #4]
1006b882:	1e07      	subs	r7, r0, #0
1006b884:	d148      	bne.n	1006b918 <setvbuf+0x13c>
1006b886:	9b02      	ldr	r3, [sp, #8]
1006b888:	9301      	str	r3, [sp, #4]
1006b88a:	42ab      	cmp	r3, r5
1006b88c:	d13f      	bne.n	1006b90e <setvbuf+0x132>
1006b88e:	2501      	movs	r5, #1
1006b890:	426d      	negs	r5, r5
1006b892:	220c      	movs	r2, #12
1006b894:	5ea3      	ldrsh	r3, [r4, r2]
1006b896:	2202      	movs	r2, #2
1006b898:	431a      	orrs	r2, r3
1006b89a:	81a2      	strh	r2, [r4, #12]
1006b89c:	2200      	movs	r2, #0
1006b89e:	60a2      	str	r2, [r4, #8]
1006b8a0:	0022      	movs	r2, r4
1006b8a2:	3247      	adds	r2, #71	@ 0x47
1006b8a4:	6022      	str	r2, [r4, #0]
1006b8a6:	6122      	str	r2, [r4, #16]
1006b8a8:	2201      	movs	r2, #1
1006b8aa:	6e61      	ldr	r1, [r4, #100]	@ 0x64
1006b8ac:	6162      	str	r2, [r4, #20]
1006b8ae:	4211      	tst	r1, r2
1006b8b0:	d104      	bne.n	1006b8bc <setvbuf+0xe0>
1006b8b2:	059b      	lsls	r3, r3, #22
1006b8b4:	d402      	bmi.n	1006b8bc <setvbuf+0xe0>
1006b8b6:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006b8b8:	f000 f9fe 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006b8bc:	0028      	movs	r0, r5
1006b8be:	b005      	add	sp, #20
1006b8c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006b8c2:	2f00      	cmp	r7, #0
1006b8c4:	d0d9      	beq.n	1006b87a <setvbuf+0x9e>
1006b8c6:	6a33      	ldr	r3, [r6, #32]
1006b8c8:	2b00      	cmp	r3, #0
1006b8ca:	d102      	bne.n	1006b8d2 <setvbuf+0xf6>
1006b8cc:	0030      	movs	r0, r6
1006b8ce:	f7ff fed7 	bl	1006b680 <__sinit>
1006b8d2:	9b00      	ldr	r3, [sp, #0]
1006b8d4:	2b01      	cmp	r3, #1
1006b8d6:	d103      	bne.n	1006b8e0 <setvbuf+0x104>
1006b8d8:	89a3      	ldrh	r3, [r4, #12]
1006b8da:	9a00      	ldr	r2, [sp, #0]
1006b8dc:	431a      	orrs	r2, r3
1006b8de:	81a2      	strh	r2, [r4, #12]
1006b8e0:	220c      	movs	r2, #12
1006b8e2:	5ea3      	ldrsh	r3, [r4, r2]
1006b8e4:	2208      	movs	r2, #8
1006b8e6:	0019      	movs	r1, r3
1006b8e8:	6027      	str	r7, [r4, #0]
1006b8ea:	6127      	str	r7, [r4, #16]
1006b8ec:	6165      	str	r5, [r4, #20]
1006b8ee:	4011      	ands	r1, r2
1006b8f0:	4213      	tst	r3, r2
1006b8f2:	d01b      	beq.n	1006b92c <setvbuf+0x150>
1006b8f4:	07da      	lsls	r2, r3, #31
1006b8f6:	d517      	bpl.n	1006b928 <setvbuf+0x14c>
1006b8f8:	2200      	movs	r2, #0
1006b8fa:	426d      	negs	r5, r5
1006b8fc:	60a2      	str	r2, [r4, #8]
1006b8fe:	61a5      	str	r5, [r4, #24]
1006b900:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1006b902:	07d2      	lsls	r2, r2, #31
1006b904:	d401      	bmi.n	1006b90a <setvbuf+0x12e>
1006b906:	059b      	lsls	r3, r3, #22
1006b908:	d512      	bpl.n	1006b930 <setvbuf+0x154>
1006b90a:	2500      	movs	r5, #0
1006b90c:	e7d6      	b.n	1006b8bc <setvbuf+0xe0>
1006b90e:	9801      	ldr	r0, [sp, #4]
1006b910:	f7ff fd60 	bl	1006b3d4 <malloc>
1006b914:	1e07      	subs	r7, r0, #0
1006b916:	d0ba      	beq.n	1006b88e <setvbuf+0xb2>
1006b918:	2380      	movs	r3, #128	@ 0x80
1006b91a:	89a2      	ldrh	r2, [r4, #12]
1006b91c:	9d01      	ldr	r5, [sp, #4]
1006b91e:	4313      	orrs	r3, r2
1006b920:	81a3      	strh	r3, [r4, #12]
1006b922:	e7d0      	b.n	1006b8c6 <setvbuf+0xea>
1006b924:	2500      	movs	r5, #0
1006b926:	e7b4      	b.n	1006b892 <setvbuf+0xb6>
1006b928:	60a5      	str	r5, [r4, #8]
1006b92a:	e7e9      	b.n	1006b900 <setvbuf+0x124>
1006b92c:	60a1      	str	r1, [r4, #8]
1006b92e:	e7e7      	b.n	1006b900 <setvbuf+0x124>
1006b930:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006b932:	f000 f9c1 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006b936:	e7e8      	b.n	1006b90a <setvbuf+0x12e>
1006b938:	2501      	movs	r5, #1
1006b93a:	426d      	negs	r5, r5
1006b93c:	e7be      	b.n	1006b8bc <setvbuf+0xe0>
1006b93e:	46c0      	nop			@ (mov r8, r8)
1006b940:	20000bfc 	.word	0x20000bfc
1006b944:	fffff35c 	.word	0xfffff35c

1006b948 <siscanf>:
1006b948:	b40e      	push	{r1, r2, r3}
1006b94a:	b530      	push	{r4, r5, lr}
1006b94c:	2381      	movs	r3, #129	@ 0x81
1006b94e:	b09c      	sub	sp, #112	@ 0x70
1006b950:	466a      	mov	r2, sp
1006b952:	ac1f      	add	r4, sp, #124	@ 0x7c
1006b954:	009b      	lsls	r3, r3, #2
1006b956:	cc20      	ldmia	r4!, {r5}
1006b958:	8293      	strh	r3, [r2, #20]
1006b95a:	9002      	str	r0, [sp, #8]
1006b95c:	9006      	str	r0, [sp, #24]
1006b95e:	f7d4 fc5d 	bl	1004021c <strlen>
1006b962:	4b0b      	ldr	r3, [pc, #44]	@ (1006b990 <siscanf+0x48>)
1006b964:	466a      	mov	r2, sp
1006b966:	930b      	str	r3, [sp, #44]	@ 0x2c
1006b968:	2300      	movs	r3, #0
1006b96a:	9003      	str	r0, [sp, #12]
1006b96c:	9007      	str	r0, [sp, #28]
1006b96e:	4809      	ldr	r0, [pc, #36]	@ (1006b994 <siscanf+0x4c>)
1006b970:	930f      	str	r3, [sp, #60]	@ 0x3c
1006b972:	9314      	str	r3, [sp, #80]	@ 0x50
1006b974:	3b01      	subs	r3, #1
1006b976:	82d3      	strh	r3, [r2, #22]
1006b978:	a902      	add	r1, sp, #8
1006b97a:	0023      	movs	r3, r4
1006b97c:	002a      	movs	r2, r5
1006b97e:	6800      	ldr	r0, [r0, #0]
1006b980:	9401      	str	r4, [sp, #4]
1006b982:	f000 fa53 	bl	1006be2c <__ssvfiscanf_r>
1006b986:	b01c      	add	sp, #112	@ 0x70
1006b988:	bc30      	pop	{r4, r5}
1006b98a:	bc08      	pop	{r3}
1006b98c:	b003      	add	sp, #12
1006b98e:	4718      	bx	r3
1006b990:	1006b9c1 	.word	0x1006b9c1
1006b994:	20000bfc 	.word	0x20000bfc

1006b998 <__sread>:
1006b998:	b570      	push	{r4, r5, r6, lr}
1006b99a:	000c      	movs	r4, r1
1006b99c:	250e      	movs	r5, #14
1006b99e:	5f49      	ldrsh	r1, [r1, r5]
1006b9a0:	f000 f948 	bl	1006bc34 <_read_r>
1006b9a4:	2800      	cmp	r0, #0
1006b9a6:	db03      	blt.n	1006b9b0 <__sread+0x18>
1006b9a8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
1006b9aa:	181b      	adds	r3, r3, r0
1006b9ac:	6563      	str	r3, [r4, #84]	@ 0x54
1006b9ae:	bd70      	pop	{r4, r5, r6, pc}
1006b9b0:	89a3      	ldrh	r3, [r4, #12]
1006b9b2:	4a02      	ldr	r2, [pc, #8]	@ (1006b9bc <__sread+0x24>)
1006b9b4:	4013      	ands	r3, r2
1006b9b6:	81a3      	strh	r3, [r4, #12]
1006b9b8:	e7f9      	b.n	1006b9ae <__sread+0x16>
1006b9ba:	46c0      	nop			@ (mov r8, r8)
1006b9bc:	ffffefff 	.word	0xffffefff

1006b9c0 <__seofread>:
1006b9c0:	2000      	movs	r0, #0
1006b9c2:	4770      	bx	lr

1006b9c4 <__swrite>:
1006b9c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006b9c6:	001f      	movs	r7, r3
1006b9c8:	898b      	ldrh	r3, [r1, #12]
1006b9ca:	0005      	movs	r5, r0
1006b9cc:	000c      	movs	r4, r1
1006b9ce:	0016      	movs	r6, r2
1006b9d0:	05db      	lsls	r3, r3, #23
1006b9d2:	d505      	bpl.n	1006b9e0 <__swrite+0x1c>
1006b9d4:	230e      	movs	r3, #14
1006b9d6:	5ec9      	ldrsh	r1, [r1, r3]
1006b9d8:	2200      	movs	r2, #0
1006b9da:	2302      	movs	r3, #2
1006b9dc:	f000 f916 	bl	1006bc0c <_lseek_r>
1006b9e0:	89a3      	ldrh	r3, [r4, #12]
1006b9e2:	4a05      	ldr	r2, [pc, #20]	@ (1006b9f8 <__swrite+0x34>)
1006b9e4:	0028      	movs	r0, r5
1006b9e6:	4013      	ands	r3, r2
1006b9e8:	81a3      	strh	r3, [r4, #12]
1006b9ea:	0032      	movs	r2, r6
1006b9ec:	230e      	movs	r3, #14
1006b9ee:	5ee1      	ldrsh	r1, [r4, r3]
1006b9f0:	003b      	movs	r3, r7
1006b9f2:	f000 f945 	bl	1006bc80 <_write_r>
1006b9f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006b9f8:	ffffefff 	.word	0xffffefff

1006b9fc <__sseek>:
1006b9fc:	b570      	push	{r4, r5, r6, lr}
1006b9fe:	000c      	movs	r4, r1
1006ba00:	250e      	movs	r5, #14
1006ba02:	5f49      	ldrsh	r1, [r1, r5]
1006ba04:	f000 f902 	bl	1006bc0c <_lseek_r>
1006ba08:	89a3      	ldrh	r3, [r4, #12]
1006ba0a:	1c42      	adds	r2, r0, #1
1006ba0c:	d103      	bne.n	1006ba16 <__sseek+0x1a>
1006ba0e:	4a05      	ldr	r2, [pc, #20]	@ (1006ba24 <__sseek+0x28>)
1006ba10:	4013      	ands	r3, r2
1006ba12:	81a3      	strh	r3, [r4, #12]
1006ba14:	bd70      	pop	{r4, r5, r6, pc}
1006ba16:	2280      	movs	r2, #128	@ 0x80
1006ba18:	0152      	lsls	r2, r2, #5
1006ba1a:	4313      	orrs	r3, r2
1006ba1c:	81a3      	strh	r3, [r4, #12]
1006ba1e:	6560      	str	r0, [r4, #84]	@ 0x54
1006ba20:	e7f8      	b.n	1006ba14 <__sseek+0x18>
1006ba22:	46c0      	nop			@ (mov r8, r8)
1006ba24:	ffffefff 	.word	0xffffefff

1006ba28 <__sclose>:
1006ba28:	b510      	push	{r4, lr}
1006ba2a:	230e      	movs	r3, #14
1006ba2c:	5ec9      	ldrsh	r1, [r1, r3]
1006ba2e:	f000 f8db 	bl	1006bbe8 <_close_r>
1006ba32:	bd10      	pop	{r4, pc}

1006ba34 <__swbuf_r>:
1006ba34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006ba36:	0006      	movs	r6, r0
1006ba38:	000d      	movs	r5, r1
1006ba3a:	0014      	movs	r4, r2
1006ba3c:	2800      	cmp	r0, #0
1006ba3e:	d004      	beq.n	1006ba4a <__swbuf_r+0x16>
1006ba40:	6a03      	ldr	r3, [r0, #32]
1006ba42:	2b00      	cmp	r3, #0
1006ba44:	d101      	bne.n	1006ba4a <__swbuf_r+0x16>
1006ba46:	f7ff fe1b 	bl	1006b680 <__sinit>
1006ba4a:	69a3      	ldr	r3, [r4, #24]
1006ba4c:	60a3      	str	r3, [r4, #8]
1006ba4e:	89a3      	ldrh	r3, [r4, #12]
1006ba50:	071b      	lsls	r3, r3, #28
1006ba52:	d502      	bpl.n	1006ba5a <__swbuf_r+0x26>
1006ba54:	6923      	ldr	r3, [r4, #16]
1006ba56:	2b00      	cmp	r3, #0
1006ba58:	d109      	bne.n	1006ba6e <__swbuf_r+0x3a>
1006ba5a:	0021      	movs	r1, r4
1006ba5c:	0030      	movs	r0, r6
1006ba5e:	f000 f82b 	bl	1006bab8 <__swsetup_r>
1006ba62:	2800      	cmp	r0, #0
1006ba64:	d003      	beq.n	1006ba6e <__swbuf_r+0x3a>
1006ba66:	2501      	movs	r5, #1
1006ba68:	426d      	negs	r5, r5
1006ba6a:	0028      	movs	r0, r5
1006ba6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006ba6e:	6923      	ldr	r3, [r4, #16]
1006ba70:	6820      	ldr	r0, [r4, #0]
1006ba72:	b2ef      	uxtb	r7, r5
1006ba74:	1ac0      	subs	r0, r0, r3
1006ba76:	6963      	ldr	r3, [r4, #20]
1006ba78:	b2ed      	uxtb	r5, r5
1006ba7a:	4283      	cmp	r3, r0
1006ba7c:	dc05      	bgt.n	1006ba8a <__swbuf_r+0x56>
1006ba7e:	0021      	movs	r1, r4
1006ba80:	0030      	movs	r0, r6
1006ba82:	f000 ffdd 	bl	1006ca40 <_fflush_r>
1006ba86:	2800      	cmp	r0, #0
1006ba88:	d1ed      	bne.n	1006ba66 <__swbuf_r+0x32>
1006ba8a:	68a3      	ldr	r3, [r4, #8]
1006ba8c:	3001      	adds	r0, #1
1006ba8e:	3b01      	subs	r3, #1
1006ba90:	60a3      	str	r3, [r4, #8]
1006ba92:	6823      	ldr	r3, [r4, #0]
1006ba94:	1c5a      	adds	r2, r3, #1
1006ba96:	6022      	str	r2, [r4, #0]
1006ba98:	701f      	strb	r7, [r3, #0]
1006ba9a:	6963      	ldr	r3, [r4, #20]
1006ba9c:	4283      	cmp	r3, r0
1006ba9e:	d004      	beq.n	1006baaa <__swbuf_r+0x76>
1006baa0:	89a3      	ldrh	r3, [r4, #12]
1006baa2:	07db      	lsls	r3, r3, #31
1006baa4:	d5e1      	bpl.n	1006ba6a <__swbuf_r+0x36>
1006baa6:	2d0a      	cmp	r5, #10
1006baa8:	d1df      	bne.n	1006ba6a <__swbuf_r+0x36>
1006baaa:	0021      	movs	r1, r4
1006baac:	0030      	movs	r0, r6
1006baae:	f000 ffc7 	bl	1006ca40 <_fflush_r>
1006bab2:	2800      	cmp	r0, #0
1006bab4:	d0d9      	beq.n	1006ba6a <__swbuf_r+0x36>
1006bab6:	e7d6      	b.n	1006ba66 <__swbuf_r+0x32>

1006bab8 <__swsetup_r>:
1006bab8:	4b2d      	ldr	r3, [pc, #180]	@ (1006bb70 <__swsetup_r+0xb8>)
1006baba:	b570      	push	{r4, r5, r6, lr}
1006babc:	0005      	movs	r5, r0
1006babe:	6818      	ldr	r0, [r3, #0]
1006bac0:	000c      	movs	r4, r1
1006bac2:	2800      	cmp	r0, #0
1006bac4:	d004      	beq.n	1006bad0 <__swsetup_r+0x18>
1006bac6:	6a03      	ldr	r3, [r0, #32]
1006bac8:	2b00      	cmp	r3, #0
1006baca:	d101      	bne.n	1006bad0 <__swsetup_r+0x18>
1006bacc:	f7ff fdd8 	bl	1006b680 <__sinit>
1006bad0:	230c      	movs	r3, #12
1006bad2:	5ee2      	ldrsh	r2, [r4, r3]
1006bad4:	0713      	lsls	r3, r2, #28
1006bad6:	d423      	bmi.n	1006bb20 <__swsetup_r+0x68>
1006bad8:	06d3      	lsls	r3, r2, #27
1006bada:	d407      	bmi.n	1006baec <__swsetup_r+0x34>
1006badc:	2309      	movs	r3, #9
1006bade:	602b      	str	r3, [r5, #0]
1006bae0:	2340      	movs	r3, #64	@ 0x40
1006bae2:	2001      	movs	r0, #1
1006bae4:	4313      	orrs	r3, r2
1006bae6:	81a3      	strh	r3, [r4, #12]
1006bae8:	4240      	negs	r0, r0
1006baea:	e03a      	b.n	1006bb62 <__swsetup_r+0xaa>
1006baec:	0752      	lsls	r2, r2, #29
1006baee:	d513      	bpl.n	1006bb18 <__swsetup_r+0x60>
1006baf0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
1006baf2:	2900      	cmp	r1, #0
1006baf4:	d008      	beq.n	1006bb08 <__swsetup_r+0x50>
1006baf6:	0023      	movs	r3, r4
1006baf8:	3344      	adds	r3, #68	@ 0x44
1006bafa:	4299      	cmp	r1, r3
1006bafc:	d002      	beq.n	1006bb04 <__swsetup_r+0x4c>
1006bafe:	0028      	movs	r0, r5
1006bb00:	f000 f8ee 	bl	1006bce0 <_free_r>
1006bb04:	2300      	movs	r3, #0
1006bb06:	6363      	str	r3, [r4, #52]	@ 0x34
1006bb08:	2224      	movs	r2, #36	@ 0x24
1006bb0a:	89a3      	ldrh	r3, [r4, #12]
1006bb0c:	4393      	bics	r3, r2
1006bb0e:	81a3      	strh	r3, [r4, #12]
1006bb10:	2300      	movs	r3, #0
1006bb12:	6063      	str	r3, [r4, #4]
1006bb14:	6923      	ldr	r3, [r4, #16]
1006bb16:	6023      	str	r3, [r4, #0]
1006bb18:	2308      	movs	r3, #8
1006bb1a:	89a2      	ldrh	r2, [r4, #12]
1006bb1c:	4313      	orrs	r3, r2
1006bb1e:	81a3      	strh	r3, [r4, #12]
1006bb20:	6923      	ldr	r3, [r4, #16]
1006bb22:	2b00      	cmp	r3, #0
1006bb24:	d10b      	bne.n	1006bb3e <__swsetup_r+0x86>
1006bb26:	21a0      	movs	r1, #160	@ 0xa0
1006bb28:	2280      	movs	r2, #128	@ 0x80
1006bb2a:	89a3      	ldrh	r3, [r4, #12]
1006bb2c:	0089      	lsls	r1, r1, #2
1006bb2e:	0092      	lsls	r2, r2, #2
1006bb30:	400b      	ands	r3, r1
1006bb32:	4293      	cmp	r3, r2
1006bb34:	d003      	beq.n	1006bb3e <__swsetup_r+0x86>
1006bb36:	0021      	movs	r1, r4
1006bb38:	0028      	movs	r0, r5
1006bb3a:	f000 ffd7 	bl	1006caec <__smakebuf_r>
1006bb3e:	230c      	movs	r3, #12
1006bb40:	5ee2      	ldrsh	r2, [r4, r3]
1006bb42:	2101      	movs	r1, #1
1006bb44:	0013      	movs	r3, r2
1006bb46:	400b      	ands	r3, r1
1006bb48:	420a      	tst	r2, r1
1006bb4a:	d00b      	beq.n	1006bb64 <__swsetup_r+0xac>
1006bb4c:	2300      	movs	r3, #0
1006bb4e:	60a3      	str	r3, [r4, #8]
1006bb50:	6963      	ldr	r3, [r4, #20]
1006bb52:	425b      	negs	r3, r3
1006bb54:	61a3      	str	r3, [r4, #24]
1006bb56:	2000      	movs	r0, #0
1006bb58:	6923      	ldr	r3, [r4, #16]
1006bb5a:	4283      	cmp	r3, r0
1006bb5c:	d101      	bne.n	1006bb62 <__swsetup_r+0xaa>
1006bb5e:	0613      	lsls	r3, r2, #24
1006bb60:	d4be      	bmi.n	1006bae0 <__swsetup_r+0x28>
1006bb62:	bd70      	pop	{r4, r5, r6, pc}
1006bb64:	0791      	lsls	r1, r2, #30
1006bb66:	d400      	bmi.n	1006bb6a <__swsetup_r+0xb2>
1006bb68:	6963      	ldr	r3, [r4, #20]
1006bb6a:	60a3      	str	r3, [r4, #8]
1006bb6c:	e7f3      	b.n	1006bb56 <__swsetup_r+0x9e>
1006bb6e:	46c0      	nop			@ (mov r8, r8)
1006bb70:	20000bfc 	.word	0x20000bfc

1006bb74 <memcmp>:
1006bb74:	b530      	push	{r4, r5, lr}
1006bb76:	2400      	movs	r4, #0
1006bb78:	3901      	subs	r1, #1
1006bb7a:	42a2      	cmp	r2, r4
1006bb7c:	d101      	bne.n	1006bb82 <memcmp+0xe>
1006bb7e:	2000      	movs	r0, #0
1006bb80:	e005      	b.n	1006bb8e <memcmp+0x1a>
1006bb82:	5d03      	ldrb	r3, [r0, r4]
1006bb84:	3401      	adds	r4, #1
1006bb86:	5d0d      	ldrb	r5, [r1, r4]
1006bb88:	42ab      	cmp	r3, r5
1006bb8a:	d0f6      	beq.n	1006bb7a <memcmp+0x6>
1006bb8c:	1b58      	subs	r0, r3, r5
1006bb8e:	bd30      	pop	{r4, r5, pc}

1006bb90 <memset>:
1006bb90:	0003      	movs	r3, r0
1006bb92:	1882      	adds	r2, r0, r2
1006bb94:	4293      	cmp	r3, r2
1006bb96:	d100      	bne.n	1006bb9a <memset+0xa>
1006bb98:	4770      	bx	lr
1006bb9a:	7019      	strb	r1, [r3, #0]
1006bb9c:	3301      	adds	r3, #1
1006bb9e:	e7f9      	b.n	1006bb94 <memset+0x4>

1006bba0 <strncasecmp>:
1006bba0:	2303      	movs	r3, #3
1006bba2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006bba4:	469c      	mov	ip, r3
1006bba6:	0006      	movs	r6, r0
1006bba8:	2400      	movs	r4, #0
1006bbaa:	4f0e      	ldr	r7, [pc, #56]	@ (1006bbe4 <strncasecmp+0x44>)
1006bbac:	9201      	str	r2, [sp, #4]
1006bbae:	9b01      	ldr	r3, [sp, #4]
1006bbb0:	429c      	cmp	r4, r3
1006bbb2:	d101      	bne.n	1006bbb8 <strncasecmp+0x18>
1006bbb4:	2000      	movs	r0, #0
1006bbb6:	e013      	b.n	1006bbe0 <strncasecmp+0x40>
1006bbb8:	4660      	mov	r0, ip
1006bbba:	5d35      	ldrb	r5, [r6, r4]
1006bbbc:	5d7b      	ldrb	r3, [r7, r5]
1006bbbe:	4003      	ands	r3, r0
1006bbc0:	2b01      	cmp	r3, #1
1006bbc2:	d100      	bne.n	1006bbc6 <strncasecmp+0x26>
1006bbc4:	3520      	adds	r5, #32
1006bbc6:	4662      	mov	r2, ip
1006bbc8:	5d0b      	ldrb	r3, [r1, r4]
1006bbca:	5cf8      	ldrb	r0, [r7, r3]
1006bbcc:	4010      	ands	r0, r2
1006bbce:	2801      	cmp	r0, #1
1006bbd0:	d100      	bne.n	1006bbd4 <strncasecmp+0x34>
1006bbd2:	3320      	adds	r3, #32
1006bbd4:	1ae8      	subs	r0, r5, r3
1006bbd6:	429d      	cmp	r5, r3
1006bbd8:	d102      	bne.n	1006bbe0 <strncasecmp+0x40>
1006bbda:	3401      	adds	r4, #1
1006bbdc:	2b00      	cmp	r3, #0
1006bbde:	d1e6      	bne.n	1006bbae <strncasecmp+0xe>
1006bbe0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006bbe2:	46c0      	nop			@ (mov r8, r8)
1006bbe4:	1006eac5 	.word	0x1006eac5

1006bbe8 <_close_r>:
1006bbe8:	2300      	movs	r3, #0
1006bbea:	b570      	push	{r4, r5, r6, lr}
1006bbec:	4d06      	ldr	r5, [pc, #24]	@ (1006bc08 <_close_r+0x20>)
1006bbee:	0004      	movs	r4, r0
1006bbf0:	0008      	movs	r0, r1
1006bbf2:	602b      	str	r3, [r5, #0]
1006bbf4:	f7d6 fbe7 	bl	100423c6 <_close>
1006bbf8:	1c43      	adds	r3, r0, #1
1006bbfa:	d103      	bne.n	1006bc04 <_close_r+0x1c>
1006bbfc:	682b      	ldr	r3, [r5, #0]
1006bbfe:	2b00      	cmp	r3, #0
1006bc00:	d000      	beq.n	1006bc04 <_close_r+0x1c>
1006bc02:	6023      	str	r3, [r4, #0]
1006bc04:	bd70      	pop	{r4, r5, r6, pc}
1006bc06:	46c0      	nop			@ (mov r8, r8)
1006bc08:	20000a30 	.word	0x20000a30

1006bc0c <_lseek_r>:
1006bc0c:	b570      	push	{r4, r5, r6, lr}
1006bc0e:	0004      	movs	r4, r0
1006bc10:	0008      	movs	r0, r1
1006bc12:	0011      	movs	r1, r2
1006bc14:	001a      	movs	r2, r3
1006bc16:	2300      	movs	r3, #0
1006bc18:	4d05      	ldr	r5, [pc, #20]	@ (1006bc30 <_lseek_r+0x24>)
1006bc1a:	602b      	str	r3, [r5, #0]
1006bc1c:	f7d6 fbf4 	bl	10042408 <_lseek>
1006bc20:	1c43      	adds	r3, r0, #1
1006bc22:	d103      	bne.n	1006bc2c <_lseek_r+0x20>
1006bc24:	682b      	ldr	r3, [r5, #0]
1006bc26:	2b00      	cmp	r3, #0
1006bc28:	d000      	beq.n	1006bc2c <_lseek_r+0x20>
1006bc2a:	6023      	str	r3, [r4, #0]
1006bc2c:	bd70      	pop	{r4, r5, r6, pc}
1006bc2e:	46c0      	nop			@ (mov r8, r8)
1006bc30:	20000a30 	.word	0x20000a30

1006bc34 <_read_r>:
1006bc34:	b570      	push	{r4, r5, r6, lr}
1006bc36:	0004      	movs	r4, r0
1006bc38:	0008      	movs	r0, r1
1006bc3a:	0011      	movs	r1, r2
1006bc3c:	001a      	movs	r2, r3
1006bc3e:	2300      	movs	r3, #0
1006bc40:	4d05      	ldr	r5, [pc, #20]	@ (1006bc58 <_read_r+0x24>)
1006bc42:	602b      	str	r3, [r5, #0]
1006bc44:	f7d6 fb86 	bl	10042354 <_read>
1006bc48:	1c43      	adds	r3, r0, #1
1006bc4a:	d103      	bne.n	1006bc54 <_read_r+0x20>
1006bc4c:	682b      	ldr	r3, [r5, #0]
1006bc4e:	2b00      	cmp	r3, #0
1006bc50:	d000      	beq.n	1006bc54 <_read_r+0x20>
1006bc52:	6023      	str	r3, [r4, #0]
1006bc54:	bd70      	pop	{r4, r5, r6, pc}
1006bc56:	46c0      	nop			@ (mov r8, r8)
1006bc58:	20000a30 	.word	0x20000a30

1006bc5c <_sbrk_r>:
1006bc5c:	2300      	movs	r3, #0
1006bc5e:	b570      	push	{r4, r5, r6, lr}
1006bc60:	4d06      	ldr	r5, [pc, #24]	@ (1006bc7c <_sbrk_r+0x20>)
1006bc62:	0004      	movs	r4, r0
1006bc64:	0008      	movs	r0, r1
1006bc66:	602b      	str	r3, [r5, #0]
1006bc68:	f7d6 fbda 	bl	10042420 <_sbrk>
1006bc6c:	1c43      	adds	r3, r0, #1
1006bc6e:	d103      	bne.n	1006bc78 <_sbrk_r+0x1c>
1006bc70:	682b      	ldr	r3, [r5, #0]
1006bc72:	2b00      	cmp	r3, #0
1006bc74:	d000      	beq.n	1006bc78 <_sbrk_r+0x1c>
1006bc76:	6023      	str	r3, [r4, #0]
1006bc78:	bd70      	pop	{r4, r5, r6, pc}
1006bc7a:	46c0      	nop			@ (mov r8, r8)
1006bc7c:	20000a30 	.word	0x20000a30

1006bc80 <_write_r>:
1006bc80:	b570      	push	{r4, r5, r6, lr}
1006bc82:	0004      	movs	r4, r0
1006bc84:	0008      	movs	r0, r1
1006bc86:	0011      	movs	r1, r2
1006bc88:	001a      	movs	r2, r3
1006bc8a:	2300      	movs	r3, #0
1006bc8c:	4d05      	ldr	r5, [pc, #20]	@ (1006bca4 <_write_r+0x24>)
1006bc8e:	602b      	str	r3, [r5, #0]
1006bc90:	f7d6 fb7d 	bl	1004238e <_write>
1006bc94:	1c43      	adds	r3, r0, #1
1006bc96:	d103      	bne.n	1006bca0 <_write_r+0x20>
1006bc98:	682b      	ldr	r3, [r5, #0]
1006bc9a:	2b00      	cmp	r3, #0
1006bc9c:	d000      	beq.n	1006bca0 <_write_r+0x20>
1006bc9e:	6023      	str	r3, [r4, #0]
1006bca0:	bd70      	pop	{r4, r5, r6, pc}
1006bca2:	46c0      	nop			@ (mov r8, r8)
1006bca4:	20000a30 	.word	0x20000a30

1006bca8 <__errno>:
1006bca8:	4b01      	ldr	r3, [pc, #4]	@ (1006bcb0 <__errno+0x8>)
1006bcaa:	6818      	ldr	r0, [r3, #0]
1006bcac:	4770      	bx	lr
1006bcae:	46c0      	nop			@ (mov r8, r8)
1006bcb0:	20000bfc 	.word	0x20000bfc

1006bcb4 <__retarget_lock_init_recursive>:
1006bcb4:	4770      	bx	lr

1006bcb6 <__retarget_lock_acquire_recursive>:
1006bcb6:	4770      	bx	lr

1006bcb8 <__retarget_lock_release_recursive>:
1006bcb8:	4770      	bx	lr

1006bcba <__aeabi_memcpy>:
1006bcba:	b510      	push	{r4, lr}
1006bcbc:	f000 f806 	bl	1006bccc <memcpy>
1006bcc0:	bd10      	pop	{r4, pc}

1006bcc2 <__aeabi_memclr>:
1006bcc2:	b510      	push	{r4, lr}
1006bcc4:	2200      	movs	r2, #0
1006bcc6:	f001 f823 	bl	1006cd10 <__aeabi_memset>
1006bcca:	bd10      	pop	{r4, pc}

1006bccc <memcpy>:
1006bccc:	2300      	movs	r3, #0
1006bcce:	b510      	push	{r4, lr}
1006bcd0:	429a      	cmp	r2, r3
1006bcd2:	d100      	bne.n	1006bcd6 <memcpy+0xa>
1006bcd4:	bd10      	pop	{r4, pc}
1006bcd6:	5ccc      	ldrb	r4, [r1, r3]
1006bcd8:	54c4      	strb	r4, [r0, r3]
1006bcda:	3301      	adds	r3, #1
1006bcdc:	e7f8      	b.n	1006bcd0 <memcpy+0x4>
	...

1006bce0 <_free_r>:
1006bce0:	b570      	push	{r4, r5, r6, lr}
1006bce2:	0005      	movs	r5, r0
1006bce4:	1e0c      	subs	r4, r1, #0
1006bce6:	d010      	beq.n	1006bd0a <_free_r+0x2a>
1006bce8:	3c04      	subs	r4, #4
1006bcea:	6823      	ldr	r3, [r4, #0]
1006bcec:	2b00      	cmp	r3, #0
1006bcee:	da00      	bge.n	1006bcf2 <_free_r+0x12>
1006bcf0:	18e4      	adds	r4, r4, r3
1006bcf2:	0028      	movs	r0, r5
1006bcf4:	f7ff fc24 	bl	1006b540 <__malloc_lock>
1006bcf8:	4a1d      	ldr	r2, [pc, #116]	@ (1006bd70 <_free_r+0x90>)
1006bcfa:	6813      	ldr	r3, [r2, #0]
1006bcfc:	2b00      	cmp	r3, #0
1006bcfe:	d105      	bne.n	1006bd0c <_free_r+0x2c>
1006bd00:	6063      	str	r3, [r4, #4]
1006bd02:	6014      	str	r4, [r2, #0]
1006bd04:	0028      	movs	r0, r5
1006bd06:	f7ff fc23 	bl	1006b550 <__malloc_unlock>
1006bd0a:	bd70      	pop	{r4, r5, r6, pc}
1006bd0c:	42a3      	cmp	r3, r4
1006bd0e:	d908      	bls.n	1006bd22 <_free_r+0x42>
1006bd10:	6820      	ldr	r0, [r4, #0]
1006bd12:	1821      	adds	r1, r4, r0
1006bd14:	428b      	cmp	r3, r1
1006bd16:	d1f3      	bne.n	1006bd00 <_free_r+0x20>
1006bd18:	6819      	ldr	r1, [r3, #0]
1006bd1a:	685b      	ldr	r3, [r3, #4]
1006bd1c:	1809      	adds	r1, r1, r0
1006bd1e:	6021      	str	r1, [r4, #0]
1006bd20:	e7ee      	b.n	1006bd00 <_free_r+0x20>
1006bd22:	001a      	movs	r2, r3
1006bd24:	685b      	ldr	r3, [r3, #4]
1006bd26:	2b00      	cmp	r3, #0
1006bd28:	d001      	beq.n	1006bd2e <_free_r+0x4e>
1006bd2a:	42a3      	cmp	r3, r4
1006bd2c:	d9f9      	bls.n	1006bd22 <_free_r+0x42>
1006bd2e:	6811      	ldr	r1, [r2, #0]
1006bd30:	1850      	adds	r0, r2, r1
1006bd32:	42a0      	cmp	r0, r4
1006bd34:	d10b      	bne.n	1006bd4e <_free_r+0x6e>
1006bd36:	6820      	ldr	r0, [r4, #0]
1006bd38:	1809      	adds	r1, r1, r0
1006bd3a:	1850      	adds	r0, r2, r1
1006bd3c:	6011      	str	r1, [r2, #0]
1006bd3e:	4283      	cmp	r3, r0
1006bd40:	d1e0      	bne.n	1006bd04 <_free_r+0x24>
1006bd42:	6818      	ldr	r0, [r3, #0]
1006bd44:	685b      	ldr	r3, [r3, #4]
1006bd46:	1841      	adds	r1, r0, r1
1006bd48:	6011      	str	r1, [r2, #0]
1006bd4a:	6053      	str	r3, [r2, #4]
1006bd4c:	e7da      	b.n	1006bd04 <_free_r+0x24>
1006bd4e:	42a0      	cmp	r0, r4
1006bd50:	d902      	bls.n	1006bd58 <_free_r+0x78>
1006bd52:	230c      	movs	r3, #12
1006bd54:	602b      	str	r3, [r5, #0]
1006bd56:	e7d5      	b.n	1006bd04 <_free_r+0x24>
1006bd58:	6820      	ldr	r0, [r4, #0]
1006bd5a:	1821      	adds	r1, r4, r0
1006bd5c:	428b      	cmp	r3, r1
1006bd5e:	d103      	bne.n	1006bd68 <_free_r+0x88>
1006bd60:	6819      	ldr	r1, [r3, #0]
1006bd62:	685b      	ldr	r3, [r3, #4]
1006bd64:	1809      	adds	r1, r1, r0
1006bd66:	6021      	str	r1, [r4, #0]
1006bd68:	6063      	str	r3, [r4, #4]
1006bd6a:	6054      	str	r4, [r2, #4]
1006bd6c:	e7ca      	b.n	1006bd04 <_free_r+0x24>
1006bd6e:	46c0      	nop			@ (mov r8, r8)
1006bd70:	200008f0 	.word	0x200008f0

1006bd74 <_sungetc_r>:
1006bd74:	b570      	push	{r4, r5, r6, lr}
1006bd76:	0014      	movs	r4, r2
1006bd78:	1c4b      	adds	r3, r1, #1
1006bd7a:	d103      	bne.n	1006bd84 <_sungetc_r+0x10>
1006bd7c:	2501      	movs	r5, #1
1006bd7e:	426d      	negs	r5, r5
1006bd80:	0028      	movs	r0, r5
1006bd82:	bd70      	pop	{r4, r5, r6, pc}
1006bd84:	8993      	ldrh	r3, [r2, #12]
1006bd86:	2220      	movs	r2, #32
1006bd88:	4393      	bics	r3, r2
1006bd8a:	6b62      	ldr	r2, [r4, #52]	@ 0x34
1006bd8c:	81a3      	strh	r3, [r4, #12]
1006bd8e:	b2ce      	uxtb	r6, r1
1006bd90:	6863      	ldr	r3, [r4, #4]
1006bd92:	b2cd      	uxtb	r5, r1
1006bd94:	2a00      	cmp	r2, #0
1006bd96:	d010      	beq.n	1006bdba <_sungetc_r+0x46>
1006bd98:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
1006bd9a:	429a      	cmp	r2, r3
1006bd9c:	dd07      	ble.n	1006bdae <_sungetc_r+0x3a>
1006bd9e:	6823      	ldr	r3, [r4, #0]
1006bda0:	3b01      	subs	r3, #1
1006bda2:	6023      	str	r3, [r4, #0]
1006bda4:	701e      	strb	r6, [r3, #0]
1006bda6:	6863      	ldr	r3, [r4, #4]
1006bda8:	3301      	adds	r3, #1
1006bdaa:	6063      	str	r3, [r4, #4]
1006bdac:	e7e8      	b.n	1006bd80 <_sungetc_r+0xc>
1006bdae:	0021      	movs	r1, r4
1006bdb0:	f000 ff4c 	bl	1006cc4c <__submore>
1006bdb4:	2800      	cmp	r0, #0
1006bdb6:	d0f2      	beq.n	1006bd9e <_sungetc_r+0x2a>
1006bdb8:	e7e0      	b.n	1006bd7c <_sungetc_r+0x8>
1006bdba:	6921      	ldr	r1, [r4, #16]
1006bdbc:	6822      	ldr	r2, [r4, #0]
1006bdbe:	2900      	cmp	r1, #0
1006bdc0:	d007      	beq.n	1006bdd2 <_sungetc_r+0x5e>
1006bdc2:	4291      	cmp	r1, r2
1006bdc4:	d205      	bcs.n	1006bdd2 <_sungetc_r+0x5e>
1006bdc6:	1e51      	subs	r1, r2, #1
1006bdc8:	7808      	ldrb	r0, [r1, #0]
1006bdca:	42a8      	cmp	r0, r5
1006bdcc:	d101      	bne.n	1006bdd2 <_sungetc_r+0x5e>
1006bdce:	6021      	str	r1, [r4, #0]
1006bdd0:	e7ea      	b.n	1006bda8 <_sungetc_r+0x34>
1006bdd2:	6423      	str	r3, [r4, #64]	@ 0x40
1006bdd4:	0023      	movs	r3, r4
1006bdd6:	3344      	adds	r3, #68	@ 0x44
1006bdd8:	6363      	str	r3, [r4, #52]	@ 0x34
1006bdda:	2303      	movs	r3, #3
1006bddc:	63a3      	str	r3, [r4, #56]	@ 0x38
1006bdde:	0023      	movs	r3, r4
1006bde0:	3346      	adds	r3, #70	@ 0x46
1006bde2:	63e2      	str	r2, [r4, #60]	@ 0x3c
1006bde4:	701e      	strb	r6, [r3, #0]
1006bde6:	6023      	str	r3, [r4, #0]
1006bde8:	2301      	movs	r3, #1
1006bdea:	e7de      	b.n	1006bdaa <_sungetc_r+0x36>

1006bdec <__ssrefill_r>:
1006bdec:	b510      	push	{r4, lr}
1006bdee:	000c      	movs	r4, r1
1006bdf0:	6b49      	ldr	r1, [r1, #52]	@ 0x34
1006bdf2:	2900      	cmp	r1, #0
1006bdf4:	d00e      	beq.n	1006be14 <__ssrefill_r+0x28>
1006bdf6:	0023      	movs	r3, r4
1006bdf8:	3344      	adds	r3, #68	@ 0x44
1006bdfa:	4299      	cmp	r1, r3
1006bdfc:	d001      	beq.n	1006be02 <__ssrefill_r+0x16>
1006bdfe:	f7ff ff6f 	bl	1006bce0 <_free_r>
1006be02:	2000      	movs	r0, #0
1006be04:	6c23      	ldr	r3, [r4, #64]	@ 0x40
1006be06:	6360      	str	r0, [r4, #52]	@ 0x34
1006be08:	6063      	str	r3, [r4, #4]
1006be0a:	4283      	cmp	r3, r0
1006be0c:	d002      	beq.n	1006be14 <__ssrefill_r+0x28>
1006be0e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
1006be10:	6023      	str	r3, [r4, #0]
1006be12:	bd10      	pop	{r4, pc}
1006be14:	6923      	ldr	r3, [r4, #16]
1006be16:	2001      	movs	r0, #1
1006be18:	6023      	str	r3, [r4, #0]
1006be1a:	2300      	movs	r3, #0
1006be1c:	89a2      	ldrh	r2, [r4, #12]
1006be1e:	6063      	str	r3, [r4, #4]
1006be20:	3320      	adds	r3, #32
1006be22:	4313      	orrs	r3, r2
1006be24:	81a3      	strh	r3, [r4, #12]
1006be26:	4240      	negs	r0, r0
1006be28:	e7f3      	b.n	1006be12 <__ssrefill_r+0x26>
	...

1006be2c <__ssvfiscanf_r>:
1006be2c:	b5f0      	push	{r4, r5, r6, r7, lr}
1006be2e:	4caa      	ldr	r4, [pc, #680]	@ (1006c0d8 <__ssvfiscanf_r+0x2ac>)
1006be30:	44a5      	add	sp, r4
1006be32:	000c      	movs	r4, r1
1006be34:	2100      	movs	r1, #0
1006be36:	9001      	str	r0, [sp, #4]
1006be38:	20be      	movs	r0, #190	@ 0xbe
1006be3a:	9146      	str	r1, [sp, #280]	@ 0x118
1006be3c:	9147      	str	r1, [sp, #284]	@ 0x11c
1006be3e:	a903      	add	r1, sp, #12
1006be40:	9148      	str	r1, [sp, #288]	@ 0x120
1006be42:	49a6      	ldr	r1, [pc, #664]	@ (1006c0dc <__ssvfiscanf_r+0x2b0>)
1006be44:	0040      	lsls	r0, r0, #1
1006be46:	ad43      	add	r5, sp, #268	@ 0x10c
1006be48:	5029      	str	r1, [r5, r0]
1006be4a:	49a5      	ldr	r1, [pc, #660]	@ (1006c0e0 <__ssvfiscanf_r+0x2b4>)
1006be4c:	3004      	adds	r0, #4
1006be4e:	ad43      	add	r5, sp, #268	@ 0x10c
1006be50:	5029      	str	r1, [r5, r0]
1006be52:	9302      	str	r3, [sp, #8]
1006be54:	7813      	ldrb	r3, [r2, #0]
1006be56:	2b00      	cmp	r3, #0
1006be58:	d100      	bne.n	1006be5c <__ssvfiscanf_r+0x30>
1006be5a:	e13a      	b.n	1006c0d2 <__ssvfiscanf_r+0x2a6>
1006be5c:	2108      	movs	r1, #8
1006be5e:	2708      	movs	r7, #8
1006be60:	4ea0      	ldr	r6, [pc, #640]	@ (1006c0e4 <__ssvfiscanf_r+0x2b8>)
1006be62:	1c55      	adds	r5, r2, #1
1006be64:	5cf0      	ldrb	r0, [r6, r3]
1006be66:	4001      	ands	r1, r0
1006be68:	4238      	tst	r0, r7
1006be6a:	d01c      	beq.n	1006bea6 <__ssvfiscanf_r+0x7a>
1006be6c:	6863      	ldr	r3, [r4, #4]
1006be6e:	2b00      	cmp	r3, #0
1006be70:	dd0f      	ble.n	1006be92 <__ssvfiscanf_r+0x66>
1006be72:	6823      	ldr	r3, [r4, #0]
1006be74:	781a      	ldrb	r2, [r3, #0]
1006be76:	5cb2      	ldrb	r2, [r6, r2]
1006be78:	423a      	tst	r2, r7
1006be7a:	d101      	bne.n	1006be80 <__ssvfiscanf_r+0x54>
1006be7c:	002a      	movs	r2, r5
1006be7e:	e7e9      	b.n	1006be54 <__ssvfiscanf_r+0x28>
1006be80:	9a47      	ldr	r2, [sp, #284]	@ 0x11c
1006be82:	3301      	adds	r3, #1
1006be84:	3201      	adds	r2, #1
1006be86:	9247      	str	r2, [sp, #284]	@ 0x11c
1006be88:	6862      	ldr	r2, [r4, #4]
1006be8a:	6023      	str	r3, [r4, #0]
1006be8c:	3a01      	subs	r2, #1
1006be8e:	6062      	str	r2, [r4, #4]
1006be90:	e7ec      	b.n	1006be6c <__ssvfiscanf_r+0x40>
1006be92:	22c0      	movs	r2, #192	@ 0xc0
1006be94:	ab43      	add	r3, sp, #268	@ 0x10c
1006be96:	0052      	lsls	r2, r2, #1
1006be98:	0021      	movs	r1, r4
1006be9a:	589b      	ldr	r3, [r3, r2]
1006be9c:	9801      	ldr	r0, [sp, #4]
1006be9e:	4798      	blx	r3
1006bea0:	2800      	cmp	r0, #0
1006bea2:	d0e6      	beq.n	1006be72 <__ssvfiscanf_r+0x46>
1006bea4:	e7ea      	b.n	1006be7c <__ssvfiscanf_r+0x50>
1006bea6:	001e      	movs	r6, r3
1006bea8:	2b25      	cmp	r3, #37	@ 0x25
1006beaa:	d160      	bne.n	1006bf6e <__ssvfiscanf_r+0x142>
1006beac:	9145      	str	r1, [sp, #276]	@ 0x114
1006beae:	9143      	str	r1, [sp, #268]	@ 0x10c
1006beb0:	7853      	ldrb	r3, [r2, #1]
1006beb2:	2b2a      	cmp	r3, #42	@ 0x2a
1006beb4:	d102      	bne.n	1006bebc <__ssvfiscanf_r+0x90>
1006beb6:	3b1a      	subs	r3, #26
1006beb8:	9343      	str	r3, [sp, #268]	@ 0x10c
1006beba:	1c95      	adds	r5, r2, #2
1006bebc:	002e      	movs	r6, r5
1006bebe:	220a      	movs	r2, #10
1006bec0:	7831      	ldrb	r1, [r6, #0]
1006bec2:	1c75      	adds	r5, r6, #1
1006bec4:	000b      	movs	r3, r1
1006bec6:	3b30      	subs	r3, #48	@ 0x30
1006bec8:	2b09      	cmp	r3, #9
1006beca:	d91d      	bls.n	1006bf08 <__ssvfiscanf_r+0xdc>
1006becc:	4f86      	ldr	r7, [pc, #536]	@ (1006c0e8 <__ssvfiscanf_r+0x2bc>)
1006bece:	2203      	movs	r2, #3
1006bed0:	0038      	movs	r0, r7
1006bed2:	f000 ff24 	bl	1006cd1e <memchr>
1006bed6:	2800      	cmp	r0, #0
1006bed8:	d006      	beq.n	1006bee8 <__ssvfiscanf_r+0xbc>
1006beda:	2301      	movs	r3, #1
1006bedc:	1bc0      	subs	r0, r0, r7
1006bede:	4083      	lsls	r3, r0
1006bee0:	002e      	movs	r6, r5
1006bee2:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
1006bee4:	4313      	orrs	r3, r2
1006bee6:	9343      	str	r3, [sp, #268]	@ 0x10c
1006bee8:	1c75      	adds	r5, r6, #1
1006beea:	7836      	ldrb	r6, [r6, #0]
1006beec:	2e78      	cmp	r6, #120	@ 0x78
1006beee:	d806      	bhi.n	1006befe <__ssvfiscanf_r+0xd2>
1006bef0:	2e57      	cmp	r6, #87	@ 0x57
1006bef2:	d810      	bhi.n	1006bf16 <__ssvfiscanf_r+0xea>
1006bef4:	2e25      	cmp	r6, #37	@ 0x25
1006bef6:	d03a      	beq.n	1006bf6e <__ssvfiscanf_r+0x142>
1006bef8:	d834      	bhi.n	1006bf64 <__ssvfiscanf_r+0x138>
1006befa:	2e00      	cmp	r6, #0
1006befc:	d055      	beq.n	1006bfaa <__ssvfiscanf_r+0x17e>
1006befe:	2303      	movs	r3, #3
1006bf00:	9349      	str	r3, [sp, #292]	@ 0x124
1006bf02:	3307      	adds	r3, #7
1006bf04:	9344      	str	r3, [sp, #272]	@ 0x110
1006bf06:	e069      	b.n	1006bfdc <__ssvfiscanf_r+0x1b0>
1006bf08:	9b45      	ldr	r3, [sp, #276]	@ 0x114
1006bf0a:	002e      	movs	r6, r5
1006bf0c:	4353      	muls	r3, r2
1006bf0e:	3b30      	subs	r3, #48	@ 0x30
1006bf10:	185b      	adds	r3, r3, r1
1006bf12:	9345      	str	r3, [sp, #276]	@ 0x114
1006bf14:	e7d4      	b.n	1006bec0 <__ssvfiscanf_r+0x94>
1006bf16:	0030      	movs	r0, r6
1006bf18:	3858      	subs	r0, #88	@ 0x58
1006bf1a:	2820      	cmp	r0, #32
1006bf1c:	d8ef      	bhi.n	1006befe <__ssvfiscanf_r+0xd2>
1006bf1e:	f7d4 f985 	bl	1004022c <__gnu_thumb1_case_shi>
1006bf22:	004b      	.short	0x004b
1006bf24:	ffeeffee 	.word	0xffeeffee
1006bf28:	ffee007d 	.word	0xffee007d
1006bf2c:	ffeeffee 	.word	0xffeeffee
1006bf30:	ffeeffee 	.word	0xffeeffee
1006bf34:	ffeeffee 	.word	0xffeeffee
1006bf38:	007b0088 	.word	0x007b0088
1006bf3c:	00240024 	.word	0x00240024
1006bf40:	ffee0024 	.word	0xffee0024
1006bf44:	ffee0055 	.word	0xffee0055
1006bf48:	ffeeffee 	.word	0xffeeffee
1006bf4c:	0090ffee 	.word	0x0090ffee
1006bf50:	00470059 	.word	0x00470059
1006bf54:	ffeeffee 	.word	0xffeeffee
1006bf58:	ffee008e 	.word	0xffee008e
1006bf5c:	ffee007b 	.word	0xffee007b
1006bf60:	004bffee 	.word	0x004bffee
1006bf64:	3e45      	subs	r6, #69	@ 0x45
1006bf66:	2e02      	cmp	r6, #2
1006bf68:	d8c9      	bhi.n	1006befe <__ssvfiscanf_r+0xd2>
1006bf6a:	2305      	movs	r3, #5
1006bf6c:	e035      	b.n	1006bfda <__ssvfiscanf_r+0x1ae>
1006bf6e:	6863      	ldr	r3, [r4, #4]
1006bf70:	2b00      	cmp	r3, #0
1006bf72:	dd0d      	ble.n	1006bf90 <__ssvfiscanf_r+0x164>
1006bf74:	6823      	ldr	r3, [r4, #0]
1006bf76:	781a      	ldrb	r2, [r3, #0]
1006bf78:	42b2      	cmp	r2, r6
1006bf7a:	d000      	beq.n	1006bf7e <__ssvfiscanf_r+0x152>
1006bf7c:	e0a9      	b.n	1006c0d2 <__ssvfiscanf_r+0x2a6>
1006bf7e:	3301      	adds	r3, #1
1006bf80:	6862      	ldr	r2, [r4, #4]
1006bf82:	6023      	str	r3, [r4, #0]
1006bf84:	9b47      	ldr	r3, [sp, #284]	@ 0x11c
1006bf86:	3a01      	subs	r2, #1
1006bf88:	3301      	adds	r3, #1
1006bf8a:	6062      	str	r2, [r4, #4]
1006bf8c:	9347      	str	r3, [sp, #284]	@ 0x11c
1006bf8e:	e775      	b.n	1006be7c <__ssvfiscanf_r+0x50>
1006bf90:	23c0      	movs	r3, #192	@ 0xc0
1006bf92:	aa43      	add	r2, sp, #268	@ 0x10c
1006bf94:	005b      	lsls	r3, r3, #1
1006bf96:	0021      	movs	r1, r4
1006bf98:	58d3      	ldr	r3, [r2, r3]
1006bf9a:	9801      	ldr	r0, [sp, #4]
1006bf9c:	4798      	blx	r3
1006bf9e:	2800      	cmp	r0, #0
1006bfa0:	d0e8      	beq.n	1006bf74 <__ssvfiscanf_r+0x148>
1006bfa2:	9846      	ldr	r0, [sp, #280]	@ 0x118
1006bfa4:	2800      	cmp	r0, #0
1006bfa6:	d000      	beq.n	1006bfaa <__ssvfiscanf_r+0x17e>
1006bfa8:	e08b      	b.n	1006c0c2 <__ssvfiscanf_r+0x296>
1006bfaa:	2001      	movs	r0, #1
1006bfac:	4240      	negs	r0, r0
1006bfae:	e08c      	b.n	1006c0ca <__ssvfiscanf_r+0x29e>
1006bfb0:	2320      	movs	r3, #32
1006bfb2:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
1006bfb4:	4313      	orrs	r3, r2
1006bfb6:	9343      	str	r3, [sp, #268]	@ 0x10c
1006bfb8:	2380      	movs	r3, #128	@ 0x80
1006bfba:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
1006bfbc:	009b      	lsls	r3, r3, #2
1006bfbe:	4313      	orrs	r3, r2
1006bfc0:	9343      	str	r3, [sp, #268]	@ 0x10c
1006bfc2:	2310      	movs	r3, #16
1006bfc4:	9344      	str	r3, [sp, #272]	@ 0x110
1006bfc6:	2e6e      	cmp	r6, #110	@ 0x6e
1006bfc8:	d902      	bls.n	1006bfd0 <__ssvfiscanf_r+0x1a4>
1006bfca:	e005      	b.n	1006bfd8 <__ssvfiscanf_r+0x1ac>
1006bfcc:	2300      	movs	r3, #0
1006bfce:	9344      	str	r3, [sp, #272]	@ 0x110
1006bfd0:	2303      	movs	r3, #3
1006bfd2:	e002      	b.n	1006bfda <__ssvfiscanf_r+0x1ae>
1006bfd4:	2308      	movs	r3, #8
1006bfd6:	9344      	str	r3, [sp, #272]	@ 0x110
1006bfd8:	2304      	movs	r3, #4
1006bfda:	9349      	str	r3, [sp, #292]	@ 0x124
1006bfdc:	6863      	ldr	r3, [r4, #4]
1006bfde:	2b00      	cmp	r3, #0
1006bfe0:	dd3e      	ble.n	1006c060 <__ssvfiscanf_r+0x234>
1006bfe2:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
1006bfe4:	065b      	lsls	r3, r3, #25
1006bfe6:	d408      	bmi.n	1006bffa <__ssvfiscanf_r+0x1ce>
1006bfe8:	27c0      	movs	r7, #192	@ 0xc0
1006bfea:	2608      	movs	r6, #8
1006bfec:	007f      	lsls	r7, r7, #1
1006bfee:	6823      	ldr	r3, [r4, #0]
1006bff0:	493c      	ldr	r1, [pc, #240]	@ (1006c0e4 <__ssvfiscanf_r+0x2b8>)
1006bff2:	781a      	ldrb	r2, [r3, #0]
1006bff4:	5c8a      	ldrb	r2, [r1, r2]
1006bff6:	4232      	tst	r2, r6
1006bff8:	d13c      	bne.n	1006c074 <__ssvfiscanf_r+0x248>
1006bffa:	9b49      	ldr	r3, [sp, #292]	@ 0x124
1006bffc:	2b02      	cmp	r3, #2
1006bffe:	dc4c      	bgt.n	1006c09a <__ssvfiscanf_r+0x26e>
1006c000:	0022      	movs	r2, r4
1006c002:	9801      	ldr	r0, [sp, #4]
1006c004:	ab02      	add	r3, sp, #8
1006c006:	a943      	add	r1, sp, #268	@ 0x10c
1006c008:	f000 fb34 	bl	1006c674 <_scanf_chars>
1006c00c:	2801      	cmp	r0, #1
1006c00e:	d060      	beq.n	1006c0d2 <__ssvfiscanf_r+0x2a6>
1006c010:	2802      	cmp	r0, #2
1006c012:	d000      	beq.n	1006c016 <__ssvfiscanf_r+0x1ea>
1006c014:	e732      	b.n	1006be7c <__ssvfiscanf_r+0x50>
1006c016:	e7c4      	b.n	1006bfa2 <__ssvfiscanf_r+0x176>
1006c018:	230a      	movs	r3, #10
1006c01a:	e7d3      	b.n	1006bfc4 <__ssvfiscanf_r+0x198>
1006c01c:	0029      	movs	r1, r5
1006c01e:	a803      	add	r0, sp, #12
1006c020:	f000 fddb 	bl	1006cbda <__sccl>
1006c024:	2340      	movs	r3, #64	@ 0x40
1006c026:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
1006c028:	0005      	movs	r5, r0
1006c02a:	4313      	orrs	r3, r2
1006c02c:	9343      	str	r3, [sp, #268]	@ 0x10c
1006c02e:	2301      	movs	r3, #1
1006c030:	e7d3      	b.n	1006bfda <__ssvfiscanf_r+0x1ae>
1006c032:	2340      	movs	r3, #64	@ 0x40
1006c034:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
1006c036:	4313      	orrs	r3, r2
1006c038:	9343      	str	r3, [sp, #268]	@ 0x10c
1006c03a:	2300      	movs	r3, #0
1006c03c:	e7cd      	b.n	1006bfda <__ssvfiscanf_r+0x1ae>
1006c03e:	2302      	movs	r3, #2
1006c040:	e7cb      	b.n	1006bfda <__ssvfiscanf_r+0x1ae>
1006c042:	9a43      	ldr	r2, [sp, #268]	@ 0x10c
1006c044:	06d3      	lsls	r3, r2, #27
1006c046:	d500      	bpl.n	1006c04a <__ssvfiscanf_r+0x21e>
1006c048:	e718      	b.n	1006be7c <__ssvfiscanf_r+0x50>
1006c04a:	9b02      	ldr	r3, [sp, #8]
1006c04c:	9947      	ldr	r1, [sp, #284]	@ 0x11c
1006c04e:	1d18      	adds	r0, r3, #4
1006c050:	9002      	str	r0, [sp, #8]
1006c052:	681b      	ldr	r3, [r3, #0]
1006c054:	07d6      	lsls	r6, r2, #31
1006c056:	d501      	bpl.n	1006c05c <__ssvfiscanf_r+0x230>
1006c058:	8019      	strh	r1, [r3, #0]
1006c05a:	e70f      	b.n	1006be7c <__ssvfiscanf_r+0x50>
1006c05c:	6019      	str	r1, [r3, #0]
1006c05e:	e70d      	b.n	1006be7c <__ssvfiscanf_r+0x50>
1006c060:	23c0      	movs	r3, #192	@ 0xc0
1006c062:	aa43      	add	r2, sp, #268	@ 0x10c
1006c064:	005b      	lsls	r3, r3, #1
1006c066:	0021      	movs	r1, r4
1006c068:	58d3      	ldr	r3, [r2, r3]
1006c06a:	9801      	ldr	r0, [sp, #4]
1006c06c:	4798      	blx	r3
1006c06e:	2800      	cmp	r0, #0
1006c070:	d0b7      	beq.n	1006bfe2 <__ssvfiscanf_r+0x1b6>
1006c072:	e796      	b.n	1006bfa2 <__ssvfiscanf_r+0x176>
1006c074:	9a47      	ldr	r2, [sp, #284]	@ 0x11c
1006c076:	3201      	adds	r2, #1
1006c078:	9247      	str	r2, [sp, #284]	@ 0x11c
1006c07a:	6862      	ldr	r2, [r4, #4]
1006c07c:	3a01      	subs	r2, #1
1006c07e:	6062      	str	r2, [r4, #4]
1006c080:	2a00      	cmp	r2, #0
1006c082:	dd02      	ble.n	1006c08a <__ssvfiscanf_r+0x25e>
1006c084:	3301      	adds	r3, #1
1006c086:	6023      	str	r3, [r4, #0]
1006c088:	e7b1      	b.n	1006bfee <__ssvfiscanf_r+0x1c2>
1006c08a:	ab43      	add	r3, sp, #268	@ 0x10c
1006c08c:	0021      	movs	r1, r4
1006c08e:	59db      	ldr	r3, [r3, r7]
1006c090:	9801      	ldr	r0, [sp, #4]
1006c092:	4798      	blx	r3
1006c094:	2800      	cmp	r0, #0
1006c096:	d0aa      	beq.n	1006bfee <__ssvfiscanf_r+0x1c2>
1006c098:	e783      	b.n	1006bfa2 <__ssvfiscanf_r+0x176>
1006c09a:	2b04      	cmp	r3, #4
1006c09c:	dc06      	bgt.n	1006c0ac <__ssvfiscanf_r+0x280>
1006c09e:	0022      	movs	r2, r4
1006c0a0:	9801      	ldr	r0, [sp, #4]
1006c0a2:	ab02      	add	r3, sp, #8
1006c0a4:	a943      	add	r1, sp, #268	@ 0x10c
1006c0a6:	f000 fb45 	bl	1006c734 <_scanf_i>
1006c0aa:	e7af      	b.n	1006c00c <__ssvfiscanf_r+0x1e0>
1006c0ac:	4b0f      	ldr	r3, [pc, #60]	@ (1006c0ec <__ssvfiscanf_r+0x2c0>)
1006c0ae:	2b00      	cmp	r3, #0
1006c0b0:	d100      	bne.n	1006c0b4 <__ssvfiscanf_r+0x288>
1006c0b2:	e6e3      	b.n	1006be7c <__ssvfiscanf_r+0x50>
1006c0b4:	0022      	movs	r2, r4
1006c0b6:	9801      	ldr	r0, [sp, #4]
1006c0b8:	ab02      	add	r3, sp, #8
1006c0ba:	a943      	add	r1, sp, #268	@ 0x10c
1006c0bc:	e000      	b.n	1006c0c0 <__ssvfiscanf_r+0x294>
1006c0be:	bf00      	nop
1006c0c0:	e7a4      	b.n	1006c00c <__ssvfiscanf_r+0x1e0>
1006c0c2:	89a3      	ldrh	r3, [r4, #12]
1006c0c4:	065b      	lsls	r3, r3, #25
1006c0c6:	d500      	bpl.n	1006c0ca <__ssvfiscanf_r+0x29e>
1006c0c8:	e76f      	b.n	1006bfaa <__ssvfiscanf_r+0x17e>
1006c0ca:	23a5      	movs	r3, #165	@ 0xa5
1006c0cc:	009b      	lsls	r3, r3, #2
1006c0ce:	449d      	add	sp, r3
1006c0d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006c0d2:	9846      	ldr	r0, [sp, #280]	@ 0x118
1006c0d4:	e7f9      	b.n	1006c0ca <__ssvfiscanf_r+0x29e>
1006c0d6:	46c0      	nop			@ (mov r8, r8)
1006c0d8:	fffffd6c 	.word	0xfffffd6c
1006c0dc:	1006bd75 	.word	0x1006bd75
1006c0e0:	1006bded 	.word	0x1006bded
1006c0e4:	1006eac5 	.word	0x1006eac5
1006c0e8:	1006ebc5 	.word	0x1006ebc5
1006c0ec:	00000000 	.word	0x00000000

1006c0f0 <__sfputc_r>:
1006c0f0:	6893      	ldr	r3, [r2, #8]
1006c0f2:	b510      	push	{r4, lr}
1006c0f4:	3b01      	subs	r3, #1
1006c0f6:	6093      	str	r3, [r2, #8]
1006c0f8:	2b00      	cmp	r3, #0
1006c0fa:	da04      	bge.n	1006c106 <__sfputc_r+0x16>
1006c0fc:	6994      	ldr	r4, [r2, #24]
1006c0fe:	42a3      	cmp	r3, r4
1006c100:	db07      	blt.n	1006c112 <__sfputc_r+0x22>
1006c102:	290a      	cmp	r1, #10
1006c104:	d005      	beq.n	1006c112 <__sfputc_r+0x22>
1006c106:	6813      	ldr	r3, [r2, #0]
1006c108:	1c58      	adds	r0, r3, #1
1006c10a:	6010      	str	r0, [r2, #0]
1006c10c:	7019      	strb	r1, [r3, #0]
1006c10e:	0008      	movs	r0, r1
1006c110:	bd10      	pop	{r4, pc}
1006c112:	f7ff fc8f 	bl	1006ba34 <__swbuf_r>
1006c116:	0001      	movs	r1, r0
1006c118:	e7f9      	b.n	1006c10e <__sfputc_r+0x1e>

1006c11a <__sfputs_r>:
1006c11a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006c11c:	0006      	movs	r6, r0
1006c11e:	000f      	movs	r7, r1
1006c120:	0014      	movs	r4, r2
1006c122:	18d5      	adds	r5, r2, r3
1006c124:	42ac      	cmp	r4, r5
1006c126:	d101      	bne.n	1006c12c <__sfputs_r+0x12>
1006c128:	2000      	movs	r0, #0
1006c12a:	e007      	b.n	1006c13c <__sfputs_r+0x22>
1006c12c:	7821      	ldrb	r1, [r4, #0]
1006c12e:	003a      	movs	r2, r7
1006c130:	0030      	movs	r0, r6
1006c132:	f7ff ffdd 	bl	1006c0f0 <__sfputc_r>
1006c136:	3401      	adds	r4, #1
1006c138:	1c43      	adds	r3, r0, #1
1006c13a:	d1f3      	bne.n	1006c124 <__sfputs_r+0xa>
1006c13c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

1006c140 <_vfiprintf_r>:
1006c140:	b5f0      	push	{r4, r5, r6, r7, lr}
1006c142:	b0a1      	sub	sp, #132	@ 0x84
1006c144:	000f      	movs	r7, r1
1006c146:	0015      	movs	r5, r2
1006c148:	001e      	movs	r6, r3
1006c14a:	9003      	str	r0, [sp, #12]
1006c14c:	2800      	cmp	r0, #0
1006c14e:	d004      	beq.n	1006c15a <_vfiprintf_r+0x1a>
1006c150:	6a03      	ldr	r3, [r0, #32]
1006c152:	2b00      	cmp	r3, #0
1006c154:	d101      	bne.n	1006c15a <_vfiprintf_r+0x1a>
1006c156:	f7ff fa93 	bl	1006b680 <__sinit>
1006c15a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
1006c15c:	07db      	lsls	r3, r3, #31
1006c15e:	d405      	bmi.n	1006c16c <_vfiprintf_r+0x2c>
1006c160:	89bb      	ldrh	r3, [r7, #12]
1006c162:	059b      	lsls	r3, r3, #22
1006c164:	d402      	bmi.n	1006c16c <_vfiprintf_r+0x2c>
1006c166:	6db8      	ldr	r0, [r7, #88]	@ 0x58
1006c168:	f7ff fda5 	bl	1006bcb6 <__retarget_lock_acquire_recursive>
1006c16c:	89bb      	ldrh	r3, [r7, #12]
1006c16e:	071b      	lsls	r3, r3, #28
1006c170:	d502      	bpl.n	1006c178 <_vfiprintf_r+0x38>
1006c172:	693b      	ldr	r3, [r7, #16]
1006c174:	2b00      	cmp	r3, #0
1006c176:	d113      	bne.n	1006c1a0 <_vfiprintf_r+0x60>
1006c178:	0039      	movs	r1, r7
1006c17a:	9803      	ldr	r0, [sp, #12]
1006c17c:	f7ff fc9c 	bl	1006bab8 <__swsetup_r>
1006c180:	2800      	cmp	r0, #0
1006c182:	d00d      	beq.n	1006c1a0 <_vfiprintf_r+0x60>
1006c184:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
1006c186:	07db      	lsls	r3, r3, #31
1006c188:	d503      	bpl.n	1006c192 <_vfiprintf_r+0x52>
1006c18a:	2001      	movs	r0, #1
1006c18c:	4240      	negs	r0, r0
1006c18e:	b021      	add	sp, #132	@ 0x84
1006c190:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006c192:	89bb      	ldrh	r3, [r7, #12]
1006c194:	059b      	lsls	r3, r3, #22
1006c196:	d4f8      	bmi.n	1006c18a <_vfiprintf_r+0x4a>
1006c198:	6db8      	ldr	r0, [r7, #88]	@ 0x58
1006c19a:	f7ff fd8d 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006c19e:	e7f4      	b.n	1006c18a <_vfiprintf_r+0x4a>
1006c1a0:	2300      	movs	r3, #0
1006c1a2:	ac08      	add	r4, sp, #32
1006c1a4:	6163      	str	r3, [r4, #20]
1006c1a6:	3320      	adds	r3, #32
1006c1a8:	7663      	strb	r3, [r4, #25]
1006c1aa:	3310      	adds	r3, #16
1006c1ac:	76a3      	strb	r3, [r4, #26]
1006c1ae:	9607      	str	r6, [sp, #28]
1006c1b0:	002e      	movs	r6, r5
1006c1b2:	7833      	ldrb	r3, [r6, #0]
1006c1b4:	2b00      	cmp	r3, #0
1006c1b6:	d001      	beq.n	1006c1bc <_vfiprintf_r+0x7c>
1006c1b8:	2b25      	cmp	r3, #37	@ 0x25
1006c1ba:	d148      	bne.n	1006c24e <_vfiprintf_r+0x10e>
1006c1bc:	1b73      	subs	r3, r6, r5
1006c1be:	9305      	str	r3, [sp, #20]
1006c1c0:	42ae      	cmp	r6, r5
1006c1c2:	d00b      	beq.n	1006c1dc <_vfiprintf_r+0x9c>
1006c1c4:	002a      	movs	r2, r5
1006c1c6:	0039      	movs	r1, r7
1006c1c8:	9803      	ldr	r0, [sp, #12]
1006c1ca:	f7ff ffa6 	bl	1006c11a <__sfputs_r>
1006c1ce:	3001      	adds	r0, #1
1006c1d0:	d100      	bne.n	1006c1d4 <_vfiprintf_r+0x94>
1006c1d2:	e0ae      	b.n	1006c332 <_vfiprintf_r+0x1f2>
1006c1d4:	6963      	ldr	r3, [r4, #20]
1006c1d6:	9a05      	ldr	r2, [sp, #20]
1006c1d8:	189b      	adds	r3, r3, r2
1006c1da:	6163      	str	r3, [r4, #20]
1006c1dc:	7833      	ldrb	r3, [r6, #0]
1006c1de:	2b00      	cmp	r3, #0
1006c1e0:	d100      	bne.n	1006c1e4 <_vfiprintf_r+0xa4>
1006c1e2:	e0a6      	b.n	1006c332 <_vfiprintf_r+0x1f2>
1006c1e4:	2201      	movs	r2, #1
1006c1e6:	2300      	movs	r3, #0
1006c1e8:	4252      	negs	r2, r2
1006c1ea:	6062      	str	r2, [r4, #4]
1006c1ec:	a904      	add	r1, sp, #16
1006c1ee:	3254      	adds	r2, #84	@ 0x54
1006c1f0:	1852      	adds	r2, r2, r1
1006c1f2:	1c75      	adds	r5, r6, #1
1006c1f4:	6023      	str	r3, [r4, #0]
1006c1f6:	60e3      	str	r3, [r4, #12]
1006c1f8:	60a3      	str	r3, [r4, #8]
1006c1fa:	7013      	strb	r3, [r2, #0]
1006c1fc:	65a3      	str	r3, [r4, #88]	@ 0x58
1006c1fe:	4b59      	ldr	r3, [pc, #356]	@ (1006c364 <_vfiprintf_r+0x224>)
1006c200:	2205      	movs	r2, #5
1006c202:	0018      	movs	r0, r3
1006c204:	7829      	ldrb	r1, [r5, #0]
1006c206:	9305      	str	r3, [sp, #20]
1006c208:	f000 fd89 	bl	1006cd1e <memchr>
1006c20c:	1c6e      	adds	r6, r5, #1
1006c20e:	2800      	cmp	r0, #0
1006c210:	d11f      	bne.n	1006c252 <_vfiprintf_r+0x112>
1006c212:	6822      	ldr	r2, [r4, #0]
1006c214:	06d3      	lsls	r3, r2, #27
1006c216:	d504      	bpl.n	1006c222 <_vfiprintf_r+0xe2>
1006c218:	2353      	movs	r3, #83	@ 0x53
1006c21a:	a904      	add	r1, sp, #16
1006c21c:	185b      	adds	r3, r3, r1
1006c21e:	2120      	movs	r1, #32
1006c220:	7019      	strb	r1, [r3, #0]
1006c222:	0713      	lsls	r3, r2, #28
1006c224:	d504      	bpl.n	1006c230 <_vfiprintf_r+0xf0>
1006c226:	2353      	movs	r3, #83	@ 0x53
1006c228:	a904      	add	r1, sp, #16
1006c22a:	185b      	adds	r3, r3, r1
1006c22c:	212b      	movs	r1, #43	@ 0x2b
1006c22e:	7019      	strb	r1, [r3, #0]
1006c230:	782b      	ldrb	r3, [r5, #0]
1006c232:	2b2a      	cmp	r3, #42	@ 0x2a
1006c234:	d016      	beq.n	1006c264 <_vfiprintf_r+0x124>
1006c236:	002e      	movs	r6, r5
1006c238:	2100      	movs	r1, #0
1006c23a:	200a      	movs	r0, #10
1006c23c:	68e3      	ldr	r3, [r4, #12]
1006c23e:	7832      	ldrb	r2, [r6, #0]
1006c240:	1c75      	adds	r5, r6, #1
1006c242:	3a30      	subs	r2, #48	@ 0x30
1006c244:	2a09      	cmp	r2, #9
1006c246:	d950      	bls.n	1006c2ea <_vfiprintf_r+0x1aa>
1006c248:	2900      	cmp	r1, #0
1006c24a:	d111      	bne.n	1006c270 <_vfiprintf_r+0x130>
1006c24c:	e017      	b.n	1006c27e <_vfiprintf_r+0x13e>
1006c24e:	3601      	adds	r6, #1
1006c250:	e7af      	b.n	1006c1b2 <_vfiprintf_r+0x72>
1006c252:	9b05      	ldr	r3, [sp, #20]
1006c254:	6822      	ldr	r2, [r4, #0]
1006c256:	1ac0      	subs	r0, r0, r3
1006c258:	2301      	movs	r3, #1
1006c25a:	4083      	lsls	r3, r0
1006c25c:	4313      	orrs	r3, r2
1006c25e:	0035      	movs	r5, r6
1006c260:	6023      	str	r3, [r4, #0]
1006c262:	e7cc      	b.n	1006c1fe <_vfiprintf_r+0xbe>
1006c264:	9b07      	ldr	r3, [sp, #28]
1006c266:	1d19      	adds	r1, r3, #4
1006c268:	681b      	ldr	r3, [r3, #0]
1006c26a:	9107      	str	r1, [sp, #28]
1006c26c:	2b00      	cmp	r3, #0
1006c26e:	db01      	blt.n	1006c274 <_vfiprintf_r+0x134>
1006c270:	930b      	str	r3, [sp, #44]	@ 0x2c
1006c272:	e004      	b.n	1006c27e <_vfiprintf_r+0x13e>
1006c274:	425b      	negs	r3, r3
1006c276:	60e3      	str	r3, [r4, #12]
1006c278:	2302      	movs	r3, #2
1006c27a:	4313      	orrs	r3, r2
1006c27c:	6023      	str	r3, [r4, #0]
1006c27e:	7833      	ldrb	r3, [r6, #0]
1006c280:	2b2e      	cmp	r3, #46	@ 0x2e
1006c282:	d10c      	bne.n	1006c29e <_vfiprintf_r+0x15e>
1006c284:	7873      	ldrb	r3, [r6, #1]
1006c286:	2b2a      	cmp	r3, #42	@ 0x2a
1006c288:	d134      	bne.n	1006c2f4 <_vfiprintf_r+0x1b4>
1006c28a:	9b07      	ldr	r3, [sp, #28]
1006c28c:	3602      	adds	r6, #2
1006c28e:	1d1a      	adds	r2, r3, #4
1006c290:	681b      	ldr	r3, [r3, #0]
1006c292:	9207      	str	r2, [sp, #28]
1006c294:	2b00      	cmp	r3, #0
1006c296:	da01      	bge.n	1006c29c <_vfiprintf_r+0x15c>
1006c298:	2301      	movs	r3, #1
1006c29a:	425b      	negs	r3, r3
1006c29c:	9309      	str	r3, [sp, #36]	@ 0x24
1006c29e:	4d32      	ldr	r5, [pc, #200]	@ (1006c368 <_vfiprintf_r+0x228>)
1006c2a0:	2203      	movs	r2, #3
1006c2a2:	0028      	movs	r0, r5
1006c2a4:	7831      	ldrb	r1, [r6, #0]
1006c2a6:	f000 fd3a 	bl	1006cd1e <memchr>
1006c2aa:	2800      	cmp	r0, #0
1006c2ac:	d006      	beq.n	1006c2bc <_vfiprintf_r+0x17c>
1006c2ae:	2340      	movs	r3, #64	@ 0x40
1006c2b0:	1b40      	subs	r0, r0, r5
1006c2b2:	4083      	lsls	r3, r0
1006c2b4:	6822      	ldr	r2, [r4, #0]
1006c2b6:	3601      	adds	r6, #1
1006c2b8:	4313      	orrs	r3, r2
1006c2ba:	6023      	str	r3, [r4, #0]
1006c2bc:	7831      	ldrb	r1, [r6, #0]
1006c2be:	2206      	movs	r2, #6
1006c2c0:	482a      	ldr	r0, [pc, #168]	@ (1006c36c <_vfiprintf_r+0x22c>)
1006c2c2:	1c75      	adds	r5, r6, #1
1006c2c4:	7621      	strb	r1, [r4, #24]
1006c2c6:	f000 fd2a 	bl	1006cd1e <memchr>
1006c2ca:	2800      	cmp	r0, #0
1006c2cc:	d040      	beq.n	1006c350 <_vfiprintf_r+0x210>
1006c2ce:	4b28      	ldr	r3, [pc, #160]	@ (1006c370 <_vfiprintf_r+0x230>)
1006c2d0:	2b00      	cmp	r3, #0
1006c2d2:	d122      	bne.n	1006c31a <_vfiprintf_r+0x1da>
1006c2d4:	2207      	movs	r2, #7
1006c2d6:	9b07      	ldr	r3, [sp, #28]
1006c2d8:	3307      	adds	r3, #7
1006c2da:	4393      	bics	r3, r2
1006c2dc:	3308      	adds	r3, #8
1006c2de:	9307      	str	r3, [sp, #28]
1006c2e0:	6963      	ldr	r3, [r4, #20]
1006c2e2:	9a04      	ldr	r2, [sp, #16]
1006c2e4:	189b      	adds	r3, r3, r2
1006c2e6:	6163      	str	r3, [r4, #20]
1006c2e8:	e762      	b.n	1006c1b0 <_vfiprintf_r+0x70>
1006c2ea:	4343      	muls	r3, r0
1006c2ec:	002e      	movs	r6, r5
1006c2ee:	2101      	movs	r1, #1
1006c2f0:	189b      	adds	r3, r3, r2
1006c2f2:	e7a4      	b.n	1006c23e <_vfiprintf_r+0xfe>
1006c2f4:	2300      	movs	r3, #0
1006c2f6:	200a      	movs	r0, #10
1006c2f8:	0019      	movs	r1, r3
1006c2fa:	3601      	adds	r6, #1
1006c2fc:	6063      	str	r3, [r4, #4]
1006c2fe:	7832      	ldrb	r2, [r6, #0]
1006c300:	1c75      	adds	r5, r6, #1
1006c302:	3a30      	subs	r2, #48	@ 0x30
1006c304:	2a09      	cmp	r2, #9
1006c306:	d903      	bls.n	1006c310 <_vfiprintf_r+0x1d0>
1006c308:	2b00      	cmp	r3, #0
1006c30a:	d0c8      	beq.n	1006c29e <_vfiprintf_r+0x15e>
1006c30c:	9109      	str	r1, [sp, #36]	@ 0x24
1006c30e:	e7c6      	b.n	1006c29e <_vfiprintf_r+0x15e>
1006c310:	4341      	muls	r1, r0
1006c312:	002e      	movs	r6, r5
1006c314:	2301      	movs	r3, #1
1006c316:	1889      	adds	r1, r1, r2
1006c318:	e7f1      	b.n	1006c2fe <_vfiprintf_r+0x1be>
1006c31a:	aa07      	add	r2, sp, #28
1006c31c:	9200      	str	r2, [sp, #0]
1006c31e:	0021      	movs	r1, r4
1006c320:	003a      	movs	r2, r7
1006c322:	4b14      	ldr	r3, [pc, #80]	@ (1006c374 <_vfiprintf_r+0x234>)
1006c324:	9803      	ldr	r0, [sp, #12]
1006c326:	e000      	b.n	1006c32a <_vfiprintf_r+0x1ea>
1006c328:	bf00      	nop
1006c32a:	9004      	str	r0, [sp, #16]
1006c32c:	9b04      	ldr	r3, [sp, #16]
1006c32e:	3301      	adds	r3, #1
1006c330:	d1d6      	bne.n	1006c2e0 <_vfiprintf_r+0x1a0>
1006c332:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
1006c334:	07db      	lsls	r3, r3, #31
1006c336:	d405      	bmi.n	1006c344 <_vfiprintf_r+0x204>
1006c338:	89bb      	ldrh	r3, [r7, #12]
1006c33a:	059b      	lsls	r3, r3, #22
1006c33c:	d402      	bmi.n	1006c344 <_vfiprintf_r+0x204>
1006c33e:	6db8      	ldr	r0, [r7, #88]	@ 0x58
1006c340:	f7ff fcba 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006c344:	89bb      	ldrh	r3, [r7, #12]
1006c346:	065b      	lsls	r3, r3, #25
1006c348:	d500      	bpl.n	1006c34c <_vfiprintf_r+0x20c>
1006c34a:	e71e      	b.n	1006c18a <_vfiprintf_r+0x4a>
1006c34c:	980d      	ldr	r0, [sp, #52]	@ 0x34
1006c34e:	e71e      	b.n	1006c18e <_vfiprintf_r+0x4e>
1006c350:	aa07      	add	r2, sp, #28
1006c352:	9200      	str	r2, [sp, #0]
1006c354:	0021      	movs	r1, r4
1006c356:	003a      	movs	r2, r7
1006c358:	4b06      	ldr	r3, [pc, #24]	@ (1006c374 <_vfiprintf_r+0x234>)
1006c35a:	9803      	ldr	r0, [sp, #12]
1006c35c:	f000 f87c 	bl	1006c458 <_printf_i>
1006c360:	e7e3      	b.n	1006c32a <_vfiprintf_r+0x1ea>
1006c362:	46c0      	nop			@ (mov r8, r8)
1006c364:	1006ebc9 	.word	0x1006ebc9
1006c368:	1006ebc5 	.word	0x1006ebc5
1006c36c:	1006ebcf 	.word	0x1006ebcf
1006c370:	00000000 	.word	0x00000000
1006c374:	1006c11b 	.word	0x1006c11b

1006c378 <_printf_common>:
1006c378:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006c37a:	0016      	movs	r6, r2
1006c37c:	9301      	str	r3, [sp, #4]
1006c37e:	688a      	ldr	r2, [r1, #8]
1006c380:	690b      	ldr	r3, [r1, #16]
1006c382:	000c      	movs	r4, r1
1006c384:	9000      	str	r0, [sp, #0]
1006c386:	4293      	cmp	r3, r2
1006c388:	da00      	bge.n	1006c38c <_printf_common+0x14>
1006c38a:	0013      	movs	r3, r2
1006c38c:	0022      	movs	r2, r4
1006c38e:	6033      	str	r3, [r6, #0]
1006c390:	3243      	adds	r2, #67	@ 0x43
1006c392:	7812      	ldrb	r2, [r2, #0]
1006c394:	2a00      	cmp	r2, #0
1006c396:	d001      	beq.n	1006c39c <_printf_common+0x24>
1006c398:	3301      	adds	r3, #1
1006c39a:	6033      	str	r3, [r6, #0]
1006c39c:	6823      	ldr	r3, [r4, #0]
1006c39e:	069b      	lsls	r3, r3, #26
1006c3a0:	d502      	bpl.n	1006c3a8 <_printf_common+0x30>
1006c3a2:	6833      	ldr	r3, [r6, #0]
1006c3a4:	3302      	adds	r3, #2
1006c3a6:	6033      	str	r3, [r6, #0]
1006c3a8:	6822      	ldr	r2, [r4, #0]
1006c3aa:	2306      	movs	r3, #6
1006c3ac:	0015      	movs	r5, r2
1006c3ae:	401d      	ands	r5, r3
1006c3b0:	421a      	tst	r2, r3
1006c3b2:	d027      	beq.n	1006c404 <_printf_common+0x8c>
1006c3b4:	0023      	movs	r3, r4
1006c3b6:	3343      	adds	r3, #67	@ 0x43
1006c3b8:	781b      	ldrb	r3, [r3, #0]
1006c3ba:	1e5a      	subs	r2, r3, #1
1006c3bc:	4193      	sbcs	r3, r2
1006c3be:	6822      	ldr	r2, [r4, #0]
1006c3c0:	0692      	lsls	r2, r2, #26
1006c3c2:	d430      	bmi.n	1006c426 <_printf_common+0xae>
1006c3c4:	0022      	movs	r2, r4
1006c3c6:	9901      	ldr	r1, [sp, #4]
1006c3c8:	9800      	ldr	r0, [sp, #0]
1006c3ca:	9d08      	ldr	r5, [sp, #32]
1006c3cc:	3243      	adds	r2, #67	@ 0x43
1006c3ce:	47a8      	blx	r5
1006c3d0:	3001      	adds	r0, #1
1006c3d2:	d025      	beq.n	1006c420 <_printf_common+0xa8>
1006c3d4:	2206      	movs	r2, #6
1006c3d6:	6823      	ldr	r3, [r4, #0]
1006c3d8:	2500      	movs	r5, #0
1006c3da:	4013      	ands	r3, r2
1006c3dc:	2b04      	cmp	r3, #4
1006c3de:	d105      	bne.n	1006c3ec <_printf_common+0x74>
1006c3e0:	6833      	ldr	r3, [r6, #0]
1006c3e2:	68e5      	ldr	r5, [r4, #12]
1006c3e4:	1aed      	subs	r5, r5, r3
1006c3e6:	43eb      	mvns	r3, r5
1006c3e8:	17db      	asrs	r3, r3, #31
1006c3ea:	401d      	ands	r5, r3
1006c3ec:	68a3      	ldr	r3, [r4, #8]
1006c3ee:	6922      	ldr	r2, [r4, #16]
1006c3f0:	4293      	cmp	r3, r2
1006c3f2:	dd01      	ble.n	1006c3f8 <_printf_common+0x80>
1006c3f4:	1a9b      	subs	r3, r3, r2
1006c3f6:	18ed      	adds	r5, r5, r3
1006c3f8:	2600      	movs	r6, #0
1006c3fa:	42b5      	cmp	r5, r6
1006c3fc:	d120      	bne.n	1006c440 <_printf_common+0xc8>
1006c3fe:	2000      	movs	r0, #0
1006c400:	e010      	b.n	1006c424 <_printf_common+0xac>
1006c402:	3501      	adds	r5, #1
1006c404:	68e3      	ldr	r3, [r4, #12]
1006c406:	6832      	ldr	r2, [r6, #0]
1006c408:	1a9b      	subs	r3, r3, r2
1006c40a:	42ab      	cmp	r3, r5
1006c40c:	ddd2      	ble.n	1006c3b4 <_printf_common+0x3c>
1006c40e:	0022      	movs	r2, r4
1006c410:	2301      	movs	r3, #1
1006c412:	9901      	ldr	r1, [sp, #4]
1006c414:	9800      	ldr	r0, [sp, #0]
1006c416:	9f08      	ldr	r7, [sp, #32]
1006c418:	3219      	adds	r2, #25
1006c41a:	47b8      	blx	r7
1006c41c:	3001      	adds	r0, #1
1006c41e:	d1f0      	bne.n	1006c402 <_printf_common+0x8a>
1006c420:	2001      	movs	r0, #1
1006c422:	4240      	negs	r0, r0
1006c424:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006c426:	2030      	movs	r0, #48	@ 0x30
1006c428:	18e1      	adds	r1, r4, r3
1006c42a:	3143      	adds	r1, #67	@ 0x43
1006c42c:	7008      	strb	r0, [r1, #0]
1006c42e:	0021      	movs	r1, r4
1006c430:	1c5a      	adds	r2, r3, #1
1006c432:	3145      	adds	r1, #69	@ 0x45
1006c434:	7809      	ldrb	r1, [r1, #0]
1006c436:	18a2      	adds	r2, r4, r2
1006c438:	3243      	adds	r2, #67	@ 0x43
1006c43a:	3302      	adds	r3, #2
1006c43c:	7011      	strb	r1, [r2, #0]
1006c43e:	e7c1      	b.n	1006c3c4 <_printf_common+0x4c>
1006c440:	0022      	movs	r2, r4
1006c442:	2301      	movs	r3, #1
1006c444:	9901      	ldr	r1, [sp, #4]
1006c446:	9800      	ldr	r0, [sp, #0]
1006c448:	9f08      	ldr	r7, [sp, #32]
1006c44a:	321a      	adds	r2, #26
1006c44c:	47b8      	blx	r7
1006c44e:	3001      	adds	r0, #1
1006c450:	d0e6      	beq.n	1006c420 <_printf_common+0xa8>
1006c452:	3601      	adds	r6, #1
1006c454:	e7d1      	b.n	1006c3fa <_printf_common+0x82>
	...

1006c458 <_printf_i>:
1006c458:	b5f0      	push	{r4, r5, r6, r7, lr}
1006c45a:	b08b      	sub	sp, #44	@ 0x2c
1006c45c:	9206      	str	r2, [sp, #24]
1006c45e:	000a      	movs	r2, r1
1006c460:	3243      	adds	r2, #67	@ 0x43
1006c462:	9307      	str	r3, [sp, #28]
1006c464:	9005      	str	r0, [sp, #20]
1006c466:	9203      	str	r2, [sp, #12]
1006c468:	7e0a      	ldrb	r2, [r1, #24]
1006c46a:	000c      	movs	r4, r1
1006c46c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1006c46e:	2a78      	cmp	r2, #120	@ 0x78
1006c470:	d809      	bhi.n	1006c486 <_printf_i+0x2e>
1006c472:	2a62      	cmp	r2, #98	@ 0x62
1006c474:	d80b      	bhi.n	1006c48e <_printf_i+0x36>
1006c476:	2a00      	cmp	r2, #0
1006c478:	d100      	bne.n	1006c47c <_printf_i+0x24>
1006c47a:	e0bc      	b.n	1006c5f6 <_printf_i+0x19e>
1006c47c:	497b      	ldr	r1, [pc, #492]	@ (1006c66c <_printf_i+0x214>)
1006c47e:	9104      	str	r1, [sp, #16]
1006c480:	2a58      	cmp	r2, #88	@ 0x58
1006c482:	d100      	bne.n	1006c486 <_printf_i+0x2e>
1006c484:	e090      	b.n	1006c5a8 <_printf_i+0x150>
1006c486:	0025      	movs	r5, r4
1006c488:	3542      	adds	r5, #66	@ 0x42
1006c48a:	702a      	strb	r2, [r5, #0]
1006c48c:	e022      	b.n	1006c4d4 <_printf_i+0x7c>
1006c48e:	0010      	movs	r0, r2
1006c490:	3863      	subs	r0, #99	@ 0x63
1006c492:	2815      	cmp	r0, #21
1006c494:	d8f7      	bhi.n	1006c486 <_printf_i+0x2e>
1006c496:	f7d3 fec9 	bl	1004022c <__gnu_thumb1_case_shi>
1006c49a:	0016      	.short	0x0016
1006c49c:	fff6001f 	.word	0xfff6001f
1006c4a0:	fff6fff6 	.word	0xfff6fff6
1006c4a4:	001ffff6 	.word	0x001ffff6
1006c4a8:	fff6fff6 	.word	0xfff6fff6
1006c4ac:	fff6fff6 	.word	0xfff6fff6
1006c4b0:	003600a1 	.word	0x003600a1
1006c4b4:	fff60080 	.word	0xfff60080
1006c4b8:	00b2fff6 	.word	0x00b2fff6
1006c4bc:	0036fff6 	.word	0x0036fff6
1006c4c0:	fff6fff6 	.word	0xfff6fff6
1006c4c4:	0084      	.short	0x0084
1006c4c6:	0025      	movs	r5, r4
1006c4c8:	681a      	ldr	r2, [r3, #0]
1006c4ca:	3542      	adds	r5, #66	@ 0x42
1006c4cc:	1d11      	adds	r1, r2, #4
1006c4ce:	6019      	str	r1, [r3, #0]
1006c4d0:	6813      	ldr	r3, [r2, #0]
1006c4d2:	702b      	strb	r3, [r5, #0]
1006c4d4:	2301      	movs	r3, #1
1006c4d6:	e0a0      	b.n	1006c61a <_printf_i+0x1c2>
1006c4d8:	6818      	ldr	r0, [r3, #0]
1006c4da:	6809      	ldr	r1, [r1, #0]
1006c4dc:	1d02      	adds	r2, r0, #4
1006c4de:	060d      	lsls	r5, r1, #24
1006c4e0:	d50b      	bpl.n	1006c4fa <_printf_i+0xa2>
1006c4e2:	6806      	ldr	r6, [r0, #0]
1006c4e4:	601a      	str	r2, [r3, #0]
1006c4e6:	2e00      	cmp	r6, #0
1006c4e8:	da03      	bge.n	1006c4f2 <_printf_i+0x9a>
1006c4ea:	232d      	movs	r3, #45	@ 0x2d
1006c4ec:	9a03      	ldr	r2, [sp, #12]
1006c4ee:	4276      	negs	r6, r6
1006c4f0:	7013      	strb	r3, [r2, #0]
1006c4f2:	4b5e      	ldr	r3, [pc, #376]	@ (1006c66c <_printf_i+0x214>)
1006c4f4:	270a      	movs	r7, #10
1006c4f6:	9304      	str	r3, [sp, #16]
1006c4f8:	e018      	b.n	1006c52c <_printf_i+0xd4>
1006c4fa:	6806      	ldr	r6, [r0, #0]
1006c4fc:	601a      	str	r2, [r3, #0]
1006c4fe:	0649      	lsls	r1, r1, #25
1006c500:	d5f1      	bpl.n	1006c4e6 <_printf_i+0x8e>
1006c502:	b236      	sxth	r6, r6
1006c504:	e7ef      	b.n	1006c4e6 <_printf_i+0x8e>
1006c506:	6808      	ldr	r0, [r1, #0]
1006c508:	6819      	ldr	r1, [r3, #0]
1006c50a:	c940      	ldmia	r1!, {r6}
1006c50c:	0605      	lsls	r5, r0, #24
1006c50e:	d402      	bmi.n	1006c516 <_printf_i+0xbe>
1006c510:	0640      	lsls	r0, r0, #25
1006c512:	d500      	bpl.n	1006c516 <_printf_i+0xbe>
1006c514:	b2b6      	uxth	r6, r6
1006c516:	6019      	str	r1, [r3, #0]
1006c518:	4b54      	ldr	r3, [pc, #336]	@ (1006c66c <_printf_i+0x214>)
1006c51a:	270a      	movs	r7, #10
1006c51c:	9304      	str	r3, [sp, #16]
1006c51e:	2a6f      	cmp	r2, #111	@ 0x6f
1006c520:	d100      	bne.n	1006c524 <_printf_i+0xcc>
1006c522:	3f02      	subs	r7, #2
1006c524:	0023      	movs	r3, r4
1006c526:	2200      	movs	r2, #0
1006c528:	3343      	adds	r3, #67	@ 0x43
1006c52a:	701a      	strb	r2, [r3, #0]
1006c52c:	6863      	ldr	r3, [r4, #4]
1006c52e:	60a3      	str	r3, [r4, #8]
1006c530:	2b00      	cmp	r3, #0
1006c532:	db03      	blt.n	1006c53c <_printf_i+0xe4>
1006c534:	2104      	movs	r1, #4
1006c536:	6822      	ldr	r2, [r4, #0]
1006c538:	438a      	bics	r2, r1
1006c53a:	6022      	str	r2, [r4, #0]
1006c53c:	2e00      	cmp	r6, #0
1006c53e:	d102      	bne.n	1006c546 <_printf_i+0xee>
1006c540:	9d03      	ldr	r5, [sp, #12]
1006c542:	2b00      	cmp	r3, #0
1006c544:	d00c      	beq.n	1006c560 <_printf_i+0x108>
1006c546:	9d03      	ldr	r5, [sp, #12]
1006c548:	0030      	movs	r0, r6
1006c54a:	0039      	movs	r1, r7
1006c54c:	f7d3 fefe 	bl	1004034c <__aeabi_uidivmod>
1006c550:	9b04      	ldr	r3, [sp, #16]
1006c552:	3d01      	subs	r5, #1
1006c554:	5c5b      	ldrb	r3, [r3, r1]
1006c556:	702b      	strb	r3, [r5, #0]
1006c558:	0033      	movs	r3, r6
1006c55a:	0006      	movs	r6, r0
1006c55c:	429f      	cmp	r7, r3
1006c55e:	d9f3      	bls.n	1006c548 <_printf_i+0xf0>
1006c560:	2f08      	cmp	r7, #8
1006c562:	d109      	bne.n	1006c578 <_printf_i+0x120>
1006c564:	6823      	ldr	r3, [r4, #0]
1006c566:	07db      	lsls	r3, r3, #31
1006c568:	d506      	bpl.n	1006c578 <_printf_i+0x120>
1006c56a:	6862      	ldr	r2, [r4, #4]
1006c56c:	6923      	ldr	r3, [r4, #16]
1006c56e:	429a      	cmp	r2, r3
1006c570:	dc02      	bgt.n	1006c578 <_printf_i+0x120>
1006c572:	2330      	movs	r3, #48	@ 0x30
1006c574:	3d01      	subs	r5, #1
1006c576:	702b      	strb	r3, [r5, #0]
1006c578:	9b03      	ldr	r3, [sp, #12]
1006c57a:	1b5b      	subs	r3, r3, r5
1006c57c:	6123      	str	r3, [r4, #16]
1006c57e:	9b07      	ldr	r3, [sp, #28]
1006c580:	0021      	movs	r1, r4
1006c582:	9300      	str	r3, [sp, #0]
1006c584:	9805      	ldr	r0, [sp, #20]
1006c586:	9b06      	ldr	r3, [sp, #24]
1006c588:	aa09      	add	r2, sp, #36	@ 0x24
1006c58a:	f7ff fef5 	bl	1006c378 <_printf_common>
1006c58e:	3001      	adds	r0, #1
1006c590:	d148      	bne.n	1006c624 <_printf_i+0x1cc>
1006c592:	2001      	movs	r0, #1
1006c594:	4240      	negs	r0, r0
1006c596:	b00b      	add	sp, #44	@ 0x2c
1006c598:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006c59a:	2220      	movs	r2, #32
1006c59c:	6809      	ldr	r1, [r1, #0]
1006c59e:	430a      	orrs	r2, r1
1006c5a0:	6022      	str	r2, [r4, #0]
1006c5a2:	2278      	movs	r2, #120	@ 0x78
1006c5a4:	4932      	ldr	r1, [pc, #200]	@ (1006c670 <_printf_i+0x218>)
1006c5a6:	9104      	str	r1, [sp, #16]
1006c5a8:	0021      	movs	r1, r4
1006c5aa:	3145      	adds	r1, #69	@ 0x45
1006c5ac:	700a      	strb	r2, [r1, #0]
1006c5ae:	6819      	ldr	r1, [r3, #0]
1006c5b0:	6822      	ldr	r2, [r4, #0]
1006c5b2:	c940      	ldmia	r1!, {r6}
1006c5b4:	0610      	lsls	r0, r2, #24
1006c5b6:	d402      	bmi.n	1006c5be <_printf_i+0x166>
1006c5b8:	0650      	lsls	r0, r2, #25
1006c5ba:	d500      	bpl.n	1006c5be <_printf_i+0x166>
1006c5bc:	b2b6      	uxth	r6, r6
1006c5be:	6019      	str	r1, [r3, #0]
1006c5c0:	07d3      	lsls	r3, r2, #31
1006c5c2:	d502      	bpl.n	1006c5ca <_printf_i+0x172>
1006c5c4:	2320      	movs	r3, #32
1006c5c6:	4313      	orrs	r3, r2
1006c5c8:	6023      	str	r3, [r4, #0]
1006c5ca:	2e00      	cmp	r6, #0
1006c5cc:	d001      	beq.n	1006c5d2 <_printf_i+0x17a>
1006c5ce:	2710      	movs	r7, #16
1006c5d0:	e7a8      	b.n	1006c524 <_printf_i+0xcc>
1006c5d2:	2220      	movs	r2, #32
1006c5d4:	6823      	ldr	r3, [r4, #0]
1006c5d6:	4393      	bics	r3, r2
1006c5d8:	6023      	str	r3, [r4, #0]
1006c5da:	e7f8      	b.n	1006c5ce <_printf_i+0x176>
1006c5dc:	681a      	ldr	r2, [r3, #0]
1006c5de:	680d      	ldr	r5, [r1, #0]
1006c5e0:	1d10      	adds	r0, r2, #4
1006c5e2:	6949      	ldr	r1, [r1, #20]
1006c5e4:	6018      	str	r0, [r3, #0]
1006c5e6:	6813      	ldr	r3, [r2, #0]
1006c5e8:	062e      	lsls	r6, r5, #24
1006c5ea:	d501      	bpl.n	1006c5f0 <_printf_i+0x198>
1006c5ec:	6019      	str	r1, [r3, #0]
1006c5ee:	e002      	b.n	1006c5f6 <_printf_i+0x19e>
1006c5f0:	066d      	lsls	r5, r5, #25
1006c5f2:	d5fb      	bpl.n	1006c5ec <_printf_i+0x194>
1006c5f4:	8019      	strh	r1, [r3, #0]
1006c5f6:	2300      	movs	r3, #0
1006c5f8:	9d03      	ldr	r5, [sp, #12]
1006c5fa:	6123      	str	r3, [r4, #16]
1006c5fc:	e7bf      	b.n	1006c57e <_printf_i+0x126>
1006c5fe:	681a      	ldr	r2, [r3, #0]
1006c600:	1d11      	adds	r1, r2, #4
1006c602:	6019      	str	r1, [r3, #0]
1006c604:	6815      	ldr	r5, [r2, #0]
1006c606:	2100      	movs	r1, #0
1006c608:	0028      	movs	r0, r5
1006c60a:	6862      	ldr	r2, [r4, #4]
1006c60c:	f000 fb87 	bl	1006cd1e <memchr>
1006c610:	2800      	cmp	r0, #0
1006c612:	d001      	beq.n	1006c618 <_printf_i+0x1c0>
1006c614:	1b40      	subs	r0, r0, r5
1006c616:	6060      	str	r0, [r4, #4]
1006c618:	6863      	ldr	r3, [r4, #4]
1006c61a:	6123      	str	r3, [r4, #16]
1006c61c:	2300      	movs	r3, #0
1006c61e:	9a03      	ldr	r2, [sp, #12]
1006c620:	7013      	strb	r3, [r2, #0]
1006c622:	e7ac      	b.n	1006c57e <_printf_i+0x126>
1006c624:	002a      	movs	r2, r5
1006c626:	6923      	ldr	r3, [r4, #16]
1006c628:	9906      	ldr	r1, [sp, #24]
1006c62a:	9805      	ldr	r0, [sp, #20]
1006c62c:	9d07      	ldr	r5, [sp, #28]
1006c62e:	47a8      	blx	r5
1006c630:	3001      	adds	r0, #1
1006c632:	d0ae      	beq.n	1006c592 <_printf_i+0x13a>
1006c634:	6823      	ldr	r3, [r4, #0]
1006c636:	079b      	lsls	r3, r3, #30
1006c638:	d415      	bmi.n	1006c666 <_printf_i+0x20e>
1006c63a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1006c63c:	68e0      	ldr	r0, [r4, #12]
1006c63e:	4298      	cmp	r0, r3
1006c640:	daa9      	bge.n	1006c596 <_printf_i+0x13e>
1006c642:	0018      	movs	r0, r3
1006c644:	e7a7      	b.n	1006c596 <_printf_i+0x13e>
1006c646:	0022      	movs	r2, r4
1006c648:	2301      	movs	r3, #1
1006c64a:	9906      	ldr	r1, [sp, #24]
1006c64c:	9805      	ldr	r0, [sp, #20]
1006c64e:	9e07      	ldr	r6, [sp, #28]
1006c650:	3219      	adds	r2, #25
1006c652:	47b0      	blx	r6
1006c654:	3001      	adds	r0, #1
1006c656:	d09c      	beq.n	1006c592 <_printf_i+0x13a>
1006c658:	3501      	adds	r5, #1
1006c65a:	68e3      	ldr	r3, [r4, #12]
1006c65c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1006c65e:	1a9b      	subs	r3, r3, r2
1006c660:	42ab      	cmp	r3, r5
1006c662:	dcf0      	bgt.n	1006c646 <_printf_i+0x1ee>
1006c664:	e7e9      	b.n	1006c63a <_printf_i+0x1e2>
1006c666:	2500      	movs	r5, #0
1006c668:	e7f7      	b.n	1006c65a <_printf_i+0x202>
1006c66a:	46c0      	nop			@ (mov r8, r8)
1006c66c:	1006ebd6 	.word	0x1006ebd6
1006c670:	1006ebe7 	.word	0x1006ebe7

1006c674 <_scanf_chars>:
1006c674:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006c676:	0015      	movs	r5, r2
1006c678:	688a      	ldr	r2, [r1, #8]
1006c67a:	000c      	movs	r4, r1
1006c67c:	9001      	str	r0, [sp, #4]
1006c67e:	2a00      	cmp	r2, #0
1006c680:	d104      	bne.n	1006c68c <_scanf_chars+0x18>
1006c682:	698a      	ldr	r2, [r1, #24]
1006c684:	2a00      	cmp	r2, #0
1006c686:	d117      	bne.n	1006c6b8 <_scanf_chars+0x44>
1006c688:	3201      	adds	r2, #1
1006c68a:	60a2      	str	r2, [r4, #8]
1006c68c:	6822      	ldr	r2, [r4, #0]
1006c68e:	06d2      	lsls	r2, r2, #27
1006c690:	d403      	bmi.n	1006c69a <_scanf_chars+0x26>
1006c692:	681a      	ldr	r2, [r3, #0]
1006c694:	1d11      	adds	r1, r2, #4
1006c696:	6019      	str	r1, [r3, #0]
1006c698:	6817      	ldr	r7, [r2, #0]
1006c69a:	2600      	movs	r6, #0
1006c69c:	69a0      	ldr	r0, [r4, #24]
1006c69e:	2800      	cmp	r0, #0
1006c6a0:	d016      	beq.n	1006c6d0 <_scanf_chars+0x5c>
1006c6a2:	2801      	cmp	r0, #1
1006c6a4:	d10b      	bne.n	1006c6be <_scanf_chars+0x4a>
1006c6a6:	682b      	ldr	r3, [r5, #0]
1006c6a8:	6962      	ldr	r2, [r4, #20]
1006c6aa:	781b      	ldrb	r3, [r3, #0]
1006c6ac:	5cd3      	ldrb	r3, [r2, r3]
1006c6ae:	2b00      	cmp	r3, #0
1006c6b0:	d10e      	bne.n	1006c6d0 <_scanf_chars+0x5c>
1006c6b2:	2e00      	cmp	r6, #0
1006c6b4:	d03b      	beq.n	1006c72e <_scanf_chars+0xba>
1006c6b6:	e029      	b.n	1006c70c <_scanf_chars+0x98>
1006c6b8:	2201      	movs	r2, #1
1006c6ba:	4252      	negs	r2, r2
1006c6bc:	e7e5      	b.n	1006c68a <_scanf_chars+0x16>
1006c6be:	2802      	cmp	r0, #2
1006c6c0:	d124      	bne.n	1006c70c <_scanf_chars+0x98>
1006c6c2:	682b      	ldr	r3, [r5, #0]
1006c6c4:	4a1a      	ldr	r2, [pc, #104]	@ (1006c730 <_scanf_chars+0xbc>)
1006c6c6:	781b      	ldrb	r3, [r3, #0]
1006c6c8:	5cd3      	ldrb	r3, [r2, r3]
1006c6ca:	2208      	movs	r2, #8
1006c6cc:	4213      	tst	r3, r2
1006c6ce:	d11d      	bne.n	1006c70c <_scanf_chars+0x98>
1006c6d0:	2210      	movs	r2, #16
1006c6d2:	6823      	ldr	r3, [r4, #0]
1006c6d4:	3601      	adds	r6, #1
1006c6d6:	4213      	tst	r3, r2
1006c6d8:	d103      	bne.n	1006c6e2 <_scanf_chars+0x6e>
1006c6da:	682b      	ldr	r3, [r5, #0]
1006c6dc:	781b      	ldrb	r3, [r3, #0]
1006c6de:	703b      	strb	r3, [r7, #0]
1006c6e0:	3701      	adds	r7, #1
1006c6e2:	682a      	ldr	r2, [r5, #0]
1006c6e4:	686b      	ldr	r3, [r5, #4]
1006c6e6:	3201      	adds	r2, #1
1006c6e8:	602a      	str	r2, [r5, #0]
1006c6ea:	68a2      	ldr	r2, [r4, #8]
1006c6ec:	3b01      	subs	r3, #1
1006c6ee:	3a01      	subs	r2, #1
1006c6f0:	606b      	str	r3, [r5, #4]
1006c6f2:	60a2      	str	r2, [r4, #8]
1006c6f4:	2a00      	cmp	r2, #0
1006c6f6:	d009      	beq.n	1006c70c <_scanf_chars+0x98>
1006c6f8:	2b00      	cmp	r3, #0
1006c6fa:	dccf      	bgt.n	1006c69c <_scanf_chars+0x28>
1006c6fc:	23c0      	movs	r3, #192	@ 0xc0
1006c6fe:	005b      	lsls	r3, r3, #1
1006c700:	0029      	movs	r1, r5
1006c702:	58e3      	ldr	r3, [r4, r3]
1006c704:	9801      	ldr	r0, [sp, #4]
1006c706:	4798      	blx	r3
1006c708:	2800      	cmp	r0, #0
1006c70a:	d0c7      	beq.n	1006c69c <_scanf_chars+0x28>
1006c70c:	6822      	ldr	r2, [r4, #0]
1006c70e:	2310      	movs	r3, #16
1006c710:	0011      	movs	r1, r2
1006c712:	4019      	ands	r1, r3
1006c714:	421a      	tst	r2, r3
1006c716:	d106      	bne.n	1006c726 <_scanf_chars+0xb2>
1006c718:	68e3      	ldr	r3, [r4, #12]
1006c71a:	3301      	adds	r3, #1
1006c71c:	60e3      	str	r3, [r4, #12]
1006c71e:	69a3      	ldr	r3, [r4, #24]
1006c720:	2b00      	cmp	r3, #0
1006c722:	d000      	beq.n	1006c726 <_scanf_chars+0xb2>
1006c724:	7039      	strb	r1, [r7, #0]
1006c726:	2000      	movs	r0, #0
1006c728:	6923      	ldr	r3, [r4, #16]
1006c72a:	199b      	adds	r3, r3, r6
1006c72c:	6123      	str	r3, [r4, #16]
1006c72e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006c730:	1006eac5 	.word	0x1006eac5

1006c734 <_scanf_i>:
1006c734:	b5f0      	push	{r4, r5, r6, r7, lr}
1006c736:	b08b      	sub	sp, #44	@ 0x2c
1006c738:	9301      	str	r3, [sp, #4]
1006c73a:	4b78      	ldr	r3, [pc, #480]	@ (1006c91c <_scanf_i+0x1e8>)
1006c73c:	0016      	movs	r6, r2
1006c73e:	9004      	str	r0, [sp, #16]
1006c740:	aa07      	add	r2, sp, #28
1006c742:	cba1      	ldmia	r3!, {r0, r5, r7}
1006c744:	c2a1      	stmia	r2!, {r0, r5, r7}
1006c746:	4a76      	ldr	r2, [pc, #472]	@ (1006c920 <_scanf_i+0x1ec>)
1006c748:	698b      	ldr	r3, [r1, #24]
1006c74a:	000c      	movs	r4, r1
1006c74c:	9205      	str	r2, [sp, #20]
1006c74e:	2b03      	cmp	r3, #3
1006c750:	d101      	bne.n	1006c756 <_scanf_i+0x22>
1006c752:	4b74      	ldr	r3, [pc, #464]	@ (1006c924 <_scanf_i+0x1f0>)
1006c754:	9305      	str	r3, [sp, #20]
1006c756:	22ae      	movs	r2, #174	@ 0xae
1006c758:	2000      	movs	r0, #0
1006c75a:	68a3      	ldr	r3, [r4, #8]
1006c75c:	0052      	lsls	r2, r2, #1
1006c75e:	1e59      	subs	r1, r3, #1
1006c760:	9003      	str	r0, [sp, #12]
1006c762:	4291      	cmp	r1, r2
1006c764:	d905      	bls.n	1006c772 <_scanf_i+0x3e>
1006c766:	3b5e      	subs	r3, #94	@ 0x5e
1006c768:	3bff      	subs	r3, #255	@ 0xff
1006c76a:	9303      	str	r3, [sp, #12]
1006c76c:	235e      	movs	r3, #94	@ 0x5e
1006c76e:	33ff      	adds	r3, #255	@ 0xff
1006c770:	60a3      	str	r3, [r4, #8]
1006c772:	0023      	movs	r3, r4
1006c774:	331c      	adds	r3, #28
1006c776:	9300      	str	r3, [sp, #0]
1006c778:	23d0      	movs	r3, #208	@ 0xd0
1006c77a:	2700      	movs	r7, #0
1006c77c:	6822      	ldr	r2, [r4, #0]
1006c77e:	011b      	lsls	r3, r3, #4
1006c780:	4313      	orrs	r3, r2
1006c782:	6023      	str	r3, [r4, #0]
1006c784:	9b00      	ldr	r3, [sp, #0]
1006c786:	9302      	str	r3, [sp, #8]
1006c788:	6833      	ldr	r3, [r6, #0]
1006c78a:	a807      	add	r0, sp, #28
1006c78c:	7819      	ldrb	r1, [r3, #0]
1006c78e:	00bb      	lsls	r3, r7, #2
1006c790:	2202      	movs	r2, #2
1006c792:	5818      	ldr	r0, [r3, r0]
1006c794:	f000 fac3 	bl	1006cd1e <memchr>
1006c798:	2800      	cmp	r0, #0
1006c79a:	d029      	beq.n	1006c7f0 <_scanf_i+0xbc>
1006c79c:	2f01      	cmp	r7, #1
1006c79e:	d15e      	bne.n	1006c85e <_scanf_i+0x12a>
1006c7a0:	6863      	ldr	r3, [r4, #4]
1006c7a2:	2b00      	cmp	r3, #0
1006c7a4:	d106      	bne.n	1006c7b4 <_scanf_i+0x80>
1006c7a6:	3308      	adds	r3, #8
1006c7a8:	6822      	ldr	r2, [r4, #0]
1006c7aa:	6063      	str	r3, [r4, #4]
1006c7ac:	33f9      	adds	r3, #249	@ 0xf9
1006c7ae:	33ff      	adds	r3, #255	@ 0xff
1006c7b0:	4313      	orrs	r3, r2
1006c7b2:	6023      	str	r3, [r4, #0]
1006c7b4:	6823      	ldr	r3, [r4, #0]
1006c7b6:	4a5c      	ldr	r2, [pc, #368]	@ (1006c928 <_scanf_i+0x1f4>)
1006c7b8:	4013      	ands	r3, r2
1006c7ba:	6023      	str	r3, [r4, #0]
1006c7bc:	68a3      	ldr	r3, [r4, #8]
1006c7be:	1e5a      	subs	r2, r3, #1
1006c7c0:	60a2      	str	r2, [r4, #8]
1006c7c2:	2b00      	cmp	r3, #0
1006c7c4:	d014      	beq.n	1006c7f0 <_scanf_i+0xbc>
1006c7c6:	6833      	ldr	r3, [r6, #0]
1006c7c8:	1c5a      	adds	r2, r3, #1
1006c7ca:	6032      	str	r2, [r6, #0]
1006c7cc:	781b      	ldrb	r3, [r3, #0]
1006c7ce:	9a02      	ldr	r2, [sp, #8]
1006c7d0:	7013      	strb	r3, [r2, #0]
1006c7d2:	6873      	ldr	r3, [r6, #4]
1006c7d4:	1c55      	adds	r5, r2, #1
1006c7d6:	3b01      	subs	r3, #1
1006c7d8:	6073      	str	r3, [r6, #4]
1006c7da:	2b00      	cmp	r3, #0
1006c7dc:	dc07      	bgt.n	1006c7ee <_scanf_i+0xba>
1006c7de:	23c0      	movs	r3, #192	@ 0xc0
1006c7e0:	005b      	lsls	r3, r3, #1
1006c7e2:	0031      	movs	r1, r6
1006c7e4:	58e3      	ldr	r3, [r4, r3]
1006c7e6:	9804      	ldr	r0, [sp, #16]
1006c7e8:	4798      	blx	r3
1006c7ea:	2800      	cmp	r0, #0
1006c7ec:	d17e      	bne.n	1006c8ec <_scanf_i+0x1b8>
1006c7ee:	9502      	str	r5, [sp, #8]
1006c7f0:	3701      	adds	r7, #1
1006c7f2:	2f03      	cmp	r7, #3
1006c7f4:	d1c8      	bne.n	1006c788 <_scanf_i+0x54>
1006c7f6:	6863      	ldr	r3, [r4, #4]
1006c7f8:	2b00      	cmp	r3, #0
1006c7fa:	d101      	bne.n	1006c800 <_scanf_i+0xcc>
1006c7fc:	330a      	adds	r3, #10
1006c7fe:	6063      	str	r3, [r4, #4]
1006c800:	2700      	movs	r7, #0
1006c802:	6863      	ldr	r3, [r4, #4]
1006c804:	4949      	ldr	r1, [pc, #292]	@ (1006c92c <_scanf_i+0x1f8>)
1006c806:	6960      	ldr	r0, [r4, #20]
1006c808:	1ac9      	subs	r1, r1, r3
1006c80a:	f000 f9e6 	bl	1006cbda <__sccl>
1006c80e:	9d02      	ldr	r5, [sp, #8]
1006c810:	68a3      	ldr	r3, [r4, #8]
1006c812:	6820      	ldr	r0, [r4, #0]
1006c814:	9302      	str	r3, [sp, #8]
1006c816:	2b00      	cmp	r3, #0
1006c818:	d03f      	beq.n	1006c89a <_scanf_i+0x166>
1006c81a:	6831      	ldr	r1, [r6, #0]
1006c81c:	6963      	ldr	r3, [r4, #20]
1006c81e:	780a      	ldrb	r2, [r1, #0]
1006c820:	5c9b      	ldrb	r3, [r3, r2]
1006c822:	2b00      	cmp	r3, #0
1006c824:	d039      	beq.n	1006c89a <_scanf_i+0x166>
1006c826:	2a30      	cmp	r2, #48	@ 0x30
1006c828:	d128      	bne.n	1006c87c <_scanf_i+0x148>
1006c82a:	2380      	movs	r3, #128	@ 0x80
1006c82c:	011b      	lsls	r3, r3, #4
1006c82e:	4218      	tst	r0, r3
1006c830:	d024      	beq.n	1006c87c <_scanf_i+0x148>
1006c832:	9b03      	ldr	r3, [sp, #12]
1006c834:	3701      	adds	r7, #1
1006c836:	2b00      	cmp	r3, #0
1006c838:	d005      	beq.n	1006c846 <_scanf_i+0x112>
1006c83a:	001a      	movs	r2, r3
1006c83c:	9b02      	ldr	r3, [sp, #8]
1006c83e:	3a01      	subs	r2, #1
1006c840:	3301      	adds	r3, #1
1006c842:	9203      	str	r2, [sp, #12]
1006c844:	60a3      	str	r3, [r4, #8]
1006c846:	6873      	ldr	r3, [r6, #4]
1006c848:	3b01      	subs	r3, #1
1006c84a:	6073      	str	r3, [r6, #4]
1006c84c:	2b00      	cmp	r3, #0
1006c84e:	dd1c      	ble.n	1006c88a <_scanf_i+0x156>
1006c850:	6833      	ldr	r3, [r6, #0]
1006c852:	3301      	adds	r3, #1
1006c854:	6033      	str	r3, [r6, #0]
1006c856:	68a3      	ldr	r3, [r4, #8]
1006c858:	3b01      	subs	r3, #1
1006c85a:	60a3      	str	r3, [r4, #8]
1006c85c:	e7d8      	b.n	1006c810 <_scanf_i+0xdc>
1006c85e:	2f02      	cmp	r7, #2
1006c860:	d1ac      	bne.n	1006c7bc <_scanf_i+0x88>
1006c862:	23c0      	movs	r3, #192	@ 0xc0
1006c864:	2180      	movs	r1, #128	@ 0x80
1006c866:	6822      	ldr	r2, [r4, #0]
1006c868:	00db      	lsls	r3, r3, #3
1006c86a:	4013      	ands	r3, r2
1006c86c:	0089      	lsls	r1, r1, #2
1006c86e:	428b      	cmp	r3, r1
1006c870:	d1c1      	bne.n	1006c7f6 <_scanf_i+0xc2>
1006c872:	2310      	movs	r3, #16
1006c874:	6063      	str	r3, [r4, #4]
1006c876:	33f0      	adds	r3, #240	@ 0xf0
1006c878:	4313      	orrs	r3, r2
1006c87a:	e79e      	b.n	1006c7ba <_scanf_i+0x86>
1006c87c:	4b2c      	ldr	r3, [pc, #176]	@ (1006c930 <_scanf_i+0x1fc>)
1006c87e:	4003      	ands	r3, r0
1006c880:	6023      	str	r3, [r4, #0]
1006c882:	780b      	ldrb	r3, [r1, #0]
1006c884:	702b      	strb	r3, [r5, #0]
1006c886:	3501      	adds	r5, #1
1006c888:	e7dd      	b.n	1006c846 <_scanf_i+0x112>
1006c88a:	23c0      	movs	r3, #192	@ 0xc0
1006c88c:	005b      	lsls	r3, r3, #1
1006c88e:	0031      	movs	r1, r6
1006c890:	58e3      	ldr	r3, [r4, r3]
1006c892:	9804      	ldr	r0, [sp, #16]
1006c894:	4798      	blx	r3
1006c896:	2800      	cmp	r0, #0
1006c898:	d0dd      	beq.n	1006c856 <_scanf_i+0x122>
1006c89a:	6823      	ldr	r3, [r4, #0]
1006c89c:	05db      	lsls	r3, r3, #23
1006c89e:	d50e      	bpl.n	1006c8be <_scanf_i+0x18a>
1006c8a0:	9b00      	ldr	r3, [sp, #0]
1006c8a2:	429d      	cmp	r5, r3
1006c8a4:	d907      	bls.n	1006c8b6 <_scanf_i+0x182>
1006c8a6:	23be      	movs	r3, #190	@ 0xbe
1006c8a8:	3d01      	subs	r5, #1
1006c8aa:	005b      	lsls	r3, r3, #1
1006c8ac:	0032      	movs	r2, r6
1006c8ae:	7829      	ldrb	r1, [r5, #0]
1006c8b0:	58e3      	ldr	r3, [r4, r3]
1006c8b2:	9804      	ldr	r0, [sp, #16]
1006c8b4:	4798      	blx	r3
1006c8b6:	9b00      	ldr	r3, [sp, #0]
1006c8b8:	2001      	movs	r0, #1
1006c8ba:	429d      	cmp	r5, r3
1006c8bc:	d029      	beq.n	1006c912 <_scanf_i+0x1de>
1006c8be:	6821      	ldr	r1, [r4, #0]
1006c8c0:	2310      	movs	r3, #16
1006c8c2:	000a      	movs	r2, r1
1006c8c4:	401a      	ands	r2, r3
1006c8c6:	4219      	tst	r1, r3
1006c8c8:	d11c      	bne.n	1006c904 <_scanf_i+0x1d0>
1006c8ca:	702a      	strb	r2, [r5, #0]
1006c8cc:	6863      	ldr	r3, [r4, #4]
1006c8ce:	9900      	ldr	r1, [sp, #0]
1006c8d0:	9804      	ldr	r0, [sp, #16]
1006c8d2:	9e05      	ldr	r6, [sp, #20]
1006c8d4:	47b0      	blx	r6
1006c8d6:	9b01      	ldr	r3, [sp, #4]
1006c8d8:	6822      	ldr	r2, [r4, #0]
1006c8da:	681b      	ldr	r3, [r3, #0]
1006c8dc:	0691      	lsls	r1, r2, #26
1006c8de:	d507      	bpl.n	1006c8f0 <_scanf_i+0x1bc>
1006c8e0:	9901      	ldr	r1, [sp, #4]
1006c8e2:	1d1a      	adds	r2, r3, #4
1006c8e4:	600a      	str	r2, [r1, #0]
1006c8e6:	681b      	ldr	r3, [r3, #0]
1006c8e8:	6018      	str	r0, [r3, #0]
1006c8ea:	e008      	b.n	1006c8fe <_scanf_i+0x1ca>
1006c8ec:	2700      	movs	r7, #0
1006c8ee:	e7d4      	b.n	1006c89a <_scanf_i+0x166>
1006c8f0:	1d19      	adds	r1, r3, #4
1006c8f2:	07d6      	lsls	r6, r2, #31
1006c8f4:	d50f      	bpl.n	1006c916 <_scanf_i+0x1e2>
1006c8f6:	9a01      	ldr	r2, [sp, #4]
1006c8f8:	6011      	str	r1, [r2, #0]
1006c8fa:	681b      	ldr	r3, [r3, #0]
1006c8fc:	8018      	strh	r0, [r3, #0]
1006c8fe:	68e3      	ldr	r3, [r4, #12]
1006c900:	3301      	adds	r3, #1
1006c902:	60e3      	str	r3, [r4, #12]
1006c904:	2000      	movs	r0, #0
1006c906:	9b00      	ldr	r3, [sp, #0]
1006c908:	1aed      	subs	r5, r5, r3
1006c90a:	6923      	ldr	r3, [r4, #16]
1006c90c:	19ed      	adds	r5, r5, r7
1006c90e:	195b      	adds	r3, r3, r5
1006c910:	6123      	str	r3, [r4, #16]
1006c912:	b00b      	add	sp, #44	@ 0x2c
1006c914:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006c916:	9a01      	ldr	r2, [sp, #4]
1006c918:	6011      	str	r1, [r2, #0]
1006c91a:	e7e4      	b.n	1006c8e6 <_scanf_i+0x1b2>
1006c91c:	1006e58c 	.word	0x1006e58c
1006c920:	1006cfb5 	.word	0x1006cfb5
1006c924:	1006cea9 	.word	0x1006cea9
1006c928:	fffffaff 	.word	0xfffffaff
1006c92c:	1006ec08 	.word	0x1006ec08
1006c930:	fffff6ff 	.word	0xfffff6ff

1006c934 <__sflush_r>:
1006c934:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006c936:	220c      	movs	r2, #12
1006c938:	5e8b      	ldrsh	r3, [r1, r2]
1006c93a:	0005      	movs	r5, r0
1006c93c:	000c      	movs	r4, r1
1006c93e:	071a      	lsls	r2, r3, #28
1006c940:	d456      	bmi.n	1006c9f0 <__sflush_r+0xbc>
1006c942:	684a      	ldr	r2, [r1, #4]
1006c944:	2a00      	cmp	r2, #0
1006c946:	dc02      	bgt.n	1006c94e <__sflush_r+0x1a>
1006c948:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
1006c94a:	2a00      	cmp	r2, #0
1006c94c:	dd4e      	ble.n	1006c9ec <__sflush_r+0xb8>
1006c94e:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
1006c950:	2f00      	cmp	r7, #0
1006c952:	d04b      	beq.n	1006c9ec <__sflush_r+0xb8>
1006c954:	2200      	movs	r2, #0
1006c956:	2080      	movs	r0, #128	@ 0x80
1006c958:	682e      	ldr	r6, [r5, #0]
1006c95a:	602a      	str	r2, [r5, #0]
1006c95c:	001a      	movs	r2, r3
1006c95e:	0140      	lsls	r0, r0, #5
1006c960:	6a21      	ldr	r1, [r4, #32]
1006c962:	4002      	ands	r2, r0
1006c964:	4203      	tst	r3, r0
1006c966:	d033      	beq.n	1006c9d0 <__sflush_r+0x9c>
1006c968:	6d62      	ldr	r2, [r4, #84]	@ 0x54
1006c96a:	89a3      	ldrh	r3, [r4, #12]
1006c96c:	075b      	lsls	r3, r3, #29
1006c96e:	d506      	bpl.n	1006c97e <__sflush_r+0x4a>
1006c970:	6863      	ldr	r3, [r4, #4]
1006c972:	1ad2      	subs	r2, r2, r3
1006c974:	6b63      	ldr	r3, [r4, #52]	@ 0x34
1006c976:	2b00      	cmp	r3, #0
1006c978:	d001      	beq.n	1006c97e <__sflush_r+0x4a>
1006c97a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
1006c97c:	1ad2      	subs	r2, r2, r3
1006c97e:	2300      	movs	r3, #0
1006c980:	0028      	movs	r0, r5
1006c982:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
1006c984:	6a21      	ldr	r1, [r4, #32]
1006c986:	47b8      	blx	r7
1006c988:	89a2      	ldrh	r2, [r4, #12]
1006c98a:	1c43      	adds	r3, r0, #1
1006c98c:	d106      	bne.n	1006c99c <__sflush_r+0x68>
1006c98e:	6829      	ldr	r1, [r5, #0]
1006c990:	291d      	cmp	r1, #29
1006c992:	d846      	bhi.n	1006ca22 <__sflush_r+0xee>
1006c994:	4b29      	ldr	r3, [pc, #164]	@ (1006ca3c <__sflush_r+0x108>)
1006c996:	410b      	asrs	r3, r1
1006c998:	07db      	lsls	r3, r3, #31
1006c99a:	d442      	bmi.n	1006ca22 <__sflush_r+0xee>
1006c99c:	2300      	movs	r3, #0
1006c99e:	6063      	str	r3, [r4, #4]
1006c9a0:	6923      	ldr	r3, [r4, #16]
1006c9a2:	6023      	str	r3, [r4, #0]
1006c9a4:	04d2      	lsls	r2, r2, #19
1006c9a6:	d505      	bpl.n	1006c9b4 <__sflush_r+0x80>
1006c9a8:	1c43      	adds	r3, r0, #1
1006c9aa:	d102      	bne.n	1006c9b2 <__sflush_r+0x7e>
1006c9ac:	682b      	ldr	r3, [r5, #0]
1006c9ae:	2b00      	cmp	r3, #0
1006c9b0:	d100      	bne.n	1006c9b4 <__sflush_r+0x80>
1006c9b2:	6560      	str	r0, [r4, #84]	@ 0x54
1006c9b4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
1006c9b6:	602e      	str	r6, [r5, #0]
1006c9b8:	2900      	cmp	r1, #0
1006c9ba:	d017      	beq.n	1006c9ec <__sflush_r+0xb8>
1006c9bc:	0023      	movs	r3, r4
1006c9be:	3344      	adds	r3, #68	@ 0x44
1006c9c0:	4299      	cmp	r1, r3
1006c9c2:	d002      	beq.n	1006c9ca <__sflush_r+0x96>
1006c9c4:	0028      	movs	r0, r5
1006c9c6:	f7ff f98b 	bl	1006bce0 <_free_r>
1006c9ca:	2300      	movs	r3, #0
1006c9cc:	6363      	str	r3, [r4, #52]	@ 0x34
1006c9ce:	e00d      	b.n	1006c9ec <__sflush_r+0xb8>
1006c9d0:	2301      	movs	r3, #1
1006c9d2:	0028      	movs	r0, r5
1006c9d4:	47b8      	blx	r7
1006c9d6:	0002      	movs	r2, r0
1006c9d8:	1c43      	adds	r3, r0, #1
1006c9da:	d1c6      	bne.n	1006c96a <__sflush_r+0x36>
1006c9dc:	682b      	ldr	r3, [r5, #0]
1006c9de:	2b00      	cmp	r3, #0
1006c9e0:	d0c3      	beq.n	1006c96a <__sflush_r+0x36>
1006c9e2:	2b1d      	cmp	r3, #29
1006c9e4:	d001      	beq.n	1006c9ea <__sflush_r+0xb6>
1006c9e6:	2b16      	cmp	r3, #22
1006c9e8:	d11a      	bne.n	1006ca20 <__sflush_r+0xec>
1006c9ea:	602e      	str	r6, [r5, #0]
1006c9ec:	2000      	movs	r0, #0
1006c9ee:	e01e      	b.n	1006ca2e <__sflush_r+0xfa>
1006c9f0:	690e      	ldr	r6, [r1, #16]
1006c9f2:	2e00      	cmp	r6, #0
1006c9f4:	d0fa      	beq.n	1006c9ec <__sflush_r+0xb8>
1006c9f6:	680f      	ldr	r7, [r1, #0]
1006c9f8:	600e      	str	r6, [r1, #0]
1006c9fa:	1bba      	subs	r2, r7, r6
1006c9fc:	9201      	str	r2, [sp, #4]
1006c9fe:	2200      	movs	r2, #0
1006ca00:	079b      	lsls	r3, r3, #30
1006ca02:	d100      	bne.n	1006ca06 <__sflush_r+0xd2>
1006ca04:	694a      	ldr	r2, [r1, #20]
1006ca06:	60a2      	str	r2, [r4, #8]
1006ca08:	9b01      	ldr	r3, [sp, #4]
1006ca0a:	2b00      	cmp	r3, #0
1006ca0c:	ddee      	ble.n	1006c9ec <__sflush_r+0xb8>
1006ca0e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
1006ca10:	0032      	movs	r2, r6
1006ca12:	001f      	movs	r7, r3
1006ca14:	0028      	movs	r0, r5
1006ca16:	9b01      	ldr	r3, [sp, #4]
1006ca18:	6a21      	ldr	r1, [r4, #32]
1006ca1a:	47b8      	blx	r7
1006ca1c:	2800      	cmp	r0, #0
1006ca1e:	dc07      	bgt.n	1006ca30 <__sflush_r+0xfc>
1006ca20:	89a2      	ldrh	r2, [r4, #12]
1006ca22:	2340      	movs	r3, #64	@ 0x40
1006ca24:	2001      	movs	r0, #1
1006ca26:	4313      	orrs	r3, r2
1006ca28:	b21b      	sxth	r3, r3
1006ca2a:	81a3      	strh	r3, [r4, #12]
1006ca2c:	4240      	negs	r0, r0
1006ca2e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006ca30:	9b01      	ldr	r3, [sp, #4]
1006ca32:	1836      	adds	r6, r6, r0
1006ca34:	1a1b      	subs	r3, r3, r0
1006ca36:	9301      	str	r3, [sp, #4]
1006ca38:	e7e6      	b.n	1006ca08 <__sflush_r+0xd4>
1006ca3a:	46c0      	nop			@ (mov r8, r8)
1006ca3c:	dfbffffe 	.word	0xdfbffffe

1006ca40 <_fflush_r>:
1006ca40:	690b      	ldr	r3, [r1, #16]
1006ca42:	b570      	push	{r4, r5, r6, lr}
1006ca44:	0005      	movs	r5, r0
1006ca46:	000c      	movs	r4, r1
1006ca48:	2b00      	cmp	r3, #0
1006ca4a:	d102      	bne.n	1006ca52 <_fflush_r+0x12>
1006ca4c:	2500      	movs	r5, #0
1006ca4e:	0028      	movs	r0, r5
1006ca50:	bd70      	pop	{r4, r5, r6, pc}
1006ca52:	2800      	cmp	r0, #0
1006ca54:	d004      	beq.n	1006ca60 <_fflush_r+0x20>
1006ca56:	6a03      	ldr	r3, [r0, #32]
1006ca58:	2b00      	cmp	r3, #0
1006ca5a:	d101      	bne.n	1006ca60 <_fflush_r+0x20>
1006ca5c:	f7fe fe10 	bl	1006b680 <__sinit>
1006ca60:	220c      	movs	r2, #12
1006ca62:	5ea3      	ldrsh	r3, [r4, r2]
1006ca64:	2b00      	cmp	r3, #0
1006ca66:	d0f1      	beq.n	1006ca4c <_fflush_r+0xc>
1006ca68:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1006ca6a:	07d2      	lsls	r2, r2, #31
1006ca6c:	d404      	bmi.n	1006ca78 <_fflush_r+0x38>
1006ca6e:	059b      	lsls	r3, r3, #22
1006ca70:	d402      	bmi.n	1006ca78 <_fflush_r+0x38>
1006ca72:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006ca74:	f7ff f91f 	bl	1006bcb6 <__retarget_lock_acquire_recursive>
1006ca78:	0028      	movs	r0, r5
1006ca7a:	0021      	movs	r1, r4
1006ca7c:	f7ff ff5a 	bl	1006c934 <__sflush_r>
1006ca80:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1006ca82:	0005      	movs	r5, r0
1006ca84:	07db      	lsls	r3, r3, #31
1006ca86:	d4e2      	bmi.n	1006ca4e <_fflush_r+0xe>
1006ca88:	89a3      	ldrh	r3, [r4, #12]
1006ca8a:	059b      	lsls	r3, r3, #22
1006ca8c:	d4df      	bmi.n	1006ca4e <_fflush_r+0xe>
1006ca8e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006ca90:	f7ff f912 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006ca94:	e7db      	b.n	1006ca4e <_fflush_r+0xe>
	...

1006ca98 <__swhatbuf_r>:
1006ca98:	b570      	push	{r4, r5, r6, lr}
1006ca9a:	000e      	movs	r6, r1
1006ca9c:	001d      	movs	r5, r3
1006ca9e:	230e      	movs	r3, #14
1006caa0:	5ec9      	ldrsh	r1, [r1, r3]
1006caa2:	0014      	movs	r4, r2
1006caa4:	b096      	sub	sp, #88	@ 0x58
1006caa6:	2900      	cmp	r1, #0
1006caa8:	da0c      	bge.n	1006cac4 <__swhatbuf_r+0x2c>
1006caaa:	89b2      	ldrh	r2, [r6, #12]
1006caac:	2380      	movs	r3, #128	@ 0x80
1006caae:	0011      	movs	r1, r2
1006cab0:	4019      	ands	r1, r3
1006cab2:	421a      	tst	r2, r3
1006cab4:	d114      	bne.n	1006cae0 <__swhatbuf_r+0x48>
1006cab6:	2380      	movs	r3, #128	@ 0x80
1006cab8:	00db      	lsls	r3, r3, #3
1006caba:	2000      	movs	r0, #0
1006cabc:	6029      	str	r1, [r5, #0]
1006cabe:	6023      	str	r3, [r4, #0]
1006cac0:	b016      	add	sp, #88	@ 0x58
1006cac2:	bd70      	pop	{r4, r5, r6, pc}
1006cac4:	466a      	mov	r2, sp
1006cac6:	f000 f8ff 	bl	1006ccc8 <_fstat_r>
1006caca:	2800      	cmp	r0, #0
1006cacc:	dbed      	blt.n	1006caaa <__swhatbuf_r+0x12>
1006cace:	23f0      	movs	r3, #240	@ 0xf0
1006cad0:	9901      	ldr	r1, [sp, #4]
1006cad2:	021b      	lsls	r3, r3, #8
1006cad4:	4019      	ands	r1, r3
1006cad6:	4b04      	ldr	r3, [pc, #16]	@ (1006cae8 <__swhatbuf_r+0x50>)
1006cad8:	18c9      	adds	r1, r1, r3
1006cada:	424b      	negs	r3, r1
1006cadc:	4159      	adcs	r1, r3
1006cade:	e7ea      	b.n	1006cab6 <__swhatbuf_r+0x1e>
1006cae0:	2100      	movs	r1, #0
1006cae2:	2340      	movs	r3, #64	@ 0x40
1006cae4:	e7e9      	b.n	1006caba <__swhatbuf_r+0x22>
1006cae6:	46c0      	nop			@ (mov r8, r8)
1006cae8:	ffffe000 	.word	0xffffe000

1006caec <__smakebuf_r>:
1006caec:	b5f0      	push	{r4, r5, r6, r7, lr}
1006caee:	2602      	movs	r6, #2
1006caf0:	898b      	ldrh	r3, [r1, #12]
1006caf2:	0005      	movs	r5, r0
1006caf4:	000c      	movs	r4, r1
1006caf6:	b085      	sub	sp, #20
1006caf8:	4233      	tst	r3, r6
1006cafa:	d007      	beq.n	1006cb0c <__smakebuf_r+0x20>
1006cafc:	0023      	movs	r3, r4
1006cafe:	3347      	adds	r3, #71	@ 0x47
1006cb00:	6023      	str	r3, [r4, #0]
1006cb02:	6123      	str	r3, [r4, #16]
1006cb04:	2301      	movs	r3, #1
1006cb06:	6163      	str	r3, [r4, #20]
1006cb08:	b005      	add	sp, #20
1006cb0a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006cb0c:	ab03      	add	r3, sp, #12
1006cb0e:	aa02      	add	r2, sp, #8
1006cb10:	f7ff ffc2 	bl	1006ca98 <__swhatbuf_r>
1006cb14:	9f02      	ldr	r7, [sp, #8]
1006cb16:	9001      	str	r0, [sp, #4]
1006cb18:	0039      	movs	r1, r7
1006cb1a:	0028      	movs	r0, r5
1006cb1c:	f7fe fc90 	bl	1006b440 <_malloc_r>
1006cb20:	2800      	cmp	r0, #0
1006cb22:	d108      	bne.n	1006cb36 <__smakebuf_r+0x4a>
1006cb24:	220c      	movs	r2, #12
1006cb26:	5ea3      	ldrsh	r3, [r4, r2]
1006cb28:	059a      	lsls	r2, r3, #22
1006cb2a:	d4ed      	bmi.n	1006cb08 <__smakebuf_r+0x1c>
1006cb2c:	2203      	movs	r2, #3
1006cb2e:	4393      	bics	r3, r2
1006cb30:	431e      	orrs	r6, r3
1006cb32:	81a6      	strh	r6, [r4, #12]
1006cb34:	e7e2      	b.n	1006cafc <__smakebuf_r+0x10>
1006cb36:	2380      	movs	r3, #128	@ 0x80
1006cb38:	89a2      	ldrh	r2, [r4, #12]
1006cb3a:	6020      	str	r0, [r4, #0]
1006cb3c:	4313      	orrs	r3, r2
1006cb3e:	81a3      	strh	r3, [r4, #12]
1006cb40:	9b03      	ldr	r3, [sp, #12]
1006cb42:	6120      	str	r0, [r4, #16]
1006cb44:	6167      	str	r7, [r4, #20]
1006cb46:	2b00      	cmp	r3, #0
1006cb48:	d00c      	beq.n	1006cb64 <__smakebuf_r+0x78>
1006cb4a:	0028      	movs	r0, r5
1006cb4c:	230e      	movs	r3, #14
1006cb4e:	5ee1      	ldrsh	r1, [r4, r3]
1006cb50:	f000 f8cc 	bl	1006ccec <_isatty_r>
1006cb54:	2800      	cmp	r0, #0
1006cb56:	d005      	beq.n	1006cb64 <__smakebuf_r+0x78>
1006cb58:	2303      	movs	r3, #3
1006cb5a:	89a2      	ldrh	r2, [r4, #12]
1006cb5c:	439a      	bics	r2, r3
1006cb5e:	3b02      	subs	r3, #2
1006cb60:	4313      	orrs	r3, r2
1006cb62:	81a3      	strh	r3, [r4, #12]
1006cb64:	89a3      	ldrh	r3, [r4, #12]
1006cb66:	9a01      	ldr	r2, [sp, #4]
1006cb68:	4313      	orrs	r3, r2
1006cb6a:	81a3      	strh	r3, [r4, #12]
1006cb6c:	e7cc      	b.n	1006cb08 <__smakebuf_r+0x1c>

1006cb6e <_putc_r>:
1006cb6e:	b570      	push	{r4, r5, r6, lr}
1006cb70:	0006      	movs	r6, r0
1006cb72:	000d      	movs	r5, r1
1006cb74:	0014      	movs	r4, r2
1006cb76:	2800      	cmp	r0, #0
1006cb78:	d004      	beq.n	1006cb84 <_putc_r+0x16>
1006cb7a:	6a03      	ldr	r3, [r0, #32]
1006cb7c:	2b00      	cmp	r3, #0
1006cb7e:	d101      	bne.n	1006cb84 <_putc_r+0x16>
1006cb80:	f7fe fd7e 	bl	1006b680 <__sinit>
1006cb84:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1006cb86:	07db      	lsls	r3, r3, #31
1006cb88:	d405      	bmi.n	1006cb96 <_putc_r+0x28>
1006cb8a:	89a3      	ldrh	r3, [r4, #12]
1006cb8c:	059b      	lsls	r3, r3, #22
1006cb8e:	d402      	bmi.n	1006cb96 <_putc_r+0x28>
1006cb90:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006cb92:	f7ff f890 	bl	1006bcb6 <__retarget_lock_acquire_recursive>
1006cb96:	68a3      	ldr	r3, [r4, #8]
1006cb98:	3b01      	subs	r3, #1
1006cb9a:	60a3      	str	r3, [r4, #8]
1006cb9c:	2b00      	cmp	r3, #0
1006cb9e:	da05      	bge.n	1006cbac <_putc_r+0x3e>
1006cba0:	69a2      	ldr	r2, [r4, #24]
1006cba2:	4293      	cmp	r3, r2
1006cba4:	db12      	blt.n	1006cbcc <_putc_r+0x5e>
1006cba6:	b2eb      	uxtb	r3, r5
1006cba8:	2b0a      	cmp	r3, #10
1006cbaa:	d00f      	beq.n	1006cbcc <_putc_r+0x5e>
1006cbac:	6823      	ldr	r3, [r4, #0]
1006cbae:	1c5a      	adds	r2, r3, #1
1006cbb0:	6022      	str	r2, [r4, #0]
1006cbb2:	701d      	strb	r5, [r3, #0]
1006cbb4:	b2ed      	uxtb	r5, r5
1006cbb6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
1006cbb8:	07db      	lsls	r3, r3, #31
1006cbba:	d405      	bmi.n	1006cbc8 <_putc_r+0x5a>
1006cbbc:	89a3      	ldrh	r3, [r4, #12]
1006cbbe:	059b      	lsls	r3, r3, #22
1006cbc0:	d402      	bmi.n	1006cbc8 <_putc_r+0x5a>
1006cbc2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1006cbc4:	f7ff f878 	bl	1006bcb8 <__retarget_lock_release_recursive>
1006cbc8:	0028      	movs	r0, r5
1006cbca:	bd70      	pop	{r4, r5, r6, pc}
1006cbcc:	0029      	movs	r1, r5
1006cbce:	0022      	movs	r2, r4
1006cbd0:	0030      	movs	r0, r6
1006cbd2:	f7fe ff2f 	bl	1006ba34 <__swbuf_r>
1006cbd6:	0005      	movs	r5, r0
1006cbd8:	e7ed      	b.n	1006cbb6 <_putc_r+0x48>

1006cbda <__sccl>:
1006cbda:	b570      	push	{r4, r5, r6, lr}
1006cbdc:	780b      	ldrb	r3, [r1, #0]
1006cbde:	0004      	movs	r4, r0
1006cbe0:	2b5e      	cmp	r3, #94	@ 0x5e
1006cbe2:	d018      	beq.n	1006cc16 <__sccl+0x3c>
1006cbe4:	2200      	movs	r2, #0
1006cbe6:	1c4d      	adds	r5, r1, #1
1006cbe8:	0021      	movs	r1, r4
1006cbea:	1c60      	adds	r0, r4, #1
1006cbec:	30ff      	adds	r0, #255	@ 0xff
1006cbee:	700a      	strb	r2, [r1, #0]
1006cbf0:	3101      	adds	r1, #1
1006cbf2:	4281      	cmp	r1, r0
1006cbf4:	d1fb      	bne.n	1006cbee <__sccl+0x14>
1006cbf6:	1e68      	subs	r0, r5, #1
1006cbf8:	2b00      	cmp	r3, #0
1006cbfa:	d00b      	beq.n	1006cc14 <__sccl+0x3a>
1006cbfc:	2101      	movs	r1, #1
1006cbfe:	404a      	eors	r2, r1
1006cc00:	0028      	movs	r0, r5
1006cc02:	54e2      	strb	r2, [r4, r3]
1006cc04:	7801      	ldrb	r1, [r0, #0]
1006cc06:	1c45      	adds	r5, r0, #1
1006cc08:	292d      	cmp	r1, #45	@ 0x2d
1006cc0a:	d00a      	beq.n	1006cc22 <__sccl+0x48>
1006cc0c:	295d      	cmp	r1, #93	@ 0x5d
1006cc0e:	d01b      	beq.n	1006cc48 <__sccl+0x6e>
1006cc10:	2900      	cmp	r1, #0
1006cc12:	d104      	bne.n	1006cc1e <__sccl+0x44>
1006cc14:	bd70      	pop	{r4, r5, r6, pc}
1006cc16:	2201      	movs	r2, #1
1006cc18:	784b      	ldrb	r3, [r1, #1]
1006cc1a:	1c8d      	adds	r5, r1, #2
1006cc1c:	e7e4      	b.n	1006cbe8 <__sccl+0xe>
1006cc1e:	000b      	movs	r3, r1
1006cc20:	e7ee      	b.n	1006cc00 <__sccl+0x26>
1006cc22:	7846      	ldrb	r6, [r0, #1]
1006cc24:	2e5d      	cmp	r6, #93	@ 0x5d
1006cc26:	d0fa      	beq.n	1006cc1e <__sccl+0x44>
1006cc28:	42b3      	cmp	r3, r6
1006cc2a:	dcf8      	bgt.n	1006cc1e <__sccl+0x44>
1006cc2c:	0019      	movs	r1, r3
1006cc2e:	3002      	adds	r0, #2
1006cc30:	3101      	adds	r1, #1
1006cc32:	5462      	strb	r2, [r4, r1]
1006cc34:	428e      	cmp	r6, r1
1006cc36:	dcfb      	bgt.n	1006cc30 <__sccl+0x56>
1006cc38:	2100      	movs	r1, #0
1006cc3a:	1c5d      	adds	r5, r3, #1
1006cc3c:	42b3      	cmp	r3, r6
1006cc3e:	da01      	bge.n	1006cc44 <__sccl+0x6a>
1006cc40:	1af1      	subs	r1, r6, r3
1006cc42:	3901      	subs	r1, #1
1006cc44:	186b      	adds	r3, r5, r1
1006cc46:	e7dd      	b.n	1006cc04 <__sccl+0x2a>
1006cc48:	0028      	movs	r0, r5
1006cc4a:	e7e3      	b.n	1006cc14 <__sccl+0x3a>

1006cc4c <__submore>:
1006cc4c:	000b      	movs	r3, r1
1006cc4e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006cc50:	6b4d      	ldr	r5, [r1, #52]	@ 0x34
1006cc52:	3344      	adds	r3, #68	@ 0x44
1006cc54:	000c      	movs	r4, r1
1006cc56:	429d      	cmp	r5, r3
1006cc58:	d11c      	bne.n	1006cc94 <__submore+0x48>
1006cc5a:	2680      	movs	r6, #128	@ 0x80
1006cc5c:	00f6      	lsls	r6, r6, #3
1006cc5e:	0031      	movs	r1, r6
1006cc60:	f7fe fbee 	bl	1006b440 <_malloc_r>
1006cc64:	2800      	cmp	r0, #0
1006cc66:	d102      	bne.n	1006cc6e <__submore+0x22>
1006cc68:	2001      	movs	r0, #1
1006cc6a:	4240      	negs	r0, r0
1006cc6c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006cc6e:	0023      	movs	r3, r4
1006cc70:	6360      	str	r0, [r4, #52]	@ 0x34
1006cc72:	63a6      	str	r6, [r4, #56]	@ 0x38
1006cc74:	3346      	adds	r3, #70	@ 0x46
1006cc76:	781a      	ldrb	r2, [r3, #0]
1006cc78:	4b10      	ldr	r3, [pc, #64]	@ (1006ccbc <__submore+0x70>)
1006cc7a:	54c2      	strb	r2, [r0, r3]
1006cc7c:	0023      	movs	r3, r4
1006cc7e:	3345      	adds	r3, #69	@ 0x45
1006cc80:	781a      	ldrb	r2, [r3, #0]
1006cc82:	4b0f      	ldr	r3, [pc, #60]	@ (1006ccc0 <__submore+0x74>)
1006cc84:	54c2      	strb	r2, [r0, r3]
1006cc86:	782a      	ldrb	r2, [r5, #0]
1006cc88:	4b0e      	ldr	r3, [pc, #56]	@ (1006ccc4 <__submore+0x78>)
1006cc8a:	54c2      	strb	r2, [r0, r3]
1006cc8c:	18c0      	adds	r0, r0, r3
1006cc8e:	6020      	str	r0, [r4, #0]
1006cc90:	2000      	movs	r0, #0
1006cc92:	e7eb      	b.n	1006cc6c <__submore+0x20>
1006cc94:	6b8e      	ldr	r6, [r1, #56]	@ 0x38
1006cc96:	0029      	movs	r1, r5
1006cc98:	0073      	lsls	r3, r6, #1
1006cc9a:	001a      	movs	r2, r3
1006cc9c:	9301      	str	r3, [sp, #4]
1006cc9e:	f000 f849 	bl	1006cd34 <_realloc_r>
1006cca2:	1e05      	subs	r5, r0, #0
1006cca4:	d0e0      	beq.n	1006cc68 <__submore+0x1c>
1006cca6:	1987      	adds	r7, r0, r6
1006cca8:	0001      	movs	r1, r0
1006ccaa:	0032      	movs	r2, r6
1006ccac:	0038      	movs	r0, r7
1006ccae:	f7ff f80d 	bl	1006bccc <memcpy>
1006ccb2:	9b01      	ldr	r3, [sp, #4]
1006ccb4:	6027      	str	r7, [r4, #0]
1006ccb6:	6365      	str	r5, [r4, #52]	@ 0x34
1006ccb8:	63a3      	str	r3, [r4, #56]	@ 0x38
1006ccba:	e7e9      	b.n	1006cc90 <__submore+0x44>
1006ccbc:	000003ff 	.word	0x000003ff
1006ccc0:	000003fe 	.word	0x000003fe
1006ccc4:	000003fd 	.word	0x000003fd

1006ccc8 <_fstat_r>:
1006ccc8:	2300      	movs	r3, #0
1006ccca:	b570      	push	{r4, r5, r6, lr}
1006cccc:	4d06      	ldr	r5, [pc, #24]	@ (1006cce8 <_fstat_r+0x20>)
1006ccce:	0004      	movs	r4, r0
1006ccd0:	0008      	movs	r0, r1
1006ccd2:	0011      	movs	r1, r2
1006ccd4:	602b      	str	r3, [r5, #0]
1006ccd6:	f7d5 fb80 	bl	100423da <_fstat>
1006ccda:	1c43      	adds	r3, r0, #1
1006ccdc:	d103      	bne.n	1006cce6 <_fstat_r+0x1e>
1006ccde:	682b      	ldr	r3, [r5, #0]
1006cce0:	2b00      	cmp	r3, #0
1006cce2:	d000      	beq.n	1006cce6 <_fstat_r+0x1e>
1006cce4:	6023      	str	r3, [r4, #0]
1006cce6:	bd70      	pop	{r4, r5, r6, pc}
1006cce8:	20000a30 	.word	0x20000a30

1006ccec <_isatty_r>:
1006ccec:	2300      	movs	r3, #0
1006ccee:	b570      	push	{r4, r5, r6, lr}
1006ccf0:	4d06      	ldr	r5, [pc, #24]	@ (1006cd0c <_isatty_r+0x20>)
1006ccf2:	0004      	movs	r4, r0
1006ccf4:	0008      	movs	r0, r1
1006ccf6:	602b      	str	r3, [r5, #0]
1006ccf8:	f7d5 fb7d 	bl	100423f6 <_isatty>
1006ccfc:	1c43      	adds	r3, r0, #1
1006ccfe:	d103      	bne.n	1006cd08 <_isatty_r+0x1c>
1006cd00:	682b      	ldr	r3, [r5, #0]
1006cd02:	2b00      	cmp	r3, #0
1006cd04:	d000      	beq.n	1006cd08 <_isatty_r+0x1c>
1006cd06:	6023      	str	r3, [r4, #0]
1006cd08:	bd70      	pop	{r4, r5, r6, pc}
1006cd0a:	46c0      	nop			@ (mov r8, r8)
1006cd0c:	20000a30 	.word	0x20000a30

1006cd10 <__aeabi_memset>:
1006cd10:	000b      	movs	r3, r1
1006cd12:	b510      	push	{r4, lr}
1006cd14:	0011      	movs	r1, r2
1006cd16:	001a      	movs	r2, r3
1006cd18:	f7fe ff3a 	bl	1006bb90 <memset>
1006cd1c:	bd10      	pop	{r4, pc}

1006cd1e <memchr>:
1006cd1e:	b2c9      	uxtb	r1, r1
1006cd20:	1882      	adds	r2, r0, r2
1006cd22:	4290      	cmp	r0, r2
1006cd24:	d101      	bne.n	1006cd2a <memchr+0xc>
1006cd26:	2000      	movs	r0, #0
1006cd28:	4770      	bx	lr
1006cd2a:	7803      	ldrb	r3, [r0, #0]
1006cd2c:	428b      	cmp	r3, r1
1006cd2e:	d0fb      	beq.n	1006cd28 <memchr+0xa>
1006cd30:	3001      	adds	r0, #1
1006cd32:	e7f6      	b.n	1006cd22 <memchr+0x4>

1006cd34 <_realloc_r>:
1006cd34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006cd36:	0006      	movs	r6, r0
1006cd38:	000c      	movs	r4, r1
1006cd3a:	0015      	movs	r5, r2
1006cd3c:	2900      	cmp	r1, #0
1006cd3e:	d105      	bne.n	1006cd4c <_realloc_r+0x18>
1006cd40:	0011      	movs	r1, r2
1006cd42:	f7fe fb7d 	bl	1006b440 <_malloc_r>
1006cd46:	0004      	movs	r4, r0
1006cd48:	0020      	movs	r0, r4
1006cd4a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
1006cd4c:	2a00      	cmp	r2, #0
1006cd4e:	d103      	bne.n	1006cd58 <_realloc_r+0x24>
1006cd50:	f7fe ffc6 	bl	1006bce0 <_free_r>
1006cd54:	2400      	movs	r4, #0
1006cd56:	e7f7      	b.n	1006cd48 <_realloc_r+0x14>
1006cd58:	f000 f930 	bl	1006cfbc <_malloc_usable_size_r>
1006cd5c:	0007      	movs	r7, r0
1006cd5e:	4285      	cmp	r5, r0
1006cd60:	d802      	bhi.n	1006cd68 <_realloc_r+0x34>
1006cd62:	0843      	lsrs	r3, r0, #1
1006cd64:	42ab      	cmp	r3, r5
1006cd66:	d3ef      	bcc.n	1006cd48 <_realloc_r+0x14>
1006cd68:	0029      	movs	r1, r5
1006cd6a:	0030      	movs	r0, r6
1006cd6c:	f7fe fb68 	bl	1006b440 <_malloc_r>
1006cd70:	9001      	str	r0, [sp, #4]
1006cd72:	2800      	cmp	r0, #0
1006cd74:	d0ee      	beq.n	1006cd54 <_realloc_r+0x20>
1006cd76:	002a      	movs	r2, r5
1006cd78:	42bd      	cmp	r5, r7
1006cd7a:	d900      	bls.n	1006cd7e <_realloc_r+0x4a>
1006cd7c:	003a      	movs	r2, r7
1006cd7e:	0021      	movs	r1, r4
1006cd80:	9801      	ldr	r0, [sp, #4]
1006cd82:	f7fe ffa3 	bl	1006bccc <memcpy>
1006cd86:	0021      	movs	r1, r4
1006cd88:	0030      	movs	r0, r6
1006cd8a:	f7fe ffa9 	bl	1006bce0 <_free_r>
1006cd8e:	9c01      	ldr	r4, [sp, #4]
1006cd90:	e7da      	b.n	1006cd48 <_realloc_r+0x14>
	...

1006cd94 <_strtol_l.constprop.0>:
1006cd94:	b5f0      	push	{r4, r5, r6, r7, lr}
1006cd96:	b085      	sub	sp, #20
1006cd98:	0017      	movs	r7, r2
1006cd9a:	001e      	movs	r6, r3
1006cd9c:	9003      	str	r0, [sp, #12]
1006cd9e:	9101      	str	r1, [sp, #4]
1006cda0:	2b24      	cmp	r3, #36	@ 0x24
1006cda2:	d844      	bhi.n	1006ce2e <_strtol_l.constprop.0+0x9a>
1006cda4:	000c      	movs	r4, r1
1006cda6:	2b01      	cmp	r3, #1
1006cda8:	d041      	beq.n	1006ce2e <_strtol_l.constprop.0+0x9a>
1006cdaa:	4b3d      	ldr	r3, [pc, #244]	@ (1006cea0 <_strtol_l.constprop.0+0x10c>)
1006cdac:	2208      	movs	r2, #8
1006cdae:	469c      	mov	ip, r3
1006cdb0:	0023      	movs	r3, r4
1006cdb2:	4661      	mov	r1, ip
1006cdb4:	781d      	ldrb	r5, [r3, #0]
1006cdb6:	3401      	adds	r4, #1
1006cdb8:	5d48      	ldrb	r0, [r1, r5]
1006cdba:	0001      	movs	r1, r0
1006cdbc:	4011      	ands	r1, r2
1006cdbe:	4210      	tst	r0, r2
1006cdc0:	d1f6      	bne.n	1006cdb0 <_strtol_l.constprop.0+0x1c>
1006cdc2:	2d2d      	cmp	r5, #45	@ 0x2d
1006cdc4:	d13a      	bne.n	1006ce3c <_strtol_l.constprop.0+0xa8>
1006cdc6:	7825      	ldrb	r5, [r4, #0]
1006cdc8:	1c9c      	adds	r4, r3, #2
1006cdca:	2301      	movs	r3, #1
1006cdcc:	9300      	str	r3, [sp, #0]
1006cdce:	2210      	movs	r2, #16
1006cdd0:	0033      	movs	r3, r6
1006cdd2:	4393      	bics	r3, r2
1006cdd4:	d109      	bne.n	1006cdea <_strtol_l.constprop.0+0x56>
1006cdd6:	2d30      	cmp	r5, #48	@ 0x30
1006cdd8:	d136      	bne.n	1006ce48 <_strtol_l.constprop.0+0xb4>
1006cdda:	2120      	movs	r1, #32
1006cddc:	7823      	ldrb	r3, [r4, #0]
1006cdde:	438b      	bics	r3, r1
1006cde0:	2b58      	cmp	r3, #88	@ 0x58
1006cde2:	d131      	bne.n	1006ce48 <_strtol_l.constprop.0+0xb4>
1006cde4:	0016      	movs	r6, r2
1006cde6:	7865      	ldrb	r5, [r4, #1]
1006cde8:	3402      	adds	r4, #2
1006cdea:	4a2e      	ldr	r2, [pc, #184]	@ (1006cea4 <_strtol_l.constprop.0+0x110>)
1006cdec:	9b00      	ldr	r3, [sp, #0]
1006cdee:	4694      	mov	ip, r2
1006cdf0:	4463      	add	r3, ip
1006cdf2:	0031      	movs	r1, r6
1006cdf4:	0018      	movs	r0, r3
1006cdf6:	9302      	str	r3, [sp, #8]
1006cdf8:	f7d3 faa8 	bl	1004034c <__aeabi_uidivmod>
1006cdfc:	2200      	movs	r2, #0
1006cdfe:	4684      	mov	ip, r0
1006ce00:	0010      	movs	r0, r2
1006ce02:	002b      	movs	r3, r5
1006ce04:	3b30      	subs	r3, #48	@ 0x30
1006ce06:	2b09      	cmp	r3, #9
1006ce08:	d825      	bhi.n	1006ce56 <_strtol_l.constprop.0+0xc2>
1006ce0a:	001d      	movs	r5, r3
1006ce0c:	42ae      	cmp	r6, r5
1006ce0e:	dd31      	ble.n	1006ce74 <_strtol_l.constprop.0+0xe0>
1006ce10:	1c53      	adds	r3, r2, #1
1006ce12:	d009      	beq.n	1006ce28 <_strtol_l.constprop.0+0x94>
1006ce14:	2201      	movs	r2, #1
1006ce16:	4252      	negs	r2, r2
1006ce18:	4584      	cmp	ip, r0
1006ce1a:	d305      	bcc.n	1006ce28 <_strtol_l.constprop.0+0x94>
1006ce1c:	d101      	bne.n	1006ce22 <_strtol_l.constprop.0+0x8e>
1006ce1e:	42a9      	cmp	r1, r5
1006ce20:	db25      	blt.n	1006ce6e <_strtol_l.constprop.0+0xda>
1006ce22:	2201      	movs	r2, #1
1006ce24:	4370      	muls	r0, r6
1006ce26:	1828      	adds	r0, r5, r0
1006ce28:	7825      	ldrb	r5, [r4, #0]
1006ce2a:	3401      	adds	r4, #1
1006ce2c:	e7e9      	b.n	1006ce02 <_strtol_l.constprop.0+0x6e>
1006ce2e:	f7fe ff3b 	bl	1006bca8 <__errno>
1006ce32:	2316      	movs	r3, #22
1006ce34:	6003      	str	r3, [r0, #0]
1006ce36:	2000      	movs	r0, #0
1006ce38:	b005      	add	sp, #20
1006ce3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006ce3c:	9100      	str	r1, [sp, #0]
1006ce3e:	2d2b      	cmp	r5, #43	@ 0x2b
1006ce40:	d1c5      	bne.n	1006cdce <_strtol_l.constprop.0+0x3a>
1006ce42:	7825      	ldrb	r5, [r4, #0]
1006ce44:	1c9c      	adds	r4, r3, #2
1006ce46:	e7c2      	b.n	1006cdce <_strtol_l.constprop.0+0x3a>
1006ce48:	2e00      	cmp	r6, #0
1006ce4a:	d1ce      	bne.n	1006cdea <_strtol_l.constprop.0+0x56>
1006ce4c:	3608      	adds	r6, #8
1006ce4e:	2d30      	cmp	r5, #48	@ 0x30
1006ce50:	d0cb      	beq.n	1006cdea <_strtol_l.constprop.0+0x56>
1006ce52:	3602      	adds	r6, #2
1006ce54:	e7c9      	b.n	1006cdea <_strtol_l.constprop.0+0x56>
1006ce56:	002b      	movs	r3, r5
1006ce58:	3b41      	subs	r3, #65	@ 0x41
1006ce5a:	2b19      	cmp	r3, #25
1006ce5c:	d801      	bhi.n	1006ce62 <_strtol_l.constprop.0+0xce>
1006ce5e:	3d37      	subs	r5, #55	@ 0x37
1006ce60:	e7d4      	b.n	1006ce0c <_strtol_l.constprop.0+0x78>
1006ce62:	002b      	movs	r3, r5
1006ce64:	3b61      	subs	r3, #97	@ 0x61
1006ce66:	2b19      	cmp	r3, #25
1006ce68:	d804      	bhi.n	1006ce74 <_strtol_l.constprop.0+0xe0>
1006ce6a:	3d57      	subs	r5, #87	@ 0x57
1006ce6c:	e7ce      	b.n	1006ce0c <_strtol_l.constprop.0+0x78>
1006ce6e:	2201      	movs	r2, #1
1006ce70:	4252      	negs	r2, r2
1006ce72:	e7d9      	b.n	1006ce28 <_strtol_l.constprop.0+0x94>
1006ce74:	1c53      	adds	r3, r2, #1
1006ce76:	d108      	bne.n	1006ce8a <_strtol_l.constprop.0+0xf6>
1006ce78:	2322      	movs	r3, #34	@ 0x22
1006ce7a:	9a03      	ldr	r2, [sp, #12]
1006ce7c:	9802      	ldr	r0, [sp, #8]
1006ce7e:	6013      	str	r3, [r2, #0]
1006ce80:	2f00      	cmp	r7, #0
1006ce82:	d0d9      	beq.n	1006ce38 <_strtol_l.constprop.0+0xa4>
1006ce84:	1e63      	subs	r3, r4, #1
1006ce86:	9301      	str	r3, [sp, #4]
1006ce88:	e007      	b.n	1006ce9a <_strtol_l.constprop.0+0x106>
1006ce8a:	9b00      	ldr	r3, [sp, #0]
1006ce8c:	2b00      	cmp	r3, #0
1006ce8e:	d000      	beq.n	1006ce92 <_strtol_l.constprop.0+0xfe>
1006ce90:	4240      	negs	r0, r0
1006ce92:	2f00      	cmp	r7, #0
1006ce94:	d0d0      	beq.n	1006ce38 <_strtol_l.constprop.0+0xa4>
1006ce96:	2a00      	cmp	r2, #0
1006ce98:	d1f4      	bne.n	1006ce84 <_strtol_l.constprop.0+0xf0>
1006ce9a:	9b01      	ldr	r3, [sp, #4]
1006ce9c:	603b      	str	r3, [r7, #0]
1006ce9e:	e7cb      	b.n	1006ce38 <_strtol_l.constprop.0+0xa4>
1006cea0:	1006eac5 	.word	0x1006eac5
1006cea4:	7fffffff 	.word	0x7fffffff

1006cea8 <_strtol_r>:
1006cea8:	b510      	push	{r4, lr}
1006ceaa:	f7ff ff73 	bl	1006cd94 <_strtol_l.constprop.0>
1006ceae:	bd10      	pop	{r4, pc}

1006ceb0 <_strtoul_l.constprop.0>:
1006ceb0:	b5f0      	push	{r4, r5, r6, r7, lr}
1006ceb2:	001e      	movs	r6, r3
1006ceb4:	4b3e      	ldr	r3, [pc, #248]	@ (1006cfb0 <_strtoul_l.constprop.0+0x100>)
1006ceb6:	0017      	movs	r7, r2
1006ceb8:	000c      	movs	r4, r1
1006ceba:	469c      	mov	ip, r3
1006cebc:	2208      	movs	r2, #8
1006cebe:	b085      	sub	sp, #20
1006cec0:	9003      	str	r0, [sp, #12]
1006cec2:	9100      	str	r1, [sp, #0]
1006cec4:	0023      	movs	r3, r4
1006cec6:	4661      	mov	r1, ip
1006cec8:	781d      	ldrb	r5, [r3, #0]
1006ceca:	3401      	adds	r4, #1
1006cecc:	5d48      	ldrb	r0, [r1, r5]
1006cece:	0001      	movs	r1, r0
1006ced0:	4011      	ands	r1, r2
1006ced2:	4210      	tst	r0, r2
1006ced4:	d1f6      	bne.n	1006cec4 <_strtoul_l.constprop.0+0x14>
1006ced6:	2d2d      	cmp	r5, #45	@ 0x2d
1006ced8:	d137      	bne.n	1006cf4a <_strtoul_l.constprop.0+0x9a>
1006ceda:	7825      	ldrb	r5, [r4, #0]
1006cedc:	1c9c      	adds	r4, r3, #2
1006cede:	2301      	movs	r3, #1
1006cee0:	9302      	str	r3, [sp, #8]
1006cee2:	2210      	movs	r2, #16
1006cee4:	0033      	movs	r3, r6
1006cee6:	4393      	bics	r3, r2
1006cee8:	d109      	bne.n	1006cefe <_strtoul_l.constprop.0+0x4e>
1006ceea:	2d30      	cmp	r5, #48	@ 0x30
1006ceec:	d133      	bne.n	1006cf56 <_strtoul_l.constprop.0+0xa6>
1006ceee:	2120      	movs	r1, #32
1006cef0:	7823      	ldrb	r3, [r4, #0]
1006cef2:	438b      	bics	r3, r1
1006cef4:	2b58      	cmp	r3, #88	@ 0x58
1006cef6:	d12e      	bne.n	1006cf56 <_strtoul_l.constprop.0+0xa6>
1006cef8:	0016      	movs	r6, r2
1006cefa:	7865      	ldrb	r5, [r4, #1]
1006cefc:	3402      	adds	r4, #2
1006cefe:	2001      	movs	r0, #1
1006cf00:	0031      	movs	r1, r6
1006cf02:	4240      	negs	r0, r0
1006cf04:	f7d3 f99c 	bl	10040240 <__udivsi3>
1006cf08:	9001      	str	r0, [sp, #4]
1006cf0a:	2001      	movs	r0, #1
1006cf0c:	0031      	movs	r1, r6
1006cf0e:	4240      	negs	r0, r0
1006cf10:	f7d3 fa1c 	bl	1004034c <__aeabi_uidivmod>
1006cf14:	2300      	movs	r3, #0
1006cf16:	2201      	movs	r2, #1
1006cf18:	0018      	movs	r0, r3
1006cf1a:	4694      	mov	ip, r2
1006cf1c:	002a      	movs	r2, r5
1006cf1e:	3a30      	subs	r2, #48	@ 0x30
1006cf20:	2a09      	cmp	r2, #9
1006cf22:	d81f      	bhi.n	1006cf64 <_strtoul_l.constprop.0+0xb4>
1006cf24:	0015      	movs	r5, r2
1006cf26:	42ae      	cmp	r6, r5
1006cf28:	dd2b      	ble.n	1006cf82 <_strtoul_l.constprop.0+0xd2>
1006cf2a:	1c5a      	adds	r2, r3, #1
1006cf2c:	d00a      	beq.n	1006cf44 <_strtoul_l.constprop.0+0x94>
1006cf2e:	2301      	movs	r3, #1
1006cf30:	9a01      	ldr	r2, [sp, #4]
1006cf32:	425b      	negs	r3, r3
1006cf34:	4282      	cmp	r2, r0
1006cf36:	d305      	bcc.n	1006cf44 <_strtoul_l.constprop.0+0x94>
1006cf38:	d101      	bne.n	1006cf3e <_strtoul_l.constprop.0+0x8e>
1006cf3a:	42a9      	cmp	r1, r5
1006cf3c:	db1e      	blt.n	1006cf7c <_strtoul_l.constprop.0+0xcc>
1006cf3e:	4663      	mov	r3, ip
1006cf40:	4370      	muls	r0, r6
1006cf42:	1828      	adds	r0, r5, r0
1006cf44:	7825      	ldrb	r5, [r4, #0]
1006cf46:	3401      	adds	r4, #1
1006cf48:	e7e8      	b.n	1006cf1c <_strtoul_l.constprop.0+0x6c>
1006cf4a:	9102      	str	r1, [sp, #8]
1006cf4c:	2d2b      	cmp	r5, #43	@ 0x2b
1006cf4e:	d1c8      	bne.n	1006cee2 <_strtoul_l.constprop.0+0x32>
1006cf50:	7825      	ldrb	r5, [r4, #0]
1006cf52:	1c9c      	adds	r4, r3, #2
1006cf54:	e7c5      	b.n	1006cee2 <_strtoul_l.constprop.0+0x32>
1006cf56:	2e00      	cmp	r6, #0
1006cf58:	d1d1      	bne.n	1006cefe <_strtoul_l.constprop.0+0x4e>
1006cf5a:	3608      	adds	r6, #8
1006cf5c:	2d30      	cmp	r5, #48	@ 0x30
1006cf5e:	d0ce      	beq.n	1006cefe <_strtoul_l.constprop.0+0x4e>
1006cf60:	3602      	adds	r6, #2
1006cf62:	e7cc      	b.n	1006cefe <_strtoul_l.constprop.0+0x4e>
1006cf64:	002a      	movs	r2, r5
1006cf66:	3a41      	subs	r2, #65	@ 0x41
1006cf68:	2a19      	cmp	r2, #25
1006cf6a:	d801      	bhi.n	1006cf70 <_strtoul_l.constprop.0+0xc0>
1006cf6c:	3d37      	subs	r5, #55	@ 0x37
1006cf6e:	e7da      	b.n	1006cf26 <_strtoul_l.constprop.0+0x76>
1006cf70:	002a      	movs	r2, r5
1006cf72:	3a61      	subs	r2, #97	@ 0x61
1006cf74:	2a19      	cmp	r2, #25
1006cf76:	d804      	bhi.n	1006cf82 <_strtoul_l.constprop.0+0xd2>
1006cf78:	3d57      	subs	r5, #87	@ 0x57
1006cf7a:	e7d4      	b.n	1006cf26 <_strtoul_l.constprop.0+0x76>
1006cf7c:	2301      	movs	r3, #1
1006cf7e:	425b      	negs	r3, r3
1006cf80:	e7e0      	b.n	1006cf44 <_strtoul_l.constprop.0+0x94>
1006cf82:	1c5a      	adds	r2, r3, #1
1006cf84:	d107      	bne.n	1006cf96 <_strtoul_l.constprop.0+0xe6>
1006cf86:	2222      	movs	r2, #34	@ 0x22
1006cf88:	9903      	ldr	r1, [sp, #12]
1006cf8a:	0018      	movs	r0, r3
1006cf8c:	600a      	str	r2, [r1, #0]
1006cf8e:	2f00      	cmp	r7, #0
1006cf90:	d109      	bne.n	1006cfa6 <_strtoul_l.constprop.0+0xf6>
1006cf92:	b005      	add	sp, #20
1006cf94:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006cf96:	9a02      	ldr	r2, [sp, #8]
1006cf98:	2a00      	cmp	r2, #0
1006cf9a:	d000      	beq.n	1006cf9e <_strtoul_l.constprop.0+0xee>
1006cf9c:	4240      	negs	r0, r0
1006cf9e:	2f00      	cmp	r7, #0
1006cfa0:	d0f7      	beq.n	1006cf92 <_strtoul_l.constprop.0+0xe2>
1006cfa2:	2b00      	cmp	r3, #0
1006cfa4:	d001      	beq.n	1006cfaa <_strtoul_l.constprop.0+0xfa>
1006cfa6:	1e63      	subs	r3, r4, #1
1006cfa8:	9300      	str	r3, [sp, #0]
1006cfaa:	9b00      	ldr	r3, [sp, #0]
1006cfac:	603b      	str	r3, [r7, #0]
1006cfae:	e7f0      	b.n	1006cf92 <_strtoul_l.constprop.0+0xe2>
1006cfb0:	1006eac5 	.word	0x1006eac5

1006cfb4 <_strtoul_r>:
1006cfb4:	b510      	push	{r4, lr}
1006cfb6:	f7ff ff7b 	bl	1006ceb0 <_strtoul_l.constprop.0>
1006cfba:	bd10      	pop	{r4, pc}

1006cfbc <_malloc_usable_size_r>:
1006cfbc:	1f0b      	subs	r3, r1, #4
1006cfbe:	681b      	ldr	r3, [r3, #0]
1006cfc0:	1f18      	subs	r0, r3, #4
1006cfc2:	2b00      	cmp	r3, #0
1006cfc4:	da01      	bge.n	1006cfca <_malloc_usable_size_r+0xe>
1006cfc6:	580b      	ldr	r3, [r1, r0]
1006cfc8:	18c0      	adds	r0, r0, r3
1006cfca:	4770      	bx	lr

1006cfcc <AES_CMAC_Encrypt_Append>:
1006cfcc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
1006cfce:	2500      	movs	r5, #0
1006cfd0:	b08a      	sub	sp, #40	@ 0x28
1006cfd2:	460e      	mov	r6, r1
1006cfd4:	4604      	mov	r4, r0
1006cfd6:	2800      	cmp	r0, #0
1006cfd8:	d004      	beq.n	1006cfe4 <AES_CMAC_Encrypt_Append+0x18>
1006cfda:	2e00      	cmp	r6, #0
1006cfdc:	d106      	bne.n	1006cfec <AES_CMAC_Encrypt_Append+0x20>
1006cfde:	980c      	ldr	r0, [sp, #48]	@ 0x30
1006cfe0:	2800      	cmp	r0, #0
1006cfe2:	dd03      	ble.n	1006cfec <AES_CMAC_Encrypt_Append+0x20>
1006cfe4:	2061      	movs	r0, #97	@ 0x61
1006cfe6:	0140      	lsls	r0, r0, #5
1006cfe8:	b00d      	add	sp, #52	@ 0x34
1006cfea:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006cfec:	980c      	ldr	r0, [sp, #48]	@ 0x30
1006cfee:	2800      	cmp	r0, #0
1006cff0:	db04      	blt.n	1006cffc <AES_CMAC_Encrypt_Append+0x30>
1006cff2:	2810      	cmp	r0, #16
1006cff4:	da04      	bge.n	1006d000 <AES_CMAC_Encrypt_Append+0x34>
1006cff6:	7920      	ldrb	r0, [r4, #4]
1006cff8:	0680      	lsls	r0, r0, #26
1006cffa:	d401      	bmi.n	1006d000 <AES_CMAC_Encrypt_Append+0x34>
1006cffc:	488c      	ldr	r0, [pc, #560]	@ (1006d230 <AES_CMAC_Encrypt_Append+0x264>)
1006cffe:	e7f3      	b.n	1006cfe8 <AES_CMAC_Encrypt_Append+0x1c>
1006d000:	7920      	ldrb	r0, [r4, #4]
1006d002:	0741      	lsls	r1, r0, #29
1006d004:	d401      	bmi.n	1006d00a <AES_CMAC_Encrypt_Append+0x3e>
1006d006:	0781      	lsls	r1, r0, #30
1006d008:	d502      	bpl.n	1006d010 <AES_CMAC_Encrypt_Append+0x44>
1006d00a:	4889      	ldr	r0, [pc, #548]	@ (1006d230 <AES_CMAC_Encrypt_Append+0x264>)
1006d00c:	1c40      	adds	r0, r0, #1
1006d00e:	e7eb      	b.n	1006cfe8 <AES_CMAC_Encrypt_Append+0x1c>
1006d010:	2140      	movs	r1, #64	@ 0x40
1006d012:	4308      	orrs	r0, r1
1006d014:	7120      	strb	r0, [r4, #4]
1006d016:	4620      	mov	r0, r4
1006d018:	3014      	adds	r0, #20
1006d01a:	9008      	str	r0, [sp, #32]
1006d01c:	e01c      	b.n	1006d058 <AES_CMAC_Encrypt_Append+0x8c>
1006d01e:	2000      	movs	r0, #0
1006d020:	0081      	lsls	r1, r0, #2
1006d022:	194a      	adds	r2, r1, r5
1006d024:	1992      	adds	r2, r2, r6
1006d026:	7853      	ldrb	r3, [r2, #1]
1006d028:	7817      	ldrb	r7, [r2, #0]
1006d02a:	021b      	lsls	r3, r3, #8
1006d02c:	433b      	orrs	r3, r7
1006d02e:	7897      	ldrb	r7, [r2, #2]
1006d030:	ba5b      	rev16	r3, r3
1006d032:	041b      	lsls	r3, r3, #16
1006d034:	023f      	lsls	r7, r7, #8
1006d036:	78d2      	ldrb	r2, [r2, #3]
1006d038:	433b      	orrs	r3, r7
1006d03a:	4313      	orrs	r3, r2
1006d03c:	190a      	adds	r2, r1, r4
1006d03e:	6952      	ldr	r2, [r2, #20]
1006d040:	1c40      	adds	r0, r0, #1
1006d042:	4053      	eors	r3, r2
1006d044:	aa04      	add	r2, sp, #16
1006d046:	5053      	str	r3, [r2, r1]
1006d048:	2804      	cmp	r0, #4
1006d04a:	dbe9      	blt.n	1006d020 <AES_CMAC_Encrypt_Append+0x54>
1006d04c:	68a2      	ldr	r2, [r4, #8]
1006d04e:	a804      	add	r0, sp, #16
1006d050:	9908      	ldr	r1, [sp, #32]
1006d052:	f7d9 fba5 	bl	100467a0 <AES_128_HW_enc>
1006d056:	9d00      	ldr	r5, [sp, #0]
1006d058:	990c      	ldr	r1, [sp, #48]	@ 0x30
1006d05a:	4628      	mov	r0, r5
1006d05c:	3010      	adds	r0, #16
1006d05e:	9000      	str	r0, [sp, #0]
1006d060:	4288      	cmp	r0, r1
1006d062:	dbdc      	blt.n	1006d01e <AES_CMAC_Encrypt_Append+0x52>
1006d064:	7920      	ldrb	r0, [r4, #4]
1006d066:	0680      	lsls	r0, r0, #26
1006d068:	d41e      	bmi.n	1006d0a8 <AES_CMAC_Encrypt_Append+0xdc>
1006d06a:	2900      	cmp	r1, #0
1006d06c:	dd1c      	ble.n	1006d0a8 <AES_CMAC_Encrypt_Append+0xdc>
1006d06e:	2000      	movs	r0, #0
1006d070:	0081      	lsls	r1, r0, #2
1006d072:	194a      	adds	r2, r1, r5
1006d074:	1992      	adds	r2, r2, r6
1006d076:	7853      	ldrb	r3, [r2, #1]
1006d078:	7817      	ldrb	r7, [r2, #0]
1006d07a:	021b      	lsls	r3, r3, #8
1006d07c:	433b      	orrs	r3, r7
1006d07e:	7897      	ldrb	r7, [r2, #2]
1006d080:	ba5b      	rev16	r3, r3
1006d082:	041b      	lsls	r3, r3, #16
1006d084:	023f      	lsls	r7, r7, #8
1006d086:	78d2      	ldrb	r2, [r2, #3]
1006d088:	433b      	orrs	r3, r7
1006d08a:	4313      	orrs	r3, r2
1006d08c:	190a      	adds	r2, r1, r4
1006d08e:	6952      	ldr	r2, [r2, #20]
1006d090:	1c40      	adds	r0, r0, #1
1006d092:	4053      	eors	r3, r2
1006d094:	aa04      	add	r2, sp, #16
1006d096:	5053      	str	r3, [r2, r1]
1006d098:	2804      	cmp	r0, #4
1006d09a:	dbe9      	blt.n	1006d070 <AES_CMAC_Encrypt_Append+0xa4>
1006d09c:	68a2      	ldr	r2, [r4, #8]
1006d09e:	a804      	add	r0, sp, #16
1006d0a0:	9908      	ldr	r1, [sp, #32]
1006d0a2:	f7d9 fb7d 	bl	100467a0 <AES_128_HW_enc>
1006d0a6:	e0c0      	b.n	1006d22a <AES_CMAC_Encrypt_Append+0x25e>
1006d0a8:	2000      	movs	r0, #0
1006d0aa:	9000      	str	r0, [sp, #0]
1006d0ac:	9001      	str	r0, [sp, #4]
1006d0ae:	9002      	str	r0, [sp, #8]
1006d0b0:	9003      	str	r0, [sp, #12]
1006d0b2:	4669      	mov	r1, sp
1006d0b4:	4608      	mov	r0, r1
1006d0b6:	68a2      	ldr	r2, [r4, #8]
1006d0b8:	f7d9 fb72 	bl	100467a0 <AES_128_HW_enc>
1006d0bc:	9900      	ldr	r1, [sp, #0]
1006d0be:	2287      	movs	r2, #135	@ 0x87
1006d0c0:	0fc8      	lsrs	r0, r1, #31
1006d0c2:	4350      	muls	r0, r2
1006d0c4:	9a01      	ldr	r2, [sp, #4]
1006d0c6:	0049      	lsls	r1, r1, #1
1006d0c8:	0fd2      	lsrs	r2, r2, #31
1006d0ca:	4311      	orrs	r1, r2
1006d0cc:	9100      	str	r1, [sp, #0]
1006d0ce:	9901      	ldr	r1, [sp, #4]
1006d0d0:	9a02      	ldr	r2, [sp, #8]
1006d0d2:	0049      	lsls	r1, r1, #1
1006d0d4:	0fd2      	lsrs	r2, r2, #31
1006d0d6:	4311      	orrs	r1, r2
1006d0d8:	9101      	str	r1, [sp, #4]
1006d0da:	9902      	ldr	r1, [sp, #8]
1006d0dc:	9a03      	ldr	r2, [sp, #12]
1006d0de:	0049      	lsls	r1, r1, #1
1006d0e0:	0fd2      	lsrs	r2, r2, #31
1006d0e2:	4311      	orrs	r1, r2
1006d0e4:	9102      	str	r1, [sp, #8]
1006d0e6:	9903      	ldr	r1, [sp, #12]
1006d0e8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1006d0ea:	0049      	lsls	r1, r1, #1
1006d0ec:	4041      	eors	r1, r0
1006d0ee:	4628      	mov	r0, r5
1006d0f0:	3010      	adds	r0, #16
1006d0f2:	9103      	str	r1, [sp, #12]
1006d0f4:	4290      	cmp	r0, r2
1006d0f6:	d11a      	bne.n	1006d12e <AES_CMAC_Encrypt_Append+0x162>
1006d0f8:	2000      	movs	r0, #0
1006d0fa:	0081      	lsls	r1, r0, #2
1006d0fc:	194a      	adds	r2, r1, r5
1006d0fe:	1993      	adds	r3, r2, r6
1006d100:	785a      	ldrb	r2, [r3, #1]
1006d102:	781f      	ldrb	r7, [r3, #0]
1006d104:	0212      	lsls	r2, r2, #8
1006d106:	433a      	orrs	r2, r7
1006d108:	789f      	ldrb	r7, [r3, #2]
1006d10a:	ba52      	rev16	r2, r2
1006d10c:	0412      	lsls	r2, r2, #16
1006d10e:	023f      	lsls	r7, r7, #8
1006d110:	433a      	orrs	r2, r7
1006d112:	78db      	ldrb	r3, [r3, #3]
1006d114:	466f      	mov	r7, sp
1006d116:	431a      	orrs	r2, r3
1006d118:	190b      	adds	r3, r1, r4
1006d11a:	695b      	ldr	r3, [r3, #20]
1006d11c:	587f      	ldr	r7, [r7, r1]
1006d11e:	1c40      	adds	r0, r0, #1
1006d120:	407b      	eors	r3, r7
1006d122:	405a      	eors	r2, r3
1006d124:	ab04      	add	r3, sp, #16
1006d126:	505a      	str	r2, [r3, r1]
1006d128:	2804      	cmp	r0, #4
1006d12a:	dbe6      	blt.n	1006d0fa <AES_CMAC_Encrypt_Append+0x12e>
1006d12c:	e074      	b.n	1006d218 <AES_CMAC_Encrypt_Append+0x24c>
1006d12e:	9a00      	ldr	r2, [sp, #0]
1006d130:	2387      	movs	r3, #135	@ 0x87
1006d132:	0fd0      	lsrs	r0, r2, #31
1006d134:	4358      	muls	r0, r3
1006d136:	9b01      	ldr	r3, [sp, #4]
1006d138:	0052      	lsls	r2, r2, #1
1006d13a:	0fdb      	lsrs	r3, r3, #31
1006d13c:	431a      	orrs	r2, r3
1006d13e:	9200      	str	r2, [sp, #0]
1006d140:	9a01      	ldr	r2, [sp, #4]
1006d142:	9b02      	ldr	r3, [sp, #8]
1006d144:	0052      	lsls	r2, r2, #1
1006d146:	0fdb      	lsrs	r3, r3, #31
1006d148:	431a      	orrs	r2, r3
1006d14a:	9201      	str	r2, [sp, #4]
1006d14c:	9a02      	ldr	r2, [sp, #8]
1006d14e:	0fcb      	lsrs	r3, r1, #31
1006d150:	0052      	lsls	r2, r2, #1
1006d152:	431a      	orrs	r2, r3
1006d154:	9202      	str	r2, [sp, #8]
1006d156:	004a      	lsls	r2, r1, #1
1006d158:	4042      	eors	r2, r0
1006d15a:	9203      	str	r2, [sp, #12]
1006d15c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
1006d15e:	2000      	movs	r0, #0
1006d160:	1b53      	subs	r3, r2, r5
1006d162:	17da      	asrs	r2, r3, #31
1006d164:	469c      	mov	ip, r3
1006d166:	0f92      	lsrs	r2, r2, #30
1006d168:	4462      	add	r2, ip
1006d16a:	1092      	asrs	r2, r2, #2
1006d16c:	4696      	mov	lr, r2
1006d16e:	e016      	b.n	1006d19e <AES_CMAC_Encrypt_Append+0x1d2>
1006d170:	0081      	lsls	r1, r0, #2
1006d172:	194a      	adds	r2, r1, r5
1006d174:	1993      	adds	r3, r2, r6
1006d176:	785a      	ldrb	r2, [r3, #1]
1006d178:	781f      	ldrb	r7, [r3, #0]
1006d17a:	0212      	lsls	r2, r2, #8
1006d17c:	433a      	orrs	r2, r7
1006d17e:	789f      	ldrb	r7, [r3, #2]
1006d180:	ba52      	rev16	r2, r2
1006d182:	0412      	lsls	r2, r2, #16
1006d184:	023f      	lsls	r7, r7, #8
1006d186:	433a      	orrs	r2, r7
1006d188:	78db      	ldrb	r3, [r3, #3]
1006d18a:	466f      	mov	r7, sp
1006d18c:	431a      	orrs	r2, r3
1006d18e:	190b      	adds	r3, r1, r4
1006d190:	695b      	ldr	r3, [r3, #20]
1006d192:	587f      	ldr	r7, [r7, r1]
1006d194:	407b      	eors	r3, r7
1006d196:	405a      	eors	r2, r3
1006d198:	ab04      	add	r3, sp, #16
1006d19a:	505a      	str	r2, [r3, r1]
1006d19c:	1c40      	adds	r0, r0, #1
1006d19e:	4586      	cmp	lr, r0
1006d1a0:	dce6      	bgt.n	1006d170 <AES_CMAC_Encrypt_Append+0x1a4>
1006d1a2:	0081      	lsls	r1, r0, #2
1006d1a4:	190a      	adds	r2, r1, r4
1006d1a6:	466b      	mov	r3, sp
1006d1a8:	6952      	ldr	r2, [r2, #20]
1006d1aa:	585b      	ldr	r3, [r3, r1]
1006d1ac:	4667      	mov	r7, ip
1006d1ae:	405a      	eors	r2, r3
1006d1b0:	ab04      	add	r3, sp, #16
1006d1b2:	505a      	str	r2, [r3, r1]
1006d1b4:	1a7f      	subs	r7, r7, r1
1006d1b6:	2200      	movs	r2, #0
1006d1b8:	194b      	adds	r3, r1, r5
1006d1ba:	46bc      	mov	ip, r7
1006d1bc:	469e      	mov	lr, r3
1006d1be:	e00b      	b.n	1006d1d8 <AES_CMAC_Encrypt_Append+0x20c>
1006d1c0:	4673      	mov	r3, lr
1006d1c2:	189b      	adds	r3, r3, r2
1006d1c4:	5cf3      	ldrb	r3, [r6, r3]
1006d1c6:	00d7      	lsls	r7, r2, #3
1006d1c8:	2518      	movs	r5, #24
1006d1ca:	1bed      	subs	r5, r5, r7
1006d1cc:	40ab      	lsls	r3, r5
1006d1ce:	ad04      	add	r5, sp, #16
1006d1d0:	586f      	ldr	r7, [r5, r1]
1006d1d2:	407b      	eors	r3, r7
1006d1d4:	506b      	str	r3, [r5, r1]
1006d1d6:	1c52      	adds	r2, r2, #1
1006d1d8:	4594      	cmp	ip, r2
1006d1da:	dcf1      	bgt.n	1006d1c0 <AES_CMAC_Encrypt_Append+0x1f4>
1006d1dc:	2a00      	cmp	r2, #0
1006d1de:	d009      	beq.n	1006d1f4 <AES_CMAC_Encrypt_Append+0x228>
1006d1e0:	00d6      	lsls	r6, r2, #3
1006d1e2:	2218      	movs	r2, #24
1006d1e4:	ab04      	add	r3, sp, #16
1006d1e6:	1b96      	subs	r6, r2, r6
1006d1e8:	585d      	ldr	r5, [r3, r1]
1006d1ea:	2280      	movs	r2, #128	@ 0x80
1006d1ec:	40b2      	lsls	r2, r6
1006d1ee:	4055      	eors	r5, r2
1006d1f0:	505d      	str	r5, [r3, r1]
1006d1f2:	e005      	b.n	1006d200 <AES_CMAC_Encrypt_Append+0x234>
1006d1f4:	aa04      	add	r2, sp, #16
1006d1f6:	5853      	ldr	r3, [r2, r1]
1006d1f8:	2501      	movs	r5, #1
1006d1fa:	07ed      	lsls	r5, r5, #31
1006d1fc:	406b      	eors	r3, r5
1006d1fe:	5053      	str	r3, [r2, r1]
1006d200:	ab04      	add	r3, sp, #16
1006d202:	466a      	mov	r2, sp
1006d204:	e005      	b.n	1006d212 <AES_CMAC_Encrypt_Append+0x246>
1006d206:	0081      	lsls	r1, r0, #2
1006d208:	190d      	adds	r5, r1, r4
1006d20a:	696d      	ldr	r5, [r5, #20]
1006d20c:	5856      	ldr	r6, [r2, r1]
1006d20e:	4075      	eors	r5, r6
1006d210:	505d      	str	r5, [r3, r1]
1006d212:	1c40      	adds	r0, r0, #1
1006d214:	2804      	cmp	r0, #4
1006d216:	dbf6      	blt.n	1006d206 <AES_CMAC_Encrypt_Append+0x23a>
1006d218:	68a2      	ldr	r2, [r4, #8]
1006d21a:	4618      	mov	r0, r3
1006d21c:	9908      	ldr	r1, [sp, #32]
1006d21e:	f7d9 fabf 	bl	100467a0 <AES_128_HW_enc>
1006d222:	7920      	ldrb	r0, [r4, #4]
1006d224:	2104      	movs	r1, #4
1006d226:	4308      	orrs	r0, r1
1006d228:	7120      	strb	r0, [r4, #4]
1006d22a:	2000      	movs	r0, #0
1006d22c:	e6dc      	b.n	1006cfe8 <AES_CMAC_Encrypt_Append+0x1c>
1006d22e:	0000      	.short	0x0000
1006d230:	00000c1d 	.word	0x00000c1d

1006d234 <AES_CMAC_Encrypt_Finish>:
1006d234:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006d236:	4616      	mov	r6, r2
1006d238:	460f      	mov	r7, r1
1006d23a:	0004      	movs	r4, r0
1006d23c:	d009      	beq.n	1006d252 <AES_CMAC_Encrypt_Finish+0x1e>
1006d23e:	2e00      	cmp	r6, #0
1006d240:	d007      	beq.n	1006d252 <AES_CMAC_Encrypt_Finish+0x1e>
1006d242:	4625      	mov	r5, r4
1006d244:	3580      	adds	r5, #128	@ 0x80
1006d246:	6de8      	ldr	r0, [r5, #92]	@ 0x5c
1006d248:	1e40      	subs	r0, r0, #1
1006d24a:	2810      	cmp	r0, #16
1006d24c:	d304      	bcc.n	1006d258 <AES_CMAC_Encrypt_Finish+0x24>
1006d24e:	4813      	ldr	r0, [pc, #76]	@ (1006d29c <AES_CMAC_Encrypt_Finish+0x68>)
1006d250:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006d252:	2061      	movs	r0, #97	@ 0x61
1006d254:	0140      	lsls	r0, r0, #5
1006d256:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006d258:	7920      	ldrb	r0, [r4, #4]
1006d25a:	0640      	lsls	r0, r0, #25
1006d25c:	d404      	bmi.n	1006d268 <AES_CMAC_Encrypt_Finish+0x34>
1006d25e:	2200      	movs	r2, #0
1006d260:	4611      	mov	r1, r2
1006d262:	4620      	mov	r0, r4
1006d264:	f7ff feb2 	bl	1006cfcc <AES_CMAC_Encrypt_Append>
1006d268:	7920      	ldrb	r0, [r4, #4]
1006d26a:	2102      	movs	r1, #2
1006d26c:	4308      	orrs	r0, r1
1006d26e:	7120      	strb	r0, [r4, #4]
1006d270:	2000      	movs	r0, #0
1006d272:	2118      	movs	r1, #24
1006d274:	e00c      	b.n	1006d290 <AES_CMAC_Encrypt_Finish+0x5c>
1006d276:	17c2      	asrs	r2, r0, #31
1006d278:	0f92      	lsrs	r2, r2, #30
1006d27a:	1812      	adds	r2, r2, r0
1006d27c:	0892      	lsrs	r2, r2, #2
1006d27e:	0092      	lsls	r2, r2, #2
1006d280:	1912      	adds	r2, r2, r4
1006d282:	0783      	lsls	r3, r0, #30
1006d284:	6952      	ldr	r2, [r2, #20]
1006d286:	0edb      	lsrs	r3, r3, #27
1006d288:	1acb      	subs	r3, r1, r3
1006d28a:	40da      	lsrs	r2, r3
1006d28c:	543a      	strb	r2, [r7, r0]
1006d28e:	1c40      	adds	r0, r0, #1
1006d290:	6dea      	ldr	r2, [r5, #92]	@ 0x5c
1006d292:	4282      	cmp	r2, r0
1006d294:	dcef      	bgt.n	1006d276 <AES_CMAC_Encrypt_Finish+0x42>
1006d296:	2000      	movs	r0, #0
1006d298:	6032      	str	r2, [r6, #0]
1006d29a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1006d29c:	00000c1f 	.word	0x00000c1f

1006d2a0 <AES_CMAC_Encrypt_Init>:
1006d2a0:	b510      	push	{r4, lr}
1006d2a2:	0004      	movs	r4, r0
1006d2a4:	d007      	beq.n	1006d2b6 <AES_CMAC_Encrypt_Init+0x16>
1006d2a6:	2302      	movs	r3, #2
1006d2a8:	2200      	movs	r2, #0
1006d2aa:	68a1      	ldr	r1, [r4, #8]
1006d2ac:	f000 f81a 	bl	1006d2e4 <AESstdInitEnc>
1006d2b0:	0001      	movs	r1, r0
1006d2b2:	d003      	beq.n	1006d2bc <AES_CMAC_Encrypt_Init+0x1c>
1006d2b4:	e00c      	b.n	1006d2d0 <AES_CMAC_Encrypt_Init+0x30>
1006d2b6:	2061      	movs	r0, #97	@ 0x61
1006d2b8:	0140      	lsls	r0, r0, #5
1006d2ba:	bd10      	pop	{r4, pc}
1006d2bc:	2000      	movs	r0, #0
1006d2be:	2210      	movs	r2, #16
1006d2c0:	6122      	str	r2, [r4, #16]
1006d2c2:	4602      	mov	r2, r0
1006d2c4:	0083      	lsls	r3, r0, #2
1006d2c6:	191b      	adds	r3, r3, r4
1006d2c8:	1c40      	adds	r0, r0, #1
1006d2ca:	615a      	str	r2, [r3, #20]
1006d2cc:	2804      	cmp	r0, #4
1006d2ce:	dbf9      	blt.n	1006d2c4 <AES_CMAC_Encrypt_Init+0x24>
1006d2d0:	6a60      	ldr	r0, [r4, #36]	@ 0x24
1006d2d2:	2810      	cmp	r0, #16
1006d2d4:	d001      	beq.n	1006d2da <AES_CMAC_Encrypt_Init+0x3a>
1006d2d6:	4802      	ldr	r0, [pc, #8]	@ (1006d2e0 <AES_CMAC_Encrypt_Init+0x40>)
1006d2d8:	bd10      	pop	{r4, pc}
1006d2da:	4608      	mov	r0, r1
1006d2dc:	bd10      	pop	{r4, pc}
1006d2de:	0000      	.short	0x0000
1006d2e0:	00000c1d 	.word	0x00000c1d

1006d2e4 <AESstdInitEnc>:
1006d2e4:	b5f0      	push	{r4, r5, r6, r7, lr}
1006d2e6:	2800      	cmp	r0, #0
1006d2e8:	d007      	beq.n	1006d2fa <AESstdInitEnc+0x16>
1006d2ea:	2900      	cmp	r1, #0
1006d2ec:	d005      	beq.n	1006d2fa <AESstdInitEnc+0x16>
1006d2ee:	075b      	lsls	r3, r3, #29
1006d2f0:	0f9c      	lsrs	r4, r3, #30
1006d2f2:	2a00      	cmp	r2, #0
1006d2f4:	d104      	bne.n	1006d300 <AESstdInitEnc+0x1c>
1006d2f6:	2c01      	cmp	r4, #1
1006d2f8:	d002      	beq.n	1006d300 <AESstdInitEnc+0x1c>
1006d2fa:	2061      	movs	r0, #97	@ 0x61
1006d2fc:	0140      	lsls	r0, r0, #5
1006d2fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006d300:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1006d302:	2b10      	cmp	r3, #16
1006d304:	d003      	beq.n	1006d30e <AESstdInitEnc+0x2a>
1006d306:	2b18      	cmp	r3, #24
1006d308:	d001      	beq.n	1006d30e <AESstdInitEnc+0x2a>
1006d30a:	2b20      	cmp	r3, #32
1006d30c:	d105      	bne.n	1006d31a <AESstdInitEnc+0x36>
1006d30e:	2c01      	cmp	r4, #1
1006d310:	d005      	beq.n	1006d31e <AESstdInitEnc+0x3a>
1006d312:	6905      	ldr	r5, [r0, #16]
1006d314:	1e6d      	subs	r5, r5, #1
1006d316:	2d10      	cmp	r5, #16
1006d318:	d301      	bcc.n	1006d31e <AESstdInitEnc+0x3a>
1006d31a:	481a      	ldr	r0, [pc, #104]	@ (1006d384 <AESstdInitEnc+0xa0>)
1006d31c:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006d31e:	2b10      	cmp	r3, #16
1006d320:	d002      	beq.n	1006d328 <AESstdInitEnc+0x44>
1006d322:	4818      	ldr	r0, [pc, #96]	@ (1006d384 <AESstdInitEnc+0xa0>)
1006d324:	1e80      	subs	r0, r0, #2
1006d326:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006d328:	60c2      	str	r2, [r0, #12]
1006d32a:	7903      	ldrb	r3, [r0, #4]
1006d32c:	25f9      	movs	r5, #249	@ 0xf9
1006d32e:	402b      	ands	r3, r5
1006d330:	7103      	strb	r3, [r0, #4]
1006d332:	2c01      	cmp	r4, #1
1006d334:	d020      	beq.n	1006d378 <AESstdInitEnc+0x94>
1006d336:	2300      	movs	r3, #0
1006d338:	461c      	mov	r4, r3
1006d33a:	009d      	lsls	r5, r3, #2
1006d33c:	182d      	adds	r5, r5, r0
1006d33e:	1c5b      	adds	r3, r3, #1
1006d340:	616c      	str	r4, [r5, #20]
1006d342:	2b04      	cmp	r3, #4
1006d344:	dbf9      	blt.n	1006d33a <AESstdInitEnc+0x56>
1006d346:	2300      	movs	r3, #0
1006d348:	e013      	b.n	1006d372 <AESstdInitEnc+0x8e>
1006d34a:	17dc      	asrs	r4, r3, #31
1006d34c:	0fa4      	lsrs	r4, r4, #30
1006d34e:	18e4      	adds	r4, r4, r3
1006d350:	08a4      	lsrs	r4, r4, #2
1006d352:	00a4      	lsls	r4, r4, #2
1006d354:	1825      	adds	r5, r4, r0
1006d356:	462e      	mov	r6, r5
1006d358:	3614      	adds	r6, #20
1006d35a:	46b4      	mov	ip, r6
1006d35c:	1b1c      	subs	r4, r3, r4
1006d35e:	5cd6      	ldrb	r6, [r2, r3]
1006d360:	00e4      	lsls	r4, r4, #3
1006d362:	2718      	movs	r7, #24
1006d364:	696d      	ldr	r5, [r5, #20]
1006d366:	1b3c      	subs	r4, r7, r4
1006d368:	40a6      	lsls	r6, r4
1006d36a:	4335      	orrs	r5, r6
1006d36c:	4666      	mov	r6, ip
1006d36e:	1c5b      	adds	r3, r3, #1
1006d370:	6035      	str	r5, [r6, #0]
1006d372:	6904      	ldr	r4, [r0, #16]
1006d374:	429c      	cmp	r4, r3
1006d376:	dce8      	bgt.n	1006d34a <AESstdInitEnc+0x66>
1006d378:	7902      	ldrb	r2, [r0, #4]
1006d37a:	07d2      	lsls	r2, r2, #31
1006d37c:	d100      	bne.n	1006d380 <AESstdInitEnc+0x9c>
1006d37e:	6081      	str	r1, [r0, #8]
1006d380:	2000      	movs	r0, #0
1006d382:	bdf0      	pop	{r4, r5, r6, r7, pc}
1006d384:	00000c1f 	.word	0x00000c1f

Disassembly of section .init:

1006d388 <_init>:
1006d388:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006d38a:	46c0      	nop			@ (mov r8, r8)

Disassembly of section .fini:

1006d38c <_fini>:
1006d38c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1006d38e:	46c0      	nop			@ (mov r8, r8)
